uint64_t sub_100356038()
{
  return sub_100358EC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1008FFFE0);
}

uint64_t sub_100356050()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

uint64_t sub_100356068(uint64_t a1)
{
  return sub_1002B5460(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100356070@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_10090D9E4(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_100356090()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003560B8()
{
  uint64_t v1 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_1003561B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1002B555C(v2, v3, v4);
}

uint64_t sub_10035621C()
{
  return sub_100356224();
}

uint64_t sub_100356224()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100356278(uint64_t a1)
{
  return sub_100358124(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1002B56C4);
}

uint64_t sub_100356294()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v19 = (v20 + 24) & ~v20;
  uint64_t v2 = v0 + v19;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v19 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  sub_10021E0B4(*(void *)(v0 + ((v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

void sub_100356610()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1002C90A0(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003566A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100929F24(a1, *(void **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, unsigned char *, char *))(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1003566C4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1002B533C(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

void sub_1003566E0(void *a1@<X8>)
{
  sub_10031B198(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(uint64_t *__return_ptr))(v1 + 64));
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
}

uint64_t sub_100356720()
{
  return swift_deallocObject();
}

uint64_t sub_100356730()
{
  return sub_10031AD2C(*(uint64_t **)(v0 + 16), *(void (**)(long long *__return_ptr))(v0 + 24));
}

uint64_t sub_10035673C()
{
  return swift_deallocObject();
}

uint64_t sub_10035674C()
{
  sub_10021FB74(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));

  return swift_deallocObject();
}

id sub_1003567D0(id result, unint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  switch(a11)
  {
    case 0:
      id v14 = result;
      sub_10009C66C(a2, a3, (uint64_t)a4, a5, a6);
      goto LABEL_6;
    case 1:
      id v15 = result;
      swift_bridgeObjectRetain();
      id v16 = a4;
      sub_100356990(a5, a6);
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRetain();
      result = (id)a3;
      goto LABEL_10;
    case 3:
      id v17 = result;
      goto LABEL_6;
    case 4:
      id v18 = result;
      result = (id)a2;
      goto LABEL_10;
    case 6:
    case 9:
LABEL_10:
      result = result;
      break;
    case 7:
      sub_10001EBB0((uint64_t)result, a2);
      result = (id)sub_10001EBB0(a3, (unint64_t)a4);
      break;
    case 8:
LABEL_6:
      result = (id)swift_errorRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100356990(uint64_t a1, unint64_t a2)
{
  if ((unint64_t)a1 < 0xFFFFFFFF00000000 || (a2 & 0xF000000000000007) != 0) {
    return sub_10018B584(a1, a2);
  }
  return a1;
}

uint64_t sub_1003569D0()
{
  return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10025BCC8);
}

uint64_t sub_100356A3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_1002AF550(a1, v5, v7, v8);
}

uint64_t sub_100356ADC()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_10021E0B4(*(void *)(v0 + v4));

  return swift_deallocObject();
}

void sub_100356BD4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void (**)(void, void))(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v4;
  unint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *(void **)v10;
  int v12 = *(unsigned __int8 *)(v10 + 8);

  sub_1002AD578(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100356C88()
{
  return sub_10096BBE0() & 1;
}

void sub_100356D18(int a1)
{
  sub_1002ACC30(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100356D34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_100356D6C(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  __int16 v5 = 256;
  swift_errorRetain();
  v2(&v4);

  return swift_errorRelease();
}

uint64_t sub_100356DD4()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

void sub_100356DEC(uint64_t a1)
{
  sub_10021C62C(*(void **)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8), *(void (**)(id *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100356E14(uint64_t a1, __int16 a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  __int16 v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_100356E58(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8));
}

uint64_t sub_100356E9C()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v22 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v21 = (v22 + 24) & ~v22;
  uint64_t v2 = v0 + v21;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v21 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  unint64_t v17 = (v20 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;

  sub_10021E0B4(*(void *)(v0 + v18));
  swift_release();

  return swift_deallocObject();
}

void sub_10035723C()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1002AE27C(*(void *)(v0 + 16), v0 + v2, *(uint8_t **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(int *, uint64_t))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_1003572F0(uint64_t a1)
{
  return sub_1000CE558(a1, *(void (**)(uint64_t *))(v1 + 16));
}

double sub_1003572F8(_OWORD *a1)
{
  double result = 0.0;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100357340()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

void sub_100357358(void *a1, char a2)
{
  sub_1002AED48(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100357368(uint64_t a1)
{
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v16 = *(_OWORD *)(a1 + 432);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_10012EFE8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    (void *)v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((unint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((void **)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(void *)(a1 + 448));
  return a1;
}

uint64_t sub_100357428(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = v1 + 5;
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *long long v11 = v2;
  v11[1] = sub_1003103E8;
  long long v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_100AD0E40 + dword_100AD0E40);
  return v12(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10035751C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v2 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 176);
  uint64_t v11 = *(void *)(a1 + 168);
  unint64_t v5 = *(void *)(a1 + 184);
  long long v13 = *(void **)(a1 + 240);
  uint64_t v14 = *(void **)(a1 + 224);
  unint64_t v18 = *(void *)(a1 + 280);
  uint64_t v19 = *(void *)(a1 + 272);
  uint64_t v16 = *(void *)(a1 + 296);
  uint64_t v17 = *(void *)(a1 + 288);
  unint64_t v15 = *(void *)(a1 + 304);
  uint64_t v20 = *(void *)(a1 + 352);
  uint64_t v21 = *(void *)(a1 + 344);
  uint64_t v23 = *(void *)(a1 + 376);
  uint64_t v24 = *(void *)(a1 + 368);
  unint64_t v22 = *(void *)(a1 + 384);
  v25 = *(void **)(a1 + 424);
  char v6 = *(unsigned char *)(a1 + 160);
  char v12 = *(unsigned char *)(a1 + 360);
  sub_10009C58C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_10009C5FC(v3, v2, v6);
  sub_10009C650(v11, v4, v5);
  id v7 = v13;
  id v8 = v14;
  sub_10009C66C(v19, v18, v17, v16, v15);
  sub_10009C5FC(v21, v20, v12);
  sub_10009C650(v24, v23, v22);
  id v9 = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003576B4()
{
  swift_release();
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_100357704(uint64_t a1)
{
  return sub_1002A9A84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(unsigned char *)(v1 + 56), *(unsigned char *)(v1 + 57));
}

uint64_t sub_100357720()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

void sub_100357738(uint64_t a1)
{
  sub_10021C4EC(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100357750(uint64_t a1, char a2)
{
  return sub_10023DF78(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_10035775C()
{
  swift_release();
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

void sub_1003577B4()
{
  sub_1002A9CBC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_1003577E0()
{
  sub_10021E0B4(*(void *)(v0 + 16));

  swift_release();

  return swift_deallocObject();
}

void sub_100357828(uint64_t a1)
{
  sub_1002AB594(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100357838(uint64_t a1)
{
  return sub_1003578BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1002AAD44);
}

uint64_t sub_100357854()
{
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003578A4(uint64_t a1)
{
  return sub_1003578BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1002AA6D4);
}

uint64_t sub_1003578BC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 56));
}

void sub_1003578DC()
{
}

uint64_t sub_100357918()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);

  swift_release();
  uint64_t v19 = (v20 + 40) & ~v20;
  uint64_t v2 = v0 + v19;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v19 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  id v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  sub_10021E0B4(*(void *)(v0 + ((v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

void sub_100357CB0()
{
}

void sub_100357CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1002AB35C(*(void **)(v2 + 16), *(unsigned char *)(v2 + 24), *(void *)(v2 + 32), v2 + v6, *(void *)(v2 + v7), *(void (**)(void, void))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a1, a2);
}

uint64_t sub_100357DB8()
{
  swift_unknownObjectRelease();

  sub_10021E0B4(*(void *)(v0 + 48));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100357E10()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

uint64_t sub_100357E2C()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

uint64_t sub_100357E44()
{
  sub_10021E0B4(*(void *)(v0 + 16));
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_100357E94()
{
  sub_100312BEC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100357EB8()
{
  sub_10021E0B4(*(void *)(v0 + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100357F08()
{
  return sub_1003131E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_100357F20()
{
  return sub_1003583B4((void (*)(void))&_swift_release);
}

uint64_t sub_100357F3C()
{
  return sub_100357F54((void (*)(void))&_swift_release);
}

uint64_t sub_100357F54(void (*a1)(void))
{
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 40));

  return swift_deallocObject();
}

uint64_t sub_100357FAC(uint64_t a1)
{
  return sub_10043787C(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100357FB8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 56));

  return swift_deallocObject();
}

uint64_t sub_100358018(uint64_t a1)
{
  return sub_100313648(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_10035805C()
{
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003580A4()
{
  return sub_10031D344(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003580C4()
{
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035810C(uint64_t a1)
{
  return sub_100358124(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10031D964);
}

uint64_t sub_100358124(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100358140(uint64_t a1)
{
  return sub_1003581F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_100313990);
}

uint64_t sub_10035815C()
{
  return sub_10032931C(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), (void **)(v0 + 72));
}

uint64_t sub_10035818C()
{
  swift_release();
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 56));

  return swift_deallocObject();
}

uint64_t sub_1003581DC(uint64_t a1)
{
  return sub_1003581F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_100313B14);
}

uint64_t sub_1003581F4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_100358234()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035826C()
{
  return sub_100329420(v0[2], v0 + 3, v0[5]);
}

uint64_t sub_100358294()
{
  swift_release();
  sub_10021E0B4(*(void *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003582E4()
{
  return sub_100313CB0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_100358310()
{
  swift_release();
  swift_release();

  sub_10021E0B4(*(void *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_100358360(uint64_t a1)
{
  return sub_100313E10(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

_UNKNOWN **sub_100358370()
{
  return sub_1003294B0(v0[2], v0 + 3, v0[5]);
}

uint64_t sub_100358398()
{
  return sub_1003583B4((void (*)(void))&_swift_release);
}

uint64_t sub_1003583B4(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358408(uint64_t a1)
{
  return sub_1006EA1E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100358414()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10021E0B4(*(void *)(v0 + 64));
  swift_release();

  return swift_deallocObject();
}

void sub_10035846C(uint64_t a1)
{
  sub_10031BE8C(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(void (**)(void *))(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1003584A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10021E0B4(*(void *)(v0 + 72));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358510()
{
  return sub_10031C5A0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(uint64_t (**)(void))(v0 + 104), *(void *)(v0 + 112));
}

unint64_t sub_100358554(void *a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  return sub_100270274(a1, a2, *(void *)(v5 + 16), *(void *)(v5 + 24), *(char **)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), a3, a4, a5);
}

uint64_t sub_100358590()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10021E0B4(*(void *)(v0 + 40));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003585E8()
{
  return sub_10031B4E8(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_100358620()
{
  swift_release();

  sub_10021E0B4(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358670()
{
  return sub_100329538(*(void *)(v0 + 16), (void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100358698()
{
  return sub_100358BEC((void (*)(void))&_swift_release);
}

_UNKNOWN **sub_1003586B4()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v5 = v0[3];
  double result = (_UNKNOWN **)(*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(v3 + 40) + 568))(&v5, v2);
  if (v1) {
    return &off_100A6CD78;
  }
  return result;
}

uint64_t sub_10035872C()
{
  return sub_1002A5280(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100358748(uint64_t a1, void *a2)
{
  return sub_10027B22C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100358764@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1003587BC);
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void *sub_1003587BC@<X0>(_DWORD *a1@<X8>)
{
  return sub_10027C064(*(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_1003587DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10035881C(uint64_t a1)
{
  return sub_10029EFF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10035882C()
{
  return swift_deallocObject();
}

uint64_t sub_10035883C@<X0>(int *a1@<X8>)
{
  return sub_1002A0E64(a1);
}

unint64_t sub_100358858()
{
  unint64_t result = qword_100AD5630;
  if (!qword_100AD5630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD5630);
  }
  return result;
}

uint64_t sub_1003588AC()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100358968(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + v5);
  unint64_t v7 = *(NSObject **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1002A21D0(a1, v1 + v4, v6, v7);
}

uint64_t sub_100358A10()
{
  return swift_deallocObject();
}

void *sub_100358A20()
{
  return sub_10031AB28(*(unsigned char **)(v0 + 16), *(void *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_100358A2C()
{
  return swift_deallocObject();
}

uint64_t sub_100358A3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10031AFEC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(uint64_t *__return_ptr))(v1 + 64));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_100358A80()
{
  return swift_deallocObject();
}

void *sub_100358A90()
{
  return sub_10031ABA4(*(unsigned char **)(v0 + 16), *(void *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_100358A9C()
{
  return swift_deallocObject();
}

uint64_t sub_100358AAC@<X0>(uint64_t a1@<X8>)
{
  return sub_10015D980(*(void **)(v1 + 24), a1);
}

uint64_t sub_100358AC8()
{
  return swift_deallocObject();
}

uint64_t sub_100358ADC(uint64_t a1)
{
  return sub_10026DD40(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

const char *sub_100358AE8()
{
  return "iCDPackageExtensions";
}

uint64_t sub_100358AF8()
{
  return sub_100358B14((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100358B14(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358B78()
{
  return sub_100358BA4((uint64_t (*)(void, void, void, void, void))sub_10029A594);
}

uint64_t sub_100358BA4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100358BD0()
{
  return sub_100358BEC((void (*)(void))&_swift_release);
}

uint64_t sub_100358BEC(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocObject();
}

uint64_t sub_100358C40(void *a1)
{
  return sub_1004C9D10(a1, *(void *)(v1 + 16));
}

uint64_t sub_100358C48()
{
  return swift_deallocObject();
}

uint64_t sub_100358C58()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

id sub_100358C84()
{
  return sub_1002992C0(*(void *)(v0 + 16));
}

void sub_100358C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100299334(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_100358C94(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void *, uint64_t))(v1 + 16);
  v4[0] = 0;
  v4[1] = 0;
  return v2(v4, a1);
}

uint64_t sub_100358CD4()
{
  return sub_100358CEC((void (*)(void))&_swift_release);
}

uint64_t sub_100358CEC(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_100358D3C()
{
  return sub_100298314(*(void (**)(uint64_t, uint64_t, void))(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_100358D5C(uint64_t a1)
{
  return sub_10021BABC(a1, *(uint64_t (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_100358D64()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100358D9C()
{
  sub_100297F18(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100358DC0()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100358EAC()
{
  return sub_100358EC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1002973D0);
}

uint64_t sub_100358EC4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_10096AE50() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return a1(v4, v5, v7, v8);
}

uint64_t sub_100358F70()
{
  return sub_1002818C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100358F90()
{
  return sub_1002819F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100358FAC()
{
  return swift_deallocObject();
}

uint64_t sub_100358FC0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100359008(uint64_t a1)
{
  return sub_10026DBE0(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100359014(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100359040(result, a2 & 1);
  }
  return result;
}

uint64_t sub_100359040(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void sub_10035904C()
{
}

uint64_t sub_100359054(uint64_t a1)
{
  return sub_10027AC08(a1, *(void **)(v1 + 16));
}

void sub_100359064()
{
  sub_10027ACD8(*(void *)(v0 + 16));
}

void sub_100359080()
{
  sub_10027AD84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10035909C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_1003590D0()
{
  return sub_1003590E8((void (*)(void))&_swift_release);
}

uint64_t sub_1003590E8(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

void sub_100359140(uint64_t a1)
{
  sub_100278B20(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_100359150()
{
  uint64_t v1 = sub_10096AE50();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003591F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_10096AE50() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v2 + v5;
  uint64_t v7 = (uint64_t *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];

  return a2(a1, v6, v8, v9);
}

uint64_t sub_1003592B0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1003592C8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs);
  return swift_retain();
}

void sub_1003592F4(int a1, uint64_t a2, void *a3)
{
  v4._rawValue = *(NSString *)(v3 + 16);
  sub_100278520(a1, a2, a3, v4);
}

uint64_t *sub_1003592FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  __C::FPProviderID v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *__C::FPProviderID v4 = *a2;
    __C::FPProviderID v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10096B0E0();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for DBCounters();
    v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
    *((void *)v17 + 2) = *(uint64_t *)((char *)a2 + v16 + 16);
    uint64_t v19 = type metadata accessor for SnapshotCounters();
    v11(&v17[*(int *)(v19 + 28)], &v18[*(int *)(v19 + 28)], v10);
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)v4 + v20;
    unint64_t v22 = (char *)a2 + v20;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((void *)v21 + 2) = *((void *)v22 + 2);
    v11(&v21[*(int *)(v19 + 28)], &v22[*(int *)(v19 + 28)], v10);
  }
  return v4;
}

uint64_t sub_1003594B0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for DBCounters();
  v12(v6 + *(int *)(v7 + 20), v5);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for SnapshotCounters();
  v12(v8 + *(int *)(v9 + 28), v5);
  uint64_t v10 = a1 + a2[7] + *(int *)(v9 + 28);

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v5);
}

uint64_t sub_1003595CC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

void *sub_100359730(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)((char *)a2 + v15);
  *((void *)v16 + 1) = *(void *)((char *)a2 + v15 + 8);
  *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(&v16[*(int *)(v18 + 28)], &v17[*(int *)(v18 + 28)], v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  v10(&v20[*(int *)(v18 + 28)], &v21[*(int *)(v18 + 28)], v9);
  return a1;
}

uint64_t sub_1003598AC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_100359A10(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_100359B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100359B88);
}

uint64_t sub_100359B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for VFSCounters(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for DBCounters();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for SnapshotCounters();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_100359CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100359CE8);
}

uint64_t sub_100359CE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for VFSCounters(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for DBCounters();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for SnapshotCounters();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_100359E40()
{
  uint64_t result = type metadata accessor for VFSCounters(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DBCounters();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SnapshotCounters();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_100359F44()
{
  unint64_t result = qword_100AD1058;
  if (!qword_100AD1058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD1058);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FPDDomainFPFSBackend.Counters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035A064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPDDomainFPFSBackend.Counters.CodingKeys()
{
  return &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys;
}

unint64_t sub_10035A0A0()
{
  unint64_t result = qword_100AD1098;
  if (!qword_100AD1098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD1098);
  }
  return result;
}

unint64_t sub_10035A0F8()
{
  unint64_t result = qword_100AD10A0;
  if (!qword_100AD10A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD10A0);
  }
  return result;
}

unint64_t sub_10035A150()
{
  unint64_t result = qword_100AD10A8;
  if (!qword_100AD10A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD10A8);
  }
  return result;
}

uint64_t sub_10035A1A4@<X0>(_DWORD *a1@<X8>)
{
  return sub_10025BCF0(a1);
}

uint64_t sub_10035A260()
{
  return sub_10034C1F0();
}

void sub_10035ACD8()
{
}

void sub_10035ACF4(uint64_t a1, void *a2)
{
}

void sub_10035B074(uint64_t a1@<X8>)
{
}

uint64_t sub_10035B090()
{
  return sub_100348A10();
}

uint64_t sub_10035B0A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100358AAC(a1);
}

uint64_t sub_10035B0DC@<X0>(void *a1@<X8>)
{
  return sub_100332070(a1);
}

void sub_10035B118(void *a1@<X8>)
{
}

uint64_t sub_10035B130@<X0>(_DWORD *a1@<X8>)
{
  return sub_10016B868(a1);
}

uint64_t sub_10035B1AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10035583C(a1, a2);
}

uint64_t sub_10035B1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)*v8;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = v16[12];
  v17[6] = v16[13];
  v17[7] = a4;
  v17[8] = a5;
  uint64_t v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))v16[55];
  swift_retain();
  v18(a1, a2, a3, sub_10035F934, v17, a6, a7);

  return swift_release();
}

uint64_t sub_10035B320(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a7;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)v9 + 408);
  swift_retain();
  swift_retain();
  v18(a1, a2, a3, 0, sub_10035FDC4, v16, sub_1000140B0, v17, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_10035B468(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = (void *)*v10;
  uint64_t v16 = (void *)*v10;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v15[10];
  v18[3] = v15[11];
  v18[4] = a10;
  v18[5] = v15[12];
  v18[6] = v15[13];
  v18[7] = a6;
  v18[8] = a7;
  uint64_t v19 = (void (*)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))v16[51];
  swift_retain();
  swift_retain();
  v19(a1, a2, a3, 0, sub_10035FDC4, v17, sub_10035F934, v18, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_10035B614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)v7 + 440);
  swift_retain();
  v16(a1, a2, a3, sub_1000DEB2C, v15, a6, a7);

  return swift_release();
}

uint64_t sub_10035B6FC(uint64_t a1)
{
  int v3 = (void *)*v1;
  *(void *)&long long v14 = a1;
  uint64_t v4 = v3[10];
  uint64_t v5 = v3[11];
  uint64_t v6 = v3[12];
  uint64_t v7 = v3[13];
  *(void *)&long long v16 = v4;
  *((void *)&v16 + 1) = v5;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  type metadata accessor for Mutation();
  sub_10096C1C0();
  swift_getWitnessTable();
  uint64_t result = sub_10096BF60();
  if (!v2)
  {
    uint64_t v12 = v1[2];
    *(void *)&long long v16 = v4;
    *((void *)&v16 + 1) = v5;
    uint64_t v17 = v6;
    uint64_t v18 = v7;
    type metadata accessor for ReconciliationMutation();
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096BF50();
    uint64_t v19 = v14;
    sub_10096CC00();
    swift_retain();
    swift_getWitnessTable();
    sub_10096CEF0();
    swift_release();
    swift_bridgeObjectRelease();
    long long v14 = v16;
    uint64_t v15 = v6;
    uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t))(*(void *)v12 + 520);
    uint64_t v10 = sub_10096CD60();
    uint64_t WitnessTable = swift_getWitnessTable();
    v9(&v14, v10, WitnessTable);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&long long v16 = a1;
    return sub_10096BF60();
  }
  return result;
}

uint64_t sub_10035B9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  long long v16 = (void *)*v9;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = v16[12];
  v17[7] = v16[13];
  v17[8] = a4;
  v17[9] = a5;
  uint64_t v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))v16[55];
  swift_retain();
  v18(a1, a2, a3, sub_10035F8F8, v17, a6, a7);

  return swift_release();
}

uint64_t sub_10035BB4C()
{
  return sub_10096BCE0();
}

unint64_t sub_10035BB84()
{
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = sub_10096BCC0();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_10004621C(inited);
}

uint64_t sub_10035BC18(uint64_t a1)
{
  unint64_t v2 = sub_10035FD70();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10035BC54(uint64_t a1)
{
  unint64_t v2 = sub_10035FD70();

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10035BC90()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 < 1)
  {
    if (*(uint64_t *)(v0 + 16) < 1) {
      return 0;
    }
    else {
      return *(unsigned __int8 *)(v0 + 50);
    }
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    BOOL v4 = __OFADD__(v2, v3);
    uint64_t v5 = v2 + v3;
    if (v4) {
      __break(1u);
    }
    else {
      return v5 >= v1;
    }
  }
  return result;
}

uint64_t sub_10035BCD4()
{
  uint64_t v1 = sub_10096B0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_10096CBD0(20);
  swift_bridgeObjectRelease();
  unint64_t v39 = 91;
  unint64_t v40 = 0xE100000000000000;
  sub_10096B0D0();
  sub_10096B080();
  double v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v38 = (uint64_t)v8 / 1000000;
  v41._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v41);
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = 0x662D74696177205DLL;
  v42._object = (void *)0xEF3A6E75722D726FLL;
  sub_10096BDC0(v42);
  uint64_t v38 = *(void *)(v0 + 16);
  v43._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v43);
  swift_bridgeObjectRelease();
  unint64_t v10 = v39;
  unint64_t v9 = v40;
  unint64_t v39 = 0x676E696E6E757220;
  unint64_t v40 = 0xE90000000000003ALL;
  uint64_t v38 = *(void *)(v0 + 24);
  v44._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v44);
  swift_bridgeObjectRelease();
  uint64_t v11 = v39;
  uint64_t v12 = (void *)v40;
  unint64_t v39 = v10;
  unint64_t v40 = v9;
  swift_bridgeObjectRetain();
  v45._countAndFlagsBits = v11;
  v45._object = v12;
  sub_10096BDC0(v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = v39;
  unint64_t v13 = v40;
  unint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_10096CBD0(21);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v39 = 0xD000000000000013;
  unint64_t v40 = 0x800000010099F5B0;
  uint64_t v15 = *(void *)(v0 + 32);
  uint64_t v16 = *(void *)(v0 + 40);
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v19 = 1702195828;
  uint64_t v38 = v18;
  v46._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v46);
  swift_bridgeObjectRelease();
  uint64_t v20 = v39;
  uint64_t v21 = (void *)v40;
  unint64_t v39 = v14;
  unint64_t v40 = v13;
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = v20;
  v47._object = v21;
  sub_10096BDC0(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v23 = v39;
  unint64_t v22 = v40;
  unint64_t v39 = 0x6E69767261747320;
  unint64_t v40 = 0xEA00000000003A67;
  if (*(unsigned char *)(v0 + 50)) {
    v24._countAndFlagsBits = 1702195828;
  }
  else {
    v24._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 50)) {
    v25 = (void *)0xE400000000000000;
  }
  else {
    v25 = (void *)0xE500000000000000;
  }
  v24._object = v25;
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = v39;
  v27 = (void *)v40;
  unint64_t v39 = v23;
  unint64_t v40 = v22;
  swift_bridgeObjectRetain();
  v48._countAndFlagsBits = v26;
  v48._object = v27;
  sub_10096BDC0(v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v29 = v39;
  unint64_t v28 = v40;
  unint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_10096CBD0(18);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v39 = 0xD000000000000010;
  unint64_t v40 = 0x800000010099F5D0;
  uint64_t v30 = *(void *)(v0 + 24);
  if (v30 < 1)
  {
    if (*(uint64_t *)(v0 + 16) < 1 || (*(unsigned char *)(v0 + 50) & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v31 = *(void *)(v0 + 32);
  uint64_t v32 = *(void *)(v0 + 40);
  BOOL v17 = __OFADD__(v31, v32);
  uint64_t v33 = v31 + v32;
  if (!v17)
  {
    if (v33 < v30)
    {
LABEL_18:
      v34 = (void *)0xE500000000000000;
      uint64_t v19 = 0x65736C6166;
      goto LABEL_19;
    }
LABEL_17:
    v34 = (void *)0xE400000000000000;
LABEL_19:
    v49._countAndFlagsBits = v19;
    v49._object = v34;
    sub_10096BDC0(v49);
    swift_bridgeObjectRelease();
    uint64_t v35 = v39;
    v36 = (void *)v40;
    unint64_t v39 = v29;
    unint64_t v40 = v28;
    swift_bridgeObjectRetain();
    v50._countAndFlagsBits = v35;
    v50._object = v36;
    sub_10096BDC0(v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v39;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10035C154()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistenceCounters()
{
  return self;
}

uint64_t sub_10035C188()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10035C1E0()
{
  return sub_10035BCD4();
}

void sub_10035C204()
{
}

void sub_10035C268()
{
}

void sub_10035C2CC()
{
}

void sub_10035C330()
{
}

void sub_10035C394()
{
}

void sub_10035C3F8()
{
}

void sub_10035C45C()
{
}

void sub_10035C4C0()
{
}

void sub_10035C524()
{
}

void sub_10035C588()
{
}

void sub_10035C5EC()
{
}

void sub_10035C650()
{
}

void sub_10035C6B4()
{
}

void sub_10035C718()
{
}

void sub_10035C77C()
{
}

void sub_10035C7E0()
{
}

void sub_10035C844()
{
}

void sub_10035C8A8()
{
}

void sub_10035C90C()
{
}

void sub_10035C970()
{
}

void sub_10035C9D4()
{
}

void sub_10035CA38()
{
}

void sub_10035CA9C()
{
}

void sub_10035CB00()
{
}

void sub_10035CB64()
{
}

void sub_10035CBC8()
{
}

void sub_10035CC2C()
{
}

void sub_10035CC90()
{
}

void sub_10035CCF4()
{
}

void sub_10035CD58()
{
}

void sub_10035CDBC()
{
}

void sub_10035CE20()
{
}

void sub_10035CE84()
{
}

void sub_10035CEE8()
{
}

void sub_10035CF4C()
{
}

void sub_10035CFB0()
{
}

void sub_10035D014()
{
}

void sub_10035D078()
{
}

void sub_10035D0DC()
{
}

void sub_10035D140()
{
}

void sub_10035D1A4()
{
}

void sub_10035D208()
{
}

void sub_10035D26C()
{
}

void sub_10035D2D0()
{
}

uint64_t sub_10035D334()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_10035D374()
{
  sub_10035D334();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Database()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10035D3C0()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 256))();
  if (v1) {
    return v2;
  }
  if (!v3) {
    return 0;
  }
  type metadata accessor for Propagation.UpdateItem();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v2 = *(void *)(v4 + *(void *)(*(void *)v4 + 640));
LABEL_12:
    swift_release();
    return v2;
  }
  type metadata accessor for Propagation.CreateItem();
  if (swift_dynamicCastClass())
  {
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    uint64_t v2 = static Fields.all;
    goto LABEL_12;
  }
  type metadata accessor for Propagation.DeleteItem();
  if (swift_dynamicCastClass())
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

void sub_10035D5AC(uint64_t a1)
{
  sub_10035E750(a1, v1, (void (*)(uint64_t, uint64_t))sub_10035D5DC);
}

uint64_t sub_10035D5DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v49 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 88);
  double v5 = *(void **)(*a2 + 104);
  uint64_t v6 = type metadata accessor for SnapshotMutation();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  Swift::String v42 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = *(void *)(v3 + 80);
  Swift::String v45 = a2;
  uint64_t v12 = *(ValueMetadata **)(v3 + 96);
  uint64_t v13 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v46 = v11;
  Swift::String v47 = v5;
  uint64_t v50 = v11;
  uint64_t v51 = v4;
  uint64_t v48 = v4;
  v52 = v12;
  v53 = v5;
  uint64_t v20 = type metadata accessor for Mutation();
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v42 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v42 - v21, v49, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = v43;
    v25 = v22;
    uint64_t v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v10, v25, v44);
    BOOL v17 = v42;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v42, v10, v26);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v28 = (uint64_t)v10;
    switch((int)EnumCaseMultiPayload)
    {
      case 1:
        __chkstk_darwin(EnumCaseMultiPayload);
        strcpy((char *)&v42 - 32, "from to  reason ");
        uint64_t v50 = type metadata accessor for SnapshotItem();
        uint64_t v51 = v50;
        v52 = &type metadata for Fields;
        v53 = &type metadata for String;
        uint64_t v32 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v33 = type metadata accessor for SnapshotItem();
        v34 = *(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8);
        v34(v32, v33);
        v34(v17, v33);
        goto LABEL_12;
      case 2:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_15;
      case 3:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_17;
      case 4:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_19;
      case 5:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        goto LABEL_11;
      default:
        uint64_t AssociatedTypeWitness = type metadata accessor for SnapshotItem();
LABEL_11:
        uint64_t v35 = AssociatedTypeWitness;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v17, v35);
LABEL_12:
        sub_100853BCC(v28);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v28, v26);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v22, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v30 = swift_getEnumCaseMultiPayload();
    switch((int)v30)
    {
      case 1:
        __chkstk_darwin(v30);
        strcpy((char *)&v42 - 32, "from to  reason ");
        uint64_t v50 = type metadata accessor for SnapshotItem();
        uint64_t v51 = v50;
        v52 = &type metadata for Fields;
        v53 = &type metadata for String;
        uint64_t v37 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for SnapshotItem();
        unint64_t v39 = *(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8);
        v39(v37, v38);
        v39(v17, v38);
        goto LABEL_24;
      case 2:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_15:
        uint64_t v40 = swift_getAssociatedTypeWitness();
        sub_100033BE8((uint64_t *)&unk_100AD7510);
        goto LABEL_20;
      case 3:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_17:
        uint64_t v40 = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_21;
      case 4:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_19:
        uint64_t v40 = swift_getAssociatedTypeWitness();
LABEL_20:
        swift_getTupleTypeMetadata3();
LABEL_21:
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v17, v40);
      case 5:
        uint64_t v31 = swift_getAssociatedTypeWitness();
        goto LABEL_23;
      default:
        uint64_t v31 = type metadata accessor for SnapshotItem();
LABEL_23:
        uint64_t v41 = v31;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v17, v41);
LABEL_24:
        sub_100853BCC((uint64_t)v19);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        break;
    }
  }
  return result;
}

uint64_t sub_10035DF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ReconciliationMutation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  if (qword_100ACC108 != -1) {
    swift_once();
  }
  return sub_10035E068(a2, qword_100B0B2E8);
}

uint64_t sub_10035E060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10035DF7C(a1, a2);
}

uint64_t sub_10035E068(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v69 = a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 88);
  uint64_t v5 = *(void *)(*(void *)v2 + 96);
  uint64_t v6 = *(void *)(*(void *)v2 + 104);
  uint64_t v70 = v3;
  uint64_t v71 = v4;
  uint64_t v72 = v5;
  uint64_t v73 = v6;
  uint64_t v7 = type metadata accessor for ReconciliationMutation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  uint64_t v68 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v66 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v61 = (char *)&v57 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v63 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v6;
  uint64_t v65 = v4;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = v16;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v73 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v57 - v24;
  uint64_t v26 = v68;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  uint64_t v28 = v67;
  v27(v14, v69, v67);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    v59 = v27;
    v60 = v23;
    uint64_t v29 = type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v31 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v14, v19);
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
      (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v31, v29);
      uint64_t v26 = v68;
      uint64_t v32 = v69;
    }
    else
    {
      uint64_t v58 = v20;
      uint64_t v34 = *((void *)v31 + 1);
      uint64_t v63 = *(void *)v31;
      uint64_t v35 = *((void *)v31 + 2);
      BOOL v36 = sub_1005152D8();
      uint64_t v26 = v68;
      if (v36 && (v63 & v62) != 0)
      {
        uint64_t v37 = v69;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v28);
        uint64_t v38 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v57 = v35;
        unint64_t v39 = v61;
        uint64_t v40 = v34;
        uint64_t v41 = &v61[v38];
        uint64_t v42 = v58;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v61, v25, v19);
        uint64_t v43 = v63 & ~v62;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v19);
        *(void *)uint64_t v41 = v43;
        *((void *)v41 + 1) = v40;
        *((void *)v41 + 2) = v57;
        uint64_t v32 = v37;
        uint64_t v28 = v67;
        uint64_t v26 = v68;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = v39;
        uint64_t v20 = v42;
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v32, v44, v28);
      }
      else
      {
        uint64_t v20 = v58;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v19);
        uint64_t v32 = v69;
      }
    }
    uint64_t v33 = v66;
    v27 = v59;
    uint64_t v23 = v60;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v28);
    uint64_t v32 = v69;
    uint64_t v33 = v66;
  }
  v27(v33, v32, v28);
  if (swift_getEnumCaseMultiPayload() != 8) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v33, v28);
  }
  uint64_t v45 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v46 = swift_getTupleTypeMetadata2();
  Swift::String v47 = &v33[*(int *)(v46 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v33, v19);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v47, v45);
  }
  else
  {
    uint64_t v49 = v23;
    uint64_t v51 = *(void *)v47;
    uint64_t v50 = (char *)*((void *)v47 + 1);
    uint64_t v68 = *((void *)v47 + 2);
    if (sub_1005152D8() && (v51 & v62) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v69, v28);
      uint64_t v52 = *(int *)(v46 + 48);
      v66 = v50;
      v53 = v61;
      v54 = &v61[v52];
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v61, v49, v19);
      uint64_t v55 = v51 & ~v62;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
      v56 = v66;
      *(void *)v54 = v55;
      *((void *)v54 + 1) = v56;
      *((void *)v54 + 2) = v68;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v69, v53, v28);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    }
  }
}

void sub_10035E750(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a1, a2);
}

void sub_10035E7B8(uint64_t a1)
{
  sub_10035E750(a1, v1, (void (*)(uint64_t, uint64_t))sub_10035E7E8);
}

uint64_t sub_10035E7E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v48 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 88);
  uint64_t v5 = *(void **)(*a2 + 104);
  uint64_t v6 = type metadata accessor for SnapshotMutation();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v41 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v44 = a2;
  uint64_t v12 = *(ValueMetadata **)(v3 + 96);
  uint64_t v13 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v45 = v11;
  uint64_t v46 = v5;
  uint64_t v49 = v11;
  uint64_t v50 = v4;
  uint64_t v47 = v4;
  uint64_t v51 = v12;
  uint64_t v52 = v5;
  uint64_t v20 = type metadata accessor for Mutation();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v41 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v41 - v21, v48, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v42;
    uint64_t v24 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v10, v22, v43);
    uint64_t v26 = v41;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v41, v10, v24);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        __chkstk_darwin(v29);
        strcpy((char *)&v41 - 32, "from to  reason ");
        uint64_t v49 = type metadata accessor for SnapshotItem();
        uint64_t v50 = v49;
        uint64_t v51 = &type metadata for Fields;
        uint64_t v52 = &type metadata for String;
        uint64_t v30 = &v26[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v31 = type metadata accessor for SnapshotItem();
        uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8);
        v32(v30, v31);
        uint64_t v33 = v26;
        return ((uint64_t (*)(char *, uint64_t))v32)(v33, v31);
      case 2u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        sub_100033BE8((uint64_t *)&unk_100AD7510);
        goto LABEL_10;
      case 3u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_11;
      case 4u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
LABEL_10:
        swift_getTupleTypeMetadata3();
LABEL_11:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v26, AssociatedTypeWitness);
        sub_100853BCC((uint64_t)v10);
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v24);
      case 5u:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        uint64_t v27 = swift_getAssociatedTypeWitness();
        goto LABEL_13;
      default:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        uint64_t v27 = type metadata accessor for SnapshotItem();
LABEL_13:
        uint64_t v36 = v27;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v26, v36);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v22, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        __chkstk_darwin(v37);
        strcpy((char *)&v41 - 32, "from to  reason ");
        uint64_t v49 = type metadata accessor for SnapshotItem();
        uint64_t v50 = v49;
        uint64_t v51 = &type metadata for Fields;
        uint64_t v52 = &type metadata for String;
        uint64_t v38 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v31 = type metadata accessor for SnapshotItem();
        uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8);
        v32(v38, v31);
        uint64_t v33 = v17;
        return ((uint64_t (*)(char *, uint64_t))v32)(v33, v31);
      case 2u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
        sub_100033BE8((uint64_t *)&unk_100AD7510);
        goto LABEL_19;
      case 3u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_20;
      case 4u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
LABEL_19:
        swift_getTupleTypeMetadata3();
LABEL_20:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v17, v39);
        sub_100853BCC((uint64_t)v19);
        return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      case 5u:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        uint64_t v28 = swift_getAssociatedTypeWitness();
        goto LABEL_22;
      default:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        uint64_t v28 = type metadata accessor for SnapshotItem();
LABEL_22:
        uint64_t v40 = v28;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v17, v40);
        break;
    }
  }
  return result;
}

uint64_t sub_10035F220(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = (void *)*v11;
  BOOL v17 = (void *)*v11;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v16[10];
  v19[3] = v16[11];
  v19[4] = a10;
  v19[5] = a11;
  v19[6] = v16[12];
  v19[7] = v16[13];
  v19[8] = a6;
  v19[9] = a7;
  uint64_t v20 = (void (*)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))v17[51];
  swift_retain();
  swift_retain();
  v20(a1, a2, a3, 0, sub_10035F894, v18, sub_10035F8F8, v19, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_10035F3DC(uint64_t a1, void (*a2)(char *))
{
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v4 = sub_10096D510();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  *(uint64_t *)((char *)&v9 - v6) = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10035F4EC(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a2;
  uint64_t v10 = sub_10096C890();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = sub_10096C890();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  BOOL v17 = (char *)&v19 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))((char *)&v19 - v16, 1, 1, a6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56))(v13, 1, 1, a7);
  v20(v17, v13, a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_10035F6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v4 + 464))(a1, 1, a2, a3, a4);
  sub_10096CBD0(46);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 8250;
  v12._object = (void *)0xE200000000000000;
  sub_10096BDC0(v12);
  swift_getErrorValue();
  id v5 = Error.prettyDescription.getter(v10);
  id v6 = [v5 description];
  uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v9 = v8;

  v13._countAndFlagsBits = v7;
  v13._object = v9;
  sub_10096BDC0(v13);

  swift_bridgeObjectRelease();
  sub_10096CE20();
  __break(1u);
}

uint64_t sub_10035F85C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035F894()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_10035F8C0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035F8FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035F938(uint64_t a1)
{
  return sub_10035F3DC(a1, *(void (**)(char *))(v1 + 56));
}

uint64_t sub_10035F960(uint64_t a1)
{
  return sub_10035F4EC(a1, *(void (**)(char *, char *, uint64_t))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void *sub_10035F994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  swift_weakAssign();
  swift_weakAssign();
  uint64_t v7 = *(void (**)(uint64_t))(*v6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = swift_unknownObjectRetain();
  v7(v8);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_weakAssign();
  swift_release();
  return v6;
}

void *sub_10035FA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  a6[7] = a8;
  swift_weakAssign();
  swift_weakAssign();
  uint64_t v9 = *(void (**)(uint64_t))(*a6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = swift_unknownObjectRetain();
  v9(v10);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_weakAssign();
  swift_release();
  return a6;
}

uint64_t getEnumTagSinglePayload for EvictionUrgency(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MaterializationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035FCDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterializationError()
{
  return &type metadata for MaterializationError;
}

unint64_t sub_10035FD1C()
{
  unint64_t result = qword_100AD12B8;
  if (!qword_100AD12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD12B8);
  }
  return result;
}

unint64_t sub_10035FD70()
{
  unint64_t result = qword_100AD12C0;
  if (!qword_100AD12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD12C0);
  }
  return result;
}

uint64_t sub_10035FDE4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 9);
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v13 = *(_OWORD *)(v0 + 16);
  long long v14 = v4;
  __int16 v15 = *(_WORD *)(v0 + 48);
  Swift::UInt v5 = v4;
  sub_100345414((uint64_t *)&v14 + 1, (uint64_t)v16);
  uint64_t v6 = SHIBYTE(v15);
  if (v3)
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v7 = v1;
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(v1, v2, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if (v2)
    {
      if (v2 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)v1);
      }
      else
      {
        if (v1) {
          Swift::UInt v8 = 3;
        }
        else {
          Swift::UInt v8 = 2;
        }
        sub_10096D4C0(v8);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)v1);
    }
  }
  swift_bridgeObjectRetain();
  sub_10096BD50();
  sub_10096D4C0(v5);
  sub_100345414(v16, (uint64_t)&v17);
  int v9 = v18;
  switch(v18)
  {
    case 0xFAu:
      Swift::UInt v10 = 5;
      goto LABEL_28;
    case 0xFBu:
      Swift::UInt v10 = 4;
      goto LABEL_28;
    case 0xFCu:
      goto LABEL_27;
    case 0xFDu:
      Swift::UInt v10 = 1;
      goto LABEL_28;
    case 0xFEu:
      Swift::UInt v10 = 0;
      goto LABEL_28;
    default:
      Swift::UInt64 v11 = v17;
      sub_10096D4C0(3uLL);
      if (v9 == 255)
      {
        sub_10096D4D0(0);
        if (v6 == 70) {
          goto LABEL_29;
        }
LABEL_24:
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_1009805D8[v6]);
        return sub_1001FACD4((uint64_t)&v13);
      }
      sub_10096D4D0(1u);
      if (v9)
      {
        if (v9 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v11);
          if (v6 == 70) {
            goto LABEL_29;
          }
        }
        else
        {
          if (v11) {
            Swift::UInt v10 = 3;
          }
          else {
LABEL_27:
          }
            Swift::UInt v10 = 2;
LABEL_28:
          sub_10096D4C0(v10);
          if (v6 == 70) {
            goto LABEL_29;
          }
        }
        goto LABEL_24;
      }
      sub_10096D4C0(0);
      sub_10096D4E0(v11);
      if (v6 != 70) {
        goto LABEL_24;
      }
LABEL_29:
      sub_10096D4D0(0);
      return sub_1001FACD4((uint64_t)&v13);
  }
}

uint64_t sub_10036004C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100042A48((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *char v3 = 0x8000000000000000;
    sub_10037BFD0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *char v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B770(a1, (uint64_t *)&unk_100ACE0F0);
    sub_1009162B0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_10002B770((uint64_t)v9, (uint64_t *)&unk_100ACE0F0);
  }
}

uint64_t sub_100360124(uint64_t a1, Swift::UInt64 a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v8 - 8);
  Swift::UInt v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10002B770(a1, (uint64_t *)&unk_100AD0CF0);
    unint64_t v15 = sub_10031F858(a2, a3);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      *long long v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10091B06C();
        uint64_t v19 = v23;
      }
      sub_10001AE98(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, &qword_100ACCB10);
      sub_100917A68(v17, v19);
      *long long v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100AD0CF0);
  }
  else
  {
    sub_10001AE98(a1, (uint64_t)v14, &qword_100ACCB10);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    *long long v4 = 0x8000000000000000;
    sub_100389DE0((uint64_t)v14, a2, a3, v20, (void (*)(void))sub_10091B06C, &qword_100ACCB10, (uint64_t *)&unk_100ACDA00);
    *long long v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003603A0(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100AD6480);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10002B770(a1, (uint64_t *)&unk_100AD6480);
    unint64_t v13 = sub_10031FA3C(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *char v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10091B65C();
        uint64_t v17 = v21;
      }
      sub_10001AE98(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t *)&unk_100ACC9B0);
      sub_100917A80(v15, v17);
      *char v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_10002B770((uint64_t)v8, (uint64_t *)&unk_100AD6480);
  }
  else
  {
    sub_10001AE98(a1, (uint64_t)v12, (uint64_t *)&unk_100ACC9B0);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    sub_100389F40((uint64_t)v12, a2, v18);
    *char v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003605EC(uint64_t a1, Swift::UInt64 a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD6EB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC(&qword_100ACCA78);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10002B770(a1, (uint64_t *)&unk_100AD6EB0);
    unint64_t v15 = sub_10031F858(a2, a3);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      *long long v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10091B3E0();
        uint64_t v19 = v23;
      }
      sub_10001AE98(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, &qword_100ACCA78);
      sub_100917A74(v17, v19);
      *long long v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100AD6EB0);
  }
  else
  {
    sub_10001AE98(a1, (uint64_t)v14, &qword_100ACCA78);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    *long long v4 = 0x8000000000000000;
    sub_100389DE0((uint64_t)v14, a2, a3, v20, (void (*)(void))sub_10091B3E0, &qword_100ACCA78, &qword_100ACCA70);
    *long long v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100360868(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10002B770(a1, (uint64_t *)&unk_100ACB5E0);
    sub_1009168B4(a2, (uint64_t)v8);
    sub_10038F088(a2);
    return sub_10002B770((uint64_t)v8, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *char v3 = 0x8000000000000000;
    sub_10038A96C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v16;
    swift_bridgeObjectRelease();
    return sub_10038F088(a2);
  }
}

uint64_t sub_100360A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10002B770(a1, (uint64_t *)&unk_100ACB5E0);
    sub_100916890(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *long long v4 = 0x8000000000000000;
    sub_10038BE44((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_10091C944, (uint64_t (*)(void))&type metadata accessor for Date, &qword_100ACCAE0, (uint64_t (*)(void))&type metadata accessor for Date);
    *long long v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100360C44(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = sub_10002B7CC(&qword_100AD20B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SyncState();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_10002B770(a1, &qword_100AD20B8);
    sub_100916B78(a2, (uint64_t)v8);
    return sub_10002B770((uint64_t)v8, &qword_100AD20B8);
  }
  else
  {
    sub_10038F19C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SyncState);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *char v3 = 0x8000000000000000;
    sub_10038B408((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100360DF4(void *a1, uint64_t a2)
{
  char v3 = v2;
  if (*a1) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = a1[1] == 1;
  }
  if (v5)
  {
    sub_10002B770((uint64_t)a1, &qword_100AD20C0);
    unint64_t v8 = sub_10031FA3C(a2);
    if (v9)
    {
      unint64_t v10 = v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *v2;
      uint64_t v14 = *v3;
      *char v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10091EABC();
        uint64_t v12 = v14;
      }
      sub_10009CB44(*(void *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_100919FC4(v10, v12);
      *char v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v15 = xmmword_100974EA0;
    }
    return sub_10002B770((uint64_t)&v15, &qword_100AD20C0);
  }
  else
  {
    sub_10009CB44((uint64_t)a1, (uint64_t)&v15);
    char v6 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_10038BB04((uint64_t)&v15, a2, v6);
    *uint64_t v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100360F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v8 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096AE50();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10002B770(a1, &qword_100ACA8C0);
    sub_1009170B0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B770((uint64_t)v10, &qword_100ACA8C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *long long v4 = 0x8000000000000000;
    sub_10038BE44((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_10091EC98, (uint64_t (*)(void))&type metadata accessor for URL, &qword_100ACCC48, (uint64_t (*)(void))&type metadata accessor for URL);
    *long long v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100361124(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1003611B4(a1, a2, a3, a4, (uint64_t (*)(void))sub_10091FD98, qword_100AD2100, (void (*)(void))sub_10091FD98, (void (*)(unint64_t, uint64_t))sub_10091A590);
}

uint64_t sub_10036116C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1003611B4(a1, a2, a3, a4, (uint64_t (*)(void))sub_10091FD8C, &qword_100AD20E8, (void (*)(void))sub_10091FD8C, (void (*)(unint64_t, uint64_t))sub_10091A590);
}

uint64_t sub_1003611B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t *a6, void (*a7)(void), void (*a8)(unint64_t, uint64_t))
{
  uint64_t v9 = v8;
  if (a2)
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_10000DDD0(a3, a4);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *v8;
      uint64_t v25 = *v9;
      *uint64_t v9 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        a7();
        uint64_t v22 = v25;
      }
      swift_bridgeObjectRelease();
      a8(v18, v22);
      *uint64_t v9 = v22;
      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  else
  {
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    sub_10038C9C0(a1, a3, a4, v15, a5, a6);
    *uint64_t v8 = v24;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100361338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1001E9E64((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *char v3 = 0x8000000000000000;
    sub_10038C82C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *char v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B770(a1, &qword_100AD20F8);
    sub_1009173E4(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_10002B770((uint64_t)v9, &qword_100AD20F8);
  }
}

uint64_t sub_100361410(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100042A48((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_10038BCC4(v7, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_10031F918, (void (*)(void))sub_10091FF64, &qword_100AD20D0, type metadata accessor for FPDiagnosticAttributeKey);
    *uint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B770(a1, (uint64_t *)&unk_100ACE0F0);
    sub_1009175F4((uint64_t)a2, v7);

    return sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ACE0F0);
  }
}

uint64_t sub_100361510(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  long long v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v7 = swift_getAssociatedTypeWitness();
      uint64_t v8 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v10 = swift_getAssociatedConformanceWitness();
      uint64_t v20 = v7;
      uint64_t v21 = (ValueMetadata *)v8;
      uint64_t v22 = AssociatedConformanceWitness;
      uint64_t v23 = v10;
      type metadata accessor for FileItemVersion();
      uint64_t v11 = sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v13 = *(void *)&v4[*(int *)(TupleTypeMetadata3 + 64)];
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(&v4[*(int *)(TupleTypeMetadata3 + 48)], v11);
      goto LABEL_6;
    case 1:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v19 - 48, " filename below syncability originalError ");
      uint64_t v20 = swift_getAssociatedTypeWitness();
      uint64_t v21 = &type metadata for Filename;
      uint64_t v22 = v20;
      uint64_t v23 = sub_100033BE8(qword_100ACD7A0);
      uint64_t v24 = sub_100033BE8(&qword_100AD7360);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      char v15 = &v4[TupleTypeMetadata[16]];
      sub_10010DC6C(*(void *)&v4[TupleTypeMetadata[20]], *(void *)&v4[TupleTypeMetadata[20] + 8]);
      uint64_t v13 = *(void *)&v4[TupleTypeMetadata[24]];
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8);
      v17(v15, v16);
      v17(v4, v16);
      break;
    case 3:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v13 = *(void *)&v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
LABEL_6:
      (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
      break;
    case 8:
      uint64_t v13 = *(void *)v4;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t v13 = 0;
      break;
  }
  return v13;
}

uint64_t static FileTreeError.errorDomain.getter()
{
  return sub_10096BCE0();
}

uint64_t type metadata accessor for FileTreeError()
{
  return sub_10014D080();
}

uint64_t FileTreeError.errorCode.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  long long v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *))(v2 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 7;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      __chkstk_darwin(7);
      strcpy((char *)&v27 - 48, " filename below syncability originalError ");
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v29 = &type metadata for Filename;
      uint64_t v30 = AssociatedTypeWitness;
      uint64_t v31 = sub_100033BE8(qword_100ACD7A0);
      uint64_t v32 = sub_100033BE8(&qword_100AD7360);
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      char v15 = &v4[*(int *)(TupleTypeMetadata + 64)];
      sub_10010DC6C(*(void *)&v4[*(int *)(TupleTypeMetadata + 80)], *(void *)&v4[*(int *)(TupleTypeMetadata + 80) + 8]);
      swift_errorRelease();
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v16 - 8) + 8);
      v17(v15, v16);
      v17(v4, v16);
      uint64_t result = 1;
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v18 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v18 - 8) + 8))(&v4[*(int *)(TupleTypeMetadata2 + 48)], v18);
      uint64_t result = 2;
      break;
    case 3:
      uint64_t v20 = swift_getAssociatedTypeWitness();
      sub_100033BE8(&qword_100AD7360);
      swift_getTupleTypeMetadata2();
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v20 - 8) + 8))(v4, v20);
      uint64_t result = 3;
      break;
    case 4:
      uint64_t v21 = swift_getAssociatedTypeWitness();
      uint64_t v22 = sub_10096C890();
      uint64_t v23 = swift_getTupleTypeMetadata2();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v21 - 8) + 8))(&v4[*(int *)(v23 + 48)], v21);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v22 - 8) + 8))(v4, v22);
      uint64_t result = 4;
      break;
    case 5:
      if (*v4) {
        uint64_t result = 11;
      }
      else {
        uint64_t result = 22;
      }
      break;
    case 6:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 5;
      break;
    case 7:
      uint64_t v24 = swift_getAssociatedTypeWitness();
      uint64_t v25 = swift_getTupleTypeMetadata2();
      uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v24 - 8) + 8);
      v26(&v4[*(int *)(v25 + 48)], v24);
      v26(v4, v24);
      uint64_t result = 6;
      break;
    case 8:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 15;
      break;
    case 9:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 23;
      break;
    case 10:
      return result;
    case 11:
      uint64_t result = 8;
      break;
    case 12:
      uint64_t result = 9;
      break;
    case 13:
      uint64_t result = 10;
      break;
    case 14:
      uint64_t result = 12;
      break;
    case 15:
      uint64_t result = 13;
      break;
    case 16:
      uint64_t result = 14;
      break;
    case 17:
      uint64_t result = 16;
      break;
    case 18:
      uint64_t result = 17;
      break;
    case 19:
      uint64_t result = 18;
      break;
    case 20:
      uint64_t result = 19;
      break;
    case 21:
      uint64_t result = 20;
      break;
    case 22:
      uint64_t result = 24;
      break;
    default:
      uint64_t v7 = swift_getAssociatedTypeWitness();
      uint64_t v8 = swift_getAssociatedTypeWitness();
      uint64_t v9 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v11 = swift_getAssociatedConformanceWitness();
      uint64_t AssociatedTypeWitness = v8;
      uint64_t v29 = (ValueMetadata *)v9;
      uint64_t v30 = AssociatedConformanceWitness;
      uint64_t v31 = v11;
      type metadata accessor for FileItemVersion();
      uint64_t v12 = sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v13 = &v4[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v12 - 8) + 8))(v13, v12);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t FileTreeError.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100361510(v4);
  if (v7
    && (*(void *)&long long v26 = v7, sub_10002B7CC((uint64_t *)&unk_100ACB6B0), sub_100033BA8(), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v8 = *(void **)&v25[0];
    id v9 = [*(id *)&v25[0] userInfo];
    uint64_t v10 = sub_10096B9C0();

    uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    uint64_t v14 = sub_10096BCC0();
    uint64_t v27 = &type metadata for String;
    *(void *)&long long v26 = v14;
    *((void *)&v26 + 1) = v15;
    sub_100042A48(&v26, v25);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v10;
    sub_10037BFD0(v25, v11, v13, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = v24;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B7CC(&qword_100ACE1E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BB0;
    *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    *(void *)(inited + 40) = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    uint64_t v20 = sub_10096BCC0();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v20;
    *(void *)(inited + 56) = v21;
    return sub_10004621C(inited);
  }
  return v17;
}

uint64_t sub_1003623F0()
{
  unint64_t v0 = sub_10096D350();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

unint64_t sub_100362448(char a1)
{
  unint64_t result = 0x46746F4E6D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C6F436D657469;
      break;
    case 2:
      unint64_t result = 0x6F42746F6E6E6163;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x436E6F6973726576;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
    case 12:
    case 25:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6D73694D6D657469;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0x657079546D657469;
      break;
    case 14:
      unint64_t result = 0xD000000000000020;
      break;
    case 15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0x614364616F6C7075;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      unint64_t result = 0x756B6F6F4C78616DLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000018;
      break;
    case 22:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 23:
      unint64_t result = 0x54746F4E6D657469;
      break;
    case 24:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100362794()
{
  return static FileTreeError.errorDomain.getter();
}

uint64_t sub_1003627A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Error<>._domain.getter(a1, WitnessTable);
}

uint64_t sub_1003627FC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Error<>._code.getter(a1, WitnessTable);
}

uint64_t sub_100362850()
{
  swift_getWitnessTable();

  return sub_10096D340();
}

uint64_t sub_1003628C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100362930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1003629A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100362A10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1003623F0();
  *a1 = result;
  return result;
}

unint64_t sub_100362A48@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100362448(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100362A78()
{
  return sub_100362790(*v0);
}

uint64_t sub_100362A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_100362444(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_100362AB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10038E970();
  *a1 = result;
  return result;
}

uint64_t sub_100362AE0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100362B34(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100362B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v42 - v10;
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v42 - v13;
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = __chkstk_darwin(v17);
  uint64_t v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v42 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v3 + *(int *)(a1 + 36), v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
LABEL_5:
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v32 = swift_getAssociatedConformanceWitness();
    uint64_t v52 = v14;
    uint64_t v53 = AssociatedTypeWitness;
    uint64_t v54 = AssociatedConformanceWitness;
    uint64_t v55 = v32;
    uint64_t v33 = type metadata accessor for FileItemVersion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v51, 1, 1, v33);
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v25(v24, v19, v14);
  uint64_t v26 = v3 + *(int *)(a1 + 40);
  uint64_t v27 = v46;
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v26, v48);
  uint64_t v30 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v27, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v14);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
    goto LABEL_5;
  }
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v36 = v42;
  v35(v42, v27, AssociatedTypeWitness);
  v25(v44, v24, v14);
  uint64_t v37 = (uint64_t)v43;
  v35(v43, v36, AssociatedTypeWitness);
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = v51;
  sub_1007D03B8((uint64_t)v44, 0, v37, 0, 0, 0, v14, AssociatedTypeWitness, v51);
  uint64_t v52 = v14;
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = v40;
  uint64_t v55 = v41;
  uint64_t v39 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
}

uint64_t sub_1003630F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = a1;
  uint64_t v30 = AssociatedTypeWitness;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(a5, a1);
  found = (int *)type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v11 = a5 + found[9];
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_10096C890();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v27 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  uint64_t v29 = a5;
  uint64_t v14 = a5 + found[10];
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v26 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, a3, v15);
  uint64_t v17 = a4;
  if (a4)
  {
    swift_getErrorValue();
    uint64_t v18 = sub_1003ABE00(v35, v36);
    if (v34)
    {
      swift_errorRelease();
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v20(a3, v15);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v21(a2, v12);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v22(v31, v30);
      v22(v29, v30);
      v21(v27, v12);
      return ((uint64_t (*)(uint64_t, uint64_t))v20)(v26, v15);
    }
    unint64_t v24 = v19;
    uint64_t v28 = v18;
    swift_errorRelease();
    uint64_t v17 = v28;
  }
  else
  {
    unint64_t v24 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v31, v30);
  uint64_t v25 = (void *)(v29 + found[11]);
  void *v25 = v17;
  v25[1] = v24;
  return result;
}

uint64_t sub_10036343C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x56746E65746E6F63 && a2 == 0xEE006E6F69737265 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010099F670 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010099F690)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_100363608(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x56746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003636B0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v12 = a2;
  type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_10096D200();
  uint64_t v13 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v6 = (char *)v11 - v5;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  LOBYTE(v16) = 0;
  swift_getAssociatedTypeWitness();
  v11[1] = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = v14;
  uint64_t v8 = v4;
  sub_10096D1A0();
  if (v7) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
  }
  uint64_t v10 = v13;
  LOBYTE(v16) = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D100();
  LOBYTE(v16) = 2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D100();
  long long v16 = *(_OWORD *)(v15 + *(int *)(v12 + 44));
  char v17 = 3;
  sub_100078E40();
  sub_10096D100();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v8);
}

uint64_t sub_1003639EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = sub_10096C890();
  uint64_t v36 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v32 = (char *)&v29 - v7;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v38 = sub_10096C890();
  uint64_t v35 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v29 - v8;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v29 - v9;
  type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v45 = sub_10096D0B0();
  uint64_t v40 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v13 = *(void *)(found - 8);
  __chkstk_darwin(found);
  uint64_t v15 = (char *)&v29 - v14;
  sub_10002689C(a1, a1[3]);
  uint64_t v47 = v11;
  uint64_t v16 = (uint64_t)v48;
  sub_10096D570();
  if (v16) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v30 = v13;
  uint64_t v17 = found;
  uint64_t v48 = a1;
  LOBYTE(v49) = 0;
  uint64_t v18 = v42;
  swift_getAssociatedConformanceWitness();
  sub_10096D040();
  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  uint64_t v29 = v15;
  v19(v15, v46, v18);
  LOBYTE(v49) = 1;
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = v37;
  sub_10096CFB0();
  uint64_t v21 = v17;
  uint64_t v22 = *(int *)(v17 + 36);
  uint64_t v23 = v29;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v29[v22], v20, v38);
  LOBYTE(v49) = 2;
  swift_getAssociatedConformanceWitness();
  unint64_t v24 = v32;
  sub_10096CFB0();
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v23[*(int *)(v21 + 40)], v24, v34);
  char v50 = 3;
  sub_100157F34();
  uint64_t v25 = v45;
  sub_10096CFB0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v25);
  uint64_t v26 = v29;
  *(_OWORD *)&v29[*(int *)(v21 + 44)] = v49;
  uint64_t v27 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v31, v26, v21);
  sub_1000268E0((uint64_t)v48);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v26, v21);
}

BOOL sub_100364114(char *a1, char *a2)
{
  return static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100364128()
{
  return PackageInternalLookupPolicy.hashValue.getter(*v0);
}

void sub_100364148(uint64_t a1)
{
  PackageInternalLookupPolicy.hash(into:)(a1, *v1);
}

Swift::Int sub_100364154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100368338(a1, a2, a3, (void (*)(unsigned char *, void, void, void))PackageInternalLookupPolicy.hash(into:));
}

unint64_t sub_10036416C()
{
  return sub_100363608(*v0);
}

uint64_t sub_100364178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10036343C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003641A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static Fields.posixPermissions.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003641D4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100364228(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036427C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003639EC(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_10036429C(void *a1, uint64_t a2)
{
  return sub_1003636B0(a1, a2);
}

uint64_t sub_1003642B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v24 = a1;
  v11(a6, a1, AssociatedTypeWitness);
  uint64_t v12 = (int *)type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v13 = (void *)(a6 + v12[9]);
  *uint64_t v13 = a2;
  v13[1] = a3;
  uint64_t v26 = a6;
  uint64_t v14 = a6 + v12[10];
  v11(v14, a4, AssociatedTypeWitness);
  if (a5)
  {
    swift_getErrorValue();
    uint64_t v15 = sub_1003ABE00(v29, v30);
    if (v23)
    {
      swift_errorRelease();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v17(a4, AssociatedTypeWitness);
      v17(v24, AssociatedTypeWitness);
      v17(v26, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, uint64_t))v17)(v14, AssociatedTypeWitness);
    }
    unint64_t v19 = v15;
    unint64_t v20 = v16;
    swift_errorRelease();
  }
  else
  {
    unint64_t v19 = 0;
    unint64_t v20 = 0xF000000000000000;
  }
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v21(a4, AssociatedTypeWitness);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v21)(v24, AssociatedTypeWitness);
  uint64_t v22 = (void *)(v26 + v12[11]);
  *uint64_t v22 = v19;
  v22[1] = v20;
  return result;
}

uint64_t sub_1003644D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E65726170 && a2 == 0xE800000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010099F690)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_100364680(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D616E656C6966;
      break;
    case 2:
      unint64_t result = 0x4449746E65726170;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100364714(void *a1, uint64_t a2)
{
  uint64_t v15 = a2;
  type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D200();
  uint64_t v16 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - v4;
  sub_10002689C(a1, a1[3]);
  uint64_t v6 = v3;
  uint64_t v7 = v17;
  sub_10096D590();
  LOBYTE(v19) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v18;
  sub_10096D1A0();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v6);
  }
  uint64_t v11 = v15;
  uint64_t v10 = v16;
  uint64_t v12 = (uint64_t *)(v7 + *(int *)(v15 + 36));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *(void *)&long long v19 = v14;
  *((void *)&v19 + 1) = v13;
  char v20 = 1;
  sub_100157BC4();
  sub_10096D1A0();
  LOBYTE(v19) = 2;
  sub_10096D1A0();
  long long v19 = *(_OWORD *)(v7 + *(int *)(v11 + 44));
  char v20 = 3;
  sub_100078E40();
  sub_10096D100();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v6);
}

uint64_t sub_1003649C0@<X0>(void *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v34 = v6;
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v27 - v9;
  type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v36 = sub_10096D0B0();
  uint64_t v31 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v32 = a2;
  uint64_t v12 = (int *)type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v28 = *((void *)v12 - 1);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - v13;
  sub_10002689C(a1, a1[3]);
  uint64_t v37 = v11;
  uint64_t v15 = (uint64_t)v38;
  sub_10096D570();
  if (v15) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v16 = v14;
  uint64_t v38 = a1;
  LOBYTE(v39) = 0;
  uint64_t v18 = v33;
  uint64_t v17 = v34;
  swift_getAssociatedConformanceWitness();
  sub_10096D040();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v19(v16, v35, v18);
  char v40 = 1;
  sub_100157D68();
  sub_10096D040();
  uint64_t v32 = v19;
  uint64_t v20 = *((void *)&v39 + 1);
  uint64_t v21 = v12[9];
  uint64_t v35 = v16;
  uint64_t v22 = &v16[v21];
  *(void *)uint64_t v22 = v39;
  *((void *)v22 + 1) = v20;
  LOBYTE(v39) = 2;
  uint64_t v23 = v30;
  sub_10096D040();
  v32(&v35[v12[10]], v23, v18);
  char v40 = 3;
  sub_100157F34();
  sub_10096CFB0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v36);
  uint64_t v24 = v35;
  *(_OWORD *)&v35[v12[11]] = v39;
  uint64_t v25 = v28;
  (*(void (**)(uint64_t, char *, int *))(v28 + 16))(v29, v24, v12);
  sub_1000268E0((uint64_t)v38);
  return (*(uint64_t (**)(char *, int *))(v25 + 8))(v24, v12);
}

uint64_t sub_100364F08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6562 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100364FF4(char a1)
{
  if (a1) {
    return 0x776F6C6562;
  }
  else {
    return 0x656D616E656C6966;
  }
}

uint64_t sub_100365028(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v13[0] = *(void *)(a2 + 24);
  v13[1] = v4;
  type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_10096D200();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - v7;
  sub_10002689C(a1, a1[3]);
  uint64_t v9 = (uint64_t *)v13[2];
  sub_10096D590();
  uint64_t v10 = v9[1];
  uint64_t v14 = *v9;
  uint64_t v15 = v10;
  char v16 = 0;
  sub_100157BC4();
  uint64_t v11 = v13[3];
  sub_10096D1A0();
  if (!v11)
  {
    LOBYTE(v14) = 1;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100365234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for FileTreeError.CannotBounceStruct() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v7(v5, a3, AssociatedTypeWitness);
}

uint64_t sub_1003652E4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v25 = (char *)&v20 - v5;
  type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_10096D0B0();
  uint64_t v26 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v28 = a2;
  uint64_t v8 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v22 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - v9;
  sub_10002689C(a1, a1[3]);
  uint64_t v29 = v7;
  uint64_t v11 = (uint64_t)v31;
  sub_10096D570();
  if (v11) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v21 = v8;
  uint64_t v12 = v26;
  uint64_t v13 = AssociatedTypeWitness;
  char v34 = 0;
  sub_100157D68();
  sub_10096D040();
  uint64_t v14 = v33;
  uint64_t v15 = v10;
  *(void *)uint64_t v10 = v32;
  *((void *)v10 + 1) = v14;
  LOBYTE(v32) = 1;
  swift_getAssociatedConformanceWitness();
  char v16 = v25;
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v30);
  uint64_t v17 = v21;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v15[*(int *)(v21 + 36)], v16, v13);
  uint64_t v18 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v24, v15, v17);
  sub_1000268E0((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v15, v17);
}

uint64_t sub_1003656B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010099F6B0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010099F6D0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000010099F6F0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000010099F710)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1003658A0(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_10036594C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100368338(a1, a2, a3, (void (*)(unsigned char *, void, void, void))j___s9libfssync27PackageInternalLookupPolicyO4hash4intoys6HasherVz_tF);
}

unint64_t sub_100365964()
{
  return sub_100364680(*v0);
}

uint64_t sub_100365970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003644D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003659A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003659F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100365A48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003649C0(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), a3);
}

uint64_t sub_100365A68(void *a1, uint64_t a2)
{
  return sub_100364714(a1, a2);
}

BOOL sub_100365A80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ScanReturnCode.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100365A94()
{
  return ScanReturnCode.hashValue.getter(*v0);
}

void sub_100365AB8(uint64_t a1)
{
  ScanReturnCode.hash(into:)(a1, *v1);
}

Swift::Int sub_100365AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10036A388(a1, a2, a3, (void (*)(unsigned char *, void, void, void))ScanReturnCode.hash(into:));
}

uint64_t sub_100365AE0()
{
  return sub_100364FF4(*v0);
}

uint64_t sub_100365AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100364F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100365B20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = FileTree.isCaseSensitive.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100365B4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100365BA0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100365BF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003652E4(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_100365C14(void *a1, uint64_t a2)
{
  return sub_100365028(a1, a2);
}

uint64_t sub_100365C2C@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_10036AA88(a1, (uint64_t (*)(void, void))static Fields.filename.getter, a2);
}

uint64_t sub_100365C44(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100365C98(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100365CEC(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys);
}

unint64_t sub_100365D34()
{
  return sub_1003658A0(*v0);
}

uint64_t sub_100365D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003656B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100365D70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100365DC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100365E18@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100366D80(a1, *(void *)(a2 + 16), *(void (**)(char *, char *, uint64_t))(a2 + 24), (void (*)(uint64_t, uint64_t, void))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys, (uint64_t (*)(void, uint64_t, void))type metadata accessor for FileTreeError.ContentUnavailableStruct, a3);
}

uint64_t sub_100365E74(void *a1, uint64_t a2)
{
  return sub_100366A18(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys);
}

uint64_t sub_100365EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, a1, AssociatedTypeWitness);
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v9 = sub_1003ABE00(v16, v17);
    if (v3)
    {
      swift_errorRelease();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v11(a1, AssociatedTypeWitness);
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(a3, AssociatedTypeWitness);
    }
    uint64_t v13 = v9;
    unint64_t v14 = v10;
    swift_errorRelease();
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v15 = (void *)(a3 + *(int *)(result + 36));
  *uint64_t v15 = v13;
  v15[1] = v14;
  return result;
}

uint64_t sub_100366038(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010099F690)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100366120(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x44496D657469;
  }
}

uint64_t sub_100366158(void *a1, uint64_t a2)
{
  v11[0] = a2;
  type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D200();
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v11 - v4;
  sub_10002689C(a1, a1[3]);
  uint64_t v6 = v3;
  uint64_t v7 = v11[1];
  sub_10096D590();
  LOBYTE(v14) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v13;
  sub_10096D1A0();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v6);
  }
  uint64_t v10 = v12;
  long long v14 = *(_OWORD *)(v7 + *(int *)(v11[0] + 36));
  char v15 = 1;
  sub_100078E40();
  sub_10096D100();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v6);
}

uint64_t sub_100366388@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v27 = (char *)&v23 - v5;
  type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_10096D0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v26 = a2;
  uint64_t v10 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v23 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  sub_10002689C(a1, a1[3]);
  uint64_t v28 = v9;
  uint64_t v13 = v32;
  sub_10096D570();
  if (v13) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v32 = v12;
  uint64_t v14 = v25;
  LOBYTE(v33) = 0;
  uint64_t v15 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = v27;
  uint64_t v16 = v28;
  uint64_t v18 = v29;
  sub_10096D040();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = v32;
  v19(v32, v17, v15);
  char v34 = 1;
  sub_100157F34();
  sub_10096CFB0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v18);
  *(_OWORD *)&v20[*(int *)(v10 + 36)] = v33;
  uint64_t v21 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v24, v20, v10);
  sub_1000268E0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v20, v10);
}

uint64_t sub_10036676C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010099F730 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010099F750 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000010099F770 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010099F790)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_100366960(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100366A18(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 16);
  v11[0] = a2;
  a3(255, v12, v4);
  swift_getWitnessTable();
  uint64_t v5 = sub_10096D200();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - v7;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  char v19 = 0;
  swift_getAssociatedTypeWitness();
  v11[1] = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = v13;
  uint64_t v14 = v8;
  sub_10096D1A0();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v13 = v6;
  char v18 = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D1A0();
  char v17 = 2;
  sub_10096D1A0();
  char v16 = 3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D1A0();
  char v15 = 4;
  sub_10096D1A0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v14, v5);
}

uint64_t sub_100366D80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, void (*a4)(uint64_t, uint64_t, void)@<X3>, uint64_t (*a5)(void, uint64_t, void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v46 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v50 = AssociatedTypeWitness;
  uint64_t v51 = v11;
  uint64_t v12 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v47 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)&v44 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v52 = v15;
  uint64_t v53 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  long long v49 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v55 = (char *)&v44 - v19;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  v56 = (char *)&v44 - v20;
  a4(255, a2, a3);
  swift_getWitnessTable();
  uint64_t v62 = sub_10096D0B0();
  uint64_t v59 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v23 = a5(0, a2, a3);
  uint64_t v45 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v44 - v24;
  uint64_t v26 = v64;
  sub_10002689C(v64, v64[3]);
  v61 = v22;
  uint64_t v27 = v63;
  sub_10096D570();
  if (v27) {
    return sub_1000268E0((uint64_t)v26);
  }
  uint64_t v28 = v55;
  char v69 = 0;
  uint64_t v29 = v60;
  swift_getAssociatedConformanceWitness();
  uint64_t v30 = v56;
  sub_10096D040();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  uint64_t v63 = v25;
  v31(v25, v30, v29);
  char v68 = 1;
  uint64_t v32 = v52;
  swift_getAssociatedConformanceWitness();
  sub_10096D040();
  v56 = (char *)v23;
  long long v33 = v28;
  char v34 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v34(&v63[*(int *)(v23 + 36)], v33, v32);
  char v67 = 2;
  uint64_t v35 = v49;
  uint64_t v55 = 0;
  sub_10096D040();
  v34(&v63[*((int *)v56 + 10)], v35, v32);
  char v66 = 3;
  uint64_t v36 = v50;
  swift_getAssociatedConformanceWitness();
  uint64_t v37 = v48;
  sub_10096D040();
  uint64_t v38 = v56;
  long long v39 = &v63[*((int *)v56 + 11)];
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v58(v39, v37, v36);
  char v65 = 4;
  char v40 = v47;
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v62);
  uint64_t v41 = v63;
  v58(&v63[*((int *)v38 + 12)], v40, v36);
  uint64_t v42 = v45;
  (*(void (**)(uint64_t, char *, char *))(v45 + 16))(v46, v41, v38);
  sub_1000268E0((uint64_t)v64);
  return (*(uint64_t (**)(char *, char *))(v42 + 8))(v41, v38);
}

uint64_t sub_100367584(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465746365707865 && a2 == 0xEE0044496D657449;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766965636572 && a2 == 0xEE0044496D657449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003676B8(char a1)
{
  if (a1) {
    return 0x6465766965636572;
  }
  else {
    return 0x6465746365707865;
  }
}

uint64_t sub_1003676F4(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D200();
  uint64_t v10 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v9 - v4;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  char v13 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = v11;
  sub_10096D100();
  if (v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
  uint64_t v8 = v10;
  char v12 = 1;
  sub_10096D1A0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

uint64_t sub_100367918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t v8 = a3 + *(int *)(type metadata accessor for FileTreeError.ItemMismatchStruct() + 36);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v9(v8, a2, AssociatedTypeWitness);
}

uint64_t sub_100367A0C@<X0>(void *a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v30 = (char *)&v26 - v6;
  uint64_t v35 = v7;
  uint64_t v8 = sub_10096C890();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  __chkstk_darwin(v8);
  char v34 = (char *)&v26 - v9;
  type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v38 = sub_10096D0B0();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v26 - v10;
  long long v33 = a2;
  uint64_t v12 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v27 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  sub_10002689C(a1, a1[3]);
  uint64_t v37 = v11;
  uint64_t v15 = (uint64_t)v39;
  sub_10096D570();
  if (v15) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v16 = v14;
  long long v39 = a1;
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  char v41 = 0;
  uint64_t v19 = v35;
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = v34;
  sub_10096CFB0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  long long v33 = v16;
  v21(v16, v20, v17);
  char v40 = 1;
  uint64_t v22 = v30;
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  uint64_t v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v33[*(int *)(v12 + 36)], v22, v19);
  uint64_t v24 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v29, v23, v12);
  sub_1000268E0((uint64_t)v39);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v12);
}

uint64_t sub_100367E88(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726573557962 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100367F08(void *a1)
{
  type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_10096D200();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - v4;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  sub_10096D0F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100368068(void *a1)
{
  type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D0B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)sub_10002689C(a1, a1[3]);
  sub_10096D570();
  if (!v1)
  {
    uint64_t v7 = sub_10096CF80();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1000268E0((uint64_t)a1);
  return v7;
}

Swift::Int sub_100368200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10036A388(a1, a2, a3, (void (*)(unsigned char *, void, void, void))j___s9libfssync14ScanReturnCodeO4hash4intoys6HasherVz_tF);
}

uint64_t sub_100368218()
{
  return sub_100366120(*v0);
}

uint64_t sub_100368228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100366038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100368258(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003682AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100368300@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100366388(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_100368320(void *a1, uint64_t a2)
{
  return sub_100366158(a1, a2);
}

Swift::Int sub_100368338(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_10096D4B0();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_10096D500();
}

unint64_t sub_100368390()
{
  return sub_100366960(*v0);
}

uint64_t sub_10036839C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10036676C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003683CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10038EAA0();
  *a1 = result;
  return result;
}

uint64_t sub_1003683F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036844C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003684A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100366D80(a1, *(void *)(a2 + 16), *(void (**)(char *, char *, uint64_t))(a2 + 24), (void (*)(uint64_t, uint64_t, void))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys, (uint64_t (*)(void, uint64_t, void))type metadata accessor for FileTreeError.VersionConflictStruct, a3);
}

uint64_t sub_1003684FC(void *a1, uint64_t a2)
{
  return sub_100366A18(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys);
}

uint64_t sub_10036853C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368590(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003685E4(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys);
}

uint64_t sub_10036862C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368680(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003686D4(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys);
}

uint64_t sub_10036871C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368770(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003687C4(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys);
}

uint64_t sub_10036880C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368860(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003688B4(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys);
}

uint64_t sub_1003688FC()
{
  return sub_1003676B8(*v0);
}

uint64_t sub_10036890C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100367584(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10036893C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368990(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003689E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100367A0C(a1, *(char **)(a2 + 24), a3);
}

uint64_t sub_100368A04(void *a1, uint64_t a2)
{
  return sub_1003676F4(a1, a2);
}

uint64_t sub_100368A1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368A70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100368AC4(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys);
}

uint64_t sub_100368B0C()
{
  return 0x726573557962;
}

uint64_t sub_100368B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100367E88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100368B54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100368BA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100368BFC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100368068(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100368C30(void *a1)
{
  return sub_100367F08(a1);
}

void *sub_100368C50(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  swift_getErrorValue();
  uint64_t v2 = v5;
  uint64_t v3 = sub_1003ABE00(v6, v7);
  if (!v1) {
    uint64_t v2 = v3;
  }
  swift_errorRelease();
  return v2;
}

uint64_t sub_100368CE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000010099F690)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_100368D68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  type metadata accessor for FileTreeError.UploadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_10096D200();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - v7;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  uint64_t v12 = a2;
  uint64_t v13 = v11;
  sub_100078E40();
  sub_10096D100();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_100368EE8(void *a1)
{
  type metadata accessor for FileTreeError.UploadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D0B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = sub_10002689C(a1, a1[3]);
  sub_10096D570();
  if (!v1)
  {
    sub_100157F34();
    sub_10096CFB0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
  }
  sub_1000268E0((uint64_t)a1);
  return v7;
}

uint64_t sub_1003690A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000010099F730 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010099F7B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_10036918C()
{
  return 0xD000000000000016;
}

uint64_t sub_1003691C0(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D200();
  uint64_t v10 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v5 = (char *)&v9 - v4;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  char v13 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = v11;
  sub_10096D1A0();
  if (v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
  uint64_t v8 = v10;
  char v12 = 1;
  sub_10096D1A0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

uint64_t sub_1003693E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v9)((void *)(AssociatedTypeWitness - 8), a3, a1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct() + 36);

  return v9(v7, a2, AssociatedTypeWitness);
}

uint64_t sub_1003694C4@<X0>(void *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v23 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v25 = (char *)&v20 - v7;
  type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_10096D0B0();
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v26 = a2;
  uint64_t v10 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v21 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v12 = (char *)&v20 - v11;
  sub_10002689C(a1, a1[3]);
  uint64_t v29 = v9;
  char v13 = v31;
  sub_10096D570();
  if (v13) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v31 = v12;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v33 = 0;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = v25;
  sub_10096D040();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v26(v31, v16, AssociatedTypeWitness);
  char v32 = 1;
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  uint64_t v17 = v31;
  v26(&v31[*(int *)(v10 + 36)], v14, AssociatedTypeWitness);
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v17, v10);
  sub_1000268E0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v10);
}

uint64_t sub_1003698E4(uint64_t a1)
{
  return sub_1000268E0(a1);
}

uint64_t sub_10036990C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10036998C(void *a1, uint64_t a2, void (*a3)(uint64_t, void, void))
{
  a3(255, *(void *)(a2 + 16), *(void *)(a2 + 24));
  swift_getWitnessTable();
  uint64_t v4 = sub_10096D200();
  uint64_t v8 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - v5;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D1A0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v4);
}

uint64_t sub_100369B40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t (*a5)(void, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v30 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v36 = (char *)&v26 - v11;
  a4(255, a2, a3);
  swift_getWitnessTable();
  uint64_t v35 = sub_10096D0B0();
  uint64_t v31 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v13 = (char *)&v26 - v12;
  uint64_t v34 = a2;
  uint64_t v32 = a3;
  uint64_t v14 = a5(0, a2, a3);
  uint64_t v29 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - v15;
  sub_10002689C(a1, a1[3]);
  uint64_t v17 = v38;
  sub_10096D570();
  if (v17)
  {
    uint64_t v25 = (uint64_t)a1;
  }
  else
  {
    uint64_t v27 = v16;
    uint64_t v28 = v14;
    uint64_t v38 = a1;
    uint64_t v18 = v31;
    uint64_t v19 = v33;
    uint64_t v20 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    uint64_t v22 = v35;
    uint64_t v21 = v36;
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v22);
    uint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v21, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v30, v24, v28);
    uint64_t v25 = (uint64_t)v38;
  }
  return sub_1000268E0(v25);
}

uint64_t sub_100369E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v5(a2, a1, AssociatedTypeWitness);
}

unint64_t sub_100369F00()
{
  return 0xD000000000000014;
}

uint64_t sub_100369F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100368CE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100369F50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100369FA4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void *sub_100369FF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100368EE8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10036A02C(void *a1)
{
  return sub_100368D68(a1, *v1, v1[1]);
}

uint64_t sub_10036A050(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A0A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A0F8(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys);
}

uint64_t sub_10036A140()
{
  return 0x44496D657469;
}

uint64_t sub_10036A154(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A1A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A1FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100369B40(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct, a3);
}

uint64_t sub_10036A258(void *a1, uint64_t a2)
{
  return sub_10036998C(a1, a2, (void (*)(uint64_t, void, void))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys);
}

uint64_t sub_10036A298(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A2EC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A340(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys);
}

Swift::Int sub_10036A388(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_10096D4B0();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_10096D500();
}

unint64_t sub_10036A3E0()
{
  return sub_10036918C();
}

uint64_t sub_10036A3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003690A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10036A420(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A474(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A4C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003694C4(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), a3);
}

uint64_t sub_10036A4E8(void *a1, uint64_t a2)
{
  return sub_1003691C0(a1, a2);
}

uint64_t sub_10036A500(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A554(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A5A8(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys);
}

uint64_t sub_10036A5F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static Fields.filename.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10036A620(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A674(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A6C8(uint64_t a1)
{
  return sub_1003698E4(a1);
}

uint64_t sub_10036A6E8(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys);
}

uint64_t sub_10036A730(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A784(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A7D8(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys);
}

uint64_t sub_10036A820(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A874(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A8C8(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys);
}

uint64_t sub_10036A910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10036990C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10036A944(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036A998(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036A9EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100369B40(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct, a3);
}

uint64_t sub_10036AA48(void *a1, uint64_t a2)
{
  return sub_10036998C(a1, a2, (void (*)(uint64_t, void, void))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys);
}

uint64_t sub_10036AA88@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_10036AAD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10036AB28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10036AB7C(void *a1, uint64_t a2)
{
  return sub_10038EAA8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.NoContentToFetch.CodingKeys);
}

uint64_t FileTreeError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v260 = a4;
  uint64_t IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct();
  uint64_t v226 = sub_10096C890();
  uint64_t v223 = *(void *)(v226 - 8);
  uint64_t v8 = __chkstk_darwin(v226);
  v225 = (char *)&v198 - v9;
  uint64_t v227 = IsDetachedRootStruct;
  uint64_t v222 = *(void *)(IsDetachedRootStruct - 8);
  __chkstk_darwin(v8);
  v224 = (char *)&v198 - v10;
  uint64_t v11 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v219 = sub_10096C890();
  uint64_t v217 = *(void *)(v219 - 8);
  uint64_t v12 = __chkstk_darwin(v219);
  v218 = (char *)&v198 - v13;
  uint64_t v221 = v11;
  uint64_t v216 = *(void *)(v11 - 8);
  __chkstk_darwin(v12);
  v220 = (char *)&v198 - v14;
  uint64_t v15 = type metadata accessor for FileTreeError.LookupNotPermittedStruct();
  uint64_t v214 = sub_10096C890();
  uint64_t v211 = *(void *)(v214 - 8);
  uint64_t v16 = __chkstk_darwin(v214);
  v213 = (char *)&v198 - v17;
  uint64_t v215 = v15;
  uint64_t v210 = *(void *)(v15 - 8);
  __chkstk_darwin(v16);
  v212 = (char *)&v198 - v18;
  uint64_t v19 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v207 = sub_10096C890();
  uint64_t v205 = *(void *)(v207 - 8);
  uint64_t v20 = __chkstk_darwin(v207);
  v206 = (char *)&v198 - v21;
  uint64_t v209 = v19;
  uint64_t v204 = *(void *)(v19 - 8);
  __chkstk_darwin(v20);
  v208 = (char *)&v198 - v22;
  uint64_t v23 = type metadata accessor for FileTreeError.VersionConflictStruct();
  uint64_t v229 = sub_10096C890();
  uint64_t v228 = *(void *)(v229 - 8);
  uint64_t v24 = __chkstk_darwin(v229);
  v234 = (char *)&v198 - v25;
  uint64_t v235 = v23;
  uint64_t v231 = *(void *)(v23 - 8);
  __chkstk_darwin(v24);
  v230 = (char *)&v198 - v26;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v243 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v244 = (char *)&v198 - v27;
  uint64_t v267 = swift_getAssociatedTypeWitness();
  uint64_t v245 = *(void *)(v267 - 8);
  __chkstk_darwin(v267);
  v242 = (char *)&v198 - v28;
  uint64_t v29 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v233 = sub_10096C890();
  uint64_t v232 = *(void *)(v233 - 8);
  uint64_t v30 = __chkstk_darwin(v233);
  v246 = (char *)&v198 - v31;
  uint64_t v247 = v29;
  uint64_t v238 = *(void *)(v29 - 8);
  __chkstk_darwin(v30);
  v237 = (char *)&v198 - v32;
  uint64_t v33 = type metadata accessor for FileTreeError.ContentUnavailableStruct();
  uint64_t v240 = sub_10096C890();
  uint64_t v239 = *(void *)(v240 - 8);
  uint64_t v34 = __chkstk_darwin(v240);
  v250 = (char *)&v198 - v35;
  uint64_t v249 = v33;
  uint64_t v248 = *(void *)(v33 - 8);
  __chkstk_darwin(v34);
  v241 = (char *)&v198 - v36;
  uint64_t v37 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v252 = sub_10096C890();
  uint64_t v251 = *(void *)(v252 - 8);
  uint64_t v38 = __chkstk_darwin(v252);
  v257 = (char *)&v198 - v39;
  uint64_t v258 = v37;
  uint64_t v254 = *(void *)(v37 - 8);
  __chkstk_darwin(v38);
  v253 = (char *)&v198 - v40;
  uint64_t v41 = type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v256 = sub_10096C890();
  uint64_t v255 = *(void *)(v256 - 8);
  uint64_t v42 = __chkstk_darwin(v256);
  v265 = (char *)&v198 - v43;
  v268 = (int *)v41;
  uint64_t v262 = *(void *)(v41 - 8);
  __chkstk_darwin(v42);
  v261 = (char *)&v198 - v44;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v264 = sub_10096C890();
  uint64_t v263 = *(void *)(v264 - 8);
  uint64_t v46 = __chkstk_darwin(v264);
  v273 = (char *)&v198 - v47;
  uint64_t v274 = found;
  uint64_t v272 = *(void *)(found - 8);
  __chkstk_darwin(v46);
  v270 = (char *)&v198 - v48;
  uint64_t v49 = type metadata accessor for FileTreeError.CodingKeys();
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  uint64_t v50 = sub_10096D0B0();
  uint64_t v276 = *(void *)(v50 - 8);
  v277 = (char *)v50;
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v198 - v51;
  uint64_t v275 = a2;
  uint64_t v269 = a3;
  uint64_t v271 = type metadata accessor for FileTreeError();
  uint64_t v259 = *(void *)(v271 - 8);
  uint64_t v53 = __chkstk_darwin(v271);
  v203 = (uint64_t *)((char *)&v198 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = __chkstk_darwin(v53);
  v202 = (char *)&v198 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v236 = (char *)&v198 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v61 = (char *)&v198 - v60;
  uint64_t v62 = __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v198 - v63;
  uint64_t v65 = __chkstk_darwin(v62);
  char v67 = (char *)&v198 - v66;
  __chkstk_darwin(v65);
  char v69 = (char *)&v198 - v68;
  uint64_t v70 = a1[3];
  v280 = a1;
  sub_10002689C(a1, v70);
  v278 = v52;
  uint64_t v71 = v279;
  sub_10096D570();
  if (!v71)
  {
    uint64_t v279 = (uint64_t)v67;
    v200 = v64;
    v199 = v61;
    v201 = v69;
    LOBYTE(v282) = 13;
    uint64_t v72 = sub_10096D000();
    uint64_t v74 = v73;
    uint64_t v198 = 0;
    uint64_t v282 = v275;
    swift_getMetatypeMetadata();
    uint64_t v75 = sub_10096BCC0();
    if (v72 == v75 && v74 == v76)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v77 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v77 & 1) == 0)
      {
        uint64_t v91 = sub_10096CC80();
        swift_allocError();
        v93 = v92;
        sub_10002B7CC(&qword_100ACD518);
        uint64_t *v93 = v271;
        sub_10002B7CC(qword_100AD12D0);
        uint64_t v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = xmmword_100973BB0;
        v95 = WitnessTable;
        *(void *)(v94 + 56) = v49;
        *(void *)(v94 + 64) = v95;
        *(unsigned char *)(v94 + 32) = 13;
        sub_10096CC60();
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v91 - 8) + 104))(v93, enum case for DecodingError.typeMismatch(_:), v91);
        swift_willThrow();
LABEL_3:
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        return sub_1000268E0((uint64_t)v280);
      }
    }
    LOBYTE(v282) = 0;
    uint64_t v78 = v274;
    swift_getWitnessTable();
    v79 = v273;
    uint64_t v80 = (uint64_t)v277;
    v81 = v278;
    uint64_t v82 = v198;
    sub_10096CFB0();
    if (v82)
    {
      (*(void (**)(char *, uint64_t))(v276 + 8))(v81, v80);
      return sub_1000268E0((uint64_t)v280);
    }
    uint64_t v84 = v272;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v272 + 48))(v79, 1, v78) != 1)
    {
      v96 = v270;
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v270, v79, v78);
      uint64_t v97 = swift_getAssociatedTypeWitness();
      uint64_t v98 = v267;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      unint64_t v100 = AssociatedTypeWitness;
      uint64_t v101 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v98;
      unint64_t v283 = v100;
      uint64_t v284 = AssociatedConformanceWitness;
      uint64_t v285 = v101;
      type metadata accessor for FileItemVersion();
      sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v103 = v279 + *(int *)(TupleTypeMetadata3 + 48);
      (*(void (**)(void))(*(void *)(v97 - 8) + 16))();
      sub_100362B88(v78, v103);
      v104 = (uint64_t *)&v96[*(int *)(v78 + 44)];
      unint64_t v105 = v104[1];
      if (v105 >> 60 == 15) {
        uint64_t v106 = 0;
      }
      else {
        uint64_t v106 = sub_1003AB9C8(*v104, v105);
      }
      uint64_t v107 = *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(char *, uint64_t))(v272 + 8))(v270, v274);
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v108 = v279;
      *(void *)(v279 + v107) = v106;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v263 + 8))(v79, v264);
    LOBYTE(v282) = 1;
    v85 = v268;
    swift_getWitnessTable();
    v86 = v265;
    sub_10096CFB0();
    uint64_t v87 = v262;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v262 + 48))(v86, 1, v85) != 1)
    {
      uint64_t v198 = 0;
      uint64_t v112 = (*(uint64_t (**)(char *, char *, int *))(v87 + 32))(v261, v86, v85);
      __chkstk_darwin(v112);
      qmemcpy(&v198 - 6, " filename below syncability original", 36);
      strcpy((char *)v197 + 2, "alError ");
      uint64_t v282 = swift_getAssociatedTypeWitness();
      unint64_t v283 = (unint64_t)&type metadata for Filename;
      uint64_t v284 = v282;
      uint64_t v285 = sub_100033BE8(qword_100ACD7A0);
      uint64_t v286 = sub_100033BE8(&qword_100AD7360);
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v114 = v200;
      v115 = &v200[TupleTypeMetadata[12]];
      v116 = &v200[TupleTypeMetadata[16]];
      uint64_t WitnessTable = &v200[TupleTypeMetadata[20]];
      uint64_t v117 = swift_getAssociatedTypeWitness();
      uint64_t v279 = *(void *)(v117 - 8);
      v118 = *(void (**)(char *, char *, uint64_t))(v279 + 16);
      v119 = v114;
      v120 = v116;
      v121 = v115;
      v122 = v261;
      v118(v119, v261, v117);
      v123 = &v122[v85[9]];
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)v121 = *(void *)v123;
      *((void *)v121 + 1) = v124;
      v118(v120, &v122[v85[10]], v117);
      v125 = WitnessTable;
      *(_OWORD *)uint64_t WitnessTable = xmmword_10097E040;
      swift_bridgeObjectRetain();
      v126 = (uint64_t *)&v122[v85[11]];
      unint64_t v127 = v126[1];
      if (v127 >> 60 == 15)
      {
        uint64_t v128 = 0;
        uint64_t v129 = v198;
      }
      else
      {
        uint64_t v129 = v198;
        uint64_t v128 = sub_1003AB9C8(*v126, v127);
      }
      if (v129)
      {
        (*(void (**)(char *, int *))(v262 + 8))(v261, v268);
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        sub_10010DC6C(*(void *)v125, *((void *)v125 + 1));
        v130 = *(void (**)(char *, uint64_t))(v279 + 8);
        v130(v120, v117);
        swift_bridgeObjectRelease();
        v130(v200, v117);
        return sub_1000268E0((uint64_t)v280);
      }
      uint64_t v131 = TupleTypeMetadata[24];
      (*(void (**)(char *, int *))(v262 + 8))(v261, v268);
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      v132 = v200;
      *(void *)&v200[v131] = v128;
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      v111 = v201;
      (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v132, v109);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v255 + 8))(v86, v256);
    LOBYTE(v282) = 2;
    uint64_t v88 = v258;
    swift_getWitnessTable();
    v89 = v257;
    sub_10096CFB0();
    uint64_t v90 = v254;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v254 + 48))(v89, 1, v88) != 1)
    {
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      v133 = v253;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v253, v89, v88);
      uint64_t v134 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v111 = v201;
      v136 = (char *)v201 + *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v137 = *((void *)v133 + 1);
      void *v201 = *(void *)v133;
      v111[1] = v137;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v136, &v133[*(int *)(v88 + 36)], v134);
      uint64_t v109 = v271;
LABEL_29:
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v251 + 8))(v89, v252);
    type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct();
    char v287 = 14;
    swift_getWitnessTable();
    sub_10096CFB0();
    if ((v282 & 1) == 0) {
      goto LABEL_63;
    }
    LOBYTE(v282) = 3;
    uint64_t v138 = v249;
    swift_getWitnessTable();
    v139 = v250;
    sub_10096CFB0();
    uint64_t v198 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v139, 1, v138) != 1)
    {
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      v141 = v241;
      uint64_t v142 = v249;
      (*(void (**)(char *, char *))(v248 + 32))(v241, v250);
      uint64_t v143 = swift_getAssociatedTypeWitness();
      uint64_t v144 = v267;
      uint64_t v145 = swift_getAssociatedConformanceWitness();
      uint64_t WitnessTable = (char *)v145;
      uint64_t v146 = AssociatedTypeWitness;
      uint64_t v279 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v144;
      unint64_t v283 = v146;
      uint64_t v284 = v145;
      uint64_t v285 = v279;
      uint64_t v147 = type metadata accessor for FileItemVersion();
      sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v148 = swift_getTupleTypeMetadata3();
      v149 = v199;
      uint64_t v150 = (uint64_t)&v199[*(int *)(v148 + 48)];
      v278 = (char *)*(int *)(v148 + 64);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v199, v141, v143);
      uint64_t v151 = v142;
      v152 = &v141[*(int *)(v142 + 36)];
      uint64_t v153 = (uint64_t)v242;
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v242, v152, v144);
      uint64_t v154 = (uint64_t)v244;
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, &v141[*(int *)(v151 + 44)], v146);
      (*(void (**)(char *, uint64_t))(v248 + 8))(v141, v151);
      v197[1] = v279;
      v197[0] = WitnessTable;
      sub_1007D03B8(v153, 0, v154, 0, 0, 0, v144, v146, v150);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v150, 0, 1, v147);
      *(void *)&v278[(void)v149] = 0;
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      v111 = v201;
      (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v149, v109);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v239 + 8))(v250, v240);
    LOBYTE(v282) = 4;
    swift_getWitnessTable();
    uint64_t v140 = v198;
    sub_10096CFB0();
    if (!v140)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48))(v246, 1, v247) != 1)
      {
        v155 = v237;
        uint64_t v156 = v247;
        (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v237, v246, v247);
        uint64_t v157 = swift_getAssociatedTypeWitness();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v236, v155, v157);
        v158 = (uint64_t *)&v155[*(int *)(v156 + 36)];
        unint64_t v159 = v158[1];
        if (v159 >> 60 == 15) {
          uint64_t v160 = 0;
        }
        else {
          uint64_t v160 = sub_1003AB9C8(*v158, v159);
        }
        sub_100033BE8(&qword_100AD7360);
        uint64_t v165 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v247);
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        v166 = v236;
        *(void *)&v236[v165] = v160;
        uint64_t v109 = v271;
        goto LABEL_61;
      }
      (*(void (**)(char *, uint64_t))(v232 + 8))(v246, v233);
      LOBYTE(v282) = 5;
      swift_getWitnessTable();
      sub_10096CFB0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v234, 1, v235) == 1)
      {
        (*(void (**)(char *, uint64_t))(v228 + 8))(v234, v229);
        type metadata accessor for FileTreeError.CapturedContentMissingStruct();
        char v287 = 6;
        swift_getWitnessTable();
        sub_10096CFB0();
        if (v282)
        {
          type metadata accessor for FileTreeError.ItemNotEvictableStruct();
          char v287 = 7;
          swift_getWitnessTable();
          sub_10096CFB0();
          if (v282)
          {
            type metadata accessor for FileTreeError.DirectoryChangedStruct();
            char v287 = 9;
            swift_getWitnessTable();
            sub_10096CFB0();
            if (v282)
            {
              type metadata accessor for FileTreeError.DownloadCancelled();
              char v287 = 10;
              swift_getWitnessTable();
              sub_10096CFB0();
              char v161 = v282;
              if (v282 == 3)
              {
                LOBYTE(v282) = 8;
                swift_getWitnessTable();
                sub_10096CFB0();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48))(v206, 1, v209) != 1)
                {
                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                  v178 = v208;
                  uint64_t v179 = v209;
                  (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v208, v206, v209);
                  uint64_t v180 = swift_getAssociatedTypeWitness();
                  uint64_t v181 = sub_10096C890();
                  uint64_t v182 = swift_getTupleTypeMetadata2();
                  v111 = v201;
                  v183 = (char *)v201 + *(int *)(v182 + 48);
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v201, v178, v181);
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v183, &v178[*(int *)(v179 + 36)], v180);
                  uint64_t v109 = v271;
                  goto LABEL_29;
                }
                (*(void (**)(char *, uint64_t))(v205 + 8))(v206, v207);
                LOBYTE(v282) = 11;
                swift_getWitnessTable();
                sub_10096CFB0();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v213, 1, v215) != 1)
                {
                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                  v184 = v212;
                  (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v212, v213, v215);
                  uint64_t v185 = swift_getAssociatedTypeWitness();
                  v111 = v201;
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v201, v184, v185);
                  uint64_t v109 = v271;
                  goto LABEL_29;
                }
                (*(void (**)(char *, uint64_t))(v211 + 8))(v213, v214);
                type metadata accessor for FileTreeError.ItemKindMismatchStruct();
                char v287 = 12;
                swift_getWitnessTable();
                sub_10096CFB0();
                if (v282)
                {
                  type metadata accessor for FileTreeError.ItemIsFlockedStruct();
                  char v287 = 15;
                  swift_getWitnessTable();
                  sub_10096CFB0();
                  if (v282)
                  {
                    type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct();
                    char v287 = 16;
                    swift_getWitnessTable();
                    sub_10096CFB0();
                    if (v282)
                    {
                      type metadata accessor for FileTreeError.UploadCancelled();
                      char v287 = 17;
                      swift_getWitnessTable();
                      sub_10096CFB0();
                      unint64_t v162 = v283;
                      if (v283 >> 60 != 11)
                      {
                        uint64_t v186 = v282;
                        if (v283 >> 60 == 15) {
                          uint64_t v187 = 0;
                        }
                        else {
                          uint64_t v187 = sub_1003AB9C8(v282, v283);
                        }
                        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                        sub_10037C394(v186, v162);
                        v188 = v203;
                        uint64_t *v203 = v187;
                        uint64_t v109 = v271;
                        swift_storeEnumTagMultiPayload();
                        uint64_t v110 = v259;
                        v111 = v201;
                        (*(void (**)(void *, uint64_t *, uint64_t))(v259 + 32))(v201, v188, v109);
                        goto LABEL_21;
                      }
                      type metadata accessor for FileTreeError.UploadInterrupted();
                      char v287 = 18;
                      swift_getWitnessTable();
                      sub_10096CFB0();
                      if (v282)
                      {
                        LOBYTE(v282) = 19;
                        swift_getWitnessTable();
                        sub_10096CFB0();
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v218, 1, v221) != 1)
                        {
                          (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                          v189 = v220;
                          uint64_t v190 = v221;
                          (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v220, v218, v221);
                          uint64_t v191 = v267;
                          uint64_t v192 = swift_getTupleTypeMetadata2();
                          v111 = v201;
                          v193 = (char *)v201 + *(int *)(v192 + 48);
                          v194 = *(void (**)(char *, char *, uint64_t))(v245 + 32);
                          v194((char *)v201, v189, v191);
                          v194(v193, &v189[*(int *)(v190 + 36)], v191);
                          uint64_t v109 = v271;
                          goto LABEL_29;
                        }
                        (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v219);
                        type metadata accessor for FileTreeError.MaxLookupDepthStruct();
                        char v287 = 20;
                        swift_getWitnessTable();
                        sub_10096CFB0();
                        if (v282)
                        {
                          type metadata accessor for FileTreeError.CompressedFileReadFailedStruct();
                          char v287 = 21;
                          swift_getWitnessTable();
                          sub_10096CFB0();
                          if (v282)
                          {
                            type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct();
                            char v287 = 22;
                            swift_getWitnessTable();
                            sub_10096CFB0();
                            if (v282)
                            {
                              type metadata accessor for FileTreeError.ItemNotTracked();
                              char v287 = 23;
                              swift_getWitnessTable();
                              sub_10096CFB0();
                              if (v282)
                              {
                                LOBYTE(v282) = 24;
                                swift_getWitnessTable();
                                sub_10096CFB0();
                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v225, 1, v227) != 1)
                                {
                                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                                  v195 = v224;
                                  (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v224, v225, v227);
                                  uint64_t v196 = swift_getAssociatedTypeWitness();
                                  v111 = v201;
                                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v201, v195, v196);
                                  uint64_t v109 = v271;
                                  goto LABEL_29;
                                }
                                (*(void (**)(char *, uint64_t))(v223 + 8))(v225, v226);
                                type metadata accessor for FileTreeError.NoContentToFetch();
                                char v287 = 25;
                                swift_getWitnessTable();
                                sub_10096CFB0();
                                if (v282)
                                {
                                  LOBYTE(v282) = 13;
                                  sub_10096CC80();
                                  swift_allocError();
                                  uint64_t v163 = (uint64_t)v277;
                                  swift_getWitnessTable();
                                  v164 = v278;
                                  sub_10096CC50();
                                  swift_willThrow();
                                  (*(void (**)(char *, uint64_t))(v276 + 8))(v164, v163);
                                  return sub_1000268E0((uint64_t)v280);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                goto LABEL_63;
              }
              (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
              v166 = v202;
              char *v202 = v161 & 1;
              uint64_t v109 = v271;
LABEL_61:
              swift_storeEnumTagMultiPayload();
              uint64_t v110 = v259;
              v111 = v201;
              (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v166, v109);
              goto LABEL_21;
            }
          }
        }
LABEL_63:
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        v111 = v201;
        uint64_t v109 = v271;
        goto LABEL_29;
      }
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      v167 = v230;
      (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v230, v234, v235);
      uint64_t v168 = swift_getAssociatedTypeWitness();
      uint64_t v169 = v267;
      uint64_t v170 = swift_getAssociatedConformanceWitness();
      uint64_t WitnessTable = (char *)v170;
      uint64_t v171 = AssociatedTypeWitness;
      uint64_t v279 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v169;
      unint64_t v283 = v171;
      uint64_t v284 = v170;
      uint64_t v285 = v279;
      uint64_t v172 = type metadata accessor for FileItemVersion();
      sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v173 = swift_getTupleTypeMetadata3();
      uint64_t v108 = (uint64_t)v199;
      v277 = &v199[*(int *)(v173 + 48)];
      v278 = (char *)*(int *)(v173 + 64);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v199, v167, v168);
      uint64_t v174 = v235;
      uint64_t v175 = (uint64_t)v242;
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v242, &v167[*(int *)(v235 + 36)], v169);
      uint64_t v176 = (uint64_t)v244;
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, &v167[*(int *)(v174 + 44)], v171);
      (*(void (**)(char *, uint64_t))(v231 + 8))(v167, v174);
      v197[1] = v279;
      v197[0] = WitnessTable;
      uint64_t v177 = (uint64_t)v277;
      sub_1007D03B8(v175, 0, v176, 0, 0, 0, v169, v171, (uint64_t)v277);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56))(v177, 0, 1, v172);
      *(void *)&v278[v108] = 0;
LABEL_20:
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      v111 = v201;
      (*(void (**)(void *, uint64_t, uint64_t))(v259 + 32))(v201, v108, v109);
LABEL_21:
      (*(void (**)(uint64_t, void *, uint64_t))(v110 + 32))(v260, v111, v109);
      return sub_1000268E0((uint64_t)v280);
    }
    goto LABEL_3;
  }
  return sub_1000268E0((uint64_t)v280);
}

uint64_t FileTreeError.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct();
  v280 = *(void (***)(uint64_t, uint64_t))(IsDetachedRootStruct - 8);
  __chkstk_darwin(IsDetachedRootStruct);
  uint64_t v279 = (void (**)(char *, uint64_t))((char *)&v217 - v6);
  uint64_t v258 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v259 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  uint64_t v251 = (uint64_t)&v217 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v263 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  v257 = (char *)&v217 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v255 = (char *)&v217 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v253 = (char *)&v217 - v14;
  __chkstk_darwin(v13);
  unint64_t v283 = (char *)&v217 - v15;
  uint64_t v252 = type metadata accessor for FileTreeError.LookupNotPermittedStruct();
  uint64_t v250 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  uint64_t v248 = (uint64_t)&v217 - v16;
  uint64_t v256 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v254 = *(void *)(v256 - 8);
  __chkstk_darwin(v256);
  uint64_t v249 = (uint64_t)&v217 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v265 = sub_10096C890();
  uint64_t v238 = *(void *)(v265 - 8);
  uint64_t v19 = __chkstk_darwin(v265);
  v244 = (char *)&v217 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v267 = (char *)&v217 - v21;
  uint64_t v222 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  uint64_t v245 = (uint64_t)&v217 - v22;
  uint64_t v243 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v242 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  v241 = (uint64_t *)((char *)&v217 - v23);
  uint64_t v224 = type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v223 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  uint64_t v247 = (uint64_t)&v217 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_10096C890();
  __chkstk_darwin(v26 - 8);
  v225 = (char *)&v217 - v27;
  uint64_t v28 = sub_10096C890();
  __chkstk_darwin(v28 - 8);
  uint64_t v261 = (uint64_t)&v217 - v29;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v228 = *(void *)(found - 8);
  __chkstk_darwin(found);
  uint64_t v227 = (char *)&v217 - v30;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  uint64_t v262 = AssociatedTypeWitness;
  uint64_t v285 = AssociatedTypeWitness;
  uint64_t v286 = (ValueMetadata *)v25;
  uint64_t v226 = v25;
  uint64_t v287 = AssociatedConformanceWitness;
  uint64_t v288 = v32;
  uint64_t v240 = type metadata accessor for FileItemVersion();
  uint64_t v269 = sub_10096C890();
  v268 = *(void (***)(char *, char *, uint64_t))(v269 - 8);
  uint64_t v33 = __chkstk_darwin(v269);
  uint64_t v239 = (char *)&v217 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v236 = (char *)&v217 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v270 = (char *)&v217 - v38;
  uint64_t v272 = v18;
  uint64_t v273 = *(void *)(v18 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  v278 = (char *)&v217 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v277 = (char *)&v217 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v234 = (char *)&v217 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v230 = (char *)&v217 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v235 = (char *)&v217 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v271 = (char *)&v217 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v231 = (char *)&v217 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v233 = (char *)&v217 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v232 = (char *)&v217 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v260 = (char *)&v217 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v237 = (char *)&v217 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v264 = (uint64_t)&v217 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v266 = (char *)&v217 - v64;
  uint64_t v282 = a2;
  uint64_t v276 = *(void *)(a2 - 8);
  __chkstk_darwin(v63);
  uint64_t v274 = v4;
  uint64_t v275 = (uint64_t *)((char *)&v217 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for FileTreeError.CodingKeys();
  swift_getWitnessTable();
  uint64_t v66 = sub_10096D200();
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  char v69 = (char *)&v217 - v68;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  uint64_t v285 = v5;
  swift_getMetatypeMetadata();
  sub_10096BCC0();
  LOBYTE(v285) = 13;
  uint64_t v70 = v284;
  sub_10096D150();
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v72 = v277;
    uint64_t v73 = v278;
    uint64_t v284 = v69;
    uint64_t v74 = (uint64_t)v283;
    uint64_t v219 = v66;
    uint64_t v76 = (uint64_t)v279;
    uint64_t v75 = v280;
    uint64_t v220 = 0;
    uint64_t v218 = v67;
    swift_bridgeObjectRelease();
    char v77 = v275;
    (*(void (**)(uint64_t *, void, uint64_t))(v276 + 16))(v275, v281, v282);
    uint64_t v78 = v77;
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 1:
        __chkstk_darwin(EnumCaseMultiPayload);
        uint64_t v282 = v5;
        strcpy((char *)&v217 - 48, " filename below syncability originalError ");
        uint64_t v100 = v272;
        uint64_t v285 = v272;
        uint64_t v286 = &type metadata for Filename;
        uint64_t v287 = v272;
        uint64_t v288 = sub_100033BE8(qword_100ACD7A0);
        uint64_t v289 = sub_100033BE8(&qword_100AD7360);
        uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        v102 = v77;
        uint64_t v103 = (uint64_t *)((char *)v77 + TupleTypeMetadata[12]);
        uint64_t v105 = *v103;
        v104 = (void (*)(char *, char *, uint64_t))v103[1];
        unint64_t v283 = (char *)v105;
        v281 = v104;
        uint64_t v106 = (char *)v77 + TupleTypeMetadata[16];
        sub_10010DC6C(*(uint64_t *)((char *)v77 + TupleTypeMetadata[20]), *(uint64_t *)((char *)v77 + TupleTypeMetadata[20] + 8));
        uint64_t v107 = *(uint64_t *)((char *)v77 + TupleTypeMetadata[24]);
        uint64_t v108 = v273;
        uint64_t v109 = *(void (**)(char *, uint64_t *, uint64_t))(v273 + 32);
        uint64_t v110 = v237;
        v109(v237, v102, v100);
        v111 = v260;
        v109(v260, (uint64_t *)v106, v100);
        uint64_t v112 = v110;
        v113 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
        uint64_t v114 = (uint64_t)v232;
        v113(v232, v110, v100);
        uint64_t v115 = (uint64_t)v233;
        v113(v233, v111, v100);
        swift_errorRetain();
        uint64_t v116 = v247;
        uint64_t v117 = v220;
        sub_1003642B4(v114, (uint64_t)v283, (uint64_t)v281, v115, v107, v247);
        if (v117)
        {
          swift_errorRelease();
          v118 = *(void (**)(char *, uint64_t))(v108 + 8);
          v118(v111, v100);
          v118(v112, v100);
          return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v284, v219);
        }
        v201 = v112;
        LOBYTE(v285) = 1;
        uint64_t v202 = v224;
        swift_getWitnessTable();
        uint64_t v203 = v219;
        uint64_t v204 = v284;
        sub_10096D1A0();
        uint64_t v205 = v218;
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v116, v202);
        v206 = *(void (**)(char *, uint64_t))(v273 + 8);
        v206(v260, v100);
        v206(v201, v100);
        return (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v204, v203);
      case 2:
        uint64_t v120 = *v77;
        uint64_t v119 = v78[1];
        uint64_t v121 = v272;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v123 = v273;
        uint64_t v124 = v231;
        (*(void (**)(char *, char *, uint64_t))(v273 + 32))(v231, (char *)v78 + *(int *)(TupleTypeMetadata2 + 48), v121);
        uint64_t v125 = (uint64_t)v271;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v271, v124, v121);
        v126 = v241;
        sub_100365234(v120, v119, v125, v241);
        LOBYTE(v285) = 2;
        uint64_t v127 = v243;
        swift_getWitnessTable();
        uint64_t v128 = v219;
        uint64_t v129 = v284;
        sub_10096D1A0();
        (*(void (**)(void *, uint64_t))(v242 + 8))(v126, v127);
        (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v121);
        return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v129, v128);
      case 3:
        sub_100033BE8(&qword_100AD7360);
        uint64_t v130 = v272;
        uint64_t v131 = *(uint64_t *)((char *)v77 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        uint64_t v132 = v273;
        v133 = v235;
        (*(void (**)(char *, uint64_t *, uint64_t))(v273 + 32))(v235, v78, v130);
        uint64_t v134 = (uint64_t)v230;
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v230, v133, v130);
        swift_errorRetain();
        uint64_t v135 = v245;
        uint64_t v136 = v220;
        sub_100365EB4(v134, v131, v245);
        if (v136)
        {
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v130);
          return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v284, v219);
        }
        else
        {
          LOBYTE(v285) = 4;
          uint64_t v207 = v222;
          swift_getWitnessTable();
          uint64_t v208 = v219;
          uint64_t v209 = v284;
          sub_10096D1A0();
          uint64_t v210 = v218;
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v135, v207);
          (*(void (**)(char *, uint64_t))(v273 + 8))(v133, v272);
          return (*(uint64_t (**)(char *, uint64_t))(v210 + 8))(v209, v208);
        }
      case 4:
        uint64_t v137 = v265;
        uint64_t v138 = v272;
        uint64_t v139 = swift_getTupleTypeMetadata2();
        uint64_t v140 = v77;
        v141 = (char *)v77 + *(int *)(v139 + 48);
        uint64_t v142 = v238;
        uint64_t v143 = v267;
        (*(void (**)(char *, uint64_t *, uint64_t))(v238 + 32))(v267, v140, v137);
        uint64_t v144 = v234;
        uint64_t v145 = v141;
        uint64_t v146 = v273;
        (*(void (**)(char *, char *, uint64_t))(v273 + 32))(v234, v145, v138);
        uint64_t v147 = (uint64_t)v244;
        (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v244, v143, v137);
        uint64_t v148 = (uint64_t)v271;
        (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v271, v144, v138);
        uint64_t v149 = v249;
        sub_100367918(v147, v148, v249);
        LOBYTE(v285) = 8;
        uint64_t v150 = v256;
        swift_getWitnessTable();
        uint64_t v128 = v219;
        uint64_t v129 = v284;
        sub_10096D1A0();
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v149, v150);
        (*(void (**)(char *, uint64_t))(v146 + 8))(v144, v138);
        (*(void (**)(char *, uint64_t))(v142 + 8))(v267, v265);
        return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v129, v128);
      case 5:
        LOBYTE(v285) = *(unsigned char *)v77;
        char v290 = 10;
        type metadata accessor for FileTreeError.DownloadCancelled();
        swift_getWitnessTable();
        uint64_t v151 = v219;
        goto LABEL_35;
      case 6:
        uint64_t v152 = v273;
        uint64_t v153 = v72;
        uint64_t v154 = v72;
        uint64_t v155 = v272;
        (*(void (**)(char *, uint64_t *, uint64_t))(v273 + 32))(v154, v78, v272);
        uint64_t v156 = (uint64_t)v271;
        (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v271, v153, v155);
        uint64_t v157 = v248;
        sub_100369E78(v156, v248);
        LOBYTE(v285) = 11;
        uint64_t v158 = v252;
        swift_getWitnessTable();
        uint64_t v128 = v219;
        uint64_t v129 = v284;
        sub_10096D1A0();
        (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v157, v158);
        (*(void (**)(char *, uint64_t))(v152 + 8))(v153, v155);
        return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v129, v128);
      case 7:
        uint64_t v159 = v262;
        uint64_t v160 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v282 = v5;
        char v161 = v77;
        unint64_t v162 = (char *)v77 + v160;
        uint64_t v163 = v263;
        v164 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v263 + 32);
        v164(v74, v161, v159);
        uint64_t v165 = v253;
        v164((uint64_t)v253, (uint64_t *)v162, v159);
        v166 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
        uint64_t v167 = (uint64_t)v255;
        v166(v255, v74, v159);
        uint64_t v168 = (uint64_t)v257;
        v166(v257, (uint64_t)v165, v159);
        uint64_t v169 = v251;
        sub_1003693E4(v167, v168, v251);
        LOBYTE(v285) = 19;
        uint64_t v170 = v258;
        swift_getWitnessTable();
        uint64_t v171 = v219;
        sub_10096D1A0();
        (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v169, v170);
        uint64_t v172 = *(void (**)(char *, uint64_t))(v163 + 8);
        v172(v165, v159);
        v172(v283, v159);
        return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v284, v171);
      case 8:
        uint64_t v173 = v284;
        uint64_t v174 = *v78;
        swift_errorRetain();
        uint64_t v175 = v220;
        uint64_t v176 = sub_100368C50(v174);
        if (v175)
        {
          (*(void (**)(char *, uint64_t))(v218 + 8))(v173, v219);
          return swift_errorRelease();
        }
        else
        {
          uint64_t v211 = (uint64_t)v176;
          unint64_t v212 = (unint64_t)v177;
          uint64_t v285 = (uint64_t)v176;
          uint64_t v286 = v177;
          char v290 = 17;
          type metadata accessor for FileTreeError.UploadCancelled();
          swift_getWitnessTable();
          uint64_t v213 = v219;
          sub_10096D1A0();
          swift_errorRelease();
          sub_10001E9AC(v211, v212);
          return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v173, v213);
        }
      case 9:
        v178 = v75;
        uint64_t v180 = v272;
        uint64_t v179 = v273;
        (*(void (**)(char *, uint64_t *, uint64_t))(v273 + 32))(v73, v78, v272);
        uint64_t v181 = (uint64_t)v271;
        (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v271, v73, v180);
        uint64_t v182 = v76;
        sub_100369E78(v181, v76);
        LOBYTE(v285) = 24;
        uint64_t v183 = IsDetachedRootStruct;
        swift_getWitnessTable();
        uint64_t v184 = v219;
        uint64_t v185 = v284;
        sub_10096D1A0();
        v178[1](v182, v183);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v73, v180);
        return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v185, v184);
      case 10:
        char v186 = 14;
        goto LABEL_25;
      case 11:
        LOBYTE(v285) = 6;
        type metadata accessor for FileTreeError.CapturedContentMissingStruct();
        goto LABEL_34;
      case 12:
        LOBYTE(v285) = 7;
        type metadata accessor for FileTreeError.ItemNotEvictableStruct();
        goto LABEL_34;
      case 13:
        LOBYTE(v285) = 9;
        type metadata accessor for FileTreeError.DirectoryChangedStruct();
        goto LABEL_34;
      case 14:
        char v186 = 12;
LABEL_25:
        LOBYTE(v285) = v186;
        type metadata accessor for FileTreeError.ItemKindMismatchStruct();
        goto LABEL_34;
      case 15:
        LOBYTE(v285) = 15;
        type metadata accessor for FileTreeError.ItemIsFlockedStruct();
        goto LABEL_34;
      case 16:
        LOBYTE(v285) = 16;
        type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct();
        goto LABEL_34;
      case 17:
        LOBYTE(v285) = 18;
        type metadata accessor for FileTreeError.UploadInterrupted();
        goto LABEL_34;
      case 18:
        LOBYTE(v285) = 20;
        type metadata accessor for FileTreeError.MaxLookupDepthStruct();
        goto LABEL_34;
      case 19:
        LOBYTE(v285) = 21;
        type metadata accessor for FileTreeError.CompressedFileReadFailedStruct();
        goto LABEL_34;
      case 20:
        LOBYTE(v285) = 22;
        type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct();
        goto LABEL_34;
      case 21:
        LOBYTE(v285) = 23;
        type metadata accessor for FileTreeError.ItemNotTracked();
        goto LABEL_34;
      case 22:
        LOBYTE(v285) = 25;
        type metadata accessor for FileTreeError.NoContentToFetch();
LABEL_34:
        swift_getWitnessTable();
        uint64_t v151 = v219;
LABEL_35:
        uint64_t v187 = v284;
        sub_10096D1A0();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v187, v151);
        break;
      default:
        uint64_t v282 = v5;
        sub_100033BE8(&qword_100AD7360);
        uint64_t v80 = v272;
        uint64_t v81 = v269;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v83 = (char *)v77 + *(int *)(TupleTypeMetadata3 + 48);
        unint64_t v283 = *(char **)((char *)v77 + *(int *)(TupleTypeMetadata3 + 64));
        uint64_t v84 = v273;
        v85 = v266;
        (*(void (**)(char *))(v273 + 32))(v266);
        v86 = v268;
        uint64_t v87 = v270;
        v268[4](v270, v83, v81);
        (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v264, v85, v80);
        uint64_t v88 = v236;
        v281 = v86[2];
        v281(v236, v87, v81);
        uint64_t v89 = v240;
        uint64_t v90 = *(char **)(v240 - 8);
        uint64_t v91 = 1;
        v280 = (void (**)(uint64_t, uint64_t))*((void *)v90 + 6);
        int v92 = ((uint64_t (*)(char *, uint64_t, uint64_t))v280)(v88, 1, v240);
        uint64_t v279 = (void (**)(char *, uint64_t))v90;
        if (v92 == 1)
        {
          v93 = (void (**)(char *, uint64_t))v86;
          uint64_t v94 = v269;
          uint64_t v95 = v269;
          v96 = v88;
          uint64_t v97 = v262;
          uint64_t v98 = v263;
          uint64_t v99 = v261;
        }
        else
        {
          uint64_t v98 = v263;
          uint64_t v99 = v261;
          v188 = v88;
          v96 = v88;
          uint64_t v97 = v262;
          (*(void (**)(uint64_t, char *, uint64_t))(v263 + 16))(v261, v188, v262);
          uint64_t v91 = 0;
          v93 = (void (**)(char *, uint64_t))v90;
          uint64_t v95 = v89;
          uint64_t v94 = v269;
        }
        v93[1](v96, v95);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v99, v91, 1, v97);
        v189 = v239;
        v281(v239, v270, v94);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v280)(v189, 1, v89) == 1)
        {
          ((void (*)(char *, uint64_t))v268[1])(v189, v94);
          uint64_t v190 = v226;
          uint64_t v191 = *(void *)(v226 - 8);
          uint64_t v192 = 1;
          uint64_t v193 = v220;
          uint64_t v194 = v219;
          uint64_t v195 = v272;
          uint64_t v196 = found;
          uint64_t v197 = v228;
          uint64_t v198 = (uint64_t)v227;
          uint64_t v199 = (uint64_t)v225;
        }
        else
        {
          uint64_t v190 = v226;
          uint64_t v191 = *(void *)(v226 - 8);
          uint64_t v199 = (uint64_t)v225;
          (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v225, &v189[*(int *)(v89 + 56)], v226);
          v279[1](v189, v89);
          uint64_t v192 = 0;
          uint64_t v193 = v220;
          uint64_t v194 = v219;
          uint64_t v195 = v272;
          uint64_t v196 = found;
          uint64_t v197 = v228;
          uint64_t v198 = (uint64_t)v227;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v199, v192, 1, v190);
        v200 = v283;
        swift_errorRetain();
        sub_1003630F8(v264, v261, v199, v200, v198);
        if (v193)
        {
          swift_errorRelease();
          ((void (*)(char *, uint64_t))v268[1])(v270, v269);
          (*(void (**)(char *, uint64_t))(v273 + 8))(v266, v195);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v284, v194);
        }
        else
        {
          LOBYTE(v285) = 0;
          swift_getWitnessTable();
          uint64_t v214 = v284;
          sub_10096D1A0();
          uint64_t v215 = v218;
          uint64_t v216 = v270;
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v198, v196);
          ((void (*)(char *, uint64_t))v268[1])(v216, v269);
          (*(void (**)(char *, uint64_t))(v273 + 8))(v266, v195);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v215 + 8))(v214, v194);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_100370168@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FileTreeError.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_100370188(void *a1, uint64_t a2)
{
  return FileTreeError.encode(to:)(a1, a2);
}

void sub_1003701A0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  if (*(unsigned char *)(v0 + 25))
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v3 = v1;
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(v1, v2, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if (v2)
    {
      if (v2 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)v1);
      }
      else
      {
        if (v1) {
          Swift::UInt v4 = 3;
        }
        else {
          Swift::UInt v4 = 2;
        }
        sub_10096D4C0(v4);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)v1);
    }
  }
}

uint64_t sub_100370298(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void sub_1003702A8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD20B0);
  char v30 = a2;
  uint64_t v31 = (void *)sub_10096CE90();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v27 = v2;
    uint64_t v28 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        if (__OFADD__(v10++, 1)) {
          goto LABEL_27;
        }
        if (v10 >= v9)
        {
LABEL_20:
          swift_release();
          id v3 = v27;
          if (v30)
          {
            uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
            if (v26 > 63) {
              bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *uint64_t v28 = -1 << v26;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v14 = v28[v10];
        if (!v14)
        {
          int64_t v15 = v10 + 1;
          if (v10 + 1 >= v9) {
            goto LABEL_20;
          }
          unint64_t v14 = v28[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v9) {
                goto LABEL_20;
              }
              unint64_t v14 = v28[v10];
              ++v15;
              if (v14) {
                goto LABEL_17;
              }
            }
            __break(1u);
LABEL_27:
            __break(1u);
            return;
          }
          ++v10;
        }
LABEL_17:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 40 * v12;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      long long v19 = *(_OWORD *)(v16 + 16);
      char v20 = *(unsigned char *)(v16 + 32);
      char v21 = *(unsigned char *)(v16 + 33);
      uint64_t v22 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v12);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      double v25 = *((double *)v22 + 2);
      if ((v30 & 1) == 0)
      {
        long long v29 = *(_OWORD *)(v16 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v29;
      }
      v32[0] = v17;
      v32[1] = v18;
      long long v33 = v19;
      char v34 = v20;
      char v35 = v21;
      sub_10038D2C4((uint64_t)v32, v24, v23, v31, v25);
    }
  }
  swift_release();
  *id v3 = v31;
}

uint64_t sub_1003704EC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC((uint64_t *)&unk_100ACB000);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              id v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      char v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100042A48(v24, v35);
      }
      else
      {
        sub_1001FAC78((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_10096D4B0();
      sub_10096BD50();
      uint64_t result = sub_10096D500();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      int64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *int64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100042A48(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1003707EC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2078);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  int64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    id v3 = v33;
    uint64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      BOOL v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_100042A48(v30, v35);
      }
      else {
        sub_1001FAC78((uint64_t)v30, (uint64_t)v35);
      }
      sub_10096D4B0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      Swift::Int v14 = sub_10096D500();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_100042A48(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x100370C04);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    id v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100370C24(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2090);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          id v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_100042A48(v23, v34);
    }
    else {
      sub_1001FAC78((uint64_t)v23, (uint64_t)v34);
    }
    sub_10096D4B0();
    sub_10044B93C(v22);
    sub_10096BD50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10096D500();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_100042A48(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v32;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100370F30(uint64_t a1, int a2)
{
  return sub_1003715A4(a1, a2, &qword_100ACCB10, (uint64_t *)&unk_100ACDA00);
}

uint64_t sub_100370F44(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCAA8);
  char v37 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              id v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v32 = v30;
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v14 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100371264(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCBA0);
  char v36 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_41;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_41;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_41:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_48;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v35 = -1 << v33;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_50;
                }
                if (v8 >= v34) {
                  goto LABEL_41;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      Swift::UInt64 v21 = *(void *)v20;
      int v22 = *(unsigned __int8 *)(v20 + 8);
      unint64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
      if ((v36 & 1) == 0) {
        id v24 = v23;
      }
      sub_10096D4B0();
      if (v22)
      {
        if (v22 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v21);
        }
        else
        {
          if (v21) {
            Swift::UInt v25 = 3;
          }
          else {
            Swift::UInt v25 = 2;
          }
          sub_10096D4C0(v25);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v21);
      }
      uint64_t result = sub_10096D500();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v21;
      *(unsigned char *)(v14 + 8) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_48:
  *id v3 = v7;
  return result;
}

uint64_t sub_100371590(uint64_t a1, int a2)
{
  return sub_1003715A4(a1, a2, &qword_100ACCA78, &qword_100ACCA70);
}

uint64_t sub_1003715A4(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v47 = a3;
  uint64_t v8 = sub_10002B7CC(a3);
  uint64_t v45 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  sub_10002B7CC(a4);
  int v46 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v13 = result;
  if (*(void *)(v11 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(v11 + 64);
    uint64_t v44 = (void *)(v11 + 64);
    uint64_t v16 = 1 << *(unsigned char *)(v11 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    uint64_t v42 = v4;
    int64_t v43 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v19 = result + 64;
    while (1)
    {
      if (v18)
      {
        unint64_t v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v23 = v22 | (v14 << 6);
      }
      else
      {
        int64_t v24 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v44;
        if (v24 >= v43) {
          goto LABEL_42;
        }
        unint64_t v25 = v44[v24];
        ++v14;
        if (!v25)
        {
          int64_t v14 = v24 + 1;
          if (v24 + 1 >= v43) {
            goto LABEL_42;
          }
          unint64_t v25 = v44[v14];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v43)
            {
LABEL_42:
              if ((v46 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v6 = v42;
                goto LABEL_49;
              }
              uint64_t v40 = 1 << *(unsigned char *)(v11 + 32);
              if (v40 >= 64) {
                bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v44 = -1 << v40;
              }
              uint64_t v6 = v42;
              *(void *)(v11 + 16) = 0;
              break;
            }
            unint64_t v25 = v44[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v14 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_51;
                }
                if (v14 >= v43) {
                  goto LABEL_42;
                }
                unint64_t v25 = v44[v14];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v26;
          }
        }
LABEL_21:
        unint64_t v18 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      uint64_t v27 = *(void *)(v11 + 48) + 16 * v23;
      Swift::UInt64 v28 = *(void *)v27;
      int v29 = *(unsigned __int8 *)(v27 + 8);
      uint64_t v30 = *(void *)(v45 + 72);
      uint64_t v31 = *(void *)(v11 + 56) + v30 * v23;
      if (v46) {
        sub_10001AE98(v31, (uint64_t)v10, v47);
      }
      else {
        sub_10002B70C(v31, (uint64_t)v10, v47);
      }
      sub_10096D4B0();
      if (v29)
      {
        if (v29 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v28);
        }
        else
        {
          if (v28) {
            Swift::UInt v32 = 3;
          }
          else {
            Swift::UInt v32 = 2;
          }
          sub_10096D4C0(v32);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v28);
      }
      uint64_t result = sub_10096D500();
      uint64_t v33 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_50;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v19 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v20 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v19 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = *(void *)(v13 + 48) + 16 * v20;
      *(void *)uint64_t v21 = v28;
      *(unsigned char *)(v21 + 8) = v29;
      uint64_t result = sub_10001AE98((uint64_t)v10, *(void *)(v13 + 56) + v30 * v20, v47);
      ++*(void *)(v13 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_49:
  *uint64_t v6 = v13;
  return result;
}

uint64_t sub_10037196C(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002B7CC(&qword_100ACC9A8);
  int v39 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v35 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    unint64_t v37 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v36 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v20 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = v37[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v35;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v37 = -1 << v33;
              }
              id v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v21 = v37[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
      uint64_t v24 = *(void *)(v38 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v39) {
        sub_10001AE98(v25, (uint64_t)v7, (uint64_t *)&unk_100ACC9B0);
      }
      else {
        sub_10002B70C(v25, (uint64_t)v7, (uint64_t *)&unk_100ACC9B0);
      }
      uint64_t result = sub_10096D4A0();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
      uint64_t result = sub_10001AE98((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, (uint64_t *)&unk_100ACC9B0);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *id v3 = v10;
  return result;
}

uint64_t sub_100371CDC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC((uint64_t *)&unk_100ACB940);
  char v6 = a2;
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              id v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      BOOL v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_10001EBB0(v37, *((unint64_t *)&v37 + 1));
      }
      sub_10096D4B0();
      sub_10096BD50();
      uint64_t result = sub_10096D500();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v8;
  return result;
}

uint64_t sub_100371FEC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACC980);
  char v42 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          id v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100372314(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2060);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v32 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          id v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    int64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_100042A48(v23, v34);
    }
    else {
      sub_1001FAC78((uint64_t)v23, (uint64_t)v34);
    }
    sub_10096D4B0();
    sub_10096BD50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10096D500();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_100042A48(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v32;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100372678(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACC990);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_100042A48((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_100017368(v25, (uint64_t)&v38);
      sub_1001FAC78(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_10096CB10(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_100042A48(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100372990(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCB88);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          id v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    char v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_10096C820(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100372C68(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCA60);
  char v37 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              id v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_bridgeObjectRetain();
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v14 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100372F88(uint64_t a1, char a2)
{
  return sub_10037B97C(a1, a2, &qword_100ACCA58);
}

uint64_t sub_100372F94(uint64_t a1, char a2)
{
  return sub_1003735CC(a1, a2, &qword_100ACCD18);
}

uint64_t sub_100372FA0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCB98);
  char v37 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              id v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_errorRetain();
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v14 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1003732C0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACC978);
  char v37 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          id v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1003735CC(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::UInt v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  char v40 = a2;
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v39 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v37 = v3;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38) {
      break;
    }
    int64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v39 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          Swift::UInt v4 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v38) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v39 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((v40 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    sub_10096BD50();
    Swift::Int v15 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  Swift::UInt v4 = v37;
  int64_t v24 = (void *)(v6 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *Swift::UInt v4 = v8;
  return result;
}

uint64_t sub_1003738F8(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002B7CC(&qword_100ACCD38);
  int v42 = a2;
  uint64_t v9 = sub_10096CE90();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    unint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          id v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42)
    {
      sub_10038F19C(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_10038F134(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_retain();
    }
    sub_10096D4B0();
    sub_10096AE50();
    sub_10038EF3C();
    sub_10096BAD0();
    sub_10096C840();
    uint64_t result = sub_10096D500();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_10038F19C((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  id v3 = v37;
  unint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v10;
  return result;
}

uint64_t sub_100373D08(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v53 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10002B7CC(&qword_100ACCD28);
  int v51 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_10096CE90();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v45 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v43 = v2;
  int64_t v44 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v46 = v5 + 16;
  uint64_t v48 = v5;
  unint64_t v18 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    uint64_t v26 = v45;
    unint64_t v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          id v3 = v43;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    uint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v51)
    {
      sub_10038F19C(v30, (uint64_t)v9, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      sub_10038F134(v30, (uint64_t)v9, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_10096D4B0();
    sub_10096AE50();
    sub_10038EF3C();
    sub_10096BAD0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    sub_10038F19C((uint64_t)v9, *(void *)(v13 + 48) + v29 * v22, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t result = (*v18)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  id v3 = v43;
  uint64_t v26 = v45;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v13;
  return result;
}

uint64_t sub_1003741FC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCC38);
  char v40 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v38 = (void *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v18 >= v37) {
          goto LABEL_41;
        }
        unint64_t v19 = v38[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v37) {
            goto LABEL_41;
          }
          unint64_t v19 = v38[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v37)
            {
LABEL_41:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_48;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v38 = -1 << v36;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v38[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_50;
                }
                if (v8 >= v37) {
                  goto LABEL_41;
                }
                unint64_t v19 = v38[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48) + 16 * v17;
      Swift::UInt64 v22 = *(void *)v21;
      int v23 = *(unsigned __int8 *)(v21 + 8);
      uint64_t v24 = *(void *)(v5 + 56) + 32 * v17;
      uint64_t v25 = *(void *)v24;
      char v41 = *(unsigned char *)(v24 + 8);
      uint64_t v27 = *(void *)(v24 + 16);
      uint64_t v26 = *(void *)(v24 + 24);
      if ((v40 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_10096D4B0();
      if (v23)
      {
        if (v23 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v22);
        }
        else
        {
          if (v22) {
            Swift::UInt v28 = 3;
          }
          else {
            Swift::UInt v28 = 2;
          }
          sub_10096D4C0(v28);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v22);
      }
      uint64_t result = sub_10096D500();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v23;
      uint64_t v15 = *(void *)(v7 + 56) + 32 * v13;
      *(void *)uint64_t v15 = v25;
      *(unsigned char *)(v15 + 8) = v41;
      *(void *)(v15 + 16) = v27;
      *(void *)(v15 + 24) = v26;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_48:
  *id v3 = v7;
  return result;
}

uint64_t sub_100374558(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCAD0);
  char v48 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v44 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v46 = v5;
  uint64_t v47 = v7;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v49 = v13;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v43) {
      break;
    }
    Swift::UInt64 v22 = v44;
    unint64_t v23 = v44[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v43) {
        goto LABEL_33;
      }
      unint64_t v23 = v44[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v43)
        {
LABEL_33:
          swift_release();
          id v3 = v42;
          uint64_t v7 = v47;
          if ((v48 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v44[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v43) {
              goto LABEL_33;
            }
            unint64_t v23 = v44[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    int64_t v49 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = *(void *)(v5 + 48) + 56 * v20;
    id v32 = *(id *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    char v34 = *(unsigned char *)(v31 + 9);
    uint64_t v36 = *(void *)(v31 + 16);
    uint64_t v35 = *(void *)(v31 + 24);
    long long v37 = *(_OWORD *)(v31 + 32);
    char v38 = *(unsigned char *)(v31 + 48);
    char v39 = *(unsigned char *)(v31 + 49);
    uint64_t v40 = *(void *)(v30 + 8 * v20);
    if ((v48 & 1) == 0)
    {
      long long v45 = *(_OWORD *)(v31 + 32);
      sub_10009C394(*(id *)v31, *(unsigned __int8 *)(v31 + 8), *(unsigned char *)(v31 + 9));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v37 = v45;
    }
    *(void *)&long long v50 = v32;
    BYTE8(v50) = v33;
    BYTE9(v50) = v34;
    *(void *)&long long v51 = v36;
    *((void *)&v51 + 1) = v35;
    long long v52 = v37;
    LOBYTE(v53) = v38;
    HIBYTE(v53) = v39;
    uint64_t v7 = v47;
    sub_10096D4B0();
    sub_10035FDE4();
    uint64_t result = sub_10096D500();
    uint64_t v14 = -1 << *(unsigned char *)(v47 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v47 + 48) + 56 * v17;
    *(_OWORD *)uint64_t v18 = v50;
    *(_OWORD *)(v18 + 16) = v51;
    *(_OWORD *)(v18 + 32) = v52;
    *(_WORD *)(v18 + 48) = v53;
    *(void *)(*(void *)(v47 + 56) + 8 * v17) = v40;
    ++*(void *)(v47 + 16);
    uint64_t v5 = v46;
    int64_t v13 = v49;
  }
  swift_release();
  id v3 = v42;
  Swift::UInt64 v22 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v41 = 1 << *(unsigned char *)(v5 + 32);
  if (v41 >= 64) {
    bzero(v22, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *Swift::UInt64 v22 = -1 << v41;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

void sub_1003748F0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACC8F8);
  char v6 = a2;
  uint64_t v30 = (void *)sub_10096CE90();
  if (*(void *)(v5 + 16))
  {
    char v26 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v28 = (void *)(v5 + 64);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v27 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v27) {
          goto LABEL_22;
        }
        unint64_t v14 = v28[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v27) {
            goto LABEL_22;
          }
          unint64_t v14 = v28[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v27)
            {
LABEL_22:
              swift_release();
              id v3 = v26;
              if (v6)
              {
                uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
                if (v25 > 63) {
                  bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v28 = -1 << v25;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v14 = v28[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_29;
                }
                if (v10 >= v27) {
                  goto LABEL_22;
                }
                unint64_t v14 = v28[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 56 * v12;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      long long v19 = *(_OWORD *)(v16 + 16);
      char v20 = *(unsigned char *)(v16 + 32);
      char v21 = *(unsigned char *)(v16 + 33);
      uint64_t v23 = *(void *)(v16 + 40);
      uint64_t v22 = *(void *)(v16 + 48);
      double v24 = *(double *)(*(void *)(v5 + 56) + 8 * v12);
      if ((v6 & 1) == 0)
      {
        long long v29 = *(_OWORD *)(v16 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v29;
      }
      v31[0] = v17;
      v31[1] = v18;
      long long v32 = v19;
      char v33 = v20;
      char v34 = v21;
      uint64_t v35 = v23;
      uint64_t v36 = v22;
      sub_10038D524((uint64_t)v31, v30, v24);
    }
  }
  swift_release();
  *id v3 = v30;
}

uint64_t sub_100374B40(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCAC8);
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v38 = a2;
    int64_t v8 = 0;
    uint64_t v40 = (void *)(v5 + 64);
    uint64_t v41 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v18 >= v39) {
          goto LABEL_39;
        }
        unint64_t v19 = v40[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v39) {
            goto LABEL_39;
          }
          unint64_t v19 = v40[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v39)
            {
LABEL_39:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
              if (v37 >= 64) {
                bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v40 = -1 << v37;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v40[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v39) {
                  goto LABEL_39;
                }
                unint64_t v19 = v40[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 56);
      uint64_t v22 = *(void *)(v5 + 48) + 16 * v17;
      int v23 = *(unsigned __int8 *)(v22 + 8);
      Swift::UInt64 v24 = *(void *)v22;
      uint64_t v25 = (uint64_t *)(v21 + 24 * v17);
      uint64_t v26 = v25[2];
      char v27 = *((unsigned char *)v25 + 8);
      uint64_t v28 = *v25;
      sub_10096D4B0();
      if (v23)
      {
        if (v23 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v24);
        }
        else
        {
          if (v24) {
            Swift::UInt v29 = 3;
          }
          else {
            Swift::UInt v29 = 2;
          }
          sub_10096D4C0(v29);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v24);
      }
      uint64_t result = sub_10096D500();
      uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v12 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v13 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v24;
      *(unsigned char *)(v14 + 8) = v23;
      uint64_t v15 = *(void *)(v7 + 56) + 24 * v13;
      *(void *)uint64_t v15 = v28;
      *(unsigned char *)(v15 + 8) = v27;
      *(void *)(v15 + 16) = v26;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v41;
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *id v3 = v7;
  return result;
}

uint64_t sub_100374E8C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCAC0);
  char v39 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    BOOL v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              id v3 = v35;
              if (v39)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      Swift::UInt v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      uint64_t v30 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v31 = *(void *)v30;
      char v32 = *(unsigned char *)(v30 + 8);
      uint64_t v40 = *(void *)(v30 + 16);
      if ((v39 & 1) == 0) {
        id v33 = v29;
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v14 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v18;
      *(void *)uint64_t v19 = v31;
      *(unsigned char *)(v19 + 8) = v32;
      *(void *)(v19 + 16) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1003751D0(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for SyncState();
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002B7CC(&qword_100ACCA18);
  int v41 = a2;
  uint64_t v9 = sub_10096CE90();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  v37[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  swift_retain();
  int64_t v16 = 0;
  v37[1] = "";
  _OWORD v37[2] = "is_detached_root";
LABEL_9:
  if (v14)
  {
    unint64_t v22 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v23 = v22 | (v16 << 6);
    goto LABEL_31;
  }
  int64_t v24 = v16 + 1;
  if (__OFADD__(v16, 1)) {
    goto LABEL_43;
  }
  if (v24 >= v38)
  {
    swift_release();
    id v3 = (uint64_t *)v37[0];
    char v25 = v39;
    if (v41)
    {
LABEL_38:
      uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
      if (v35 >= 64) {
        bzero(v25, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v25 = -1 << v35;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    char v25 = v39;
    unint64_t v26 = v39[v24];
    ++v16;
    if (v26) {
      goto LABEL_30;
    }
    int64_t v16 = v24 + 1;
    if (v24 + 1 >= v38) {
      goto LABEL_35;
    }
    unint64_t v26 = v39[v16];
    if (v26)
    {
LABEL_30:
      unint64_t v14 = (v26 - 1) & v26;
      unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
      char v32 = *(unsigned char *)(*(void *)(v8 + 48) + v23);
      uint64_t v33 = *(void *)(v40 + 72);
      uint64_t v34 = *(void *)(v8 + 56) + v33 * v23;
      if (v41) {
        sub_10038F19C(v34, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SyncState);
      }
      else {
        sub_10038F134(v34, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SyncState);
      }
      sub_10096D4B0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      Swift::Int v17 = sub_10096D500();
      uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v20 == v29;
        if (v20 == v29) {
          unint64_t v20 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v20);
        if (v31 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v31)) + (v20 << 6);
LABEL_8:
          *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          *(unsigned char *)(*(void *)(v10 + 48) + v21) = v32;
          sub_10038F19C((uint64_t)v7, *(void *)(v10 + 56) + v33 * v21, (uint64_t (*)(void))type metadata accessor for SyncState);
          ++*(void *)(v10 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1003756DCLL);
    }
    int64_t v27 = v24 + 2;
    if (v27 < v38)
    {
      unint64_t v26 = v39[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v16 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_44;
          }
          if (v16 >= v38) {
            goto LABEL_35;
          }
          unint64_t v26 = v39[v16];
          ++v27;
          if (v26) {
            goto LABEL_30;
          }
        }
      }
      int64_t v16 = v27;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    id v3 = (uint64_t *)v37[0];
    if (v41) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *id v3 = v10;
  return result;
}

uint64_t sub_100375700(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACC9F8);
  char v40 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = v38;
    unint64_t v24 = v38[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = v38[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = v38[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    BOOL v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    uint64_t v32 = *(void *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v40 & 1) == 0) {
      id v34 = v30;
    }
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    sub_10096BD50();
    Swift::Int v14 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v36;
  unint64_t v23 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100375A3C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCA00);
  char v39 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int64_t v36 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              id v3 = v36;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v38 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      uint64_t v30 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v31 = *(void **)v30;
      long long v40 = *(_OWORD *)(v30 + 8);
      if ((v39 & 1) == 0)
      {
        swift_retain();
        id v32 = v29;
        id v33 = v31;
        id v34 = (id)v40;
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v14 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v18;
      *(void *)uint64_t v19 = v31;
      *(_OWORD *)(v19 + 8) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100375D88(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCA08);
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v38 = a2;
    int64_t v8 = 0;
    long long v40 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v39) {
          goto LABEL_39;
        }
        unint64_t v20 = v40[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v39) {
            goto LABEL_39;
          }
          unint64_t v20 = v40[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v39)
            {
LABEL_39:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
              if (v37 >= 64) {
                bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v40 = -1 << v37;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v40[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v39) {
                  goto LABEL_39;
                }
                unint64_t v20 = v40[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 16 * v18;
      uint64_t v23 = *(void *)(v5 + 48) + v22;
      uint64_t v24 = *(void *)(v5 + 56) + v22;
      int v25 = *(unsigned __int8 *)(v23 + 8);
      Swift::UInt64 v26 = *(void *)v23;
      char v27 = *(unsigned char *)(v24 + 8);
      uint64_t v28 = *(void *)v24;
      sub_10096D4B0();
      if (v25)
      {
        if (v25 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v26);
        }
        else
        {
          if (v26) {
            Swift::UInt v29 = 3;
          }
          else {
            Swift::UInt v29 = 2;
          }
          sub_10096D4C0(v29);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v26);
      }
      uint64_t result = sub_10096D500();
      uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v12 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v13 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = 16 * v13;
      uint64_t v15 = *(void *)(v7 + 48) + v14;
      *(void *)uint64_t v15 = v26;
      *(unsigned char *)(v15 + 8) = v25;
      uint64_t v16 = *(void *)(v7 + 56) + v14;
      *(void *)uint64_t v16 = v28;
      *(unsigned char *)(v16 + 8) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *id v3 = v7;
  return result;
}

uint64_t sub_1003760C8(uint64_t a1, int a2)
{
  return sub_1003715A4(a1, a2, &qword_100ACCA30, &qword_100ACCA28);
}

uint64_t sub_1003760DC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2058);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_51;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_52;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = v9[v17];
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        break;
      }
      unint64_t v18 = v9[v13];
      if (!v18)
      {
        int64_t v19 = v17 + 2;
        if (v19 >= v33) {
          break;
        }
        unint64_t v18 = v9[v19];
        if (!v18)
        {
          while (1)
          {
            int64_t v13 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_53;
            }
            if (v13 >= v33) {
              goto LABEL_46;
            }
            unint64_t v18 = v9[v13];
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v19;
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_22:
    unsigned int v20 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
    int64_t v21 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (a2) {
      sub_100042A48(v21, v35);
    }
    else {
      sub_1001FAC78((uint64_t)v21, (uint64_t)v35);
    }
    sub_10096D4B0();
    switch((v20 >> 4) & 3)
    {
      case 1u:
        sub_10096D4C0(1uLL);
        sub_1003FFDD4((uint64_t)v34, v20 & 0xCF);
        break;
      case 2u:
        sub_10096D4C0(4uLL);
        sub_10096BD50();
        swift_bridgeObjectRelease();
        break;
      case 3u:
        switch(v20)
        {
          case '1':
            Swift::UInt v22 = 3;
            break;
          case '2':
            Swift::UInt v22 = 5;
            break;
          case '3':
            Swift::UInt v22 = 6;
            break;
          case '4':
            Swift::UInt v22 = 7;
            break;
          case '5':
            Swift::UInt v22 = 8;
            break;
          default:
            Swift::UInt v22 = 2;
            break;
        }
        sub_10096D4C0(v22);
        break;
      default:
        sub_10096D4C0(0);
        sub_1003FFDD4((uint64_t)v34, v20);
        break;
    }
    Swift::Int v23 = sub_10096D500();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v27 = 0;
    unint64_t v28 = (unint64_t)(63 - v24) >> 6;
    do
    {
      if (++v26 == v28 && (v27 & 1) != 0)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        JUMPOUT(0x1003764ECLL);
      }
      BOOL v29 = v26 == v28;
      if (v26 == v28) {
        unint64_t v26 = 0;
      }
      v27 |= v29;
      uint64_t v30 = *(void *)(v12 + 8 * v26);
    }
    while (v30 == -1);
    unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
    sub_100042A48(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
LABEL_46:
  swift_release();
  id v3 = v2;
  if (a2)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_51:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100376514(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2068);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_61;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_62;
  }
  if (v17 >= v11)
  {
    swift_release();
    id v3 = v33;
    unint64_t v18 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_57:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_54;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      Swift::UInt v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
      if (a2) {
        sub_100042A48(v22, v35);
      }
      else {
        sub_1001FAC78((uint64_t)v22, (uint64_t)v35);
      }
      sub_10096D4B0();
      if (v21 >> 2 == 55)
      {
        sub_10096D4C0(1uLL);
      }
      else if (v21 >> 2 == 63)
      {
LABEL_27:
        sub_10096D4C0(0);
      }
      else
      {
        sub_10096D4C0(2uLL);
        switch(v21 >> 5)
        {
          case 1u:
            sub_10096D4C0(2uLL);
            goto LABEL_39;
          case 2u:
            switch(v21)
            {
              case 'A':
                sub_10096D4C0(3uLL);
                break;
              case 'B':
                sub_10096D4C0(4uLL);
                break;
              case 'C':
                sub_10096D4C0(5uLL);
                break;
              default:
                goto LABEL_27;
            }
            break;
          case 3u:
            switch(v21)
            {
              case 'a':
                sub_10096D4C0(7uLL);
                break;
              case 'b':
                sub_10096D4C0(8uLL);
                break;
              case 'c':
                sub_10096D4C0(9uLL);
                break;
              default:
                sub_10096D4C0(6uLL);
                break;
            }
            break;
          case 4u:
            if (v21 == 128) {
              sub_10096D4C0(0xAuLL);
            }
            else {
              sub_10096D4C0(0xBuLL);
            }
            break;
          default:
            sub_10096D4C0(1uLL);
LABEL_39:
            sub_10096BD50();
            swift_bridgeObjectRelease();
            break;
        }
      }
      Swift::Int v23 = sub_10096D500();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          sub_100042A48(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      JUMPOUT(0x100376A04);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_63;
          }
          if (v13 >= v11) {
            goto LABEL_54;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_54:
    swift_release();
    id v3 = v33;
    if (a2) {
      goto LABEL_57;
    }
  }
LABEL_61:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100376A38(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2070);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_59;
  }
  uint64_t v34 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_60;
  }
  if (v17 >= v11)
  {
    swift_release();
    id v3 = v34;
    unint64_t v18 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_55:
      uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
      if (v32 >= 64) {
        bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v32;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v35 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_52;
    }
    unint64_t v19 = *(void *)(v35 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      Swift::UInt v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
      if (a2) {
        sub_100042A48(v22, v36);
      }
      else {
        sub_1001FAC78((uint64_t)v22, (uint64_t)v36);
      }
      sub_10096D4B0();
      switch(v21 >> 5)
      {
        case 1u:
          sub_10096D4C0(2uLL);
          goto LABEL_35;
        case 2u:
          switch(v21)
          {
            case 'A':
              Swift::UInt v23 = 3;
              break;
            case 'B':
              Swift::UInt v23 = 4;
              break;
            case 'C':
              Swift::UInt v23 = 5;
              break;
            default:
              Swift::UInt v23 = 0;
              break;
          }
          goto LABEL_42;
        case 3u:
          switch(v21)
          {
            case 'a':
              Swift::UInt v23 = 7;
              break;
            case 'b':
              Swift::UInt v23 = 8;
              break;
            case 'c':
              Swift::UInt v23 = 9;
              break;
            default:
              Swift::UInt v23 = 6;
              break;
          }
          goto LABEL_42;
        case 4u:
          if (v21 == 128) {
            Swift::UInt v23 = 10;
          }
          else {
            Swift::UInt v23 = 11;
          }
LABEL_42:
          sub_10096D4C0(v23);
          break;
        default:
          sub_10096D4C0(1uLL);
LABEL_35:
          sub_10096BD50();
          swift_bridgeObjectRelease();
          break;
      }
      Swift::Int v24 = sub_10096D500();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = v24 & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
        if (v31 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          sub_100042A48(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      JUMPOUT(0x100376EDCLL);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v35 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_61;
          }
          if (v13 >= v11) {
            goto LABEL_52;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_52:
    swift_release();
    id v3 = v34;
    if (a2) {
      goto LABEL_55;
    }
  }
LABEL_59:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100376F10(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002B7CC((uint64_t *)&unk_100ACCA40);
  unint64_t v10 = (void *)sub_10096CE90();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              id v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_10001AE98(v24, (uint64_t)v8, &qword_100AD65C0);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_10002B70C(v24, (uint64_t)v8, &qword_100AD65C0);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_10038D78C((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_1003771B0(uint64_t a1, char a2)
{
  return sub_10037B97C(a1, a2, &qword_100ACCA50);
}

uint64_t sub_1003771BC(uint64_t a1, char a2)
{
  return sub_1003771D4(a1, a2, &qword_100AD2080);
}

uint64_t sub_1003771C8(uint64_t a1, char a2)
{
  return sub_1003771D4(a1, a2, &qword_100AD2088);
}

uint64_t sub_1003771D4(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::UInt v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  int64_t v33 = v3;
  uint64_t v34 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v12) {
      break;
    }
    unint64_t v20 = (void *)(v6 + 64);
    unint64_t v21 = *(void *)(v34 + 8 * v19);
    ++v15;
    if (!v21)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v12) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v15);
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v12)
        {
LABEL_34:
          swift_release();
          Swift::UInt v4 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v15 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v12) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v34 + 8 * v15);
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v22;
      }
    }
LABEL_21:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    char v23 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
    uint64_t v24 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v18);
    if (a2) {
      sub_100042A48(v24, v35);
    }
    else {
      sub_1001FAC78((uint64_t)v24, (uint64_t)v35);
    }
    sub_10096D4B0();
    sub_10096BD50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10096D500();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v8 + 48) + v16) = v23;
    uint64_t result = (uint64_t)sub_100042A48(v35, (_OWORD *)(*(void *)(v8 + 56) + 32 * v16));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  Swift::UInt v4 = v33;
  unint64_t v20 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
  if (v32 >= 64) {
    bzero(v20, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v32;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::UInt v4 = v8;
  return result;
}

uint64_t sub_100377510(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCA88);
  char v40 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              id v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = *(void *)(v5 + 48) + 32 * v21;
      BOOL v30 = *(void **)v29;
      uint64_t v31 = *(void **)(v29 + 8);
      uint64_t v32 = *(void **)(v29 + 16);
      char v33 = *(unsigned char *)(v29 + 24);
      uint64_t v34 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
      uint64_t v35 = *v34;
      uint64_t v41 = v34[1];
      if ((v40 & 1) == 0)
      {
        sub_10009C004(v30, v31, v32, v33);
        swift_bridgeObjectRetain();
      }
      sub_10096D4B0();
      sub_100273638((uint64_t)v42, v30, v31, v32, v33);
      uint64_t result = sub_10096D500();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v7 + 48) + 32 * v17;
      *(void *)uint64_t v18 = v30;
      *(void *)(v18 + 8) = v31;
      *(void *)(v18 + 16) = v32;
      *(unsigned char *)(v18 + 24) = v33;
      int64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v17);
      *int64_t v19 = v35;
      v19[1] = v41;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_10037784C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCA90);
  char v42 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v37 = v2;
    int64_t v8 = 0;
    int64_t v39 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v38) {
          goto LABEL_33;
        }
        unint64_t v21 = v39[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v21 = v39[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_33:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v37;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v39 = -1 << v36;
              }
              id v3 = v37;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v21 = v39[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 48 * v19;
      long long v29 = *(_OWORD *)v27;
      long long v28 = *(_OWORD *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 32);
      char v31 = *(unsigned char *)(v27 + 40);
      char v32 = *(unsigned char *)(v27 + 41);
      char v33 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v35 = *v33;
      uint64_t v34 = v33[1];
      if ((v42 & 1) == 0)
      {
        long long v40 = *(_OWORD *)v27;
        long long v41 = *(_OWORD *)(v27 + 16);
        swift_bridgeObjectRetain();
        long long v29 = v40;
        long long v28 = v41;
      }
      v43[0] = v29;
      v43[1] = v28;
      uint64_t v44 = v30;
      char v45 = v31;
      char v46 = v32;
      sub_10096D4B0();
      sub_1002739A4();
      uint64_t result = sub_10096D500();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_10001AE98((uint64_t)v43, *(void *)(v7 + 48) + 48 * v16, &qword_100ACC9E0);
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v35;
      v17[1] = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *id v3 = v7;
  return result;
}

uint64_t sub_100377B7C(uint64_t a1, char a2)
{
  return sub_100379AE4(a1, a2, &qword_100AD7420, (void (*)(uint64_t, unsigned char *))sub_1001E9E64);
}

uint64_t sub_100377B9C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCB80);
  char v42 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_51;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v14 = v5;
  uint64_t v41 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    if (v19 >= v39) {
      break;
    }
    int64_t v20 = v40;
    unint64_t v21 = v40[v19];
    ++v13;
    if (!v21)
    {
      int64_t v13 = v19 + 1;
      if (v19 + 1 >= v39) {
        goto LABEL_44;
      }
      unint64_t v21 = v40[v13];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v39)
        {
LABEL_44:
          swift_release();
          id v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_51;
          }
          goto LABEL_45;
        }
        unint64_t v21 = v40[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v13 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_53;
            }
            if (v13 >= v39) {
              goto LABEL_44;
            }
            unint64_t v21 = v40[v13];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v22;
      }
    }
LABEL_21:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_22:
    uint64_t v23 = 8 * v18;
    uint64_t v24 = *(void *)(*(void *)(v14 + 48) + v23);
    uint64_t v25 = *(void *)(*(void *)(v14 + 56) + v23);
    if ((v42 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    uint64_t v26 = *(void **)(v24 + 16);
    uint64_t v27 = *(unsigned __int8 *)(v24 + 24);
    if (*(unsigned char *)(v24 + 25))
    {
      sub_10096D4C0(1uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      id v28 = v26;
      sub_10096BD50();
      uint64_t v14 = v41;
      swift_bridgeObjectRelease();
      sub_1000D30C4(v26, v27, 1);
    }
    else
    {
      sub_10096D4C0(0);
      if (v27)
      {
        if (v27 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0((Swift::UInt64)v26);
        }
        else
        {
          if (v26) {
            Swift::UInt v29 = 3;
          }
          else {
            Swift::UInt v29 = 2;
          }
          sub_10096D4C0(v29);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0((Swift::UInt32)v26);
      }
    }
    uint64_t result = sub_10096D500();
    uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v11 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v31) & ~*(void *)(v11 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v11 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v15 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v24;
    *(void *)(*(void *)(v7 + 56) + v16) = v25;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v38;
  int64_t v20 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_51;
  }
LABEL_45:
  uint64_t v37 = 1 << *(unsigned char *)(v41 + 32);
  if (v37 >= 64) {
    bzero(v20, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v20 = -1 << v37;
  }
  *(void *)(v41 + 16) = 0;
LABEL_51:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100377F78(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCB78);
  char v39 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((v39 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    sub_10096BD50();
    Swift::Int v14 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1003782A8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCD40);
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    unint64_t v31 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v31;
                goto LABEL_41;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v30;
              }
              id v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v22 = *(void *)(v5 + 56) + 16 * v17;
      if (a2) {
        sub_10009CB44(v22, (uint64_t)v32);
      }
      else {
        sub_100347A00(v22, (uint64_t)v32);
      }
      uint64_t result = sub_10096D4A0();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      uint64_t result = sub_10009CB44((uint64_t)v32, *(void *)(v7 + 56) + 16 * v15);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *id v3 = v7;
  return result;
}

uint64_t sub_10037856C(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = a3(0);
  uint64_t v8 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  long long v51 = (char *)&v44 - v9;
  uint64_t v10 = *v4;
  sub_10002B7CC(a4);
  int v50 = a2;
  uint64_t v11 = sub_10096CE90();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  char v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  char v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  unint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    char v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    unint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    *uint64_t v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  char v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_100378958(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002B7CC(&qword_100ACCCF0);
  uint64_t v10 = (void *)sub_10096CE90();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              id v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_10001AE98(v24, (uint64_t)v8, &qword_100AD65C0);
        id v18 = *(id *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_10002B70C(v24, (uint64_t)v8, &qword_100AD65C0);
        id v18 = *(id *)(*(void *)(v9 + 56) + 8 * v20);
      }
      uint64_t result = sub_10038D78C((uint64_t)v8, (uint64_t)v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_100378BF4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002B7CC(&qword_100ACCCD8);
  uint64_t v10 = (void *)sub_10096CE90();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              id v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_10001AE98(v24, (uint64_t)v8, &qword_100AD65C0);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_10002B70C(v24, (uint64_t)v8, &qword_100AD65C0);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_errorRetain();
      }
      uint64_t result = sub_10038D78C((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_100378E94(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCCE0);
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          id v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_errorRetain();
    }
    uint64_t result = sub_10096C820(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_10037916C(uint64_t a1, char a2)
{
  return sub_10007E7F4(a1, a2, &qword_100ACCAF0);
}

uint64_t sub_100379178(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCC60);
  char v36 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_errorRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100379490(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::UInt v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  char v38 = a2;
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v35 = v3;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v37 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              Swift::UInt v4 = v35;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 8 * v22;
      uint64_t v31 = *(void **)(*(void *)(v6 + 48) + v30);
      uint64_t v32 = *(void *)(*(void *)(v6 + 56) + v30);
      if ((v38 & 1) == 0)
      {
        id v33 = v31;
        swift_retain();
      }
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v15 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v8 + 48) + v20) = v31;
      *(void *)(*(void *)(v8 + 56) + v20) = v32;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *Swift::UInt v4 = v8;
  return result;
}

uint64_t sub_1003797AC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD20C8);
  char v36 = a2;
  uint64_t v6 = sub_10096CE90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100379AC4(uint64_t a1, char a2)
{
  return sub_100379AE4(a1, a2, &qword_100AD20F0, (void (*)(uint64_t, unsigned char *))sub_1001E9E64);
}

uint64_t sub_100379AE4(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_10002B7CC(a3);
  char v38 = a2;
  uint64_t v9 = sub_10096CE90();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    unint64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      int64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_10009CA78(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_10096D4B0();
      sub_10096BD50();
      uint64_t result = sub_10096D500();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *unint64_t v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_100379E04(uint64_t a1, char a2)
{
  return sub_100379E1C(a1, a2, &qword_100AD20E8);
}

uint64_t sub_100379E10(uint64_t a1, char a2)
{
  return sub_100379E1C(a1, a2, qword_100AD2100);
}

uint64_t sub_100379E1C(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::UInt v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  char v38 = a2;
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          Swift::UInt v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_10096D4B0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  Swift::UInt v4 = v35;
  int64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *Swift::UInt v4 = v8;
  return result;
}

uint64_t sub_10037A124(uint64_t a1, char a2)
{
  return sub_10037AAE0(a1, a2, &qword_100ACCCA0, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_10037A144(uint64_t a1, char a2)
{
  return sub_10037AAE0(a1, a2, &qword_100ACCCA8, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_10037A164(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::UInt v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  char v36 = a2;
  uint64_t v7 = sub_10096CE90();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    unint64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    int64_t v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    int64_t v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_100042A48(v23, v37);
    }
    else
    {
      sub_1001FAC78((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    sub_10096BD50();
    Swift::Int v25 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_100042A48(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::UInt v4 = v8;
  return result;
}

uint64_t sub_10037A49C(uint64_t a1, char a2)
{
  return sub_10037AAE0(a1, a2, &qword_100ACCC90, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_10037A4BC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100AD2098);
  uint64_t v6 = (void *)sub_10096CE90();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      unint64_t v20 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v15);
      if (a2) {
        sub_100042A48(v20, v22);
      }
      else {
        sub_1001FAC78((uint64_t)v20, (uint64_t)v22);
      }
      uint64_t result = (uint64_t)sub_10038DA0C(v19, v22, v6);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v6;
  return result;
}

uint64_t sub_10037A6AC(uint64_t a1, char a2)
{
  return sub_10037AAE0(a1, a2, &qword_100ACCC98, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_10037A6CC(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for VFSItem(0);
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10002B7CC(&qword_100AD20E0);
  int v42 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    unint64_t v40 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    char v38 = v2;
    int64_t v39 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v21 >= v39) {
          goto LABEL_42;
        }
        unint64_t v22 = v40[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_42;
          }
          unint64_t v22 = v40[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_42:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v38;
                goto LABEL_49;
              }
              uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
              if (v37 >= 64) {
                bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v40 = -1 << v37;
              }
              id v3 = v38;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_51;
                }
                if (v11 >= v39) {
                  goto LABEL_42;
                }
                unint64_t v22 = v40[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(v8 + 48) + 16 * v20;
      Swift::UInt64 v25 = *(void *)v24;
      int v26 = *(unsigned __int8 *)(v24 + 8);
      uint64_t v27 = *(void *)(v41 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v42) {
        sub_10038F19C(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      }
      else {
        sub_10038F134(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      }
      sub_10096D4B0();
      if (v26)
      {
        if (v26 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v25);
        }
        else
        {
          if (v25) {
            Swift::UInt v29 = 3;
          }
          else {
            Swift::UInt v29 = 2;
          }
          sub_10096D4C0(v29);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v25);
      }
      uint64_t result = sub_10096D500();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_50;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v17 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v10 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v25;
      *(unsigned char *)(v18 + 8) = v26;
      uint64_t result = sub_10038F19C((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17, type metadata accessor for VFSItem);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_49:
  *id v3 = v10;
  return result;
}

uint64_t sub_10037AAC0(uint64_t a1, char a2)
{
  return sub_10037AAE0(a1, a2, &qword_100ACCC88, (void (*)(uint64_t))&Hasher._combine(_:));
}

uint64_t sub_10037AAE0(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  sub_10002B7CC(a3);
  uint64_t result = sub_10096CE90();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    char v34 = a2;
    int64_t v10 = 0;
    BOOL v35 = (void *)(v7 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v7 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v7 + 64;
        if (v20 >= v14) {
          goto LABEL_31;
        }
        unint64_t v21 = v35[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v21 = v35[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v5 = v4;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v7 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v35 = -1 << v33;
              }
              uint64_t v5 = v4;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v35[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v10 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v21 = v35[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = 8 * v19;
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + v23);
      uint64_t v25 = *(void *)(*(void *)(v7 + 56) + v23);
      sub_10096D4B0();
      a4(v24);
      uint64_t result = sub_10096D500();
      uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v9 + 48) + v17) = v24;
      *(void *)(*(void *)(v9 + 56) + v17) = v25;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_10037ADB8(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_10002B7CC(&qword_100ACCAB0);
  char v35 = a2;
  uint64_t v36 = (void *)sub_10096CE90();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    BOOL v31 = (void *)(v4 + 64);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v30 = (unint64_t)(v5 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v9 = 0;
    uint64_t v34 = v4;
    while (1)
    {
      if (v7)
      {
        unint64_t v19 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v21 >= v30) {
          goto LABEL_23;
        }
        unint64_t v22 = v31[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v30) {
            goto LABEL_23;
          }
          unint64_t v22 = v31[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v30)
            {
LABEL_23:
              swift_release();
              if ((v35 & 1) == 0) {
                break;
              }
              uint64_t v27 = 1 << *(unsigned char *)(v4 + 32);
              if (v27 >= 64) {
                bzero(v31, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v31 = -1 << v27;
              }
              unint64_t v28 = v29;
              *(void *)(v4 + 16) = 0;
              uint64_t result = swift_release();
              goto LABEL_29;
            }
            unint64_t v22 = v31[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_31;
                }
                if (v9 >= v30) {
                  goto LABEL_23;
                }
                unint64_t v22 = v31[v9];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_20:
        unint64_t v7 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      int64_t v50 = v9;
      uint64_t v24 = *(void *)(v4 + 48) + 16 * v20;
      if (v35)
      {
        uint64_t v33 = *(void **)v24;
        LODWORD(v11) = *(unsigned __int8 *)(v24 + 8);
        int v12 = *(unsigned __int8 *)(v24 + 9);
        uint64_t v25 = *(void *)(v4 + 56) + 848 * v20;
        sub_10001AE98(v25, (uint64_t)__dst, &qword_100ACD980);
        char v38 = *(unsigned char *)(v25 + 496);
        char v39 = *(unsigned char *)(v25 + 497);
        uint64_t v44 = *(void *)(v25 + 504);
        char v37 = *(unsigned char *)(v25 + 512);
        uint64_t v41 = *(void *)(v25 + 520);
        char v40 = *(unsigned char *)(v25 + 528);
        uint64_t v47 = *(void *)(v25 + 536);
        uint64_t v48 = *(void *)(v25 + 552);
        char v42 = *(unsigned char *)(v25 + 544);
        char v43 = *(unsigned char *)(v25 + 560);
        uint64_t v15 = *(void *)(v25 + 568);
        char v45 = *(unsigned char *)(v25 + 576);
        char v46 = *(unsigned char *)(v25 + 592);
        char v18 = *(unsigned char *)(v25 + 593);
        uint64_t v26 = v25 + 600;
        char v49 = *(unsigned char *)(v25 + 594);
        uint64_t v17 = *(void *)(v25 + 584);
        sub_10001AE98(v26, (uint64_t)v51, &qword_100AD0EA0);
        sub_10001AE98((uint64_t)__dst, (uint64_t)v53, &qword_100ACD980);
        sub_10001AE98((uint64_t)v51, (uint64_t)v54, &qword_100AD0EA0);
        unint64_t v16 = v33;
      }
      else
      {
        int64_t v10 = *(void **)v24;
        uint64_t v11 = *(unsigned __int8 *)(v24 + 8);
        int v12 = *(unsigned __int8 *)(v24 + 9);
        memcpy(__dst, (const void *)(*(void *)(v4 + 56) + 848 * v20), sizeof(__dst));
        char v49 = BYTE2(__dst[74]);
        unint64_t v32 = v7;
        char v13 = BYTE1(__dst[74]);
        uint64_t v14 = __dst[73];
        uint64_t v15 = __dst[71];
        char v45 = __dst[72];
        char v46 = __dst[74];
        uint64_t v47 = __dst[67];
        uint64_t v48 = __dst[69];
        char v42 = __dst[68];
        char v43 = __dst[70];
        uint64_t v41 = __dst[65];
        uint64_t v44 = __dst[63];
        char v39 = BYTE1(__dst[62]);
        char v40 = __dst[66];
        char v37 = __dst[64];
        char v38 = __dst[62];
        sub_10009C394(v10, v11, v12);
        sub_10038ED74((uint64_t)__dst);
        sub_10001AE98((uint64_t)__dst, (uint64_t)v53, &qword_100ACD980);
        sub_10001AE98((uint64_t)&__dst[75], (uint64_t)v54, &qword_100AD0EA0);
        unint64_t v16 = v10;
        uint64_t v17 = v14;
        char v18 = v13;
        unint64_t v7 = v32;
      }
      sub_10001AE98((uint64_t)v53, (uint64_t)__dst, &qword_100ACD980);
      LOBYTE(__dst[62]) = v38;
      BYTE1(__dst[62]) = v39;
      LOBYTE(__dst[64]) = v37;
      __dst[63] = v44;
      __dst[65] = v41;
      LOBYTE(__dst[66]) = v40;
      __dst[67] = v47;
      LOBYTE(__dst[68]) = v42;
      __dst[69] = v48;
      LOBYTE(__dst[70]) = v43;
      __dst[71] = v15;
      LOBYTE(__dst[72]) = v45;
      __dst[73] = v17;
      LOBYTE(__dst[74]) = v46;
      BYTE1(__dst[74]) = v18;
      BYTE2(__dst[74]) = v49;
      sub_10001AE98((uint64_t)v54, (uint64_t)&__dst[75], &qword_100AD0EA0);
      memcpy(v55, __dst, 0x350uLL);
      uint64_t result = (uint64_t)sub_10038DB90(v16, v11 | (v12 << 8), v55, v36);
      uint64_t v4 = v34;
      int64_t v9 = v50;
    }
  }
  uint64_t result = swift_release();
  unint64_t v28 = v29;
LABEL_29:
  *unint64_t v28 = v36;
  return result;
}

uint64_t sub_10037B250(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10002B7CC(&qword_100AD20A0);
  int v42 = a2;
  uint64_t v10 = sub_10096CE90();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    char v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    char v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    char v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              id v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_10038EF3C();
      uint64_t result = sub_10096BAC0();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *id v3 = v11;
  return result;
}

uint64_t sub_10037B644(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCC08);
  char v36 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_41;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_41;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_41:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_48;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v33;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_50;
                }
                if (v8 >= v34) {
                  goto LABEL_41;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      Swift::UInt64 v21 = *(void *)v20;
      int v22 = *(unsigned __int8 *)(v20 + 8);
      unint64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
      if ((v36 & 1) == 0) {
        id v24 = v23;
      }
      sub_10096D4B0();
      if (v22)
      {
        if (v22 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v21);
        }
        else
        {
          if (v21) {
            Swift::UInt v25 = 3;
          }
          else {
            Swift::UInt v25 = 2;
          }
          sub_10096D4C0(v25);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v21);
      }
      uint64_t result = sub_10096D500();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v21;
      *(unsigned char *)(v14 + 8) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_48:
  *id v3 = v7;
  return result;
}

uint64_t sub_10037B970(uint64_t a1, char a2)
{
  return sub_10037B97C(a1, a2, &qword_100ACCC18);
}

uint64_t sub_10037B97C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10002B7CC(a3);
  char v36 = a2;
  uint64_t result = sub_10096CE90();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v35 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v9 << 6);
      }
      else
      {
        int64_t v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v18 >= v34) {
          goto LABEL_41;
        }
        unint64_t v19 = v35[v18];
        ++v9;
        if (!v19)
        {
          int64_t v9 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_41;
          }
          unint64_t v19 = v35[v9];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v34)
            {
LABEL_41:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_48;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v33;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v19 = v35[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v9 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_50;
                }
                if (v9 >= v34) {
                  goto LABEL_41;
                }
                unint64_t v19 = v35[v9];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      uint64_t v21 = *(void *)(v6 + 48) + 16 * v17;
      Swift::UInt64 v22 = *(void *)v21;
      int v23 = *(unsigned __int8 *)(v21 + 8);
      uint64_t v24 = *(void *)(*(void *)(v6 + 56) + 8 * v17);
      if ((v36 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_10096D4B0();
      if (v23)
      {
        if (v23 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v22);
        }
        else
        {
          if (v22) {
            Swift::UInt v25 = 3;
          }
          else {
            Swift::UInt v25 = 2;
          }
          sub_10096D4C0(v25);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v22);
      }
      uint64_t result = sub_10096D500();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v8 + 48) + 16 * v14;
      *(void *)uint64_t v15 = v22;
      *(unsigned char *)(v15 + 8) = v23;
      *(void *)(*(void *)(v8 + 56) + 8 * v14) = v24;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_48:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_10037BCAC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10002B7CC(&qword_100ACCC10);
  uint64_t result = sub_10096CE90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    uint64_t v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_39;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_39;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_39:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v32;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v34) {
                  goto LABEL_39;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      int v21 = *(unsigned __int8 *)(v20 + 8);
      Swift::UInt64 v22 = *(void *)v20;
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_10096D4B0();
      if (v21)
      {
        if (v21 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v22);
        }
        else
        {
          if (v22) {
            Swift::UInt v24 = 3;
          }
          else {
            Swift::UInt v24 = 2;
          }
          sub_10096D4C0(v24);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v22);
      }
      uint64_t result = sub_10096D500();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *id v3 = v7;
  return result;
}

_OWORD *sub_10037BFD0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10000DDD0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10091AE6C();
      goto LABEL_7;
    }
    sub_1003704EC(v15, a4 & 1);
    unint64_t v21 = sub_10000DDD0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    int64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_1000268E0((uint64_t)v19);
    return sub_100042A48(a1, v19);
  }
LABEL_13:
  sub_10038DD10(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.NoContentToFetch()
{
  return sub_10014D080();
}

uint64_t sub_10037C394(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_10001E9AC(a1, a2);
  }
  return a1;
}

uint64_t sub_10037C3A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10037C3C4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = AssociatedTypeWitness;
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = swift_getAssociatedTypeWitness();
    unint64_t v6 = v5;
    uint64_t v16 = v4;
    uint64_t v17 = (void *)swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int64_t v19 = (void *)swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t v7 = sub_10096C890();
    if (v8 > 0x3F)
    {
      return v7;
    }
    else
    {
      uint64_t v9 = v3 + 64;
      swift_getTupleTypeLayout3();
      uint64_t v23 = &v22;
      uint64_t v16 = v9;
      uint64_t v17 = &unk_10097E158;
      uint64_t AssociatedConformanceWitness = v9;
      int64_t v19 = &unk_10097E170;
      uint64_t v20 = "\b";
      swift_getTupleTypeLayout();
      Swift::UInt v24 = &v21;
      swift_getTupleTypeLayout2();
      uint64_t v25 = &v15;
      swift_getTupleTypeLayout2();
      unint64_t v26 = &v14;
      uint64_t v1 = sub_10096C890();
      if (v10 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        unint64_t v27 = &v13;
        char v28 = &unk_10097E188;
        uint64_t v29 = v9;
        if (v6 > 0x3F)
        {
          return v4;
        }
        else
        {
          swift_getTupleTypeLayout2();
          BOOL v30 = &v12;
          uint64_t v31 = "\b";
          uint64_t v32 = v9;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v1;
}

void *sub_10037C6B4(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v113 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v2;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = v11 | v5 | 7;
  unint64_t v108 = v12 + v3;
  uint64_t v112 = v4;
  uint64_t v13 = *(unsigned int *)(v4 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  if (v14 <= 0x7FFFFFFE) {
    int v15 = 2147483646;
  }
  else {
    int v15 = v14;
  }
  int v111 = v15;
  uint64_t v16 = *(void *)(v4 + 64);
  uint64_t v17 = v16 + 7;
  unint64_t v18 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v11 + 8 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v19 = ((v12 + v3) & ~v12) + v18 + 8;
  unint64_t v20 = v3 + 7;
  unint64_t v21 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(_DWORD *)(v8 + 80);
  unint64_t v23 = ((((v3 + 7 + ((v22 + 16 + v21) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v24 = v21 + 8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v25 = v3;
  }
  else {
    size_t v25 = v3 + 1;
  }
  uint64_t v26 = v16 + v5;
  unint64_t v27 = (v26 & ~(unint64_t)v5) + v16;
  if (v3 > v19) {
    unint64_t v19 = v3;
  }
  if (v23 <= ((v22 + 16) & ~v22) + v3) {
    unint64_t v28 = ((v22 + 16) & ~v22) + v3;
  }
  else {
    unint64_t v28 = v23;
  }
  size_t v109 = v25 + v22;
  if (v24 <= ((v25 + v22) & ~v22) + v3) {
    unint64_t v24 = ((v25 + v22) & ~v22) + v3;
  }
  if (v19 <= v28) {
    unint64_t v19 = v28;
  }
  if (v27 > v24) {
    unint64_t v24 = v27;
  }
  if (v24 > v19) {
    unint64_t v19 = v24;
  }
  if (v19 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v19;
  }
  if (v29 > 3) {
    goto LABEL_30;
  }
  unsigned int v30 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
  uint64_t v31 = 2;
  if (v30 > 0xFFF5) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xF5) {
LABEL_30:
  }
    uint64_t v31 = 1;
  unint64_t v32 = v11 | v5 | v22;
  if (v32 > 7
    || ((*(_DWORD *)(v9 + 80) | v5 | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (unint64_t)(v31 + v29) > 0x18)
  {
    uint64_t v36 = *(void *)a2;
    *a1 = *(void *)a2;
    char v37 = (void *)(v36 + ((v32 + 16) & (v32 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8)));
    swift_retain();
    return v37;
  }
  if (v29 > 3) {
    goto LABEL_37;
  }
  unsigned int v33 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
  if (v33 > 0xFFF5)
  {
    unsigned int v34 = *(_DWORD *)&a2[v29];
    unsigned int v35 = v34 - 10;
    if (v34 < 0xA) {
      goto LABEL_57;
    }
    goto LABEL_44;
  }
  if (v33 <= 0xF5)
  {
LABEL_37:
    unsigned int v34 = a2[v29];
    unsigned int v35 = v34 - 10;
    if (v34 < 0xA) {
      goto LABEL_57;
    }
LABEL_44:
    if (v29 <= 3) {
      uint64_t v39 = v29;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a2;
        if (v29 < 4) {
          goto LABEL_55;
        }
        goto LABEL_56;
      case 2:
        int v40 = *(unsigned __int16 *)a2;
        if (v29 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 3:
        int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v29 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 4:
        int v40 = *(_DWORD *)a2;
        if (v29 < 4) {
LABEL_55:
        }
          v40 |= v35 << (8 * v29);
LABEL_56:
        unsigned int v34 = v40 + 10;
        break;
      default:
        goto LABEL_57;
    }
    goto LABEL_57;
  }
  unsigned int v34 = *(unsigned __int16 *)&a2[v29];
  unsigned int v35 = v34 - 10;
  if (v34 >= 0xA) {
    goto LABEL_44;
  }
LABEL_57:
  uint64_t v41 = ~v22;
  switch(v34)
  {
    case 0u:
      uint64_t v42 = v17;
      uint64_t v103 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
      uint64_t v104 = v11 + 8;
      uint64_t v105 = *(void *)(v7 - 8);
      uint64_t v106 = v7;
      size_t __n = v18;
      uint64_t v110 = v29;
      uint64_t v43 = ~v12;
      uint64_t v44 = ~v11;
      char v37 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      char v45 = (char *)(((unint64_t)a1 + v108) & v43);
      char v46 = (char *)((unint64_t)&a2[v108] & v43);
      if (v13 == v111)
      {
        int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48))(v46, v13, v113);
      }
      else
      {
        v83 = (uint64_t *)((unint64_t)&v46[v42] & 0xFFFFFFFFFFFFFFF8);
        if (v14 <= 0x7FFFFFFE)
        {
          uint64_t v84 = v42;
          uint64_t v85 = *v83;
          if ((unint64_t)*v83 >= 0xFFFFFFFF) {
            LODWORD(v85) = -1;
          }
          if ((v85 + 1) >= 2) {
            goto LABEL_122;
          }
          goto LABEL_124;
        }
        int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v105 + 48))(((unint64_t)v83 + v104) & v44, v10, v106);
      }
      if (v47)
      {
LABEL_122:
        size_t v91 = __n;
        memcpy(v45, v46, __n);
        goto LABEL_125;
      }
      uint64_t v84 = v42;
      v83 = (uint64_t *)((unint64_t)&v46[v42] & 0xFFFFFFFFFFFFFFF8);
LABEL_124:
      uint64_t v92 = v84;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v45, v46, v113);
      v93 = (void *)((unint64_t)&v45[v92] & 0xFFFFFFFFFFFFFFF8);
      void *v93 = *v83;
      unint64_t v94 = ((unint64_t)v93 + v104) & v44;
      unint64_t v95 = ((unint64_t)v83 + v104) & v44;
      v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16);
      swift_bridgeObjectRetain();
      v96(v94, v95, v106);
      uint64_t v97 = (void *)((v103 + v94) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v98 = (void *)((v103 + v95) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v97 = *v98;
      uint64_t v99 = (void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v100 = (void *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v99 = *v100;
      v99[1] = v100[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v91 = __n;
LABEL_125:
      uint64_t v101 = *(void *)&v46[v91];
      swift_errorRetain();
      *(void *)&v45[v91] = v101;
      if (v110 <= 3)
      {
        unsigned int v102 = ((1 << (8 * v110)) | 0xCu) >> (8 * v110);
        if (v102 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v110) = 0;
          return v37;
        }
        if (v102 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v110) = 0;
          return v37;
        }
      }
      *((unsigned char *)a1 + v110) = 0;
      return v37;
    case 1u:
      uint64_t v50 = v29;
      long long v51 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16);
      char v37 = a1;
      v51(a1, a2, AssociatedTypeWitness);
      uint64_t v52 = (void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      __int16 v53 = (void *)((unint64_t)&a2[v3 + 7] & 0xFFFFFFFFFFFFFFF8);
      void *v52 = *v53;
      v52[1] = v53[1];
      uint64_t v54 = ((unint64_t)v52 + v22 + 16) & v41;
      uint64_t v55 = ((unint64_t)v53 + v22 + 16) & v41;
      swift_bridgeObjectRetain();
      v51((void *)v54, (unsigned __int8 *)v55, AssociatedTypeWitness);
      unint64_t v56 = (v20 + v54) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v57 = (uint64_t *)((v20 + v55) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = *v57;
      if (HIDWORD(*v57) > 0x80000000)
      {
        *(_OWORD *)unint64_t v56 = *(_OWORD *)v57;
      }
      else
      {
        unint64_t v59 = v57[1];
        sub_10018B584(*v57, v59);
        *(void *)unint64_t v56 = v58;
        *(void *)(v56 + 8) = v59;
      }
      uint64_t v86 = *(void *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)((v56 + 23) & 0xFFFFFFFFFFFFFFF8) = v86;
      if (v50 <= 3)
      {
        unsigned int v87 = ((1 << (8 * v50)) | 0xCu) >> (8 * v50);
        if (v87 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v50) = 1;
          return v37;
        }
        if (v87 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v50) = 1;
          return v37;
        }
      }
      *((unsigned char *)a1 + v50) = 1;
      return v37;
    case 2u:
      uint64_t v60 = *((void *)a2 + 1);
      uint64_t v61 = v29;
      char v37 = a1;
      *a1 = *(void *)a2;
      a1[1] = v60;
      uint64_t v62 = ((unint64_t)a1 + v22 + 16) & v41;
      uint64_t v63 = (unint64_t)&a2[v22 + 16] & v41;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v64(v62, v63, AssociatedTypeWitness);
      if (v61 <= 3)
      {
        unsigned int v65 = ((1 << (8 * v61)) | 0xCu) >> (8 * v61);
        if (v65 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v61) = 2;
          return v37;
        }
        if (v65 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v61) = 2;
          return v37;
        }
      }
      *((unsigned char *)a1 + v61) = 2;
      return v37;
    case 3u:
      char v37 = a1;
      uint64_t v66 = v29;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v67 = *(void *)((unint64_t)&a2[v3 + 7] & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) = v67;
      if (v66 <= 3)
      {
        unsigned int v68 = ((1 << (8 * v66)) | 0xCu) >> (8 * v66);
        if (v68 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v66) = 3;
          return v37;
        }
        if (v68 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v66) = 3;
          return v37;
        }
      }
      *((unsigned char *)a1 + v66) = 3;
      return v37;
    case 4u:
      uint64_t v69 = v29;
      uint64_t v70 = v8;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(a2, 1, AssociatedTypeWitness))
      {
        size_t v71 = v25;
        char v37 = a1;
        memcpy(a1, a2, v71);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 16))(((unint64_t)a1 + v109) & v41, (unint64_t)&a2[v109] & v41, AssociatedTypeWitness);
      }
      else
      {
        uint64_t v89 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v70 + 16);
        char v37 = a1;
        v89(a1, a2, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v89((void *)(((unint64_t)a1 + v109) & v41), (unsigned __int8 *)((unint64_t)&a2[v109] & v41), AssociatedTypeWitness);
      }
      if (v69 <= 3)
      {
        unsigned int v90 = ((1 << (8 * v69)) | 0xCu) >> (8 * v69);
        if (v90 > 0xFFF5)
        {
          *(_DWORD *)((char *)v37 + v69) = 4;
          return v37;
        }
        if (v90 > 0xF5)
        {
          *(_WORD *)((char *)v37 + v69) = 4;
          return v37;
        }
      }
      *((unsigned char *)v37 + v69) = 4;
      return v37;
    case 5u:
      char v37 = a1;
      *(unsigned char *)a1 = *a2;
      if (v29 <= 3)
      {
        unsigned int v72 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
        if (v72 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v29) = 5;
          return v37;
        }
        if (v72 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v29) = 5;
          return v37;
        }
      }
      *((unsigned char *)a1 + v29) = 5;
      return v37;
    case 6u:
      char v37 = a1;
      uint64_t v73 = v29;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      if (v73 <= 3)
      {
        unsigned int v74 = ((1 << (8 * v73)) | 0xCu) >> (8 * v73);
        if (v74 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v73) = 6;
          return v37;
        }
        if (v74 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v73) = 6;
          return v37;
        }
      }
      *((unsigned char *)a1 + v73) = 6;
      return v37;
    case 7u:
      uint64_t v75 = ~v6;
      uint64_t v76 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v112 + 16);
      char v37 = a1;
      uint64_t v77 = v29;
      v76(a1, a2, v113);
      v76((void *)(((unint64_t)a1 + v26) & v75), (unsigned __int8 *)((unint64_t)&a2[v26] & v75), v113);
      if (v77 <= 3)
      {
        unsigned int v78 = ((1 << (8 * v77)) | 0xCu) >> (8 * v77);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v77) = 7;
          return v37;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v77) = 7;
          return v37;
        }
      }
      *((unsigned char *)a1 + v77) = 7;
      return v37;
    case 8u:
      uint64_t v81 = *(void *)a2;
      uint64_t v82 = v29;
      swift_errorRetain();
      char v37 = a1;
      *a1 = v81;
      if (v82 > 3) {
        goto LABEL_95;
      }
      unsigned int v88 = ((1 << (8 * v82)) | 0xCu) >> (8 * v82);
      if (v88 > 0xFFF5)
      {
        *(_DWORD *)((char *)a1 + v82) = 8;
        return v37;
      }
      if (v88 <= 0xF5) {
LABEL_95:
      }
        *((unsigned char *)a1 + v82) = 8;
      else {
        *(_WORD *)((char *)a1 + v82) = 8;
      }
      return v37;
    case 9u:
      char v37 = a1;
      uint64_t v79 = v29;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      if (v79 <= 3)
      {
        unsigned int v80 = ((1 << (8 * v79)) | 0xCu) >> (8 * v79);
        if (v80 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v79) = 9;
          return v37;
        }
        if (v80 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v79) = 9;
          return v37;
        }
      }
      *((unsigned char *)a1 + v79) = 9;
      return v37;
    default:
      if (v29 > 3) {
        goto LABEL_64;
      }
      unsigned int v48 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
      uint64_t v49 = 2;
      if (v48 > 0xFFF5) {
        uint64_t v49 = 4;
      }
      if (v48 <= 0xF5) {
LABEL_64:
      }
        uint64_t v49 = 1;
      char v37 = a1;
      memcpy(a1, a2, v49 + v29);
      return v37;
  }
}

uint64_t sub_10037D37C(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v2 = *(void *)(v57 + 64);
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v53 - 8);
  uint64_t v55 = v3;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t result = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(result - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v4 | v7 | 7;
  unint64_t v9 = v8 + v2;
  uint64_t v10 = *(unsigned int *)(v3 + 84);
  uint64_t v11 = *(unsigned int *)(v6 + 84);
  if (v10 <= v11) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v3 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    int v13 = 2147483646;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = *(void *)(v3 + 64);
  uint64_t v15 = v14 + 7;
  unint64_t v16 = ((v8 + v2) & ~v8)
      + ((((*(void *)(*(void *)(result - 8) + 64) + 7 + ((v7 + 8 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16
      + 8;
  unint64_t v17 = (v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(unsigned __int8 *)(v57 + 80);
  unint64_t v19 = ((((v2 + 7 + ((v18 + 16 + v17) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v20 = ((v18 + 16) & ~v18) + v2;
  unint64_t v21 = v17 + 8;
  if (*(_DWORD *)(v57 + 84)) {
    unint64_t v22 = v2;
  }
  else {
    unint64_t v22 = v2 + 1;
  }
  uint64_t v23 = v22 + v18;
  unint64_t v24 = ((v22 + v18) & ~v18) + v2;
  uint64_t v25 = v14 + v4;
  unint64_t v26 = ((v14 + v4) & ~v4) + v14;
  if (v2 > v16) {
    unint64_t v16 = v2;
  }
  if (v19 > v20) {
    unint64_t v20 = v19;
  }
  if (v21 <= v24) {
    unint64_t v21 = v24;
  }
  if (v16 <= v20) {
    unint64_t v16 = v20;
  }
  if (v26 > v21) {
    unint64_t v21 = v26;
  }
  if (v21 > v16) {
    unint64_t v16 = v21;
  }
  if (v16 <= 8) {
    unint64_t v16 = 8;
  }
  if (v16 > 3) {
    goto LABEL_27;
  }
  unsigned int v27 = ((1 << (8 * v16)) | 0xCu) >> (8 * v16);
  if (v27 > 0xFFF5)
  {
    unsigned int v28 = *(_DWORD *)&a1[v16];
  }
  else
  {
    if (v27 <= 0xF5)
    {
LABEL_27:
      unsigned int v28 = a1[v16];
      goto LABEL_30;
    }
    unsigned int v28 = *(unsigned __int16 *)&a1[v16];
  }
LABEL_30:
  unsigned int v29 = v28 - 10;
  uint64_t v51 = v23;
  if (v28 >= 0xA)
  {
    if (v16 <= 3) {
      uint64_t v30 = v16;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *a1;
        if (v16 >= 4) {
          goto LABEL_46;
        }
        goto LABEL_40;
      case 2:
        int v31 = *(unsigned __int16 *)a1;
        if (v16 >= 4) {
          goto LABEL_46;
        }
        goto LABEL_40;
      case 3:
        int v31 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v16 < 4) {
          goto LABEL_40;
        }
        goto LABEL_46;
      case 4:
        int v31 = *(_DWORD *)a1;
        if (v16 < 4)
        {
LABEL_40:
          unsigned int v28 = (v31 | (v29 << (8 * v16))) + 10;
        }
        else
        {
LABEL_46:
          unsigned int v28 = v31 + 10;
          if (v28 > 9) {
            return result;
          }
        }
        break;
      default:
        break;
    }
  }
  uint64_t v32 = ~v18;
  switch(v28)
  {
    case 0u:
      uint64_t v36 = v15;
      uint64_t v49 = v7 + 8;
      uint64_t v50 = *(void *)(result - 8);
      uint64_t v52 = result;
      uint64_t v37 = ~v8;
      uint64_t v38 = ~v7;
      unint64_t v39 = v9;
      (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(a1, AssociatedTypeWitness);
      unint64_t v40 = (unint64_t)&a1[v39] & v37;
      if (v10 == v13)
      {
        int v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v40, v10, v53);
LABEL_69:
        if (v41) {
          goto LABEL_72;
        }
        int v47 = (uint64_t *)((v36 + v40) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_71;
      }
      int v47 = (uint64_t *)((v36 + v40) & 0xFFFFFFFFFFFFFFF8);
      if (v12 > 0x7FFFFFFE)
      {
        int v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48))(((unint64_t)v47 + v49) & v38, v11, v52);
        goto LABEL_69;
      }
      uint64_t v48 = *v47;
      if ((unint64_t)*v47 >= 0xFFFFFFFF) {
        LODWORD(v48) = -1;
      }
      if ((v48 + 1) < 2)
      {
LABEL_71:
        (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v40, v53);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v50 + 8))(((unint64_t)v47 + v49) & v38, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_72:
      return swift_errorRelease();
    case 1u:
      uint64_t v42 = *(void (**)(unsigned __int8 *, uint64_t))(v57 + 8);
      v42(a1, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      unint64_t v43 = (((unint64_t)&a1[v2 + 7] & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & v32;
      v42((unsigned __int8 *)v43, AssociatedTypeWitness);
      unint64_t v44 = (v2 + 7 + v43) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(void *)v44) <= 0x80000000) {
        sub_1000CF144(*(void *)v44, *(void *)(v44 + 8));
      }
      goto LABEL_72;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v34 = (unint64_t)&a1[v18 + 16] & v32;
      unsigned int v33 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8);
      goto LABEL_44;
    case 3u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_72;
    case 4u:
      int v45 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v57 + 48))(a1, 1, AssociatedTypeWitness);
      char v46 = *(void (**)(unsigned __int8 *, uint64_t))(v57 + 8);
      if (!v45)
      {
        unint64_t v56 = *(void (**)(unsigned __int8 *, uint64_t))(v57 + 8);
        v46(a1, AssociatedTypeWitness);
        char v46 = v56;
      }
      return ((uint64_t (*)(unint64_t, uint64_t))v46)((unint64_t)&a1[v51] & v32, AssociatedTypeWitness);
    case 6u:
    case 9u:
      unsigned int v33 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8);
      uint64_t v34 = (uint64_t)a1;
LABEL_44:
      uint64_t v35 = AssociatedTypeWitness;
      goto LABEL_60;
    case 7u:
      uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v3 + 8);
      v58(a1, v53);
      uint64_t v34 = (unint64_t)&a1[v25] & ~v4;
      uint64_t v35 = v53;
      unsigned int v33 = (uint64_t (*)(uint64_t, uint64_t))v58;
LABEL_60:
      return v33(v34, v35);
    case 8u:
      goto LABEL_72;
    default:
      return result;
  }
}

void *sub_10037DAA4(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v114 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v113 = v5;
  uint64_t v11 = *(unsigned int *)(v5 + 84);
  uint64_t v12 = *(unsigned int *)(v8 + 84);
  if (v11 <= v12) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  int v112 = v14;
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = v15 + 7;
  unint64_t v17 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v9 + 8 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v18 = ((v10 + v4) & ~v10) + v17 + 8;
  unint64_t v19 = v4 + 7;
  unint64_t v20 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v22 = ((((v4 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v23 = ((v21 + 16) & ~v21) + v4;
  unint64_t v24 = v20 + 8;
  if (*(_DWORD *)(v3 + 84)) {
    size_t v25 = v4;
  }
  else {
    size_t v25 = v4 + 1;
  }
  size_t __n = v25;
  size_t v26 = v25 + v21;
  unint64_t v27 = ((v25 + v21) & ~v21) + v4;
  uint64_t v28 = v15 + v6;
  unint64_t v29 = ((v15 + v6) & ~v6) + v15;
  if (v4 > v18) {
    unint64_t v18 = v4;
  }
  if (v22 > v23) {
    unint64_t v23 = v22;
  }
  if (v24 <= v27) {
    unint64_t v24 = v27;
  }
  if (v18 <= v23) {
    unint64_t v18 = v23;
  }
  if (v29 > v24) {
    unint64_t v24 = v29;
  }
  if (v24 > v18) {
    unint64_t v18 = v24;
  }
  if (v18 <= 8) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = v18;
  }
  if (v30 > 3) {
    goto LABEL_28;
  }
  unsigned int v31 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
  if (v31 <= 0xFFF5)
  {
    if (v31 > 0xF5)
    {
      unsigned int v32 = *(unsigned __int16 *)&a2[v30];
LABEL_29:
      unsigned int v33 = a2;
      unsigned int v34 = v32 - 10;
      if (v32 >= 0xA) {
        goto LABEL_32;
      }
      goto LABEL_46;
    }
LABEL_28:
    unsigned int v32 = a2[v30];
    goto LABEL_29;
  }
  unsigned int v33 = a2;
  unsigned int v32 = *(_DWORD *)&a2[v30];
  unsigned int v34 = v32 - 10;
  if (v32 >= 0xA)
  {
LABEL_32:
    if (v30 <= 3) {
      uint64_t v35 = v30;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *v33;
        if (v30 < 4) {
          goto LABEL_44;
        }
        goto LABEL_45;
      case 2:
        int v36 = *(unsigned __int16 *)v33;
        if (v30 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 3:
        int v36 = *(unsigned __int16 *)v33 | (v33[2] << 16);
        if (v30 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 4:
        int v36 = *(_DWORD *)v33;
        if (v30 < 4) {
LABEL_44:
        }
          v36 |= v34 << (8 * v30);
LABEL_45:
        unsigned int v32 = v36 + 10;
        break;
      default:
        break;
    }
  }
LABEL_46:
  uint64_t v37 = ~v21;
  switch(v32)
  {
    case 0u:
      uint64_t v38 = v16;
      uint64_t v106 = v9 + 8;
      uint64_t v107 = *(void *)(v7 - 8);
      uint64_t v108 = v7;
      size_t v109 = v17;
      size_t __na = v30;
      uint64_t v39 = ~v10;
      uint64_t v104 = *(void *)(v107 + 64) + 7;
      uint64_t v105 = ~v9;
      unint64_t v40 = a1;
      int v41 = v33;
      unint64_t v42 = v10 + v4;
      (*(void (**)(void *))(v3 + 16))(a1);
      unint64_t v43 = (char *)(((unint64_t)a1 + v42) & v39);
      unint64_t v44 = (char *)((unint64_t)&v41[v42] & v39);
      if (v11 == v112)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v44, v11, v114)) {
          goto LABEL_112;
        }
LABEL_111:
        size_t v91 = v109;
        memcpy(v43, v44, v109);
        goto LABEL_114;
      }
      uint64_t v84 = (uint64_t *)((unint64_t)&v44[v38] & 0xFFFFFFFFFFFFFFF8);
      if (v13 <= 0x7FFFFFFE)
      {
        uint64_t v85 = v38;
        uint64_t v86 = *v84;
        if ((unint64_t)*v84 >= 0xFFFFFFFF) {
          LODWORD(v86) = -1;
        }
        if ((v86 + 1) < 2) {
          goto LABEL_113;
        }
        goto LABEL_111;
      }
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v107 + 48))(((unint64_t)v84 + v106) & v105, v12, v108))
      {
        goto LABEL_111;
      }
LABEL_112:
      uint64_t v85 = v38;
      uint64_t v84 = (uint64_t *)((unint64_t)&v44[v38] & 0xFFFFFFFFFFFFFFF8);
LABEL_113:
      uint64_t v92 = v85;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v43, v44, v114);
      v93 = (void *)((unint64_t)&v43[v92] & 0xFFFFFFFFFFFFFFF8);
      void *v93 = *v84;
      unint64_t v94 = ((unint64_t)v93 + v106) & v105;
      unint64_t v95 = ((unint64_t)v84 + v106) & v105;
      v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 16);
      swift_bridgeObjectRetain();
      v96(v94, v95, v108);
      uint64_t v97 = (void *)((v104 + v94) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v98 = (void *)((v104 + v95) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v97 = *v98;
      uint64_t v99 = (void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v100 = (void *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v99 = *v100;
      v99[1] = v100[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v91 = v109;
LABEL_114:
      uint64_t v101 = *(void *)&v44[v91];
      swift_errorRetain();
      *(void *)&v43[v91] = v101;
      if (__na <= 3)
      {
        unsigned int v102 = ((1 << (8 * __na)) | 0xCu) >> (8 * __na);
        if (v102 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + __na) = 0;
          return v40;
        }
        if (v102 > 0xF5)
        {
          *(_WORD *)((char *)a1 + __na) = 0;
          return v40;
        }
      }
      *((unsigned char *)a1 + __na) = 0;
      return v40;
    case 1u:
      uint64_t v47 = v30;
      uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      unint64_t v40 = a1;
      uint64_t v49 = v33;
      ((void (*)(void *))v48)(a1);
      uint64_t v50 = (void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v51 = (void *)((unint64_t)&v49[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      uint64_t v52 = ((unint64_t)v50 + v21 + 16) & ~v21;
      uint64_t v53 = ((unint64_t)v51 + v21 + 16) & ~v21;
      swift_bridgeObjectRetain();
      v48(v52, v53, AssociatedTypeWitness);
      unint64_t v54 = (v19 + v52) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = (uint64_t *)((v19 + v53) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v56 = *v55;
      if (HIDWORD(*v55) > 0x80000000)
      {
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v55;
      }
      else
      {
        unint64_t v57 = v55[1];
        sub_10018B584(*v55, v57);
        *(void *)unint64_t v54 = v56;
        *(void *)(v54 + 8) = v57;
      }
      uint64_t v87 = *(void *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)((v54 + 23) & 0xFFFFFFFFFFFFFFF8) = v87;
      if (v47 <= 3)
      {
        unsigned int v88 = ((1 << (8 * v47)) | 0xCu) >> (8 * v47);
        if (v88 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v47) = 1;
          return v40;
        }
        if (v88 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v47) = 1;
          return v40;
        }
      }
      *((unsigned char *)a1 + v47) = 1;
      return v40;
    case 2u:
      uint64_t v58 = *((void *)v33 + 1);
      unint64_t v40 = a1;
      *a1 = *(void *)v33;
      a1[1] = v58;
      uint64_t v59 = ((unint64_t)a1 + v21 + 16) & v37;
      uint64_t v60 = (unint64_t)&v33[v21 + 16] & v37;
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v62 = v30;
      swift_bridgeObjectRetain();
      v61(v59, v60, AssociatedTypeWitness);
      if (v62 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v62)) | 0xCu) >> (8 * v62);
        if (v63 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v62) = 2;
          return v40;
        }
        if (v63 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v62) = 2;
          return v40;
        }
      }
      *((unsigned char *)a1 + v62) = 2;
      return v40;
    case 3u:
      unint64_t v40 = a1;
      uint64_t v64 = v33;
      uint64_t v65 = v30;
      (*(void (**)(void *))(v3 + 16))(a1);
      uint64_t v66 = *(void *)((unint64_t)&v64[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) = v66;
      if (v65 <= 3)
      {
        unsigned int v67 = ((1 << (8 * v65)) | 0xCu) >> (8 * v65);
        if (v67 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v65) = 3;
          return v40;
        }
        if (v67 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v65) = 3;
          return v40;
        }
      }
      *((unsigned char *)a1 + v65) = 3;
      return v40;
    case 4u:
      uint64_t v68 = ~v21;
      uint64_t v69 = v30;
      uint64_t v70 = v33;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(v3 + 48))(v33, 1, AssociatedTypeWitness, v8))
      {
        unint64_t v40 = a1;
        memcpy(a1, v70, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 16))(((unint64_t)a1 + v26) & v68, (unint64_t)&v70[v26] & v68, AssociatedTypeWitness);
      }
      else
      {
        uint64_t v89 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v3 + 16);
        unint64_t v40 = a1;
        v89(a1, v70, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v89((void *)(((unint64_t)a1 + v26) & v68), (unsigned __int8 *)((unint64_t)&v70[v26] & v68), AssociatedTypeWitness);
      }
      if (v69 <= 3)
      {
        unsigned int v90 = ((1 << (8 * v69)) | 0xCu) >> (8 * v69);
        if (v90 > 0xFFF5)
        {
          *(_DWORD *)((char *)v40 + v69) = 4;
          return v40;
        }
        if (v90 > 0xF5)
        {
          *(_WORD *)((char *)v40 + v69) = 4;
          return v40;
        }
      }
      *((unsigned char *)v40 + v69) = 4;
      return v40;
    case 5u:
      unint64_t v40 = a1;
      *(unsigned char *)a1 = *v33;
      if (v30 <= 3)
      {
        unsigned int v71 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
        if (v71 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v30) = 5;
          return v40;
        }
        if (v71 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v30) = 5;
          return v40;
        }
      }
      *((unsigned char *)a1 + v30) = 5;
      return v40;
    case 6u:
      unint64_t v40 = a1;
      uint64_t v72 = v30;
      (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v3 + 16))(a1, v33, AssociatedTypeWitness, v8);
      if (v72 <= 3)
      {
        unsigned int v73 = ((1 << (8 * v72)) | 0xCu) >> (8 * v72);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v72) = 6;
          return v40;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v72) = 6;
          return v40;
        }
      }
      *((unsigned char *)a1 + v72) = 6;
      return v40;
    case 7u:
      uint64_t v74 = ~v6;
      uint64_t v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16);
      unint64_t v40 = a1;
      uint64_t v76 = v33;
      uint64_t v77 = v30;
      ((void (*)(void *))v75)(a1);
      v75(((unint64_t)a1 + v28) & v74, (unint64_t)&v76[v28] & v74, v114);
      if (v77 <= 3)
      {
        unsigned int v78 = ((1 << (8 * v77)) | 0xCu) >> (8 * v77);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v77) = 7;
          return v40;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v77) = 7;
          return v40;
        }
      }
      *((unsigned char *)a1 + v77) = 7;
      return v40;
    case 8u:
      uint64_t v81 = *(void *)v33;
      uint64_t v82 = v30;
      swift_errorRetain();
      unint64_t v40 = a1;
      *a1 = v81;
      if (v82 <= 3)
      {
        unsigned int v83 = ((1 << (8 * v82)) | 0xCu) >> (8 * v82);
        if (v83 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v82) = 8;
          return v40;
        }
        if (v83 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v82) = 8;
          return v40;
        }
      }
      *((unsigned char *)a1 + v82) = 8;
      return v40;
    case 9u:
      unint64_t v40 = a1;
      uint64_t v79 = v30;
      (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v3 + 16))(a1, v33, AssociatedTypeWitness, v8);
      if (v79 <= 3)
      {
        unsigned int v80 = ((1 << (8 * v79)) | 0xCu) >> (8 * v79);
        if (v80 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v79) = 9;
          return v40;
        }
        if (v80 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v79) = 9;
          return v40;
        }
      }
      *((unsigned char *)a1 + v79) = 9;
      return v40;
    default:
      if (v30 > 3) {
        goto LABEL_54;
      }
      unsigned int v45 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
      uint64_t v46 = 2;
      if (v45 > 0xFFF5) {
        uint64_t v46 = 4;
      }
      if (v45 <= 0xF5) {
LABEL_54:
      }
        uint64_t v46 = 1;
      unint64_t v40 = a1;
      memcpy(a1, v33, v46 + v30);
      return v40;
  }
}

void *sub_10037E6B4(void *a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v110 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v100 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v106 = v10 + v5;
  uint64_t v109 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  uint64_t v99 = v8;
  unsigned int v93 = *(_DWORD *)(v8 + 84);
  unsigned int v108 = v11;
  if (v11 <= v93) {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v96 = v11;
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  int v105 = v12;
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v101 = v13 + 7;
  uint64_t v98 = v9 + 8;
  uint64_t v95 = *(void *)(*(void *)(v100 - 8) + 64) + 7;
  size_t v14 = ((((v95 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v15 = ((v10 + v5) & ~v10) + v14 + 8;
  unint64_t v16 = v5 + 7;
  unint64_t v17 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v19 = ((((v5 + 7 + ((v18 + 16 + v17) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v20 = ((v18 + 16) & ~v18) + v5;
  unint64_t v21 = v17 + 8;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v22 = v5;
  }
  else {
    size_t v22 = v5 + 1;
  }
  size_t __n = v22;
  size_t v107 = v22 + v18;
  unint64_t v23 = ((v22 + v18) & ~v18) + v5;
  uint64_t v104 = v13 + v7;
  unint64_t v24 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v15) {
    unint64_t v15 = v5;
  }
  if (v19 > v20) {
    unint64_t v20 = v19;
  }
  if (v21 <= v23) {
    unint64_t v21 = v23;
  }
  if (v15 <= v20) {
    unint64_t v15 = v20;
  }
  if (v24 > v21) {
    unint64_t v21 = v24;
  }
  if (v21 > v15) {
    unint64_t v15 = v21;
  }
  if (v15 <= 8) {
    uint64_t v25 = 8;
  }
  else {
    uint64_t v25 = v15;
  }
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_28;
  }
  unsigned int v27 = ((1 << v26) | 0xCu) >> v26;
  if (v27 > 0xFFF5)
  {
    unsigned int v28 = *(_DWORD *)((char *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
    goto LABEL_33;
  }
  if (v27 > 0xF5)
  {
    unsigned int v28 = *(unsigned __int16 *)((char *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
  }
  else
  {
LABEL_28:
    unsigned int v28 = *((unsigned __int8 *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
  }
LABEL_33:
  if (v25 <= 3) {
    uint64_t v30 = v25;
  }
  else {
    uint64_t v30 = 4;
  }
  switch(v30)
  {
    case 1:
      int v31 = *(unsigned __int8 *)v2;
      if (v25 < 4) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 2:
      int v31 = *(unsigned __int16 *)v2;
      if (v25 >= 4) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 3:
      int v31 = *(unsigned __int16 *)v2 | (*((unsigned __int8 *)v2 + 2) << 16);
      if (v25 >= 4) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 4:
      int v31 = *(_DWORD *)v2;
      if (v25 < 4) {
LABEL_44:
      }
        v31 |= v29 << v26;
LABEL_45:
      unsigned int v28 = v31 + 10;
      break;
    default:
      break;
  }
LABEL_46:
  uint64_t v103 = ~v10;
  uint64_t v97 = ~v9;
  uint64_t v111 = ~v18;
  uint64_t v102 = ~v7;
  uint64_t v32 = AssociatedTypeWitness;
  switch(v28)
  {
    case 0u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      unint64_t v33 = ((unint64_t)v2 + v106) & v103;
      if (v108 == v105)
      {
        int v34 = (*(uint64_t (**)(unint64_t))(v109 + 48))(((unint64_t)v2 + v106) & v103);
LABEL_78:
        unint64_t v33 = ((unint64_t)v2 + v106) & v103;
        if (v34) {
          goto LABEL_81;
        }
        unint64_t v44 = (uint64_t *)((v101 + (((unint64_t)v2 + v106) & v103)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_80;
      }
      unint64_t v44 = (uint64_t *)((v101 + v33) & 0xFFFFFFFFFFFFFFF8);
      if (v96 > 0x7FFFFFFE)
      {
        int v34 = (*(uint64_t (**)(unint64_t))(v99 + 48))(((unint64_t)v44 + v98) & v97);
        goto LABEL_78;
      }
      uint64_t v45 = *v44;
      if ((unint64_t)*v44 >= 0xFFFFFFFF) {
        LODWORD(v45) = -1;
      }
      if ((v45 + 1) < 2)
      {
LABEL_80:
        (*(void (**)(unint64_t, uint64_t))(v109 + 8))(v33, v110);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v99 + 8))(((unint64_t)v44 + v98) & v97, v100);
        swift_bridgeObjectRelease();
        char v26 = 8 * v25;
        swift_bridgeObjectRelease();
      }
LABEL_81:
      swift_errorRelease();
LABEL_82:
      uint64_t v32 = AssociatedTypeWitness;
      if (v25 > 3) {
        goto LABEL_83;
      }
LABEL_66:
      unsigned int v41 = ((1 << v26) | 0xCu) >> v26;
      if (v41 > 0xFFF5)
      {
        unsigned int v42 = *(_DWORD *)((char *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      else if (v41 <= 0xF5)
      {
LABEL_83:
        unsigned int v42 = *((unsigned __int8 *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      else
      {
        unsigned int v42 = *(unsigned __int16 *)((char *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      if (v25 <= 3) {
        uint64_t v46 = v25;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *(unsigned __int8 *)a2;
          if (v25 >= 4) {
            goto LABEL_99;
          }
          goto LABEL_91;
        case 2:
          int v47 = *(unsigned __int16 *)a2;
          if (v25 < 4) {
            goto LABEL_91;
          }
          goto LABEL_99;
        case 3:
          int v47 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          if (v25 < 4) {
            goto LABEL_91;
          }
          goto LABEL_99;
        case 4:
          int v47 = *(_DWORD *)a2;
          if (v25 < 4)
          {
LABEL_91:
            unsigned int v42 = (v47 | (v43 << v26)) + 10;
          }
          else
          {
LABEL_99:
            unsigned int v42 = v47 + 10;
            if (v42 > 9)
            {
LABEL_100:
              if (v25 > 3) {
                goto LABEL_104;
              }
              unsigned int v50 = ((1 << v26) | 0xCu) >> v26;
              uint64_t v51 = 2;
              if (v50 > 0xFFF5) {
                uint64_t v51 = 4;
              }
              if (v50 <= 0xF5) {
LABEL_104:
              }
                uint64_t v51 = 1;
              memcpy(v2, a2, v51 + v25);
              return v2;
            }
          }
          break;
        default:
          goto LABEL_92;
      }
      break;
    case 1u:
      size_t v92 = v14;
      uint64_t v35 = *(void (**)(void *, uint64_t))(v4 + 8);
      v35(v2, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      unint64_t v36 = ((((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & v111;
      v35((void *)v36, AssociatedTypeWitness);
      unint64_t v37 = (v16 + v36) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(void *)v37) <= 0x80000000) {
        sub_1000CF144(*(void *)v37, *(void *)(v37 + 8));
      }
      swift_errorRelease();
      uint64_t v32 = AssociatedTypeWitness;
      goto LABEL_61;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)v2 + v18 + 16) & v111, AssociatedTypeWitness);
      goto LABEL_54;
    case 3u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      swift_errorRelease();
      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 4u:
      size_t v92 = v14;
      int v38 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness);
      uint64_t v39 = *(void (**)(void *, uint64_t))(v4 + 8);
      if (!v38) {
        v39(v2, AssociatedTypeWitness);
      }
      v39((void *)(((unint64_t)v2 + v107) & v111), AssociatedTypeWitness);
      char v26 = 8 * v25;
      uint64_t v32 = AssociatedTypeWitness;
LABEL_61:
      size_t v14 = v92;
      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 6u:
    case 9u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
LABEL_54:
      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 7u:
      unint64_t v40 = *(void (**)(void *, uint64_t))(v109 + 8);
      v40(v2, v110);
      v40((void *)(((unint64_t)v2 + v104) & v102), v110);
      char v26 = 8 * v25;
      goto LABEL_82;
    case 8u:
      swift_errorRelease();
      goto LABEL_65;
    default:
LABEL_65:
      if (v25 <= 3) {
        goto LABEL_66;
      }
      goto LABEL_83;
  }
LABEL_92:
  switch(v42)
  {
    case 0u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      uint64_t v48 = (char *)(((unint64_t)v2 + v106) & v103);
      uint64_t v49 = (char *)(((unint64_t)a2 + v106) & v103);
      if (v108 == v105)
      {
        if (!(*(unsigned int (**)(char *))(v109 + 48))(v49)) {
          goto LABEL_161;
        }
        goto LABEL_160;
      }
      unsigned int v73 = (uint64_t *)((unint64_t)&v49[v101] & 0xFFFFFFFFFFFFFFF8);
      if (v96 > 0x7FFFFFFE)
      {
        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v99 + 48))(((unint64_t)v73 + v98) & v97, v93, v100))
        {
LABEL_161:
          unsigned int v73 = (uint64_t *)((unint64_t)&v49[v101] & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_162;
        }
LABEL_160:
        memcpy(v48, v49, v14);
        goto LABEL_163;
      }
      uint64_t v74 = *v73;
      if ((unint64_t)*v73 >= 0xFFFFFFFF) {
        LODWORD(v74) = -1;
      }
      if ((v74 + 1) >= 2) {
        goto LABEL_160;
      }
LABEL_162:
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v48, v49, v110);
      unsigned int v80 = (void *)((unint64_t)&v48[v101] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v80 = *v73;
      unint64_t v81 = ((unint64_t)v80 + v98) & v97;
      unint64_t v82 = ((unint64_t)v73 + v98) & v97;
      size_t v83 = v14;
      uint64_t v84 = *(void (**)(unint64_t, unint64_t, uint64_t))(v99 + 16);
      swift_bridgeObjectRetain();
      v84(v81, v82, v100);
      size_t v14 = v83;
      uint64_t v85 = (void *)((v95 + v81) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v86 = (void *)((v95 + v82) & 0xFFFFFFFFFFFFFFF8);
      void *v85 = *v86;
      uint64_t v87 = (void *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v88 = (void *)(((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v87 = *v88;
      v87[1] = v88[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_163:
      uint64_t v89 = *(void *)&v49[v14];
      swift_errorRetain();
      *(void *)&v48[v14] = v89;
      if (v25 <= 3)
      {
        unsigned int v90 = ((1 << v26) | 0xCu) >> v26;
        if (v90 > 0xFFF5)
        {
          *(_DWORD *)((char *)v2 + v25) = 0;
          return v2;
        }
        if (v90 > 0xF5)
        {
          *(_WORD *)((char *)v2 + v25) = 0;
          return v2;
        }
      }
      *((unsigned char *)v2 + v25) = 0;
      return v2;
    case 1u:
      uint64_t v52 = *(void (**)(void *, void *, uint64_t))(v4 + 16);
      v52(v2, a2, v32);
      uint64_t v53 = (void *)(((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v54 = (void *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      void *v53 = *v54;
      v53[1] = v54[1];
      uint64_t v55 = ((unint64_t)v53 + v18 + 16) & v111;
      uint64_t v56 = ((unint64_t)v54 + v18 + 16) & v111;
      swift_bridgeObjectRetain();
      v52((void *)v55, (void *)v56, v32);
      unint64_t v57 = (v16 + v55) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = (uint64_t *)((v16 + v56) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v59 = *v58;
      if (HIDWORD(*v58) > 0x80000000)
      {
        *(_OWORD *)unint64_t v57 = *(_OWORD *)v58;
      }
      else
      {
        unint64_t v60 = v58[1];
        sub_10018B584(*v58, v60);
        *(void *)unint64_t v57 = v59;
        *(void *)(v57 + 8) = v60;
      }
      uint64_t v75 = *(void *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)((v57 + 23) & 0xFFFFFFFFFFFFFFF8) = v75;
      if (v25 > 3) {
        goto LABEL_147;
      }
      __int16 v76 = 1;
      unsigned int v77 = ((1 << v26) | 0xCu) >> v26;
      if (v77 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 1;
      }
      else
      {
        if (v77 > 0xF5) {
          goto LABEL_178;
        }
LABEL_147:
        *((unsigned char *)v2 + v25) = 1;
      }
      return v2;
    case 2u:
      *unint64_t v2 = *a2;
      v2[1] = a2[1];
      uint64_t v61 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      v61(((unint64_t)v2 + v18 + 16) & v111, ((unint64_t)a2 + v18 + 16) & v111, v32);
      if (v25 > 3) {
        goto LABEL_111;
      }
      unsigned int v62 = ((1 << v26) | 0xCu) >> v26;
      if (v62 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 2;
      }
      else if (v62 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 2;
      }
      else
      {
LABEL_111:
        *((unsigned char *)v2 + v25) = 2;
      }
      return v2;
    case 3u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      uint64_t v63 = *(void *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_errorRetain();
      *(void *)(((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = v63;
      if (v25 > 3) {
        goto LABEL_115;
      }
      unsigned int v64 = ((1 << v26) | 0xCu) >> v26;
      if (v64 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 3;
      }
      else if (v64 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 3;
      }
      else
      {
LABEL_115:
        *((unsigned char *)v2 + v25) = 3;
      }
      return v2;
    case 4u:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v32))
      {
        memcpy(v2, a2, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16))(((unint64_t)v2 + v107) & v111, ((unint64_t)a2 + v107) & v111, v32);
      }
      else
      {
        unsigned int v78 = *(void (**)(void *, void *, uint64_t))(v4 + 16);
        v78(v2, a2, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v32);
        v78((void *)(((unint64_t)v2 + v107) & v111), (void *)(((unint64_t)a2 + v107) & v111), v32);
      }
      if (v25 > 3) {
        goto LABEL_152;
      }
      unsigned int v79 = ((1 << v26) | 0xCu) >> v26;
      if (v79 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 4;
      }
      else if (v79 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 4;
      }
      else
      {
LABEL_152:
        *((unsigned char *)v2 + v25) = 4;
      }
      return v2;
    case 5u:
      *(unsigned char *)unint64_t v2 = *(unsigned char *)a2;
      if (v25 > 3) {
        goto LABEL_121;
      }
      unsigned int v65 = ((1 << v26) | 0xCu) >> v26;
      if (v65 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 5;
      }
      else if (v65 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 5;
      }
      else
      {
LABEL_121:
        *((unsigned char *)v2 + v25) = 5;
      }
      return v2;
    case 6u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      if (v25 > 3) {
        goto LABEL_125;
      }
      unsigned int v66 = ((1 << v26) | 0xCu) >> v26;
      if (v66 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 6;
      }
      else if (v66 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 6;
      }
      else
      {
LABEL_125:
        *((unsigned char *)v2 + v25) = 6;
      }
      return v2;
    case 7u:
      unsigned int v67 = v2;
      uint64_t v68 = *(void (**)(void *, void *, uint64_t))(v109 + 16);
      v68(v2, a2, v110);
      v68((void *)(((unint64_t)v2 + v104) & v102), (void *)(((unint64_t)a2 + v104) & v102), v110);
      if (v25 > 3) {
        goto LABEL_129;
      }
      unsigned int v69 = ((1 << v26) | 0xCu) >> v26;
      if (v69 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 7;
      }
      else
      {
        unsigned int v67 = v2;
        if (v69 > 0xF5)
        {
          *(_WORD *)((char *)v2 + v25) = 7;
        }
        else
        {
LABEL_129:
          *((unsigned char *)v67 + v25) = 7;
          return v67;
        }
      }
      return v2;
    case 8u:
      uint64_t v71 = *a2;
      swift_errorRetain();
      *unint64_t v2 = v71;
      if (v25 > 3) {
        goto LABEL_137;
      }
      unsigned int v72 = ((1 << v26) | 0xCu) >> v26;
      if (v72 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 8;
      }
      else if (v72 > 0xF5)
      {
        __int16 v76 = 8;
LABEL_178:
        *(_WORD *)((char *)v2 + v25) = v76;
      }
      else
      {
LABEL_137:
        *((unsigned char *)v2 + v25) = 8;
      }
      return v2;
    case 9u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      if (v25 > 3) {
        goto LABEL_133;
      }
      unsigned int v70 = ((1 << v26) | 0xCu) >> v26;
      if (v70 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 9;
      }
      else if (v70 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 9;
      }
      else
      {
LABEL_133:
        *((unsigned char *)v2 + v25) = 9;
      }
      return v2;
    default:
      goto LABEL_100;
  }
}

_OWORD *sub_10037F738(_OWORD *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v96 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v96 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v95 = v5;
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  if (v12 <= *(_DWORD *)(v8 + 84)) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  int v92 = v14;
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = v15 + 7;
  unint64_t v17 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v9 + 8 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v18 = ((v10 + v4) & ~v10) + v17 + 8;
  unint64_t v19 = v4 + 7;
  unint64_t v20 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v22 = ((((v4 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v23 = ((v21 + 16) & ~v21) + v4;
  unint64_t v24 = v20 + 8;
  if (*(_DWORD *)(v3 + 84)) {
    size_t v25 = v4;
  }
  else {
    size_t v25 = v4 + 1;
  }
  size_t v93 = v25 + v21;
  uint64_t v26 = v15 + v6;
  unint64_t v27 = ((v15 + v6) & ~v6) + v15;
  if (v4 > v18) {
    unint64_t v18 = v4;
  }
  if (v22 > v23) {
    unint64_t v23 = v22;
  }
  if (v24 <= ((v25 + v21) & ~v21) + v4) {
    unint64_t v24 = ((v25 + v21) & ~v21) + v4;
  }
  if (v18 <= v23) {
    unint64_t v18 = v23;
  }
  if (v27 > v24) {
    unint64_t v24 = v27;
  }
  if (v24 > v18) {
    unint64_t v18 = v24;
  }
  if (v18 <= 8) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = v18;
  }
  if (v28 > 3) {
    goto LABEL_28;
  }
  unsigned int v29 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
  if (v29 <= 0xFFF5)
  {
    if (v29 > 0xF5)
    {
      unsigned int v30 = *(unsigned __int16 *)&a2[v28];
LABEL_29:
      int v31 = a2;
      unsigned int v32 = v30 - 10;
      if (v30 >= 0xA) {
        goto LABEL_32;
      }
      goto LABEL_46;
    }
LABEL_28:
    unsigned int v30 = a2[v28];
    goto LABEL_29;
  }
  int v31 = a2;
  unsigned int v30 = *(_DWORD *)&a2[v28];
  unsigned int v32 = v30 - 10;
  if (v30 >= 0xA)
  {
LABEL_32:
    if (v28 <= 3) {
      uint64_t v33 = v28;
    }
    else {
      uint64_t v33 = 4;
    }
    switch(v33)
    {
      case 1:
        int v34 = *v31;
        if (v28 < 4) {
          goto LABEL_44;
        }
        goto LABEL_45;
      case 2:
        int v34 = *(unsigned __int16 *)v31;
        if (v28 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 3:
        int v34 = *(unsigned __int16 *)v31 | (v31[2] << 16);
        if (v28 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 4:
        int v34 = *(_DWORD *)v31;
        if (v28 < 4) {
LABEL_44:
        }
          v34 |= v32 << (8 * v28);
LABEL_45:
        unsigned int v30 = v34 + 10;
        break;
      default:
        break;
    }
  }
LABEL_46:
  uint64_t v35 = ~v21;
  switch(v30)
  {
    case 0u:
      unsigned int v86 = *(_DWORD *)(v8 + 84);
      uint64_t v36 = v16;
      uint64_t v89 = v9 + 8;
      uint64_t v90 = *(void *)(v7 - 8);
      size_t v37 = v17;
      uint64_t v91 = v7;
      uint64_t v94 = v28;
      uint64_t v38 = ~v10;
      uint64_t v87 = *(void *)(v90 + 64) + 7;
      uint64_t v88 = ~v9;
      uint64_t v39 = a1;
      unint64_t v40 = v31;
      unint64_t v11 = v10 + v4;
      (*(void (**)(_OWORD *))(v3 + 32))(a1);
      unsigned int v41 = (char *)(((unint64_t)a1 + v11) & v38);
      unsigned int v42 = (char *)((unint64_t)&v40[v11] & v38);
      if (v12 == v92)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v42, v12, v96)) {
          goto LABEL_110;
        }
LABEL_109:
        memcpy(v41, v42, v37);
        goto LABEL_112;
      }
      uint64_t v74 = (uint64_t *)((unint64_t)&v42[v36] & 0xFFFFFFFFFFFFFFF8);
      if (v13 <= 0x7FFFFFFE)
      {
        uint64_t v75 = v36;
        uint64_t v76 = *v74;
        if ((unint64_t)*v74 >= 0xFFFFFFFF) {
          LODWORD(v76) = -1;
        }
        if ((v76 + 1) < 2) {
          goto LABEL_111;
        }
        goto LABEL_109;
      }
      if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v90 + 48))(((unint64_t)v74 + v89) & v88, v86, v91))
      {
        goto LABEL_109;
      }
LABEL_110:
      uint64_t v75 = v36;
      uint64_t v74 = (uint64_t *)((unint64_t)&v42[v36] & 0xFFFFFFFFFFFFFFF8);
LABEL_111:
      uint64_t v79 = v75;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v41, v42, v96);
      unsigned int v80 = (void *)((unint64_t)&v41[v79] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v80 = *v74;
      unint64_t v81 = ((unint64_t)v80 + v89) & v88;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 32))(v81, ((unint64_t)v74 + v89) & v88, v91);
      unint64_t v82 = (void *)((v87 + v81) & 0xFFFFFFFFFFFFFFF8);
      size_t v83 = (void *)((v87 + (((unint64_t)v74 + v89) & v88)) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v82 = *v83;
      *(_OWORD *)(((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_112:
      *(void *)&v41[v37] = *(void *)&v42[v37];
      if (v94 <= 3)
      {
        unsigned int v84 = ((1 << (8 * v94)) | 0xCu) >> (8 * v94);
        if (v84 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v94) = 0;
          return v39;
        }
        if (v84 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v94) = 0;
          return v39;
        }
      }
      *((unsigned char *)a1 + v94) = 0;
      return v39;
    case 1u:
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      uint64_t v39 = a1;
      uint64_t v46 = v31;
      uint64_t v47 = v28;
      ((void (*)(_OWORD *))v45)(a1);
      uint64_t v48 = (_OWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v49 = (_OWORD *)((unint64_t)&v46[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v48 = *v49;
      uint64_t v50 = ((unint64_t)v48 + v21 + 16) & ~v21;
      uint64_t v51 = ((unint64_t)v49 + v21 + 16) & ~v21;
      v45(v50, v51, AssociatedTypeWitness);
      uint64_t v52 = (_OWORD *)((v19 + v50) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v53 = (_OWORD *)((v19 + v51) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v52 = *v53;
      *(void *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
      if (v47 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v47)) | 0xCu) >> (8 * v47);
        if (v54 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v47) = 1;
          return v39;
        }
        if (v54 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v47) = 1;
          return v39;
        }
      }
      *((unsigned char *)a1 + v47) = 1;
      return v39;
    case 2u:
      uint64_t v39 = a1;
      *a1 = *(_OWORD *)v31;
      uint64_t v55 = v28;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v21 + 16) & v35, (unint64_t)&v31[v21 + 16] & v35, AssociatedTypeWitness);
      if (v55 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v55)) | 0xCu) >> (8 * v55);
        if (v56 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v55) = 2;
          return v39;
        }
        if (v56 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v55) = 2;
          return v39;
        }
      }
      *((unsigned char *)a1 + v55) = 2;
      return v39;
    case 3u:
      uint64_t v39 = a1;
      unint64_t v57 = v31;
      uint64_t v58 = v28;
      (*(void (**)(_OWORD *))(v3 + 32))(a1);
      *(void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v57[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v58 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v58)) | 0xCu) >> (8 * v58);
        if (v59 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v58) = 3;
          return v39;
        }
        if (v59 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v58) = 3;
          return v39;
        }
      }
      *((unsigned char *)a1 + v58) = 3;
      return v39;
    case 4u:
      uint64_t v60 = v28;
      uint64_t v61 = v31;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v3 + 48))(v31, 1, AssociatedTypeWitness))
      {
        size_t v62 = v25;
        uint64_t v39 = a1;
        memcpy(a1, v61, v62);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v93) & v35, (unint64_t)&v61[v93] & v35, AssociatedTypeWitness);
      }
      else
      {
        unsigned int v77 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32);
        uint64_t v39 = a1;
        v77(a1, v61, AssociatedTypeWitness);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v77((_OWORD *)(((unint64_t)a1 + v93) & v35), (unsigned __int8 *)((unint64_t)&v61[v93] & v35), AssociatedTypeWitness);
      }
      if (v60 <= 3)
      {
        unsigned int v78 = ((1 << (8 * v60)) | 0xCu) >> (8 * v60);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)v39 + v60) = 4;
          return v39;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)v39 + v60) = 4;
          return v39;
        }
      }
      *((unsigned char *)v39 + v60) = 4;
      return v39;
    case 5u:
      uint64_t v39 = a1;
      *(unsigned char *)a1 = *v31;
      if (v28 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
        if (v63 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v28) = 5;
          return v39;
        }
        if (v63 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v28) = 5;
          return v39;
        }
      }
      *((unsigned char *)a1 + v28) = 5;
      return v39;
    case 6u:
      uint64_t v39 = a1;
      uint64_t v64 = v28;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32))(a1, v31, AssociatedTypeWitness);
      if (v64 <= 3)
      {
        unsigned int v65 = ((1 << (8 * v64)) | 0xCu) >> (8 * v64);
        if (v65 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v64) = 6;
          return v39;
        }
        if (v65 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v64) = 6;
          return v39;
        }
      }
      *((unsigned char *)a1 + v64) = 6;
      return v39;
    case 7u:
      uint64_t v66 = ~v6;
      unsigned int v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 32);
      uint64_t v39 = a1;
      uint64_t v68 = v31;
      uint64_t v69 = v28;
      ((void (*)(_OWORD *))v67)(a1);
      v67(((unint64_t)a1 + v26) & v66, (unint64_t)&v68[v26] & v66, v96);
      if (v69 <= 3)
      {
        unsigned int v70 = ((1 << (8 * v69)) | 0xCu) >> (8 * v69);
        if (v70 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v69) = 7;
          return v39;
        }
        if (v70 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v69) = 7;
          return v39;
        }
      }
      *((unsigned char *)a1 + v69) = 7;
      return v39;
    case 8u:
      uint64_t v39 = a1;
      *(void *)a1 = *(void *)v31;
      if (v28 <= 3)
      {
        unsigned int v73 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v28) = 8;
          return v39;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v28) = 8;
          return v39;
        }
      }
      *((unsigned char *)a1 + v28) = 8;
      return v39;
    case 9u:
      uint64_t v39 = a1;
      uint64_t v71 = v28;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32))(a1, v31, AssociatedTypeWitness);
      if (v71 <= 3)
      {
        unsigned int v72 = ((1 << (8 * v71)) | 0xCu) >> (8 * v71);
        if (v72 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v71) = 9;
          return v39;
        }
        if (v72 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v71) = 9;
          return v39;
        }
      }
      *((unsigned char *)a1 + v71) = 9;
      return v39;
    default:
      if (v28 > 3) {
        goto LABEL_54;
      }
      unsigned int v43 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
      uint64_t v44 = 2;
      if (v43 > 0xFFF5) {
        uint64_t v44 = 4;
      }
      if (v43 <= 0xF5) {
LABEL_54:
      }
        uint64_t v44 = 1;
      uint64_t v39 = a1;
      memcpy(a1, v31, v44 + v28);
      return v39;
  }
}

unsigned __int8 *sub_1003802B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v104 = v2;
  uint64_t v6 = *(void *)(v101 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v90 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v90 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v96 = v10 + v5;
  uint64_t v100 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  uint64_t v89 = v8;
  unsigned int v84 = *(_DWORD *)(v8 + 84);
  unsigned int v98 = v11;
  if (v11 <= v84) {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v87 = v11;
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  int v95 = v12;
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v91 = v13 + 7;
  uint64_t v88 = v9 + 8;
  uint64_t v86 = *(void *)(*(void *)(v90 - 8) + 64) + 7;
  unint64_t v99 = ((((v86 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v14 = ((v10 + v5) & ~v10) + v99 + 8;
  unint64_t v15 = v5 + 7;
  unint64_t v16 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v18 = ((((v5 + 7 + ((v17 + 16 + v16) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v19 = ((v17 + 16) & ~v17) + v5;
  unint64_t v20 = v16 + 8;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v21 = v5;
  }
  else {
    size_t v21 = v5 + 1;
  }
  size_t __n = v21;
  size_t v97 = v21 + v17;
  unint64_t v22 = ((v21 + v17) & ~v17) + v5;
  uint64_t v94 = v13 + v7;
  unint64_t v23 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v14) {
    unint64_t v14 = v5;
  }
  if (v18 > v19) {
    unint64_t v19 = v18;
  }
  if (v20 <= v22) {
    unint64_t v20 = v22;
  }
  if (v14 <= v19) {
    unint64_t v14 = v19;
  }
  if (v23 > v20) {
    unint64_t v20 = v23;
  }
  if (v20 > v14) {
    unint64_t v14 = v20;
  }
  if (v14 <= 8) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = v14;
  }
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v26 = ((1 << v25) | 0xCu) >> v25;
    if (v26 > 0xFFF5)
    {
      unsigned int v27 = *(_DWORD *)&v2[v24];
      goto LABEL_31;
    }
    if (v26 > 0xF5)
    {
      unsigned int v27 = *(unsigned __int16 *)&v2[v24];
      goto LABEL_31;
    }
  }
  unsigned int v27 = v2[v24];
LABEL_31:
  unsigned int v28 = v27 - 10;
  unsigned int v29 = a2;
  if (v27 >= 0xA)
  {
    if (v24 <= 3) {
      uint64_t v30 = v24;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *v2;
        if (v24 < 4) {
          goto LABEL_43;
        }
        goto LABEL_44;
      case 2:
        int v31 = *(unsigned __int16 *)v2;
        if (v24 >= 4) {
          goto LABEL_44;
        }
        goto LABEL_43;
      case 3:
        int v31 = *(unsigned __int16 *)v2 | (v2[2] << 16);
        if (v24 >= 4) {
          goto LABEL_44;
        }
        goto LABEL_43;
      case 4:
        int v31 = *(_DWORD *)v2;
        if (v24 < 4) {
LABEL_43:
        }
          v31 |= v28 << v25;
LABEL_44:
        unsigned int v27 = v31 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v93 = ~v10;
  uint64_t v32 = ~v9;
  uint64_t v102 = ~v17;
  uint64_t v92 = ~v7;
  uint64_t v33 = AssociatedTypeWitness;
  switch(v27)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      unint64_t v34 = (unint64_t)&v2[v96] & v93;
      if (v98 == v95)
      {
        int v35 = (*(uint64_t (**)(unint64_t))(v100 + 48))((unint64_t)&v2[v96] & v93);
LABEL_78:
        unint64_t v34 = (unint64_t)&v2[v96] & v93;
        if (v35) {
          goto LABEL_81;
        }
        uint64_t v45 = (uint64_t *)((v91 + ((unint64_t)&v2[v96] & v93)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_80;
      }
      uint64_t v45 = (uint64_t *)((v91 + v34) & 0xFFFFFFFFFFFFFFF8);
      if (v87 > 0x7FFFFFFE)
      {
        int v35 = (*(uint64_t (**)(unint64_t))(v89 + 48))(((unint64_t)v45 + v88) & v32);
        goto LABEL_78;
      }
      uint64_t v46 = *v45;
      if ((unint64_t)*v45 >= 0xFFFFFFFF) {
        LODWORD(v46) = -1;
      }
      if ((v46 + 1) < 2)
      {
LABEL_80:
        (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v34, v101);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v89 + 8))(((unint64_t)v45 + v88) & v32, v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_81:
      swift_errorRelease();
      uint64_t v33 = AssociatedTypeWitness;
      if (v24 > 3) {
        goto LABEL_82;
      }
LABEL_66:
      unsigned int v42 = ((1 << v25) | 0xCu) >> v25;
      if (v42 > 0xFFF5)
      {
        unsigned int v43 = *(_DWORD *)&v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      else if (v42 <= 0xF5)
      {
LABEL_82:
        unsigned int v43 = v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      else
      {
        unsigned int v43 = *(unsigned __int16 *)&v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      if (v24 <= 3) {
        uint64_t v47 = v24;
      }
      else {
        uint64_t v47 = 4;
      }
      switch(v47)
      {
        case 1:
          int v48 = *v29;
          if (v24 >= 4) {
            goto LABEL_98;
          }
          goto LABEL_90;
        case 2:
          int v48 = *(unsigned __int16 *)v29;
          if (v24 < 4) {
            goto LABEL_90;
          }
          goto LABEL_98;
        case 3:
          int v48 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          if (v24 < 4) {
            goto LABEL_90;
          }
          goto LABEL_98;
        case 4:
          int v48 = *(_DWORD *)v29;
          if (v24 < 4)
          {
LABEL_90:
            unsigned int v43 = (v48 | (v44 << v25)) + 10;
          }
          else
          {
LABEL_98:
            unsigned int v43 = v48 + 10;
            if (v43 > 9)
            {
LABEL_99:
              if (v24 > 3) {
                goto LABEL_103;
              }
              unsigned int v51 = ((1 << v25) | 0xCu) >> v25;
              uint64_t v52 = 2;
              if (v51 > 0xFFF5) {
                uint64_t v52 = 4;
              }
              if (v51 <= 0xF5) {
LABEL_103:
              }
                uint64_t v52 = 1;
              memcpy(v2, v29, v52 + v24);
              return v2;
            }
          }
          break;
        default:
          goto LABEL_91;
      }
      break;
    case 1u:
      uint64_t v82 = ~v9;
      uint64_t v36 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v36(v2, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      unint64_t v37 = (((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8) + v17 + 16) & v102;
      v36((unsigned __int8 *)v37, AssociatedTypeWitness);
      unint64_t v38 = (v15 + v37) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(void *)v38) <= 0x80000000) {
        sub_1000CF144(*(void *)v38, *(void *)(v38 + 8));
      }
      swift_errorRelease();
      char v25 = 8 * v24;
      uint64_t v33 = AssociatedTypeWitness;
      goto LABEL_60;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))((unint64_t)&v2[v17 + 16] & v102, AssociatedTypeWitness);
      goto LABEL_53;
    case 3u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      swift_errorRelease();
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 4u:
      uint64_t v82 = ~v9;
      int v39 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness);
      unint64_t v40 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      if (!v39)
      {
        size_t v83 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
        v40(v2, AssociatedTypeWitness);
        unint64_t v40 = v83;
      }
      v40((unsigned __int8 *)((unint64_t)&v2[v97] & v102), AssociatedTypeWitness);
      uint64_t v33 = AssociatedTypeWitness;
LABEL_60:
      uint64_t v32 = v82;
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 6u:
    case 9u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
LABEL_53:
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 7u:
      unsigned int v41 = *(void (**)(unsigned __int8 *, uint64_t))(v100 + 8);
      v41(v104, v101);
      v41((unsigned __int8 *)((unint64_t)&v104[v94] & v92), v101);
      uint64_t v33 = AssociatedTypeWitness;
      unint64_t v2 = v104;
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 8u:
      swift_errorRelease();
      goto LABEL_65;
    default:
LABEL_65:
      if (v24 <= 3) {
        goto LABEL_66;
      }
      goto LABEL_82;
  }
LABEL_91:
  switch(v43)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      uint64_t v49 = (char *)((unint64_t)&v2[v96] & v93);
      uint64_t v50 = (char *)((unint64_t)&v29[v96] & v93);
      if (v98 == v95)
      {
        if (!(*(unsigned int (**)(char *))(v100 + 48))(v50)) {
          goto LABEL_158;
        }
        goto LABEL_157;
      }
      unsigned int v70 = (uint64_t *)((unint64_t)&v50[v91] & 0xFFFFFFFFFFFFFFF8);
      if (v87 > 0x7FFFFFFE)
      {
        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v89 + 48))(((unint64_t)v70 + v88) & v32, v84, v90))
        {
LABEL_158:
          unsigned int v70 = (uint64_t *)((unint64_t)&v50[v91] & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_159;
        }
LABEL_157:
        unint64_t v74 = v99;
        memcpy(v49, v50, v99);
        goto LABEL_160;
      }
      uint64_t v71 = *v70;
      if ((unint64_t)*v70 >= 0xFFFFFFFF) {
        LODWORD(v71) = -1;
      }
      if ((v71 + 1) >= 2) {
        goto LABEL_157;
      }
LABEL_159:
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v49, v50, v101);
      uint64_t v75 = (void *)((unint64_t)&v49[v91] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v75 = *v70;
      unint64_t v76 = ((unint64_t)v75 + v88) & v32;
      unint64_t v77 = ((unint64_t)v70 + v88) & v32;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(v76, v77, v90);
      unsigned int v78 = (void *)((v86 + v76) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v79 = (void *)((v86 + v77) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v78 = *v79;
      *(_OWORD *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v74 = v99;
LABEL_160:
      *(void *)&v49[v74] = *(void *)&v50[v74];
      if (v24 <= 3)
      {
        unsigned int v80 = ((1 << v25) | 0xCu) >> v25;
        if (v80 > 0xFFF5)
        {
          *(_DWORD *)&v2[v24] = 0;
          return v2;
        }
        if (v80 > 0xF5)
        {
          *(_WORD *)&v2[v24] = 0;
          return v2;
        }
      }
      v2[v24] = 0;
      return v2;
    case 1u:
      uint64_t v53 = v2;
      unsigned int v54 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32);
      v54(v2, v29, v33);
      uint64_t v55 = (_OWORD *)((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      unsigned int v56 = (_OWORD *)((unint64_t)&v29[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v55 = *v56;
      uint64_t v57 = ((unint64_t)v55 + v17 + 16) & v102;
      uint64_t v58 = ((unint64_t)v56 + v17 + 16) & v102;
      v54((unsigned __int8 *)v57, (unsigned __int8 *)v58, v33);
      unsigned int v59 = (_OWORD *)((v15 + v57) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v60 = (_OWORD *)((v15 + v58) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v59 = *v60;
      *(void *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
      if (v24 > 3) {
        goto LABEL_108;
      }
      unsigned int v61 = ((1 << v25) | 0xCu) >> v25;
      if (v61 > 0xFFF5)
      {
        unint64_t v2 = v104;
        *(_DWORD *)&v104[v24] = 1;
      }
      else
      {
        uint64_t v53 = v104;
        if (v61 > 0xF5)
        {
          *(_WORD *)&v104[v24] = 1;
          return v104;
        }
        else
        {
LABEL_108:
          v53[v24] = 1;
          return v53;
        }
      }
      return v2;
    case 2u:
      *(_OWORD *)unint64_t v2 = *(_OWORD *)v29;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))((unint64_t)&v2[v17 + 16] & v102, (unint64_t)&v29[v17 + 16] & v102, v33);
      if (v24 > 3) {
        goto LABEL_112;
      }
      unsigned int v62 = ((1 << v25) | 0xCu) >> v25;
      if (v62 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 2;
      }
      else if (v62 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 2;
      }
      else
      {
LABEL_112:
        v2[v24] = 2;
      }
      return v2;
    case 3u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      *(void *)((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v29[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v24 > 3) {
        goto LABEL_116;
      }
      unsigned int v63 = ((1 << v25) | 0xCu) >> v25;
      if (v63 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 3;
      }
      else if (v63 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 3;
      }
      else
      {
LABEL_116:
        v2[v24] = 3;
      }
      return v2;
    case 4u:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v29, 1, v33))
      {
        memcpy(v2, v29, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))((unint64_t)&v2[v97] & v102, (unint64_t)&v29[v97] & v102, v33);
      }
      else
      {
        unsigned int v72 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32);
        v72(v2, v29, v33);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v33);
        v72((unsigned __int8 *)((unint64_t)&v2[v97] & v102), (unsigned __int8 *)((unint64_t)&v29[v97] & v102), v33);
      }
      if (v24 > 3) {
        goto LABEL_148;
      }
      unsigned int v73 = ((1 << v25) | 0xCu) >> v25;
      if (v73 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 4;
      }
      else if (v73 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 4;
      }
      else
      {
LABEL_148:
        v2[v24] = 4;
      }
      return v2;
    case 5u:
      *unint64_t v2 = *v29;
      if (v24 > 3) {
        goto LABEL_122;
      }
      unsigned int v64 = ((1 << v25) | 0xCu) >> v25;
      if (v64 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 5;
      }
      else if (v64 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 5;
      }
      else
      {
LABEL_122:
        v2[v24] = 5;
      }
      return v2;
    case 6u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      if (v24 > 3) {
        goto LABEL_126;
      }
      unsigned int v65 = ((1 << v25) | 0xCu) >> v25;
      if (v65 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 6;
      }
      else if (v65 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 6;
      }
      else
      {
LABEL_126:
        v2[v24] = 6;
      }
      return v2;
    case 7u:
      uint64_t v66 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v100 + 32);
      v66(v2, v29, v101);
      v66((unsigned __int8 *)((unint64_t)&v2[v94] & v92), (unsigned __int8 *)((unint64_t)&v29[v94] & v92), v101);
      if (v24 > 3) {
        goto LABEL_130;
      }
      unsigned int v67 = ((1 << v25) | 0xCu) >> v25;
      if (v67 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 7;
      }
      else if (v67 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 7;
      }
      else
      {
LABEL_130:
        v2[v24] = 7;
      }
      return v2;
    case 8u:
      *(void *)unint64_t v2 = *(void *)v29;
      if (v24 > 3) {
        goto LABEL_138;
      }
      unsigned int v69 = ((1 << v25) | 0xCu) >> v25;
      if (v69 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 8;
      }
      else if (v69 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 8;
      }
      else
      {
LABEL_138:
        v2[v24] = 8;
      }
      return v2;
    case 9u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      if (v24 > 3) {
        goto LABEL_134;
      }
      unsigned int v68 = ((1 << v25) | 0xCu) >> v25;
      if (v68 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 9;
      }
      else if (v68 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 9;
      }
      else
      {
LABEL_134:
        v2[v24] = 9;
      }
      return v2;
    default:
      goto LABEL_99;
  }
}

uint64_t sub_1003812C4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 64);
  unint64_t v11 = (((v7 | v9 | 7) + v5) & ~(v7 | v9 | 7))
      + ((((*(void *)(v8 + 64) + ((v9 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  unint64_t v12 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v14 = ((((v5 + 7 + ((v13 + 16 + v12) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v15 = ((v13 + 16) & ~v13) + v5;
  unint64_t v16 = v12 + 8;
  uint64_t v17 = v5 + v13;
  if (!*(_DWORD *)(v4 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 & ~v13) + v5;
  unint64_t v19 = ((v10 + v7) & ~v7) + v10;
  if (v5 > v11) {
    unint64_t v11 = v5;
  }
  if (v14 <= v15) {
    unint64_t v14 = v15;
  }
  if (v16 <= v18) {
    unint64_t v16 = v18;
  }
  if (v11 <= v14) {
    unint64_t v11 = v14;
  }
  if (v19 <= v16) {
    unint64_t v20 = v16;
  }
  else {
    unint64_t v20 = v19;
  }
  if (v20 > v11) {
    unint64_t v11 = v20;
  }
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v11 > 3)
  {
    int v21 = 11;
LABEL_22:
    char v23 = 8;
    goto LABEL_23;
  }
  unsigned int v22 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
  if (v22 > 0xFFF5) {
    goto LABEL_26;
  }
  int v21 = v22 + 10;
  if (v22 <= 0xF5) {
    goto LABEL_22;
  }
  char v23 = 16;
LABEL_23:
  unsigned int v24 = (1 << v23) - v21;
  if ((v24 & 0x80000000) == 0)
  {
    if (v11 > 3) {
      goto LABEL_30;
    }
LABEL_27:
    unsigned int v25 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
    uint64_t v26 = 2;
    if (v25 > 0xFFF5) {
      uint64_t v26 = 4;
    }
    if (v25 > 0xF5) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_26:
  unsigned int v24 = 0x7FFFFFFF;
  if (v11 <= 3) {
    goto LABEL_27;
  }
LABEL_30:
  uint64_t v26 = 1;
LABEL_31:
  if (!a2) {
    return 0;
  }
  if (a2 <= v24) {
    goto LABEL_50;
  }
  unint64_t v27 = v26 + v11;
  char v28 = 8 * v27;
  if (v27 <= 3)
  {
    unsigned int v30 = ((a2 - v24 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      int v29 = *(_DWORD *)((char *)a1 + v27);
      if (!v29) {
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    if (v30 > 0xFF)
    {
      int v29 = *(unsigned __int16 *)((char *)a1 + v27);
      if (!*(unsigned __int16 *)((char *)a1 + v27)) {
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    if (v30 < 2)
    {
LABEL_50:
      if (v24)
      {
        if (v11 <= 3)
        {
          unsigned int v38 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
          if (v38 > 0xFFF5)
          {
            unsigned int v33 = *(_DWORD *)((char *)a1 + v11);
            unsigned int v34 = ~v33;
LABEL_60:
            unsigned int v41 = 0x7FFFFFFF;
LABEL_61:
            if (v41 > v34) {
              return -v33;
            }
            else {
              return 0;
            }
          }
          int v36 = v38 + 10;
          if (v38 > 0xF5)
          {
            int v40 = *(unsigned __int16 *)((char *)a1 + v11);
            unsigned int v33 = v40 | 0xFFFF0000;
            unsigned int v34 = v40 ^ 0xFFFF;
            char v35 = 16;
          }
          else
          {
            int v39 = *((unsigned __int8 *)a1 + v11);
            unsigned int v33 = v39 | 0xFFFFFF00;
            unsigned int v34 = v39 ^ 0xFF;
            char v35 = 8;
          }
        }
        else
        {
          int v32 = *((unsigned __int8 *)a1 + v11);
          unsigned int v33 = v32 | 0xFFFFFF00;
          unsigned int v34 = v32 ^ 0xFF;
          char v35 = 8;
          int v36 = 11;
        }
        unsigned int v41 = (1 << v35) - v36;
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        goto LABEL_60;
      }
      return 0;
    }
  }
  int v29 = *((unsigned __int8 *)a1 + v27);
  if (!*((unsigned char *)a1 + v27)) {
    goto LABEL_50;
  }
LABEL_42:
  int v31 = (v29 - 1) << v28;
  if (v27 > 3) {
    int v31 = 0;
  }
  if (v27)
  {
    if (v27 > 3) {
      LODWORD(v27) = 4;
    }
    switch((int)v27)
    {
      case 2:
        LODWORD(v27) = *a1;
        break;
      case 3:
        LODWORD(v27) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v27) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v27) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v24 + (v27 | v31) + 1;
}

void sub_100381744(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = (((v8 | v10 | 7) + v6) & ~(v8 | v10 | 7))
      + ((((*(void *)(v9 + 64) + ((v10 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  unint64_t v13 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v15 = ((((v6 + 7 + ((v14 + 16 + v13) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v16 = ((v14 + 16) & ~v14) + v6;
  unint64_t v17 = v13 + 8;
  uint64_t v18 = v6 + v14;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 & ~v14) + v6;
  unint64_t v20 = ((v11 + v8) & ~v8) + v11;
  if (v6 > v12) {
    unint64_t v12 = v6;
  }
  if (v15 <= v16) {
    unint64_t v15 = v16;
  }
  if (v17 <= v19) {
    unint64_t v17 = v19;
  }
  if (v12 <= v15) {
    unint64_t v12 = v15;
  }
  if (v20 <= v17) {
    unint64_t v21 = v17;
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 > v12) {
    unint64_t v12 = v21;
  }
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  char v22 = 8 * v12;
  if (v12 > 3)
  {
    int v23 = 11;
    goto LABEL_20;
  }
  unsigned int v30 = ((1 << v22) | 0xCu) >> v22;
  if (v30 <= 0xFFF5)
  {
    int v23 = v30 + 10;
    if (v30 > 0xF5)
    {
      char v26 = 16;
      unsigned int v24 = a1;
      unsigned int v25 = a2;
LABEL_21:
      unsigned int v27 = (1 << v26) - v23;
      if ((v27 & 0x80000000) != 0) {
        unsigned int v27 = 0x7FFFFFFF;
      }
      if (v12 > 3) {
        goto LABEL_32;
      }
      goto LABEL_24;
    }
LABEL_20:
    unsigned int v24 = a1;
    unsigned int v25 = a2;
    char v26 = 8;
    goto LABEL_21;
  }
  unsigned int v27 = 0x7FFFFFFF;
  unsigned int v24 = a1;
  unsigned int v25 = a2;
  if (v12 > 3)
  {
LABEL_32:
    uint64_t v29 = 1;
    goto LABEL_33;
  }
LABEL_24:
  unsigned int v28 = ((1 << v22) | 0xCu) >> v22;
  uint64_t v29 = 2;
  if (v28 > 0xFFF5) {
    uint64_t v29 = 4;
  }
  if (v28 <= 0xF5) {
    goto LABEL_32;
  }
LABEL_33:
  size_t v31 = v29 + v12;
  if (a3 <= v27)
  {
    int v32 = 0;
  }
  else if (v31 <= 3)
  {
    unsigned int v35 = ((a3 - v27 + ~(-1 << (8 * v31))) >> (8 * v31)) + 1;
    if (HIWORD(v35))
    {
      int v32 = 4;
    }
    else if (v35 >= 0x100)
    {
      int v32 = 2;
    }
    else
    {
      int v32 = v35 > 1;
    }
  }
  else
  {
    int v32 = 1;
  }
  if (v27 < v25)
  {
    unsigned int v33 = ~v27 + v25;
    if (v31 < 4)
    {
      int v34 = (v33 >> (8 * v31)) + 1;
      if (v31)
      {
        int v36 = v33 & ~(-1 << (8 * v31));
        bzero(v24, v31);
        if (v31 == 3)
        {
          *(_WORD *)unsigned int v24 = v36;
          v24[2] = BYTE2(v36);
        }
        else if (v31 == 2)
        {
          *(_WORD *)unsigned int v24 = v36;
        }
        else
        {
          *unsigned int v24 = v36;
        }
      }
    }
    else
    {
      bzero(v24, v31);
      *(_DWORD *)unsigned int v24 = v33;
      int v34 = 1;
    }
    switch(v32)
    {
      case 1:
        v24[v31] = v34;
        return;
      case 2:
        *(_WORD *)&v24[v31] = v34;
        return;
      case 3:
        goto LABEL_69;
      case 4:
        *(_DWORD *)&v24[v31] = v34;
        return;
      default:
        return;
    }
  }
  switch(v32)
  {
    case 1:
      v24[v31] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_53;
    case 2:
      *(_WORD *)&v24[v31] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_53;
    case 3:
LABEL_69:
      __break(1u);
      JUMPOUT(0x100381BFCLL);
    case 4:
      *(_DWORD *)&v24[v31] = 0;
      goto LABEL_52;
    default:
LABEL_52:
      if (!v25) {
        return;
      }
LABEL_53:
      int v37 = -v25;
      if (v12 > 3) {
        goto LABEL_54;
      }
      unsigned int v38 = ((1 << v22) | 0xCu) >> v22;
      if (v38 > 0xFFF5)
      {
        *(_DWORD *)&v24[v12] = v37;
      }
      else if (v38 <= 0xF5)
      {
LABEL_54:
        v24[v12] = v37;
      }
      else
      {
        *(_WORD *)&v24[v12] = v37;
      }
      return;
  }
}

uint64_t sub_100381C24(unsigned __int8 *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v4 + 64);
  unint64_t v9 = (((v5 | v7 | 7) + v3) & ~(v5 | v7 | 7))
     + ((((*(void *)(v6 + 64) + ((v7 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 24;
  unint64_t v10 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v12 = ((((v3 + 7 + ((v11 + 16 + v10) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v13 = ((v11 + 16) & ~v11) + v3;
  unint64_t v14 = v10 + 8;
  uint64_t v15 = v3 + v11;
  if (!*(_DWORD *)(v2 + 84)) {
    ++v15;
  }
  unint64_t v16 = (v15 & ~v11) + v3;
  unint64_t v17 = ((v8 + v5) & ~v5) + v8;
  if (v3 > v9) {
    unint64_t v9 = v3;
  }
  if (v12 <= v13) {
    unint64_t v12 = v13;
  }
  if (v14 <= v16) {
    unint64_t v14 = v16;
  }
  if (v9 <= v12) {
    unint64_t v9 = v12;
  }
  if (v17 <= v14) {
    unint64_t v18 = v14;
  }
  else {
    unint64_t v18 = v17;
  }
  if (v18 > v9) {
    unint64_t v9 = v18;
  }
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 > 3) {
    goto LABEL_19;
  }
  unsigned int v20 = ((1 << (8 * v9)) | 0xCu) >> (8 * v9);
  if (v20 > 0xFFF5)
  {
    uint64_t result = *(unsigned int *)&a1[v9];
  }
  else
  {
    if (v20 <= 0xF5)
    {
LABEL_19:
      uint64_t result = a1[v9];
      goto LABEL_24;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v9];
  }
LABEL_24:
  if (result >= 0xA)
  {
    if (v9 <= 3) {
      uint64_t v21 = v9;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a1;
        if (v9 < 4) {
          goto LABEL_34;
        }
        goto LABEL_36;
      case 2:
        int v22 = *(unsigned __int16 *)a1;
        if (v9 >= 4) {
          goto LABEL_36;
        }
        goto LABEL_34;
      case 3:
        int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v9 < 4) {
          goto LABEL_34;
        }
        goto LABEL_36;
      case 4:
        int v22 = *(_DWORD *)a1;
        if (v9 < 4) {
LABEL_34:
        }
          uint64_t result = (v22 | ((result - 10) << (8 * v9))) + 10;
        else {
LABEL_36:
        }
          uint64_t result = (v22 + 10);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_100381F48(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (a2 > 9)
  {
    uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = *(void *)(v6 + 64);
    unint64_t v18 = (((v7 | v16 | 7) + v5) & ~(v7 | v16 | 7))
        + ((((*(void *)(v8 + 64) + ((v16 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 24;
    unint64_t v19 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(unsigned __int8 *)(v4 + 80);
    if (((((v5 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
      unint64_t v18 = ((((v5 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (((v20 + 16) & ~v20) + v5 > v18) {
      unint64_t v18 = ((v20 + 16) & ~v20) + v5;
    }
    if (v19 + 8 > v18) {
      unint64_t v18 = v19 + 8;
    }
    uint64_t v21 = v5 + v20;
    if (!*(_DWORD *)(v4 + 84)) {
      ++v21;
    }
    unint64_t v22 = (v21 & ~v20) + v5;
    if (v22 > v18) {
      unint64_t v18 = v22;
    }
    if (v18 <= v5) {
      unint64_t v18 = v5;
    }
    if (v18 <= ((v17 + v7) & ~v7) + v17) {
      unint64_t v18 = ((v17 + v7) & ~v7) + v17;
    }
    if (v18 <= v5) {
      unint64_t v18 = v5;
    }
    if (v18 <= 8) {
      size_t v23 = 8;
    }
    else {
      size_t v23 = v18;
    }
    unsigned int v24 = a2 - 10;
    if (v23 < 4)
    {
      int v26 = (v24 >> (8 * v23)) + 10;
      v24 &= ~(-1 << (8 * v23));
      unsigned int v27 = (int *)&a1[v23];
      unsigned int v28 = ((1 << (8 * v23)) | 0xCu) >> (8 * v23);
      if (v28 > 0xFFF5)
      {
        int *v27 = v26;
      }
      else if (v28 > 0xF5)
      {
        *(_WORD *)unsigned int v27 = v26;
      }
      else
      {
        *(unsigned char *)unsigned int v27 = v26;
      }
    }
    else
    {
      a1[v23] = 10;
    }
    if (v23 >= 4) {
      int v29 = 4;
    }
    else {
      int v29 = v23;
    }
    bzero(a1, v23);
    switch(v29)
    {
      case 2:
        *(_WORD *)a1 = v24;
        break;
      case 3:
        *(_WORD *)a1 = v24;
        a1[2] = BYTE2(v24);
        break;
      case 4:
        *(_DWORD *)a1 = v24;
        break;
      default:
        *a1 = v24;
        break;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v6 + 64);
    unint64_t v10 = (((((*(unsigned __int8 *)(v8 + 80) | v7 | 7) + v5) & ~(*(unsigned __int8 *)(v8 + 80) | v7))
          + ((((*(void *)(v8 + 64)
              + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unint64_t v11 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(unsigned __int8 *)(v4 + 80);
    if (((((v5 + 7 + ((v12 + 16 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v10) {
      unint64_t v10 = ((((v5 + 7 + ((v12 + 16 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (((v12 + 16) & ~v12) + v5 > v10) {
      unint64_t v10 = ((v12 + 16) & ~v12) + v5;
    }
    if (v11 + 8 > v10) {
      unint64_t v10 = v11 + 8;
    }
    uint64_t v13 = v5 + v12;
    if (!*(_DWORD *)(v4 + 84)) {
      ++v13;
    }
    unint64_t v14 = (v13 & ~v12) + v5;
    if (v14 > v10) {
      unint64_t v10 = v14;
    }
    if (v10 <= v5) {
      unint64_t v10 = v5;
    }
    unint64_t v15 = ((v9 + v7) & ~v7) + v9;
    if (v10 > v15) {
      unint64_t v15 = v10;
    }
    if (v15 <= v5) {
      unint64_t v15 = v5;
    }
    if (v15 <= 8) {
      unint64_t v15 = 8;
    }
    if (v15 > 3) {
      goto LABEL_21;
    }
    unsigned int v25 = ((1 << (8 * v15)) | 0xCu) >> (8 * v15);
    if (v25 > 0xFFF5)
    {
      *(_DWORD *)&a1[v15] = a2;
    }
    else
    {
      if (v25 <= 0xF5)
      {
LABEL_21:
        a1[v15] = a2;
        return;
      }
      *(_WORD *)&a1[v15] = a2;
    }
  }
}

uint64_t sub_100382388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t *sub_100382394(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_10001E9C0(*result, v1);
  }
  return result;
}

uint64_t sub_1003823B0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_10001EBB0(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *sub_10038240C(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_10001EBB0(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_10001E9C0(v7, v8);
      return a1;
    }
    sub_10011A770((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_10001EBB0(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *sub_1003824B0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_10001E9C0(v6, v4);
      return a1;
    }
    sub_10011A770((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_10038251C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_100382578(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_1003825C4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *sub_100382670(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038273CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t _s9SQLFieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1003827F4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *uint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003828C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

uint64_t sub_1003828E8()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_10096C890();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      uint64_t result = sub_10096C890();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100382A60(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v32 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  size_t __n = v7;
  uint64_t v11 = v7 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(v9 + 64);
  }
  else {
    size_t v12 = *(void *)(v9 + 64) + 1;
  }
  unsigned int v13 = v10 | *(_DWORD *)(v2 + 80) & 0xF8 | v5;
  if (v13 > 7
    || ((*(_DWORD *)(v9 + 80) | v5 | *(_DWORD *)(v2 + 80)) & 0x100000) != 0
    || ((v12 + ((v11 + (v6 & ~(unint64_t)v5)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    unint64_t v18 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    unint64_t v17 = ~(unint64_t)v5;
    uint64_t v28 = ~v10;
    uint64_t v29 = v8;
    unint64_t v18 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v19 = (void *)(((unint64_t)a1 + v6) & v17);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v6) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48))(v20, 1, v32))
    {
      memcpy(v19, v20, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v4 + 16))(v19, v20, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v19, 0, 1, v32);
    }
    uint64_t v21 = (void *)(((unint64_t)v19 + v11) & v28);
    unint64_t v22 = (const void *)(((unint64_t)v20 + v11) & v28);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v29))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v21, v22, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v29);
    }
    unint64_t v23 = ((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = *(void *)(v24 + 8);
    if ((v25 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      sub_10001EBB0(*(void *)v24, *(void *)(v24 + 8));
      *(void *)unint64_t v23 = v26;
      *(void *)(v23 + 8) = v25;
    }
  }
  return v18;
}

uint64_t sub_100382E04(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  uint64_t v13 = v9 + v7;
  if (!v8) {
    ++v13;
  }
  unint64_t v14 = (v13 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))(v14, v10);
  }
  unint64_t v16 = v14 + *(void *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84)) {
    ++v16;
  }
  unint64_t v17 = (uint64_t *)((v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = v17[1];
  if ((v18 & 0x3000000000000000) == 0)
  {
    uint64_t v19 = *v17;
    return sub_10001E9C0(v19, v18);
  }
  return result;
}

uint64_t sub_10038302C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    unint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (const void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v22, 1, v18))
  {
    int v23 = *(_DWORD *)(v19 + 84);
    uint64_t v24 = *(void *)(v19 + 64);
    if (v23) {
      size_t v25 = *(void *)(v19 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v21, v22, v18);
    unsigned int v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v26 = v19 + 56;
    v27(v21, 0, 1, v18);
    int v23 = *(_DWORD *)(v26 + 28);
    uint64_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v24 + 1;
  }
  unint64_t v29 = ((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = *(void *)(v30 + 8);
  if ((v31 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_10001EBB0(*(void *)v30, *(void *)(v30 + 8));
    *(void *)unint64_t v29 = v32;
    *(void *)(v29 + 8) = v31;
  }
  return a1;
}

uint64_t sub_100383304(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  int v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v21, 1, v18);
  int v25 = v23(v22, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v21, v22, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v18);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v21, v22, v18);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v21, v22, v28);
LABEL_26:
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v29 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v19 + 64) + 1;
  }
  unint64_t v30 = (uint64_t *)(((unint64_t)v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (uint64_t *)(((unint64_t)v22 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = v30[1];
  unint64_t v33 = v31[1];
  uint64_t v34 = v33 & 0x3000000000000000;
  if ((v32 & 0x3000000000000000) == 0)
  {
    if (!v34)
    {
      uint64_t v37 = *v31;
      sub_10001EBB0(v37, v33);
      uint64_t v38 = *v30;
      unint64_t v39 = v30[1];
      *unint64_t v30 = v37;
      v30[1] = v33;
      sub_10001E9C0(v38, v39);
      return a1;
    }
    sub_10001E9C0(*v30, v32);
    goto LABEL_34;
  }
  if (v34)
  {
LABEL_34:
    *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    return a1;
  }
  uint64_t v35 = *v31;
  sub_10001EBB0(v35, v33);
  *unint64_t v30 = v35;
  v30[1] = v33;
  return a1;
}

uint64_t sub_100383704(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    size_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (const void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v22, 1, v18))
  {
    int v23 = *(_DWORD *)(v19 + 84);
    uint64_t v24 = *(void *)(v19 + 64);
    if (v23) {
      size_t v25 = *(void *)(v19 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v21, v22, v18);
    size_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v26 = v19 + 56;
    v27(v21, 0, 1, v18);
    int v23 = *(_DWORD *)(v26 + 28);
    uint64_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v24 + 1;
  }
  *(_OWORD *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1003839B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  int v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v21, 1, v18);
  int v25 = v23(v22, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v21, v22, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v18);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v21, v22, v18);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v21, v22, v28);
LABEL_26:
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v29 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v19 + 64) + 1;
  }
  unint64_t v30 = (uint64_t *)(((unint64_t)v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (uint64_t *)(((unint64_t)v22 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = v30[1];
  if ((v32 & 0x3000000000000000) == 0)
  {
    uint64_t v33 = v31[1];
    if ((v33 & 0x3000000000000000) == 0)
    {
      uint64_t v35 = *v30;
      *unint64_t v30 = *v31;
      v30[1] = v33;
      sub_10001E9C0(v35, v32);
      return a1;
    }
    sub_10001E9C0(*v30, v32);
  }
  *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
  return a1;
}

uint64_t sub_100383D90(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v36 = AssociatedTypeWitness;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v34 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  unsigned int v37 = v4;
  unsigned int v35 = v7;
  if (v7 > v4) {
    unsigned int v4 = v7;
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v4) {
    unsigned int v12 = v4;
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0xB) {
    unsigned int v12 = 11;
  }
  uint64_t v13 = *(void *)(v5 + 64);
  if (!v6) {
    ++v13;
  }
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  if (!v10) {
    ++v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(v3 + 64) + v14;
  uint64_t v18 = v16 + 7;
  if (v12 < a2)
  {
    unint64_t v19 = ((v18 + ((v13 + v15 + (v17 & ~v14)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v19 & 0xFFFFFFF8) != 0) {
      unsigned int v20 = 2;
    }
    else {
      unsigned int v20 = a2 - v12 + 1;
    }
    if (v20 >= 0x10000) {
      unsigned int v21 = 4;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v20 < 0x100) {
      unsigned int v21 = 1;
    }
    if (v20 >= 2) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    switch(v22)
    {
      case 1:
        int v23 = *((unsigned __int8 *)a1 + v19);
        if (!*((unsigned char *)a1 + v19)) {
          break;
        }
        goto LABEL_34;
      case 2:
        int v23 = *(unsigned __int16 *)((char *)a1 + v19);
        if (*(_WORD *)((char *)a1 + v19)) {
          goto LABEL_34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100384134);
      case 4:
        int v23 = *(_DWORD *)((char *)a1 + v19);
        if (!v23) {
          break;
        }
LABEL_34:
        int v24 = v23 - 1;
        if ((v19 & 0xFFFFFFF8) != 0)
        {
          int v24 = 0;
          int v25 = *a1;
        }
        else
        {
          int v25 = 0;
        }
        return v12 + (v25 | v24) + 1;
      default:
        break;
    }
  }
  if (v37 != v12)
  {
    unint64_t v28 = ((unint64_t)a1 + v17) & ~v14;
    if (v35 == v12)
    {
      if (v6 >= 2)
      {
        unsigned int v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v28, v6, v34);
LABEL_53:
        unsigned int v32 = v29 - 1;
        BOOL v33 = v29 >= 2;
LABEL_54:
        if (v33) {
          return v32;
        }
        else {
          return 0;
        }
      }
    }
    else
    {
      unint64_t v30 = (v28 + v13 + v15) & ~v15;
      if (v11 != v12)
      {
        uint64_t v31 = *(void *)(((v18 + v30) & 0xFFFFFFFFFFFFFFF8) + 8) >> 60;
        unsigned int v32 = ((v31 >> 2) & 0xFFFFFFF3 | (4 * (v31 & 3))) ^ 0xF;
        if (v32 >= 0xC) {
          unsigned int v32 = -1;
        }
        BOOL v33 = v32 + 1 >= 2;
        goto LABEL_54;
      }
      if (v10 >= 2)
      {
        unsigned int v29 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v30);
        goto LABEL_53;
      }
    }
    return 0;
  }
  int v26 = *(uint64_t (**)(_DWORD *, void, uint64_t))(v3 + 48);

  return v26(a1, v37, v36);
}

void sub_100384148(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = AssociatedTypeWitness;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v40 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  unsigned int v43 = v6;
  unsigned int v41 = v9;
  if (v9 > v6) {
    unsigned int v6 = v9;
  }
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = a2;
  uint64_t v12 = *(void *)(v10 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v6) {
    unsigned int v15 = v6;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(void *)(v5 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64);
  if (v15 <= 0xB) {
    unsigned int v20 = 11;
  }
  else {
    unsigned int v20 = v15;
  }
  if (v8) {
    uint64_t v21 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v22 = v16 + v17;
  uint64_t v23 = (v21 + v18 + ((v16 + v17) & ~v17)) & ~v18;
  if (!v13) {
    ++v19;
  }
  uint64_t v24 = v19 + 7;
  size_t v25 = ((v24 + v23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v24 + v23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v26 = a3 - v20 + 1;
  }
  else {
    unsigned int v26 = 2;
  }
  if (v26 >= 0x10000) {
    int v27 = 4;
  }
  else {
    int v27 = 2;
  }
  if (v26 < 0x100) {
    int v27 = 1;
  }
  if (v26 >= 2) {
    unsigned int v28 = v27;
  }
  else {
    unsigned int v28 = 0;
  }
  if (v20 < a3) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v11 > v20)
  {
    if (v25) {
      int v30 = 1;
    }
    else {
      int v30 = v11 - v20;
    }
    if (v25)
    {
      int v31 = ~v20 + v11;
      bzero(a1, v25);
      *a1 = v31;
    }
    switch(v29)
    {
      case 1:
        *((unsigned char *)a1 + v25) = v30;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v25) = v30;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)((char *)a1 + v25) = v30;
        return;
      default:
        return;
    }
  }
  unsigned int v32 = a1;
  switch(v29)
  {
    case 1:
      *((unsigned char *)a1 + v25) = 0;
      if (!v11) {
        return;
      }
      goto LABEL_47;
    case 2:
      *(_WORD *)((char *)a1 + v25) = 0;
      if (!v11) {
        return;
      }
      goto LABEL_47;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x100384548);
    case 4:
      *(_DWORD *)((char *)a1 + v25) = 0;
      goto LABEL_46;
    default:
LABEL_46:
      if (!v11) {
        return;
      }
LABEL_47:
      if (v43 == v20)
      {
        uint64_t v33 = v42;
        uint64_t v34 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        uint64_t v35 = v43;
LABEL_51:
        v34(v32, v11, v35, v33);
        return;
      }
      unsigned int v32 = (_DWORD *)(((unint64_t)a1 + v22) & ~v17);
      if (v41 == v20)
      {
        uint64_t v11 = (v11 + 1);
        uint64_t v34 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        uint64_t v35 = v8;
        uint64_t v33 = v40;
        goto LABEL_51;
      }
      uint64_t v36 = ((unint64_t)v32 + v21 + v18) & ~v18;
      if (v14 == v20)
      {
        uint64_t v37 = (v11 + 1);
        uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v12 + 56);
        v38(v36, v37);
      }
      else
      {
        unint64_t v39 = (void *)((v24 + v36) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v39 = 0;
        if (v11 > 0xB)
        {
          v39[1] = 0;
          *(_DWORD *)unint64_t v39 = v11 - 12;
        }
        else
        {
          v39[1] = (unint64_t)((4 * (v11 ^ 0xF)) | ((v11 ^ 0xF) >> 2)) << 60;
        }
      }
      return;
  }
}

uint64_t sub_100384570()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100384624(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = v6 + 7;
  uint64_t v8 = *(_DWORD *)(v5 + 80);
  if (v8 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 7 + ((v8 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = AssociatedTypeWitness;
    int v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v13(a1, a2, AssociatedTypeWitness);
    unsigned int v14 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v15 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v14 = *v15;
    v14[1] = v15[1];
    uint64_t v16 = ((unint64_t)v14 + v8 + 16) & ~v8;
    uint64_t v17 = ((unint64_t)v15 + v8 + 16) & ~v8;
    swift_bridgeObjectRetain();
    v13((uint64_t *)v16, (uint64_t *)v17, v12);
    unint64_t v18 = (v7 + v16) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (v7 + v17) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(v19 + 8);
    if ((v20 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      sub_10001EBB0(*(void *)v19, *(void *)(v19 + 8));
      *(void *)unint64_t v18 = v21;
      *(void *)(v18 + 8) = v20;
    }
  }
  return a1;
}

uint64_t sub_1003847E4(unint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = v3 + 8;
  v4(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56) + 7;
  swift_bridgeObjectRelease();
  unint64_t v7 = (((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 72) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);
  uint64_t result = v4(v7, AssociatedTypeWitness);
  unsigned int v9 = (uint64_t *)((v6 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = v9[1];
  if ((v10 & 0x3000000000000000) == 0)
  {
    uint64_t v11 = *v9;
    return sub_10001E9C0(v11, v10);
  }
  return result;
}

uint64_t sub_1003848E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  swift_bridgeObjectRetain();
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (v8 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 8);
  if ((v16 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *(void *)v15;
    sub_10001EBB0(*(void *)v15, *(void *)(v15 + 8));
    *(void *)unint64_t v14 = v17;
    *(void *)(v14 + 8) = v16;
  }
  return a1;
}

uint64_t sub_100384A0C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(unsigned __int8 *)(v7 + 56);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (uint64_t *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (uint64_t *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = v14[1];
  unint64_t v17 = v15[1];
  uint64_t v18 = v17 & 0x3000000000000000;
  if ((v16 & 0x3000000000000000) == 0)
  {
    if (!v18)
    {
      uint64_t v21 = *v15;
      sub_10001EBB0(v21, v17);
      uint64_t v22 = *v14;
      unint64_t v23 = v14[1];
      *unint64_t v14 = v21;
      v14[1] = v17;
      sub_10001E9C0(v22, v23);
      return a1;
    }
    sub_10001E9C0(*v14, v16);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  uint64_t v19 = *v15;
  sub_10001EBB0(v19, v17);
  *unint64_t v14 = v19;
  v14[1] = v17;
  return a1;
}

uint64_t sub_100384B7C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  unsigned int v9 = (_OWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v9 = *v10;
  uint64_t v11 = *(unsigned __int8 *)(v7 + 48);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  *(_OWORD *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100384C78(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = *(unsigned __int8 *)(v7 + 40);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (uint64_t *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (uint64_t *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = v14[1];
  if ((v16 & 0x3000000000000000) == 0)
  {
    uint64_t v17 = v15[1];
    if ((v17 & 0x3000000000000000) == 0)
    {
      uint64_t v19 = *v14;
      *unint64_t v14 = *v15;
      v14[1] = v17;
      sub_10001E9C0(v19, v16);
      return a1;
    }
    sub_10001E9C0(*v14, v16);
  }
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t sub_100384DB8(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8
         + 7
         + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100384F70);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_100384F84(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8
        + 7
        + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unint64_t v18 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                v18[1] = (a2 - 1);
              }
            }
            else
            {
              uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v8
         + 7
         + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v11 = a3 - v9 + 1;
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((v8
       + 7
       + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v15 = v14;
  else {
    int v15 = 1;
  }
  if (((v8
       + 7
       + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1003851ACLL);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t sub_1003851D4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100385280(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = AssociatedTypeWitness;
    uint64_t v11 = ~v6;
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    int v13 = (char *)a1 + v6;
    int v14 = (char *)a2 + v6;
    uint64_t v15 = (unint64_t)(v13 + 16) & v11;
    uint64_t v16 = (unint64_t)(v14 + 16) & v11;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, v10);
  }
  return a1;
}

uint64_t sub_1003853A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  return v4(v6, v5);
}

void *sub_10038543C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v7(v9, v10, AssociatedTypeWitness);
  return a1;
}

void *sub_1003854F8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_OWORD *sub_1003855AC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_10038563C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1003856E0(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 16) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        uint64_t v17 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v17(((unint64_t)a1 + v8 + 16) & ~v8);
      }
      else
      {
        unint64_t v16 = *((void *)a1 + 1);
        if (v16 >= 0xFFFFFFFF) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_1003858D0(_WORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *a1 = v15;
          *((unsigned char *)a1 + 2) = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(unsigned char *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v13;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v13;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100385B54);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v16 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
          v16(((unint64_t)a1 + v8 + 16) & ~v8, a2);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t sub_100385BA0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100385C48(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 8);
    if ((v12 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v13 = *(void *)v11;
      sub_10001EBB0(*(void *)v11, *(void *)(v11 + 8));
      *(void *)unint64_t v10 = v13;
      *(void *)(v10 + 8) = v12;
    }
  }
  return a1;
}

uint64_t sub_100385D80(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v5 = (uint64_t *)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = v5[1];
  if ((v6 & 0x3000000000000000) == 0)
  {
    uint64_t v7 = *v5;
    return sub_10001E9C0(v7, v6);
  }
  return result;
}

uint64_t sub_100385E2C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 8);
  if ((v9 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *(void *)v8;
    sub_10001EBB0(*(void *)v8, *(void *)(v8 + 8));
    *(void *)unint64_t v7 = v10;
    *(void *)(v7 + 8) = v9;
  }
  return a1;
}

uint64_t sub_100385EF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = v7[1];
  unint64_t v10 = v8[1];
  uint64_t v11 = v10 & 0x3000000000000000;
  if ((v9 & 0x3000000000000000) == 0)
  {
    if (!v11)
    {
      uint64_t v14 = *v8;
      sub_10001EBB0(v14, v10);
      uint64_t v15 = *v7;
      unint64_t v16 = v7[1];
      *unint64_t v7 = v14;
      v7[1] = v10;
      sub_10001E9C0(v15, v16);
      return a1;
    }
    sub_10001E9C0(*v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v12 = *v8;
  sub_10001EBB0(v12, v10);
  *unint64_t v7 = v12;
  v7[1] = v10;
  return a1;
}

uint64_t sub_100385FEC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10038608C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = v7[1];
  if ((v9 & 0x3000000000000000) == 0)
  {
    uint64_t v10 = v8[1];
    if ((v10 & 0x3000000000000000) == 0)
    {
      uint64_t v12 = *v7;
      *unint64_t v7 = *v8;
      v7[1] = v10;
      sub_10001E9C0(v12, v9);
      return a1;
    }
    sub_10001E9C0(*v7, v9);
  }
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  return a1;
}

uint64_t sub_100386160(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0xB) {
    unsigned int v7 = 11;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100386310);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0xB)
  {
    uint64_t v18 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >> 60;
    unsigned int v19 = ((v18 >> 2) & 0xFFFFFFF3 | (4 * (v18 & 3))) ^ 0xF;
    if (v19 >= 0xC) {
      unsigned int v19 = -1;
    }
    if (v19 + 1 >= 2) {
      return v19;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_100386324(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0xB) {
    unsigned int v9 = 11;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100386538);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0xB)
        {
          uint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v18 = 0;
          if (a2 > 0xB)
          {
            v18[1] = 0;
            *(_DWORD *)uint64_t v18 = a2 - 12;
          }
          else
          {
            v18[1] = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
          }
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_100386560()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1003866B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = v3 + v6;
  uint64_t v9 = (v3 + v7) & ~v7;
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t v37 = v10 + v6;
  uint64_t v11 = (v10 + v7 + v9) & ~v7;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v10 + v14;
  uint64_t v16 = (v15 + v11) & ~v14;
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v18 = v17 + v14;
  unint64_t v19 = ((v17 + v14 + v16) & ~v14) + v17;
  uint64_t v20 = (v6 | *(unsigned char *)(v2 + 80) | *(unsigned char *)(v13 + 80));
  if (v20 > 7 || ((v6 | *(_DWORD *)(v2 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) != 0 || v19 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v34 = v23 + ((v20 + 16) & ~v20);
    swift_retain();
  }
  else
  {
    unint64_t v24 = ~(unint64_t)v6;
    uint64_t v25 = ~v14;
    uint64_t v36 = v12;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v26 = ((unint64_t)a1 + v8) & ~v7;
    unint64_t v27 = ((unint64_t)a2 + v8) & v24;
    unsigned int v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    v28(v26, v27, v4);
    unint64_t v29 = (v37 + v26) & v24;
    unint64_t v30 = (v37 + v27) & v24;
    v28(v29, v30, v4);
    unint64_t v31 = (v29 + v15) & v25;
    unint64_t v32 = (v30 + v15) & v25;
    uint64_t v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
    v33(v31, v32, v36);
    v33((v18 + v31) & v25, (v18 + v32) & v25, v36);
    return a1;
  }
  return (uint64_t *)v34;
}

uint64_t sub_1003869A4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v4 + v9) & ~v9;
  v7(v10, v5);
  uint64_t v11 = *(void *)(v8 + 56);
  uint64_t v12 = (v11 + v9 + v10) & ~v9;
  v7(v12, v5);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v18 = v14 + 8;
  unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  v19((v12 + v11 + v15) & ~v15, v13);
  uint64_t v16 = (*(void *)(v18 + 56) + v15 + ((v12 + v11 + v15) & ~v15)) & ~v15;

  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v16, v13);
}

uint64_t sub_100386B64(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 48);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v21 = v19 + 16;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 48) + v22 + v23) & ~v22, (*(void *)(v21 + 48) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_100386D40(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  uint64_t v21 = v19 + 24;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 40) + v22 + v23) & ~v22, (*(void *)(v21 + 40) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_100386F1C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  uint64_t v21 = v19 + 32;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 32) + v22 + v23) & ~v22, (*(void *)(v21 + 32) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_1003870F8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v21 = v19 + 40;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 24) + v22 + v23) & ~v22, (*(void *)(v21 + 24) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_1003872D4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v31 - 8);
  unsigned int v32 = *(_DWORD *)(v6 + 84);
  if (v32 <= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (*(_DWORD *)(v8 + 84) <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v4 + 64) + v9;
  uint64_t v14 = v10 + v9;
  uint64_t v15 = v10 + v11;
  uint64_t v16 = a1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v17 = ((*(void *)(v8 + 64) + v11 + ((v15 + ((v14 + (v13 & ~v9)) & ~v9)) & ~v11)) & ~v11) + *(void *)(v8 + 64);
  char v18 = 8 * v17;
  if (v17 > 3) {
    goto LABEL_10;
  }
  unsigned int v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v20))
  {
    int v19 = *(_DWORD *)((char *)a1 + v17);
    if (!v19) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v20 > 0xFF)
  {
    int v19 = *(unsigned __int16 *)((char *)a1 + v17);
    if (!*(unsigned __int16 *)((char *)a1 + v17)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v20 >= 2)
  {
LABEL_10:
    int v19 = *((unsigned __int8 *)a1 + v17);
    if (!*((unsigned char *)a1 + v17)) {
      goto LABEL_27;
    }
LABEL_17:
    int v21 = (v19 - 1) << v18;
    if (v17 > 3) {
      int v21 = 0;
    }
    if (v17)
    {
      if (v17 <= 3) {
        int v22 = v17;
      }
      else {
        int v22 = 4;
      }
      switch(v22)
      {
        case 2:
          int v23 = *a1;
          break;
        case 3:
          int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v23 = *(_DWORD *)a1;
          break;
        default:
          int v23 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v23 = 0;
    }
    return v12 + (v23 | v21) + 1;
  }
LABEL_27:
  if (!v12) {
    return 0;
  }
  if (v5 == v12)
  {
    uint64_t v24 = v33;
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v26 = v5;
LABEL_33:
    return v25(v16, v26, v24);
  }
  uint64_t v28 = ~v9;
  uint64_t v16 = (unsigned __int16 *)(((unint64_t)a1 + v13) & v28);
  if (v32 == v12)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v26 = v32;
    uint64_t v24 = v31;
    goto LABEL_33;
  }
  unint64_t v29 = (v15 + (((unint64_t)v16 + v14) & v28)) & ~v11;
  unint64_t v30 = *(uint64_t (**)(unint64_t))(v8 + 48);

  return v30(v29);
}

void sub_10038767C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v29 = v3;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= v4) {
    unsigned int v7 = v4;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  if (*(_DWORD *)(v8 + 84) <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = *(void *)(v3 + 64) + v11;
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = v13 + v11;
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = v13 + v15;
  size_t v17 = ((*(void *)(v8 + 64) + v15 + ((v13 + v15 + ((v13 + v11 + (v12 & ~v11)) & ~v11)) & ~v15)) & ~v15)
      + *(void *)(v8 + 64);
  if (a3 <= v10)
  {
    int v19 = 0;
    char v18 = a1;
  }
  else
  {
    char v18 = a1;
    if (v17 <= 3)
    {
      unsigned int v23 = ((a3 - v10 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
      if (HIWORD(v23))
      {
        int v19 = 4;
      }
      else if (v23 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v23 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v20 = ~v10 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> (8 * v17)) + 1;
      if (v17)
      {
        int v24 = v20 & ~(-1 << (8 * v17));
        bzero(v18, v17);
        if (v17 == 3)
        {
          *(_WORD *)char v18 = v24;
          v18[2] = BYTE2(v24);
        }
        else if (v17 == 2)
        {
          *(_WORD *)char v18 = v24;
        }
        else
        {
          *char v18 = v24;
        }
      }
    }
    else
    {
      bzero(v18, v17);
      *(_DWORD *)char v18 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v18[v17] = v21;
        return;
      case 2:
        *(_WORD *)&v18[v17] = v21;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&v18[v17] = v21;
        return;
      default:
        return;
    }
  }
  uint64_t v22 = ~v11;
  switch(v19)
  {
    case 1:
      v18[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&v18[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x100387A8CLL);
    case 4:
      *(_DWORD *)&v18[v17] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v4 == v10)
      {
        uint64_t v25 = *(void (**)(unsigned char *))(v29 + 56);
        uint64_t v26 = v18;
LABEL_31:
        v25(v26);
        return;
      }
      uint64_t v26 = (unsigned char *)((unint64_t)&v18[v12] & v22);
      if (v6 == v10)
      {
        uint64_t v25 = *(void (**)(unsigned char *))(v5 + 56);
        goto LABEL_31;
      }
      unint64_t v27 = (v16 + ((unint64_t)&v26[v14] & v22)) & ~v15;
      uint64_t v28 = *(void (**)(unint64_t))(v9 + 56);
      v28(v27);
      return;
  }
}

uint64_t sub_100387AB4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v2 = v1;
  uint64_t result = sub_10096C890();
  if (v4 <= 0x3F)
  {
    if (v2 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100387BB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v7 = *(void *)(v5 + 64);
  }
  else {
    size_t v7 = v6 + 1;
  }
  uint64_t v8 = *(_DWORD *)(v5 + 80);
  uint64_t v9 = ~v8;
  size_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & v9) + v6;
  if (v8 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v10) & v9, ((unint64_t)a2 + v10) & v9, v15);
    }
    else
    {
      uint64_t v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
      v16(a1, a2, v15);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v15);
      v16((uint64_t *)(((unint64_t)a1 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v15);
    }
  }
  return a1;
}

uint64_t sub_100387D48(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  if (!v4)
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v5(a1, AssociatedTypeWitness);
    uint64_t v5 = v9;
  }
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v3 + 64) + a1;
  if (!*(_DWORD *)(v3 + 84)) {
    ++v7;
  }

  return ((uint64_t (*)(uint64_t, uint64_t))v5)((v7 + v6) & ~v6, AssociatedTypeWitness);
}

void *sub_100387E4C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = *(void *)(v5 + 64);
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
    uint64_t v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  }
  else
  {
    uint64_t v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
  }
  if (v6) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v7 + 1;
  }
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_100387FA4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  uint64_t v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v13 = v5 + 24;
  uint64_t v12 = v14;
  if (*(_DWORD *)(v13 + 60)) {
    uint64_t v15 = *(void *)(v13 + 40);
  }
  else {
    uint64_t v15 = *(void *)(v13 + 40) + 1;
  }
  v12(((unint64_t)a1 + v15 + *(unsigned __int8 *)(v13 + 56)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 56), ((unint64_t)a2 + v15 + *(unsigned __int8 *)(v13 + 56)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 56), AssociatedTypeWitness);
  return a1;
}

void *sub_100388164(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = *(void *)(v5 + 64);
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
    int v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  }
  else
  {
    int v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
  }
  if (v6) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v7 + 1;
  }
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_1003882BC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  uint64_t v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v13 = v5 + 40;
  uint64_t v12 = v14;
  if (*(_DWORD *)(v13 + 44)) {
    uint64_t v15 = *(void *)(v13 + 24);
  }
  else {
    uint64_t v15 = *(void *)(v13 + 24) + 1;
  }
  v12(((unint64_t)a1 + v15 + *(unsigned __int8 *)(v13 + 40)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 40), ((unint64_t)a2 + v15 + *(unsigned __int8 *)(v13 + 40)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_10038847C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = v8 + v9;
  if (v6) {
    uint64_t v11 = v8 + v9;
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_26;
  }
  uint64_t v12 = (v11 & ~v9) + v8;
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v15 = ((a2 - v6 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v15 < 2)
    {
LABEL_26:
      if (v6)
      {
        if (v7 == v6)
        {
          unsigned int v19 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
          if (v19 >= 2) {
            return v19 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          int v21 = *(uint64_t (**)(unint64_t))(v5 + 48);
          return v21(((unint64_t)a1 + v10) & ~v9);
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_26;
  }
LABEL_16:
  int v16 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v16 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v17 = v12;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_100388688(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8) {
    uint64_t v11 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = v11 + v12;
  size_t v14 = (v13 & ~v12) + v10;
  if (a3 <= v8) {
    goto LABEL_14;
  }
  if (v14 <= 3)
  {
    unsigned int v15 = ((a3 - v8 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v15))
    {
      int v6 = 4;
      if (v8 >= a2) {
        goto LABEL_22;
      }
      goto LABEL_15;
    }
    if (v15 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v15 > 1;
    }
LABEL_14:
    if (v8 >= a2) {
      goto LABEL_22;
    }
    goto LABEL_15;
  }
  int v6 = 1;
  if (v8 >= a2)
  {
LABEL_22:
    uint64_t v19 = ~v12;
    switch(v6)
    {
      case 1:
        a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        goto LABEL_26;
      default:
LABEL_26:
        if (a2)
        {
LABEL_27:
          if (v9 == v8)
          {
            uint64_t v20 = (a2 + 1);
            int v21 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
            uint64_t v22 = a1;
          }
          else
          {
            uint64_t v22 = (unsigned char *)((unint64_t)&a1[v13] & v19);
            int v21 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
            uint64_t v20 = a2;
          }
          v21(v22, v20);
        }
        break;
    }
    return;
  }
LABEL_15:
  unsigned int v16 = ~v8 + a2;
  if (v14 < 4)
  {
    int v17 = (v16 >> (8 * v14)) + 1;
    if (v14)
    {
      int v18 = v16 & ~(-1 << (8 * v14));
      bzero(a1, v14);
      if (v14 == 3)
      {
        *(_WORD *)a1 = v18;
        a1[2] = BYTE2(v18);
      }
      else if (v14 == 2)
      {
        *(_WORD *)a1 = v18;
      }
      else
      {
        *a1 = v18;
      }
    }
  }
  else
  {
    bzero(a1, v14);
    *(_DWORD *)a1 = v16;
    int v17 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v14] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v17;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10038890CLL);
    case 4:
      *(_DWORD *)&a1[v14] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_100388958()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1003889F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = ~v7;
  uint64_t v9 = v6 + v7;
  unint64_t v10 = ((v6 + v7) & ~v7) + v6;
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    uint64_t v14 = AssociatedTypeWitness;
    unsigned int v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v15(a1, a2, AssociatedTypeWitness);
    v15((uint64_t *)(((unint64_t)a1 + v9) & v8), (uint64_t *)(((unint64_t)a2 + v9) & v8), v14);
  }
  return a1;
}

uint64_t sub_100388B20(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  uint64_t v6 = *(uint64_t (**)(unint64_t, uint64_t))v5;
  (*(void (**)(uint64_t __return_ptr, uint64_t, uint64_t))v5)(AssociatedTypeWitness - 8, a1, AssociatedTypeWitness);
  unint64_t v3 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v5 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);

  return v6(v3, AssociatedTypeWitness);
}

unint64_t sub_100388BDC(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 48) + *(unsigned __int8 *)(v7 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v7 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_100388C94(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 40) + *(unsigned __int8 *)(v7 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v7 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_100388D4C(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 32) + *(unsigned __int8 *)(v7 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v7 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_100388E04(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 24) + *(unsigned __int8 *)(v7 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v7 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_100388EBC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_19;
  }
  unint64_t v7 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v8 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v6)
      {
        uint64_t v12 = *(uint64_t (**)(unsigned __int16 *))(v5 + 48);
        return v12(a1);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v11 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v7 | v11) + 1;
}

void sub_10038907C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1003892C8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_1003892F0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100389390(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_10038946C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1003894E8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_100389560(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1003895D8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_100389650(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1003896C8(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        int v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_100389878(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100389AB4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_100389ADC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100389AF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100389B14()
{
  return swift_getWitnessTable();
}

id sub_100389B30(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10031F918(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10091B080();
LABEL_7:
    unsigned int v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100370F44(v12, a3 & 1);
  uint64_t v18 = sub_10031F918(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  unsigned int v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

void sub_100389C94(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10031F858(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10091B228();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = v18[6] + 16 * v12;
    *(void *)uint64_t v22 = a2;
    *(unsigned char *)(v22 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_100371264(v15, a4 & 1);
  unint64_t v20 = sub_10031F858(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_10096D3C0();
  __break(1u);
}

uint64_t sub_100389DE0(uint64_t a1, Swift::UInt64 a2, char a3, char a4, void (*a5)(void), uint64_t *a6, uint64_t *a7)
{
  char v11 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_10031F858(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    char v21 = v16;
    uint64_t v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v23 = *v11;
      if (v21)
      {
LABEL_8:
        uint64_t v24 = v23[7];
        uint64_t v25 = sub_10002B7CC(a6);
        return sub_1000148B8(a1, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v17, a6);
      }
      return sub_10038DD88(v17, a2, a3, a1, v23, a6);
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_1003715A4(v20, a4 & 1, a6, a7);
    unint64_t v27 = sub_10031F858(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      unint64_t v17 = v27;
      uint64_t v23 = *v11;
      if (v21) {
        goto LABEL_8;
      }
      return sub_10038DD88(v17, a2, a3, a1, v23, a6);
    }
  }
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

uint64_t sub_100389F40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_10031FA3C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
      return sub_1000148B8(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t *)&unk_100ACC9B0);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10091B65C();
    goto LABEL_7;
  }
  sub_10037196C(v13, a3 & 1);
  unint64_t v20 = sub_10031FA3C(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_10038DE34(v10, a2, a1, v16);
}

uint64_t sub_10038A08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10000DDD0(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10091BA94();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100371FEC(v17, a5 & 1);
  unint64_t v23 = sub_10000DDD0(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_10038A214(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_10001725C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10091BC5C();
      goto LABEL_7;
    }
    sub_100372678(v13, a3 & 1);
    unint64_t v19 = sub_10001725C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100017368(a2, (uint64_t)v21);
      return sub_10038DEDC(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_1000268E0((uint64_t)v17);

  return sub_100042A48(a1, v17);
}

id sub_10038A360(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10031F918(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10091BFF0();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100372C68(v12, a3 & 1);
  uint64_t v18 = sub_10031F918(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

uint64_t sub_10038A4C4(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  return sub_10038B574(a1, a2, a3, a4, (uint64_t (*)(void))sub_10091C19C, &qword_100ACCA58);
}

void sub_10038A4E4(uint64_t a1, void *a2, char a3)
{
}

id sub_10038A504(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10031F918(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10091C1B4();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_errorRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100372FA0(v12, a3 & 1);
  uint64_t v18 = sub_10031F918(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

uint64_t sub_10038A668(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000DDD0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10091C360();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1003732C0(result, a4 & 1);
  uint64_t result = sub_10000DDD0(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void sub_10038A7CC(uint64_t a1, void *a2, char a3)
{
}

void sub_10038A7EC(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  char v8 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_10031F918(a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    char v19 = (void *)*v8;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1003735CC(v16, a3 & 1, a5);
  uint64_t v21 = sub_10031F918(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_10096D3C0();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  char v19 = (void *)*v8;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v23 = 8 * v13;
  *(void *)(v19[6] + v23) = a2;
  *(void *)(v19[7] + v23) = a1;
  uint64_t v24 = v19[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19[2] = v26;

  id v27 = a2;
}

uint64_t sub_10038A96C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_10031FC28(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_10091C964();
      goto LABEL_7;
    }
    sub_100373D08(v16, a3 & 1);
    unint64_t v27 = sub_10031FC28(a2);
    if ((v17 & 1) == (v28 & 1))
    {
      unint64_t v13 = v27;
      char v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_10038F134(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      return sub_10038DFA0(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = sub_10096B0E0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  uint64_t v24 = v21;
  uint64_t v25 = v20 + *(void *)(v22 + 72) * v13;

  return v23(v25, a1, v24);
}

uint64_t sub_10038AB48(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_10031FCF8(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    char v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_10091C6BC();
    goto LABEL_7;
  }
  sub_1003738F8(v16, a3 & 1);
  unint64_t v22 = sub_10031FCF8(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  char v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10038F134(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  return sub_10038E090(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_10038ACC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, Swift::UInt64 a5, char a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_10031F858(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t result = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= result && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= result && (a7 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10091CCA4();
LABEL_7:
    char v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 32 * v17;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v24 = a1;
      *(unsigned char *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = a3;
      *(void *)(v24 + 24) = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v26 = v23[6] + 16 * v17;
    *(void *)uint64_t v26 = a5;
    *(unsigned char *)(v26 + 8) = a6;
    uint64_t v27 = v23[7] + 32 * v17;
    *(void *)uint64_t v27 = a1;
    *(unsigned char *)(v27 + 8) = a2;
    *(void *)(v27 + 16) = a3;
    *(void *)(v27 + 24) = a4;
    uint64_t v28 = v23[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (!v29)
    {
      v23[2] = v30;
      return result;
    }
    goto LABEL_14;
  }
  sub_1003741FC(result, a7 & 1);
  uint64_t result = sub_10031F858(a5, a6);
  if ((v21 & 1) == (v25 & 1))
  {
    unint64_t v17 = result;
    char v23 = (void *)*v8;
    if (v21) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

uint64_t sub_10038AE4C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100320048(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10091CE74();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100374558(v13, a3 & 1);
  unint64_t v19 = sub_100320048(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    sub_10002B7CC(&qword_100AD20A8);
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10001AE98(a2, (uint64_t)v31, (uint64_t *)&unk_100AD62C0);
  long long v21 = *(_OWORD *)(a2 + 32);
  v29[0] = *(_OWORD *)(a2 + 16);
  v29[1] = v21;
  __int16 v30 = *(_WORD *)(a2 + 48);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v22 = v16[6] + 56 * v10;
  __int16 v23 = *(_WORD *)(a2 + 48);
  long long v25 = *(_OWORD *)(a2 + 16);
  long long v24 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)a2;
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v24;
  *(_WORD *)(v22 + 48) = v23;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v26 = v16[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v16[2] = v28;
  sub_10038EF94((uint64_t)v31);
  return sub_1000A6F50((uint64_t)v29);
}

uint64_t sub_10038AFE0(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10031F590(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10091D068();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1003748F0(result, a2 & 1);
  uint64_t result = sub_10031F590(a1);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v18 = v16[6] + 56 * v10;
  long long v19 = *(_OWORD *)a1;
  long long v20 = *(_OWORD *)(a1 + 16);
  long long v21 = *(_OWORD *)(a1 + 32);
  *(void *)(v18 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(v18 + 16) = v20;
  *(_OWORD *)(v18 + 32) = v21;
  *(_OWORD *)uint64_t v18 = v19;
  *(double *)(v16[7] + 8 * v10) = a3;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16[2] = v24;

  return sub_1000A696C(a1);
}

uint64_t sub_10038B14C(uint64_t a1, char a2, uint64_t a3, Swift::UInt64 a4, char a5, char a6)
{
  uint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_10031F858(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= result && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      *(void *)uint64_t v23 = a1;
      *(unsigned char *)(v23 + 8) = a2 & 1;
      *(void *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10091D23C();
    goto LABEL_7;
  }
  sub_100374B40(result, a6 & 1);
  uint64_t result = sub_10031F858(a4, a5);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_10038E144(v16, a4, a5, a1, a2 & 1, a3, v22);
}

id sub_10038B2B4(uint64_t a1, char a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v11 = (void *)*v5;
  unint64_t v13 = sub_10031F918(a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  id result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= (uint64_t)result && (a5 & 1) != 0)
  {
LABEL_7:
    long long v19 = *v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 24 * v13;
      *(void *)uint64_t v20 = a1;
      *(unsigned char *)(v20 + 8) = a2 & 1;
      *(void *)(v20 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= (uint64_t)result && (a5 & 1) == 0)
  {
    id result = sub_10091D3FC();
    goto LABEL_7;
  }
  sub_100374E8C((uint64_t)result, a5 & 1);
  id result = (id)sub_10031F918(a4);
  if ((v17 & 1) != (v21 & 1))
  {
LABEL_15:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = (unint64_t)result;
  long long v19 = *v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10038E1A4(v13, (uint64_t)a4, a1, a2 & 1, a3, v19);

  return a4;
}

uint64_t sub_10038B408(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10031FDC4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10091D5C0();
      goto LABEL_7;
    }
    sub_1003751D0(v13, a3 & 1);
    uint64_t v20 = sub_10031FDC4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for SyncState() - 8) + 72) * v10;
    return sub_10038EFC8(a1, v18);
  }
LABEL_13:

  return sub_10038E1FC(v10, a2, a1, v16);
}

uint64_t sub_10038B554(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  return sub_10038B574(a1, a2, a3, a4, (uint64_t (*)(void))sub_10091E1D0, &qword_100ACCA50);
}

uint64_t sub_10038B574(uint64_t a1, Swift::UInt64 a2, char a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  char v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10031F858(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a4 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v25 = v22[6] + 16 * v16;
    *(void *)uint64_t v25 = a2;
    *(unsigned char *)(v25 + 8) = a3;
    *(void *)(v22[7] + 8 * v16) = a1;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      _OWORD v22[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  sub_10037B97C(result, a4 & 1, a6);
  uint64_t result = sub_10031F858(a2, a3);
  if ((v20 & 1) == (v24 & 1))
  {
    unint64_t v16 = result;
    uint64_t v22 = (void *)*v9;
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

id sub_10038B6D8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, char a6, char a7)
{
  uint64_t v8 = (void **)v7;
  char v15 = (void *)*v7;
  unint64_t v17 = sub_100320230(a3, a4, a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v8;
    if (v21)
    {
LABEL_8:
      char v24 = (uint64_t *)(v23[7] + 16 * v17);
      id result = (id)swift_bridgeObjectRelease();
      *char v24 = a1;
      v24[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_10091E3AC();
    goto LABEL_7;
  }
  sub_100377510(v20, a7 & 1);
  unint64_t v26 = sub_100320230(a3, a4, a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    sub_10002B7CC(&qword_100ACE948);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10038E2A8(v17, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a1, a2, v23);

  return sub_10009C004(a3, a4, a5, a6);
}

uint64_t sub_10038B86C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1003202C8(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      BOOL v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10091E57C();
    goto LABEL_7;
  }
  sub_10037784C(v15, a4 & 1);
  unint64_t v21 = sub_1003202C8(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    sub_10002B7CC(&qword_100ACC9E0);
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_10038E2FC(v12, a3, a1, a2, v18);
}

void sub_10038B9A0(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10031F918(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10091E914();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100377F78(v12, a3 & 1);
  uint64_t v17 = sub_10031F918(a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_10096D3C0();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;

  id v23 = a2;
}

uint64_t sub_10038BB04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_10031FA3C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10091EABC();
      goto LABEL_7;
    }
    sub_1003782A8(v13, a3 & 1);
    unint64_t v19 = sub_10031FA3C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 16 * v10;
    return sub_10038F02C(a1, v17);
  }
LABEL_13:

  return sub_10038E38C(v10, a2, a1, v16);
}

_OWORD *sub_10038BC34(_OWORD *a1, void *a2, char a3)
{
  return sub_10038BCC4(a1, a2, a3, (uint64_t (*)(void *))sub_10031F918, (void (*)(void))sub_10091EC80, &qword_100ACCCF8, type metadata accessor for URLResourceKey);
}

_OWORD *sub_10038BC7C(_OWORD *a1, void *a2, char a3)
{
  return sub_10038BCC4(a1, a2, a3, (uint64_t (*)(void *))sub_100047284, (void (*)(void))sub_10091EC8C, &qword_100ACB228, type metadata accessor for FileAttributeKey);
}

_OWORD *sub_10038BCC4(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), uint64_t *a6, void (*a7)(void))
{
  BOOL v12 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a3 & 1) == 0)
  {
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_10037A164(v20, a3 & 1, a6);
    uint64_t v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      id v23 = *v12;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a7(0);
    uint64_t result = (_OWORD *)sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  id v23 = *v12;
  if (v21)
  {
LABEL_8:
    char v24 = (_OWORD *)(v23[7] + 32 * v17);
    sub_1000268E0((uint64_t)v24);
    return sub_100042A48(a1, v24);
  }
LABEL_13:
  sub_10038E6AC(v17, (uint64_t)a2, a1, v23);

  return a2;
}

uint64_t sub_10038BE44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t (*a6)(void), uint64_t *a7, uint64_t (*a8)(void))
{
  uint64_t v11 = (void **)v8;
  char v16 = (void *)*v8;
  unint64_t v18 = sub_10000DDD0(a2, a3);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_10037856C(v21, a4 & 1, a6, a7);
    unint64_t v32 = sub_10000DDD0(a2, a3);
    if ((v22 & 1) == (v33 & 1))
    {
      unint64_t v18 = v32;
      char v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = v24[7];
    uint64_t v26 = a8(0);
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
    uint64_t v29 = v26;
    uint64_t v30 = v25 + *(void *)(v27 + 72) * v18;
    return v28(v30, a1, v29);
  }
LABEL_13:
  sub_10038E3F4(v18, a2, a3, a1, v24, a6);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10038C000(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_10002B7CC(&qword_100AD65C0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_10031FDF0(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_10091DF54();
    goto LABEL_7;
  }
  sub_100376F10(v16, a3 & 1);
  unint64_t v22 = sub_10031FDF0(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10002B70C(a2, (uint64_t)v10, &qword_100AD65C0);
  return sub_10038E4A8(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_10038C178(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_10002B7CC(&qword_100AD65C0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_10031FDF0(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_errorRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_10091F1F4();
    goto LABEL_7;
  }
  sub_100378BF4(v16, a3 & 1);
  unint64_t v22 = sub_10031FDF0(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10002B70C(a2, (uint64_t)v10, &qword_100AD65C0);
  return sub_10038E4A8(v13, (uint64_t)v10, a1, v19);
}

void sub_10038C2F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_10038C310(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_10038C330(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10000DDD0(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    unint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10007E7F4(v19, a4 & 1, a6);
  unint64_t v24 = sub_10000DDD0(a2, a3);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_17:
    sub_10096D3C0();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  unint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v26 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v26 = a2;
  v26[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v22[2] = v29;

  swift_bridgeObjectRetain();
}

id sub_10038C4BC(uint64_t a1, void *a2, char a3)
{
  return sub_10038C4DC(a1, a2, a3, (void (*)(void))sub_10091F7EC, &qword_100ACCC68);
}

id sub_10038C4DC(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_10031F918(a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    uint64_t v19 = (void *)*v8;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      id result = (id)swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100379490(v16, a3 & 1, a5);
  uint64_t v22 = sub_10031F918(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_17:
    type metadata accessor for FPProviderDomainID(0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*v8;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v24 = 8 * v13;
  *(void *)(v19[6] + v24) = a2;
  *(void *)(v19[7] + v24) = a1;
  uint64_t v25 = v19[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19[2] = v27;

  return a2;
}

id sub_10038C65C(uint64_t a1, void *a2, char a3)
{
  return sub_10038C4DC(a1, a2, a3, (void (*)(void))sub_10091F7F8, &qword_100ACCC70);
}

id sub_10038C67C(uint64_t a1, void *a2, char a3)
{
  return sub_10038C4DC(a1, a2, a3, (void (*)(void))sub_10091F804, &qword_100ACCC78);
}

id sub_10038C69C(uint64_t a1, void *a2, char a3)
{
  return sub_10038C4DC(a1, a2, a3, (void (*)(void))sub_10091F810, &qword_100ACCC80);
}

uint64_t sub_10038C6BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000DDD0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10091F9C0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1003797AC(v15, a4 & 1);
  unint64_t v21 = sub_10000DDD0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10038C82C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10000DDD0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10091FB78();
      goto LABEL_7;
    }
    sub_100379AE4(v15, a4 & 1, &qword_100AD20F0, (void (*)(uint64_t, unsigned char *))sub_1001E9E64);
    unint64_t v21 = sub_10000DDD0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    sub_1000268E0(v19);
    return sub_1001E9E64(a1, v19);
  }
LABEL_13:
  sub_10038E5A0(v12, a2, a3, (uint64_t)a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10038C9A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10038C9C0(a1, a2, a3, a4, (uint64_t (*)(void))sub_10091FD98, qword_100AD2100);
}

uint64_t sub_10038C9C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10000DDD0(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a4 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    char v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      *(void *)(v22[7] + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100379E1C(result, a4 & 1, a6);
  uint64_t result = sub_10000DDD0(a2, a3);
  if ((v20 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  char v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v24 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v24 = a2;
  v24[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v25 = v22[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v22[2] = v27;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_10038CB40(_OWORD *a1, void *a2, char a3)
{
  return sub_10038BCC4(a1, a2, a3, (uint64_t (*)(void *))sub_10031F918, (void (*)(void))sub_10091FF64, &qword_100AD20D0, type metadata accessor for FPDiagnosticAttributeKey);
}

uint64_t sub_10038CB88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000DDD0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10091F628();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_errorRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100379178(v15, a4 & 1);
  unint64_t v21 = sub_10000DDD0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

id sub_10038CCF8(void *a1, void *a2, uint64_t a3, char a4)
{
  unsigned int v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10031F91C(a2, a3 & 0x1FF);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10092057C();
      goto LABEL_7;
    }
    sub_10037ADB8(v15, a4 & 1);
    unint64_t v21 = sub_10031F91C(a2, a3 & 0x1FF);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      BOOL v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_10002B7CC((uint64_t *)&unk_100AD62C0);
    id result = (id)sub_10096D3C0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (void *)(v18[7] + 848 * v12);
    return sub_10038ED18(a1, v19);
  }
LABEL_13:
  sub_10038E714(v12, (uint64_t)a2, a3 | (((a3 >> 8) & 1) << 8), a1, v18);

  return sub_10009C394(a2, a3, BYTE1(a3) & 1);
}

uint64_t sub_10038CE7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_10096AE50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100320688(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100920798();
    goto LABEL_7;
  }
  sub_10037B250(result, a3 & 1);
  uint64_t result = sub_100320688(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_10096D3C0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10038E794(v14, (uint64_t)v11, a1, v20);
}

void sub_10038D018(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10031F858(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100920A2C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = v18[6] + 16 * v12;
    *(void *)uint64_t v22 = a2;
    *(unsigned char *)(v22 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_10037B644(v15, a4 & 1);
  unint64_t v20 = sub_10031F858(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_10096D3C0();
  __break(1u);
}

uint64_t sub_10038D164(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  return sub_10038B574(a1, a2, a3, a4, (uint64_t (*)(void))sub_100920BE4, &qword_100ACCC18);
}

uint64_t sub_10038D184(uint64_t a1, Swift::UInt64 a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10031F858(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100920DA0();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v20 = v18[6] + 16 * v12;
    *(void *)uint64_t v20 = a2;
    *(unsigned char *)(v20 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_10037BCAC(result, a4 & 1);
  uint64_t result = sub_10031F858(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

__n128 sub_10038D2C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  Swift::UInt v10 = *(void *)(a1 + 16);
  sub_100345414((uint64_t *)(a1 + 24), (uint64_t)v20);
  sub_10096D4B0();
  sub_10096BD50();
  sub_10096D4C0(v10);
  sub_100345414(v20, (uint64_t)&v21);
  int v11 = v22;
  switch(v22)
  {
    case 0xFAu:
      Swift::UInt v12 = 5;
      goto LABEL_15;
    case 0xFBu:
      Swift::UInt v12 = 4;
      goto LABEL_15;
    case 0xFCu:
      goto LABEL_14;
    case 0xFDu:
      Swift::UInt v12 = 1;
      goto LABEL_15;
    case 0xFEu:
      Swift::UInt v12 = 0;
      goto LABEL_15;
    default:
      Swift::UInt64 v13 = v21;
      sub_10096D4C0(3uLL);
      if (v11 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v11)
        {
          if (v11 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v13);
          }
          else
          {
            if (v13) {
              Swift::UInt v12 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v12 = 2;
LABEL_15:
            sub_10096D4C0(v12);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v13);
        }
      }
      uint64_t v14 = *(char *)(a1 + 33);
      if (v14 == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_1009805D8[v14]);
      }
      sub_10096D500();
      unint64_t v15 = sub_10096CA90();
      *(void *)((char *)a4 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v15;
      uint64_t v16 = a4[6] + 40 * v15;
      __int16 v17 = *(_WORD *)(a1 + 32);
      __n128 result = *(__n128 *)(a1 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)a1;
      *(__n128 *)(v16 + 16) = result;
      *(_WORD *)(v16 + 32) = v17;
      uint64_t v19 = a4[7] + 24 * v15;
      *(void *)uint64_t v19 = a2;
      *(void *)(v19 + 8) = a3;
      *(double *)(v19 + 16) = a5;
      ++a4[2];
      return result;
  }
}

__n128 sub_10038D524(uint64_t a1, void *a2, double a3)
{
  sub_10096D4B0();
  long long v14 = *(_OWORD *)(a1 + 16);
  __int16 v15 = *(_WORD *)(a1 + 32);
  sub_100345414((uint64_t *)&v14 + 1, (uint64_t)v16);
  sub_10096BD50();
  sub_10096D4C0(v14);
  sub_100345414(v16, (uint64_t)&v17);
  int v6 = v18;
  switch(v18)
  {
    case 0xFAu:
      Swift::UInt v7 = 5;
      goto LABEL_15;
    case 0xFBu:
      Swift::UInt v7 = 4;
      goto LABEL_15;
    case 0xFCu:
      goto LABEL_14;
    case 0xFDu:
      Swift::UInt v7 = 1;
      goto LABEL_15;
    case 0xFEu:
      Swift::UInt v7 = 0;
      goto LABEL_15;
    default:
      Swift::UInt64 v8 = v17;
      sub_10096D4C0(3uLL);
      if (v6 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v6)
        {
          if (v6 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v8);
          }
          else
          {
            if (v8) {
              Swift::UInt v7 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v7 = 2;
LABEL_15:
            sub_10096D4C0(v7);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v8);
        }
      }
      uint64_t v9 = SHIBYTE(v15);
      if (SHIBYTE(v15) == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_1009805D8[v9]);
      }
      sub_10096BD50();
      sub_10096D500();
      unint64_t v10 = sub_10096CA90();
      *(void *)((char *)a2 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
      uint64_t v11 = a2[6] + 56 * v10;
      long long v12 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)a1;
      *(_OWORD *)(v11 + 16) = v12;
      __n128 result = *(__n128 *)(a1 + 32);
      *(__n128 *)(v11 + 32) = result;
      *(void *)(v11 + 48) = *(void *)(a1 + 48);
      *(double *)(a2[7] + 8 * v10) = a3;
      ++a2[2];
      return result;
  }
}

uint64_t sub_10038D78C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  __chkstk_darwin(v6 - 8);
  Swift::UInt64 v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __int16 v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096D4B0();
  sub_10002B70C(a1, (uint64_t)v15, &qword_100AD65C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10001AE98((uint64_t)v15, (uint64_t)v8, (uint64_t *)&unk_100AD65B0);
    sub_10096D4C0(1uLL);
    sub_1008D6D84();
    uint64_t v16 = (uint64_t)v8;
    Swift::UInt64 v17 = (uint64_t *)&unk_100AD65B0;
  }
  else
  {
    sub_10001AE98((uint64_t)v15, (uint64_t)v11, (uint64_t *)&unk_100AD0A90);
    sub_10096D4C0(0);
    sub_1008D68E4();
    uint64_t v16 = (uint64_t)v11;
    Swift::UInt64 v17 = (uint64_t *)&unk_100AD0A90;
  }
  sub_10002B770(v16, v17);
  sub_10096D500();
  unint64_t v18 = sub_10096CA90();
  *(void *)((char *)a3 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v18;
  uint64_t result = sub_10001AE98(a1, a3[6] + *(void *)(v13 + 72) * v18, &qword_100AD65C0);
  *(void *)(a3[7] + 8 * v18) = a2;
  ++a3[2];
  return result;
}

_OWORD *sub_10038DA0C(char a1, _OWORD *a2, void *a3)
{
  sub_10096D4B0();
  switch(a1)
  {
    case 28:
      Swift::UInt v6 = 0;
      goto LABEL_10;
    case 29:
      Swift::UInt v6 = 1;
      goto LABEL_10;
    case 30:
      Swift::UInt v6 = 2;
      goto LABEL_10;
    case 31:
      Swift::UInt v6 = 4;
      goto LABEL_10;
    case 32:
      Swift::UInt v6 = 5;
      goto LABEL_10;
    case 33:
      Swift::UInt v6 = 6;
      goto LABEL_10;
    case 34:
      Swift::UInt v6 = 7;
LABEL_10:
      sub_10096D4C0(v6);
      break;
    default:
      sub_10096D4C0(3uLL);
      sub_10085B7F4(a1);
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
  }
  sub_10096D500();
  unint64_t v7 = sub_10096CA90();
  *(void *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  *(unsigned char *)(a3[6] + v7) = a1;
  uint64_t result = sub_100042A48(a2, (_OWORD *)(a3[7] + 32 * v7));
  ++a3[2];
  return result;
}

void *sub_10038DB90(void *a1, uint64_t a2, const void *a3, void *a4)
{
  sub_10096D4B0();
  if ((a2 & 0x100) != 0)
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v8 = a1;
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(a1, a2, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if ((_BYTE)a2)
    {
      if (a2 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)a1);
      }
      else
      {
        if (a1) {
          Swift::UInt v9 = 3;
        }
        else {
          Swift::UInt v9 = 2;
        }
        sub_10096D4C0(v9);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)a1);
    }
  }
  sub_10096D500();
  unint64_t v10 = sub_10096CA90();
  *(void *)((char *)a4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  uint64_t v11 = a4[6] + 16 * v10;
  *(void *)uint64_t v11 = a1;
  *(unsigned char *)(v11 + 8) = a2;
  *(unsigned char *)(v11 + 9) = BYTE1(a2) & 1;
  uint64_t result = memcpy((void *)(a4[7] + 848 * v10), a3, 0x350uLL);
  ++a4[2];
  return result;
}

_OWORD *sub_10038DD10(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  Swift::UInt v6 = (void *)(a5[6] + 16 * a1);
  *Swift::UInt v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100042A48(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_10038DD7C(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  return sub_10038DD88(a1, a2, a3, a4, a5, &qword_100ACCA78);
}

uint64_t sub_10038DD88(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t *a6)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6] + 16 * a1;
  *(void *)uint64_t v10 = a2;
  *(unsigned char *)(v10 + 8) = a3;
  uint64_t v11 = a5[7];
  uint64_t v12 = sub_10002B7CC(a6);
  uint64_t result = sub_10001AE98(a4, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_10038DE34(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t result = sub_10001AE98(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t *)&unk_100ACC9B0);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_10038DEDC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_100042A48(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_10038DF58(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_10038DFA0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  sub_10038F19C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_10096B0E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_10038E090(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t result = sub_10038F19C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_10038E144(unint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = a7[6] + 16 * result;
  *(void *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 8) = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(unsigned char *)(v8 + 8) = a5 & 1;
  *(void *)(v8 + 16) = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

unint64_t sub_10038E1A4(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(unsigned char *)(v6 + 8) = a4 & 1;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_10038E1FC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for SyncState();
  uint64_t result = sub_10038F19C(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for SyncState);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_10038E2A8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a8[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(void *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5;
  uint64_t v9 = (void *)(a8[7] + 16 * result);
  *uint64_t v9 = a6;
  v9[1] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

uint64_t sub_10038E2FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = sub_10001AE98(a2, a5[6] + 48 * a1, &qword_100ACC9E0);
  uint64_t v10 = (void *)(a5[7] + 16 * a1);
  void *v10 = a3;
  v10[1] = a4;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

uint64_t sub_10038E38C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_10009CB44(a3, a4[7] + 16 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_10038E3F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = (void *)(a5[6] + 16 * a1);
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

uint64_t sub_10038E4A8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t result = sub_10001AE98(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_100AD65C0);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_10038E558(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_10038E5A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(a4 + 32);
  uint64_t v12 = sub_10038F0E4(a4, v10);
  __chkstk_darwin(v12);
  BOOL v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  sub_10038E898(a1, a2, a3, (uint64_t)v14, a5, v10, v11);
  return sub_1000268E0(a4);
}

_OWORD *sub_10038E6AC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100042A48(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_10038E714(unint64_t a1, uint64_t a2, __int16 a3, void *__src, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = a5[6] + 16 * a1;
  *(void *)uint64_t v6 = a2;
  *(unsigned char *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 9) = HIBYTE(a3) & 1;
  uint64_t result = memcpy((void *)(a5[7] + 848 * a1), __src, 0x350uLL);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_10038E794(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_10096AE50();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_10038E84C(unint64_t result, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_10038E898(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v13 = sub_10009C958((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v14 = (void *)(a5[6] + 16 * a1);
  *BOOL v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_1001E9E64(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

uint64_t sub_10038E970()
{
  return 26;
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t static Fields.posixPermissions.getter()
{
  return 4;
}

uint64_t sub_10038EAA0()
{
  return 5;
}

uint64_t sub_10038EAA8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  a4(255);
  swift_getWitnessTable();
  uint64_t v5 = sub_10096D200();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - v7;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for FileTreeError.NoContentToFetch.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys()
{
  return sub_10014D080();
}

void *sub_10038ED18(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_10038ED74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 600);
  uint64_t v3 = *(void *)(a1 + 608);
  uint64_t v4 = *(void *)(a1 + 616);
  uint64_t v5 = *(void *)(a1 + 624);
  uint64_t v6 = *(void *)(a1 + 632);
  uint64_t v7 = *(void *)(a1 + 640);
  uint64_t v8 = *(void *)(a1 + 648);
  uint64_t v9 = *(void *)(a1 + 656);
  long long v31 = *(_OWORD *)(a1 + 680);
  long long v32 = *(_OWORD *)(a1 + 664);
  long long v29 = *(_OWORD *)(a1 + 712);
  long long v30 = *(_OWORD *)(a1 + 696);
  long long v27 = *(_OWORD *)(a1 + 744);
  long long v28 = *(_OWORD *)(a1 + 728);
  long long v25 = *(_OWORD *)(a1 + 776);
  long long v26 = *(_OWORD *)(a1 + 760);
  long long v24 = *(_OWORD *)(a1 + 792);
  long long v22 = *(_OWORD *)(a1 + 416);
  long long v23 = *(_OWORD *)(a1 + 432);
  long long v20 = *(_OWORD *)(a1 + 384);
  long long v21 = *(_OWORD *)(a1 + 400);
  long long v18 = *(_OWORD *)(a1 + 352);
  long long v19 = *(_OWORD *)(a1 + 368);
  long long v16 = *(_OWORD *)(a1 + 320);
  long long v17 = *(_OWORD *)(a1 + 336);
  long long v14 = *(_OWORD *)(a1 + 288);
  long long v15 = *(_OWORD *)(a1 + 304);
  long long v12 = *(_OWORD *)(a1 + 256);
  long long v13 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 224);
  sub_10009C3A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    (void *)v11,
    *((uint64_t *)&v11 + 1),
    *(void **)(a1 + 240),
    *(void *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((unint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((void **)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    *(void *)(a1 + 448));
  sub_10009C6EC(v2, v3, v4, v5, v6, v7, v8, v9, v32, *((uint64_t *)&v32 + 1), v31, *((uint64_t *)&v31 + 1), (void *)v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24);
  return a1;
}

unint64_t sub_10038EF3C()
{
  unint64_t result = qword_100ACFDB0;
  if (!qword_100ACFDB0)
  {
    sub_10096AE50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ACFDB0);
  }
  return result;
}

uint64_t sub_10038EF94(uint64_t a1)
{
  return a1;
}

uint64_t sub_10038EFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038F02C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10038F088(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10038F0E4(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10038F134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10038F19C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *sub_10038F210(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10038F2ACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_10038F2DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F3A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_10038F3D0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10038F4C8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10038F5BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F5D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F5F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F610()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F62C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F648()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F664()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F680()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F69C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F6B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F6D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F6F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F70C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F728()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F744()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F760()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F77C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F798()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F7B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F7D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F7EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F808()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F824()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F840()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F85C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F878()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F894()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F8B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F8CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F8E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F904()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F920()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F93C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F958()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F974()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F990()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F9AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F9C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038F9E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA00()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA38()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA54()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA70()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FA8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FAA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FAC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FAE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FAFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FB18()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FB34()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FB50()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FB6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FB88()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FBA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FBC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FBDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FBF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FC14()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FC30()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FC4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FC68()
{
  return swift_getWitnessTable();
}

uint64_t sub_10038FCC0(uint64_t a1)
{
  return sub_10036A6C8(a1);
}

uint64_t sub_10038FCD8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    *((void *)&v7 + 1) = &type metadata for String;
    *(void *)&long long v6 = a1;
    *((void *)&v6 + 1) = a2;
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1003AC444((uint64_t)&v6);
  uint64_t v4 = v3;
  sub_10017D1A4((uint64_t)&v6);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_10038FD94(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = 0;
    v7[1] = 0;
    _OWORD v7[2] = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = &type metadata for UInt64;
    uint64_t v2 = __ROR8__(a1, 32);
  }
  v7[0] = v2;
  uint64_t v3 = sub_1003AC444((uint64_t)v7);
  uint64_t v5 = v4;
  sub_10017D1A4((uint64_t)v7);
  if (v5) {
    return v3;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_10038FE50(uint64_t a1, char a2)
{
  if (a2)
  {
    a1 = 0;
    v6[1] = 0;
    v6[2] = 0;
    long long v7 = 0;
  }
  else
  {
    long long v7 = &type metadata for UInt;
  }
  v6[0] = a1;
  uint64_t v2 = sub_1003AC444((uint64_t)v6);
  uint64_t v4 = v3;
  sub_10017D1A4((uint64_t)v6);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_10038FF08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1852399981 && a2 == 0xE400000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10038FFE4(char a1)
{
  if (a1) {
    return 0x726568746FLL;
  }
  else {
    return 1852399981;
  }
}

BOOL sub_100390010(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ScanReturnCode.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10039001C()
{
  return ScanReturnCode.hashValue.getter(*v0);
}

void sub_100390024(uint64_t a1)
{
  ScanReturnCode.hash(into:)(a1, *v1);
}

Swift::Int sub_10039002C()
{
  sub_10096D4B0();
  ScanReturnCode.hash(into:)((uint64_t)v2, *v0);
  return sub_10096D500();
}

uint64_t sub_10039006C()
{
  return sub_10038FFE4(*v0);
}

uint64_t sub_100390074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10038FF08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10039009C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003900F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_100390144@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v46 = a6;
  uint64_t v44 = sub_10096C890();
  uint64_t v50 = *(void *)(v44 - 8);
  uint64_t v11 = __chkstk_darwin(v44);
  uint64_t v55 = (char *)&v39 - v12;
  uint64_t v48 = *(void *)(a2 - 8);
  __chkstk_darwin(v11);
  unsigned int v43 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v47 = sub_10096D0B0();
  uint64_t v54 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v15 = (char *)&v39 - v14;
  uint64_t v49 = a2;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v51 = a5;
  uint64_t v16 = type metadata accessor for ReconciliationID();
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  long long v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v21 = (char *)&v39 - v20;
  sub_10002689C(a1, a1[3]);
  long long v22 = v60;
  sub_10096D570();
  if (v22)
  {
    uint64_t v27 = (uint64_t)a1;
  }
  else
  {
    uint64_t v40 = v19;
    unsigned int v41 = v21;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    uint64_t v42 = v16;
    uint64_t v60 = a1;
    uint64_t v25 = v50;
    LOBYTE(v56) = 0;
    uint64_t v26 = v47;
    sub_10096CFB0();
    long long v29 = v15;
    uint64_t v30 = v26;
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v55, 1, v24);
    if (v31 == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v55, v44);
      LOBYTE(v56) = 1;
      long long v32 = v40;
      sub_10096D040();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v30);
      uint64_t v35 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v37 = v41;
      v36(v41, v32, v35);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v26);
      char v33 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      uint64_t v34 = v43;
      v33(v43, v55, v24);
      uint64_t v37 = v41;
      v33(v41, v34, v24);
      uint64_t v35 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    }
    uint64_t v38 = (uint64_t)v60;
    v36(v46, v37, v35);
    uint64_t v27 = v38;
  }
  return sub_1000268E0(v27);
}

uint64_t sub_100390630(void *a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v34 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(*(void *)(v6 + 16) - 8);
  uint64_t v7 = __chkstk_darwin(v4);
  int v31 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  uint64_t v33 = v16;
  uint64_t v40 = v16;
  uint64_t v41 = v17;
  uint64_t v36 = v17;
  v30[1] = v15;
  v30[2] = v14;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v18 = sub_10096D200();
  uint64_t v38 = *(void *)(v18 - 8);
  uint64_t v39 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v30 - v19;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v37, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v22 = v34;
    uint64_t v21 = v35;
    uint64_t v23 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v12, v36);
    LOBYTE(v40) = 1;
    uint64_t v24 = v39;
    sub_10096D1A0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v20, v24);
  }
  else
  {
    uint64_t v27 = v31;
    uint64_t v26 = v32;
    uint64_t v28 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v12, v33);
    LOBYTE(v40) = 0;
    uint64_t v29 = v39;
    sub_10096D1A0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v20, v29);
  }
}

uint64_t sub_100390A10@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return sub_100390144(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_100390A34(void *a1, uint64_t a2)
{
  return sub_100390630(a1, a2);
}

uint64_t *sub_100390A4C(unsigned __int8 a1, id a2)
{
  uint64_t v5 = *v2;
  int v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 129)
    {
      uint64_t v13 = *(void **)((char *)v2 + *(void *)(v5 + 608));
      if (v13) {
        id v14 = [v13 version];
      }
      else {
        id v14 = 0;
      }
      id v7 = [a2 bindLongParameter:v14];
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v6 != 3)
  {
    if (v6 == 2)
    {
      if (a1 != 66)
      {
        if (a1 == 67)
        {
          id v7 = [a2 bindUnsignedLongParameter:*(uint64_t *)((char *)v2 + *(void *)(v5 + 584))];
LABEL_21:
          id v23 = v7;
          BOOL v2 = (uint64_t *)_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

          return v2;
        }
        goto LABEL_13;
      }
      swift_getAssociatedTypeWitness();
      uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v21 = *(uint64_t (**)(id, uint64_t, uint64_t))(v20 + 32);
      uint64_t v22 = swift_checkMetadataState();
      return (uint64_t *)v21(a2, v22, v20);
    }
    goto LABEL_13;
  }
  if (a1 != 97)
  {
    if (a1 == 98)
    {
      uint64_t v8 = (uint64_t)v2 + *(void *)(v5 + 600);
      long long v9 = *(_OWORD *)(v5 + 560);
      long long v25 = *(_OWORD *)(v5 + 544);
      long long v26 = v9;
      uint64_t v10 = type metadata accessor for Bouncing.BouncingContext();
      uint64_t WitnessTable = swift_getWitnessTable();
      return (uint64_t *)sub_1003AA73C(v8, v10, WitnessTable);
    }
LABEL_13:
    uint64_t v12 = sub_1007B2514(a1, (uint64_t)a2);
    if (v3) {
      return v2;
    }
    return (uint64_t *)v12;
  }
  uint64_t v15 = (uint64_t *)((char *)v2 + *(void *)(v5 + 592));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *((void *)&v26 + 1) = &type metadata for String;
  *(void *)&long long v25 = v16;
  *((void *)&v25 + 1) = v17;
  swift_bridgeObjectRetain_n();
  BOOL v2 = (uint64_t *)sub_1003AC444((uint64_t)&v25);
  uint64_t v19 = v18;
  sub_10017D1A4((uint64_t)&v25);
  if (v19)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t result = (uint64_t *)sub_10096CE20();
  __break(1u);
  return result;
}

void sub_100390D1C(uint64_t a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v43 = (void *)a4;
  unsigned int v49 = a3;
  uint64_t v7 = v4[68];
  uint64_t v8 = v4[69];
  uint64_t v9 = v4[70];
  uint64_t v10 = v4[71];
  uint64_t v45 = v7;
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  uint64_t v48 = v10;
  uint64_t v11 = (ValueMetadata *)type metadata accessor for Bouncing.BouncingContext();
  uint64_t v12 = sub_10096C890();
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v43 - v14;
  int v16 = a1 >> 5;
  if (v16 == 4)
  {
    if (a1 == 129)
    {
      id v19 = a2;
      uint64_t v20 = v49;
      if (([v19 isNullAtIndex:v49] & 1) != 0
        || (id v21 = [v19 integerAtIndex:v20]) == 0)
      {

        uint64_t v30 = (uint64_t)v43;
        *(_OWORD *)uint64_t v43 = 0u;
        *(_OWORD *)(v30 + 16) = 0u;
      }
      else
      {
        id v22 = [self domainVersionWithVersion:v21];

        unint64_t v23 = sub_1003923E8();
        uint64_t v24 = v43;
        v43[3] = v23;
        *uint64_t v24 = v22;
      }
      return;
    }
LABEL_16:
    uint64_t v45 = v7;
    uint64_t v46 = v8;
    uint64_t v47 = v9;
    uint64_t v48 = v10;
    type metadata accessor for Job();
    sub_1007B2780(a2, a1, v49, (uint64_t)v43);
    return;
  }
  if (v16 == 3)
  {
    if (a1 == 97)
    {
      uint64_t v37 = v43;
      v43[3] = &type metadata for Filename;
      id v38 = [a2 stringAtIndex:v49];
      uint64_t v39 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v41 = v40;

      *uint64_t v37 = v39;
      v37[1] = v41;
      return;
    }
    if (a1 == 98)
    {
      uint64_t v25 = v13;
      swift_getWitnessTable();
      uint64_t v26 = v44;
      sub_1003AC384(v49, v11, (uint64_t)v15);
      if (!v26)
      {
        Description = (uint64_t (**)(char *, uint64_t, ValueMetadata *))v11[-1].Description;
        int v28 = Description[6](v15, 1, v11);
        uint64_t v29 = (uint64_t)v43;
        if (v28 == 1)
        {
          (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
          *(_OWORD *)uint64_t v29 = 0u;
          *(_OWORD *)(v29 + 16) = 0u;
        }
        else
        {
          v43[3] = v11;
          uint64_t v42 = sub_10009C958((uint64_t *)v29);
          Description[4]((char *)v42, (uint64_t)v15, v11);
        }
      }
      return;
    }
    goto LABEL_16;
  }
  if (v16 != 2) {
    goto LABEL_16;
  }
  if (a1 != 66)
  {
    if (a1 == 67)
    {
      id v17 = [a2 unsignedLongAtIndex:v49];
      uint64_t v18 = v43;
      v43[3] = &type metadata for UInt;
      *uint64_t v18 = v17;
      return;
    }
    goto LABEL_16;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v33 = *(void (**)(id, void, uint64_t, uint64_t))(v32 + 16);
  uint64_t v34 = v43;
  v43[3] = AssociatedTypeWitness;
  sub_10009C958(v34);
  id v35 = a2;
  uint64_t v36 = v44;
  v33(v35, v49, AssociatedTypeWitness, v32);
  if (v36) {
    sub_10017D150((uint64_t)v34);
  }
}

uint64_t sub_10039113C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a1;
  *(void *)&long long v54 = &_s9SQLFieldsON_1;
  *((void *)&v54 + 1) = a2;
  unint64_t v43 = sub_100392394();
  *(void *)&long long v55 = v43;
  *((void *)&v55 + 1) = a3;
  uint64_t v45 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v42 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v36 - v6;
  long long v7 = *(_OWORD *)(v3 + 560);
  long long v47 = *(_OWORD *)(v3 + 544);
  long long v48 = v7;
  uint64_t v41 = v3;
  long long v54 = v47;
  long long v55 = v7;
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v8 = sub_10096C890();
  uint64_t v46 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v14 = (char *)&v36 - v13;
  LOBYTE(v54) = 66;
  uint64_t v15 = a2;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a3;
  uint64_t v19 = v50;
  uint64_t v20 = v49;
  sub_1006FCBE4((uint64_t)&v54, AssociatedTypeWitness, v16, AssociatedTypeWitness, v18);
  if (!v19)
  {
    uint64_t v39 = v10;
    *(void *)&long long v47 = v14;
    *(void *)&long long v48 = AssociatedTypeWitness;
    uint64_t v40 = v8;
    uint64_t v50 = v12;
    LOBYTE(v54) = 67;
    sub_1006FCBE4((uint64_t)&v54, (uint64_t)&type metadata for UInt, v15, (uint64_t)&type metadata for UInt, v17);
    uint64_t v21 = v56;
    LOBYTE(v53) = 97;
    sub_1006FCBE4((uint64_t)&v53, (uint64_t)&type metadata for Filename, v15, (uint64_t)&type metadata for Filename, v17);
    uint64_t v38 = v21;
    long long v23 = v54;
    LOBYTE(v53) = 98;
    sub_1006FCBE4((uint64_t)&v53, v40, v15, v40, v17);
    long long v37 = v23;
    LOBYTE(v52) = -127;
    uint64_t v24 = sub_10002B7CC((uint64_t *)&unk_100AD6860);
    sub_1006FCBE4((uint64_t)&v52, v24, v15, v24, v17);
    uint64_t v25 = v53;
    uint64_t v26 = v44;
    sub_1006FD068((uint64_t)sub_100391758, 0, v15, (uint64_t)&_s9SQLFieldsON_1, v17, v43, v44);
    uint64_t v27 = v45;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v29 = sub_1007B28C0(v26, v27, WitnessTable);
    uint64_t v30 = v46;
    int v31 = v29;
    unint64_t v43 = v32;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v27);
    char v51 = 65;
    sub_1006FCBE4((uint64_t)&v51, (uint64_t)&type metadata for JobReason, v15, (uint64_t)&type metadata for JobReason, v17);
    uint64_t v33 = (uint64_t)v31;
    uint64_t v34 = v47;
    uint64_t v35 = (uint64_t)v39;
    sub_10083EC08(v47, v38, v37, *((uint64_t *)&v37 + 1), (uint64_t)v39, v25, v33, v43, v52);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v40);
    (*(void (**)(uint64_t, void))(v50 + 8))(v34, v48);
    uint64_t v17 = sub_1007B70D8(v20, v15, v17);
    swift_retain();
    swift_release();
  }
  return v17;
}

uint64_t sub_100391750(uint64_t a1, uint64_t a2)
{
  return a2;
}

unsigned char *sub_100391758@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result | 0x20;
  return result;
}

uint64_t *sub_100391768(unsigned __int8 *a1, void *a2)
{
  return sub_100390A4C(*a1, a2);
}

void sub_100391790(unsigned __int8 *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

uint64_t sub_1003917AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10039113C(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1003917D8(unsigned __int8 a1, id a2)
{
  if (a1 != 99) {
    return sub_1007B2514(a1, (uint64_t)a2);
  }
  Class isa = sub_10096D540().super.super.isa;
  id v4 = [a2 bindObjectParameter:isa];

  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  return v5;
}

uint64_t sub_100391870@<X0>(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a2 == 99)
  {
    id v7 = [a1 unsignedLongLongAtIndex:a3];
    a4[3] = &type metadata for CapturedContent;
    uint64_t result = swift_allocObject();
    *a4 = result;
    *(void *)(result + 16) = v7;
    *(_OWORD *)(result + 24) = xmmword_100973BC0;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(unsigned char *)(result + 56) = 1;
    *(void *)(result + 64) = 0;
  }
  else
  {
    type metadata accessor for Job();
    return sub_1007B2780(a1, a2, a3, (uint64_t)a4);
  }
  return result;
}

uint64_t sub_10039195C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_100392394();
  *(void *)&long long v18 = &_s9SQLFieldsON_1;
  *((void *)&v18 + 1) = a2;
  *(void *)&long long v19 = v7;
  *((void *)&v19 + 1) = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - v10;
  LOBYTE(v24) = 99;
  sub_1006FCBE4((uint64_t)&v24, (uint64_t)&type metadata for CapturedContent, a2, (uint64_t)&type metadata for CapturedContent, a3);
  if (!v3)
  {
    v22[0] = v18;
    v22[1] = v19;
    _OWORD v22[2] = v20;
    uint64_t v23 = v21;
    sub_1006FD068((uint64_t)sub_1003925B8, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v7, (uint64_t)v11);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = sub_1007B28C0((uint64_t)v11, v8, WitnessTable);
    uint64_t v16 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v17 = 65;
    sub_1006FCBE4((uint64_t)&v17, (uint64_t)&type metadata for JobReason, a2, (uint64_t)&type metadata for JobReason, a3);
    sub_10086C890((uint64_t)v22, (uint64_t)v13, v16, v24);
    a1 = sub_1007B70D8(a1, a2, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

uint64_t sub_100391BE4(unsigned __int8 *a1, void *a2)
{
  return sub_1003917D8(*a1, a2);
}

uint64_t sub_100391C0C@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_100391870(a2, *a1, a3, a4);
}

uint64_t sub_100391C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10039195C(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_100391C54(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1 >> 5;
  if (v3 == 3)
  {
    if (a1 == 96)
    {
LABEL_6:
      swift_getAssociatedTypeWitness();
      uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v6 = swift_checkMetadataState();
      return v5(a2, v6, v4);
    }
  }
  else if (v3 == 2 && a1 == 66)
  {
    goto LABEL_6;
  }
  return sub_1007B2514(a1, a2);
}

uint64_t sub_100391D80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v9 = a1 >> 5;
  if (v9 == 3)
  {
    if (a1 != 96)
    {
LABEL_4:
      type metadata accessor for Job();
      return sub_1007B2780(a2, a1, a3, (uint64_t)a4);
    }
  }
  else if (v9 != 2 || a1 != 66)
  {
    goto LABEL_4;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v12 + 16);
  a4[3] = AssociatedTypeWitness;
  sub_10009C958(a4);
  uint64_t result = v13(a2, a3, AssociatedTypeWitness, v12);
  if (v4) {
    return sub_10017D150((uint64_t)a4);
  }
  return result;
}

uint64_t sub_100391EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v34[0] = (uint64_t)&_s9SQLFieldsON_1;
  v34[1] = a2;
  unint64_t v29 = sub_100392394();
  _OWORD v34[2] = v29;
  v34[3] = a3;
  uint64_t v30 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  int v9 = (char *)v27 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - v14;
  LOBYTE(v34[0]) = 66;
  uint64_t v32 = a1;
  uint64_t v16 = (uint64_t)v33;
  sub_1006FCBE4((uint64_t)v34, AssociatedTypeWitness, a2, AssociatedTypeWitness, a3);
  if (!v16)
  {
    uint64_t v33 = v15;
    v27[1] = v4;
    LOBYTE(v34[0]) = 96;
    sub_1006FCBE4((uint64_t)v34, AssociatedTypeWitness, a2, AssociatedTypeWitness, a3);
    char v17 = v9;
    v27[0] = a2;
    sub_1006FD068((uint64_t)sub_1003925B8, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v29, (uint64_t)v9);
    uint64_t v18 = v30;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v20 = sub_1007B28C0((uint64_t)v9, v18, WitnessTable);
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v18);
    char v35 = 65;
    sub_1006FCBE4((uint64_t)&v35, (uint64_t)&type metadata for JobReason, v27[0], (uint64_t)&type metadata for JobReason, a3);
    uint64_t v24 = (uint64_t)v33;
    sub_1008AA57C((uint64_t)v33, (uint64_t)v13, (uint64_t)v20, v22, v34[0]);
    uint64_t v25 = v13;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v31 + 8);
    v26(v25, AssociatedTypeWitness);
    v26((char *)v24, AssociatedTypeWitness);
    uint64_t v4 = sub_1007B70D8(v32, v27[0], a3);
    swift_retain();
    swift_release();
  }
  return v4;
}

uint64_t sub_1003922D0(unsigned __int8 *a1, uint64_t a2)
{
  return sub_100391C54(*a1, a2);
}

uint64_t sub_1003922F8@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_100391D80(*a1, a2, a3, a4);
}

uint64_t sub_100392314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100391EE0(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_100392340(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t _s10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100392394()
{
  unint64_t result = qword_100AD2D88[0];
  if (!qword_100AD2D88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD2D88);
  }
  return result;
}

unint64_t sub_1003923E8()
{
  unint64_t result = qword_100AD0C08;
  if (!qword_100AD0C08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100AD0C08);
  }
  return result;
}

uint64_t sub_100392428()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + 24), v1);
  }

  return swift_deallocObject();
}

unsigned char *sub_100392470(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10039253CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100392564()
{
  return swift_getWitnessTable();
}

uint64_t sub_100392580()
{
  return swift_getWitnessTable();
}

uint64_t sub_10039259C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003925C0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10096AE90();
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096A7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = (void *)swift_slowAlloc();
  unint64_t v17 = fgetxattr(a1, "com.apple.fileprovider.detached#B", v16, 0x800uLL, 0, 0);
  unint64_t v18 = v17;
  if ((v17 & 0x8000000000000000) != 0)
  {
    if (sub_10096B4D0() != 93
      || (unint64_t v18 = fgetxattr(a1, "com.apple.fileprovider.detached", v16, 0x800uLL, 0, 0), (v18 & 0x8000000000000000) != 0)
      && (unint64_t v18 = fgetxattr(a1, "com.apple.fileprovider.detached#PN", v16, 0x800uLL, 0, 0),
          (v18 & 0x8000000000000000) != 0))
    {
      if (sub_10096B4D0() != 93)
      {
        sub_10096B4D0();
        uint64_t v27 = sub_10096B4A0();
        if ((v27 & (unint64_t)&_mh_execute_header) != 0) {
          int v28 = 22;
        }
        else {
          int v28 = v27;
        }
        int v35 = v28;
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_100034080();
        sub_10096ABD0();
        goto LABEL_19;
      }
      unint64_t v18 = 0;
    }
    else
    {
      fsetxattr(a1, "com.apple.fileprovider.detached#B", v16, v18, 0, 0);
      fremovexattr(a1, "com.apple.fileprovider.detached", 0);
      fremovexattr(a1, "com.apple.fileprovider.detached#PN", 0);
      if (v18 >= 0x801) {
        goto LABEL_3;
      }
    }
  }
  else if (v17 >= 0x801)
  {
LABEL_3:
    int v36 = 34;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100034080();
    sub_10096ABD0();
    uint64_t v15 = v13;
LABEL_19:
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    swift_willThrow();
    uint64_t v26 = v34;
    return sub_100083498(v26);
  }
  uint64_t v19 = v31;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Data.Deallocator.none(_:), v31);
  sub_10096AE80();
  if (v18)
  {
    sub_10096A8C0();
    swift_allocObject();
    swift_retain();
    uint64_t v20 = sub_10096A860();
    unint64_t v18 = sub_100157758(v20, v18);
    unint64_t v22 = v21;
    swift_release();
  }
  else
  {
    uint64_t v23 = (void (*)(void *, void))sub_10096AE80();
    v23(v16, 0);
    swift_release();
    swift_release();
    unint64_t v22 = 0xC000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  uint64_t v24 = v34;
  uint64_t v25 = v32;
  sub_10016A248(v34, v32);
  sub_100392D2C(v18, v22, v25, v33);
  uint64_t v26 = v24;
  return sub_100083498(v26);
}

uint64_t static NSURLBookmarkResolutionOptions.failPromisedItem.getter()
{
  return 0x4000;
}

uint64_t sub_100392A50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v9 = sub_10002B7CC(&qword_100AD2EB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_100393BFC();
  sub_10096D590();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_100157BC4();
  sub_10096D1A0();
  if (!v5)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v18 = 1;
    sub_100078E40();
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100392BF0()
{
  if (*v0) {
    return 0x6F42746E65726170;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_100392C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100393C50(a1, a2);
  *a3 = result;
  return result;
}

void sub_100392C58(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100392C64(uint64_t a1)
{
  unint64_t v2 = sub_100393BFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100392CA0(uint64_t a1)
{
  unint64_t v2 = sub_100393BFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100392CDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100393D58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100392D0C(void *a1)
{
  return sub_100392A50(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100392D2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v57 = a3;
  uint64_t v7 = sub_10096B480();
  uint64_t v55 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096AE50();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096AA90();
  swift_allocObject();
  uint64_t v14 = sub_10096AA80();
  sub_1003932D4();
  sub_10096AA70();
  if (v4)
  {
    swift_release();
    sub_10001E9C0(a1, a2);
    return sub_100083498(v57);
  }
  uint64_t v51 = v14;
  uint64_t v48 = v10;
  uint64_t v49 = v7;
  uint64_t v47 = v11;
  id v16 = v59;
  uint64_t v53 = v60;
  long long v54 = v9;
  uint64_t v17 = v61;
  LOBYTE(v59) = 0;
  unint64_t v50 = v62;
  sub_10096AD40();
  uint64_t v18 = v56;
  uint64_t v52 = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v56, v13, v48);
  int v26 = v59;
  uint64_t v27 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  *(unsigned char *)(v18 + v27[7]) = v26;
  int v28 = (void *)(v18 + v27[5]);
  *int v28 = v16;
  v28[1] = v53;
  swift_bridgeObjectRetain();
  if (v26 != 1)
  {
    swift_release();
    sub_10001E9C0(a1, a2);
    sub_100083498(v57);
    unint64_t v34 = v50;
    sub_10001EBB0(v17, v50);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10001E9C0(v17, v34);
    goto LABEL_12;
  }
  uint64_t v29 = v52;
  uint64_t v30 = sub_10096AC70();
  if (!v29)
  {
    uint64_t v32 = v30;
    unint64_t v33 = v31;
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001E9C0(v17, v50);
    sub_10001E9C0(a1, a2);
    uint64_t result = sub_100083498(v57);
    uint64_t v17 = v32;
    unint64_t v34 = v33;
LABEL_12:
    uint64_t v38 = (uint64_t *)(v18 + v27[6]);
    *uint64_t v38 = v17;
    v38[1] = v34;
    return result;
  }
  id v19 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  sub_10001EBB0(a1, a2);
  swift_errorRetain();
  uint64_t v20 = sub_10096B470();
  int v21 = sub_10096C5B0();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    int v46 = v21;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134218242;
    uint64_t v24 = (void *)v23;
    unint64_t v25 = 0;
    os_log_t v45 = v20;
    switch(a2 >> 62)
    {
      case 1uLL:
        LODWORD(v25) = HIDWORD(a1) - a1;
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          JUMPOUT(0x1003932C4);
        }
        unint64_t v25 = (int)v25;
LABEL_16:
        id v59 = (id)v25;
        sub_10096C8C0();
        sub_10001E9C0(a1, a2);
        *(_WORD *)(v22 + 12) = 2112;
        swift_getErrorValue();
        id v42 = Error.prettyDescription.getter(v58);
        id v59 = v42;
        sub_10096C8C0();
        *uint64_t v24 = v42;
        swift_errorRelease();
        os_log_t v37 = v45;
        _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v46, "VFSDetachedRootBookmark (size: %ld) could not be decoded: %@", (uint8_t *)v22, 0x16u);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v18 = v56;
        uint64_t v35 = v57;
        uint64_t v36 = v49;
        break;
      case 2uLL:
        uint64_t v40 = *(void *)(a1 + 16);
        uint64_t v39 = *(void *)(a1 + 24);
        BOOL v41 = __OFSUB__(v39, v40);
        unint64_t v25 = v39 - v40;
        if (!v41) {
          goto LABEL_16;
        }
        goto LABEL_21;
      case 3uLL:
        goto LABEL_16;
      default:
        unint64_t v25 = BYTE6(a2);
        goto LABEL_16;
    }
  }
  else
  {
    sub_10001E9C0(a1, a2);
    swift_errorRelease();
    uint64_t v35 = v57;
    uint64_t v36 = v49;
    os_log_t v37 = v20;
  }
  uint64_t v43 = v55;

  (*(void (**)(char *, uint64_t))(v43 + 8))(v54, v36);
  swift_willThrow();
  swift_release();
  sub_10001E9C0(a1, a2);
  swift_bridgeObjectRelease();
  sub_10001E9C0(v17, v50);
  uint64_t result = sub_100083498(v35);
  if (!v52)
  {
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v18, v48);
    type metadata accessor for VFSDetachedRootBookmark();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1003932D4()
{
  unint64_t result = qword_100AD2E10;
  if (!qword_100AD2E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD2E10);
  }
  return result;
}

uint64_t type metadata accessor for VFSDetachedRootBookmark()
{
  uint64_t result = qword_100AD2E70;
  if (!qword_100AD2E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_10001E9C0(v2, v3);
}

void *initializeWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_10001EBB0(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_10001EBB0(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_10001E9C0(v6, v7);
  return a1;
}

void *assignWithTake for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_10001E9C0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue;
}

void *sub_100393548(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10096AE50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = *(void *)((char *)a2 + v9);
    unint64_t v15 = *(void *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    sub_10001EBB0(v14, v15);
    *uint64_t v13 = v14;
    v13[1] = v15;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100393650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_10001E9C0(v6, v7);
}

uint64_t sub_1003936D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (uint64_t *)(a1 + v8);
  uint64_t v13 = *(void *)(a2 + v8);
  unint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  sub_10001EBB0(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100393790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_10001EBB0(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_10001E9C0(v15, v16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100393868(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003938F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_10001E9C0(v13, v14);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003939A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003939BC);
}

uint64_t sub_1003939BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100393A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100393A94);
}

uint64_t sub_100393A94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10096AE50();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100393B54()
{
  uint64_t result = sub_10096AE50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100393BFC()
{
  unint64_t result = qword_100AD2EB8;
  if (!qword_100AD2EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD2EB8);
  }
  return result;
}

uint64_t sub_100393C50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F42746E65726170 && a2 == 0xEE006B72616D6B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100393D58(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD2EC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10002689C(a1, a1[3]);
  sub_100393BFC();
  sub_10096D570();
  if (v1)
  {
    sub_1000268E0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_100157D68();
    sub_10096D040();
    uint64_t v7 = v13;
    char v12 = 1;
    sub_100157F34();
    swift_bridgeObjectRetain();
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v9 = v13;
    unint64_t v10 = v14;
    swift_bridgeObjectRetain();
    sub_10001EBB0(v9, v10);
    swift_bridgeObjectRelease();
    sub_1000268E0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_10001E9C0(v9, v10);
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100394054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys;
}

unint64_t sub_100394090()
{
  unint64_t result = qword_100AD2EC8;
  if (!qword_100AD2EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD2EC8);
  }
  return result;
}

unint64_t sub_1003940E8()
{
  unint64_t result = qword_100AD2ED0;
  if (!qword_100AD2ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD2ED0);
  }
  return result;
}

unint64_t sub_100394140()
{
  unint64_t result = qword_100AD2ED8;
  if (!qword_100AD2ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD2ED8);
  }
  return result;
}

uint64_t sub_100394194(void *a1)
{
  BOOL v2 = self;
  Class isa = sub_10096B9A0().super.isa;
  v11[0] = 0;
  id v4 = [v2 dataWithJSONObject:isa options:0 error:v11];

  id v5 = v11[0];
  if (v4)
  {
    uint64_t v6 = sub_10096AF60();
    unint64_t v8 = v7;

    sub_10002689C(a1, a1[3]);
    sub_10096D580();
    sub_10038F0E4((uint64_t)v11, (uint64_t)v11[3]);
    sub_100078E40();
    sub_10096D310();
    sub_10001E9C0(v6, v8);
    return sub_1000268E0((uint64_t)v11);
  }
  else
  {
    unint64_t v10 = v5;
    sub_10096ABF0();

    return swift_willThrow();
  }
}

void *sub_100394320@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_100394474(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10039434C(void *a1)
{
  return sub_100394194(a1);
}

unint64_t sub_100394368@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10004621C((uint64_t)_swiftEmptyArrayStorage);
  *a1 = result;
  return result;
}

uint64_t sub_100394398()
{
  sub_1000268E0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPCKWharfResource()
{
  uint64_t result = qword_100AD2F08;
  if (!qword_100AD2F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10039442C()
{
  return swift_initClassMetadata2();
}

ValueMetadata *type metadata accessor for TelemetryReport()
{
  return &type metadata for TelemetryReport;
}

void *sub_100394474(void *a1)
{
  int v3 = sub_10002689C(a1, a1[3]);
  sub_10096D560();
  if (v1) {
    goto LABEL_8;
  }
  sub_10002689C(v14, (uint64_t)v14[3]);
  sub_100157F34();
  sub_10096D2F0();
  int v3 = (void *)v13;
  sub_1000268E0((uint64_t)v14);
  id v4 = self;
  Class isa = sub_10096AF20().super.isa;
  v14[0] = 0;
  id v6 = [v4 JSONObjectWithData:isa options:0 error:v14];

  if (!v6)
  {
    id v8 = v14[0];
    sub_10096ABF0();

LABEL_7:
    swift_willThrow();
    sub_10001E9C0(v12, v13);
LABEL_8:
    sub_1000268E0((uint64_t)a1);
    return v3;
  }
  id v7 = v14[0];
  sub_10096C9D0();
  swift_unknownObjectRelease();
  sub_10002B7CC(&qword_100AD3030);
  if ((swift_dynamicCast() & 1) == 0)
  {
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v9 = objc_allocWithZone((Class)NSError);
    NSString v10 = sub_10096BC00();
    swift_bridgeObjectRelease();
    [v9 initWithDomain:v10 code:26 userInfo:0];

    goto LABEL_7;
  }
  sub_10001E9C0(v12, v13);
  int v3 = (void *)v12;
  sub_1000268E0((uint64_t)a1);
  return v3;
}

void sub_1003946CC(void *a1, uint64_t a2, void (*a3)(), void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a6;
  unint64_t v31 = a3;
  uint64_t v28 = a5;
  uint64_t v32 = a4;
  unint64_t v33 = a1;
  uint64_t v27 = sub_10096B760();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  NSString v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (id)fpfs_current_log();
  uint64_t v29 = *(void **)(v6 + 16);
  uint64_t v15 = sub_10096B7D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a2, 1, v15);
  sub_100394B5C(a2, (uint64_t)v13);
  if (v17((uint64_t)v13, 1, v15) == 1)
  {
    sub_100394BC4((uint64_t)v13);
    dispatch_qos_class_t v19 = QOS_CLASS_UNSPECIFIED;
  }
  else
  {
    sub_10096B7C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    dispatch_qos_class_t v19 = sub_10096B750();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  }
  if (v18 == 1) {
    dispatch_block_flags_t v20 = DISPATCH_BLOCK_INHERIT_QOS_CLASS;
  }
  else {
    dispatch_block_flags_t v20 = DISPATCH_BLOCK_ENFORCE_QOS_CLASS;
  }
  int v21 = (void *)swift_allocObject();
  uint64_t v22 = v28;
  v21[2] = v14;
  v21[3] = v22;
  v21[4] = v30;
  uint64_t v38 = sub_100394C64;
  uint64_t v39 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100020480;
  os_log_t v37 = &unk_100A863F8;
  uint64_t v23 = _Block_copy(&aBlock);
  id v24 = v14;
  swift_retain();
  swift_release();
  uint64_t v38 = v31;
  uint64_t v39 = v32;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100020480;
  os_log_t v37 = &unk_100A86420;
  unint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  fp_task_tracker_async_and_qos(v29, v33, v20, v19, v23, v25);

  _Block_release(v25);
  _Block_release(v23);
}

void sub_100394A20(uint64_t a1, void (*a2)(void))
{
  id v3 = (id)fpfs_adopt_log();
  a2();
  id v4 = (id)fpfs_adopt_log();
}

uint64_t sub_100394A98(void (*a1)(void))
{
  sub_100394C70();
  swift_allocError();
  a1();

  return swift_errorRelease();
}

uint64_t GSRemoteVersionsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskTracker()
{
  return self;
}

uint64_t sub_100394B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100394BC4(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100394C24()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100394C64()
{
  sub_100394A20(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t sub_100394C70()
{
  unint64_t result = qword_100ADA350;
  if (!qword_100ADA350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADA350);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LifetimeError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100394D60);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LifetimeError()
{
  return &type metadata for LifetimeError;
}

unint64_t sub_100394D9C()
{
  unint64_t result = qword_100AD30D8;
  if (!qword_100AD30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD30D8);
  }
  return result;
}

id sub_100394DF8()
{
  id result = sub_100394E18();
  qword_100B0B148 = (uint64_t)result;
  return result;
}

id sub_100394E18()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_DELAY, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_HOUR);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
  NSString v2 = sub_10096BC00();
  id v3 = [v1 initWithLabel:v2 criteria:v0];

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_100394F30()
{
  if (*v0) {
    return 0x6573616870;
  }
  else {
    return 0x4449776F72;
  }
}

uint64_t sub_100394F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003A9F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100394F84@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_100394FA0(uint64_t a1)
{
  unint64_t v2 = sub_1003A9C58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100394FDC(uint64_t a1)
{
  unint64_t v2 = sub_1003A9C58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100395018(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100395068(a1);
  return v2;
}

uint64_t sub_100395068(void *a1)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD4440);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002689C(a1, a1[3]);
  sub_1003A9C58();
  swift_retain();
  sub_10096D570();
  if (v2)
  {
    swift_release();
    sub_1000268E0((uint64_t)a1);
    type metadata accessor for MaintenanceContinuation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12[0] = 0;
    *(void *)(v1 + 16) = sub_10096CF90();
    *(unsigned char *)(v1 + 24) = v8 & 1;
    v12[0] = 1;
    *(void *)(v1 + 32) = sub_10096CF90();
    *(unsigned char *)(v1 + 40) = v10 & 1;
    swift_release();
    sub_10096CF60();
    sub_1000268E0((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000268E0((uint64_t)a1);
  }
  return v1;
}

uint64_t sub_1003952A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100ACDF88);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  __chkstk_darwin(v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC(&qword_100AD4430);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_1003A9C58();
  sub_10096D590();
  char v13 = *(unsigned char *)(v3 + 24);
  uint64_t v19 = *(void *)(v3 + 16);
  char v20 = v13;
  char v22 = 0;
  sub_10002B7CC(&qword_100ACE960);
  sub_1003A9CAC();
  sub_10096D1A0();
  if (!v2)
  {
    char v14 = *(unsigned char *)(v3 + 40);
    uint64_t v19 = *(void *)(v3 + 32);
    char v20 = v14;
    char v22 = 1;
    sub_10096D1A0();
    sub_10096D0D0();
    sub_10002689C(&v19, v21);
    sub_10016D300();
    sub_10096D590();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    sub_1000268E0((uint64_t)&v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100395538()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    v2._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v2);
    swift_bridgeObjectRelease();
    v3._countAndFlagsBits = 0x3A4449776F72;
    v3._object = (void *)0xE600000000000000;
    sub_10096BDC0(v3);
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (*(unsigned char *)(v0 + 40)) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
LABEL_5:
    v4._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v4);
    swift_bridgeObjectRelease();
    v5._countAndFlagsBits = 0x3A6573616870;
    v5._object = (void *)0xE600000000000000;
    sub_10096BDC0(v5);
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10039567C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MaintenanceContinuation()
{
  return self;
}

uint64_t sub_1003956B4()
{
  return sub_100395538();
}

uint64_t sub_1003956D8(uint64_t *a1, uint64_t *a2)
{
  return sub_1003A9324(*a1, *a2);
}

unint64_t sub_1003956E4()
{
  return 0xD000000000000014;
}

uint64_t sub_100395700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)v5 + 600);
  unint64_t v10 = *(void *)(*(void *)v5 + 608);
  uint64_t v11 = *(void *)(*(void *)v5 + 616);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v59 = v9;
  unint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  uint64_t v54 = v12;
  uint64_t v13 = type metadata accessor for PersistenceTrigger();
  uint64_t v53 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v40[-v14];
  uint64_t v55 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v50 = *(void *)(v56 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v57 = &v40[-v17];
  uint64_t v18 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v18 + 33) != 1) {
    return a4(0, 0xD00000000000001ALL, 0x80000001009A0090, 0);
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)(v18 + 16) + 784);
  uint64_t v51 = a4;
  uint64_t v20 = swift_retain();
  char v21 = v19(v20);
  a4 = v51;
  LOBYTE(v19) = v21;
  uint64_t v22 = swift_release();
  if (v19) {
    return a4(0, 0xD00000000000001ALL, 0x80000001009A0090, 0);
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 288))(v22);
  int v41 = v25;
  uint64_t v59 = v24;
  sub_10096C1C0();
  swift_getWitnessTable();
  if (sub_10096C460())
  {
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0) {
      return v51(0, 0, 0, 0);
    }
LABEL_23:
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Maintenance.swift", 106, 2, 96);
  }
  unint64_t v48 = v10;
  uint64_t v49 = v9;
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0()) {
    goto LABEL_18;
  }
  uint64_t v26 = 0;
  uint64_t v27 = *(void (**)(unsigned char *))(*(void *)a1 + 312);
  uint64_t v45 = *(void *)a1 + 312;
  int v46 = v27;
  uint64_t v47 = (void (**)(unsigned char *, uint64_t *, uint64_t))(v56 + 16);
  uint64_t v44 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 32);
  id v42 = (void (**)(unsigned char *, uint64_t))(v53 + 8);
  uint64_t v43 = v24;
  while (1)
  {
    BOOL v28 = sub_10096C130();
    sub_10096C0E0();
    if (v28)
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v56 + 16))(v57, v24+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v26, AssociatedTypeWitness);
      uint64_t v29 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      goto LABEL_12;
    }
    uint64_t v36 = sub_10096CC20();
    if (v50 != 8)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v59 = v36;
    (*v47)(v57, &v59, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v29 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
LABEL_12:
    uint64_t v52 = v29;
    (*v44)(v15, v57, AssociatedTypeWitness);
    uint64_t v53 = v26;
    uint64_t v30 = swift_getAssociatedTypeWitness();
    uint64_t v31 = a1;
    uint64_t v32 = a5;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v34 = v53;
    uint64_t v24 = v43;
    uint64_t v35 = swift_getAssociatedConformanceWitness();
    uint64_t v59 = AssociatedTypeWitness;
    unint64_t v60 = v30;
    uint64_t v61 = AssociatedConformanceWitness;
    uint64_t v62 = v35;
    a5 = v32;
    a1 = v31;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v46(v15);
    (*v42)(v15, v13);
    uint64_t v26 = v34 + 1;
    if (v52 == sub_10096C1A0()) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  swift_bridgeObjectRelease();
  if (v41)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = 0;
    *(unsigned char *)(v37 + 24) = 1;
    *(void *)(v37 + 32) = 0;
    *(unsigned char *)(v37 + 40) = 1;
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    uint64_t v59 = 0x2064657461647075;
    unint64_t v60 = 0xE800000000000000;
    uint64_t v38 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v58 = v38;
    v63._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v63);
    swift_bridgeObjectRelease();
    v64._countAndFlagsBits = 0x736D65746920;
    v64._object = (void *)0xE600000000000000;
    sub_10096BDC0(v64);
    v51(v37, v59, v60, 0);
    swift_release();
  }
  else
  {
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    uint64_t v59 = 0x2064657461647075;
    unint64_t v60 = 0xE800000000000000;
    uint64_t v39 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v58 = v39;
    v65._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 0x736D65746920;
    v66._object = (void *)0xE600000000000000;
    sub_10096BDC0(v66);
    v51(0, v59, v60, 0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockEvictability()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100395E8C()
{
  return 0xD000000000000015;
}

uint64_t sub_100395EA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v58 = *(void *)(*(void *)v5 + 600);
  unint64_t v59 = v9;
  unint64_t v53 = v9;
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v51 = v11;
  uint64_t v50 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v39 - v13;
  uint64_t v52 = v10;
  uint64_t v54 = v58;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = *(void *)(v55 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)v39 - v15;
  uint64_t v17 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 32) + 16) + 784);
  uint64_t v18 = swift_retain();
  char v19 = v17(v18);
  uint64_t v20 = swift_release();
  if (v19)
  {
    unint64_t v21 = 0x80000001009A0050;
    unint64_t v22 = 0xD000000000000017;
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, v22, v21, 0);
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 24) + 448))(v20);
  int v41 = v25;
  uint64_t v58 = v24;
  sub_10096C1C0();
  swift_getWitnessTable();
  if (sub_10096C460())
  {
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v21 = 0;
      return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, v22, v21, 0);
    }
LABEL_23:
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Maintenance.swift", 106, 2, 132);
  }
  uint64_t v48 = a1;
  v39[1] = a5;
  uint64_t v40 = a4;
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0()) {
    goto LABEL_17;
  }
  uint64_t v26 = 0;
  uint64_t v27 = *(void (**)(char *))(*(void *)v48 + 312);
  uint64_t v45 = *(void *)v48 + 312;
  int v46 = v27;
  uint64_t v47 = (void (**)(char *, uint64_t *, uint64_t))(v55 + 16);
  uint64_t v43 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  BOOL v28 = v49;
  while (1)
  {
    BOOL v29 = sub_10096C130();
    sub_10096C0E0();
    if (v29)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v16, v24+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v26, AssociatedTypeWitness);
      uint64_t v30 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      goto LABEL_11;
    }
    uint64_t v35 = sub_10096CC20();
    if (v42 != 8)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v58 = v35;
    (*v47)(v16, &v58, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v30 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
LABEL_11:
    uint64_t v56 = v30;
    (*v44)(v28, v16, AssociatedTypeWitness);
    uint64_t v31 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v33 = swift_getAssociatedConformanceWitness();
    uint64_t v58 = AssociatedTypeWitness;
    unint64_t v59 = v31;
    uint64_t v60 = AssociatedConformanceWitness;
    uint64_t v61 = v33;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v50;
    swift_storeEnumTagMultiPayload();
    v46(v28);
    (*v43)(v28, v34);
    ++v26;
    if (v56 == sub_10096C1A0()) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  if (v41)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = 0;
    *(unsigned char *)(v36 + 24) = 1;
    *(void *)(v36 + 32) = 0;
    *(unsigned char *)(v36 + 40) = 1;
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    uint64_t v58 = 0x2064657461647075;
    unint64_t v59 = 0xE800000000000000;
    uint64_t v37 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v57 = v37;
    v62._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v62);
    swift_bridgeObjectRelease();
    v63._countAndFlagsBits = 0x736D65746920;
    v63._object = (void *)0xE600000000000000;
    sub_10096BDC0(v63);
    v40(v36, v58, v59, 0);
    swift_release();
  }
  else
  {
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    uint64_t v58 = 0x2064657461647075;
    unint64_t v59 = 0xE800000000000000;
    uint64_t v38 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v57 = v38;
    v64._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v64);
    swift_bridgeObjectRelease();
    v65._countAndFlagsBits = 0x736D65746920;
    v65._object = (void *)0xE600000000000000;
    sub_10096BDC0(v65);
    v40(0, v58, v59, 0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockIgnoreFolderProcessing()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100396628()
{
  return 0x632D65726F6E6769;
}

uint64_t sub_10039664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = *v6;
  uint64_t v11 = *v6;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void *)(v10 + 600);
  *(void *)(v12 + 16) = sub_10096C110();
  uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v20 = (uint64_t)v6 + *(void *)(*v6 + 576);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v11 + 608);
  *(void *)(v15 + 40) = *(void *)(v10 + 624);
  *(void *)(v15 + 48) = v12;
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v16[2] = a1;
  v16[3] = v12;
  v16[4] = a3;
  v16[5] = v6;
  v16[6] = a4;
  v16[7] = a5;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t, char), void *))(*(void *)v14 + 144);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v20, a2, 0, 0, sub_1003A9B4C, v15, sub_1003A9BB4, v16);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10039685C()
{
  return 0;
}

uint64_t sub_100396904(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(unsigned char *)(v16 + 24) = a2 & 1;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = a6;
  *(void *)(v16 + 56) = a7;
  *(void *)(v16 + 64) = a8;
  *(void *)(v16 + 72) = a3;
  sub_1000D5B30(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035B320((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1003A9C2C, v16);

  return swift_release();
}

uint64_t sub_100396A38(uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t, void, void, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v65 = a8;
  uint64_t v69 = a7;
  unsigned int v68 = a6;
  uint64_t v70 = a5;
  uint64_t v13 = (void *)*a4;
  uint64_t v72 = sub_10096B0E0();
  uint64_t v89 = *(void (***)(char *, uint64_t))(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v13[12];
  uint64_t v16 = v13[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v76 = (uint64_t)&v60 - v17;
  uint64_t v18 = v13[11];
  size_t v83 = a4;
  uint64_t v19 = v13[13];
  uint64_t v94 = v16;
  uint64_t v95 = v18;
  uint64_t v84 = v19;
  uint64_t v85 = v18;
  uint64_t v93 = v15;
  uint64_t v96 = v15;
  uint64_t v97 = v19;
  uint64_t v78 = type metadata accessor for ReconciliationMutation();
  uint64_t v20 = *(void *)(v78 - 8);
  uint64_t v21 = __chkstk_darwin(v78);
  unint64_t v77 = (char *)&v60 - v22;
  uint64_t v23 = *(void *)(v16 - 8);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v86 = (char *)&v60 - v28;
  if (a2)
  {
    swift_errorRetain();
    v68(0, 0, 0, a1);
    return sub_1000D5B18(a1, a2 & 1);
  }
  uint64_t v61 = v27;
  int v62 = a2;
  uint64_t v64 = v8;
  swift_beginAccess();
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v63 = a1;
  sub_1000D5B30(a1, 0);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10096C1A0();
  uint64_t v31 = v86;
  if (!v30)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    a1 = v63;
    v68(v63, 0, 0, 0);
    uint64_t v58 = *(void (**)(uint64_t))(**(void **)(*(void *)(v65 + 32) + 16) + 848);
    uint64_t v59 = swift_retain();
    v58(v59);
    swift_release();
    LOBYTE(a2) = v62;
    return sub_1000D5B18(a1, a2 & 1);
  }
  uint64_t v32 = 0;
  uint64_t v91 = *(uint64_t (**)(uint64_t, uint64_t))(v93 + 144);
  uint64_t v92 = (void (**)(char *, uint64_t *, uint64_t))(v23 + 16);
  uint64_t v90 = (void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v81 = v93 + 64;
  unint64_t v74 = (void (**)(uint64_t, uint64_t))(v20 + 8);
  unsigned int v67 = (uint64_t (**)(char *, uint64_t))(v89 + 1);
  Swift::String v66 = (void (**)(uint64_t, uint64_t))(v87 + 8);
  uint64_t v89 = (void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v75 = v23;
  uint64_t v88 = v26;
  uint64_t v80 = v93 + 144;
  uint64_t v73 = v29;
  while (1)
  {
    BOOL v33 = sub_10096C130();
    sub_10096C0E0();
    if (v33)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v31, v29+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v32, v16);
      uint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v61 != 8) {
        goto LABEL_26;
      }
      uint64_t v94 = result;
      (*v92)(v31, &v94, v16);
      swift_unknownObjectRelease();
      uint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    (*v90)(v26, v31, v16);
    uint64_t v35 = v91(v16, v93);
    if (v36 >> 62 != 2 || v35 || v36 != 0x8000000000000000)
    {
      sub_1000CF144(v35, v36);
      goto LABEL_6;
    }
    uint64_t v94 = v16;
    uint64_t v95 = v85;
    uint64_t v96 = v93;
    uint64_t v97 = v84;
    uint64_t v87 = type metadata accessor for JobResult();
    uint64_t v37 = swift_getAssociatedTypeWitness();
    uint64_t v38 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v29 = v73;
    uint64_t v40 = swift_getAssociatedConformanceWitness();
    uint64_t v94 = v38;
    uint64_t v95 = v37;
    uint64_t v96 = AssociatedConformanceWitness;
    uint64_t v97 = v40;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v42 = (uint64_t)v77;
    uint64_t v43 = &v77[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v93 + 64);
    v79(v16, v93);
    swift_storeEnumTagMultiPayload();
    *uint64_t v43 = 1;
    uint64_t v31 = v86;
    uint64_t v26 = v88;
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v78;
    swift_storeEnumTagMultiPayload();
    sub_100591758((uint64_t)v83, v42);
    uint64_t v45 = v42;
    uint64_t v23 = v75;
    (*v74)(v45, v44);
    if (FileItem.kind.getter(v16, v93) != 1) {
      goto LABEL_6;
    }
    uint64_t v94 = v16;
    uint64_t v95 = v85;
    uint64_t v46 = v93;
    uint64_t v96 = v93;
    uint64_t v97 = v84;
    type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
    v79(v16, v46);
    uint64_t v47 = v71;
    sub_10096B0D0();
    sub_10096B080();
    double v49 = v48;
    uint64_t result = (*v67)(v47, v72);
    double v51 = v49 * 1000000000.0;
    if ((~COERCE__INT64(v49 * 1000000000.0) & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v51 <= -9.22337204e18) {
      goto LABEL_24;
    }
    if (v51 >= 9.22337204e18) {
      goto LABEL_25;
    }
    uint64_t v52 = (uint64_t)v51;
    uint64_t v53 = *(void *)(v70 + 136);
    swift_allocObject();
    uint64_t v54 = v76;
    uint64_t v55 = v53;
    uint64_t v31 = v86;
    uint64_t v56 = sub_100610B30(v76, 0, v52, v55);
    uint64_t v57 = v54;
    uint64_t v26 = v88;
    (*v66)(v57, AssociatedTypeWitness);
    sub_1004D4360((uint64_t)v83, v56);
    swift_release();
LABEL_6:
    (*v89)(v26, v16);
    ++v32;
    if (v34 == sub_10096C1A0()) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10039737C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1003A9384(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100397418()
{
  return 0xD000000000000023;
}

uint64_t sub_100397434(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v103 = a3;
  uint64_t v11 = *(void **)v6;
  uint64_t v12 = *(void *)(*(void *)v6 + 600);
  uint64_t v128 = v12;
  uint64_t v13 = v11[76];
  uint64_t v14 = v11[77];
  uint64_t v15 = v11[78];
  uint64_t v131 = v12;
  uint64_t v132 = v13;
  uint64_t v133 = v14;
  uint64_t v134 = v15;
  uint64_t v102 = type metadata accessor for ReconciliationMutation();
  uint64_t v124 = *(void (***)(char *, uint64_t))(v102 - 8);
  __chkstk_darwin(v102);
  unint64_t v99 = (char *)&v83 - v16;
  uint64_t v17 = type metadata accessor for SnapshotItem();
  unsigned int v108 = *(void (***)(char *, uint64_t))(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v111 = (char *)&v83 - v18;
  uint64_t v116 = v19;
  uint64_t v112 = sub_10096C890();
  size_t v107 = *(void (***)(char *, uint64_t))(v112 - 8);
  uint64_t v20 = __chkstk_darwin(v112);
  uint64_t v113 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v122 = (char *)&v83 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v127 = sub_10096C890();
  uint64_t v98 = *(void *)(v127 - 8);
  uint64_t v24 = __chkstk_darwin(v127);
  uint64_t v114 = (char *)&v83 - v25;
  uint64_t v123 = AssociatedTypeWitness;
  uint64_t v97 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v131 = v12;
  uint64_t v132 = v13;
  uint64_t v101 = v13;
  uint64_t v129 = v14;
  uint64_t v133 = v14;
  uint64_t v134 = v15;
  uint64_t v100 = v15;
  uint64_t v28 = type metadata accessor for ItemReconciliation();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v117 = (char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = v31;
  __chkstk_darwin(v30);
  uint64_t v130 = (char *)&v83 - v32;
  if (!a2)
  {
    uint64_t v33 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v33 = swift_dynamicCastClass();
  if (!v33)
  {
LABEL_5:
    uint64_t v35 = 1;
    goto LABEL_6;
  }
  uint64_t v34 = v33;
  uint64_t v33 = *(void *)(v33 + 16);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 24);
LABEL_6:
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 184))(v33, v35);
  uint64_t v37 = a1;
  uint64_t v38 = v36;
  int v89 = v39;
  uint64_t v84 = v40;
  uint64_t v121 = 0;
  uint64_t v110 = v37;
  uint64_t v88 = v6;
  uint64_t v90 = a5;
  uint64_t v91 = a4;
  uint64_t v41 = sub_10096C1A0();
  uint64_t v42 = v112;
  uint64_t v43 = v114;
  uint64_t v44 = v117;
  if (!v41)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    if (v89)
    {
      uint64_t v81 = 0;
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v84;
      *(unsigned char *)(v81 + 24) = 0;
      *(void *)(v81 + 32) = 0;
      *(unsigned char *)(v81 + 40) = 1;
      swift_retain();
    }
    v91(v81, 0, 0, 0);
    return swift_release_n();
  }
  uint64_t v45 = 0;
  uint64_t v125 = (void (**)(char *, char *, uint64_t))(v29 + 32);
  v126 = (void (**)(char *, uint64_t *, uint64_t))(v29 + 16);
  uint64_t v120 = (void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v119 = (unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  uint64_t v109 = (void (**)(char *, char *, uint64_t))(v97 + 32);
  unint64_t v106 = (void (**)(char *, char *, uint64_t))(v107 + 2);
  int v105 = (unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 6);
  uint64_t v95 = (void (**)(char *, char *, uint64_t))(v108 + 4);
  uint64_t v93 = (void (**)(char *, char *, uint64_t))(v97 + 16);
  uint64_t v92 = (void (**)(uint64_t, uint64_t))(v124 + 1);
  uint64_t v94 = v108 + 1;
  uint64_t v104 = v107 + 1;
  size_t v107 = (void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v124 = (void (**)(char *, uint64_t))(v29 + 8);
  unsigned int v108 = (void (**)(char *, uint64_t))(v98 + 8);
  uint64_t v118 = v29;
  uint64_t v115 = v27;
  while (1)
  {
    BOOL v46 = sub_10096C130();
    sub_10096C0E0();
    if (v46)
    {
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v29 + 16))(v130, v38+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v45, v28);
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v96 != 8) {
        goto LABEL_35;
      }
      uint64_t v131 = result;
      (*v126)(v130, &v131, v28);
      uint64_t result = swift_unknownObjectRelease();
    }
    uint64_t v48 = v45 + 1;
    uint64_t v49 = v127;
    if (__OFADD__(v45, 1)) {
      break;
    }
    (*v125)(v44, v130, v28);
    if ((v44[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] & 0x10) != 0)
    {
      (*v120)(v43, v44, v49);
      uint64_t v50 = v49;
      uint64_t v51 = v123;
      if ((*v119)(v43, 1, v123) == 1)
      {
        (*v124)(v44, v28);
        (*v108)(v43, v50);
      }
      else
      {
        uint64_t v52 = v115;
        (*v109)(v115, v43, v51);
        uint64_t v53 = v121;
        uint64_t v54 = v122;
        (*(void (**)(char *, uint64_t))(**(void **)(v110 + 32) + 240))(v52, 1);
        if (v53)
        {
          (*v107)(v52, v123);
          (*v124)(v117, v28);
          swift_bridgeObjectRelease();
          uint64_t v82 = v91;
          swift_errorRetain();
          v82(0, 0, 0, v53);
          swift_errorRelease();
          return swift_errorRelease();
        }
        uint64_t v121 = 0;
        uint64_t v55 = v113;
        (*v106)(v113, v54, v42);
        uint64_t v56 = v116;
        if ((*v105)(v55, 1, v116) == 1)
        {
          uint64_t v57 = v55;
          uint64_t v58 = *v104;
          (*v104)(v122, v42);
          (*v107)(v52, v123);
          uint64_t v44 = v117;
          (*v124)(v117, v28);
          uint64_t v59 = v57;
          uint64_t v43 = v114;
          v58(v59, v42);
          uint64_t v29 = v118;
          goto LABEL_9;
        }
        uint64_t v60 = v111;
        (*v95)(v111, v55, v56);
        uint64_t v61 = &v60[*(int *)(v56 + 48)];
        if ((v61[*(int *)(type metadata accessor for ItemMetadata() + 64)] & 1) == 0)
        {
          uint64_t v131 = v128;
          uint64_t v132 = v101;
          uint64_t v133 = v129;
          uint64_t v134 = v100;
          uint64_t v98 = type metadata accessor for JobResult();
          uint64_t v62 = swift_getAssociatedTypeWitness();
          uint64_t v63 = v123;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v65 = swift_getAssociatedConformanceWitness();
          uint64_t v131 = v63;
          uint64_t v132 = v62;
          uint64_t v133 = AssociatedConformanceWitness;
          uint64_t v134 = v65;
          uint64_t v66 = type metadata accessor for ReconciliationID();
          uint64_t v67 = type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v68 = (uint64_t)v99;
          uint64_t v69 = &v99[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v70 = v115;
          uint64_t v86 = *v93;
          v86(v99, v115, v63);
          uint64_t v87 = v66;
          swift_storeEnumTagMultiPayload();
          *uint64_t v69 = 0;
          uint64_t v97 = v67;
          swift_storeEnumTagMultiPayload();
          uint64_t v71 = v102;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v103, v68);
          uint64_t v72 = *v92;
          (*v92)(v68, v71);
          uint64_t v73 = v117;
          if (sub_100827AAC(v28))
          {
            (*v94)(v111, v116);
            uint64_t v74 = v112;
            (*v104)(v122, v112);
            uint64_t v75 = v70;
            uint64_t v42 = v74;
            (*v107)(v75, v63);
            (*v124)(v73, v28);
            uint64_t v43 = v114;
            uint64_t v29 = v118;
            uint64_t v44 = v73;
          }
          else
          {
            size_t v83 = v72;
            uint64_t v76 = *(int *)(TupleTypeMetadata2 + 48);
            v86((char *)v68, v70, v63);
            swift_storeEnumTagMultiPayload();
            uint64_t v77 = v68;
            uint64_t v78 = v122;
            uint64_t v29 = v118;
            if (qword_100ACC0F0 != -1) {
              swift_once();
            }
            uint64_t v79 = v68 + v76;
            *(void *)uint64_t v79 = static Fields.all;
            *(_OWORD *)(v79 + 8) = *(_OWORD *)(v88 + 120);
            swift_storeEnumTagMultiPayload();
            uint64_t v80 = v102;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v103, v77);
            v83(v77, v80);
            (*v94)(v111, v116);
            uint64_t v42 = v112;
            (*v104)(v78, v112);
            (*v107)(v115, v123);
            uint64_t v44 = v117;
            (*v124)(v117, v28);
            uint64_t v43 = v114;
          }
          goto LABEL_9;
        }
        (*v94)(v60, v56);
        uint64_t v42 = v112;
        (*v104)(v122, v112);
        (*v107)(v115, v123);
        uint64_t v44 = v117;
        (*v124)(v117, v28);
      }
      uint64_t v29 = v118;
    }
    else
    {
      (*v124)(v44, v28);
    }
LABEL_9:
    ++v45;
    if (v48 == sub_10096C1A0()) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.RetriggerResolvedVendorExclusion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100398334()
{
  return 0xD000000000000018;
}

uint64_t sub_100398350(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v45 = a2;
  uint64_t v50 = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_10096C890();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v49 = v9;
  uint64_t v48 = *(void *)(v9 - 8);
  __chkstk_darwin(v11);
  uint64_t v47 = (char *)&v44 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = (char *)v5 + *(void *)(v8 + 576);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v23((char *)&v44 - v20, v22, AssociatedTypeWitness);
  v23(v19, v21, AssociatedTypeWitness);
  if (swift_dynamicCast())
  {
    uint64_t v44 = a5;
    uint64_t v24 = a4;
    if (v52 != 1)
    {
      unint64_t v27 = 0xD000000000000039;
      unint64_t v28 = 0x800000010099FF50;
LABEL_6:
      a4(0, v27, v28, 0);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, AssociatedTypeWitness);
    }
    uint64_t v25 = v51;
    uint64_t v26 = *(void *)(v50 + 32);
    (*(void (**)(char *, uint64_t))(*(void *)v26 + 240))(v21, 1);
    uint64_t v50 = v25;
    uint64_t v30 = v48;
    uint64_t v31 = v49;
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v13, 1, v49);
    if (v32 == 1)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v10);
      unint64_t v28 = 0x800000010099FEE0;
      unint64_t v27 = 0xD000000000000022;
      goto LABEL_6;
    }
    uint64_t v33 = v47;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v47, v13, v31);
    uint64_t v34 = v31;
    uint64_t v35 = &v33[*(int *)(v31 + 48)];
    uint64_t v36 = type metadata accessor for ItemMetadata();
    if (v35[*(int *)(v36 + 60)])
    {
      a4(0, 0xD000000000000033, 0x800000010099FF10, 0);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
    }
    else
    {
      uint64_t v37 = *(void *)&v35[*(int *)(v36 + 76)];
      if (v45 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v38 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v39 = *(void *)(v38 + 16);
        char v40 = *(unsigned char *)(v38 + 24);
      }
      else
      {
        uint64_t v39 = 0;
        char v40 = 1;
      }
      char v41 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v26 + 608))(v50, v37);
      uint64_t v42 = v49;
      if (v41)
      {
        type metadata accessor for MaintenanceContinuation();
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = v39;
        *(unsigned char *)(v43 + 24) = v40;
        *(void *)(v43 + 32) = 0;
        *(unsigned char *)(v43 + 40) = 1;
        swift_retain();
      }
      else
      {
        uint64_t v43 = 0;
      }
      v24(v43, 0, 0, 0);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v42);
    }
  }
  else
  {
    a4(0, 0xD00000000000003BLL, 0x800000010099FEA0, 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, AssociatedTypeWitness);
}

uint64_t type metadata accessor for Maintenance.UpdateClosestSyncRoot()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100398930()
{
  return 0xD000000000000017;
}

uint64_t sub_10039894C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = v31;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 240))(a1, 1);
  if (!v14)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v5);
    }
    else
    {
      uint64_t v16 = v12;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v13 + 264))(v28, a1);
      uint64_t v17 = (uint64_t)&v12[*(int *)(v5 + 52)];
      sub_10016B800(v17, (uint64_t)v27);
      sub_10016B800((uint64_t)v28, v17);
      sub_1003A9A58(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
      sub_1003A9A58(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      sub_10016B800((uint64_t)v28, (uint64_t)v29);
      if (sub_1000DBD64((uint64_t)v29) == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v5);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v5);
      }
      else
      {
        uint64_t v18 = v5;
        char v19 = v29[0];
        __int16 v20 = v30;
        sub_1003A9A58(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
        uint64_t v21 = v26;
        if ((v20 & 0x100) != 0 && (v19 & 0x40) != 0)
        {
          uint64_t v22 = &v16[*(int *)(v18 + 48)];
          uint64_t v23 = type metadata accessor for ItemMetadata();
          if (v22[*(int *)(v23 + 48)]) {
            char v24 = 5;
          }
          else {
            char v24 = 4;
          }
          v22[*(int *)(v23 + 84)] = v24;
          (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v21, v16, v18);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v18);
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v18);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v18);
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v18);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100398D88(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v54 = a3;
  uint64_t v64 = a1;
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v62 = sub_10096C890();
  uint64_t v57 = *(void (***)(char *, uint64_t))(v62 - 8);
  uint64_t v9 = __chkstk_darwin(v62);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v47 = *(void (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v12);
  char v52 = (char *)&v42 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = __chkstk_darwin(AssociatedTypeWitness);
  __int16 v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v19;
  __chkstk_darwin(v18);
  uint64_t v61 = (char *)&v42 - v21;
  uint64_t v51 = a5;
  uint64_t v53 = v11;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v61;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v64[4] + 344))(v22, v24);
  int v45 = v27;
  uint64_t v44 = v28;
  if (sub_10096C1A0())
  {
    uint64_t v43 = a4;
    uint64_t v29 = 0;
    uint64_t v59 = v26;
    uint64_t v60 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
    uint64_t v50 = (void (**)(char *))(v47 + 4);
    uint64_t v49 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v47 + 2);
    uint64_t v48 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v47 + 7);
    uint64_t v55 = v57 + 1;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 6);
    ++v47;
    uint64_t v57 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    while (1)
    {
      BOOL v32 = sub_10096C130();
      sub_10096C0E0();
      if (v32)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v17 + 16))(v25, v26+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v29, AssociatedTypeWitness);
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v46 != 8) {
          goto LABEL_23;
        }
        v65[0] = result;
        (*v60)(v25, v65, AssociatedTypeWitness);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v34 = v29 + 1;
      uint64_t v35 = v64;
      if (__OFADD__(v29, 1)) {
        break;
      }
      (*v58)(v20, v25, AssociatedTypeWitness);
      sub_10039894C((uint64_t)v20, (uint64_t)v35, (uint64_t)v14);
      if ((*v56)(v14, 1, v8) == 1)
      {
        (*v57)(v20, AssociatedTypeWitness);
        (*v55)(v14, v62);
      }
      else
      {
        uint64_t v36 = v17;
        uint64_t v37 = v14;
        uint64_t v38 = v52;
        uint64_t v39 = v37;
        (*v50)(v52);
        char v40 = v53;
        (*v49)(v53, v38, v8);
        (*v48)(v40, 0, 1, v8);
        sub_10086C908(v40, (uint64_t)v20, 0, 0, 0, v64, *(void *)(v63 + 120), *(void *)(v63 + 128), 4096, v54);
        (*v55)((char *)v40, v62);
        (*v47)(v38, v8);
        (*v57)(v20, AssociatedTypeWitness);
        uint64_t v14 = v39;
        uint64_t v17 = v36;
        uint64_t v25 = v61;
      }
      uint64_t v30 = v59;
      ++v29;
      BOOL v31 = v34 == sub_10096C1A0();
      uint64_t v26 = v30;
      if (v31)
      {
        swift_bridgeObjectRelease();
        a4 = v43;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_19:
    if (v45)
    {
      return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v44;
      *(unsigned char *)(v41 + 24) = 0;
      *(void *)(v41 + 32) = 0;
      *(unsigned char *)(v41 + 40) = 1;
      a4();
      return swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.MarkPackagesAsEvictable()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003994A8()
{
  return 0xD000000000000016;
}

uint64_t sub_1003994C4(void (**a1)(char *, uint64_t *, uint64_t), uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v66 = a3;
  size_t v83 = a1;
  uint64_t v9 = *(void *)(*(void *)v5 + 600);
  uint64_t v10 = *(void *)(*(void *)v5 + 608);
  uint64_t v11 = *(void *)(*(void *)v5 + 616);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v86 = v9;
  uint64_t v87 = v10;
  uint64_t v88 = v11;
  uint64_t v89 = v12;
  uint64_t v13 = type metadata accessor for ReconciliationMutation();
  uint64_t v77 = *(void (***)(char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v54 - v14;
  uint64_t v65 = v12;
  uint64_t v68 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = sub_10096C890();
  uint64_t v71 = *(void (***)(char *, uint64_t))(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v79 = (char *)&v54 - v15;
  uint64_t v67 = v11;
  uint64_t v69 = v9;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v84 + 64);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  __int16 v20 = (char *)&v54 - v19;
  if (!fpfs_supports_pkg_dataless_escape_prevention()) {
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, 0xD000000000000018, 0x800000010099FE40, 0);
  }
  uint64_t v21 = a5;
  uint64_t v80 = v20;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v24 = v83;
    if (v22)
    {
      uint64_t v25 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v26 = *(unsigned __int8 *)(v25 + 24);
    }
    else
    {
      uint64_t v26 = 1;
    }
    uint64_t v28 = v85;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v26 = 1;
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v28 = v85;
    uint64_t v24 = v83;
  }
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v24[4] + 352))(v22, v26);
  int v57 = v30;
  uint64_t v56 = v31;
  uint64_t v55 = v17;
  uint64_t v58 = v21;
  uint64_t v59 = a4;
  uint64_t v32 = sub_10096C1A0();
  uint64_t v33 = v79;
  uint64_t v34 = v29;
  if (v32)
  {
    uint64_t v35 = 0;
    uint64_t v36 = *(void *)v24[2];
    uint64_t v76 = v24[2];
    uint64_t v37 = *(void (**)(char *))(v36 + 160);
    uint64_t v74 = v36 + 160;
    uint64_t v75 = v37;
    size_t v83 = (void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
    uint64_t v72 = v23 - 8;
    uint64_t v73 = (void (**)(char *, char *, uint64_t))(v84 + 32);
    ++v71;
    uint64_t v60 = (void (**)(uint64_t, uint64_t))(v77 + 1);
    uint64_t v77 = (void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v61 = v13;
    uint64_t v78 = v29;
    do
    {
      BOOL v38 = sub_10096C130();
      sub_10096C0E0();
      if (v38)
      {
        unint64_t v39 = v34
            + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))
            + *(void *)(v84 + 72) * v35;
        char v40 = *(void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
        uint64_t v41 = v80;
        v40(v80, (uint64_t *)v39, v16);
        uint64_t v42 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v55 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v86 = result;
        char v40 = *v83;
        char v52 = v80;
        (*v83)(v80, &v86, v16);
        uint64_t v41 = v52;
        swift_unknownObjectRelease();
        uint64_t v42 = v35 + 1;
        if (__OFADD__(v35, 1))
        {
LABEL_19:
          __break(1u);
          break;
        }
      }
      (*v73)(v28, v41, v16);
      v75(v28);
      int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v33, 1, v23);
      (*v71)(v33, v82);
      if (v43 != 1)
      {
        uint64_t v86 = v69;
        uint64_t v87 = v68;
        uint64_t v88 = v67;
        uint64_t v89 = v65;
        uint64_t v63 = type metadata accessor for JobResult();
        uint64_t v62 = v40;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v45 = swift_getAssociatedConformanceWitness();
        uint64_t v86 = v16;
        uint64_t v87 = v23;
        uint64_t v88 = AssociatedConformanceWitness;
        uint64_t v89 = v45;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v47 = (uint64_t)v64;
        uint64_t v48 = &v64[*(int *)(TupleTypeMetadata2 + 48)];
        v62(v64, (uint64_t *)v85, v16);
        uint64_t v33 = v79;
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v48 = 0x100000000000;
        *(_OWORD *)(v48 + 8) = *(_OWORD *)(v70 + 120);
        uint64_t v49 = v61;
        uint64_t v50 = v66;
        uint64_t v28 = v85;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v50, v47);
        uint64_t v51 = v47;
        uint64_t v23 = AssociatedTypeWitness;
        (*v60)(v51, v49);
      }
      (*v77)(v28, v16);
      uint64_t v34 = v78;
      ++v35;
    }
    while (v42 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v57) {
    return ((uint64_t (*)(void, void, void, void))v59)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v56;
  *(unsigned char *)(v53 + 24) = 0;
  *(void *)(v53 + 32) = 0;
  *(unsigned char *)(v53 + 40) = 1;
  v59();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.MarkPackagesAsSyncRoot()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100399D54()
{
  return 0xD000000000000017;
}

uint64_t sub_100399D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = v29;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 240))(a1, 1);
  if (!v14)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v25, 1, 1, v5);
    }
    uint64_t v16 = v12;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v13 + 264))(v27, a1);
    uint64_t v17 = (uint64_t)&v12[*(int *)(v5 + 52)];
    sub_10016B800(v17, (uint64_t)v26);
    sub_10016B800((uint64_t)v27, v17);
    sub_1003A9A58(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
    sub_1003A9A58(v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    sub_10016B800((uint64_t)v27, (uint64_t)v28);
    if (sub_1000DBD64((uint64_t)v28) == 1)
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v19 = v25;
    }
    else
    {
      char v20 = v28[0];
      sub_1003A9A58(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      uint64_t v21 = v25;
      if ((v20 & 0xE) == 0)
      {
        uint64_t v23 = &v16[*(int *)(v5 + 48)];
        v23[*(int *)(type metadata accessor for ItemMetadata() + 36)] = 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v21, v16, v5);
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        uint64_t v19 = v21;
        uint64_t v22 = 0;
LABEL_11:
        v18(v19, v22, 1, v5);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v5);
      }
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v19 = v25;
    }
    uint64_t v22 = 1;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_10039A138(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v54 = a3;
  uint64_t v64 = a1;
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v62 = sub_10096C890();
  int v57 = *(void (***)(char *, uint64_t))(v62 - 8);
  uint64_t v9 = __chkstk_darwin(v62);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v47 = *(void (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v12);
  char v52 = (char *)&v42 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = __chkstk_darwin(AssociatedTypeWitness);
  char v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v19;
  __chkstk_darwin(v18);
  uint64_t v61 = (char *)&v42 - v21;
  uint64_t v51 = a5;
  uint64_t v53 = v11;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v61;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v64[4] + 360))(v22, v24);
  int v45 = v27;
  uint64_t v44 = v28;
  if (sub_10096C1A0())
  {
    int v43 = a4;
    uint64_t v29 = 0;
    uint64_t v59 = v26;
    uint64_t v60 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
    uint64_t v50 = (void (**)(char *))(v47 + 4);
    uint64_t v49 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v47 + 2);
    uint64_t v48 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v47 + 7);
    uint64_t v55 = v57 + 1;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 6);
    ++v47;
    int v57 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    while (1)
    {
      BOOL v32 = sub_10096C130();
      sub_10096C0E0();
      if (v32)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v17 + 16))(v25, v26+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v29, AssociatedTypeWitness);
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v46 != 8) {
          goto LABEL_23;
        }
        v65[0] = result;
        (*v60)(v25, v65, AssociatedTypeWitness);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v34 = v29 + 1;
      uint64_t v35 = v64;
      if (__OFADD__(v29, 1)) {
        break;
      }
      (*v58)(v20, v25, AssociatedTypeWitness);
      sub_100399D70((uint64_t)v20, (uint64_t)v35, (uint64_t)v14);
      if ((*v56)(v14, 1, v8) == 1)
      {
        (*v57)(v20, AssociatedTypeWitness);
        (*v55)(v14, v62);
      }
      else
      {
        uint64_t v36 = v17;
        uint64_t v37 = v14;
        BOOL v38 = v52;
        unint64_t v39 = v37;
        (*v50)(v52);
        char v40 = v53;
        (*v49)(v53, v38, v8);
        (*v48)(v40, 0, 1, v8);
        sub_10086C908(v40, (uint64_t)v20, 0, 0, 0, v64, *(void *)(v63 + 120), *(void *)(v63 + 128), 4096, v54);
        (*v55)((char *)v40, v62);
        (*v47)(v38, v8);
        (*v57)(v20, AssociatedTypeWitness);
        uint64_t v14 = v39;
        uint64_t v17 = v36;
        uint64_t v25 = v61;
      }
      uint64_t v30 = v59;
      ++v29;
      BOOL v31 = v34 == sub_10096C1A0();
      uint64_t v26 = v30;
      if (v31)
      {
        swift_bridgeObjectRelease();
        a4 = v43;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_19:
    if (v45)
    {
      return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v44;
      *(unsigned char *)(v41 + 24) = 0;
      *(void *)(v41 + 32) = 0;
      *(unsigned char *)(v41 + 40) = 1;
      a4();
      return swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.MarkDirectoriesAsLocked()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039A858()
{
  return 0xD000000000000017;
}

uint64_t sub_10039A874(void **a1, void **a2, uint64_t a3, uint64_t (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  uint64_t v42 = a2;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 616);
  uint64_t v9 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 624);
  uint64_t v12 = *(void *)(v7 + 608);
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v50 = swift_getAssociatedConformanceWitness();
  uint64_t v13 = a1;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  int v45 = (char *)&v36 - v17;
  uint64_t v47 = v9;
  uint64_t v48 = v12;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v50 = v11;
  uint64_t v18 = type metadata accessor for PersistenceTrigger();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v36 - v21;
  uint64_t v23 = ((uint64_t (*)(uint64_t))(*a1)[20])(v20);
  if ((v23 & 1) == 0)
  {
    uint64_t v37 = v16;
    if (!v42)
    {
      sub_10085378C();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      ((void (*)(char *))(*a1)[39])(v22);
      uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    }
    uint64_t v38 = v19;
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*a1[2] + 312))(v23);
    uint64_t v25 = v44;
    uint64_t v27 = v24;
    uint64_t v47 = v24;
    sub_10096C1C0();
    swift_getWitnessTable();
    char v28 = sub_10096C460();
    if (v28)
    {
      swift_bridgeObjectRelease();
      return v25(0, 0xD000000000000012, 0x800000010099FDE0, 0);
    }
    uint64_t v42 = v13;
    swift_bridgeObjectRetain();
    if (!sub_10096C1A0())
    {
LABEL_19:
      swift_bridgeObjectRelease();
      type metadata accessor for MaintenanceContinuation();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = 0;
      *(unsigned char *)(v34 + 24) = 1;
      *(void *)(v34 + 32) = 0;
      *(unsigned char *)(v34 + 40) = 1;
      uint64_t v47 = 0x6465737561706E75;
      uint64_t v48 = 0xE900000000000020;
      uint64_t v35 = sub_10096C160();
      swift_bridgeObjectRelease();
      uint64_t v46 = v35;
      v51._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v51);
      swift_bridgeObjectRelease();
      v44(v34, v47, v48, 0);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v29 = 0;
    uint64_t v30 = (void (*)(char *))(*v42)[39];
    uint64_t v39 = (uint64_t)(*v42 + 39);
    char v40 = v30;
    uint64_t v41 = (void (**)(char *, uint64_t *, uint64_t))(v15 + 16);
    BOOL v31 = (void (**)(char *, uint64_t))(v38 + 8);
    while (1)
    {
      BOOL v32 = sub_10096C130();
      sub_10096C0E0();
      if (v32)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v45, v27+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v29, v14);
        uint64_t v33 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v37 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v47 = result;
        (*v41)(v45, &v47, v14);
        swift_unknownObjectRelease();
        uint64_t v33 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v45, v14);
      swift_storeEnumTagMultiPayload();
      v40(v22);
      (*v31)(v22, v18);
      ++v29;
      if (v33 == sub_10096C1A0()) {
        goto LABEL_19;
      }
    }
  }
  return v44(0, 0xD000000000000018, 0x800000010099FDC0, 0);
}

uint64_t type metadata accessor for Maintenance.UnpauseReconciliations()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039AEF8()
{
  return 0xD000000000000019;
}

uint64_t sub_10039AF14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v136 = a3;
  uint64_t v109 = a2;
  uint64_t v5 = (void *)*v3;
  uint64_t v103 = sub_10096B0E0();
  uint64_t v139 = *(void (***)(char *, uint64_t))(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v102 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[75];
  uint64_t v8 = v5[76];
  uint64_t v9 = v5[77];
  int v105 = v3;
  uint64_t v10 = v5[78];
  uint64_t v147 = v7;
  uint64_t v148 = v8;
  uint64_t v149 = v9;
  uint64_t v150 = v10;
  uint64_t v106 = type metadata accessor for ReconciliationMutation();
  uint64_t v123 = *(void (***)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v106 - 8);
  __chkstk_darwin(v106);
  size_t v107 = (char *)&v81 - v11;
  uint64_t v111 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v12 = __chkstk_darwin(v111);
  uint64_t v100 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v81 - v14;
  uint64_t v15 = type metadata accessor for SnapshotItem();
  uint64_t v110 = sub_10096C890();
  uint64_t v120 = *(void (***)(char *, uint64_t))(v110 - 8);
  uint64_t v16 = __chkstk_darwin(v110);
  uint64_t v104 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v112 = (char *)&v81 - v19;
  uint64_t v119 = v15;
  uint64_t v117 = *(void (***)(char *, uint64_t))(v15 - 8);
  __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v81 - v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v129 = sub_10096C890();
  *(void *)&long long v116 = *(void *)(v129 - 8);
  uint64_t v22 = __chkstk_darwin(v129);
  uint64_t v128 = (char *)&v81 - v23;
  uint64_t v132 = AssociatedTypeWitness;
  uint64_t v115 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin(v22);
  uint64_t v130 = (char *)&v81 - v24;
  uint64_t v147 = v7;
  uint64_t v108 = v8;
  uint64_t v148 = v8;
  uint64_t v149 = v9;
  uint64_t v101 = v10;
  uint64_t v150 = v10;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v127 = sub_10096C890();
  uint64_t v114 = *(void *)(v127 - 8);
  uint64_t v26 = __chkstk_darwin(v127);
  uint64_t v144 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v81 - v27);
  uint64_t v135 = v25;
  uint64_t v28 = *(void *)(v25 - 8);
  __chkstk_darwin(v26);
  uint64_t v131 = (char *)&v81 - v29;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v146 = (char *)&v81 - v35;
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v87 = v32;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = 0;
  v141 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v142 = AssociatedConformanceWitness + 72;
  uint64_t v145 = AssociatedConformanceWitness;
  uint64_t v137 = AssociatedConformanceWitness + 64;
  uint64_t v143 = (void (**)(char *, uint64_t *, uint64_t))(v31 + 16);
  uint64_t v140 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v134 = (uint64_t (**)(void, uint64_t, uint64_t))(v28 + 48);
  uint64_t v125 = (void (**)(char *, char *, uint64_t))(v116 + 16);
  v126 = (void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v28 + 32);
  uint64_t v124 = (unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 6);
  uint64_t v113 = (void (**)(char *, char *, uint64_t))(v115 + 4);
  uint64_t v98 = (uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 6);
  uint64_t v96 = (uint64_t (**)(char *, char *, uint64_t))(v117 + 4);
  uint64_t v94 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v117 + 2);
  uint64_t v93 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v117 + 7);
  uint64_t v97 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v120 + 1);
  uint64_t v90 = (void (**)(char *, char *, uint64_t))(v115 + 2);
  uint64_t v89 = (uint64_t (**)(char *, uint64_t))(v139 + 1);
  uint64_t v88 = (void (**)(uint64_t, uint64_t))(v123 + 1);
  uint64_t v95 = v117 + 1;
  ++v115;
  uint64_t v120 = (void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v139 = (void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v117 = (void (**)(char *, uint64_t))(v116 + 8);
  uint64_t v123 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v114 + 8);
  long long v116 = xmmword_100980D40;
  uint64_t v91 = v7;
  uint64_t v92 = v9;
  uint64_t v121 = v34;
  uint64_t v122 = a1;
  uint64_t v133 = v31;
  while (1)
  {
    BOOL v38 = sub_10096C130();
    sub_10096C0E0();
    if (v38)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v146, a1+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v37, v30);
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v87 != 8) {
        goto LABEL_65;
      }
      uint64_t v147 = result;
      (*v143)(v146, &v147, v30);
      swift_unknownObjectRelease();
    }
    uint64_t v39 = v144;
    uint64_t v40 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_60:
      sub_1003A9A58(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      (*v97)(v39, v110);
      (*v95)(v118, v119);
      (*v115)(v130, v132);
      (*v120)(v131, v135);
LABEL_61:
      (*v139)(v34, v30);
      return swift_bridgeObjectRelease();
    }
    (*v140)(v34, v146, v30);
    if (v141(v30, v145) & 1) != 0 || ((*(uint64_t (**)(uint64_t))(v145 + 64))(v30)) {
      goto LABEL_11;
    }
    uint64_t v41 = v138;
    sub_1000DEDD8((uint64_t)v34, (uint64_t)v39);
    if (v41) {
      goto LABEL_61;
    }
    uint64_t v42 = v39;
    uint64_t v43 = v39;
    uint64_t v44 = v135;
    int v45 = (*v134)(v42, 1, v135);
    uint64_t v138 = 0;
    if (v45 == 1)
    {
      (*v139)(v34, v30);
      (*v123)(v43, v127);
      goto LABEL_4;
    }
    uint64_t v46 = v131;
    (*v126)(v131, v43, v44);
    uint64_t v48 = v128;
    uint64_t v47 = v129;
    (*v125)(v128, &v46[*(int *)(v44 + 52)], v129);
    uint64_t v49 = v132;
    if ((*v124)(v48, 1, v132) != 1) {
      break;
    }
    (*v120)(v46, v44);
    uint64_t v34 = v121;
    (*v139)(v121, v30);
    (*v117)(v48, v47);
    a1 = v122;
LABEL_4:
    uint64_t v31 = v133;
LABEL_5:
    ++v37;
    if (v40 == sub_10096C1A0()) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v50 = v130;
  (*v113)(v130, v48, v49);
  uint64_t v51 = v138;
  (*(void (**)(void *__return_ptr, char *))(*(void *)v136[5] + 264))(v151, v50);
  if (v51)
  {
    (*v115)(v130, v132);
    (*v120)(v46, v135);
    uint64_t v34 = v121;
    goto LABEL_61;
  }
  sub_10016B800((uint64_t)v151, (uint64_t)v152);
  int v52 = sub_1000DBD64((uint64_t)v152);
  uint64_t v53 = v46;
  uint64_t v34 = v121;
  a1 = v122;
  if (v52 == 1)
  {
    uint64_t v138 = 0;
    (*v115)(v130, v132);
    (*v120)(v53, v135);
    (*v139)(v34, v30);
    goto LABEL_4;
  }
  uint64_t v114 = v152[26];
  uint64_t v86 = v152[27];
  uint64_t v54 = v112;
  (*(void (**)(char *, uint64_t))(*(void *)v136[4] + 240))(v121, 1);
  uint64_t v55 = 0;
  uint64_t v31 = v133;
  int v56 = (*v98)(v54, 1, v119);
  uint64_t v138 = 0;
  if (v56 == 1)
  {
    sub_1003A9A58(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    (*v115)(v130, v132);
    (*v120)(v131, v135);
    (*v139)(v34, v30);
    (*v97)((uint64_t (*)(char *, uint64_t, uint64_t))v54, v110);
    goto LABEL_5;
  }
  int v57 = v54;
  uint64_t v58 = v119;
  uint64_t v59 = (*v96)(v118, v57, v119);
  uint64_t v60 = &v118[*(int *)(v58 + 48)];
  if (v60[v111[12]])
  {
    uint64_t v61 = v111[21];
    if (v60[v61] != 5) {
      goto LABEL_23;
    }
LABEL_53:
    sub_1003A9A58(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    (*v95)(v118, v58);
LABEL_54:
    (*v115)(v130, v132);
    (*v120)(v131, v135);
LABEL_11:
    (*v139)(v34, v30);
    goto LABEL_5;
  }
  uint64_t v84 = v111[12];
  uint64_t v63 = *(uint64_t (**)(uint64_t))(*v136 + 520);
  uint64_t v85 = v60;
  int v64 = v63(v59);
  int v65 = *v85;
  if (v65 == 2)
  {
    uint64_t v66 = v99;
    sub_10010DA98((uint64_t)v85, v99);
    goto LABEL_27;
  }
  int v83 = v64;
  uint64_t v66 = v99;
  sub_10010DA98((uint64_t)v85, v99);
  if (v65 == 1)
  {
LABEL_27:
    sub_10010DAFC(v66);
    uint64_t v67 = v100;
    sub_10010DA98((uint64_t)v85, v100);
    goto LABEL_28;
  }
  int v82 = *(unsigned __int8 *)(v66 + v111[12]);
  sub_10010DAFC(v66);
  uint64_t v67 = v100;
  sub_10010DA98((uint64_t)v85, v100);
  if (v82)
  {
LABEL_28:
    sub_10010DAFC(v67);
    goto LABEL_29;
  }
  int v82 = *(unsigned __int8 *)(v67 + v111[11]);
  sub_10010DAFC(v67);
  if (v82)
  {
LABEL_29:
    uint64_t v61 = v111[21];
    uint64_t v60 = v85;
    uint64_t v55 = v138;
    uint64_t v58 = v119;
    if (!v85[v61]) {
      goto LABEL_53;
    }
    goto LABEL_30;
  }
  uint64_t v60 = v85;
  if (v85[v84] == 1)
  {
    uint64_t v61 = v111[21];
    goto LABEL_52;
  }
  unsigned __int8 v77 = *v85 == 1;
  LODWORD(v84) = v83 & 1;
  uint64_t v78 = v86;
  uint64_t v114 = sub_1005EBAF8(v114, v86, 0, v84, v77, 0);
  uint64_t v79 = sub_1005EBAF8(v78, 0, 1, v84, v77, 0);
  uint64_t v80 = 501;
  if (v79 == 3) {
    uint64_t v80 = 3;
  }
  if (v114 != 501) {
    uint64_t v80 = v114;
  }
  if (v80 == 3 || v80 == 1002)
  {
    uint64_t v61 = v111[21];
    uint64_t v60 = v85;
LABEL_52:
    uint64_t v55 = v138;
    uint64_t v58 = v119;
    if (v60[v61] == 5) {
      goto LABEL_53;
    }
LABEL_23:
    char v62 = 5;
  }
  else
  {
    uint64_t v55 = v138;
    uint64_t v58 = v119;
    if (v80 == 500)
    {
      uint64_t v61 = v111[21];
      uint64_t v60 = v85;
      if (!v85[v61]) {
        goto LABEL_53;
      }
LABEL_30:
      char v62 = 0;
    }
    else
    {
      uint64_t v61 = v111[21];
      uint64_t v60 = v85;
      if (v85[v61] == 4) {
        goto LABEL_53;
      }
      char v62 = 4;
    }
  }
  v60[v61] = v62;
  uint64_t v39 = v104;
  (*v94)(v104, v118, v119);
  (*v93)(v39, 0, 1, v119);
  sub_10086C908(v39, (uint64_t)v34, 0, 0, 0, v136, v105[15], v105[16], 0x20000000, v109);
  if (v55) {
    goto LABEL_60;
  }
  uint64_t v138 = 0;
  (*v97)(v39, v110);
  uint64_t v147 = v91;
  uint64_t v148 = v108;
  uint64_t v149 = v92;
  uint64_t v150 = v101;
  uint64_t v114 = type metadata accessor for JobResult();
  uint64_t v68 = v132;
  uint64_t v69 = swift_getAssociatedConformanceWitness();
  uint64_t v147 = v30;
  uint64_t v148 = v68;
  uint64_t v149 = v145;
  uint64_t v150 = v69;
  type metadata accessor for ReconciliationID();
  uint64_t v85 = (char *)type metadata accessor for ReconciliationSideMutation();
  uint64_t v86 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*v90)(v107, v130, v132);
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v102;
  sub_10096B0D0();
  sub_10096B080();
  double v72 = v71;
  uint64_t result = (*v89)(v70, v103);
  double v74 = v72 * 1000000000.0;
  if ((~COERCE__INT64(v72 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v74 <= -9.22337204e18) {
      goto LABEL_63;
    }
    if (v74 >= 9.22337204e18) {
      goto LABEL_64;
    }
    uint64_t v75 = (uint64_t)v107;
    uint64_t v76 = &v107[v86];
    *(_OWORD *)uint64_t v76 = v116;
    *((void *)v76 + 2) = (uint64_t)v74;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(v109, v75);
    sub_1003A9A58(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    (*v88)(v75, v106);
    (*v95)(v118, v119);
    goto LABEL_54;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_10039C1AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v143 = a5;
  uint64_t v144 = a4;
  uint64_t v128 = a3;
  uint64_t v115 = a2;
  uint64_t v145 = a1;
  uint64_t v122 = *v5;
  uint64_t v6 = v122;
  uint64_t v127 = sub_10096B0E0();
  int64_t v114 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  v126 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v122 + 600);
  uint64_t v133 = *(void *)(v122 + 616);
  uint64_t v125 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v132 = sub_10096C890();
  uint64_t v113 = *(void *)(v132 - 8);
  uint64_t v10 = __chkstk_darwin(v132);
  uint64_t v142 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v131 = (char *)&v104 - v13;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v137 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v136 = (char *)&v104 - v18;
  __chkstk_darwin(v17);
  long long v116 = (char *)&v104 - v19;
  uint64_t v20 = *(void *)(v6 + 608);
  uint64_t v21 = *(void *)(v6 + 624);
  uint64_t v22 = type metadata accessor for SnapshotItem();
  int64_t v118 = sub_10096C890();
  int64_t v117 = *(void *)(v118 - 8);
  uint64_t v23 = __chkstk_darwin(v118);
  uint64_t v140 = (char *)&v104 - v24;
  uint64_t v120 = v22;
  uint64_t v121 = *(void *)(v22 - 8);
  __chkstk_darwin(v23);
  uint64_t v119 = (char *)&v104 - v25;
  uint64_t v123 = v21;
  uint64_t v124 = v20;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v129 = sub_10096C890();
  uint64_t v138 = *(void (***)(void (**)(char *, void, void), uint64_t))(v129 - 8);
  uint64_t v27 = __chkstk_darwin(v129);
  uint64_t v29 = (void (**)(char *, char *, uint64_t))((char *)&v104 - v28);
  uint64_t v141 = *(void *)(v26 - 8);
  __chkstk_darwin(v27);
  uint64_t v130 = (char *)&v104 - v30;
  sub_1006F0030(AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v31 = *(void *)(v14 + 72);
  swift_allocObject();
  uint64_t v32 = sub_10096C0D0();
  uint64_t v33 = (uint64_t)v5 + *(void *)(*v5 + 576);
  uint64_t v135 = v14;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v34(v35, v33, AssociatedTypeWitness);
  uint64_t v36 = sub_1003FC080(v32);
  uint64_t v151 = v36;
  uint64_t v37 = *(void (**)(uint64_t))(**(void **)(v145 + 16) + 160);
  uint64_t v139 = v29;
  v37(v33);
  uint64_t v146 = 0;
  uint64_t v109 = v36;
  uint64_t v40 = v138;
  uint64_t v106 = v33;
  uint64_t v41 = v140;
  uint64_t v110 = (void (*)(char *, uint64_t, uint64_t))v34;
  uint64_t v111 = v14 + 16;
  uint64_t v108 = v31;
  uint64_t v112 = AssociatedTypeWitness;
  size_t v107 = v5;
  uint64_t v42 = v141;
  uint64_t v43 = v139;
  int v44 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v141 + 48))(v139, 1, v26);
  if (v44 == 1)
  {
    swift_bridgeObjectRelease();
    ((void (**)(void (**)(char *, char *, uint64_t), uint64_t))v40)[1](v43, v129);
    return ((uint64_t (*)(void, uint64_t, unint64_t, void))v144)(0, 0x746F6E206D657469, 0xEE00646E756F6220, 0);
  }
  int v45 = v130;
  (*(void (**)(char *, void, uint64_t))(v42 + 32))(v130, v43, v26);
  uint64_t v47 = (void *)v145;
  uint64_t v46 = v146;
  uint64_t v48 = v26;
  uint64_t v49 = v45;
  uint64_t v50 = v41;
  (*(void (**)(char *, uint64_t))(**(void **)(v145 + 40) + 240))(v45, 1);
  uint64_t v146 = v46;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v48);
LABEL_2:
    swift_bridgeObjectRelease();
LABEL_3:
    uint64_t v38 = v146;
    swift_errorRetain();
    ((void (*)(void, void, void, uint64_t))v144)(0, 0, 0, v38);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v105 = v48;
  uint64_t v51 = v121;
  int v52 = v41;
  uint64_t v53 = v120;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v52, 1, v120) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, int64_t))(v117 + 8))(v50, v118);
    ((void (*)(void, unint64_t, unint64_t, void))v144)(0, 0xD000000000000013, 0x800000010099FD80, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v49, v105);
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v119, v50, v53);
  uint64_t WitnessTable = swift_getWitnessTable();
  if (FileItem.kind.getter(v53, WitnessTable) != 1)
  {
    uint64_t v62 = 0;
    char v63 = 1;
    uint64_t v64 = v128;
LABEL_51:
    uint64_t v102 = v146;
    sub_10039AF14(v151, v64, v47);
    uint64_t v146 = v102;
    if (v102)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v49, v105);
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    if (v63)
    {
      ((void (*)(void, void, void, void))v144)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v62;
      *(unsigned char *)(v103 + 24) = 0;
      *(void *)(v103 + 32) = 0;
      *(unsigned char *)(v103 + 40) = 1;
      v144();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v49, v105);
  }
  uint64_t v55 = v47[4];
  uint64_t v56 = v112;
  v110(v116, v106, v112);
  if (v115)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v57 = swift_dynamicCastClass();
    uint64_t v58 = TupleTypeMetadata2;
    uint64_t v59 = v135;
    if (v57)
    {
      uint64_t v60 = *(void *)(v57 + 16);
      uint64_t v61 = *(unsigned __int8 *)(v57 + 24);
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = 1;
    }
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v61 = 1;
    uint64_t v58 = TupleTypeMetadata2;
    uint64_t v59 = v135;
  }
  int v65 = v116;
  uint64_t v66 = v146;
  uint64_t v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)v55 + 376))(v116, v60, v61);
  uint64_t v146 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v56);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v49, v105);
    goto LABEL_2;
  }
  uint64_t v70 = v67;
  uint64_t v115 = v68;
  LODWORD(v109) = v69 & 1;
  double v72 = *(void (***)(void (**)(char *, void, void), uint64_t))(v59 + 8);
  uint64_t v71 = v59 + 8;
  uint64_t v138 = v72;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v72)(v65, v56);
  int64_t v73 = 0;
  uint64_t v129 = v70;
  uint64_t v74 = *(void *)(v70 + 64);
  long long v116 = (char *)(v70 + 64);
  uint64_t v75 = 1 << *(unsigned char *)(v70 + 32);
  uint64_t v76 = -1;
  if (v75 < 64) {
    uint64_t v76 = ~(-1 << v75);
  }
  unint64_t v77 = v76 & v74;
  uint64_t v140 = (char *)(v58 - 8);
  uint64_t v78 = (void (**)(void))(v113 + 32);
  uint64_t v135 = v71;
  uint64_t v139 = (void (**)(char *, char *, uint64_t))(v71 + 24);
  int64_t v117 = v114 + 8;
  int64_t v118 = (unint64_t)(v75 + 63) >> 6;
  int64_t v114 = v118 - 1;
  uint64_t v79 = v133;
  while (1)
  {
    uint64_t v81 = v142;
    if (v77)
    {
      unint64_t v82 = __clz(__rbit64(v77));
      v77 &= v77 - 1;
      unint64_t v83 = v82 | (v73 << 6);
      goto LABEL_26;
    }
    int64_t v86 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_61;
    }
    if (v86 < v118)
    {
      unint64_t v87 = *(void *)&v116[8 * v86];
      if (v87) {
        goto LABEL_30;
      }
      v73 += 2;
      if (v86 + 1 >= v118)
      {
        unint64_t v77 = 0;
        uint64_t v85 = 1;
        int64_t v73 = v86;
        goto LABEL_39;
      }
      unint64_t v87 = *(void *)&v116[8 * v73];
      if (v87)
      {
        ++v86;
        goto LABEL_30;
      }
      int64_t v88 = v86 + 2;
      if (v86 + 2 < v118) {
        break;
      }
    }
    unint64_t v77 = 0;
    uint64_t v85 = 1;
LABEL_39:
    uint64_t v89 = *(void *)(v58 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v81, v85, 1, v58);
    uint64_t v90 = v131;
    (*v78)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v90, 1, v58) == 1)
    {
      swift_release();
      uint64_t v64 = v128;
      uint64_t v47 = (void *)v145;
      uint64_t v53 = v120;
      uint64_t v51 = v121;
      uint64_t v49 = v130;
      uint64_t v62 = v115;
      char v63 = v109;
      goto LABEL_51;
    }
    int v91 = v90[*(int *)(v58 + 48)];
    uint64_t v92 = v136;
    uint64_t v93 = v112;
    (*v139)(v136, v90, v112);
    if (v91 == 1)
    {
      uint64_t v147 = v125;
      uint64_t v148 = v124;
      uint64_t v149 = v79;
      uint64_t v150 = v123;
      type metadata accessor for JobResult();
      v110(v137, (uint64_t)v92, v93);
      uint64_t v94 = v126;
      sub_10096B0D0();
      sub_10096B080();
      double v96 = v95;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))v117)(v94, v127);
      double v97 = v96 * 1000000000.0;
      if ((~COERCE__INT64(v96 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      uint64_t result = v122;
      if (v97 <= -9.22337204e18) {
        goto LABEL_59;
      }
      uint64_t v98 = (uint64_t)v137;
      if (v97 >= 9.22337204e18) {
        goto LABEL_60;
      }
      uint64_t v99 = (uint64_t)v97;
      swift_allocObject();
      uint64_t v100 = sub_100610B30(v98, 0, v99, 0);
      uint64_t v101 = v98;
      uint64_t v93 = v112;
      uint64_t v80 = (uint64_t (*)(char *, uint64_t))v138;
      ((void (*)(uint64_t, uint64_t))v138)(v101, v112);
      sub_1004D4360(v128, v100);
      swift_release();
      uint64_t v92 = v136;
    }
    else
    {
      v110(v137, (uint64_t)v92, v93);
      sub_10096C1C0();
      sub_10096C180();
      uint64_t v80 = (uint64_t (*)(char *, uint64_t))v138;
    }
    uint64_t result = v80(v92, v93);
    uint64_t v79 = v133;
    uint64_t v58 = TupleTypeMetadata2;
  }
  unint64_t v87 = *(void *)&v116[8 * v88];
  if (v87)
  {
    v86 += 2;
LABEL_30:
    unint64_t v77 = (v87 - 1) & v87;
    unint64_t v83 = __clz(__rbit64(v87)) + (v86 << 6);
    int64_t v73 = v86;
LABEL_26:
    uint64_t v84 = v129;
    v110(v142, *(void *)(v129 + 48) + v83 * v108, v112);
    uint64_t v81 = v142;
    uint64_t v85 = 0;
    v142[*(int *)(v58 + 48)] = *(unsigned char *)(*(void *)(v84 + 56) + v83);
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v86 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      break;
    }
    if (v86 >= v118)
    {
      unint64_t v77 = 0;
      uint64_t v85 = 1;
      int64_t v73 = v114;
      goto LABEL_39;
    }
    unint64_t v87 = *(void *)&v116[8 * v86];
    ++v88;
    if (v87) {
      goto LABEL_30;
    }
  }
LABEL_62:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.ResolveItemEvictability()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10039D240()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10039D278()
{
  return 0x800000;
}

uint64_t sub_10039D288(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_10039D2BC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_10039D2C8(uint64_t a1)
{
  return sub_10039D314(a1);
}

uint64_t sub_10039D314(uint64_t a1)
{
  sub_10009CA78(a1, (uint64_t)v4);
  uint64_t v2 = sub_1005A5974(v4);
  sub_1000268E0(a1);
  return v2;
}

uint64_t sub_10039D374()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Maintenance.InheritedContentPolicyContinuation()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039D39C()
{
  return 0xD000000000000020;
}

uint64_t sub_10039D3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  void (*v38)(void *__return_ptr, unsigned char *);
  unsigned char *v39;
  void (*v40)(unsigned char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  void (*v43)(unsigned char *, unint64_t, uint64_t);
  unsigned char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void *v50;
  int *TupleTypeMetadata;
  uint64_t v52;
  unsigned char *v53;
  void *v54;
  uint64_t v55;
  uint64_t result;
  void **v57;
  char v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  ValueMetadata *v66;
  unsigned char *v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  unsigned char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned char v77[12];
  BOOL v78;
  uint64_t v79;
  unint64_t v80;
  void (**v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (**v88)(uint64_t, void, uint64_t, uint64_t);
  void (**v89)(uint64_t, uint64_t);
  uint64_t v90;
  unsigned char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void (*v95)(void *__return_ptr, unsigned char *);
  void (**v96)(unsigned char *, unsigned char *, uint64_t);
  void (**v97)(unsigned char *, uint64_t);
  uint64_t v98;
  uint64_t AssociatedTypeWitness;
  unsigned char *v100;
  unsigned char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  ValueMetadata *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  unsigned char *v109;
  unsigned char *v110;
  uint64_t (*v111)(uint64_t, void, void, void);
  uint64_t v112;
  void **v113;
  unsigned char *v114;
  uint64_t v115;
  uint64_t v116;
  void (**v117)(unsigned char *, uint64_t *, uint64_t);
  unsigned char *v118;
  uint64_t v119;
  uint64_t v120;
  ValueMetadata *v121;
  void *v122;
  uint64_t v123;
  void v124[32];

  uint64_t v111 = a4;
  uint64_t v112 = a5;
  long long v116 = a3;
  uint64_t v103 = (void *)*v5;
  uint64_t v8 = v103;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  __chkstk_darwin(v9);
  int v91 = &v77[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (ValueMetadata *)v103[77];
  uint64_t v12 = v103[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v100 = &v77[-v13];
  uint64_t v102 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v101 = &v77[-v15];
  uint64_t v104 = v12;
  uint64_t v105 = v11;
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v17 = sub_10096C890();
  uint64_t v108 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v109 = &v77[-v19];
  uint64_t v115 = *(void *)(v16 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  int64_t v118 = &v77[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v20);
  int64_t v114 = &v77[-v23];
  unint64_t v87 = v24;
  __chkstk_darwin(v22);
  uint64_t v110 = &v77[-v25];
  uint64_t v113 = (void **)a1;
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v27 = (char *)v5 + v8[72];
  uint64_t v28 = (*(uint64_t (**)(char *))(*(void *)v26 + 336))(v27);
  BOOL v29 = (unint64_t)(v28 - 501) < 2 || v28 == 1003;
  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v26 + 472))(v27, a2);
  BOOL v32 = v31;
  uint64_t v78 = v29;
  uint64_t v33 = sub_10096C1A0();
  unint64_t v83 = v26;
  uint64_t v79 = v32;
  if (!v33)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (v32)
    {
      int v36 = 0;
      uint64_t v57 = v113;
      goto LABEL_19;
    }
    uint64_t v58 = 1;
    uint64_t v57 = v113;
LABEL_23:
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*v57[3] + 160))(66, 0x800000, 0, 1);
    uint64_t v60 = sub_10096C160();
    uint64_t v61 = swift_bridgeObjectRelease();
    if (v60 <= 0)
    {
      ((void (*)(uint64_t))(*v57)[71])(v61);
      if (v58) {
        return v111(0, 0, 0, 0);
      }
LABEL_33:
      uint64_t v76 = swift_retain();
      v111(v76, 0, 0, 0);
      return swift_release_n();
    }
    goto LABEL_24;
  }
  uint64_t v34 = v14;
  uint64_t v35 = 0;
  int v36 = 0;
  uint64_t v37 = *(void **)v26;
  int64_t v117 = (void (**)(unsigned char *, uint64_t *, uint64_t))(v115 + 16);
  double v96 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v115 + 32);
  v37 += 33;
  uint64_t v38 = (void (*)(void *__return_ptr, unsigned char *))*v37;
  uint64_t v94 = v37;
  double v95 = v38;
  int64_t v88 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56);
  uint64_t v89 = (void (**)(uint64_t, uint64_t))(v108 + 8);
  double v97 = (void (**)(unsigned char *, uint64_t))(v115 + 8);
  uint64_t v98 = v30;
  int64_t v86 = (v115 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v80 = 0x800000010099FD30;
  uint64_t v81 = (void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v39 = v114;
  unint64_t v82 = v17;
  do
  {
    BOOL v32 = sub_10096C130();
    sub_10096C0E0();
    size_t v107 = v36;
    uint64_t v108 = v35;
    if (v32)
    {
      uint64_t v42 = v30
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
          + *(void *)(v115 + 72) * v35;
      uint64_t v43 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v115 + 16);
      int v44 = v110;
      v43(v110, v42, v16);
      int v45 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t result = sub_10096CC20();
      int v44 = v110;
      if (v87 != 8) {
        goto LABEL_37;
      }
      BOOL v32 = result;
      uint64_t v119 = result;
      uint64_t v43 = (void (*)(unsigned char *, unint64_t, uint64_t))*v117;
      (*v117)(v110, &v119, v16);
      swift_unknownObjectRelease();
      int v45 = v108 + 1;
      if (__OFADD__(v108, 1))
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    uint64_t v106 = v45;
    (*v96)(v39, v44, v16);
    v95(v124, v39);
    sub_1003A99F0((uint64_t)v124, (uint64_t)&v39[*(int *)(v16 + 52)]);
    uint64_t v46 = (uint64_t)v118;
    v43(v118, (unint64_t)v39, v16);
    uint64_t v123 = 2;
    uint64_t v47 = (uint64_t)v109;
    v43(v109, (unint64_t)v39, v16);
    (*v88)(v47, 0, 1, v16);
    uint64_t v48 = sub_10086D7F4(v47, v46, (char *)&v123, v113, v116, 0);
    (*v89)(v47, v17);
    if ((v123 & 0x400000000000000) != 0)
    {
      uint64_t v49 = v103[76];
      uint64_t v50 = (void *)v103[78];
      uint64_t v119 = v104;
      uint64_t v120 = v49;
      uint64_t v121 = v105;
      uint64_t v122 = v50;
      uint64_t v85 = type metadata accessor for JobResult();
      __chkstk_darwin(v85);
      strcpy(&v77[-32], "from to  reason ");
      uint64_t v119 = v16;
      uint64_t v120 = v16;
      uint64_t v121 = &type metadata for Fields;
      uint64_t v122 = &type metadata for String;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      int v52 = (uint64_t)v101;
      uint64_t v53 = &v101[TupleTypeMetadata[12]];
      uint64_t v84 = TupleTypeMetadata[16];
      uint64_t v54 = &v101[TupleTypeMetadata[20]];
      uint64_t v39 = v114;
      v43(v101, (unint64_t)v114, v16);
      v43(v53, (unint64_t)v118, v16);
      *(void *)(v52 + v84) = 0x400000000000000;
      char *v54 = 0xD000000000000018;
      v54[1] = v80;
      uint64_t v55 = v102;
      swift_storeEnumTagMultiPayload();
      sub_1005917A0(v116, v52);
      uint64_t v17 = v82;
      (*v81)(v52, v55);
      uint64_t v40 = *v97;
      (*v97)(v118, v16);
    }
    else
    {
      uint64_t v40 = *v97;
      (*v97)(v118, v16);
      uint64_t v39 = v114;
    }
    int v36 = v48 | v107;
    v40(v39, v16);
    uint64_t v30 = v98;
    uint64_t v41 = sub_10096C1A0();
    uint64_t v35 = v108 + 1;
  }
  while (v106 != v41);
  swift_bridgeObjectRelease();
  uint64_t v57 = v113;
  if (!v79)
  {
    uint64_t v58 = 1;
    if (v36)
    {
LABEL_24:
      uint64_t v59 = 0;
      goto LABEL_25;
    }
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v58 = 0;
  uint64_t v59 = v78;
  if (((v78 | v36) & 1) == 0) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v62 = v116;
  char v63 = v104;
  uint64_t v64 = v103[76];
  int v65 = (void *)v103[78];
  uint64_t v119 = v104;
  uint64_t v120 = v64;
  uint64_t v66 = v105;
  uint64_t v121 = v105;
  uint64_t v122 = v65;
  type metadata accessor for JobResult();
  uint64_t v119 = v63;
  uint64_t v120 = v64;
  uint64_t v121 = v66;
  uint64_t v122 = v65;
  type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy();
  sub_10085378C();
  uint64_t v67 = v91;
  sub_10096B0D0();
  sub_10096B080();
  char v69 = v68;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v92 + 8))(v67, v93);
  uint64_t v70 = v69 * 1000000000.0;
  if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v70 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v70 < 9.22337204e18)
  {
    uint64_t v71 = (uint64_t)v70;
    swift_allocObject();
    double v72 = v100;
    sub_100610B30((uint64_t)v100, 0, v71, 0);
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v72, AssociatedTypeWitness);
    int64_t v73 = sub_10058364C(0x1000000);
    swift_retain();
    swift_release();
    sub_1004D4360(v62, v73);
    swift_release();
    if (v58) {
      return v111(0, 0, 0, 0);
    }
    if (v59)
    {
      uint64_t v119 = v104;
      uint64_t v120 = v64;
      uint64_t v121 = v105;
      uint64_t v122 = v65;
      type metadata accessor for Maintenance.InheritedContentPolicyContinuation();
      uint64_t v74 = *(void *)(v79 + 16);
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v74;
      swift_retain();
      v111(v75, 0, 0, 0);
      swift_release_n();
      return swift_release();
    }
    goto LABEL_33;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.RefreshInheritedContentPolicy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039E05C()
{
  return 0xD000000000000025;
}

uint64_t sub_10039E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v52 = *(void *)(*(void *)v5 + 600);
  uint64_t v53 = v9;
  uint64_t v47 = v9;
  uint64_t v54 = v10;
  uint64_t v55 = v11;
  uint64_t v45 = v11;
  uint64_t v44 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v34 - v13;
  uint64_t v46 = v10;
  uint64_t v48 = v52;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = *(void *)(v49 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v50 = a1;
  uint64_t v17 = *(void *)(a1 + 24);
  id v18 = [self defaultStore];
  uint64_t v19 = (char *)[v18 speculativeRefreshInheritedContentPolicyMaximumJobs];

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, char *, void))(*(void *)v17 + 152))(1, 66, v19, 0);
  if (result >= (uint64_t)v19) {
    return a4(0, 0, 0, 0);
  }
  uint64_t v36 = result;
  if (__OFSUB__(v19, result))
  {
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, void, char *))(*(void *)v17 + 160))(66, 0x800000, 0, &v19[-result]);
    uint64_t v34 = a5;
    uint64_t v35 = a4;
    swift_bridgeObjectRetain();
    if (sub_10096C1A0())
    {
      uint64_t v22 = 0;
      uint64_t v23 = *(void (**)(char *))(*(void *)v50 + 312);
      uint64_t v40 = *(void *)v50 + 312;
      uint64_t v41 = v23;
      uint64_t v42 = (void (**)(char *, uint64_t *, uint64_t))(v49 + 16);
      uint64_t v38 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v39 = (void (**)(char *, char *, uint64_t))(v49 + 32);
      do
      {
        BOOL v24 = sub_10096C130();
        sub_10096C0E0();
        if (v24)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v16, v21+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v22, AssociatedTypeWitness);
          uint64_t v25 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t result = sub_10096CC20();
          if (v37 != 8) {
            goto LABEL_21;
          }
          uint64_t v52 = result;
          (*v42)(v16, &v52, AssociatedTypeWitness);
          swift_unknownObjectRelease();
          uint64_t v25 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
LABEL_12:
            __break(1u);
            return a4(0, 0, 0, 0);
          }
        }
        uint64_t v51 = v25;
        uint64_t v26 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v28 = swift_getAssociatedConformanceWitness();
        uint64_t v52 = AssociatedTypeWitness;
        uint64_t v53 = v26;
        uint64_t v54 = AssociatedConformanceWitness;
        uint64_t v55 = v28;
        type metadata accessor for ReconciliationID();
        a4 = (uint64_t (*)(void, void, void, void))*(int *)(swift_getTupleTypeMetadata2() + 48);
        BOOL v29 = v43;
        (*v39)(v43, v16, AssociatedTypeWitness);
        swift_storeEnumTagMultiPayload();
        *((unsigned char *)a4 + (void)v29) = 66;
        uint64_t v30 = v44;
        swift_storeEnumTagMultiPayload();
        v41(v29);
        (*v38)(v29, v30);
        ++v22;
      }
      while (v51 != sub_10096C1A0());
    }
    swift_bridgeObjectRelease();
    if (v36)
    {
      swift_bridgeObjectRelease();
      return v35(0, 0, 0, 0);
    }
    else
    {
      uint64_t v31 = sub_10096C160();
      uint64_t v32 = swift_bridgeObjectRelease();
      uint64_t v33 = v35;
      if (!v31) {
        (*(void (**)(uint64_t))(*(void *)v50 + 568))(v32);
      }
      return v33(0, 0, 0, 0);
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039E6A8()
{
  return 0xD000000000000012;
}

uint64_t sub_10039E6C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v41 = *v5;
  uint64_t v42 = a3;
  uint64_t v10 = *(void *)(v41 + 616);
  uint64_t v43 = v5;
  uint64_t v11 = *(void *)(v41 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(void *)(v44 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v15 = (char *)&v34 - v14;
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (uint64_t v16 = swift_dynamicCastClass()) != 0)
    && *(unsigned char *)(v16 + 24) != 1)
  {
    uint64_t v17 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 32) + 600))(v17);
  uint64_t v20 = v19;
  int v39 = v21;
  if (sub_10096C1A0())
  {
    uint64_t v35 = v13;
    uint64_t v36 = v20;
    uint64_t v37 = a5;
    uint64_t v38 = a4;
    uint64_t v22 = *(void *)(v41 + 608);
    uint64_t v23 = *(void *)(v41 + 624);
    uint64_t v45 = v11;
    uint64_t v46 = v22;
    uint64_t v47 = v10;
    uint64_t v48 = v23;
    uint64_t v40 = type metadata accessor for JobResult();
    uint64_t v45 = v11;
    uint64_t v46 = v22;
    uint64_t v47 = v10;
    uint64_t v48 = v23;
    type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
    uint64_t v24 = 0;
    uint64_t v41 = v44 + 16;
    uint64_t v25 = (void (**)(char *, uint64_t))(v44 + 8);
    while (1)
    {
      BOOL v26 = sub_10096C130();
      sub_10096C0E0();
      if (v26)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v15, v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v24, AssociatedTypeWitness);
        uint64_t v27 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v45 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v41)(v15, &v45, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v27 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          a4 = v38;
          uint64_t v20 = v36;
          if (v39) {
            return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
          }
LABEL_16:
          type metadata accessor for MaintenanceContinuation();
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v20;
          *(unsigned char *)(v33 + 24) = 0;
          *(void *)(v33 + 32) = 0;
          *(unsigned char *)(v33 + 40) = 1;
          a4();
          return swift_release();
        }
      }
      uint64_t v28 = v43[15];
      uint64_t v29 = v43[16];
      uint64_t v30 = v43[17];
      swift_allocObject();
      uint64_t v31 = sub_100610B30((uint64_t)v15, v28, v29, v30);
      (*v25)(v15, AssociatedTypeWitness);
      sub_1004D4360(v42, v31);
      swift_release();
      ++v24;
      if (v27 == sub_10096C1A0()) {
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0) {
    goto LABEL_16;
  }
  return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
}

uint64_t type metadata accessor for Maintenance.FixContentPolicyInNonMaterializedFolders()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039EB2C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10039EB48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v57 = a4;
  uint64_t v73 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 616);
  uint64_t v10 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = __chkstk_darwin(AssociatedTypeWitness);
  char v69 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v79 = (char *)&v53 - v14;
  uint64_t v15 = *(void *)(v8 + 624);
  uint64_t v74 = v5;
  uint64_t v16 = *(void *)(v8 + 608);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v71 = v10;
  uint64_t v72 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v16;
  uint64_t v68 = v15;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = v17;
  uint64_t v83 = AssociatedConformanceWitness;
  uint64_t v84 = v19;
  uint64_t v20 = type metadata accessor for ReconciliationID();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v23;
  __chkstk_darwin(v22);
  uint64_t v80 = (char *)&v53 - v25;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v26 = *(void *)(v26 + 16);
      uint64_t v28 = *(unsigned __int8 *)(v27 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v28 = 1;
LABEL_6:
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 320))(v26, v28);
  int v54 = v30;
  uint64_t v53 = v31;
  if (sub_10096C1A0())
  {
    uint64_t v32 = 0;
    uint64_t v33 = (void (**)(char *, uint64_t *, uint64_t))(v21 + 16);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v78 + 32);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v78 + 16);
    uint64_t v59 = (void (**)(uint64_t, uint64_t))(v78 + 8);
    uint64_t v58 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v65 = v20;
    uint64_t v66 = v21;
    uint64_t v64 = v29;
    char v63 = (void (**)(char *, uint64_t *, uint64_t))(v21 + 16);
    uint64_t v62 = (void (**)(char *, char *, uint64_t))(v21 + 32);
    do
    {
      BOOL v49 = sub_10096C130();
      sub_10096C0E0();
      if (v49)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v80, v29+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v32, v20);
        uint64_t v50 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v55 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v81 = result;
        (*v33)(v80, &v81, v20);
        swift_unknownObjectRelease();
        uint64_t v50 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      (*v34)(v24, v80, v20);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v58)(v24, v20);
      }
      else
      {
        uint64_t v35 = v79;
        uint64_t v36 = v70;
        (*v61)(v79, v24, v70);
        uint64_t v37 = (uint64_t)v69;
        (*v60)(v69, v35, v36);
        uint64_t v38 = v74[15];
        uint64_t v39 = v74[17];
        uint64_t v76 = v74[16];
        uint64_t v77 = v38;
        uint64_t v75 = v39 | 0x80000000;
        uint64_t v40 = v71;
        uint64_t v42 = v67;
        uint64_t v41 = v68;
        uint64_t v81 = v71;
        uint64_t v82 = v67;
        uint64_t v43 = v24;
        uint64_t v44 = v72;
        uint64_t v83 = v72;
        uint64_t v84 = v68;
        uint64_t v78 = type metadata accessor for JobResult();
        uint64_t v81 = v40;
        uint64_t v82 = v42;
        uint64_t v20 = v65;
        uint64_t v83 = v44;
        uint64_t v84 = v41;
        uint64_t v24 = v43;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v45 = sub_1008AA760(v37, v77, v76, v75);
        uint64_t v46 = *v59;
        uint64_t v47 = v37;
        uint64_t v33 = v63;
        (*v59)(v47, v36);
        sub_1004D4360(v73, v45);
        uint64_t v29 = v64;
        swift_release();
        uint64_t v48 = v36;
        uint64_t v34 = v62;
        v46((uint64_t)v79, v48);
        uint64_t v21 = v66;
      }
      ++v32;
    }
    while (v50 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v54) {
    return ((uint64_t (*)(void, void, void, void))v57)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v53;
  *(unsigned char *)(v52 + 24) = 0;
  *(void *)(v52 + 32) = 0;
  *(unsigned char *)(v52 + 40) = 1;
  v57();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanParentDeletedChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039F210()
{
  return 0xD000000000000022;
}

uint64_t sub_10039F22C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v48 = a4;
  uint64_t v55 = a3;
  uint64_t v52 = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t v10 = *(void *)(*v5 + 616);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v62 = *(void *)(*v5 + 600);
  uint64_t v63 = v9;
  uint64_t v56 = v11;
  uint64_t v57 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  uint64_t v54 = type metadata accessor for ReconciliationMutation();
  uint64_t v50 = *(void (***)(char *, uint64_t))(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v58 = v10;
  uint64_t v59 = v62;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v61 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = sub_10096C890();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  BOOL v49 = (char *)&v42 - v21;
  if (a2 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v22 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v51 = *(void (***)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 24);
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v23 = 1;
  }
  uint64_t v24 = (uint64_t)v5 + *(void *)(v8 + 576);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v53 = AssociatedConformanceWitness;
  char v26 = sub_10096BBE0();
  uint64_t v27 = v60;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v18, AssociatedTypeWitness);
  if (v26)
  {
    uint64_t v28 = 1;
    uint64_t v29 = v49;
  }
  else
  {
    uint64_t v29 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v49, v24, AssociatedTypeWitness);
    uint64_t v28 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v28, 1, AssociatedTypeWitness);
  uint64_t v30 = (*(uint64_t (**)(char *, void, uint64_t))(**(void **)(v52 + 16) + 328))(v29, v51, v23);
  int v46 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v20;
  uint64_t v44 = v19;
  uint64_t v45 = a5;
  if (sub_10096C1A0())
  {
    uint64_t v62 = v59;
    uint64_t v63 = v57;
    uint64_t v64 = v58;
    uint64_t v65 = v56;
    type metadata accessor for JobResult();
    uint64_t v33 = 0;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v60 + 32);
    uint64_t v52 = v60 + 16;
    ++v50;
    do
    {
      BOOL v34 = sub_10096C130();
      sub_10096C0E0();
      if (v34)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v61, v30+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v33, AssociatedTypeWitness);
        uint64_t v35 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v47 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v62 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v52)(v61, &v62, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v35 = v33 + 1;
        if (__OFADD__(v33, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      uint64_t v36 = swift_getAssociatedTypeWitness();
      uint64_t v37 = swift_getAssociatedConformanceWitness();
      uint64_t v62 = AssociatedTypeWitness;
      uint64_t v63 = v36;
      uint64_t v64 = v53;
      uint64_t v65 = v37;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v38 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v51)(v13, v61, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      *uint64_t v38 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v54;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v55, (uint64_t)v13);
      (*v50)(v13, v39);
      ++v33;
    }
    while (v35 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v46)
  {
    ((void (*)(void, void, void, void))v48)(0, 0, 0, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v42;
    *(unsigned char *)(v41 + 24) = 0;
    *(void *)(v41 + 32) = 0;
    *(unsigned char *)(v41 + 40) = 1;
    v48();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v49, v44);
}

uint64_t type metadata accessor for Maintenance.UnmarkParentDeletedMergeSource()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039F9AC()
{
  return 0xD000000000000016;
}

uint64_t sub_10039F9C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v66 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 616);
  uint64_t v10 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v63 = (char *)&v48 - v12;
  uint64_t v13 = *(void *)(v8 + 624);
  uint64_t v67 = v5;
  uint64_t v14 = *(void *)(v8 + 608);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v64 = v10;
  uint64_t v65 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v14;
  uint64_t v62 = v13;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = v15;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v73 = v17;
  uint64_t v18 = type metadata accessor for ReconciliationID();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v48 - v23;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v25 = swift_dynamicCastClass();
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v25 = *(void *)(v25 + 16);
      uint64_t v27 = *(unsigned __int8 *)(v26 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v27 = 1;
LABEL_6:
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 336))(v25, v27);
  int v50 = v29;
  uint64_t v49 = v30;
  if (sub_10096C1A0())
  {
    uint64_t v31 = 0;
    uint64_t v32 = (void (**)(char *, uint64_t *, uint64_t))(v19 + 16);
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v55 = (void (**)(uint64_t, uint64_t))(v68 + 8);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v68 + 32);
    uint64_t v54 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v59 = v24;
    uint64_t v60 = v22;
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v58 = v18;
    do
    {
      BOOL v44 = sub_10096C130();
      sub_10096C0E0();
      if (v44)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v24, v28+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v31, v18);
        uint64_t v45 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v51 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v70 = result;
        (*v32)(v24, &v70, v18);
        swift_unknownObjectRelease();
        uint64_t v45 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      (*v33)(v22, v24, v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v54)(v22, v18);
      }
      else
      {
        uint64_t v34 = (uint64_t)v63;
        (*v56)(v63, v22, v69);
        uint64_t v36 = v64;
        uint64_t v35 = v65;
        uint64_t v37 = v32;
        uint64_t v38 = v19;
        uint64_t v39 = v61;
        uint64_t v70 = v64;
        uint64_t v71 = v61;
        uint64_t v40 = v28;
        uint64_t v41 = v62;
        uint64_t v72 = v65;
        uint64_t v73 = v62;
        uint64_t v68 = type metadata accessor for JobResult();
        uint64_t v70 = v36;
        uint64_t v71 = v39;
        uint64_t v19 = v38;
        uint64_t v32 = v37;
        uint64_t v18 = v58;
        uint64_t v72 = v35;
        uint64_t v73 = v41;
        uint64_t v28 = v40;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v42 = sub_1008AA66C(v34, v67[15], v67[16], v67[17]);
        sub_1004D4360(v66, v42);
        uint64_t v33 = v57;
        swift_release();
        uint64_t v43 = v34;
        uint64_t v24 = v59;
        uint64_t v22 = v60;
        (*v55)(v43, v69);
      }
      ++v31;
    }
    while (v45 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v50) {
    return ((uint64_t (*)(void, void, void, void))v53)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v49;
  *(unsigned char *)(v47 + 24) = 0;
  *(void *)(v47 + 32) = 0;
  *(unsigned char *)(v47 + 40) = 1;
  v53();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockItemRejection()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10039FFC0()
{
  return 0xD000000000000019;
}

uint64_t sub_10039FFDC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v74 = a5;
  uint64_t v85 = a3;
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v94 = *(void *)(*(void *)v5 + 600);
  uint64_t v99 = v94;
  uint64_t v100 = v9;
  uint64_t v92 = v10;
  uint64_t v101 = v10;
  uint64_t v102 = v11;
  uint64_t v81 = type metadata accessor for ReconciliationMutation();
  uint64_t v96 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (char *)&v71 - v12;
  uint64_t v93 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v71 - v15;
  uint64_t v97 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v88 = sub_10096C890();
  uint64_t v19 = *(void *)(v88 - 8);
  uint64_t v20 = __chkstk_darwin(v88);
  uint64_t v90 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v89 = (char *)&v71 - v22;
  if (!a2)
  {
    uint64_t v23 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
LABEL_5:
    uint64_t v25 = 1;
    goto LABEL_6;
  }
  uint64_t v24 = v23;
  uint64_t v23 = *(void *)(v23 + 16);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 24);
LABEL_6:
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 344))(v23, v25);
  int v72 = v27;
  uint64_t v71 = v28;
  uint64_t v77 = 0;
  uint64_t v75 = a1;
  uint64_t v73 = a4;
  uint64_t v29 = 0;
  uint64_t v95 = TupleTypeMetadata3 - 8;
  uint64_t v84 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v82 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v83 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v78 = (void (**)(uint64_t, uint64_t))(v96 + 8);
  uint64_t v86 = v26;
  unint64_t v87 = v16;
  uint64_t v31 = v89;
  uint64_t v30 = v90;
  uint64_t v32 = v26;
  while (1)
  {
    if (v29 == sub_10096C1A0())
    {
      uint64_t v96 = v29;
      uint64_t v37 = *(void *)(TupleTypeMetadata3 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v30, 1, 1, TupleTypeMetadata3);
      goto LABEL_15;
    }
    BOOL v38 = sub_10096C130();
    sub_10096C0E0();
    if (v38)
    {
      uint64_t v39 = *(void *)(TupleTypeMetadata3 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v30, v32+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29, TupleTypeMetadata3);
      BOOL v40 = __OFADD__(v29, 1);
      uint64_t v41 = v29 + 1;
      if (v40) {
        break;
      }
      goto LABEL_14;
    }
    uint64_t v96 = v29;
    uint64_t result = sub_10096CC20();
    uint64_t v39 = *(void *)(TupleTypeMetadata3 - 8);
    if (*(void *)(v39 + 64) != 8)
    {
      __break(1u);
      return result;
    }
    uint64_t v99 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v39 + 16))(v30, &v99, TupleTypeMetadata3);
    swift_unknownObjectRelease();
    uint64_t v41 = v96 + 1;
    if (__OFADD__(v96, 1)) {
      break;
    }
LABEL_14:
    uint64_t v96 = v41;
    uint64_t v37 = v39;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v30, 0, 1, TupleTypeMetadata3);
LABEL_15:
    (*v84)(v31, v30, v88);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v31, 1, TupleTypeMetadata3) == 1) {
      goto LABEL_33;
    }
    int v42 = v31[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v43 = *(void *)&v31[*(int *)(TupleTypeMetadata3 + 64)];
    (*v82)(v16, v31, v97);
    if (v42) {
      BOOL v44 = v42 == 2;
    }
    else {
      BOOL v44 = 1;
    }
    if (v44)
    {
      uint64_t v91 = v43;
LABEL_22:
      uint64_t v99 = v94;
      uint64_t v100 = v93;
      uint64_t v101 = v92;
      uint64_t v102 = v11;
      type metadata accessor for JobResult();
      uint64_t v45 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v47 = v97;
      uint64_t v48 = swift_getAssociatedConformanceWitness();
      uint64_t v99 = v45;
      uint64_t v100 = v47;
      uint64_t v101 = AssociatedConformanceWitness;
      uint64_t v102 = v48;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      int v50 = v16;
      uint64_t v51 = (uint64_t)v80;
      uint64_t v52 = &v80[*(int *)(TupleTypeMetadata2 + 48)];
      (*v79)(v80, v50, v47);
      swift_storeEnumTagMultiPayload();
      char *v52 = 3;
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v81;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v85, v51);
      (*v78)(v51, v53);
      LOBYTE(v43) = v91;
LABEL_27:
      if ((v43 & 4) != 0)
      {
        uint64_t v34 = v93;
        uint64_t v33 = v94;
        uint64_t v99 = v94;
        uint64_t v100 = v93;
        uint64_t v35 = v92;
        uint64_t v101 = v92;
        uint64_t v102 = v11;
        type metadata accessor for JobResult();
        uint64_t v99 = v34;
        uint64_t v100 = v33;
        uint64_t v101 = v11;
        uint64_t v102 = v35;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v16 = v87;
        uint64_t v36 = sub_1008AA66C((uint64_t)v87, v76[15], v76[16], v76[17]);
        sub_1004D7588(v85, v36);
        swift_release();
      }
      else
      {
        uint64_t v16 = v87;
      }
      uint64_t v31 = v89;
      uint64_t v30 = v90;
      uint64_t v32 = v86;
      goto LABEL_9;
    }
    if (v42 != 1) {
      goto LABEL_27;
    }
    uint64_t v91 = v43;
    uint64_t v54 = *(void *)(v75 + 24);
    uint64_t v55 = v11;
    uint64_t v57 = v92;
    uint64_t v56 = v93;
    uint64_t v58 = v94;
    uint64_t v99 = v93;
    uint64_t v100 = v94;
    uint64_t v101 = v55;
    uint64_t v102 = v92;
    type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v60 = sub_10096C0D0();
    uint64_t v99 = v56;
    uint64_t v100 = v58;
    uint64_t v61 = v57;
    uint64_t v11 = v55;
    uint64_t v101 = v55;
    uint64_t v102 = v61;
    *uint64_t v62 = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v63 = sub_1003FC080(v60);
    uint64_t v16 = v87;
    uint64_t v64 = v77;
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v54 + 264))(v87, v63);
    if (v64)
    {
      swift_bridgeObjectRelease();
      (*v83)(v16, v97);
      swift_bridgeObjectRelease();
      uint64_t v70 = v73;
      swift_errorRetain();
      v70(0, 0, 0, v64);
      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t v66 = v65;
    uint64_t v77 = 0;
    swift_bridgeObjectRelease();
    uint64_t v98 = v66;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C450();
    swift_bridgeObjectRelease();
    uint64_t v67 = v99;
    swift_release();
    uint64_t v31 = v89;
    uint64_t v30 = v90;
    uint64_t v32 = v86;
    if (!v67) {
      goto LABEL_22;
    }
LABEL_9:
    (*v83)(v16, v97);
    uint64_t v29 = v96;
  }
  __break(1u);
LABEL_33:
  swift_bridgeObjectRelease();
  if (v72) {
    return ((uint64_t (*)(void, void, void, void))v73)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v71;
  *(unsigned char *)(v69 + 24) = 0;
  *(void *)(v69 + 32) = 0;
  *(unsigned char *)(v69 + 40) = 1;
  ((void (*)(void))v73)();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockDiskImportItems()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A0AA0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1003A0ABC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 360))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanPendingSetFSSide()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A0C58()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1003A0C74(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 352))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanPendingSetFPSide()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A0E10()
{
  return 0xD000000000000035;
}

uint64_t sub_1003A0E2C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 368))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanRecTableForConflictsInGS()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A0FC8()
{
  return 0xD000000000000017;
}

uint64_t sub_1003A0FE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v40 = a5;
  uint64_t v41 = a4;
  uint64_t v45 = a3;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v7 = *(void *)(*(void *)v5 + 608);
  uint64_t v8 = *(void *)(*(void *)v5 + 616);
  uint64_t v9 = *(void *)(*(void *)v5 + 624);
  uint64_t v51 = *(void *)(*(void *)v5 + 600);
  uint64_t v6 = v51;
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  uint64_t v44 = type metadata accessor for ReconciliationMutation();
  uint64_t v37 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v38 = v8;
  uint64_t v39 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = v9;
  uint64_t v48 = v7;
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = v13;
  uint64_t v53 = AssociatedConformanceWitness;
  uint64_t v54 = v15;
  uint64_t v16 = v42;
  uint64_t v17 = type metadata accessor for ReconciliationID();
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v49 + 64);
  __chkstk_darwin(v17);
  int v50 = (char *)&v35 - v19;
  if (v16)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v20 = swift_dynamicCastClass();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v20 = *(void *)(v20 + 16);
      uint64_t v22 = *(unsigned __int8 *)(v21 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v22 = 1;
LABEL_6:
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v43 + 16) + 376))(v20, v22);
  LODWORD(v42) = v24;
  uint64_t v35 = v18;
  uint64_t v36 = v25;
  if (sub_10096C1A0())
  {
    uint64_t v51 = v39;
    uint64_t v52 = v48;
    uint64_t v53 = v38;
    uint64_t v54 = v47;
    type metadata accessor for JobResult();
    uint64_t v26 = 0;
    uint64_t v43 = v49 + 16;
    int v27 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v28 = (void (**)(char *, uint64_t))(v37 + 8);
    do
    {
      BOOL v29 = sub_10096C130();
      sub_10096C0E0();
      if (v29)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v50, v23+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v26, v17);
        uint64_t v30 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v51 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v43)(v50, &v51, v17);
        swift_unknownObjectRelease();
        uint64_t v30 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v31 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v27)(v11, v50, v17);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)(v46 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v44;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v45, (uint64_t)v11);
      (*v28)(v11, v32);
      ++v26;
    }
    while (v30 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v42) {
    return ((uint64_t (*)(void, void, void, void))v41)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v36;
  *(unsigned char *)(v34 + 24) = 0;
  *(void *)(v34 + 32) = 0;
  *(unsigned char *)(v34 + 40) = 1;
  v41();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockRemoteDeletions()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A1534()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1003A1550(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v152 = a5;
  uint64_t v157 = a4;
  uint64_t v170 = a3;
  v166 = a1;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 624);
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v7 + 616);
  uint64_t v177 = v5;
  uint64_t v13 = *(void *)(v7 + 600);
  uint64_t v172 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v155 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v154 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v156 = (char *)&v140 - v18;
  uint64_t v145 = v19;
  __chkstk_darwin(v17);
  uint64_t v167 = (char *)&v140 - v20;
  uint64_t v151 = sub_10096B0E0();
  uint64_t v21 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v150 = (char *)&v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = v13;
  uint64_t v202 = v13;
  uint64_t v203 = v9;
  uint64_t v175 = v9;
  uint64_t v174 = v12;
  uint64_t v204 = v12;
  uint64_t v205 = v8;
  uint64_t v176 = v8;
  uint64_t v169 = type metadata accessor for ReconciliationMutation();
  uint64_t v23 = *(void *)(v169 - 8);
  uint64_t v24 = __chkstk_darwin(v169);
  uint64_t v168 = (char *)&v140 - v25;
  uint64_t v196 = AssociatedTypeWitness;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v27 = v14;
  uint64_t v148 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v24);
  uint64_t v30 = (char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v165 = (char *)&v140 - v32;
  uint64_t v147 = *(void *)(v11 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v153 = (char *)&v140 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v163 = (char *)&v140 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v193 = (char *)&v140 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v197 = (char *)&v140 - v40;
  uint64_t v146 = *(void *)(v14 - 8);
  __chkstk_darwin(v39);
  v200 = (char *)&v140 - v41;
  uint64_t v201 = v11;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v194 = *(void *)(v42 - 8);
  uint64_t v43 = *(void *)(v194 + 64);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v192 = (char *)&v140 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v44);
  uint64_t v195 = (char *)&v140 - v46;
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v140 - v47;
  uint64_t v191 = v14;
  if (a2)
  {
    uint64_t v49 = v21;
    type metadata accessor for MaintenanceContinuation();
    uint64_t v50 = swift_dynamicCastClass();
    uint64_t v51 = v166;
    if (v50)
    {
      a2 = *(void *)(v50 + 16);
      uint64_t v52 = *(unsigned __int8 *)(v50 + 24);
      if ((*(unsigned char *)(v50 + 40) & 1) == 0 && *(void *)(v50 + 32))
      {
        uint64_t v53 = 0;
LABEL_33:
        uint64_t v101 = *(void *)(((uint64_t (*)(void))(*v51)[22])() + 16);
        swift_retain();
        swift_release();
        uint64_t v102 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(*(void *)v101 + 392))(2, 0, 2, a2, v52);
        uint64_t v104 = v103;
        int v106 = v105;
        swift_release();
        size_t v107 = v157;
        if (!v53)
        {
          LODWORD(v185) = v106;
          uint64_t v180 = v104;
          uint64_t v108 = v23;
          uint64_t v149 = v30;
          uint64_t v109 = TupleTypeMetadata2;
          uint64_t v110 = sub_10096C1A0();
          uint64_t v111 = v156;
          if (!v110)
          {
LABEL_47:
            swift_bridgeObjectRelease();
            return ((uint64_t (*)(void, void, void, void))v157)(0, 0, 0, 0);
          }
          uint64_t v112 = 0;
          uint64_t v197 = &v167[*(int *)(v109 + 48)];
          uint64_t v198 = (void (**)(char *, uint64_t *, uint64_t))(v155 + 16);
          uint64_t v195 = (char *)(v147 + 32);
          uint64_t v194 = v146 + 32;
          uint64_t v193 = (char *)(v147 + 16);
          uint64_t v192 = (char *)(v146 + 16);
          uint64_t v190 = (void (**)(char *, uint64_t))(v146 + 8);
          v189 = (unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48);
          uint64_t v183 = (unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 32);
          uint64_t v182 = (void (**)(char *, char *, uint64_t))(v148 + 16);
          uint64_t v181 = (void (**)(uint64_t, uint64_t))(v108 + 8);
          uint64_t v184 = (void (**)(char *, uint64_t))(v148 + 8);
          char v186 = (void (**)(char *, uint64_t))(v147 + 8);
          uint64_t v187 = (uint64_t (**)(char *, uint64_t))(v155 + 8);
          v188 = (char *)v102;
          uint64_t v113 = v201;
          while (1)
          {
            BOOL v117 = sub_10096C130();
            sub_10096C0E0();
            if (v117)
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v167, v102+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(void *)(v155 + 72) * (void)v112, v109);
              int64_t v118 = v112 + 1;
              if (__OFADD__(v112, 1)) {
                goto LABEL_46;
              }
            }
            else
            {
              uint64_t result = sub_10096CC20();
              if (v145 != 8) {
                goto LABEL_57;
              }
              uint64_t v202 = result;
              (*v198)(v167, &v202, v109);
              swift_unknownObjectRelease();
              int64_t v118 = v112 + 1;
              if (__OFADD__(v112, 1))
              {
LABEL_46:
                __break(1u);
                goto LABEL_47;
              }
            }
            uint64_t v199 = v118;
            v200 = v112;
            uint64_t v119 = &v111[*(int *)(v109 + 48)];
            uint64_t v120 = *(void (**)(char *, char *, uint64_t))v195;
            (*(void (**)(char *, char *, uint64_t))v195)(v111, v167, v113);
            (*(void (**)(char *, char *, uint64_t))v194)(v119, v197, v27);
            uint64_t v121 = v111;
            uint64_t v122 = v154;
            uint64_t v123 = &v154[*(int *)(v109 + 48)];
            uint64_t v124 = *(void (**)(char *, char *, uint64_t))v193;
            (*(void (**)(char *, char *, uint64_t))v193)(v154, v121, v113);
            (*(void (**)(char *, char *, uint64_t))v192)(v123, v119, v27);
            uint64_t v125 = v163;
            v120(v163, v122, v113);
            (*v190)(v123, v27);
            v126 = v153;
            v124(v153, v125, v113);
            uint64_t v127 = TupleTypeMetadata2;
            uint64_t v128 = v196;
            if ((*v189)(v126, 1, v196) == 1)
            {
              int64_t v114 = *v186;
              (*v186)(v125, v113);
              uint64_t v115 = v156;
              (*v187)(v156, v127);
              v114(v126, v113);
              uint64_t v109 = v127;
              uint64_t v111 = v115;
            }
            else
            {
              uint64_t v129 = v149;
              (*v183)(v149, (uint64_t)v126, v128);
              uint64_t v202 = v173;
              uint64_t v203 = v175;
              uint64_t v204 = v174;
              uint64_t v205 = v176;
              type metadata accessor for JobResult();
              uint64_t v130 = v172;
              uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
              uint64_t v132 = swift_getAssociatedConformanceWitness();
              uint64_t v202 = v130;
              uint64_t v203 = v128;
              uint64_t v204 = AssociatedConformanceWitness;
              uint64_t v205 = v132;
              type metadata accessor for ReconciliationID();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v133 = swift_getTupleTypeMetadata2();
              uint64_t v134 = (uint64_t)v168;
              uint64_t v135 = &v168[*(int *)(v133 + 48)];
              (*v182)(v168, v129, v128);
              swift_storeEnumTagMultiPayload();
              *(void *)uint64_t v135 = 0;
              *(_OWORD *)(v135 + 8) = *(_OWORD *)(v177 + 15);
              swift_storeEnumTagMultiPayload();
              uint64_t v136 = v169;
              swift_storeEnumTagMultiPayload();
              sub_100591758(v170, v134);
              (*v181)(v134, v136);
              if ((v185 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for MaintenanceContinuation();
                uint64_t v139 = swift_allocObject();
                *(void *)(v139 + 16) = v180;
                *(unsigned char *)(v139 + 24) = 0;
                *(void *)(v139 + 32) = 1;
                *(unsigned char *)(v139 + 40) = 0;
                ((void (*)(void))v157)();
                swift_release();
                (*v184)(v129, v128);
                (*v186)(v163, v201);
                return (*v187)(v156, TupleTypeMetadata2);
              }
              (*v184)(v129, v128);
              (*v186)(v163, v201);
              uint64_t v111 = v156;
              uint64_t v109 = TupleTypeMetadata2;
              (*v187)(v156, TupleTypeMetadata2);
            }
            uint64_t v102 = (uint64_t)v188;
            uint64_t v116 = sub_10096C1A0();
            uint64_t v112 = v200 + 1;
            uint64_t v27 = v191;
            if (v199 == (char *)v116) {
              goto LABEL_47;
            }
          }
        }
LABEL_52:
        swift_errorRetain();
        v107(0, 0, 0, v53);
        swift_errorRelease();
        return swift_errorRelease();
      }
    }
    else
    {
      a2 = 0;
      uint64_t v52 = 1;
    }
  }
  else
  {
    uint64_t v49 = v21;
    uint64_t v52 = 1;
    uint64_t v51 = v166;
  }
  uint64_t v144 = v43;
  uint64_t v54 = (*(uint64_t (**)(void, uint64_t, uint64_t))(*v51[2] + 384))(0, a2, v52);
  int v56 = v55;
  uint64_t v171 = 0;
  uint64_t v142 = v57;
  uint64_t v149 = v30;
  uint64_t v58 = sub_10096C1A0();
  uint64_t v140 = v23;
  int v141 = v56;
  if (!v58)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v30 = v149;
    uint64_t v51 = v166;
    if ((v141 & 1) == 0)
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v100 = swift_allocObject();
      *(void *)(v100 + 16) = v142;
      *(unsigned char *)(v100 + 24) = 0;
      *(void *)(v100 + 32) = 0;
      *(unsigned char *)(v100 + 40) = 0;
      ((void (*)(void))v157)();
      return swift_release();
    }
    uint64_t v52 = 1;
    uint64_t v23 = v140;
    a2 = v142;
    uint64_t v53 = v171;
    goto LABEL_33;
  }
  v188 = &v48[*(int *)(v42 + 48)];
  uint64_t v190 = (void (**)(char *, uint64_t))(v194 + 16);
  uint64_t v187 = (uint64_t (**)(char *, uint64_t))(v146 + 32);
  char v186 = (void (**)(char *, uint64_t))(v147 + 32);
  uint64_t v185 = (void (**)(char *, char *, uint64_t))(v146 + 16);
  uint64_t v184 = (void (**)(char *, uint64_t))(v147 + 16);
  uint64_t v183 = (unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48);
  unint64_t v162 = (void (**)(char *, char *, uint64_t))(v148 + 32);
  char v161 = (void (**)(char *, char *, uint64_t))(v148 + 16);
  uint64_t v160 = (void (**)(uint64_t, uint64_t))(v23 + 8);
  uint64_t v159 = v172 - 8;
  uint64_t v143 = (uint64_t (**)(char *, uint64_t))(v49 + 8);
  uint64_t v158 = (void (**)(char *, uint64_t))(v148 + 8);
  uint64_t v179 = (void (**)(char *, uint64_t))(v147 + 8);
  uint64_t v180 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v194 + 8);
  uint64_t v181 = (void (**)(uint64_t, uint64_t))(v146 + 8);
  uint64_t v59 = v201;
  uint64_t v60 = v195;
  uint64_t v61 = 0;
  uint64_t v182 = (void (**)(char *, char *, uint64_t))v42;
  v178 = v48;
  v189 = (unsigned int (**)(char *, uint64_t, uint64_t))v54;
  while (1)
  {
    BOOL v64 = sub_10096C130();
    sub_10096C0E0();
    if (v64)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v194 + 16))(v48, v54+ ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80))+ *(void *)(v194 + 72) * (void)v61, v42);
      uint64_t v65 = (void (**)(char *, uint64_t *, uint64_t))(v61 + 1);
      if (__OFADD__(v61, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v144 != 8) {
        goto LABEL_56;
      }
      uint64_t v202 = result;
      ((void (*)(char *, uint64_t *, uint64_t))*v190)(v48, &v202, v42);
      swift_unknownObjectRelease();
      uint64_t v65 = (void (**)(char *, uint64_t *, uint64_t))(v61 + 1);
      if (__OFADD__(v61, 1))
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    uint64_t v198 = v65;
    uint64_t v199 = v61;
    uint64_t v66 = &v60[*(int *)(v42 + 48)];
    uint64_t v67 = *v187;
    ((void (*)(char *, char *, uint64_t))*v187)(v60, v48, v27);
    uint64_t v68 = *v186;
    ((void (*)(char *, char *, uint64_t))*v186)(v66, v188, v59);
    uint64_t v69 = v192;
    uint64_t v70 = &v192[*(int *)(v42 + 48)];
    (*v185)(v192, v60, v27);
    uint64_t v71 = *v184;
    ((void (*)(char *, char *, uint64_t))*v184)(v70, v66, v201);
    int v72 = v69;
    uint64_t v73 = v197;
    uint64_t v74 = v27;
    ((void (*)(char *, char *, uint64_t))v67)(v200, v72, v27);
    uint64_t v75 = v70;
    uint64_t v59 = v201;
    ((void (*)(char *, char *, uint64_t))v68)(v73, v75, v201);
    uint64_t v76 = v193;
    ((void (*)(char *, char *, uint64_t))v71)(v193, v73, v59);
    uint64_t v77 = v196;
    if ((*v183)(v76, 1, v196) != 1) {
      break;
    }
    uint64_t v62 = *v179;
    (*v179)(v73, v59);
    uint64_t v60 = v195;
    uint64_t v63 = v182;
    (*v180)(v195, v182);
    (*v181)((uint64_t)v200, v74);
    v62(v76, v59);
    uint64_t v27 = v74;
    uint64_t v42 = (uint64_t)v63;
    uint64_t v48 = v178;
    uint64_t v54 = (uint64_t)v189;
LABEL_11:
    uint64_t v61 = v199 + 1;
    if (v198 == (void (**)(char *, uint64_t *, uint64_t))sub_10096C1A0()) {
      goto LABEL_30;
    }
  }
  uint64_t v78 = v165;
  (*v162)(v165, v76, v77);
  uint64_t v202 = v173;
  uint64_t v203 = v175;
  uint64_t v204 = v174;
  uint64_t v205 = v176;
  type metadata accessor for JobResult();
  uint64_t v79 = v172;
  uint64_t v80 = swift_getAssociatedConformanceWitness();
  uint64_t v81 = swift_getAssociatedConformanceWitness();
  uint64_t v202 = v79;
  uint64_t v203 = v77;
  uint64_t v204 = v80;
  uint64_t v205 = v81;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v82 = swift_getTupleTypeMetadata2();
  uint64_t v83 = (uint64_t)v168;
  uint64_t v84 = &v168[*(int *)(v82 + 48)];
  (*v161)(v168, v78, v77);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v84 = 0;
  *(_OWORD *)(v84 + 8) = *(_OWORD *)(v177 + 15);
  swift_storeEnumTagMultiPayload();
  uint64_t v85 = v169;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v170, v83);
  uint64_t v86 = v200;
  (*v160)(v83, v85);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v86, 1, v79) != 1)
  {
    uint64_t v59 = v201;
    uint64_t v27 = v191;
    uint64_t v99 = v78;
    uint64_t v90 = v197;
    uint64_t v60 = v195;
    uint64_t v48 = v178;
    uint64_t v54 = (uint64_t)v189;
LABEL_25:
    (*v158)(v99, v77);
    (*v179)(v90, v59);
    uint64_t v42 = (uint64_t)v182;
    (*v180)(v60, v182);
    (*v181)((uint64_t)v86, v27);
    goto LABEL_11;
  }
  unint64_t v87 = v166;
  uint64_t v88 = v171;
  char v89 = (*(uint64_t (**)(char *))(*v166[5] + 424))(v78);
  uint64_t v27 = v191;
  uint64_t v60 = v195;
  uint64_t v54 = (uint64_t)v189;
  uint64_t v171 = v88;
  if (v88)
  {
    uint64_t v138 = v200;
    uint64_t v137 = v201;
    uint64_t v90 = v197;
LABEL_51:
    (*v158)(v78, v77);
    (*v179)(v90, v137);
    (*v180)(v60, v182);
    swift_bridgeObjectRelease();
    (*v181)((uint64_t)v138, v27);
    size_t v107 = v157;
    uint64_t v53 = v171;
    goto LABEL_52;
  }
  uint64_t v90 = v197;
  if ((v89 & 1) == 0)
  {
    uint64_t v86 = v200;
    uint64_t v59 = v201;
    uint64_t v99 = v78;
    uint64_t v48 = v178;
    goto LABEL_25;
  }
  ((void (*)(void))(*v87)[22])();
  uint64_t v202 = v175;
  uint64_t v203 = v173;
  uint64_t v204 = v176;
  uint64_t v205 = v174;
  type metadata accessor for Materialization.MaterializeParentHierarchy();
  uint64_t v91 = v78;
  uint64_t v92 = sub_1003A9380(v78, v177[15], v177[16], 0);
  uint64_t v93 = v150;
  sub_10096B0D0();
  sub_10096B080();
  double v95 = v94;
  uint64_t result = (*v143)(v93, v151);
  double v97 = v95 * 1000000000.0;
  uint64_t v48 = v178;
  if ((~COERCE__INT64(v95 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v97 <= -9.22337204e18) {
      goto LABEL_54;
    }
    if (v97 >= 9.22337204e18) {
      goto LABEL_55;
    }
    uint64_t v98 = v171;
    sub_10059C450(v92);
    uint64_t v171 = v98;
    if (v98)
    {
      swift_release();
      swift_release();
      uint64_t v138 = v200;
      uint64_t v137 = v201;
      uint64_t v27 = v191;
      uint64_t v78 = v91;
      uint64_t v60 = v195;
      goto LABEL_51;
    }
    swift_release();
    swift_release();
    uint64_t v86 = v200;
    uint64_t v59 = v201;
    uint64_t v27 = v191;
    uint64_t v99 = v91;
    uint64_t v60 = v195;
    goto LABEL_25;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.UnblockPathMatchingCycles()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A2D98()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1003A2DB4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v41 = a5;
  uint64_t v42 = a4;
  uint64_t v45 = a3;
  uint64_t v43 = a1;
  uint64_t v7 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = *(void *)(*(void *)v5 + 608);
  uint64_t v9 = *(void *)(*(void *)v5 + 616);
  uint64_t v10 = *(void *)(*(void *)v5 + 624);
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  uint64_t v53 = v9;
  uint64_t v54 = v10;
  uint64_t v44 = type metadata accessor for ReconciliationMutation();
  uint64_t v40 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v47 = v9;
  uint64_t v48 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = v14;
  uint64_t v53 = AssociatedConformanceWitness;
  uint64_t v54 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v49 + 64);
  __chkstk_darwin(v19);
  uint64_t v50 = (char *)&v37 - v21;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v43 + 16) + 400))(v22, v24);
  int v39 = v26;
  uint64_t v37 = v20;
  uint64_t v38 = v27;
  if (sub_10096C1A0())
  {
    uint64_t v51 = v48;
    uint64_t v52 = v15;
    uint64_t v53 = v47;
    uint64_t v54 = v16;
    type metadata accessor for JobResult();
    uint64_t v28 = 0;
    uint64_t v43 = v49 + 16;
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v30 = (void (**)(char *, uint64_t))(v40 + 8);
    do
    {
      BOOL v31 = sub_10096C130();
      sub_10096C0E0();
      if (v31)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v50, v25+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v28, v19);
        uint64_t v32 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v37 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v51 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v43)(v50, &v51, v19);
        swift_unknownObjectRelease();
        uint64_t v32 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v33 = &v12[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v29)(v12, v50, v19);
      *(void *)uint64_t v33 = 0;
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v46 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v44;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v45, (uint64_t)v12);
      (*v30)(v12, v34);
      ++v28;
    }
    while (v32 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v39) {
    return ((uint64_t (*)(void, void, void, void))v42)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v38;
  *(unsigned char *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = 0;
  *(unsigned char *)(v36 + 40) = 1;
  v42();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockPathMatchingDuringImport()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A3304()
{
  return 0xD000000000000019;
}

uint64_t sub_1003A3320(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v123 = a5;
  uint64_t v124 = a4;
  uint64_t v156 = a3;
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v168 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = v168;
  uint64_t v169 = v9;
  uint64_t v170 = v10;
  uint64_t v171 = v11;
  uint64_t v155 = type metadata accessor for ReconciliationMutation();
  uint64_t v117 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v154 = (char *)&v110 - v12;
  uint64_t v169 = v9;
  uint64_t v170 = v10;
  uint64_t v171 = v11;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v116 = sub_10096C890();
  uint64_t v134 = *(char **)(v116 - 8);
  uint64_t v14 = __chkstk_darwin(v116);
  uint64_t v139 = (uint64_t)&v110 - v15;
  uint64_t v138 = v13;
  uint64_t v133 = *(void *)(v13 - 8);
  __chkstk_darwin(v14);
  uint64_t v147 = (char *)&v110 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v136 = sub_10096C890();
  uint64_t v132 = *(void (**)(void))(v136 - 8);
  uint64_t v18 = __chkstk_darwin(v136);
  uint64_t v135 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v140 = (char *)&v110 - v21;
  uint64_t v120 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  v164 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v150 = (char *)&v110 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v159 = (char *)&v110 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v158 = (char *)&v110 - v29;
  __chkstk_darwin(v28);
  uint64_t v149 = (char *)&v110 - v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v161 = v10;
  uint64_t v162 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v118 = v11;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v165 = AssociatedTypeWitness;
  uint64_t v168 = AssociatedTypeWitness;
  uint64_t v169 = v31;
  uint64_t v146 = AssociatedConformanceWitness;
  uint64_t v170 = AssociatedConformanceWitness;
  uint64_t v171 = v33;
  uint64_t v34 = type metadata accessor for ReconciliationID();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  int v141 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v148 = (char *)&v110 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v151 = (void (**)(char *, uint64_t *, uint64_t))((char *)&v110 - v41);
  uint64_t v115 = v42;
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v110 - v43;
  uint64_t v119 = v9;
  if (a2 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v45 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v46 = a1;
    uint64_t v163 = *(void *)(v45 + 16);
    uint64_t v47 = *(unsigned __int8 *)(v45 + 24);
  }
  else
  {
    uint64_t v46 = a1;
    uint64_t v163 = 0;
    uint64_t v47 = 1;
  }
  sub_10096C110();
  uint64_t v48 = *(void *)(v146 + 32);
  uint64_t v49 = sub_10086C2E0();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  uint64_t v166 = v49;
  uint64_t v167 = v51;
  uint64_t v52 = *(void *)(v46 + 16);
  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v52 + 408))(v163, v47);
  uint64_t v153 = 0;
  uint64_t v56 = v53;
  uint64_t v130 = v52;
  int v113 = v57;
  uint64_t v112 = v58;
  uint64_t v163 = v48;
  uint64_t v114 = v46;
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_10096C1A0();
  uint64_t v60 = v159;
  uint64_t v152 = v35;
  uint64_t v61 = (char *)v151;
  if (v59)
  {
    uint64_t v62 = 0;
    uint64_t v160 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
    uint64_t v63 = (uint64_t (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v145 = (void (**)(char *, char *, uint64_t))(v120 + 32);
    uint64_t v144 = (void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v142 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v143 = v34;
    while (1)
    {
      BOOL v64 = sub_10096C130();
      sub_10096C0E0();
      if (v64)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v61, v56+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v62, v34);
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v115 != 8) {
          goto LABEL_58;
        }
        uint64_t v168 = result;
        (*v160)(v61, &v168, v34);
        swift_unknownObjectRelease();
      }
      uint64_t result = (*v63)(v44, v61, v34);
      uint64_t v66 = v62 + 1;
      if (__OFADD__(v62, 1)) {
        break;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v142)(v44, v34);
      }
      else
      {
        uint64_t v67 = (uint64_t)v149;
        uint64_t v68 = v165;
        (*v145)(v149, v44, v165);
        uint64_t v69 = type metadata accessor for OrderedSet();
        uint64_t v70 = v158;
        sub_10086B478(v158, v67, v69);
        uint64_t v71 = *v144;
        int v72 = v70;
        uint64_t v35 = v152;
        (*v144)(v72, v68);
        uint64_t v73 = v67;
        uint64_t v61 = (char *)v151;
        uint64_t v74 = v68;
        uint64_t v60 = v159;
        v71((char *)v73, v74);
        uint64_t v34 = v143;
      }
      ++v62;
      if (v66 == sub_10096C1A0()) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_10096C1A0();
    uint64_t v76 = v165;
    uint64_t v77 = v146;
    uint64_t v78 = v141;
    if (v75)
    {
      uint64_t v79 = 0;
      uint64_t v151 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
      uint64_t v149 = (char *)(v35 + 32);
      uint64_t v160 = (void (**)(char *, uint64_t *, uint64_t))(v120 + 32);
      uint64_t v145 = (void (**)(char *, char *, uint64_t))(v146 + 64);
      uint64_t v137 = v146 + 72;
      uint64_t v129 = (unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
      uint64_t v128 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
      v126 = (void (**)(char *, uint64_t, uint64_t))(v133 + 32);
      uint64_t v122 = (void (**)(char *, uint64_t))((char *)v132 + 8);
      uint64_t v125 = (void (**)(char *, uint64_t))(v133 + 8);
      uint64_t v111 = (void (**)(uint64_t, uint64_t))(v134 + 8);
      uint64_t v127 = (void (**)(char *, uint64_t))(v35 + 8);
      uint64_t v144 = (void (**)(char *, uint64_t))(v120 + 8);
      uint64_t v121 = (v120 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      do
      {
        BOOL v80 = sub_10096C130();
        sub_10096C0E0();
        if (v80)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v78, v56+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v79, v34);
        }
        else
        {
          uint64_t result = sub_10096CC20();
          if (v115 != 8) {
            goto LABEL_59;
          }
          uint64_t v168 = result;
          (*v151)(v78, &v168, v34);
          swift_unknownObjectRelease();
        }
        uint64_t v81 = v148;
        uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))v149)(v148, v78, v34);
        if (__OFADD__(v79++, 1)) {
          goto LABEL_57;
        }
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*v127)(v81, v34);
        }
        else
        {
          uint64_t v83 = *v160;
          (*v160)(v60, (uint64_t *)v81, v76);
          uint64_t v142 = *(void (***)(char *, uint64_t))(v77 + 64);
          if (((uint64_t (*)(uint64_t, uint64_t))v142)(v76, v77))
          {
            uint64_t v84 = *v144;
LABEL_26:
            uint64_t v78 = v141;
            v84(v60, v76);
          }
          else
          {
            uint64_t v134 = *(char **)(v77 + 72);
            if ((((uint64_t (*)(uint64_t, uint64_t))v134)(v76, v77) & 1) == 0)
            {
              uint64_t v85 = **(void (****)(void))(v114 + 32);
              uint64_t v133 = *(void *)(v114 + 32);
              v85 += 35;
              uint64_t v132 = *v85;
              uint64_t v131 = v85;
              while (1)
              {
                uint64_t v86 = v140;
                uint64_t v87 = v153;
                v132(v60);
                if (v87) {
                  break;
                }
                if ((*v129)(v86, 1, v76) == 1)
                {
                  uint64_t v153 = 0;
                  (*v144)(v60, v76);
                  (*v122)(v86, v136);
                  goto LABEL_42;
                }
                uint64_t v88 = (uint64_t)v150;
                v83(v150, (uint64_t *)v86, v76);
                uint64_t v89 = v139;
                sub_1000DEDD8(v88, v139);
                uint64_t v153 = 0;
                uint64_t v90 = v138;
                uint64_t v91 = v89;
                if ((*v128)(v89, 1, v138) == 1)
                {
                  uint64_t v101 = *v144;
                  (*v144)(v150, v76);
                  uint64_t v60 = v159;
                  v101(v159, v76);
                  (*v111)(v91, v116);
                  goto LABEL_42;
                }
                uint64_t v92 = v147;
                (*v126)(v147, v91, v90);
                uint64_t v93 = &v92[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
                if (v93[16] || (*v93 & 8) == 0)
                {
                  (*v125)(v147, v90);
                  uint64_t v100 = *v144;
                  (*v144)(v150, v76);
                  uint64_t v60 = v159;
                  v100(v159, v76);
LABEL_42:
                  uint64_t v77 = v146;
                  goto LABEL_43;
                }
                uint64_t v94 = type metadata accessor for OrderedSet();
                uint64_t v95 = v135;
                uint64_t v96 = (uint64_t)v150;
                sub_10086B66C((uint64_t)v150, v94, v135);
                (*v122)((char *)v95, v136);
                double v97 = v158;
                uint64_t v98 = v94;
                uint64_t v76 = v165;
                sub_10086B478(v158, v96, v98);
                uint64_t v84 = *v144;
                (*v144)(v97, v76);
                (*v125)(v147, v90);
                uint64_t v60 = v159;
                v84(v159, v76);
                v83(v60, (uint64_t *)v96, v76);
                uint64_t v77 = v146;
                if (((uint64_t (*)(uint64_t, uint64_t))v142)(v76, v146))
                {
                  uint64_t v35 = v152;
                  goto LABEL_26;
                }
                char v99 = ((uint64_t (*)(uint64_t, uint64_t))v134)(v76, v77);
                uint64_t v35 = v152;
                if (v99) {
                  goto LABEL_29;
                }
              }
              uint64_t v153 = v87;
              (*v144)(v60, v76);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v54 = v124;
              swift_bridgeObjectRelease();
              uint64_t v55 = v153;
              swift_errorRetain();
              v54(0, 0, 0, v55);
              swift_errorRelease();
              return swift_errorRelease();
            }
            uint64_t v84 = *v144;
LABEL_29:
            v84(v60, v76);
LABEL_43:
            uint64_t v78 = v141;
          }
        }
      }
      while (v79 != sub_10096C1A0());
    }
    swift_bridgeObjectRelease();
    if (!sub_10086BAA0())
    {
LABEL_51:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v113) {
        return ((uint64_t (*)(void, void, void, void))v124)(0, 0, 0, 0);
      }
      type metadata accessor for MaintenanceContinuation();
      uint64_t v109 = swift_allocObject();
      *(void *)(v109 + 16) = v112;
      *(unsigned char *)(v109 + 24) = 0;
      *(void *)(v109 + 32) = 0;
      *(unsigned char *)(v109 + 40) = 1;
      ((void (*)(void))v124)();
      return swift_release();
    }
    uint64_t v168 = v162;
    uint64_t v169 = v119;
    uint64_t v170 = v161;
    uint64_t v171 = v118;
    type metadata accessor for JobResult();
    uint64_t v102 = 0;
    uint64_t v160 = (void (**)(char *, uint64_t *, uint64_t))(v120 + 32);
    uint64_t v103 = (void (**)(uint64_t, uint64_t))(v117 + 8);
    while (1)
    {
      uint64_t result = sub_10086BAAC();
      uint64_t v104 = v102 + 1;
      if (__OFADD__(v102, 1)) {
        break;
      }
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v106 = (uint64_t)v154;
      size_t v107 = &v154[*(int *)(TupleTypeMetadata2 + 48)];
      (*v160)(v154, (uint64_t *)v164, v165);
      swift_storeEnumTagMultiPayload();
      *(_OWORD *)size_t v107 = *(_OWORD *)(v157 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v108 = v155;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v156, v106);
      (*v103)(v106, v108);
      ++v102;
      if (v104 == sub_10086BAA0()) {
        goto LABEL_51;
      }
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.UnblockChildrenDeletion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A4634()
{
  return 0xD000000000000015;
}

uint64_t sub_1003A4650(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v56 = a1;
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  unint64_t v10 = *(void *)(*(void *)v5 + 600);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v12 = *(void *)(*(void *)v5 + 616);
  uint64_t v58 = v9;
  unint64_t v59 = v10;
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = *(void (***)(char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v42 - v15;
  uint64_t v58 = v10;
  unint64_t v59 = v9;
  uint64_t v60 = v12;
  uint64_t v61 = v11;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v55 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v42 - v20;
  uint64_t v47 = a5;
  uint64_t v53 = v13;
  uint64_t v51 = v14;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v56;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v56 + 16) + 416))(v22, v24);
  uint64_t v27 = v16;
  int v44 = v28;
  uint64_t v43 = v29;
  uint64_t v45 = a4;
  swift_bridgeObjectRetain();
  if (sub_10096C1A0())
  {
    uint64_t v30 = 0;
    uint64_t v31 = (uint64_t)v54;
    uint64_t v49 = (void (**)(uint64_t, uint64_t))(v51 + 1);
    uint64_t v50 = (void (**)(char *, char *, uint64_t))(v55 + 32);
    uint64_t v51 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v52 = (void (**)(char *, uint64_t *, uint64_t))(v55 + 16);
    uint64_t v48 = v21;
    do
    {
      BOOL v32 = sub_10096C130();
      sub_10096C0E0();
      if (v32)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v21, v26+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v30, v27);
        uint64_t v33 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v46 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v58 = result;
        (*v52)(v21, &v58, v27);
        swift_unknownObjectRelease();
        uint64_t v33 = v30 + 1;
        if (__OFADD__(v30, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      (*v50)(v19, v21, v27);
      sub_10082BF48(v25, v27);
      uint64_t v34 = sub_100827044(v27, v31);
      uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 176))(v34);
      uint64_t v36 = v53;
      sub_10082BF48(v35, v53);
      swift_release();
      (*v49)(v31, v36);
      (*v51)(v19, v27);
      uint64_t v37 = sub_10096C1A0();
      ++v30;
      uint64_t v25 = v56;
      uint64_t v21 = v48;
    }
    while (v33 != v37);
  }
  swift_bridgeObjectRelease();
  if (v44)
  {
    uint64_t v58 = 0x73656972746E653CLL;
    unint64_t v59 = 0xE90000000000003ALL;
    uint64_t v41 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v57 = v41;
    v64._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v64);
    swift_bridgeObjectRelease();
    v65._countAndFlagsBits = 62;
    v65._object = (void *)0xE100000000000000;
    sub_10096BDC0(v65);
    v45(0, v58, v59, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v43;
    *(unsigned char *)(v39 + 24) = 0;
    *(void *)(v39 + 32) = 0;
    *(unsigned char *)(v39 + 40) = 1;
    uint64_t v58 = 0x73656972746E653CLL;
    unint64_t v59 = 0xE90000000000003ALL;
    uint64_t v40 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v57 = v40;
    v62._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v62);
    swift_bridgeObjectRelease();
    v63._countAndFlagsBits = 62;
    v63._object = (void *)0xE100000000000000;
    sub_10096BDC0(v63);
    v45(v39, v58, v59, 0);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.ReimportMissingJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A4CAC()
{
  return 0xD000000000000021;
}

uint64_t sub_1003A4CC8(void **a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a5)
{
  unint64_t v11 = *(void *)(*(void *)v5 + 600);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v13 = *(void *)(*(void *)v5 + 616);
  uint64_t v64 = *(void *)(*(void *)v5 + 608);
  unint64_t v10 = v64;
  unint64_t v65 = v11;
  uint64_t v66 = v12;
  uint64_t v67 = v13;
  uint64_t v56 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = (uint64_t)&v44 - v15;
  unint64_t v57 = v11;
  uint64_t v64 = v11;
  unint64_t v65 = v10;
  uint64_t v66 = v13;
  uint64_t v67 = v12;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v18;
  __chkstk_darwin(v17);
  uint64_t v58 = (char *)&v44 - v20;
  uint64_t v48 = a5;
  uint64_t v49 = a4;
  uint64_t v62 = v14;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v21 = swift_dynamicCastClass();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v21 = *(void *)(v21 + 16);
      uint64_t v23 = *(unsigned __int8 *)(v22 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v21 = 0;
  }
  uint64_t v23 = 1;
LABEL_6:
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*a1[2] + 424))(v21, v23);
  uint64_t v25 = v16;
  int v46 = v26;
  uint64_t v45 = v27;
  uint64_t v54 = a1;
  swift_bridgeObjectRetain();
  if (sub_10096C1A0())
  {
    uint64_t v28 = 0;
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v62 + 8);
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v59 + 32);
    uint64_t v52 = (void (**)(char *, uint64_t))(v59 + 8);
    uint64_t v53 = (void (**)(char *, uint64_t *, uint64_t))(v59 + 16);
    do
    {
      BOOL v29 = sub_10096C130();
      sub_10096C0E0();
      uint64_t v62 = v28;
      if (v29)
      {
        unint64_t v30 = v24
            + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
            + *(void *)(v59 + 72) * v28;
        uint64_t v31 = v28;
        BOOL v32 = v58;
        (*(void (**)(char *, unint64_t, uint64_t))(v59 + 16))(v58, v30, v25);
        uint64_t v33 = v54;
        uint64_t v34 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        BOOL v32 = v58;
        if (v47 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v64 = result;
        (*v53)(v58, &v64, v25);
        swift_unknownObjectRelease();
        uint64_t v33 = v54;
        uint64_t v34 = v62 + 1;
        if (__OFADD__(v62, 1))
        {
LABEL_16:
          __break(1u);
          break;
        }
      }
      uint64_t v61 = v34;
      (*v51)(v19, v32, v25);
      sub_1003A94CC((uint64_t)v19, v33);
      uint64_t v60 = 0;
      uint64_t v35 = v55;
      uint64_t v36 = sub_100827044(v25, v55);
      uint64_t v37 = (void **)((uint64_t (*)(uint64_t))(*v33)[22])(v36);
      uint64_t v38 = v60;
      sub_1003A94CC(v35, v37);
      if (v38)
      {
        swift_bridgeObjectRelease();
        swift_release();
        (*v50)(v35, v56);
        (*v52)(v19, v25);
        swift_bridgeObjectRelease();
        swift_errorRetain();
        v49(0, 0, 0, v38);
        swift_errorRelease();
        return swift_errorRelease();
      }
      swift_release();
      (*v50)(v35, v56);
      (*v52)(v19, v25);
      uint64_t v39 = sub_10096C1A0();
      uint64_t v28 = v62 + 1;
    }
    while (v61 != v39);
  }
  swift_bridgeObjectRelease();
  if (v46)
  {
    uint64_t v64 = 0x73656972746E653CLL;
    unint64_t v65 = 0xE90000000000003ALL;
    uint64_t v43 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v63 = v43;
    v70._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v70);
    swift_bridgeObjectRelease();
    v71._countAndFlagsBits = 62;
    v71._object = (void *)0xE100000000000000;
    sub_10096BDC0(v71);
    v49(0, v64, v65, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v45;
    *(unsigned char *)(v41 + 24) = 0;
    *(void *)(v41 + 32) = 0;
    *(unsigned char *)(v41 + 40) = 1;
    uint64_t v64 = 0x73656972746E653CLL;
    unint64_t v65 = 0xE90000000000003ALL;
    uint64_t v42 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v63 = v42;
    v68._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
    v69._countAndFlagsBits = 62;
    v69._object = (void *)0xE100000000000000;
    sub_10096BDC0(v69);
    v49(v41, v64, v65, 0);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledReconciliations()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A5384()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1003A53A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v57 = a1;
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v56 = *(void *)(*(void *)v5 + 600);
  uint64_t v59 = v56;
  unint64_t v60 = v9;
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  uint64_t v55 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v43 - v13;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v14 = *(void *)(v14 + 16);
      uint64_t v16 = *(unsigned __int8 *)(v15 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = 1;
LABEL_6:
  uint64_t v17 = *(void *)(v57 + 24);
  uint64_t v18 = 0;
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 432))(v14, v16);
  int v44 = v20;
  uint64_t v43 = v21;
  uint64_t v45 = a5;
  int v46 = a4;
  swift_bridgeObjectRetain();
  uint64_t v59 = v56;
  unint64_t v60 = v9;
  uint64_t v50 = v10;
  unint64_t v51 = v9;
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  uint64_t v49 = v11;
  type metadata accessor for ItemJob();
  if (sub_10096C1A0())
  {
    uint64_t v47 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v48 = v17;
    uint64_t v22 = 4;
    do
    {
      uint64_t v23 = v22 - 4;
      BOOL v24 = sub_10096C130();
      sub_10096C0E0();
      if (v24)
      {
        uint64_t v25 = *(void *)(v19 + 8 * v22);
        swift_retain();
        BOOL v26 = __OFADD__(v23, 1);
        uint64_t v27 = v22 - 3;
        if (v26) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v25 = sub_10096CC20();
        BOOL v26 = __OFADD__(v23, 1);
        uint64_t v27 = v22 - 3;
        if (v26)
        {
LABEL_20:
          __break(1u);
          break;
        }
      }
      if (*(unsigned char *)(v25 + 112) || (*(unsigned char *)(v25 + 97) & 1) == 0) {
        goto LABEL_14;
      }
      char v28 = sub_1001EB698((void *)v25, 0);
      if (v18)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t v42 = v46;
        swift_errorRetain();
        v42(0, 0, 0, v18);
        swift_errorRelease();
        return swift_errorRelease();
      }
      if (v28)
      {
LABEL_14:
        swift_release();
      }
      else
      {
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v53 = 0;
        uint64_t v52 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        unint64_t v31 = v52;
        uint64_t v32 = swift_getAssociatedConformanceWitness();
        uint64_t v59 = AssociatedTypeWitness;
        unint64_t v60 = v31;
        uint64_t v61 = AssociatedConformanceWitness;
        uint64_t v62 = v32;
        type metadata accessor for ReconciliationID();
        uint64_t v33 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v34 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v54, v25 + *(void *)(*(void *)v25 + 576), AssociatedTypeWitness);
        uint64_t v35 = v57;
        swift_storeEnumTagMultiPayload();
        v34[v33] = sub_1007B24CC();
        uint64_t v36 = v55;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v35 + 312))(v34);
        swift_release();
        uint64_t v37 = v36;
        uint64_t v18 = v53;
        (*v47)(v34, v37);
      }
      ++v22;
    }
    while (v27 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  if (v44)
  {
    uint64_t v59 = 0x73656972746E653CLL;
    unint64_t v60 = 0xE90000000000003ALL;
    uint64_t v40 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v58 = v40;
    v65._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 62;
    v66._object = (void *)0xE100000000000000;
    sub_10096BDC0(v66);
    v46(0, v59, v60, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v43;
    *(unsigned char *)(v38 + 24) = 0;
    *(void *)(v38 + 32) = 0;
    *(unsigned char *)(v38 + 40) = 1;
    uint64_t v59 = 0x3A73626F6A3CLL;
    unint64_t v60 = 0xE600000000000000;
    uint64_t v39 = sub_10096C160();
    swift_bridgeObjectRelease();
    uint64_t v58 = v39;
    v63._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v63);
    swift_bridgeObjectRelease();
    v64._countAndFlagsBits = 62;
    v64._object = (void *)0xE100000000000000;
    sub_10096BDC0(v64);
    v46(v38, v59, v60, 0);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledItemJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A59D8()
{
  return 0xD000000000000016;
}

uint64_t sub_1003A59F4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v94 = a1;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 624);
  unint64_t v9 = *(void *)(*v5 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 616);
  uint64_t v12 = *(void *)(v7 + 600);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v97 = AssociatedTypeWitness;
  unint64_t v98 = v13;
  uint64_t v99 = AssociatedConformanceWitness;
  uint64_t v100 = v15;
  uint64_t v88 = (int8x16_t *)type metadata accessor for ReconciliationID();
  uint64_t v16 = sub_10096C890();
  uint64_t v82 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v16 - 8);
  uint64_t v83 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v65 - v18;
  uint64_t v19 = v88[-1].i64[1];
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v65 - v20;
  uint64_t v97 = v12;
  unint64_t v98 = v9;
  unint64_t v95 = v9;
  uint64_t v99 = v11;
  uint64_t v100 = v8;
  uint64_t v90 = v8;
  uint64_t v21 = type metadata accessor for PersistenceTrigger();
  BOOL v80 = *(void (***)(char *, char *, uint64_t))(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v84 = (uint64_t)&v65 - v22;
  uint64_t v97 = v13;
  unint64_t v98 = AssociatedTypeWitness;
  uint64_t v99 = v15;
  uint64_t v100 = AssociatedConformanceWitness;
  uint64_t v23 = type metadata accessor for ReconciliationID();
  uint64_t v24 = sub_10096C890();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v65 - v26;
  __chkstk_darwin(v25);
  uint64_t v89 = (char *)&v65 - v28;
  uint64_t v81 = (void (**)(void, void))v19;
  uint64_t v79 = v29;
  uint64_t v78 = v30;
  if (!a2)
  {
    uint64_t v31 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v31 = swift_dynamicCastClass();
  if (!v31)
  {
LABEL_5:
    uint64_t v33 = 1;
    goto LABEL_6;
  }
  uint64_t v32 = v31;
  uint64_t v31 = *(void *)(v31 + 16);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 24);
LABEL_6:
  uint64_t v34 = v94[3];
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v34 + 424))(v31, v33);
  uint64_t v93 = v23;
  int v73 = v36;
  uint64_t v74 = v34;
  uint64_t v71 = v37;
  uint64_t v87 = 0;
  uint64_t v77 = v27;
  uint64_t v75 = v24;
  uint64_t v76 = v21;
  swift_bridgeObjectRetain();
  uint64_t v97 = v12;
  unint64_t v98 = v95;
  uint64_t v99 = v11;
  uint64_t v100 = v90;
  type metadata accessor for FSOrFPJob();
  if (!sub_10096C1A0())
  {
LABEL_32:
    swift_bridgeObjectRelease();
    if (v73)
    {
      uint64_t v97 = 0x73656972746E653CLL;
      unint64_t v98 = 0xE90000000000003ALL;
      uint64_t v63 = sub_10096C160();
      swift_bridgeObjectRelease();
      uint64_t v96 = v63;
      v103._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v103);
      swift_bridgeObjectRelease();
      v104._countAndFlagsBits = 62;
      v104._object = (void *)0xE100000000000000;
      sub_10096BDC0(v104);
      v92(0, v97, v98, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v71;
      *(unsigned char *)(v61 + 24) = 0;
      *(void *)(v61 + 32) = 0;
      *(unsigned char *)(v61 + 40) = 1;
      uint64_t v97 = 0x3A73626F6A3CLL;
      unint64_t v98 = 0xE600000000000000;
      uint64_t v62 = sub_10096C160();
      swift_bridgeObjectRelease();
      uint64_t v96 = v62;
      v101._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v101);
      swift_bridgeObjectRelease();
      v102._countAndFlagsBits = 62;
      v102._object = (void *)0xE100000000000000;
      sub_10096BDC0(v102);
      v92(v61, v97, v98, 0);
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  int v72 = (unsigned int (**)(char *, uint64_t, int8x16_t *))(v81 + 6);
  Swift::String v69 = (void (**)(char *, char *, int8x16_t *))(v81 + 4);
  Swift::String v70 = (void (**)(uint64_t, uint64_t))(v80 + 1);
  uint64_t v67 = (void (**)(char *, int8x16_t *))(v81 + 1);
  Swift::String v68 = (void (**)(char *, uint64_t))(v82 + 1);
  uint64_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  BOOL v80 = (void (**)(char *, char *, uint64_t))(v78 + 32);
  Swift::String v66 = (void (**)(uint64_t, char *, uint64_t))(v78 + 16);
  uint64_t v81 = (void (**)(void, void))(v78 + 8);
  ++v79;
  uint64_t v38 = 4;
  while (1)
  {
    uint64_t v39 = v38 - 4;
    BOOL v40 = sub_10096C130();
    sub_10096C0E0();
    if (v40)
    {
      uint64_t v41 = *(void *)(v35 + 8 * v38);
      swift_retain();
      uint64_t v42 = v38 - 3;
      if (__OFADD__(v39, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v41 = sub_10096CC20();
      swift_retain();
      swift_unknownObjectRelease();
      uint64_t v42 = v38 - 3;
      if (__OFADD__(v39, 1))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    __int16 v43 = sub_100615748(v41);
    if (v44 || (v43 & 0x100) == 0)
    {
      swift_release();
      goto LABEL_9;
    }
    if (v41 < 0) {
      break;
    }
    uint64_t v45 = v77;
    (*(void (**)(void))(*(void *)v41 + 440))();
    uint64_t v46 = v93;
    if ((*v82)(v45, 1, v93) == 1)
    {
      swift_release();
      (*v79)(v45, v75);
    }
    else
    {
      (*v80)(v89, v45, v46);
      uint64_t v50 = (void *)swift_retain();
      uint64_t v51 = v87;
      char v52 = sub_1001EB698(v50, 0);
      if (v51)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        (*v81)(v89, v93);
        goto LABEL_39;
      }
      uint64_t v87 = 0;
      if (v52)
      {
        swift_release_n();
      }
      else
      {
        uint64_t v78 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v57 = v84;
        (*v66)(v84, v89, v93);
        *(unsigned char *)(v57 + v78) = sub_1007B24CC();
        uint64_t v58 = v94;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t))(*v58 + 312))(v57);
        swift_release_n();
        (*v70)(v57, v76);
      }
      (*v81)(v89, v93);
    }
LABEL_9:
    ++v38;
    if (v42 == sub_10096C1A0()) {
      goto LABEL_32;
    }
  }
  uint64_t v47 = (void *)(v41 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v48 = v85;
  (*(void (**)(void))(*v47 + 440))();
  uint64_t v49 = v88;
  if ((*v72)(v48, 1, v88) == 1)
  {
    swift_release();
    (*v68)(v48, v83);
    goto LABEL_9;
  }
  (*v69)(v86, v48, v49);
  uint64_t v53 = *(void (**)(uint64_t))(*v94 + 176);
  uint64_t v54 = swift_retain();
  v53(v54);
  swift_retain();
  swift_release();
  uint64_t v51 = v87;
  char v55 = sub_1001EB698(v47, 0);
  if (!v51)
  {
    char v56 = v55;
    uint64_t v87 = 0;
    swift_release();
    if (v56)
    {
      swift_release_n();
      (*v67)(v86, v88);
    }
    else
    {
      uint64_t v78 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v59 = v84;
      unint64_t v60 = v88;
      sub_1005EC558(v88, v84);
      *(unsigned char *)(v59 + v78) = sub_1007B24CC();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*v94 + 312))(v59);
      swift_release_n();
      (*v70)(v59, v76);
      (*v67)(v86, v60);
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  (*v67)(v86, v88);
LABEL_39:
  swift_bridgeObjectRelease();
  swift_errorRetain();
  v92(0, 0, 0, v51);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A6664()
{
  return 0xD000000000000025;
}

uint64_t sub_1003A6680(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 440))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanMaterializedSpeculativeItems()
{
  return swift_getGenericMetadata();
}

void sub_1003A681C()
{
}

uint64_t sub_1003A6878(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v7 = *(void *)(v7 + 16);
      uint64_t v9 = *(unsigned __int8 *)(v8 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = 1;
LABEL_6:
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 632))(v7, v9, a1);
  if (v11) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v12 = v10;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = 0;
  *(unsigned char *)(v13 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.FullScanRowIDJob()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A6A28()
{
  return 0xD000000000000021;
}

uint64_t sub_1003A6A44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = *v5;
  uint64_t v11 = sub_10096B480();
  uint64_t v74 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 616);
  uint64_t v72 = *(void *)(v10 + 600);
  uint64_t v73 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v71 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v75 = (char *)&v66 - v18;
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v66 - v19;
  uint64_t v82 = v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_10096C890();
  uint64_t v22 = *(void *)(v81 - 8);
  uint64_t v23 = __chkstk_darwin(v81);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v66 - v26;
  uint64_t v28 = *(void **)(a1 + 32);
  if (*(_DWORD *)(*(void *)(v28[2] + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8) != 1) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (uint64_t v29 = swift_dynamicCastClass()) != 0)
    && *(unsigned char *)(v29 + 24) != 1)
  {
    uint64_t v30 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = -1;
  }
  uint64_t v31 = 0;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(*v28 + 584))(v30);
  int v67 = v33;
  uint64_t v66 = v34;
  uint64_t v68 = v11;
  uint64_t v69 = a5;
  Swift::String v70 = a4;
  uint64_t v78 = (void (**)(char *, char *, void (*)(void)))(v77 + 32);
  uint64_t v79 = (void (**)(char *, void (*)(void)))(v77 + 8);
  BOOL v80 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  a4 = v82;
  while (1)
  {
    if (v31 == sub_10096C1A0())
    {
      uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v25, 1, 1, TupleTypeMetadata2);
    }
    else
    {
      BOOL v36 = sub_10096C130();
      sub_10096C0E0();
      if (v36)
      {
        uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v25, v32+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v31, TupleTypeMetadata2);
        BOOL v38 = __OFADD__(v31++, 1);
        if (v38) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
        if (*(void *)(v37 + 64) != 8)
        {
          __break(1u);
          return result;
        }
        v85[0] = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v37 + 16))(v25, v85, TupleTypeMetadata2);
        swift_unknownObjectRelease();
        BOOL v38 = __OFADD__(v31++, 1);
        if (v38)
        {
LABEL_19:
          __break(1u);
          return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
        }
      }
      uint64_t v35 = v37;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v25, 0, 1, TupleTypeMetadata2);
    }
    (*v80)(v27, v25, v81);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      if (v67) {
        return ((uint64_t (*)(void, void, void, void))v70)(0, 0, 0, 0);
      }
      type metadata accessor for MaintenanceContinuation();
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v66;
      *(unsigned char *)(v62 + 24) = 0;
      *(void *)(v62 + 32) = 0;
      *(unsigned char *)(v62 + 40) = 1;
      v70();
      return swift_release();
    }
    (*v78)(v83, &v27[*(int *)(TupleTypeMetadata2 + 48)], a4);
    sub_10096BCD0();
    v86._countAndFlagsBits = 1953064750;
    v86._object = (void *)0xE400000000000000;
    BOOL v39 = sub_10096BE80(v86);
    swift_bridgeObjectRelease();
    if (v39) {
      break;
    }
    sub_10096BCD0();
    v87._countAndFlagsBits = 0x7265646C6F662ELL;
    v87._object = (void *)0xE700000000000000;
    BOOL v40 = sub_10096BE80(v87);
    swift_bridgeObjectRelease();
    if (v40) {
      break;
    }
    a4 = v82;
    (*v79)(v83, v82);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v42 = (id)fpfs_current_or_default_log();
  __int16 v43 = v76;
  sub_10096B490();
  char v44 = *(void (**)(char *, char *, void (*)(void)))(v77 + 16);
  uint64_t v45 = v75;
  uint64_t v46 = v82;
  v44(v75, v83, v82);
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_10096B470();
  os_log_type_t v48 = sub_10096C5B0();
  int v49 = v48;
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v50 = swift_slowAlloc();
    LODWORD(v81) = v49;
    uint64_t v51 = v50;
    BOOL v80 = (void (**)(char *, char *, uint64_t))swift_slowAlloc();
    v85[0] = (uint64_t)v80;
    *(_DWORD *)uint64_t v51 = 136315394;
    uint64_t v78 = (void (**)(char *, char *, void (*)(void)))(v51 + 4);
    char v52 = v71;
    v44(v71, v45, v46);
    uint64_t v53 = *v79;
    (*v79)(v45, v46);
    swift_getAssociatedConformanceWitness();
    uint64_t v54 = sub_10096D220();
    unint64_t v56 = v55;
    v53(v52, v82);
    uint64_t v84 = sub_100719D44(v54, v56, v85);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    NSString v57 = sub_10096BC00();
    id v58 = objc_msgSend(v57, "fp_obfuscatedFilename");

    uint64_t v59 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v61 = v60;
    swift_bridgeObjectRelease();

    uint64_t v46 = v82;
    uint64_t v84 = sub_100719D44(v59, v61, v85);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v81, "found package with .folder or .git extension, %s: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v68);
  }
  else
  {
    uint64_t v53 = *v79;
    (*v79)(v45, v46);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v68);
  }
  sub_10010F2A0();
  uint64_t v63 = swift_allocError();
  *(void *)uint64_t v64 = 3;
  *(_OWORD *)(v64 + 8) = 0u;
  *(_OWORD *)(v64 + 24) = 0u;
  *(void *)(v64 + 40) = 0;
  *(unsigned char *)(v64 + 48) = 9;
  swift_willThrow();
  v53(v83, v46);
  uint64_t v65 = v70;
  swift_errorRetain();
  ((void (*)(void, void, void, uint64_t))v65)(0, 0, 0, v63);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t type metadata accessor for Maintenance.ReimportOnGitOrFolderPackage()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003A7478()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1003A74B0()
{
  return 0xD000000000000021;
}

uint64_t sub_1003A74CC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(a3 + 16) + 448))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1003A7528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_100610B30(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_1003A75EC()
{
  sub_10060F6D4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Maintenance.FixupOutOfSyncFSBaseVersion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A7658()
{
  return 0xD000000000000022;
}

uint64_t sub_1003A7674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = a1;
  v9[3] = a4;
  v9[4] = a5;
  uint64_t v10 = *(void (**)(uint64_t (*)(char), void *))(*(void *)v8 + 880);
  swift_retain();
  swift_retain();
  swift_retain();
  v10(sub_1003A9428, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_1003A7764(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a4;
  uint64_t v9 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003A946C, v7, (uint64_t)sub_1003A94AC, v8, v9, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1003A7880(char a1, void (*a2)(void))
{
  if ((a1 & 1) == 0) {
    return ((uint64_t (*)(void, void, void, void))a2)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 100;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 1;
  a2();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RemoveConflictStuckInTheWharf()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003A7934()
{
  return 0xD000000000000028;
}

uint64_t sub_1003A7950(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v50 = a3;
  uint64_t v10 = *v5;
  uint64_t v11 = *v5;
  uint64_t v52 = sub_10096B0E0();
  uint64_t v46 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 616);
  uint64_t v14 = *(void *)(v10 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v17;
  __chkstk_darwin(v16);
  uint64_t v53 = (char *)v42 - v19;
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (uint64_t v20 = swift_dynamicCastClass()) != 0)
    && *(unsigned char *)(v20 + 24) != 1)
  {
    uint64_t v21 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = -1;
  }
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 464))(v21);
  uint64_t v24 = v23;
  int v44 = v25;
  if (sub_10096C1A0())
  {
    v42[0] = v24;
    v42[1] = a5;
    __int16 v43 = a4;
    uint64_t v26 = *(void *)(v11 + 608);
    uint64_t v27 = *(void *)(v11 + 624);
    uint64_t v55 = v14;
    uint64_t v56 = v26;
    uint64_t v57 = v13;
    uint64_t v58 = v27;
    uint64_t v48 = type metadata accessor for JobResult();
    uint64_t v55 = v14;
    uint64_t v56 = v26;
    uint64_t v57 = v13;
    uint64_t v58 = v27;
    uint64_t v47 = type metadata accessor for RemoteVersion.CleanRemoteVersions();
    uint64_t v28 = 0;
    int v49 = (void (**)(char *, uint64_t *, uint64_t))(v54 + 16);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v54 + 32);
    uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v46 + 8);
    uint64_t v31 = (void (**)(char *, uint64_t))(v54 + 8);
    while (1)
    {
      BOOL v32 = sub_10096C130();
      sub_10096C0E0();
      if (v32)
      {
        int v33 = v53;
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v53, v22+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v28, AssociatedTypeWitness);
        uint64_t v34 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        int v33 = v53;
        if (v45 != 8) {
          goto LABEL_26;
        }
        uint64_t v55 = result;
        (*v49)(v53, &v55, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v34 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          a4 = v43;
          uint64_t v24 = v42[0];
          if (v44) {
            return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
          }
LABEL_19:
          type metadata accessor for MaintenanceContinuation();
          uint64_t v41 = swift_allocObject();
          *(void *)(v41 + 16) = v24;
          *(unsigned char *)(v41 + 24) = 0;
          *(void *)(v41 + 32) = 0;
          *(unsigned char *)(v41 + 40) = 1;
          a4();
          return swift_release();
        }
      }
      (*v29)(v18, v33, AssociatedTypeWitness);
      uint64_t v35 = v51;
      sub_10096B0D0();
      sub_10096B080();
      double v37 = v36;
      uint64_t result = (*v30)(v35, v52);
      double v39 = v37 * 1000000000.0;
      if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
      if (v39 <= -9.22337204e18) {
        goto LABEL_24;
      }
      if (v39 >= 9.22337204e18) {
        goto LABEL_25;
      }
      uint64_t v40 = sub_1003A9384((uint64_t)v18, 0, (uint64_t)v39, 2);
      (*v31)(v18, AssociatedTypeWitness);
      sub_1004D4360(v50, v40);
      swift_release();
      ++v28;
      if (v34 == sub_10096C1A0()) {
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0) {
    goto LABEL_19;
  }
  return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
}

uint64_t type metadata accessor for Maintenance.FixupConflictInGSForDatalessItems()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003A7EEC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1003A7F24()
{
  return 0xD000000000000022;
}

uint64_t sub_1003A7F40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v119 = a3;
  uint64_t v92 = a2;
  uint64_t v5 = (void *)*v3;
  uint64_t v87 = sub_10096B0E0();
  uint64_t v123 = *(void (***)(char *, uint64_t))(v87 - 8);
  __chkstk_darwin(v87);
  Swift::String v86 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[75];
  uint64_t v8 = v5[76];
  uint64_t v9 = v5[77];
  uint64_t v10 = v5[78];
  uint64_t v129 = v7;
  uint64_t v130 = v8;
  uint64_t v131 = v9;
  uint64_t v132 = v10;
  uint64_t v90 = type metadata accessor for ReconciliationMutation();
  int v105 = *(void (***)(uint64_t, uint64_t))(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v91 = (char *)&v71 - v11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v100 = sub_10096C890();
  Swift::String v103 = *(void (***)(char *, uint64_t))(v100 - 8);
  uint64_t v13 = __chkstk_darwin(v100);
  uint64_t v88 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  Swift::String v101 = (char *)&v71 - v16;
  uint64_t v102 = v12;
  unint64_t v98 = *(void (***)(char *, uint64_t))(v12 - 8);
  __chkstk_darwin(v15);
  uint64_t v99 = (char *)&v71 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v111 = sub_10096C890();
  *(void *)&long long v97 = *(void *)(v111 - 8);
  uint64_t v19 = __chkstk_darwin(v111);
  uint64_t v110 = (char *)&v71 - v20;
  uint64_t v112 = AssociatedTypeWitness;
  uint64_t v96 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin(v19);
  int v113 = (char *)&v71 - v21;
  uint64_t v129 = v7;
  uint64_t v130 = v8;
  uint64_t v85 = v8;
  uint64_t v131 = v9;
  uint64_t v132 = v10;
  uint64_t v84 = v10;
  uint64_t v22 = type metadata accessor for ItemReconciliation();
  uint64_t v109 = sub_10096C890();
  uint64_t v95 = *(void *)(v109 - 8);
  uint64_t v23 = __chkstk_darwin(v109);
  uint64_t v114 = (char *)&v71 - v24;
  uint64_t v118 = v22;
  uint64_t v25 = *(void *)(v22 - 8);
  __chkstk_darwin(v23);
  uint64_t v117 = (char *)&v71 - v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v30;
  __chkstk_darwin(v29);
  int v33 = (char *)&v71 - v32;
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0()) {
    return swift_bridgeObjectRelease();
  }
  BOOL v80 = v3;
  uint64_t v76 = v9;
  uint64_t v77 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v35 = 0;
  uint64_t v125 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v126 = AssociatedConformanceWitness + 72;
  uint64_t v120 = AssociatedConformanceWitness + 64;
  uint64_t v127 = (void (**)(char *, uint64_t *, uint64_t))(v28 + 16);
  uint64_t v128 = AssociatedConformanceWitness;
  uint64_t v124 = (void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v116 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v108 = (void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  size_t v107 = (void (**)(char *, char *, uint64_t))(v97 + 16);
  uint64_t v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 6);
  uint64_t v94 = (void (**)(char *, char *, uint64_t))(v96 + 4);
  uint64_t v93 = (uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 6);
  uint64_t v83 = (void (**)(void))(v98 + 4);
  uint64_t v79 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v98 + 2);
  uint64_t v78 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v98 + 7);
  uint64_t v89 = v103 + 1;
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v96 + 2);
  uint64_t v74 = (uint64_t (**)(char *, uint64_t))(v123 + 1);
  uint64_t v73 = v105 + 1;
  uint64_t v82 = v98 + 1;
  ++v96;
  Swift::String v103 = (void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v123 = (void (**)(char *, uint64_t))(v28 + 8);
  unint64_t v98 = (void (**)(char *, uint64_t))(v97 + 8);
  int v105 = (void (**)(uint64_t, uint64_t))(v95 + 8);
  long long v97 = xmmword_100980D40;
  uint64_t v36 = v112;
  uint64_t v37 = (uint64_t)v114;
  uint64_t v38 = v28;
  uint64_t v115 = v33;
  uint64_t v104 = a1;
  uint64_t v122 = v28;
  while (1)
  {
    uint64_t v40 = v36;
    BOOL v41 = sub_10096C130();
    sub_10096C0E0();
    if (v41)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v33, a1+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v35, v27);
      uint64_t v42 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v81 != 8) {
        goto LABEL_36;
      }
      uint64_t v129 = result;
      (*v127)(v33, &v129, v27);
      swift_unknownObjectRelease();
      uint64_t v42 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
LABEL_28:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
    (*v124)(v31, v33, v27);
    if (v125(v27, v128) & 1) != 0 || ((*(uint64_t (**)(uint64_t))(v128 + 64))(v27))
    {
      (*v123)(v31, v27);
LABEL_4:
      uint64_t v36 = v40;
      goto LABEL_5;
    }
    uint64_t v43 = v121;
    sub_1000DEDD8((uint64_t)v31, v37);
    if (v43) {
      goto LABEL_31;
    }
    uint64_t v44 = v37;
    uint64_t v45 = v37;
    uint64_t v46 = v118;
    int v47 = (*v116)(v44, 1, v118);
    uint64_t v121 = 0;
    if (v47 == 1)
    {
      (*v123)(v31, v27);
      (*v105)(v45, v109);
      uint64_t v37 = v45;
      int v33 = v115;
      goto LABEL_4;
    }
    uint64_t v48 = v117;
    (*v108)(v117, v45, v46);
    int v49 = v110;
    uint64_t v50 = v111;
    (*v107)(v110, &v48[*(int *)(v46 + 52)], v111);
    if ((*v106)(v49, 1, v40) == 1)
    {
      (*v103)(v117, v46);
      (*v123)(v31, v27);
      (*v98)(v49, v50);
      uint64_t v37 = (uint64_t)v114;
      int v33 = v115;
      uint64_t v36 = v40;
      a1 = v104;
      goto LABEL_5;
    }
    (*v94)(v113, v49, v40);
    uint64_t v51 = v101;
    uint64_t v52 = v121;
    (*(void (**)(char *, uint64_t))(*(void *)v119[4] + 240))(v31, 1);
    if (v52)
    {
      (*v96)(v113, v112);
      (*v103)(v117, v118);
LABEL_31:
      (*v123)(v31, v27);
      return swift_bridgeObjectRelease();
    }
    uint64_t v121 = 0;
    uint64_t v53 = v102;
    int v54 = (*v93)(v51, 1, v102);
    uint64_t v55 = v117;
    a1 = v104;
    if (v54 == 1)
    {
      uint64_t v36 = v112;
      (*v96)(v113, v112);
      (*v103)(v55, v118);
      (*v123)(v31, v27);
      (*v89)(v51, v100);
      uint64_t v37 = (uint64_t)v114;
      int v33 = v115;
      goto LABEL_5;
    }
    uint64_t v56 = v99;
    (*v83)();
    uint64_t v57 = &v56[*(int *)(v53 + 48)];
    uint64_t v58 = *(int *)(type metadata accessor for ItemMetadata() + 84);
    int v33 = v115;
    if (v57[v58] == 5)
    {
      (*v82)(v56, v53);
      uint64_t v36 = v112;
      (*v96)(v113, v112);
      (*v103)(v117, v118);
      (*v123)(v31, v27);
      uint64_t v37 = (uint64_t)v114;
      goto LABEL_5;
    }
    v57[v58] = 5;
    uint64_t v59 = v53;
    unint64_t v60 = v88;
    (*v79)(v88, v56, v59);
    (*v78)(v60, 0, 1, v59);
    uint64_t v61 = v121;
    sub_10086C908(v60, (uint64_t)v31, 0, 0, 0, v119, v80[15], v80[16], 0x20000000, v92);
    if (v61)
    {
      (*v89)((char *)v60, v100);
      (*v82)(v56, v102);
      (*v96)(v113, v112);
      (*v103)(v117, v118);
      goto LABEL_31;
    }
    uint64_t v121 = 0;
    (*v89)((char *)v60, v100);
    uint64_t v129 = v77;
    uint64_t v130 = v85;
    uint64_t v131 = v76;
    uint64_t v132 = v84;
    uint64_t v95 = type metadata accessor for JobResult();
    uint64_t v62 = v112;
    uint64_t v63 = swift_getAssociatedConformanceWitness();
    uint64_t v129 = v27;
    uint64_t v130 = v62;
    uint64_t v131 = v128;
    uint64_t v132 = v63;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v72 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*v75)(v91, v113, v112);
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = v86;
    sub_10096B0D0();
    sub_10096B080();
    double v66 = v65;
    uint64_t result = (*v74)(v64, v87);
    double v68 = v66 * 1000000000.0;
    if ((~COERCE__INT64(v66 * 1000000000.0) & 0x7FF0000000000000) == 0) {
      break;
    }
    uint64_t v37 = (uint64_t)v114;
    if (v68 <= -9.22337204e18) {
      goto LABEL_34;
    }
    if (v68 >= 9.22337204e18) {
      goto LABEL_35;
    }
    uint64_t v69 = (uint64_t)v91;
    Swift::String v70 = &v91[v72];
    *(_OWORD *)Swift::String v70 = v97;
    *((void *)v70 + 2) = (uint64_t)v68;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(v92, v69);
    (*v73)(v69, v90);
    (*v82)(v99, v102);
    uint64_t v36 = v112;
    (*v96)(v113, v112);
    (*v103)(v117, v118);
    (*v123)(v31, v27);
LABEL_5:
    ++v35;
    BOOL v39 = v42 == sub_10096C1A0();
    uint64_t v38 = v122;
    if (v39) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1003A9050(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v7 = *(void *)(v7 + 16);
      uint64_t v9 = *(unsigned __int8 *)(v8 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = 1;
LABEL_6:
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 32) + 592))(v7, v9);
  uint64_t v12 = v11;
  char v14 = v13;
  sub_1003A7F40(v10, a3, (void *)a1);
  swift_bridgeObjectRelease();
  if (v14) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(unsigned char *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = 0;
  *(unsigned char *)(v15 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t sub_1003A9230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_100610B30(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t type metadata accessor for Maintenance.MarkAllUploadedItemAsPurgable()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Maintenance()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003A9324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return v2;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      LOBYTE(v2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40)) {
    return v2;
  }
  return (*(void *)(a1 + 32) == *(void *)(a2 + 32)) & ~v2;
}

uint64_t sub_1003A9384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100610B30(a1, a2, a3, a4);
}

uint64_t sub_1003A93E8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A9428(char a1)
{
  return sub_1003A7764(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003A9434()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A946C(void *a1, void *a2, uint64_t a3)
{
  return sub_1008CB3F8(a1, a2, a3, *(uint64_t (**)(void, void, void, uint64_t))(v3 + 16));
}

uint64_t sub_1003A9474()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A94AC()
{
  return sub_1003A7880(*(unsigned char *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1003A94CC(uint64_t a1, void **a2)
{
  uint64_t v45 = a1;
  uint64_t v3 = (*a2)[10];
  uint64_t v4 = (*a2)[11];
  uint64_t v5 = (*a2)[12];
  uint64_t v6 = (*a2)[13];
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v38 = v6;
  uint64_t v39 = v4;
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  uint64_t v35 = type metadata accessor for PersistenceTrigger();
  uint64_t v37 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v36 = (char *)&v33 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_10096C890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v33 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v33 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v45, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v18 = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, AssociatedTypeWitness);
  uint64_t v19 = v45 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
  if (*(unsigned char *)(v19 + 16) || (*(unsigned char *)(v19 + 1) & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  }
  uint64_t v20 = v3;
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v33 = v20;
  uint64_t v34 = v16;
  uint64_t v41 = v20;
  uint64_t v42 = v18;
  uint64_t v43 = v5;
  uint64_t v44 = v38;
  uint64_t v22 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v23 = v40;
  uint64_t v24 = sub_100828E84((uint64_t)a2, v22);
  if (v23) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  if (v24 == 70) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  uint64_t v25 = v24;
  if ((*(uint64_t (**)(void))(*a2[3] + 320))()) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  uint64_t v45 = v25;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v42 = v26;
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v44 = v28;
  type metadata accessor for ReconciliationID();
  uint64_t v29 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v30 = v36;
  uint64_t v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v36, v34, v21);
  swift_storeEnumTagMultiPayload();
  v30[v29] = v45;
  uint64_t v32 = v35;
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *))(*a2)[39])(v30);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v31, v21);
}

uint64_t sub_1003A99F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD0EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1003A9A58(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_1003A9ADC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003A9B14()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A9B4C()
{
  return sub_10039685C();
}

uint64_t sub_1003A9B5C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A9BB4(uint64_t a1, char a2)
{
  return sub_100396904(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1003A9BC8()
{
  sub_1000D5B18(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A9C2C()
{
  return sub_100396A38(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void (**)(uint64_t, void, void, uint64_t))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

unint64_t sub_1003A9C58()
{
  unint64_t result = qword_100AD4438;
  if (!qword_100AD4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4438);
  }
  return result;
}

unint64_t sub_1003A9CAC()
{
  unint64_t result = qword_100AD0648;
  if (!qword_100AD0648)
  {
    sub_100033BE8(&qword_100ACE960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD0648);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MaintenanceContinuation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A9DE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaintenanceContinuation.CodingKeys()
{
  return &type metadata for MaintenanceContinuation.CodingKeys;
}

unint64_t sub_1003A9E20()
{
  unint64_t result = qword_100AD4448;
  if (!qword_100AD4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4448);
  }
  return result;
}

unint64_t sub_1003A9E78()
{
  unint64_t result = qword_100AD4450;
  if (!qword_100AD4450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4450);
  }
  return result;
}

unint64_t sub_1003A9ED0()
{
  unint64_t result = qword_100AD4458;
  if (!qword_100AD4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4458);
  }
  return result;
}

uint64_t sub_1003A9F24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616870 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003AA00C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096C890();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - v6, a1, v4);
  uint64_t v8 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v13 = 0u;
    long long v14 = 0u;
  }
  else
  {
    *((void *)&v14 + 1) = swift_getAssociatedTypeWitness();
    sub_10009C958((uint64_t *)&v13);
    sub_10096BFA0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, a2);
  }
  uint64_t v9 = sub_1003AC444((uint64_t)&v13);
  uint64_t v11 = v10;
  sub_10017D1A4((uint64_t)&v13);
  if (v11) {
    return v9;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_1003AA234@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = sub_10096C890();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - v16;
  if (swift_dynamicCastMetatype())
  {
    id v29 = [v31 longAtIndex:a1];
    goto LABEL_3;
  }
  uint64_t v17 = v9;
  id v19 = v31;
  if (swift_dynamicCastMetatype())
  {
    id v29 = [v19 unsignedLongAtIndex:a1];
    swift_dynamicCast();
    sub_10096BFB0();
    uint64_t v18 = *(void *)(a2 - 8);
    uint64_t v17 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, a2) == 1) {
      goto LABEL_7;
    }
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype()) {
        sub_10071347C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 363);
      }
      id v22 = [v19 stringAtIndex:a1];
      uint64_t v23 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v25 = v24;

      id v29 = (id)v23;
      uint64_t v30 = v25;
LABEL_3:
      swift_dynamicCast();
      sub_10096BFB0();
      uint64_t v18 = *(void *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a2) != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
      }
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
      sub_10017D094();
      swift_allocError();
      *uint64_t v20 = 0;
      return swift_willThrow();
    }
    id v29 = [v19 unsignedLongLongAtIndex:a1];
    swift_dynamicCast();
    sub_10096BFB0();
    uint64_t v18 = *(void *)(a2 - 8);
    uint64_t v17 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a2) == 1) {
      goto LABEL_7;
    }
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
}

uint64_t sub_1003AA6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1006FCD24(a2, *(void *)(a3 + 8));
  uint64_t v7 = sub_1003ACBEC(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003AA73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v19 - v8, a1, v6);
  uint64_t v10 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = a2;
    uint64_t v11 = sub_10009C958((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v11, v9, a2);
  }
  uint64_t v12 = sub_1003AC444((uint64_t)&v20);
  uint64_t v14 = v13;
  sub_10017D1A4((uint64_t)&v20);
  if (!v14)
  {
    sub_10096AAD0();
    swift_allocObject();
    sub_10096AAC0();
    sub_10096AAA0();
    v19[0] = a3;
    swift_getWitnessTable();
    uint64_t v15 = sub_10096AAB0();
    unint64_t v17 = v16;
    uint64_t v12 = sub_10025CECC(v15, v16);
    swift_release();
    sub_10001E9C0(v15, v17);
  }
  return v12;
}

uint64_t sub_1003AA9DC(ValueMetadata *a1, uint64_t a2)
{
  uint64_t v5 = sub_10096BCB0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10096B0E0();
  __chkstk_darwin(v6);
  if ([v2 isNullAtIndex:a2]) {
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 260);
  }
  if (swift_dynamicCastMetatype()) {
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 261);
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  uint64_t v8 = v7;
  if (swift_dynamicCastMetatype()) {
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 150, 2, 262);
  }
  if (a1 == (ValueMetadata *)&type metadata for Double)
  {
    [v2 doubleAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Bool)
  {
    [v2 BOOLAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for UInt8)
  {
    [v2 unsignedCharAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Int8)
  {
    [v2 charAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for UInt16)
  {
    [v2 unsignedShortAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Int16)
  {
    [v2 shortAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for UInt32)
  {
    [v2 unsignedIntAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Int32)
  {
    [v2 intAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for UInt)
  {
    [v2 unsignedLongAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Int)
  {
    [v2 longAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for UInt64)
  {
    [v2 unsignedLongLongAtIndex:a2];
  }
  else if (a1 == (ValueMetadata *)&type metadata for Int64)
  {
    [v2 longLongAtIndex:a2];
  }
  else
  {
    if (a1 == (ValueMetadata *)&type metadata for Data) {
      goto LABEL_34;
    }
    if (a1 == (ValueMetadata *)&type metadata for String)
    {
      id v15 = [v2 stringAtIndex:a2];
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      return swift_dynamicCast();
    }
    if ((ValueMetadata *)v6 == a1)
    {
      [v2 doubleAtIndex:a2];
      sub_10096B070();
      return swift_dynamicCast();
    }
    if (a1 == &type metadata for FPItemVersionData)
    {
LABEL_34:
      id v14 = [v2 dataAtIndex:a2];
      sub_10096AF60();
    }
    else
    {
      if (v8 != a1)
      {
        sub_10096AA90();
        swift_allocObject();
        sub_10096AA80();
        id v9 = [v2 dataAtIndex:a2];
        uint64_t v10 = sub_10096AF60();
        unint64_t v12 = v11;

        sub_10096AA70();
        sub_10001E9C0(v10, v12);
        return swift_release();
      }
      id v16 = [v2 dataAtIndex:a2];
      uint64_t v17 = sub_10096AF60();
      unint64_t v19 = v18;

      sub_10096BC90();
      uint64_t v20 = sub_10096BC50();
      if (v21)
      {
        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
        }
        if (v22) {
          sub_10096BC00();
        }
        sub_10001E9C0(v17, v19);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10001E9C0(v17, v19);
      }
      sub_10002B7CC(&qword_100AD6810);
    }
  }
  return swift_dynamicCast();
}

uint64_t sub_1003AB070()
{
  uint64_t v1 = sub_10096CC00();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - v3;
  uint64_t v5 = sub_10096CD60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - v7;
  v14[0] = 40;
  v14[1] = 0xE100000000000000;
  sub_10096BF50();
  *(void *)(swift_allocObject() + 16) = v0;
  id v9 = v0;
  swift_getWitnessTable();
  sub_10096CEF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_getWitnessTable();
  sub_10001F9C0();
  uint64_t v10 = sub_10096BF90();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15._countAndFlagsBits = v10;
  v15._object = v12;
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 41;
  v16._object = (void *)0xE100000000000000;
  sub_10096BDC0(v16);
  return v14[0];
}

void *sub_1003AB2F4()
{
  uint64_t v2 = (void *)sub_10096C110();
  uint64_t v4 = v2;
  if ([v0 next])
  {
    while (1)
    {
      sub_1003AD20C((uint64_t)&v4);
      if (v1) {
        break;
      }
      if (([v0 next] & 1) == 0) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1003AB3BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096A630();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int v49 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v45 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v44 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  Swift::String v15 = (char *)v44 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)v44 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v44 - v19;
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v46 = v2;
  v21((char *)v44 - v19, v2, a1);
  uint64_t v52 = 13;
  v21(v18, (uint64_t)v20, a1);
  if (sub_10096D240())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v22, v18, a1);
  }
  _s3__C4CodeOMa_0(0);
  sub_1003AD2BC(&qword_100ACCFB0, _s3__C4CodeOMa_0);
  char v23 = sub_10096AA60();
  swift_errorRelease();
  if (v23) {
    goto LABEL_9;
  }
  LODWORD(v52) = sub_10096A730();
  v21(v15, (uint64_t)v20, a1);
  if (sub_10096D240())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v15, a1);
  }
  sub_100045CB4();
  char v25 = sub_10096AA60();
  swift_errorRelease();
  if (v25)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, a1);
  }
  else
  {
    sub_10096A530();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v12, v20, a1);
    uint64_t v28 = sub_10096D240();
    v44[0] = v27;
    v44[1] = v7 + 32;
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, a1);
    }
    else
    {
      swift_allocError();
      v27(v29, v12, a1);
    }
    uint64_t v31 = v47;
    uint64_t v30 = v48;
    sub_1003AD2BC((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    uint64_t v32 = v49;
    char v33 = sub_10096AA60();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    if ((v33 & 1) == 0)
    {
      uint64_t v34 = v45;
      v21(v45, v46, a1);
      if (sub_10096D240())
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v34, a1);
      }
      else
      {
        swift_allocError();
        ((void (*)(uint64_t, char *, uint64_t))v44[0])(v35, v34, a1);
      }
      uint64_t v36 = (void *)sub_10096ABE0();
      swift_errorRelease();
      id v37 = [v36 underlyingErrors];
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      uint64_t v38 = sub_10096C0A0();

      uint64_t v39 = *(void *)(v38 + 16);
      if (!v39)
      {
LABEL_23:

        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v40 = 0;
      while (1)
      {
        swift_getErrorValue();
        uint64_t v41 = v50;
        uint64_t v42 = v51;
        swift_errorRetain();
        char v43 = sub_1003AB3BC(v41, v42);
        swift_errorRelease();
        if (v43) {
          break;
        }
        if (v39 == ++v40) {
          goto LABEL_23;
        }
      }

      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_1003AB9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096CC80();
  uint64_t v13 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v12 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - v7;
  sub_10096A7F0();
  swift_allocObject();
  sub_10096A7E0();
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  uint64_t v9 = swift_allocError();
  sub_100025500(&qword_100AD4460, (uint64_t *)&unk_100ACD9A0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v10 = v16;
  sub_10096A7D0();
  if (v10)
  {
    swift_deallocError();
    uint64_t v17 = v10;
    swift_errorRetain();
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_10002B7CC((uint64_t *)&unk_100ACF720);
      sub_100025500((unint64_t *)&unk_100AD0D10, (uint64_t *)&unk_100ACF720);
      uint64_t v9 = swift_allocError();
      sub_100025500(&qword_100AD4468, (uint64_t *)&unk_100ACF720);
      sub_10096A7D0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v4);
    }
    else
    {
      swift_release();
    }
    swift_errorRelease();
  }
  else
  {
    swift_release();
  }
  return v9;
}

void *sub_1003ABE00(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  char v43 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  uint64_t v44 = v5;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)&v34 - v15, v3, a1);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  if (swift_dynamicCast())
  {
    sub_1003ACB84((uint64_t)&v47, (uint64_t)v46);
    sub_10096A820();
    swift_allocObject();
    sub_10096A810();
    sub_1003ACB84((uint64_t)v46, (uint64_t)&v45);
    sub_100025500((unint64_t *)&unk_100AD4480, (uint64_t *)&unk_100ACD9A0);
    uint64_t v16 = (void *)sub_10096A800();
    swift_release();
    sub_10021FD38((uint64_t)v46);
  }
  else
  {
    v14(v13, v3, a1);
    sub_10002B7CC((uint64_t *)&unk_100ACF720);
    if (swift_dynamicCast())
    {
      id v17 = v47;
      unint64_t v18 = v48;
      uint64_t v41 = v48;
      uint64_t v42 = v47;
      uint64_t v19 = v50;
      uint64_t v20 = v51;
      unint64_t v21 = v52;
      uint64_t v39 = v51;
      uint64_t v40 = v50;
      unint64_t v38 = v52;
      char v43 = (char *)v53;
      uint64_t v44 = v54;
      uint64_t v35 = v55;
      unint64_t v36 = v49;
      uint64_t v34 = v56;
      int v37 = v57;
      sub_10096A820();
      swift_allocObject();
      sub_10096A810();
      id v47 = v17;
      uint64_t v48 = v18;
      unint64_t v22 = v36;
      unint64_t v49 = v36;
      uint64_t v50 = v19;
      uint64_t v51 = v20;
      unint64_t v52 = v21;
      uint64_t v53 = (uint64_t)v43;
      uint64_t v54 = v44;
      uint64_t v23 = v34;
      uint64_t v24 = v35;
      uint64_t v55 = v35;
      uint64_t v56 = v34;
      LOBYTE(v19) = v37;
      unsigned __int8 v57 = v37;
      sub_100025500(&qword_100AD4478, (uint64_t *)&unk_100ACF720);
      uint64_t v16 = (void *)sub_10096A800();
      swift_release();
      sub_10021FB74(v42, v41, v22, v40, v39, v38, (uint64_t)v43, v44, v24, v23, (char)v19);
    }
    else
    {
      swift_getDynamicType();
      sub_100011348(0, (unint64_t *)&qword_100ACECC0);
      if (swift_dynamicCastMetatype())
      {
        char v25 = self;
        v14(v10, v3, a1);
        uint64_t v26 = sub_10096D2B0();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v10, a1);
        id v47 = 0;
        id v27 = [v25 archivedDataWithRootObject:v26 requiringSecureCoding:1 error:&v47];
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v28 = (uint64_t)v43;
        v14(v43, v3, a1);
        if (sub_10096D240())
        {
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v28, a1);
        }
        else
        {
          swift_allocError();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v29, v28, a1);
        }
        uint64_t v30 = self;
        uint64_t v31 = (void *)sub_10096ABE0();
        swift_errorRelease();
        id v47 = 0;
        id v27 = [v30 archivedDataWithRootObject:v31 requiringSecureCoding:1 error:&v47];
      }
      id v32 = v47;
      if (v27)
      {
        uint64_t v16 = (void *)sub_10096AF60();
      }
      else
      {
        uint64_t v16 = v32;
        sub_10096ABF0();

        swift_willThrow();
      }
    }
  }
  return v16;
}

uint64_t sub_1003AC384@<X0>(uint64_t a1@<X0>, ValueMetadata *a2@<X1>, uint64_t a3@<X8>)
{
  if ([v3 isNullAtIndex:a1])
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t result = sub_1003AA9DC(a2, a1);
    if (v4) {
      return result;
    }
    uint64_t v8 = 0;
  }
  return (*((uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *))a2[-1].Description + 7))(a3, v8, 1, a2);
}

uint64_t sub_1003AC444(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  sub_1001F2768(a1, (uint64_t)&v29);
  if (!v30)
  {
    sub_10017D1A4((uint64_t)&v29);
    id v13 = [v2 bindObjectParameter:0];
    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    return v12;
  }
  sub_100042A48(&v29, v31);
  sub_1001FAC78((uint64_t)v31, (uint64_t)&v29);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    sub_10096B080();
    id v11 = objc_msgSend(v2, "bindDoubleParameter:");
    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_28:
    sub_1000268E0((uint64_t)v31);
    sub_1000268E0((uint64_t)&v29);
    return v12;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindDoubleParameter:*(double *)&v27];
LABEL_27:
    id v15 = v14;
    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindBooleanParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindCharParameter:(char)v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindUnsignedCharParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindShortParameter:(__int16)v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindUnsignedShortParameter:(unsigned __int16)v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindIntegerParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    id v14 = [v2 bindUnsignedIntegerParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
LABEL_22:
    id v14 = [v2 bindLongParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast()) {
    goto LABEL_26;
  }
  if (swift_dynamicCast()) {
    goto LABEL_22;
  }
  if (swift_dynamicCast())
  {
LABEL_26:
    id v14 = [v2 bindUnsignedLongParameter:v27];
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    uint64_t v17 = (uint64_t)v27;
    unint64_t v18 = v28;
    Class isa = sub_10096AF20().super.isa;
    id v20 = [v2 bindObjectParameter:isa];

    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10001E9C0(v17, v18);

    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    uint64_t v21 = (uint64_t)v27;
    unint64_t v22 = v28;
    sub_10001EBB0((uint64_t)v27, v28);
    Class v23 = sub_10096AF20().super.isa;
    sub_10001E9C0(v21, v22);
    id v24 = [v2 bindObjectParameter:v23];

    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10001E9C0(v21, v22);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    if (!swift_dynamicCast())
    {
      if (!swift_dynamicCast())
      {
        sub_1000268E0((uint64_t)v31);
        sub_1000268E0((uint64_t)&v29);
        return 0;
      }
      NSString v25 = sub_10096BC00();
      swift_bridgeObjectRelease();
      id v26 = [v2 bindStringParameter:v25];

      uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      goto LABEL_28;
    }
  }
  sub_1000268E0((uint64_t)&v29);
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_1003ACB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ACBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a2;
  uint64_t v7 = sub_10096C890();
  unint64_t v36 = *(void (***)(char *, uint64_t))(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v45 = *(void (***)(char *, uint64_t))(a3 - 8);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v17 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v52 = (char *)&v35 - v18;
  swift_bridgeObjectRetain();
  if (sub_10096C1A0())
  {
    uint64_t v35 = v15;
    uint64_t v42 = v12;
    uint64_t v43 = a4;
    uint64_t v19 = 0;
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    unint64_t v49 = (void (**)(char *, void *, uint64_t))(v14 + 16);
    uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 6);
    id v47 = (void (**)(char *, uint64_t, uint64_t))(v36 + 2);
    uint64_t v37 = a4 + 16;
    unint64_t v38 = (void (**)(char *, char *, uint64_t))(v45 + 4);
    uint64_t v39 = v45 + 1;
    uint64_t v40 = AssociatedTypeWitness;
    uint64_t v44 = 0;
    uint64_t v45 = (void (**)(char *, uint64_t))(v14 + 8);
    ++v36;
    uint64_t v41 = a1;
    do
    {
      BOOL v20 = sub_10096C130();
      sub_10096C0E0();
      if (v20)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v52, a1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v19, AssociatedTypeWitness);
        uint64_t v21 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        v53[0] = result;
        (*v49)(v52, v53, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v21 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_13:
          __break(1u);
          break;
        }
      }
      (*v48)(v17, v52, AssociatedTypeWitness);
      (*v47)(v10, v50, v7);
      if ((*v46)(v10, 1, a3) == 1)
      {
        (*v36)(v10, v7);
      }
      else
      {
        unint64_t v22 = v17;
        uint64_t v23 = v7;
        id v24 = v42;
        (*v38)(v42, v10, a3);
        uint64_t v25 = v44;
        (*(void (**)(char *, id, uint64_t))(v43 + 16))(v22, v51, a3);
        if (v25)
        {
          (*v39)(v24, a3);
          (*v45)(v22, v40);
          swift_bridgeObjectRelease();
          id v32 = (void *)sub_10096ABE0();
          id v33 = v51;
          [v51 setLastError:v32];

          id v34 = [v33 bindObjectParameter:0];
          uint64_t v31 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

          swift_errorRelease();
          return v31;
        }
        uint64_t v44 = 0;
        swift_bridgeObjectRelease();
        (*v39)(v24, a3);
        uint64_t v7 = v23;
        uint64_t v17 = v22;
        uint64_t AssociatedTypeWitness = v40;
        a1 = v41;
      }
      (*v45)(v17, AssociatedTypeWitness);
      ++v19;
    }
    while (v21 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  Swift::Int v27 = sub_10096C160();
  v54._countAndFlagsBits = 2108479;
  v54._object = (void *)0xE300000000000000;
  uint64_t v28 = sub_10096BEA0(v54, v27);
  v53[0] = v28;
  v53[1] = v29;
  uint64_t v30 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0) {
    uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v30) {
    return v28;
  }
  sub_1004D810C(2);
  return v53[0];
}

void sub_1003AD174(id a1@<X1>, void *a2@<X0>, uint64_t *a3@<X8>)
{
  id v4 = [a1 bindLongParameter:*a2];
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

uint64_t sub_1003AD1D4()
{
  return swift_deallocObject();
}

uint64_t sub_1003AD20C(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t result = v3(v2);
  if (!v1)
  {
    sub_10096C1C0();
    return sub_10096C180();
  }
  return result;
}

uint64_t sub_1003AD2BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t *sub_1003AD304(void *a1, void *a2)
{
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
  if ([a1 next])
  {
    while (1)
    {
      sub_1002D6AE4(a2, &v8);
      if (v2) {
        break;
      }
      sub_10096C070();
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10096C0F0();
      }
      sub_10096C150();
      uint64_t v5 = &v9;
      sub_10096C0C0();
      if (([a1 next] & 1) == 0) {
        return (unint64_t *)v9;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

void *sub_1003AD418(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_1003AD4C8(a1, a2, a3, a4, a5, a6, (void (*)(void *__return_ptr, void, void, void, void, void))sub_100697C28);
}

void *sub_1003AD444(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_1003AD6E0(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, void *, id))sub_100699408);
}

void *sub_1003AD470(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_1003AD6E0(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, void *, id))sub_10069B66C);
}

void *sub_1003AD49C(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_1003AD4C8(a1, a2, a3, a4, a5, a6, (void (*)(void *__return_ptr, void, void, void, void, void))sub_100698818);
}

void *sub_1003AD4C8(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void (*a7)(void *__return_ptr, void, void, void, void, void))
{
  void (*v19)(void *__return_ptr, void, void, void, void, void);
  id v20;
  id v23;
  unint64_t v24;

  uint64_t v12 = _swiftEmptyArrayStorage;
  id v24 = (unint64_t)_swiftEmptyArrayStorage;
  id v13 = a5;
  BOOL v20 = a6;
  if ([a1 next])
  {
    id v18 = v13;
    uint64_t v19 = a7;
    do
    {
      uint64_t v12 = v13;
      id v15 = v20;
      a7(&v23, a2, a3, a4, v12, v15);
      if (v7)
      {

        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v23)
      {
        id v16 = v23;
        sub_10096C070();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10096C0F0();
        }
        sub_10096C150();
        sub_10096C0C0();

        id v13 = v18;
        a7 = v19;
      }
    }
    while (([a1 next] & 1) != 0);
    uint64_t v12 = (void *)v24;
  }

  swift_release();
  return v12;
}

void *sub_1003AD688(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_1003AD6E0(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, void *, id))sub_10069A26C);
}

void *sub_1003AD6B4(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_1003AD6E0(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, void *, id))sub_10069C4F0);
}

void *sub_1003AD6E0(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void (*a6)(id *__return_ptr, void *, uint64_t, void *, id))
{
  uint64_t v10 = _swiftEmptyArrayStorage;
  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  id v11 = a4;
  id v12 = a5;
  if ([a1 next])
  {
    uint64_t v17 = a1;
    do
    {
      uint64_t v10 = v11;
      id v14 = v12;
      a6(&v20, a2, a3, v10, v14);
      if (v6)
      {

        swift_release();
        swift_bridgeObjectRelease();
        return v10;
      }
      if (v20)
      {
        id v15 = v20;
        sub_10096C070();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10096C0F0();
        }
        sub_10096C150();
        sub_10096C0C0();

        a1 = v17;
      }
    }
    while (([a1 next] & 1) != 0);
    uint64_t v10 = (void *)v21;
  }

  swift_release();
  return v10;
}

id static ConcreteFPDPurger.sharedManager()()
{
  if (qword_100ACC078 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_100AD4490;

  return v0;
}

id ConcreteFPDPurger.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, "init");
}

id ConcreteFPDPurger.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1003AD9AC()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ConcreteFPDPurger()) init];
  qword_100AD4490 = (uint64_t)result;
  return result;
}

uint64_t sub_1003AD9DC()
{
  uint64_t v0 = sub_10096C690();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  __chkstk_darwin(v0);
  uint64_t v19 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10096C620();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_10096B7D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)v18 - v14;
  v18[1] = sub_1003B01A8();
  sub_10096B770();
  unint64_t v22 = _swiftEmptyArrayStorage;
  sub_10008174C();
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_10007FBA0();
  sub_10096CA60();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v21);
  uint64_t v16 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_100AD4498 = v16;
  return result;
}

void ConcreteFPDPurger.purgeAndWait(at:)(uint64_t a1)
{
  if (qword_100ACC080 != -1) {
    swift_once();
  }
  id v3 = (id)fpfs_current_log();
  uint64_t v4 = (void *)__chkstk_darwin(v3);
  v5[2] = v1;
  v5[3] = a1;
  sub_100270A48(v4, 0, (uint64_t)"purgeAndWait(at:)", 17, 2, (uint64_t)sub_1003AF6F4, (uint64_t)v5);
}

void ConcreteFPDPurger.purgeAsync(at:)(uint64_t a1)
{
  uint64_t v3 = sub_10096AE50();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  if (qword_100ACC080 != -1) {
    swift_once();
  }
  id v6 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  id v9 = v1;
  sub_1006B8108(v6, (uint64_t)"purgeAsync(at:)", 15, 2, (uint64_t)sub_1003AF724, v8);
  swift_release();
}

uint64_t sub_1003AE310(uint64_t a1)
{
  uint64_t v2 = sub_10096AE50();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v39 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v31 - v6;
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - v11;
  id v13 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v14 = *(void (**)(void, void, void))(v3 + 16);
  uint64_t v37 = v3 + 16;
  uint64_t v38 = a1;
  unint64_t v36 = v14;
  v14(v7, a1, v2);
  id v15 = sub_10096B470();
  os_log_type_t v16 = sub_10096C590();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v40 = v3;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = v8;
    uint64_t v19 = v18;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v33;
    *(_DWORD *)uint64_t v19 = 136446210;
    v31[1] = v19 + 4;
    id v32 = (uint8_t *)v19;
    sub_10096AD20((NSURL *)(v19 + 4));
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, "fp_shortDescription");
    uint64_t v34 = v2;
    id v23 = v22;

    uint64_t v24 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v25 = v9;
    unint64_t v27 = v26;

    uint64_t v41 = sub_100719D44(v24, v27, &v42);
    sub_10096C8C0();
    uint64_t v9 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v34);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Purging: %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v35;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }

  uint64_t v28 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v29 = v38;
  __chkstk_darwin(v28);
  v31[-2] = v29;
  return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1003B018C);
}

uint64_t sub_1003AE998@<X0>(int *a1@<X8>)
{
  sub_10096AE10();
  uint64_t v2 = sub_10096BCF0();
  swift_bridgeObjectRelease();
  int v3 = removefile((const char *)(v2 + 32), 0, 0x101u);
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1003AEA04@<X0>(const char *a1@<X1>, _DWORD *a2@<X8>)
{
  sub_10096AE10();
  uint64_t v4 = sub_10096BCF0();
  swift_bridgeObjectRelease();
  LODWORD(a1) = removexattr((const char *)(v4 + 32), a1, 0);
  uint64_t result = swift_release();
  *a2 = a1;
  return result;
}

uint64_t sub_1003AEA7C@<X0>(_DWORD *a1@<X8>)
{
  sub_10096AE10();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  int v2 = fpfs_clear_file_acl();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t _s9libfssync17ConcreteFPDPurgerC31prepareDomainForSyncRootRemoval3urly10Foundation3URLV_tF_0(uint64_t a1)
{
  uint64_t v2 = sub_10096AE50();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  v17[12] = (char *)v17 - v7;
  __chkstk_darwin(v6);
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v17[13] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v17[11] = (char *)v17 - v13;
  __chkstk_darwin(v12);
  v17[16] = a1;
  uint64_t v14 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1003B01E8);
  v17[10] = v8;
  v17[9] = v9;
  v17[8] = v5;
  __chkstk_darwin(v14);
  v17[-2] = a1;
  uint64_t v15 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1003B020C);
  __chkstk_darwin(v15);
  v17[-2] = a1;
  return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1003B0230);
}

uint64_t type metadata accessor for ConcreteFPDPurger()
{
  return self;
}

uint64_t sub_1003AF6F4()
{
  return sub_1003AF858(*(void *)(v0 + 24));
}

uint64_t sub_1003AF72C()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003AF7F8()
{
  uint64_t v1 = *(void *)(sub_10096AE50() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1003AF858(v2);
}

uint64_t sub_1003AF858(uint64_t a1)
{
  uint64_t v75 = a1;
  uint64_t v1 = sub_10096AE50();
  *(void *)&long long v71 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v78 = (char *)&v69 - v5;
  uint64_t v6 = sub_10096B480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v69 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v79 = (char *)&v69 - v15;
  __chkstk_darwin(v14);
  BOOL v17 = (char *)&v69 - v16;
  id v18 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v19 = sub_10096B470();
  os_log_type_t v20 = sub_10096C590();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v73 = v1;
  if (v21)
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Started purging...", v22, 2u);
    uint64_t v1 = v73;
    swift_slowDealloc();
  }

  uint64_t v74 = *(void (**)(char *, uint64_t))(v7 + 8);
  v74(v17, v6);
  id v23 = [self defaultManager];
  uint64_t v24 = v75;
  sub_10096AE10();
  NSString v25 = sub_10096BC00();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v26 = [v23 contentsOfDirectoryAtPath:v25 error:aBlock];

  id v27 = aBlock[0];
  uint64_t v72 = v7 + 8;
  if (v26)
  {
    uint64_t v28 = sub_10096C0A0();
    id v29 = v27;

    id v77 = [objc_allocWithZone((Class)NSFileCoordinator) init];
    uint64_t v30 = *(void *)(v28 + 16);
    if (v30)
    {
      Swift::String v70 = v13;
      uint64_t v76 = v82;
      uint64_t v31 = (void (**)(char *, uint64_t))(v71 + 8);
      swift_bridgeObjectRetain();
      uint64_t v69 = v28;
      uint64_t v32 = v28 + 40;
      *(void *)&long long v33 = 138412290;
      long long v71 = v33;
      do
      {
        swift_bridgeObjectRetain();
        sub_10096AD60();
        swift_bridgeObjectRelease();
        sub_10096AD20(v34);
        unint64_t v36 = v35;
        v82[2] = sub_1003AD8FC;
        v82[3] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        v82[0] = sub_10005EA78;
        v82[1] = &unk_100A880D8;
        uint64_t v37 = _Block_copy(aBlock);
        swift_release();
        aBlock[0] = 0;
        [v77 coordinateWritingItemAtURL:v36 options:1 error:aBlock byAccessor:v37];
        _Block_release(v37);

        id v38 = aBlock[0];
        if (swift_isEscapingClosureAtFileLocation()) {
          __break(1u);
        }
        if (v38)
        {
          id v39 = v38;
          id v40 = (id)fpfs_current_or_default_log();
          sub_10096B490();
          id v41 = v39;
          uint64_t v42 = sub_10096B470();
          os_log_type_t v43 = sub_10096C5B0();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = swift_slowAlloc();
            uint64_t v45 = v6;
            uint64_t v46 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v44 = v71;
            id v47 = objc_msgSend(v41, "fp_prettyDescription");
            *(void *)(v44 + 4) = v47;
            *uint64_t v46 = v47;

            _os_log_impl((void *)&_mh_execute_header, v42, v43, "Error coordinating on purgatory item for deleting: %@", (uint8_t *)v44, 0xCu);
            sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
            swift_arrayDestroy();
            uint64_t v6 = v45;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          v74(v79, v6);
          uint64_t v1 = v73;
        }
        v32 += 16;
        (*v31)(v78, v1);

        --v30;
      }
      while (v30);
      uint64_t v28 = v69;
      swift_bridgeObjectRelease();
      uint64_t v13 = v70;
    }
    id v48 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_10096B470();
    os_log_type_t v50 = sub_10096C590();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v51 = 134217984;
      unint64_t v52 = *(void **)(v28 + 16);
      swift_bridgeObjectRelease();
      aBlock[0] = v52;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Finished purging %ld files.", v51, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return ((uint64_t (*)(char *, uint64_t))v74)(v13, v6);
  }
  else
  {
    id v53 = aBlock[0];
    sub_10096ABF0();

    swift_willThrow();
    swift_errorRelease();
    id v54 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v55 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v4, v24, v1);
    uint64_t v56 = sub_10096B470();
    os_log_type_t v57 = sub_10096C5B0();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v79 = (char *)swift_slowAlloc();
      aBlock[0] = v79;
      *(_DWORD *)uint64_t v58 = 136446210;
      id v77 = (id)(v58 + 4);
      sub_10096AD20((NSURL *)(v58 + 4));
      unint64_t v60 = v59;
      id v61 = objc_msgSend(v59, "fp_shortDescription");
      uint64_t v78 = (char *)v6;
      id v62 = v61;

      uint64_t v63 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v65 = v64;

      uint64_t v80 = sub_100719D44(v63, v65, (uint64_t *)aBlock);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v4, v73);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to get contents for URL %{public}s", (uint8_t *)v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      double v66 = v10;
      int v67 = v78;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v4, v1);

      double v66 = v10;
      int v67 = (char *)v6;
    }
    return ((uint64_t (*)(char *, char *))v74)(v66, v67);
  }
}

uint64_t sub_1003B018C@<X0>(int *a1@<X8>)
{
  return sub_1003AE998(a1);
}

unint64_t sub_1003B01A8()
{
  unint64_t result = qword_100ACBC10;
  if (!qword_100ACBC10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100ACBC10);
  }
  return result;
}

uint64_t sub_1003B01E8@<X0>(_DWORD *a1@<X8>)
{
  return sub_1003AEA04("com.apple.file-provider-domain-id", a1);
}

uint64_t sub_1003B020C@<X0>(_DWORD *a1@<X8>)
{
  return sub_1003AEA04("com.apple.file-provider-domain-id#PN", a1);
}

uint64_t sub_1003B0230@<X0>(_DWORD *a1@<X8>)
{
  return sub_1003AEA7C(a1);
}

uint64_t sub_1003B024C()
{
  return sub_1003AF6F4();
}

uint64_t sub_1003B0264(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t result = sub_1005152D8();
  if (result)
  {
    uint64_t v8 = type metadata accessor for SnapshotItem();
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 304))(a1 + *(int *)(v8 + 36), 0);
    if (!v3)
    {
      if (result)
      {
        return sub_1003B0B18(a1, a3);
      }
      else
      {
        uint64_t v9 = a1 + *(int *)(v8 + 48);
        uint64_t result = type metadata accessor for ItemMetadata();
        *(unsigned char *)(v9 + *(int *)(result + 48)) = *(unsigned char *)(v9 + *(int *)(result + 44));
      }
    }
  }
  return result;
}

uint64_t sub_1003B0370(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5)
{
  uint64_t v74 = a2;
  uint64_t v72 = a1;
  int v67 = *(void **)a4;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  __chkstk_darwin(v9);
  double v68 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v67[10];
  uint64_t v73 = v67[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v71 = (char *)v62 - v14;
  uint64_t v15 = *(void **)(a4 + 32);
  uint64_t result = sub_1005152D8();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v66 = v13;
  uint64_t v17 = *a3;
  if ((*a3 & 0x20002) == 0) {
    return result;
  }
  uint64_t v63 = a3;
  uint64_t v64 = AssociatedTypeWitness;
  unint64_t v65 = a5;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v19 = (uint64_t (**)(uint64_t, void))(*v15 + 304);
  os_log_type_t v20 = *v19;
  uint64_t result = (*v19)(v74 + *(int *)(v18 + 36), 0);
  if (v5) {
    return result;
  }
  char v21 = result;
  if (result == 2)
  {
    if ((v17 & 2) == 0)
    {
      uint64_t v23 = v64;
      id v22 = v65;
LABEL_7:
      uint64_t v24 = v74;
      uint64_t v25 = v18;
      goto LABEL_33;
    }
    char v29 = 0;
  }
  else
  {
    if ((v17 & 2) == 0)
    {
      uint64_t v25 = v18;
      uint64_t v26 = *(int *)(v18 + 48);
      uint64_t v27 = type metadata accessor for ItemMetadata();
      if (v21)
      {
        LOBYTE(v28) = *(unsigned char *)(v72 + v26 + *(int *)(v27 + 48));
        uint64_t v23 = v64;
        id v22 = v65;
        uint64_t v24 = v74;
        goto LABEL_19;
      }
      uint64_t v23 = v64;
      id v22 = v65;
      uint64_t v24 = v74;
LABEL_33:
      uint64_t v53 = v24 + *(int *)(v25 + 48);
      uint64_t result = type metadata accessor for ItemMetadata();
      int v54 = *(unsigned __int8 *)(v53 + *(int *)(result + 44));
      *(unsigned char *)(v53 + *(int *)(result + 48)) = v54;
      if (v54 == *(unsigned __int8 *)(v72 + *(int *)(v25 + 48) + *(int *)(result + 48))) {
        return result;
      }
      if ((*v63 & 0x800000000000000) == 0) {
        *v63 |= 0x800000000000000uLL;
      }
      uint64_t v55 = v67[11];
      uint64_t v56 = v67[13];
      uint64_t v75 = v11;
      uint64_t v76 = v55;
      uint64_t v57 = v73;
      uint64_t v77 = v73;
      uint64_t v78 = v56;
      type metadata accessor for JobResult();
      uint64_t v75 = v11;
      uint64_t v76 = v55;
      uint64_t v77 = v57;
      uint64_t v78 = v56;
      type metadata accessor for PinningJob.RefreshChildPinStatus();
      uint64_t v37 = v66;
      id v38 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v74, v23);
      uint64_t v58 = v68;
      sub_10096B0D0();
      sub_10096B080();
      double v60 = v59;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v58, v70);
      double v42 = v60 * 1000000000.0;
      if ((~COERCE__INT64(v60 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v42 > -9.22337204e18)
        {
          if (v42 < 9.22337204e18)
          {
LABEL_39:
            uint64_t v61 = sub_1003A9380(v38, 0x2000000000000000, (uint64_t)v42, 0x10000000000);
            (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v23);
            sub_1004D4360((uint64_t)v22, v61);
            return swift_release();
          }
          goto LABEL_43;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    char v29 = result & 1;
  }
  if ((*(uint64_t (**)(void, uint64_t))(**(void **)(a4 + 24) + 296))(0, 68))
  {
    char v30 = v20(v72, 0);
    char v31 = v29;
    int v28 = v30 & 1;
    uint64_t v25 = v18;
  }
  else
  {
    char v31 = v29;
    uint64_t v25 = v18;
    uint64_t v32 = v72 + *(int *)(v18 + 48);
    int v28 = *(unsigned __int8 *)(v32 + *(int *)(type metadata accessor for ItemMetadata() + 48));
  }
  uint64_t v23 = v64;
  uint64_t v24 = v74;
  if ((v31 & 1) == 0)
  {
    id v22 = v65;
    if (v28)
    {
      uint64_t v43 = v67[11];
      uint64_t v44 = v67[13];
      uint64_t v75 = v11;
      uint64_t v76 = v43;
      uint64_t v45 = v73;
      uint64_t v77 = v73;
      uint64_t v78 = v44;
      v62[1] = type metadata accessor for JobResult();
      uint64_t v75 = v11;
      uint64_t v76 = v43;
      uint64_t v77 = v45;
      uint64_t v78 = v44;
      type metadata accessor for PinningJob.PinItem();
      uint64_t v46 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v24, v23);
      id v47 = v68;
      sub_10096B0D0();
      sub_10096B080();
      double v49 = v48;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v47, v70);
      double v50 = v49 * 1000000000.0;
      if ((~COERCE__INT64(v49 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      if (v50 <= -9.22337204e18)
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      if (v50 >= 9.22337204e18)
      {
LABEL_49:
        __break(1u);
        return result;
      }
      id v51 = v71;
      uint64_t v52 = sub_1003A9380(v71, 0x2000000000000000, (uint64_t)v50, 0x10000000000);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v23);
      sub_1004D4360((uint64_t)v22, v52);
      swift_release();
      goto LABEL_7;
    }
    goto LABEL_33;
  }
  id v22 = v65;
LABEL_19:
  if ((v28 & 1) == 0)
  {
    sub_1003B0B18(v24, v22);
    if ((v17 & 0x800000000000000) == 0) {
      *uint64_t v63 = v17 | 0x800000000000000;
    }
    uint64_t v23 = v64;
    id v22 = v65;
    uint64_t v24 = v74;
    uint64_t v25 = v18;
  }
  uint64_t v33 = v24 + *(int *)(v25 + 48);
  uint64_t result = type metadata accessor for ItemMetadata();
  if (*(unsigned char *)(v33 + *(int *)(result + 44)) == 1)
  {
    uint64_t v34 = v67[11];
    uint64_t v35 = v67[13];
    uint64_t v75 = v11;
    uint64_t v76 = v34;
    uint64_t v36 = v73;
    uint64_t v77 = v73;
    uint64_t v78 = v35;
    uint64_t v74 = type metadata accessor for JobResult();
    uint64_t v75 = v11;
    uint64_t v76 = v34;
    uint64_t v77 = v36;
    uint64_t v78 = v35;
    type metadata accessor for PinningJob.UnpinItem();
    uint64_t v37 = v66;
    id v38 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v24, v23);
    id v39 = v68;
    sub_10096B0D0();
    sub_10096B080();
    double v41 = v40;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v39, v70);
    double v42 = v41 * 1000000000.0;
    if ((~COERCE__INT64(v41 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v42 > -9.22337204e18)
      {
        if (v42 < 9.22337204e18) {
          goto LABEL_39;
        }
        goto LABEL_46;
      }
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  return result;
}

uint64_t sub_1003B0B18(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)*a2;
  uint64_t v5 = sub_10096B0E0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v4[12];
  uint64_t v9 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = *(int *)(type metadata accessor for SnapshotItem() + 48);
  uint64_t v36 = a1;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v15 + *(int *)(v16 + 48)) = 1;
  int v17 = *(unsigned __int8 *)(v15 + *(int *)(v16 + 44));
  uint64_t v18 = v4[11];
  uint64_t v35 = a2;
  uint64_t v19 = v4[13];
  if (v17 != 1)
  {
LABEL_6:
    uint64_t v39 = v9;
    uint64_t v40 = v18;
    uint64_t v41 = v8;
    uint64_t v42 = v19;
    uint64_t v26 = v18;
    type metadata accessor for JobResult();
    uint64_t v39 = v9;
    uint64_t v40 = v26;
    uint64_t v41 = v8;
    uint64_t v42 = v19;
    type metadata accessor for PinningJob.RefreshChildPinStatus();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v36, AssociatedTypeWitness);
    sub_10096B0D0();
    sub_10096B080();
    double v28 = v27;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v38);
    double v29 = v28 * 1000000000.0;
    if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          uint64_t v30 = sub_1003A9380(v13, 0x2000000000000000, (uint64_t)v29, 1);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
          sub_1004D4360((uint64_t)v35, v30);
          return swift_release();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v39 = v9;
  uint64_t v40 = v18;
  uint64_t v41 = v8;
  uint64_t v42 = v19;
  uint64_t v20 = v18;
  v31[1] = type metadata accessor for JobResult();
  uint64_t v32 = v20;
  uint64_t v39 = v9;
  uint64_t v40 = v20;
  uint64_t v41 = v8;
  uint64_t v42 = v19;
  type metadata accessor for PinningJob.UnpinItem();
  uint64_t v33 = v11;
  uint64_t v34 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v36, AssociatedTypeWitness);
  sub_10096B0D0();
  sub_10096B080();
  double v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  double v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v24 < 9.22337204e18)
  {
    uint64_t v25 = sub_1003A9380(v13, 0x2000000000000000, (uint64_t)v24, 0x10000000000);
    uint64_t v11 = v33;
    uint64_t AssociatedTypeWitness = v34;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
    sub_1004D4360((uint64_t)v35, v25);
    swift_release();
    uint64_t v18 = v32;
    goto LABEL_6;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1003B0F5C()
{
  return 0x6D6574692D6E6970;
}

uint64_t sub_1003B0F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003B130C(a1, a2, a3, a4, a5, (uint64_t)&unk_100A883D8, 1, (uint64_t)sub_1003B340C);
}

uint64_t sub_1003B0F98(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = *a2;
  uint64_t v35 = v34;
  uint64_t v33 = *(void *)(v34 + 80);
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v11 = sub_10096D510();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v37 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v34;
  *(void *)(v22 + 16) = v33;
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v35 + 88);
  *(void *)(v22 + 40) = *(void *)(v23 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v15, v11);
  uint64_t v24 = v31;
  *(void *)(v22 + v19) = v32;
  *(void *)(v22 + v20) = a2;
  *(void *)(v22 + v21) = v38;
  uint64_t v25 = (void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v30;
  void *v25 = v24;
  v25[1] = v26;
  uint64_t v27 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v37, (uint64_t)sub_1003B377C, v36, (uint64_t)sub_1003B33A0, v22, v27, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1003B129C(uint64_t a1, uint64_t a2)
{
  return sub_1003B1BC4(a1, a2);
}

uint64_t type metadata accessor for PinningJob.PinItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003B12CC()
{
  return 0x74692D6E69706E75;
}

uint64_t sub_1003B12E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003B130C(a1, a2, a3, a4, a5, (uint64_t)&unk_100A88338, 0, (uint64_t)sub_1003B337C);
}

uint64_t sub_1003B130C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v8;
  uint64_t v15 = *v8;
  uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v17 = (char *)v10 + *(void *)(v15 + 576);
  unint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a1;
  v18[3] = v10;
  v18[4] = a4;
  v18[5] = a5;
  v18[6] = a3;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, void *))(*(void *)v16 + 744);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v19(v17, a7, a8, v18);
  swift_release();

  return swift_release();
}

uint64_t sub_1003B1438(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = *a2;
  uint64_t v35 = v34;
  uint64_t v33 = *(void *)(v34 + 80);
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v11 = sub_10096D510();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v37 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v34;
  *(void *)(v22 + 16) = v33;
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v35 + 88);
  *(void *)(v22 + 40) = *(void *)(v23 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v15, v11);
  uint64_t v24 = v31;
  *(void *)(v22 + v19) = v32;
  *(void *)(v22 + v20) = a2;
  *(void *)(v22 + v21) = v38;
  uint64_t v25 = (void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v30;
  void *v25 = v24;
  v25[1] = v26;
  uint64_t v27 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v37, (uint64_t)sub_1003A946C, v36, (uint64_t)sub_1003B33A0, v22, v27, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1003B173C(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a5;
  uint64_t v31 = a4;
  uint64_t v33 = a3;
  uint64_t v37 = a1;
  uint64_t v7 = *(void *)(*a2 + 600);
  uint64_t v29 = *(void *)(*a2 + 616);
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v34 = sub_10096C890();
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v9 = __chkstk_darwin(v34);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v29 - v10);
  uint64_t v12 = *(void *)(v8 - 8);
  uint64_t v13 = __chkstk_darwin(v9);
  uint64_t v30 = (uint64_t)&v29 - v14;
  uint64_t v15 = *(void *)(v7 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v38 = (char *)&v29 - v19;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v20 = sub_10096D510();
  __chkstk_darwin(v20);
  uint64_t v22 = (uint64_t *)((char *)&v29 - v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v29 - v21, v37, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v22;
    swift_errorRetain();
    v36(0, 0, 0, v24);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v26 = v38;
    (*(void (**)(char *, uint64_t *, uint64_t))(v15 + 32))(v38, v22, v7);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v26, v7);
    uint64_t v27 = v30;
    SnapshotItem.init(_:)((uint64_t)v18, v7, v29, v30);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v12 + 16))(v11, v27, v8);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v8);
    uint64_t v28 = v39;
    sub_10086C908(v11, (uint64_t)a2 + *(void *)(*a2 + 576), 0, 0, 0, v33, a2[15], a2[16], a2[17], v31);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v32 + 8))(v11, v34);
    if (!v28) {
      v36(0, 0, 0, 0);
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v27, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v38, v7);
  }
}

uint64_t sub_1003B1BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_10096C890();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v17 = v34;
  (*(void (**)(char *))(**(void **)(a2 + 32) + 280))(v16);
  if (!v17)
  {
    uint64_t v18 = v31;
    uint64_t v34 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v19 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v15, v13, AssociatedTypeWitness);
      swift_beginAccess();
      sub_1003B32B0((uint64_t)(v3 + 7), (uint64_t)v33);
      uint64_t v31 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v21 = (uint64_t)v27;
      uint64_t v22 = &v27[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v23 = &v27[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v27, v16, AssociatedTypeWitness);
      v24(v22, v15, AssociatedTypeWitness);
      v24(v23, v15, AssociatedTypeWitness);
      uint64_t v25 = v28;
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = sub_1001E3E98((uint64_t)v33, v31, v21);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v25);
      sub_1003B3318((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v15, AssociatedTypeWitness);
    }
  }
  return v10;
}

uint64_t type metadata accessor for PinningJob.UnpinItem()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003B1FE0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1003B1FFC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t, void, void, uint64_t), uint64_t a5)
{
  uint64_t v149 = a5;
  uint64_t v150 = a4;
  uint64_t v139 = a2;
  uint64_t v146 = (void *)*v5;
  uint64_t v8 = v146[75];
  uint64_t v155 = v5;
  uint64_t v9 = (ValueMetadata *)v146[77];
  uint64_t v141 = type metadata accessor for SnapshotMutation();
  uint64_t v135 = *(char **)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v140 = (char *)&v117 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v138 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v148 = (uint64_t)&v117 - v11;
  uint64_t v145 = sub_10096B0E0();
  uint64_t v136 = *(char ***)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v144 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = v9;
  uint64_t v153 = v8;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v117 - v17;
  uint64_t v151 = *(void *)(v13 - 8);
  uint64_t v19 = *(void *)(v151 + 64);
  uint64_t v20 = __chkstk_darwin(v16);
  uint64_t v147 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v143 = (char *)&v117 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v158 = (uint64_t)&v117 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v157 = (char *)&v117 - v26;
  __chkstk_darwin(v25);
  uint64_t v156 = (char *)&v117 - v27;
  uint64_t v137 = (void **)a1;
  uint64_t v28 = *(void *)(a1 + 32);
  uint64_t result = sub_1005152D8();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v134 = a3;
  uint64_t v30 = (char *)v155 + *(void *)(*v155 + 576);
  (*(void (**)(char *, uint64_t))(*(void *)v28 + 240))(v30, 1);
  uint64_t v133 = v30;
  uint64_t v31 = v151;
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 48))(v18, 1, v13);
  if (v32 != 1)
  {
    uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
    uint64_t v46 = (uint64_t)v156;
    uint64_t v128 = v31 + 32;
    uint64_t v127 = v45;
    v45((uint64_t)v156, v18, v13);
    uint64_t v47 = v46 + *(int *)(v13 + 48);
    uint64_t v142 = type metadata accessor for ItemMetadata();
    uint64_t v48 = *(int *)(v142 + 48);
    uint64_t v131 = v47;
    uint64_t v130 = v48;
    uint64_t v49 = v31;
    if (*(unsigned char *)(v47 + v48) == 1)
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      char v51 = FileItem.isDataless.getter(v13, WitnessTable);
      uint64_t v52 = v143;
      if (v51)
      {
        uint64_t v53 = v144;
        sub_10096B0D0();
        sub_10096B080();
        double v55 = v54;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v136[1])(v53, v145);
        double v56 = v55 * 1000000000.0;
        if ((~COERCE__INT64(v55 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_59;
        }
        if (v56 <= -9.22337204e18)
        {
LABEL_60:
          __break(1u);
        }
        else
        {
          uint64_t v57 = v133;
          if (v56 < 9.22337204e18)
          {
            sub_1008B08F0(v46, 0, (uint64_t)v56, 0x10000000000, v137, 0, v134);
LABEL_15:
            uint64_t v58 = (*(uint64_t (**)(char *, uint64_t *))(*(void *)v28 + 472))(v57, v139);
            uint64_t v117 = v59;
            uint64_t v122 = 0;
            uint64_t v60 = sub_10096C1A0();
            uint64_t v61 = v134;
            if (!v60)
            {
LABEL_47:
              swift_bridgeObjectRelease();
              uint64_t v115 = swift_retain();
              v150(v115, 0, 0, 0);
              swift_release_n();
              return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v156, v13);
            }
            uint64_t v62 = 0;
            uint64_t v139 = (uint64_t *)(v49 + 16);
            uint64_t v121 = (void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16);
            uint64_t v125 = (uint64_t (**)(char *, uint64_t))(v136 + 1);
            uint64_t v120 = (void (**)(uint64_t, uint64_t))(v138 + 8);
            uint64_t v136 = (char **)(v49 + 8);
            uint64_t v119 = (void (**)(uint64_t, uint64_t))(v135 + 8);
            unint64_t v118 = 0x80000001009A0160;
            uint64_t v129 = v58;
            while (1)
            {
              BOOL v63 = sub_10096C130();
              sub_10096C0E0();
              if (v63)
              {
                unint64_t v64 = v58
                    + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
                    + *(void *)(v49 + 72) * v62;
                uint64_t v138 = *(void *)(v49 + 16);
                uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v138)(v157, v64, v13);
              }
              else
              {
                uint64_t result = sub_10096CC20();
                if (v19 != 8) {
                  goto LABEL_62;
                }
                uint64_t v159 = result;
                uint64_t v138 = *v139;
                ((void (*)(char *, uint64_t *, uint64_t))v138)(v157, &v159, v13);
                uint64_t result = swift_unknownObjectRelease();
              }
              uint64_t v65 = v142;
              if (__OFADD__(v62, 1))
              {
                __break(1u);
LABEL_50:
                __break(1u);
LABEL_51:
                __break(1u);
LABEL_52:
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
LABEL_55:
                __break(1u);
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
LABEL_59:
                __break(1u);
                goto LABEL_60;
              }
              uint64_t v133 = (char *)(v62 + 1);
              uint64_t v66 = v158;
              v127(v158, v157, v13);
              uint64_t v67 = v66 + *(int *)(v13 + 48);
              if (*(unsigned char *)(v67 + *(int *)(v65 + 44)) == 1 && *(unsigned char *)(v131 + v130) == 1)
              {
                uint64_t v68 = v146[76];
                uint64_t v69 = (void *)v146[78];
                long long v71 = v152;
                uint64_t v70 = v153;
                uint64_t v159 = v153;
                uint64_t v160 = v68;
                uint64_t v161 = v152;
                uint64_t v162 = v69;
                uint64_t v135 = (char *)type metadata accessor for JobResult();
                uint64_t v159 = v70;
                uint64_t v160 = v68;
                uint64_t v161 = v71;
                uint64_t v162 = v69;
                type metadata accessor for PinningJob.UnpinItem();
                (*v121)(v148, v158, AssociatedTypeWitness);
                uint64_t v72 = v144;
                sub_10096B0D0();
                sub_10096B080();
                double v74 = v73;
                uint64_t result = (*v125)(v72, v145);
                double v75 = v74 * 1000000000.0;
                if ((~COERCE__INT64(v74 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                  goto LABEL_50;
                }
                if (v75 <= -9.22337204e18) {
                  goto LABEL_51;
                }
                uint64_t v61 = v134;
                if (v75 >= 9.22337204e18) {
                  goto LABEL_53;
                }
                uint64_t v76 = (uint64_t)v75;
                swift_allocObject();
                uint64_t v77 = v148;
                uint64_t v78 = sub_100610B30(v148, 0x2000000000000000, v76, 0x10000000000);
                (*v120)(v77, AssociatedTypeWitness);
                sub_1004D4360(v61, v78);
                swift_release();
                uint64_t v49 = v151;
              }
              uint64_t v132 = swift_getWitnessTable();
              char v79 = FileItem.isDataless.getter(v13, v132);
              ((void (*)(char *, char *, uint64_t))v138)(v52, v156, v13);
              if ((v79 & 1) == 0) {
                break;
              }
              char v80 = v52[*(int *)(v13 + 48) + *(int *)(v142 + 48)];
              uint64_t v135 = *v136;
              ((void (*)(char *, uint64_t))v135)(v52, v13);
              if ((v80 & 1) == 0) {
                goto LABEL_36;
              }
              uint64_t v81 = v144;
              sub_10096B0D0();
              sub_10096B080();
              double v83 = v82;
              uint64_t result = (*v125)(v81, v145);
              double v84 = v83 * 1000000000.0;
              if ((~COERCE__INT64(v83 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                goto LABEL_52;
              }
              uint64_t v85 = v142;
              if (v84 <= -9.22337204e18) {
                goto LABEL_54;
              }
              if (v84 >= 9.22337204e18) {
                goto LABEL_55;
              }
              uint64_t v86 = v61;
              uint64_t v87 = v122;
              sub_1008B08F0(v158, 0, (uint64_t)v84, 0x10000000000, v137, 0, v86);
              if (v87)
              {
                swift_release();
                uint64_t v116 = (void (*)(char *, uint64_t))v135;
                ((void (*)(uint64_t, uint64_t))v135)(v158, v13);
                swift_bridgeObjectRelease();
                v116(v156, v13);
                swift_errorRetain();
                v150(0, 0, 0, v87);
                swift_errorRelease();
                return swift_errorRelease();
              }
              uint64_t v122 = 0;
              uint64_t v61 = v134;
LABEL_37:
              int v88 = *(unsigned __int8 *)(v67 + *(int *)(v85 + 48));
              uint64_t v89 = v85;
              int v90 = *(unsigned __int8 *)(v131 + v130);
              if (v88 == v90)
              {
                uint64_t v58 = v129;
                ((void (*)(uint64_t, uint64_t))v135)(v158, v13);
              }
              else
              {
                uint64_t v91 = v147;
                uint64_t v126 = v62;
                uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v138;
                ((void (*)(char *, uint64_t, uint64_t))v138)(v147, v158, v13);
                v91[*(int *)(v13 + 48) + *(int *)(v89 + 48)] = v90;
                uint64_t v93 = v146[76];
                uint64_t v94 = (void *)v146[78];
                uint64_t v159 = v153;
                uint64_t v160 = v93;
                uint64_t v123 = v93;
                uint64_t v161 = v152;
                uint64_t v162 = v94;
                uint64_t v124 = v94;
                uint64_t v95 = type metadata accessor for JobResult();
                __chkstk_darwin(v95);
                strcpy((char *)&v117 - 32, "from to  reason ");
                uint64_t v159 = v13;
                uint64_t v160 = v13;
                uint64_t v161 = &type metadata for Fields;
                uint64_t v162 = &type metadata for String;
                uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
                uint64_t v97 = (uint64_t)v140;
                unint64_t v98 = &v140[TupleTypeMetadata[12]];
                uint64_t v99 = TupleTypeMetadata[16];
                uint64_t v100 = &v140[TupleTypeMetadata[20]];
                v92(v140, v158, v13);
                v92(v98, (uint64_t)v91, v13);
                uint64_t v62 = v126;
                *(void *)(v97 + v99) = 0x800000000000000;
                *(void *)uint64_t v100 = 0xD000000000000019;
                *((void *)v100 + 1) = v118;
                uint64_t v61 = v134;
                uint64_t v101 = v141;
                swift_storeEnumTagMultiPayload();
                sub_1005917A0(v61, v97);
                (*v119)(v97, v101);
                char v102 = FileItem.isDataless.getter(v13, v132);
                uint64_t v58 = v129;
                if ((v102 & 1) == 0)
                {
                  uint64_t v159 = v153;
                  uint64_t v160 = v123;
                  uint64_t v161 = v152;
                  uint64_t v162 = v124;
                  type metadata accessor for Maintenance.ResolveItemEvictability();
                  (*v121)(v148, v158, AssociatedTypeWitness);
                  Swift::String v103 = v144;
                  sub_10096B0D0();
                  sub_10096B080();
                  double v105 = v104;
                  uint64_t result = (*v125)(v103, v145);
                  double v106 = v105 * 1000000000.0;
                  if ((~COERCE__INT64(v105 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                    goto LABEL_56;
                  }
                  if (v106 <= -9.22337204e18) {
                    goto LABEL_57;
                  }
                  if (v106 >= 9.22337204e18) {
                    goto LABEL_58;
                  }
                  uint64_t v107 = v148;
                  uint64_t v108 = sub_1003A9380(v148, 0, (uint64_t)v106, 0x10000000000);
                  (*v120)(v107, AssociatedTypeWitness);
                  sub_1004D4360(v61, v108);
                  swift_release();
                  if (FileItem.kind.getter(v13, v132) == 1)
                  {
                    uint64_t v109 = v155[15];
                    uint64_t v110 = v155[16];
                    uint64_t v111 = v155[17];
                    swift_allocObject();
                    uint64_t v112 = sub_100610B30(v158, v109, v110, v111);
                    sub_1004D4360(v61, v112);
                    swift_release();
                  }
                }
                int v113 = (void (*)(uint64_t, uint64_t))v135;
                ((void (*)(char *, uint64_t))v135)(v147, v13);
                uint64_t v114 = v113;
                uint64_t v49 = v151;
                uint64_t v52 = v143;
                v114(v158, v13);
              }
              ++v62;
              if (v133 == (char *)sub_10096C1A0()) {
                goto LABEL_47;
              }
            }
            uint64_t v135 = *v136;
            ((void (*)(char *, uint64_t))v135)(v52, v13);
LABEL_36:
            uint64_t v85 = v142;
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v52 = v143;
    }
    uint64_t v57 = v133;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v33 = swift_allocError();
  uint64_t v35 = v34;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v159 = v36;
  uint64_t v160 = v37;
  uint64_t v161 = (ValueMetadata *)AssociatedConformanceWitness;
  uint64_t v162 = (void *)v39;
  uint64_t v40 = type metadata accessor for FileItemVersion();
  sub_10096C890();
  sub_100033BE8(&qword_100AD7360);
  uint64_t v41 = AssociatedTypeWitness;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v43 = v35 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v44 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v35, v133, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v43, 1, 1, v40);
  *(void *)(v35 + v44) = 0;
  swift_storeEnumTagMultiPayload();
  v150(0, 0, 0, v33);
  return swift_errorRelease();
}

uint64_t type metadata accessor for PinningJob.RefreshChildPinStatus()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003B32B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(qword_100ACE608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B3318(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC(qword_100ACE608);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003B337C(uint64_t a1)
{
  return sub_1003B3424(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1003B1438);
}

uint64_t sub_1003B33A0()
{
  return sub_1003B3688();
}

uint64_t sub_1003B33BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B340C(uint64_t a1)
{
  return sub_1003B3424(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1003B0F98);
}

uint64_t sub_1003B3424(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1003B3440()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B3480()
{
  char v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 392))(0);
  return sub_100610458(v1 & 1) & 1;
}

uint64_t sub_1003B34E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B351C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v2 = *(void *)(sub_10096D510() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1) {
    swift_errorRelease();
  }
  else {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B3688()
{
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003B173C(v0 + v2, *(uint64_t **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, void, void, uint64_t))(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t type metadata accessor for PinningJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003B3780(NSObject *a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v144 = a6;
  *(void *)&long long v146 = a3;
  *((void *)&v146 + 1) = a4;
  unint64_t v147 = (unint64_t)a2;
  uint64_t v9 = *(void *)(*a5 + 80);
  uint64_t v10 = *(void *)(*a5 + 104);
  uint64_t v11 = *(void *)(*a5 + 96);
  uint64_t v148 = *(void *)(*a5 + 88);
  uint64_t v8 = v148;
  uint64_t v149 = v9;
  uint64_t v150 = v10;
  uint64_t v151 = v11;
  uint64_t v12 = type metadata accessor for ItemReconciliation();
  uint64_t v138 = *(void *)(v12 - 8);
  uint64_t v139 = v12;
  __chkstk_darwin(v12);
  uint64_t v137 = ((char *)&v115 - v13);
  uint64_t v125 = type metadata accessor for SnapshotMutation();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (char *)&v115 - v14;
  uint64_t v122 = type metadata accessor for SnapshotMutation();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v115 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = sub_10096C890();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v17 = __chkstk_darwin(v131);
  uint64_t v117 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v118 = (char *)&v115 - v20;
  uint64_t v132 = AssociatedTypeWitness;
  uint64_t v134 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v127 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v119 = (char *)&v115 - v23;
  uint64_t v148 = v9;
  uint64_t v149 = v8;
  uint64_t v150 = v11;
  uint64_t v151 = v10;
  uint64_t v129 = type metadata accessor for ReconciliationMutation();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = (char *)&v115 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_10096C890();
  uint64_t v135 = *(void *)(v26 - 8);
  uint64_t v136 = v26;
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v143 = (char *)&v115 - v28;
  uint64_t v141 = v25;
  uint64_t v140 = *(void *)(v25 - 8);
  __chkstk_darwin(v27);
  uint64_t v133 = (char *)&v115 - v29;
  uint64_t v148 = v9;
  uint64_t v149 = v8;
  uint64_t v150 = v11;
  uint64_t v151 = v10;
  uint64_t v30 = type metadata accessor for ItemReconciliation();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v115 - v32;
  uint64_t v34 = *(void (**)(char *, NSObject *, uint64_t))(v31 + 16);
  uint64_t v145 = a1;
  v34((char *)&v115 - v32, a1, v30);
  unint64_t v35 = v147;
  if (v147 >> 7 == 0xFFFFFFFF)
  {
    uint64_t v116 = v11;
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    uint64_t v38 = v8;
    uint64_t v39 = (void *)*((void *)&v146 + 1);
    uint64_t v40 = v152;
    uint64_t v41 = sub_10082AD38((uint64_t)a5, v30);
    uint64_t v152 = v40;
    if (v40) {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }
    unint64_t v45 = v41;
    *(void *)&long long v142 = v42;
    *((void *)&v142 + 1) = v43;
    uint64_t v47 = v39;
    uint64_t v8 = v38;
    uint64_t v10 = v37;
    uint64_t v9 = v36;
    uint64_t v11 = v116;
    uint64_t v46 = v146;
    unint64_t v35 = v147;
  }
  else
  {
    unint64_t v45 = v147;
    uint64_t v47 = (void *)*((void *)&v146 + 1);
    uint64_t v46 = v146;
    long long v142 = v146;
  }
  sub_1003B472C(v35, v46, v47);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (v45 >> 62)
  {
    if (v45 >> 62 == 1)
    {
      uint64_t v48 = v137;
      uint64_t v49 = sub_100827044(v30, (uint64_t)v137);
      double v50 = (void *)(*(uint64_t (**)(uint64_t))(*a5 + 176))(v49);
      uint64_t v51 = (*(uint64_t (**)(void))(*(void *)v144 + 184))();
      sub_10040894C(v45, v142, *((void **)&v142 + 1), v48, v50, v51);
      (*(void (**)(NSObject *, uint64_t))(v138 + 8))(v48, v139);
      swift_release();
      swift_release();
      return sub_10010D75C(v45);
    }
    else
    {
      BOOL v52 = (uint64_t)v45 < (uint64_t)0x8000000000000002;
      uint64_t v53 = v140;
      uint64_t v54 = v135;
      uint64_t v55 = v136;
      double v56 = v143;
      if (!v52 || v142 != 0)
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v135 + 16))(v143, v145, v136);
        uint64_t v57 = v56;
        uint64_t v58 = v141;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v57, 1, v141) == 1)
        {
          (*(void (**)(char *, uint64_t))(v54 + 8))(v143, v55);
          uint64_t v59 = v145;
          uint64_t v60 = (char *)v145 + *(int *)(v30 + 52);
          uint64_t v61 = v117;
          uint64_t v62 = v131;
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v117, v60, v131);
          uint64_t v63 = v134;
          uint64_t v64 = v132;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v61, 1, v132) == 1)
          {
            uint64_t v114 = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v61, v62);
            __chkstk_darwin(v114);
            *(&v115 - 6) = v9;
            *(&v115 - 5) = v8;
            *(&v115 - 4) = v11;
            *(&v115 - 3) = v10;
            *(&v115 - 2) = (uint64_t)v59;
            fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1003B4820, (uint64_t)(&v115 - 8), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Reconciliation.swift", 109, 2, 59);
          }
          uint64_t v65 = v127;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v127, v61, v64);
          uint64_t v148 = v9;
          uint64_t v149 = v8;
          uint64_t v150 = v11;
          uint64_t v151 = v10;
          uint64_t v66 = type metadata accessor for JobResult();
          uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          *((void *)&v146 + 1) = v66;
          unint64_t v147 = (unint64_t)v67;
          uint64_t v68 = (uint64_t)v126;
          v67(v126, v65, v64);
          uint64_t v69 = v141;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v71 = swift_getAssociatedConformanceWitness();
          uint64_t v148 = v69;
          uint64_t v149 = v64;
          uint64_t v150 = AssociatedConformanceWitness;
          uint64_t v151 = v71;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v72 = v129;
          swift_storeEnumTagMultiPayload();
          uint64_t v73 = v144;
          sub_100591758(v144, v68);
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v68, v72);
          sub_100033BE8((uint64_t *)&unk_100AD7510);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v75 = *(int *)(TupleTypeMetadata3 + 48);
          uint64_t v76 = (uint64_t)v123;
          uint64_t v77 = &v123[*(int *)(TupleTypeMetadata3 + 64)];
          uint64_t v78 = v127;
          ((void (*)(char *, char *, uint64_t))v147)(v123, v127, v64);
          *(unsigned char *)(v76 + v75) = 0;
          *(void *)uint64_t v77 = 0xD000000000000016;
          *((void *)v77 + 1) = 0x80000001009A0210;
          uint64_t v79 = v125;
          swift_storeEnumTagMultiPayload();
          sub_1005917E8(v73, v76);
          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v76, v79);
          return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v78, v64);
        }
        else
        {
          char v80 = v133;
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v133, v143, v58);
          uint64_t v148 = v9;
          uint64_t v149 = v8;
          uint64_t v150 = v11;
          uint64_t v151 = v10;
          type metadata accessor for JobResult();
          uint64_t v81 = (void (*)(void, void, void))(v53 + 16);
          double v82 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
          uint64_t v83 = (uint64_t)v126;
          *((void *)&v146 + 1) = v82;
          unint64_t v147 = (unint64_t)v81;
          v82(v126, v80, v58);
          uint64_t v84 = swift_getAssociatedConformanceWitness();
          uint64_t v85 = v132;
          uint64_t v86 = v141;
          uint64_t v87 = swift_getAssociatedConformanceWitness();
          uint64_t v148 = v86;
          uint64_t v149 = v85;
          uint64_t v150 = v84;
          uint64_t v151 = v87;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v88 = v129;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v144, v83);
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v83, v88);
          uint64_t v89 = *(int *)(v30 + 52);
          uint64_t v90 = v85;
          uint64_t v91 = v130;
          uint64_t v92 = v118;
          uint64_t v93 = v131;
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v118, (char *)v145 + v89, v131);
          uint64_t v94 = v134;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v92, 1, v90) == 1)
          {
            (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
            sub_100033BE8((uint64_t *)&unk_100AD7510);
            uint64_t v95 = swift_getTupleTypeMetadata3();
            uint64_t v96 = *(int *)(v95 + 48);
            uint64_t v97 = (uint64_t)v120;
            unint64_t v98 = &v120[*(int *)(v95 + 64)];
            uint64_t v99 = v133;
            (*((void (**)(char *, char *, uint64_t))&v146 + 1))(v120, v133, v86);
            *(unsigned char *)(v97 + v96) = 0;
            *(void *)unint64_t v98 = 0xD000000000000016;
            *((void *)v98 + 1) = 0x80000001009A0210;
            uint64_t v100 = v122;
            swift_storeEnumTagMultiPayload();
            sub_1005917A0(v144, v97);
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v97, v100);
            return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v99, v86);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v119, v92, v90);
            sub_100033BE8((uint64_t *)&unk_100AD7510);
            uint64_t v101 = swift_getTupleTypeMetadata3();
            uint64_t v102 = *(int *)(v101 + 48);
            uint64_t v103 = v86;
            uint64_t v104 = (uint64_t)v120;
            double v105 = &v120[*(int *)(v101 + 64)];
            (*((void (**)(char *, char *, uint64_t))&v146 + 1))(v120, v133, v103);
            *(unsigned char *)(v104 + v102) = 0;
            *(void *)double v105 = 0xD000000000000015;
            *((void *)v105 + 1) = 0x80000001009A0230;
            uint64_t v106 = v122;
            swift_storeEnumTagMultiPayload();
            uint64_t v107 = v144;
            sub_1005917A0(v144, v104);
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v104, v106);
            uint64_t v108 = swift_getTupleTypeMetadata3();
            uint64_t v109 = *(int *)(v108 + 48);
            uint64_t v110 = (uint64_t)v123;
            uint64_t v111 = &v123[*(int *)(v108 + 64)];
            uint64_t v112 = v119;
            (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v123, v119, v90);
            *(unsigned char *)(v110 + v109) = 0;
            *(void *)uint64_t v111 = 0xD000000000000015;
            *((void *)v111 + 1) = 0x80000001009A0230;
            uint64_t v113 = v125;
            swift_storeEnumTagMultiPayload();
            sub_1005917E8(v107, v110);
            (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v110, v113);
            (*(void (**)(char *, uint64_t))(v94 + 8))(v112, v90);
            return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v133, v141);
          }
        }
      }
    }
  }
  else
  {
    sub_10040894C(v45, v142, *((void **)&v142 + 1), v145, a5, v144);
    return sub_10010D75C(v45);
  }
  return result;
}

unint64_t sub_1003B472C(unint64_t result, uint64_t a2, void *a3)
{
  if (result >> 7 != 0xFFFFFFFF) {
    return sub_10010D750(result, a2, a3);
  }
  return result;
}

uint64_t sub_1003B4740()
{
  sub_10096CBD0(50);
  v1._object = (void *)0x80000001009A0250;
  v1._countAndFlagsBits = 0xD000000000000030;
  sub_10096BDC0(v1);
  type metadata accessor for ItemReconciliation();
  swift_getWitnessTable();
  sub_10096D270();
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  sub_10096BDC0(v2);
  return 0;
}

uint64_t sub_1003B4820()
{
  return sub_1003B4740();
}

uint64_t sub_1003B4830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1 + *(void *)(**(void **)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v5(a1, v3, AssociatedTypeWitness);
}

uint64_t sub_1003B48CC()
{
  type metadata accessor for Propagation.UpdateItem();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 640));
  }
  else
  {
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    uint64_t v1 = &static Fields.all;
  }
  return *v1;
}

BOOL sub_1003B4978(int8x16_t *a1)
{
  return sub_1003B49A8(a1, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
}

BOOL sub_1003B4990(int8x16_t *a1)
{
  return sub_1003B49A8(a1, (void (*)(void, _OWORD *))type metadata accessor for Propagation.DeleteItem);
}

BOOL sub_1003B49A8(int8x16_t *a1, void (*a2)(void, _OWORD *))
{
  int8x16_t v2 = vextq_s8(a1[2], a1[2], 8uLL);
  v4[0] = vextq_s8(a1[1], a1[1], 8uLL);
  v4[1] = v2;
  a2(0, v4);
  return swift_dynamicCastClass() != 0;
}

uint64_t sub_1003B4A08()
{
  type metadata accessor for Propagation.DeleteItem();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return *(unsigned char *)(result + *(void *)(*(void *)result + 664)) & 1;
  }
  return result;
}

uint64_t sub_1003B4A78()
{
  return *(void *)(*(void *)v0 + 120);
}

uint64_t sub_1003B4A84()
{
  return *(void *)(*(void *)v0 + 136);
}

uint64_t sub_1003B4A90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  HIDWORD(v48) = a8;
  uint64_t v57 = a7;
  uint64_t v62 = a6;
  uint64_t v63 = a5;
  int v52 = a4;
  uint64_t v51 = a3;
  uint64_t v64 = a2;
  uint64_t v60 = a12;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 552);
  uint64_t v16 = *(void *)(*a1 + 568);
  uint64_t v58 = a10;
  uint64_t v59 = a11;
  uint64_t v54 = type metadata accessor for SnapshotItem();
  uint64_t v50 = sub_10096C890();
  uint64_t v61 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v48 - v17;
  *(void *)a9 = a1;
  uint64_t v18 = *(void *)(v14 + 544);
  uint64_t v49 = a1;
  uint64_t v19 = *(void *)(v14 + 560);
  uint64_t v65 = v15;
  uint64_t v66 = v18;
  uint64_t v67 = v16;
  uint64_t v68 = v19;
  uint64_t v20 = (int *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  double v56 = &a9[v20[13]];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = v22;
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v68 = v24;
  type metadata accessor for FileItemVersion();
  uint64_t v25 = sub_10096C890();
  uint64_t v26 = *(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 16);
  uint64_t v27 = v56;
  uint64_t v55 = *(void *)(v25 - 8);
  double v56 = (char *)v25;
  v26(v27, v64);
  uint64_t v28 = &a9[v20[14]];
  *(void *)uint64_t v28 = v51;
  v28[8] = v52 & 1;
  uint64_t v29 = &a9[v20[15]];
  swift_getAssociatedTypeWitness();
  uint64_t v30 = v50;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v31 = sub_10096C890();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v29, v63, v31);
  uint64_t v33 = v62;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v34(&a9[v20[16]], (uint64_t)v62, v30);
  unint64_t v35 = v53;
  v34(v53, (uint64_t)v33, v30);
  uint64_t v36 = *(void *)(v54 - 8);
  uint64_t v37 = v35;
  uint64_t v38 = v35;
  uint64_t v39 = v54;
  if ((*(unsigned int (**)(char *, uint64_t))(v36 + 48))(v38, 1) == 1)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
    v40(v37, v30);
  }
  else
  {
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    int v42 = FileItem.kind.getter(v39, WitnessTable);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v39);
    swift_release();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
    if (v42 != 1)
    {
      v40(v62, v30);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v63, v31);
      uint64_t result = (*(uint64_t (**)(uint64_t, char *))(v55 + 8))(v64, v56);
      *(void *)&a9[v20[17]] = v57;
      a9[v20[18]] = BYTE4(v48) & 1;
      goto LABEL_6;
    }
  }
  uint64_t v43 = v30;
  unint64_t v44 = v57 & 0xFFFFFFFFFFFFFFF7;
  v40(v62, v43);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v63, v31);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *))(v55 + 8))(v64, v56);
  *(void *)&a9[v20[17]] = v44;
  a9[v20[18]] = 0;
LABEL_6:
  *(void *)&a9[v20[19]] = v58;
  uint64_t v46 = &a9[v20[20]];
  uint64_t v47 = v60;
  *(void *)uint64_t v46 = v59;
  *((void *)v46 + 1) = v47;
  return result;
}

uint64_t sub_1003B4FE8(uint64_t a1, unsigned int (*a2)(unsigned __int8 *, uint64_t, uint64_t), uint64_t a3, int8x16_t *a4)
{
  uint64_t v267 = a3;
  uint64_t v262 = a2;
  uint64_t v281 = a1;
  uint64_t v5 = a4[1].i64[0];
  uint64_t v8 = a4[2].i64[0];
  uint64_t v7 = a4[2].i64[1];
  uint64_t v285 = (unsigned int (*)(void, void, void))a4[1].i64[1];
  uint64_t v6 = v285;
  uint64_t v286 = v5;
  uint64_t v9 = (unsigned int (*)(void, void, void))v5;
  unint64_t v283 = (unsigned int (*)(void, void, void))v5;
  uint64_t v287 = v7;
  uint64_t v288 = v8;
  uint64_t v260 = (void (*)(char *, uint64_t))type metadata accessor for Propagation.PropagationError();
  uint64_t v258 = sub_10096C890();
  uint64_t v257 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  uint64_t v261 = (char *)&v224 - v10;
  uint64_t v285 = v9;
  uint64_t v286 = (uint64_t)v6;
  uint64_t v287 = v8;
  uint64_t v288 = v7;
  uint64_t v273 = type metadata accessor for ReconciliationMutation();
  uint64_t v266 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  uint64_t v265 = (uint64_t)&v224 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v253 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v232 = (char *)&v224 - v13;
  uint64_t v14 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v237 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v247 = (char *)&v224 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v254 = AssociatedTypeWitness;
  uint64_t v285 = (unsigned int (*)(void, void, void))AssociatedTypeWitness;
  uint64_t v286 = v16;
  uint64_t v231 = AssociatedConformanceWitness;
  uint64_t v287 = AssociatedConformanceWitness;
  uint64_t v288 = v18;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v245 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v235 = (char *)&v224 - v20;
  uint64_t v238 = type metadata accessor for SnapshotItem();
  uint64_t v234 = sub_10096C890();
  uint64_t v233 = *(void *)(v234 - 8);
  __chkstk_darwin(v234);
  uint64_t v251 = (char *)&v224 - v21;
  uint64_t v246 = v19;
  uint64_t v242 = sub_10096C890();
  uint64_t v240 = *(void *)(v242 - 8);
  uint64_t v22 = __chkstk_darwin(v242);
  v241 = (char *)&v224 - v23;
  uint64_t v249 = v14;
  uint64_t v252 = *(void *)(v14 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  v236 = (char *)&v224 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v243 = (char *)&v224 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v255 = (char *)&v224 - v29;
  uint64_t v269 = a4[-1].i64[1];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v256 = (char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v259 = (char *)&v224 - v33;
  __chkstk_darwin(v32);
  uint64_t v263 = (char *)&v224 - v34;
  uint64_t v35 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v271 = *(void *)(v35 - 8);
  uint64_t v272 = v35;
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v239 = (char *)&v224 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v270 = (char *)&v224 - v38;
  uint64_t v282 = swift_getAssociatedTypeWitness();
  uint64_t v284 = *(void *)(v282 - 8);
  uint64_t v39 = __chkstk_darwin(v282);
  uint64_t v248 = (uint64_t)&v224 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  int v42 = (char *)&v224 - v41;
  uint64_t v268 = (uint64_t)v6;
  uint64_t v285 = v6;
  uint64_t v286 = (uint64_t)v283;
  uint64_t v264 = v7;
  uint64_t v287 = v7;
  uint64_t v288 = v8;
  uint64_t v274 = v8;
  uint64_t v276 = type metadata accessor for ItemReconciliation();
  uint64_t v43 = sub_10096C890();
  uint64_t v278 = *(void *)(v43 - 8);
  uint64_t v279 = v43;
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v275 = (char *)&v224 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v250 = (char *)&v224 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v224 - v49;
  uint64_t v51 = __chkstk_darwin(v48);
  uint64_t v53 = (char *)&v224 - v52;
  uint64_t v54 = __chkstk_darwin(v51);
  double v56 = (char *)&v224 - v55;
  uint64_t v57 = __chkstk_darwin(v54);
  uint64_t v59 = (char *)&v224 - v58;
  uint64_t v60 = __chkstk_darwin(v57);
  uint64_t v62 = (char *)&v224 - v61;
  __chkstk_darwin(v60);
  uint64_t v64 = (char *)&v224 - v63;
  v277 = a4;
  sub_1003B4830((uint64_t)v42);
  uint64_t v65 = v280;
  sub_1000DF200((uint64_t)v42, (uint64_t)v64);
  if (v65) {
    return (*(uint64_t (**)(char *, uint64_t))(v284 + 8))(v42, v282);
  }
  uint64_t v229 = (unsigned __int8 *)v62;
  uint64_t v67 = v275;
  uint64_t v227 = v59;
  uint64_t v228 = v56;
  uint64_t v226 = v53;
  uint64_t v224 = v50;
  v280 = v64;
  uint64_t v230 = 0;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v284 + 8);
  v284 += 8;
  v225 = v68;
  v68((uint64_t)v42, v282);
  BOOL v69 = sub_1003B49A8(v277, (void (*)(void, _OWORD *))type metadata accessor for Propagation.DeleteItem);
  uint64_t v70 = v278;
  uint64_t v71 = *(void (**)(unsigned __int8 *, char *, uint64_t))(v278 + 16);
  uint64_t v72 = v276;
  if (!v69)
  {
    uint64_t v81 = v229;
    uint64_t v83 = v279;
    double v82 = v280;
    uint64_t v275 = *(char **)(v278 + 16);
    v71(v229, v280, v279);
    uint64_t v84 = *(void *)(v72 - 8);
    uint64_t v262 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v84 + 48);
    if (v262(v81, 1, v72) == 1)
    {
      uint64_t v85 = *(void (**)(unsigned __int8 *, uint64_t))(v70 + 8);
      v85(v81, v83);
      uint64_t v86 = v83;
      return ((uint64_t (*)(char *, uint64_t))v85)(v280, v86);
    }
    int v111 = v81[*(int *)(v72 + 56)];
    uint64_t v112 = *(void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v261 = (char *)(v84 + 8);
    uint64_t v260 = v112;
    v112((char *)v81, v72);
    LODWORD(v258) = v111;
    BOOL v113 = v111 == 4;
    uint64_t v114 = v272;
    if (v113)
    {
      uint64_t v85 = *(void (**)(unsigned __int8 *, uint64_t))(v70 + 8);
      uint64_t v86 = v279;
      return ((uint64_t (*)(char *, uint64_t))v85)(v280, v86);
    }
    uint64_t v115 = v227;
    uint64_t v116 = v82;
    uint64_t v117 = v279;
    ((void (*)(char *, char *, uint64_t))v275)(v227, v116, v279);
    if (v262((unsigned __int8 *)v115, 1, v72) == 1)
    {
      (*(void (**)(char *, uint64_t))(v278 + 8))(v115, v117);
      BOOL v118 = 0;
    }
    else
    {
      uint64_t v120 = v270;
      uint64_t v119 = v271;
      (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v270, v115, v114);
      v260(v115, v72);
      uint64_t v121 = *(void *)&v120[*(int *)(v114 + 36)];
      (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v114);
      BOOL v118 = (v121 & 0x51) != 0;
    }
    uint64_t v122 = v228;
    uint64_t v123 = (void (*)(char *, char *, uint64_t))v275;
    ((void (*)(char *, char *, uint64_t))v275)(v228, v280, v117);
    uint64_t v124 = v269;
    uint64_t v125 = *(unsigned __int8 **)(v269 + 16);
    uint64_t v126 = v263;
    uint64_t v127 = v277;
    uint64_t v257 = v269 + 16;
    uint64_t v229 = v125;
    ((void (*)(char *, uint64_t, int8x16_t *))v125)(v263, v289, v277);
    if (v118)
    {
      (*(void (**)(char *, int8x16_t *))(v124 + 8))(v126, v127);
      v270 = *(char **)(v278 + 8);
      ((void (*)(char *, uint64_t))v270)(v122, v117);
      uint64_t v128 = v280;
LABEL_33:
      uint64_t v150 = v128;
      return ((uint64_t (*)(char *, uint64_t))v270)(v150, v279);
    }
    uint64_t v129 = v226;
    v123(v226, v122, v117);
    uint64_t v130 = v276;
    if (v262((unsigned __int8 *)v129, 1, v276) == 1)
    {
      uint64_t v131 = *(void (**)(char *, uint64_t))(v278 + 8);
      v131(v122, v117);
      v270 = (char *)v131;
      v131(v129, v117);
      uint64_t v132 = v269;
      uint64_t v133 = v259;
      uint64_t v134 = v277;
      (*(void (**)(char *, char *, int8x16_t *))(v269 + 32))(v259, v263, v277);
    }
    else
    {
      BOOL v135 = sub_100827AAC(v130);
      v270 = *(char **)(v278 + 8);
      ((void (*)(char *, uint64_t))v270)(v122, v117);
      v260(v129, v130);
      uint64_t v132 = v269;
      uint64_t v133 = v259;
      uint64_t v134 = v277;
      (*(void (**)(char *, char *, int8x16_t *))(v269 + 32))(v259, v263, v277);
      if (v135)
      {
        uint64_t v136 = *(void (**)(char *, int8x16_t *))(v132 + 8);
        v136(v133, v134);
        uint64_t v128 = v280;
        goto LABEL_31;
      }
    }
    uint64_t v128 = v280;
    BOOL v137 = sub_1003B49A8(v134, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
    uint64_t v136 = *(void (**)(char *, int8x16_t *))(v132 + 8);
    v136(v133, v134);
    if (!v137) {
      goto LABEL_33;
    }
LABEL_31:
    uint64_t v138 = v289;
    if ((sub_1003B48CC() & 0x10) == 0)
    {
      uint64_t v285 = v283;
      uint64_t v286 = v268;
      uint64_t v287 = v274;
      uint64_t v288 = v264;
      uint64_t v284 = type metadata accessor for JobResult();
      uint64_t v139 = swift_getAssociatedTypeWitness();
      uint64_t v140 = swift_getAssociatedConformanceWitness();
      uint64_t v141 = v282;
      uint64_t v142 = swift_getAssociatedConformanceWitness();
      uint64_t v285 = (unsigned int (*)(void, void, void))v139;
      uint64_t v286 = v141;
      uint64_t v287 = v140;
      uint64_t v288 = v142;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v143 = v128;
      uint64_t v144 = swift_getTupleTypeMetadata2();
      uint64_t v145 = v265;
      uint64_t v146 = v265 + *(int *)(v144 + 48);
      sub_1003B4830(v265);
      swift_storeEnumTagMultiPayload();
      uint64_t v147 = sub_1003B48CC();
      long long v148 = *(_OWORD *)(*(void *)v138 + 120);
      *(void *)uint64_t v146 = v147;
      *(_OWORD *)(v146 + 8) = v148;
      swift_storeEnumTagMultiPayload();
      uint64_t v149 = v273;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v267, v145);
      (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v145, v149);
      uint64_t v150 = v143;
      return ((uint64_t (*)(char *, uint64_t))v270)(v150, v279);
    }
    uint64_t v263 = (char *)v136;
    uint64_t v152 = v224;
    uint64_t v153 = v128;
    uint64_t v154 = v279;
    uint64_t v155 = (void (*)(char *, char *, uint64_t))v275;
    ((void (*)(char *, char *, uint64_t))v275)(v224, v153, v279);
    uint64_t v156 = v256;
    ((void (*)(char *, uint64_t, int8x16_t *))v229)(v256, v138, v134);
    if (v258 == 1)
    {
      ((void (*)(char *, int8x16_t *))v263)(v156, v134);
      uint64_t v157 = v270;
      ((void (*)(char *, uint64_t))v270)(v152, v154);
      uint64_t v158 = v154;
      return ((uint64_t (*)(char *, uint64_t))v157)(v280, v158);
    }
    uint64_t v161 = v250;
    v155(v250, v152, v154);
    uint64_t v162 = v276;
    if (v262((unsigned __int8 *)v161, 1, v276) == 1)
    {
      ((void (*)(char *, uint64_t))v270)(v161, v154);
      uint64_t v163 = v277;
      uint64_t v164 = v254;
      uint64_t v165 = v253;
      uint64_t v166 = v281;
      uint64_t v167 = v255;
    }
    else
    {
      uint64_t v169 = v271;
      uint64_t v168 = v272;
      uint64_t v170 = v239;
      (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v239, v161, v272);
      v260(v161, v162);
      uint64_t v171 = v240;
      uint64_t v172 = v241;
      uint64_t v173 = v242;
      (*(void (**)(char *, char *, uint64_t))(v240 + 16))(v241, &v170[*(int *)(v168 + 48)], v242);
      (*(void (**)(char *, uint64_t))(v169 + 8))(v170, v168);
      uint64_t v174 = v245;
      uint64_t v175 = v246;
      int v176 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v245 + 48))(v172, 1, v246);
      uint64_t v163 = v277;
      uint64_t v164 = v254;
      uint64_t v166 = v281;
      uint64_t v167 = v255;
      if (v176 != 1)
      {
        uint64_t v165 = v253;
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v255, v172, v254);
        (*(void (**)(char *, uint64_t))(v174 + 8))(v172, v175);
        uint64_t v177 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
        v177(v167, 0, 1, v164);
LABEL_50:
        uint64_t v178 = v248;
        uint64_t v179 = *(void *)(v166 + 40);
        uint64_t v180 = v256;
        sub_1003B4830(v248);
        uint64_t v181 = v251;
        uint64_t v182 = v230;
        (*(void (**)(uint64_t, uint64_t))(*(void *)v179 + 240))(v178, 1);
        if (v182)
        {
          v225(v178, v282);
          (*(void (**)(char *, uint64_t))(v252 + 8))(v255, v249);
          ((void (*)(char *, int8x16_t *))v263)(v180, v163);
          uint64_t v183 = v279;
          uint64_t v184 = v270;
          ((void (*)(char *, uint64_t))v270)(v224, v279);
          return ((uint64_t (*)(char *, uint64_t))v184)(v280, v183);
        }
        uint64_t v230 = 0;
        v225(v178, v282);
        uint64_t v185 = v238;
        uint64_t v186 = *(void *)(v238 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v181, 1, v238) == 1)
        {
          (*(void (**)(char *, uint64_t))(v233 + 8))(v181, v234);
          uint64_t v187 = 1;
          uint64_t v188 = v165;
          v189 = v247;
          uint64_t v190 = TupleTypeMetadata2;
          uint64_t v191 = v243;
          uint64_t v192 = v254;
        }
        else
        {
          uint64_t v193 = v245;
          uint64_t v194 = v235;
          uint64_t v195 = v246;
          (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v235, &v181[*(int *)(v185 + 40)], v246);
          (*(void (**)(char *, uint64_t))(v186 + 8))(v181, v185);
          uint64_t v191 = v243;
          uint64_t v192 = v254;
          (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v243, v194, v254);
          (*(void (**)(char *, uint64_t))(v193 + 8))(v194, v195);
          uint64_t v187 = 0;
          uint64_t v188 = v165;
          v189 = v247;
          uint64_t v190 = TupleTypeMetadata2;
        }
        v177(v191, v187, 1, v192);
        uint64_t v196 = (uint64_t)&v189[*(int *)(v190 + 48)];
        uint64_t v197 = v191;
        uint64_t v198 = v252;
        uint64_t v199 = *(void (**)(char *, char *, uint64_t))(v252 + 16);
        uint64_t v200 = v249;
        v199(v189, v255, v249);
        uint64_t v284 = v196;
        v199((char *)v196, v197, v200);
        uint64_t v201 = v192;
        uint64_t v202 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48);
        if (v202((uint64_t)v189, 1, v201) == 1)
        {
          uint64_t v203 = *(void (**)(char *, uint64_t))(v198 + 8);
          v203(v197, v200);
          v203(v255, v200);
          ((void (*)(char *, int8x16_t *))v263)(v256, v277);
          uint64_t v157 = v270;
          ((void (*)(char *, uint64_t))v270)(v224, v279);
          if (v202(v284, 1, v254) == 1)
          {
            v203(v247, v200);
            uint64_t v158 = v279;
            return ((uint64_t (*)(char *, uint64_t))v157)(v280, v158);
          }
        }
        else
        {
          uint64_t v204 = v236;
          v199(v236, v189, v200);
          uint64_t v205 = v284;
          uint64_t v206 = v254;
          if (v202(v284, 1, v254) != 1)
          {
            uint64_t v220 = v253;
            uint64_t v221 = v232;
            (*(void (**)(char *, uint64_t, uint64_t))(v253 + 32))(v232, v205, v206);
            LODWORD(v284) = sub_10096BBE0();
            uint64_t v222 = *(void (**)(char *, uint64_t))(v220 + 8);
            v222(v221, v206);
            uint64_t v223 = *(void (**)(char *, uint64_t))(v252 + 8);
            v223(v243, v200);
            v223(v255, v200);
            ((void (*)(char *, int8x16_t *))v263)(v256, v277);
            ((void (*)(char *, uint64_t))v270)(v224, v279);
            v222(v204, v206);
            v223(v247, v200);
            uint64_t v208 = v268;
            uint64_t v209 = v274;
            if (v284) {
              return ((uint64_t (*)(char *, uint64_t))v270)(v280, v279);
            }
            goto LABEL_61;
          }
          uint64_t v207 = *(void (**)(char *, uint64_t))(v252 + 8);
          v207(v243, v200);
          v207(v255, v200);
          ((void (*)(char *, int8x16_t *))v263)(v256, v277);
          ((void (*)(char *, uint64_t))v270)(v224, v279);
          (*(void (**)(char *, uint64_t))(v253 + 8))(v204, v206);
        }
        (*(void (**)(char *, uint64_t))(v237 + 8))(v247, TupleTypeMetadata2);
        uint64_t v208 = v268;
        uint64_t v209 = v274;
LABEL_61:
        uint64_t v285 = v283;
        uint64_t v286 = v208;
        uint64_t v287 = v209;
        uint64_t v288 = v264;
        type metadata accessor for JobResult();
        uint64_t v210 = swift_getAssociatedTypeWitness();
        uint64_t v211 = swift_getAssociatedConformanceWitness();
        uint64_t v212 = v282;
        uint64_t v213 = swift_getAssociatedConformanceWitness();
        uint64_t v285 = (unsigned int (*)(void, void, void))v210;
        uint64_t v286 = v212;
        uint64_t v287 = v211;
        uint64_t v288 = v213;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v214 = swift_getTupleTypeMetadata2();
        uint64_t v215 = v265;
        uint64_t v216 = v265 + *(int *)(v214 + 48);
        uint64_t v217 = v289;
        sub_1003B4830(v265);
        swift_storeEnumTagMultiPayload();
        long long v218 = *(_OWORD *)(*(void *)v217 + 120);
        *(void *)uint64_t v216 = 8;
        *(_OWORD *)(v216 + 8) = v218;
        swift_storeEnumTagMultiPayload();
        uint64_t v219 = v273;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v267, v215);
        (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v215, v219);
        uint64_t v150 = v280;
        return ((uint64_t (*)(void, void))v270)(v150, v279);
      }
      (*(void (**)(char *, uint64_t))(v171 + 8))(v172, v173);
      uint64_t v165 = v253;
    }
    uint64_t v177 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
    v177(v167, 1, 1, v164);
    goto LABEL_50;
  }
  uint64_t v73 = v67;
  uint64_t v75 = v279;
  double v74 = v280;
  uint64_t v76 = v276;
  v71((unsigned __int8 *)v67, v280, v279);
  uint64_t v77 = *(void *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v67, 1, v76) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v75);
    uint64_t v79 = v273;
    uint64_t v78 = v274;
    char v80 = v283;
  }
  else
  {
    uint64_t v88 = v270;
    uint64_t v87 = v271;
    uint64_t v89 = v73;
    uint64_t v90 = v73;
    uint64_t v91 = v272;
    (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v270, v89, v272);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v90, v76);
    uint64_t v92 = *(void *)&v88[*(int *)(v91 + 40)];
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v91);
    uint64_t v79 = v273;
    uint64_t v78 = v274;
    char v80 = v283;
    if (v92) {
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v74, v75);
    }
  }
  uint64_t v93 = v289;
  if ((*(unsigned char *)(*(void *)v289 + 139) & 2) != 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v74, v75);
  }
  uint64_t v285 = v80;
  uint64_t v286 = v268;
  uint64_t v287 = v78;
  uint64_t v288 = v264;
  uint64_t v281 = type metadata accessor for JobResult();
  uint64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v95 = v282;
  uint64_t v96 = v94;
  uint64_t v97 = swift_getAssociatedConformanceWitness();
  uint64_t v98 = swift_getAssociatedConformanceWitness();
  uint64_t v285 = (unsigned int (*)(void, void, void))v96;
  uint64_t v286 = v95;
  uint64_t v287 = v97;
  uint64_t v288 = v98;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v99 = swift_getTupleTypeMetadata2();
  uint64_t v100 = v265;
  uint64_t v101 = (_OWORD *)(v265 + *(int *)(v99 + 48));
  uint64_t v102 = v277;
  sub_1003B4830(v265);
  swift_storeEnumTagMultiPayload();
  *uint64_t v101 = *(_OWORD *)(*(void *)v93 + 120);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v103 = v267;
  sub_100591758(v267, v100);
  (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v100, v79);
  if (!v262) {
    return (*(uint64_t (**)(char *, uint64_t))(v278 + 8))(v280, v279);
  }
  uint64_t v285 = (unsigned int (*)(void, void, void))v262;
  swift_errorRetain();
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  uint64_t v104 = v261;
  double v105 = v260;
  char v106 = swift_dynamicCast();
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t, void (*)(char *, uint64_t)))(*((void *)v105 - 1)
                                                                                               + 56);
  uint64_t v108 = v279;
  if ((v106 & 1) == 0)
  {
    v107(v104, 1, 1, v105);
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v278 + 8))(v280, v108);
    return (*(uint64_t (**)(char *, uint64_t))(v257 + 8))(v104, v258);
  }
  uint64_t v109 = *((void *)v105 - 1);
  v107(v104, 0, 1, v105);
  uint64_t v110 = swift_getTupleTypeMetadata2();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v104, 1, v110) == 1)
  {
    (*(void (**)(char *, uint64_t))(v278 + 8))(v280, v108);
    swift_errorRelease();
    return (*(uint64_t (**)(char *, void *))(v109 + 8))(v104, v105);
  }
  uint64_t v151 = &v104[*(int *)(v110 + 48)];
  if (*(void *)v151 == 0xD000000000000010 && *((void *)v151 + 1) == 0x80000001009A0360)
  {
    swift_bridgeObjectRelease();
LABEL_42:
    v225((uint64_t)v104, v282);
    uint64_t v160 = v280;
    sub_1003B70F4(v280, v103, v102);
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v278 + 8))(v160, v108);
  }
  char v159 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v159) {
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t))(v278 + 8))(v280, v108);
  swift_errorRelease();
  return ((uint64_t (*)(char *, uint64_t))v225)(v104, v282);
}

uint64_t sub_1003B70F4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v56 = a2;
  uint64_t v64 = a1;
  uint64_t v4 = a3[5];
  uint64_t v5 = a3[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v63 = (char *)&v51 - v9;
  uint64_t v61 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = a3[2];
  uint64_t v13 = a3[4];
  uint64_t v57 = v5;
  uint64_t v58 = v4;
  uint64_t v65 = v5;
  uint64_t v66 = v12;
  uint64_t v67 = v4;
  uint64_t v68 = v13;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = __chkstk_darwin(v17);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v51 - v24;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v64, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v53 = v13;
  uint64_t v54 = v23;
  uint64_t v52 = v12;
  uint64_t v27 = v57;
  uint64_t v28 = v58;
  uint64_t v64 = v11;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v19, v14);
  uint64_t v30 = v59;
  uint64_t v29 = v60;
  uint64_t v31 = v63;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v63, v25, v60);
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v31, 1, v62) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v63, v29);
  }
  uint64_t v34 = v64;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v64, v63, v33);
  if (v25[*(int *)(v14 + 56)] == 1)
  {
    uint64_t v35 = v27;
    uint64_t v36 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v37 = *(int *)(v36 + 36);
    uint64_t v38 = v20;
    uint64_t v39 = (char *)v14;
    uint64_t v40 = *(void *)&v25[v37];
    uint64_t v41 = v54;
    (*(void (**)(char *, char *, char *))(v38 + 16))(v54, v25, v39);
    uint64_t v51 = v38;
    if (v40)
    {
      uint64_t v43 = *(void (**)(char *, char *))(v38 + 8);
      uint64_t v63 = v39;
      v43(v41, v39);
    }
    else
    {
      uint64_t v42 = *(void *)&v41[*(int *)(v36 + 36)];
      uint64_t v43 = *(void (**)(char *, char *))(v38 + 8);
      v43(v41, v39);
      if ((v42 & 8) == 0)
      {
        (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
        return ((uint64_t (*)(char *, char *))v43)(v25, v39);
      }
      uint64_t v63 = v39;
    }
    char v44 = v25[v37];
    uint64_t v46 = v55;
    uint64_t v45 = v56;
    uint64_t v48 = v52;
    uint64_t v47 = v53;
    if ((v44 & 2) != 0)
    {
      uint64_t v65 = v52;
      uint64_t v66 = v35;
      uint64_t v67 = v53;
      uint64_t v68 = v28;
      type metadata accessor for JobResult();
      uint64_t v65 = v35;
      uint64_t v66 = v48;
      uint64_t v67 = v28;
      uint64_t v68 = v47;
      type metadata accessor for Maintenance.UnmarkParentDeletedMergeSource();
      uint64_t v49 = v64;
      uint64_t v50 = sub_1003A9380(v64, *(void *)(*(void *)v46 + 120), *(void *)(*(void *)v46 + 128), *(void *)(*(void *)v46 + 136));
      sub_1004D7588(v45, v50);
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v62);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
    }
    return ((uint64_t (*)(char *, char *))v43)(v25, v63);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v14);
  }
}

uint64_t sub_1003B768C(void (*a1)(unsigned char *, uint64_t), uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, int8x16_t *a7)
{
  v703 = a5;
  uint64_t v701 = a6;
  uint64_t v662 = a4;
  unint64_t v631 = a3;
  uint64_t v630 = a2;
  v702 = a1;
  uint64_t v8 = (unsigned __int8 *)a7[1].i64[0];
  uint64_t v7 = (unsigned __int8 *)a7[1].i64[1];
  uint64_t v9 = a7[2].i64[0];
  uint64_t v10 = a7[2].i64[1];
  v700 = a7;
  v705 = v7;
  unint64_t v706 = (unint64_t)v8;
  uint64_t v707 = v10;
  uint64_t v708 = v9;
  uint64_t v650 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v652 = sub_10096C890();
  uint64_t v651 = *(void *)(v652 - 8);
  uint64_t v11 = __chkstk_darwin(v652);
  v648 = &v585[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v618 = &v585[-v13];
  v705 = v8;
  unint64_t v706 = (unint64_t)v7;
  uint64_t v707 = v9;
  uint64_t v708 = v10;
  uint64_t v676 = type metadata accessor for ReconciliationMutation();
  uint64_t v677 = *(void *)(v676 - 8);
  __chkstk_darwin(v676);
  v675 = &v585[-v14];
  v705 = v8;
  unint64_t v706 = (unint64_t)v7;
  uint64_t v707 = v9;
  uint64_t v708 = v10;
  uint64_t v598 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v601 = sub_10096C890();
  uint64_t v600 = *(void *)(v601 - 8);
  __chkstk_darwin(v601);
  v599 = &v585[-v15];
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v687 = sub_10096C890();
  v686 = *(unsigned char **)(v687 - 8);
  uint64_t v17 = __chkstk_darwin(v687);
  v684 = &v585[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  v635 = &v585[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  v642 = &v585[-v22];
  uint64_t v689 = v16;
  uint64_t v688 = *(void *)(v16 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  v685 = (uint64_t *)&v585[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v23);
  v632 = &v585[-v26];
  __chkstk_darwin(v25);
  v622 = &v585[-v27];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v616 = sub_10096C890();
  uint64_t v615 = *(void *)(v616 - 8);
  uint64_t v29 = __chkstk_darwin(v616);
  v640 = &v585[-v30];
  uint64_t v674 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  v608 = &v585[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = __chkstk_darwin(v31);
  v614 = &v585[-v34];
  uint64_t v35 = __chkstk_darwin(v33);
  v603 = &v585[-v36];
  uint64_t v37 = __chkstk_darwin(v35);
  v606 = &v585[-v38];
  uint64_t v39 = __chkstk_darwin(v37);
  v621 = &v585[-v40];
  uint64_t v41 = __chkstk_darwin(v39);
  v624 = &v585[-v42];
  uint64_t v43 = __chkstk_darwin(v41);
  v612 = &v585[-v44];
  uint64_t v45 = __chkstk_darwin(v43);
  v626 = &v585[-v46];
  __chkstk_darwin(v45);
  v637 = &v585[-v47];
  uint64_t v633 = sub_10096B480();
  uint64_t v634 = *(void *)(v633 - 8);
  uint64_t v48 = __chkstk_darwin(v633);
  v604 = &v585[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = __chkstk_darwin(v48);
  v607 = &v585[-v51];
  uint64_t v52 = __chkstk_darwin(v50);
  v625 = &v585[-v53];
  uint64_t v54 = __chkstk_darwin(v52);
  v613 = &v585[-v55];
  __chkstk_darwin(v54);
  v638 = &v585[-v56];
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v58 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v657 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v666 = (int *)&v585[-v59];
  v705 = v8;
  unint64_t v706 = (unint64_t)v7;
  uint64_t v707 = v9;
  uint64_t v708 = v10;
  uint64_t v60 = type metadata accessor for ItemReconciliation();
  uint64_t v660 = sub_10096C890();
  uint64_t v659 = *(void *)(v660 - 8);
  uint64_t v61 = __chkstk_darwin(v660);
  v669 = &v585[-v62];
  uint64_t v668 = v60;
  uint64_t v667 = *(void *)(v60 - 8);
  uint64_t v63 = __chkstk_darwin(v61);
  v654 = &v585[-((v64 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = __chkstk_darwin(v63);
  v655 = &v585[-v66];
  uint64_t v67 = __chkstk_darwin(v65);
  v664 = &v585[-v68];
  uint64_t v69 = __chkstk_darwin(v67);
  v665 = &v585[-v70];
  v671 = (uint64_t *)v58;
  uint64_t v672 = *(void *)(v58 - 8);
  uint64_t v71 = __chkstk_darwin(v69);
  v658 = &v585[-((v72 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = __chkstk_darwin(v71);
  v629 = &v585[-v74];
  uint64_t v75 = __chkstk_darwin(v73);
  v617 = &v585[-v76];
  uint64_t v77 = __chkstk_darwin(v75);
  v610 = &v585[-v78];
  uint64_t v79 = __chkstk_darwin(v77);
  v649 = &v585[-v80];
  uint64_t v81 = __chkstk_darwin(v79);
  v639 = &v585[-v82];
  uint64_t v83 = __chkstk_darwin(v81);
  v656 = &v585[-v84];
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v661 = (uint64_t)&v585[-v86];
  __chkstk_darwin(v85);
  uint64_t v88 = &v585[-v87];
  uint64_t v679 = v9;
  v678 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v90 = type metadata accessor for ItemState();
  uint64_t v683 = sub_10096C890();
  uint64_t v682 = *(void *)(v683 - 8);
  uint64_t v91 = __chkstk_darwin(v683);
  uint64_t v93 = &v585[-v92];
  uint64_t v690 = v90;
  uint64_t v693 = *(void *)(v90 - 8);
  uint64_t v94 = __chkstk_darwin(v91);
  v692 = &v585[-v95];
  uint64_t v699 = v57;
  uint64_t v698 = *(void *)(v57 - 8);
  uint64_t v96 = __chkstk_darwin(v94);
  v647 = &v585[-((v97 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v98 = __chkstk_darwin(v96);
  v641 = &v585[-v99];
  uint64_t v100 = __chkstk_darwin(v98);
  v609 = &v585[-v101];
  uint64_t v102 = __chkstk_darwin(v100);
  v597 = &v585[-v103];
  uint64_t v104 = __chkstk_darwin(v102);
  v595 = &v585[-v105];
  uint64_t v106 = __chkstk_darwin(v104);
  v596 = &v585[-v107];
  uint64_t v108 = __chkstk_darwin(v106);
  v620 = &v585[-v109];
  uint64_t v110 = __chkstk_darwin(v108);
  v643 = &v585[-v111];
  uint64_t v112 = __chkstk_darwin(v110);
  v645 = &v585[-v113];
  uint64_t v114 = __chkstk_darwin(v112);
  v644 = &v585[-v115];
  uint64_t v116 = __chkstk_darwin(v114);
  v628 = &v585[-v117];
  uint64_t v118 = __chkstk_darwin(v116);
  v627 = &v585[-v119];
  uint64_t v120 = __chkstk_darwin(v118);
  v670 = &v585[-v121];
  uint64_t v122 = __chkstk_darwin(v120);
  v673 = &v585[-v123];
  __chkstk_darwin(v122);
  uint64_t v125 = &v585[-v124];
  v681 = v7;
  uint64_t v680 = v10;
  uint64_t v126 = type metadata accessor for SnapshotItem();
  uint64_t v127 = sub_10096C890();
  uint64_t v128 = *(void *)(v127 - 8);
  uint64_t v129 = __chkstk_darwin(v127);
  uint64_t v131 = &v585[-v130];
  uint64_t v695 = v126;
  uint64_t v694 = *(void *)(v126 - 8);
  uint64_t v132 = __chkstk_darwin(v129);
  v619 = &v585[-((v133 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v134 = __chkstk_darwin(v132);
  v602 = &v585[-v135];
  uint64_t v136 = __chkstk_darwin(v134);
  v605 = &v585[-v137];
  uint64_t v138 = __chkstk_darwin(v136);
  v623 = &v585[-v139];
  uint64_t v140 = __chkstk_darwin(v138);
  v611 = &v585[-v141];
  uint64_t v142 = __chkstk_darwin(v140);
  v653 = &v585[-v143];
  uint64_t v144 = __chkstk_darwin(v142);
  v636 = &v585[-v145];
  __chkstk_darwin(v144);
  v691 = &v585[-v146];
  uint64_t v646 = v703[4];
  v697 = (unsigned __int8 *)v703[5];
  if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness))return (*(uint64_t (**)(unint64_t, unint64_t))(*(void *)v701 + 168))(0xD00000000000002BLL, 0x80000001009A0330); {
  long long v148 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  }
  uint64_t v594 = AssociatedConformanceWitness;
  if (v148(AssociatedTypeWitness, AssociatedConformanceWitness)) {
    return (*(uint64_t (**)(unint64_t, unint64_t))(*(void *)v701 + 168))(0xD00000000000002CLL, 0x80000001009A0300);
  }
  v593 = (unsigned __int8 *)AssociatedTypeWitness;
  uint64_t v149 = v696;
  sub_1003B4830((uint64_t)v125);
  uint64_t v150 = v704;
  (*(void (**)(unsigned char *, uint64_t))(*(void *)v697 + 240))(v125, 1);
  if (v150) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v698 + 8))(v125, v699);
  }
  v592 = (void (*)(void, void, void))v88;
  uint64_t v151 = *(void (**)(unsigned char *, uint64_t))(v698 + 8);
  uint64_t v591 = v698 + 8;
  v590 = v151;
  v151(v125, v699);
  uint64_t v153 = v694;
  uint64_t v152 = v695;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v694 + 48))(v131, 1, v695) != 1)
  {
    uint64_t v704 = 0;
    char v159 = v691;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v153 + 32))(v691, v131, v152);
    uint64_t v160 = (uint64_t)v149 + v700[3].i32[3];
    uint64_t v161 = v682;
    uint64_t v162 = v683;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v682 + 16))(v93, v160, v683);
    uint64_t v163 = v693;
    uint64_t v164 = v690;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v693 + 48))(v93, 1, v690) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v161 + 8))(v93, v162);
      sub_1007153D4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/sync-logic/Reconciliation.swift", 109, 2, 217);
    }
    uint64_t v165 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32);
    uint64_t v166 = v692;
    v165(v692, v93, v164);
    uint64_t v167 = (uint64_t *)&v159[*(int *)(v152 + 44)];
    uint64_t v169 = *v167;
    unint64_t v168 = v167[1];
    uint64_t v170 = (uint64_t *)&v166[*(int *)(v164 + 36)];
    uint64_t v172 = *v170;
    unint64_t v171 = v170[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v173 = sub_10002C020(v169, v168);
    uint64_t v175 = v174;
    swift_bridgeObjectRelease();
    if (v175)
    {
      if (v173 == 12565487 && v175 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRetain();
        unint64_t v188 = sub_10096BD70();
        sub_1000364D0(v188, v169, v168);
        swift_bridgeObjectRelease();
        uint64_t v169 = sub_10096BD10();
        unint64_t v190 = v189;
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      char v187 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if (v187) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v190 = v168;
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v191 = sub_10002C020(v172, v171);
    uint64_t v193 = v192;
    swift_bridgeObjectRelease();
    if (v193)
    {
      if (v191 == 12565487 && v193 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRetain();
        unint64_t v195 = sub_10096BD70();
        sub_1000364D0(v195, v172, v171);
        swift_bridgeObjectRelease();
        uint64_t v172 = sub_10096BD10();
        unint64_t v197 = v196;
        swift_bridgeObjectRelease();
LABEL_26:
        uint64_t v198 = v693;
        if (v169 == v172 && v190 == v197)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v199 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v199 & 1) == 0)
          {
            (*(void (**)(unsigned char *, uint64_t))(v198 + 8))(v692, v690);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v695);
          }
        }
        v685 = v170;
        uint64_t v201 = v703;
        uint64_t v200 = v704;
        uint64_t v202 = (unsigned char *)v703[2];
        uint64_t v203 = *(void (**)(uint64_t))(*(void *)v202 + 160);
        uint64_t v204 = *(void *)v202 + 160;
        uint64_t v205 = v592;
        uint64_t v206 = v692;
        v203((uint64_t)v692);
        uint64_t v207 = v695;
        if (v200)
        {
          (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v206, v690);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v207);
        }
        uint64_t v683 = v204;
        v684 = v202;
        uint64_t v209 = v698;
        uint64_t v208 = v699;
        uint64_t v210 = v698 + 48;
        uint64_t v211 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v698 + 48);
        if (v211(v205, 1, v699) == 1)
        {
          (*(void (**)(char *, uint64_t *))(v672 + 8))(v205, v671);
          uint64_t v212 = v678;
          uint64_t v213 = v681;
          v705 = v678;
          unint64_t v706 = (unint64_t)v681;
          uint64_t v214 = v679;
          uint64_t v215 = v680;
          uint64_t v707 = v679;
          uint64_t v708 = v680;
          type metadata accessor for JobResult();
          v705 = v213;
          unint64_t v706 = (unint64_t)v212;
          uint64_t v707 = v215;
          uint64_t v708 = v214;
          type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v216 = v670;
          sub_1003B4830((uint64_t)v670);
          uint64_t v217 = sub_100437D5C();
          uint64_t v219 = sub_1008AA66C((uint64_t)v216, v217, v218, 2048);
          v590(v216, v208);
          sub_1004D7588(v701, v219);
          swift_release();
          (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v207);
        }
        v588 = v203;
        uint64_t v682 = v210;
        v589 = v211;
        uint64_t v220 = *(void (**)(unsigned char *, void, uint64_t))(v209 + 32);
        v220(v673, v205, v208);
        int v221 = v697[32];
        char v222 = (*(uint64_t (**)(uint64_t, void (*)(unsigned char *, uint64_t), uint64_t, uint64_t))(*(void *)v201[3] + 320))(10, v702, 0x2000000000000000, 1);
        uint64_t v587 = v209 + 32;
        v592 = (void (*)(void, void, void))v220;
        int v586 = v221;
        uint64_t v223 = v694;
        if (v222)
        {
          uint64_t v224 = (*(uint64_t (**)(unsigned char *))(*(void *)v697 + 296))(v691);
          if ((v225 & 1) == 0)
          {
            uint64_t v227 = v224;
            uint64_t v704 = 0;
            uint64_t v228 = v699;
            sub_1006F0030(v699, v699);
            uint64_t v229 = v698;
            swift_allocObject();
            uint64_t v230 = sub_10096C0D0();
            uint64_t v231 = *(void **)(v229 + 16);
            uint64_t v698 = v229 + 16;
            ((void (*)(uint64_t, unsigned char *, uint64_t))v231)(v232, v673, v228);
            uint64_t v709 = sub_1003FC080(v230);
            uint64_t v233 = v662;
            if (sub_10096BBE0())
            {
LABEL_43:
              uint64_t v234 = *v685;
              uint64_t v235 = v685[1];
              uint64_t v236 = v709;
              swift_bridgeObjectRetain();
              uint64_t v237 = v234;
              uint64_t v238 = v704;
              v702 = (void (*)(unsigned char *, uint64_t))sub_100854970(v237, v235, v236);
              v697 = v239;
              uint64_t v240 = v691;
              if (v238)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v590(v673, v699);
                (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v240, v695);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v273 = (uint64_t)v647;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v231)(v647, v240, v699);
              uint64_t v274 = (uint64_t)v648;
              uint64_t v275 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v650 - 8) + 56))(v648, 1, 1);
              uint64_t v276 = *(uint64_t (**)(uint64_t))(*v703 + 272);
              uint64_t v704 = 0;
              v277 = (void *)v276(v275);
              uint64_t v278 = *v696;
              uint64_t v688 = *(void *)(*v696 + 120);
              uint64_t v280 = *(void *)(v278 + 128);
              uint64_t v279 = *(void *)(v278 + 136);
              uint64_t v687 = v280;
              v703 = v231;
              unint64_t v281 = v279 | (unint64_t)&_mh_execute_header;
              uint64_t v282 = v678;
              unint64_t v283 = v681;
              v705 = v678;
              unint64_t v706 = (unint64_t)v681;
              uint64_t v284 = v679;
              uint64_t v285 = v680;
              uint64_t v707 = v679;
              uint64_t v708 = v680;
              uint64_t v689 = type metadata accessor for JobResult();
              v705 = v283;
              unint64_t v706 = (unint64_t)v282;
              uint64_t v707 = v285;
              uint64_t v708 = v284;
              type metadata accessor for Bouncing.BounceItem();
              uint64_t v286 = sub_10083EC08(v273, v227, (uint64_t)v702, (uint64_t)v697, v274, v277, v688, v687, v281);

              (*(void (**)(uint64_t, uint64_t))(v651 + 8))(v274, v652);
              uint64_t v287 = v699;
              v590((unsigned char *)v273, v699);
              sub_1004D7588(v701, v286);
              swift_release();
              uint64_t v288 = swift_getAssociatedConformanceWitness();
              v705 = v593;
              unint64_t v706 = v287;
              uint64_t v707 = v594;
              uint64_t v708 = v288;
              type metadata accessor for ReconciliationID();
              uint64_t v289 = swift_getTupleTypeMetadata2();
              char v290 = v675;
              v291 = &v675[*(int *)(v289 + 48)];
              sub_1003B4830((uint64_t)v675);
              swift_storeEnumTagMultiPayload();
              v292 = v691;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v703)(v291, v691, v287);
              swift_storeEnumTagMultiPayload();
              uint64_t v293 = v676;
              swift_storeEnumTagMultiPayload();
              sub_100591758(v701, (uint64_t)v290);
              v702 = *(void (**)(unsigned char *, uint64_t))(v677 + 8);
              v702(v290, v293);
              uint64_t v294 = (uint64_t)&v290[*(int *)(v289 + 48)];
              uint64_t v295 = v699;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v703)(v290, v292, v699);
              swift_storeEnumTagMultiPayload();
              sub_1003B4830(v294);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_100591758(v701, (uint64_t)v290);
              v702(v290, v293);
              v590(v673, v295);
LABEL_37:
              (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
              return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v695);
            }
            uint64_t v258 = v658;
            uint64_t v259 = v704;
            v588(v233);
            if (!v259)
            {
              uint64_t v704 = 0;
              if (v589(v258, 1, v699) == 1)
              {
                (*(void (**)(char *, uint64_t *))(v672 + 8))(v658, v671);
              }
              else
              {
                v313 = v641;
                uint64_t v314 = v699;
                v592(v641, v658, v699);
                ((void (*)(unsigned char *, unsigned char *, uint64_t))v231)(v670, v313, v314);
                sub_10096C1C0();
                sub_10096C180();
                v590(v313, v314);
              }
              goto LABEL_43;
            }
            swift_bridgeObjectRelease();
          }
          v590(v673, v699);
          (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v223 + 8))(v691, v695);
        }
        uint64_t v226 = v669;
        sub_1000DEDD8((uint64_t)v702, (uint64_t)v669);
        uint64_t v241 = v667;
        uint64_t v242 = v668;
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v667 + 48))(v226, 1, v668) == 1)
        {
          (*(void (**)(unsigned char *, uint64_t))(v659 + 8))(v226, v660);
          sub_10086F2C4((uint64_t)v702, (uint64_t)v692, 0, v703);
          uint64_t v262 = v243;
          swift_bridgeObjectRelease();
          if (v262)
          {
            v702 = (void (*)(unsigned char *, uint64_t))(*(uint64_t (**)(unsigned char *))(*(void *)v697 + 296))(v691);
            if ((v263 & 1) == 0)
            {
              uint64_t v264 = v699;
              sub_1006F0030(v699, v699);
              uint64_t v265 = v698;
              swift_allocObject();
              uint64_t v266 = sub_10096C0D0();
              uint64_t v267 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v265 + 16);
              uint64_t v698 = v265 + 16;
              uint64_t v689 = (uint64_t)v267;
              v267(v268, v673, v264);
              uint64_t v709 = sub_1003FC080(v266);
              if ((sub_10096BBE0() & 1) == 0)
              {
                v588(v662);
                if (v589(v629, 1, v699) == 1)
                {
                  (*(void (**)(char *, uint64_t *))(v672 + 8))(v629, v671);
                }
                else
                {
                  v467 = v609;
                  uint64_t v468 = v699;
                  v592(v609, v629, v699);
                  ((void (*)(unsigned char *, unsigned char *, uint64_t))v689)(v670, v467, v468);
                  sub_10096C1C0();
                  sub_10096C180();
                  v590(v467, v468);
                }
              }
              uint64_t v269 = *v685;
              uint64_t v270 = v685[1];
              uint64_t v271 = v709;
              swift_bridgeObjectRetain();
              uint64_t v272 = sub_100854970(v269, v270, v271);
              uint64_t v704 = 0;
              uint64_t v411 = v272;
              uint64_t v413 = v412;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v414 = v678;
              v415 = v681;
              v705 = v678;
              unint64_t v706 = (unint64_t)v681;
              uint64_t v416 = v679;
              uint64_t v417 = v680;
              uint64_t v707 = v679;
              uint64_t v708 = v680;
              v418 = (unsigned __int8 *)type metadata accessor for JobResult();
              v705 = v415;
              unint64_t v706 = (unint64_t)v414;
              uint64_t v707 = v417;
              uint64_t v708 = v416;
              type metadata accessor for Bouncing.BounceItem();
              uint64_t v419 = (uint64_t)v618;
              uint64_t v420 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v650 - 8) + 56))(v618, 1, 1);
              v421 = (void *)(*(uint64_t (**)(uint64_t))(*v703 + 272))(v420);
              uint64_t v422 = sub_10083EC08((uint64_t)v691, (uint64_t)v702, v411, v413, v419, v421, *(void *)(*v696 + 120), *(void *)(*v696 + 128), *(void *)(*v696 + 136));

              (*(void (**)(uint64_t, uint64_t))(v651 + 8))(v419, v652);
              v697 = v418;
              sub_1004D7588(v701, v422);
              swift_release();
              uint64_t v423 = v699;
              uint64_t v424 = swift_getAssociatedConformanceWitness();
              v705 = v593;
              unint64_t v706 = v423;
              uint64_t v707 = v594;
              uint64_t v708 = v424;
              type metadata accessor for ReconciliationID();
              uint64_t v425 = swift_getTupleTypeMetadata2();
              v426 = v675;
              v427 = &v675[*(int *)(v425 + 48)];
              sub_1003B4830((uint64_t)v675);
              swift_storeEnumTagMultiPayload();
              v428 = v691;
              v429 = (void (*)(unsigned char *, unsigned char *, uint64_t))v689;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v689)(v427, v691, v423);
              swift_storeEnumTagMultiPayload();
              uint64_t v430 = v676;
              swift_storeEnumTagMultiPayload();
              sub_100591758(v701, (uint64_t)v426);
              v431 = *(void (**)(unsigned char *, uint64_t))(v677 + 8);
              v431(v426, v430);
              uint64_t v432 = (uint64_t)&v426[*(int *)(v425 + 48)];
              v433 = v428;
              uint64_t v434 = v699;
              v429(v426, v433, v699);
              swift_storeEnumTagMultiPayload();
              sub_1003B4830(v432);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_100591758(v701, (uint64_t)v426);
              v431(v426, v430);
              v435 = v673;
              uint64_t v436 = v434;
              goto LABEL_66;
            }
          }
          else
          {
            v306 = v678;
            v307 = v681;
            v705 = v678;
            unint64_t v706 = (unint64_t)v681;
            uint64_t v308 = v679;
            uint64_t v309 = v680;
            uint64_t v707 = v679;
            uint64_t v708 = v680;
            type metadata accessor for JobResult();
            v705 = v306;
            unint64_t v706 = (unint64_t)v307;
            uint64_t v707 = v308;
            uint64_t v708 = v309;
            type metadata accessor for Ingestion.FetchItemMetadata();
            uint64_t v310 = sub_100437D5C();
            uint64_t v312 = sub_1008AA66C((uint64_t)v702, v310, v311, 256);
            sub_1004D4360(v701, v312);
            swift_release();
          }
LABEL_75:
          v590(v673, v699);
          goto LABEL_37;
        }
        uint64_t v704 = 0;
        v244 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v241 + 32);
        uint64_t v245 = v665;
        v244(v665, v226, v242);
        uint64_t v246 = &v245[*(int *)(v242 + 52)];
        uint64_t v247 = v661;
        sub_1003B4830(v661);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v698 + 56))(v247, 0, 1, v208);
        uint64_t v248 = v208;
        uint64_t v249 = v666;
        uint64_t v250 = (char *)v666 + *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v251 = v672 + 16;
        uint64_t v252 = *(unsigned char **)(v672 + 16);
        uint64_t v253 = v671;
        ((void (*)(int *, unsigned char *, uint64_t *))v252)(v666, v246, v671);
        v669 = v252;
        uint64_t v660 = v251;
        ((void (*)(char *, uint64_t, uint64_t *))v252)(v250, v247, v253);
        uint64_t v254 = v589;
        if (v589((char *)v249, 1, v248) == 1)
        {
          uint64_t v255 = *(void (**)(uint64_t, uint64_t *))(v672 + 8);
          v255(v247, v253);
          if (v254(v250, 1, v248) == 1)
          {
            v255((uint64_t)v666, v671);
            uint64_t v256 = v665;
            uint64_t v257 = v668;
LABEL_64:
            (*(void (**)(unsigned char *, uint64_t))(v667 + 8))(v256, v257);
LABEL_65:
            v435 = v673;
            uint64_t v436 = v699;
LABEL_66:
            v590(v435, v436);
            (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v695);
          }
        }
        else
        {
          uint64_t v260 = v656;
          ((void (*)(unsigned char *, int *, uint64_t *))v669)(v656, v666, v253);
          if (v254(v250, 1, v248) != 1)
          {
            v296 = v670;
            v592(v670, v250, v248);
            swift_getAssociatedConformanceWitness();
            char v297 = sub_10096BBE0();
            v298 = v590;
            v590(v296, v248);
            uint64_t v255 = *(void (**)(uint64_t, uint64_t *))(v672 + 8);
            v255(v247, v253);
            v298(v260, v248);
            v255((uint64_t)v666, v253);
            uint64_t v256 = v665;
            uint64_t v257 = v668;
            if (v297) {
              goto LABEL_64;
            }
LABEL_56:
            uint64_t v261 = v704;
            sub_10082B988((uint64_t)v703, v257, (uint64_t)v664);
            if (v261)
            {
              (*(void (**)(unsigned char *, uint64_t))(v667 + 8))(v256, v257);
              goto LABEL_75;
            }
            uint64_t v704 = 0;
            if (sub_1003B49A8(v700, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem))
            {
              v705 = v681;
              unint64_t v706 = (unint64_t)v678;
              uint64_t v707 = v680;
              uint64_t v708 = v679;
              type metadata accessor for Propagation.CreateItem();
              uint64_t v299 = swift_dynamicCastClass();
              if (v299)
              {
                if ((*(unsigned char *)(v299 + 141) & 4) != 0)
                {
                  swift_retain();
                  id v336 = (id)fpfs_current_or_default_log();
                  sub_10096B490();
                  v337 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v674 + 16);
                  v337(v637, (void (*)(void, void))v702, v593);
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v694 + 16))(v636, v691, v695);
                  v338 = sub_10096B470();
                  os_log_type_t v339 = sub_10096C5D0();
                  LODWORD(v697) = v339;
                  if (os_log_type_enabled(v338, v339))
                  {
                    uint64_t v340 = swift_slowAlloc();
                    uint64_t v672 = swift_slowAlloc();
                    v705 = (unsigned __int8 *)v672;
                    *(_DWORD *)uint64_t v340 = 136315394;
                    v671 = (uint64_t *)(v340 + 4);
                    v341 = v626;
                    v342 = v637;
                    uint64_t v343 = (uint64_t)v593;
                    v337(v626, (void (*)(void, void))v637, v593);
                    v344 = *(void (**)(unsigned char *, uint64_t))(v674 + 8);
                    v344(v342, v343);
                    uint64_t v345 = sub_10096D220();
                    unint64_t v347 = v346;
                    v344(v341, v343);
                    uint64_t v709 = sub_100719D44(v345, v347, (uint64_t *)&v705);
                    sub_10096C8C0();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v340 + 12) = 2080;
                    uint64_t v348 = v699;
                    v349 = v670;
                    v350 = v636;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v670, v636, v699);
                    (*(void (**)(unsigned char *, uint64_t))(v694 + 8))(v350, v695);
                    swift_getAssociatedConformanceWitness();
                    uint64_t v351 = sub_10096D220();
                    unint64_t v353 = v352;
                    v590(v349, v348);
                    uint64_t v709 = sub_100719D44(v351, v353, (uint64_t *)&v705);
                    sub_10096C8C0();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, v338, (os_log_type_t)v697, "♻️ forcing bounce of colliding item %s as cycle with %s was broken at creation time", (uint8_t *)v340, 0x16u);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                    swift_release();
                  }
                  else
                  {
                    (*(void (**)(unsigned char *, uint64_t))(v694 + 8))(v636, v695);
                    (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v637, v593);

                    swift_release();
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v638, v633);
                  goto LABEL_109;
                }
              }
            }
            uint64_t v300 = v668;
            v301 = v664;
            v302 = &v664[*(int *)(v668 + 52)];
            v666 = (int *)type metadata accessor for ItemReconciliationHalf();
            uint64_t v661 = v666[10];
            uint64_t v303 = *(void *)&v302[v661] & 3;
            v304 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v667 + 16);
            v304(v655, v301, v300);
            if (v303) {
              int v305 = 1;
            }
            else {
              int v305 = v655[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] & 1;
            }
            uint64_t v315 = v668;
            v316 = *(void (**)(void))(v667 + 8);
            ((void (*)(unsigned char *, uint64_t))v316)(v655, v668);
            v304(v654, v664, v315);
            if (v305)
            {
              ((void (*)(unsigned char *, uint64_t))v316)(v654, v668);
            }
            else
            {
              uint64_t v317 = *(void *)&v654[*(int *)(v668 + 52) + v666[9]];
              v316();
              if ((v317 & 1) == 0) {
                goto LABEL_109;
              }
            }
            int v318 = v664[*(int *)(v668 + 56)];
            uint64_t v659 = *(void *)(v694 + 16);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v659)(v653, v691, v695);
            if (v318 == 1)
            {
              uint64_t v319 = v695;
              uint64_t WitnessTable = swift_getWitnessTable();
              v321 = v653;
              int v322 = FileItem.kind.getter(v319, WitnessTable);
              TupleTypeMetadata2 = *(void *)(v694 + 8);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v321, v319);
              if (v322 == 1)
              {
                v323 = v639;
                ((void (*)(char *, unsigned char *, uint64_t *))v669)(v639, v302, v671);
                if (v589(v323, 1, v699) == 1)
                {
                  v255((uint64_t)v639, v671);
                }
                else
                {
                  v378 = v627;
                  v592(v627, v639, v699);
                  v379 = v628;
                  sub_1003B4830((uint64_t)v628);
                  uint64_t v380 = v704;
                  char v381 = (*(uint64_t (**)(unsigned char *, unsigned char *))(*(void *)v697 + 536))(v378, v379);
                  uint64_t v704 = v380;
                  if (v380)
                  {
                    uint64_t v382 = v699;
                    v383 = v590;
                    v590(v628, v699);
                    v383(v627, v382);
                    uint64_t v384 = v668;
                    ((void (*)(unsigned char *, uint64_t))v316)(v664, v668);
                    ((void (*)(unsigned char *, uint64_t))v316)(v665, v384);
                    v383(v673, v382);
                    (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                    return ((uint64_t (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v691, v695);
                  }
                  char v446 = v381;
                  v590(v628, v699);
                  if (v446)
                  {
                    id v447 = (id)fpfs_current_or_default_log();
                    sub_10096B490();
                    v448 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v674 + 16);
                    v448(v612, (void (*)(void, void))v702, v593);
                    ((void (*)(unsigned char *, unsigned char *, uint64_t))v659)(v611, v691, v695);
                    v449 = sub_10096B470();
                    os_log_type_t v450 = sub_10096C5D0();
                    LODWORD(v697) = v450;
                    if (os_log_type_enabled(v449, v450))
                    {
                      uint64_t v451 = swift_slowAlloc();
                      uint64_t v672 = swift_slowAlloc();
                      v705 = (unsigned __int8 *)v672;
                      *(_DWORD *)uint64_t v451 = 136315394;
                      v671 = (uint64_t *)(v451 + 4);
                      v452 = v626;
                      v453 = v612;
                      uint64_t v454 = (uint64_t)v593;
                      v448(v626, (void (*)(void, void))v612, v593);
                      v455 = *(void (**)(unsigned char *, uint64_t))(v674 + 8);
                      v455(v453, v454);
                      uint64_t v456 = sub_10096D220();
                      unint64_t v458 = v457;
                      v455(v452, v454);
                      uint64_t v709 = sub_100719D44(v456, v458, (uint64_t *)&v705);
                      sub_10096C8C0();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v451 + 12) = 2080;
                      v671 = (uint64_t *)(v451 + 14);
                      uint64_t v367 = v699;
                      v459 = v670;
                      v460 = v611;
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v670, v611, v699);
                      ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v460, v695);
                      swift_getAssociatedConformanceWitness();
                      uint64_t v461 = sub_10096D220();
                      unint64_t v463 = v462;
                      v373 = (void (*)(void, uint64_t))v590;
                      v590(v459, v367);
                      uint64_t v709 = sub_100719D44(v461, v463, (uint64_t *)&v705);
                      sub_10096C8C0();
                      swift_bridgeObjectRelease();
                      _os_log_impl((void *)&_mh_execute_header, v449, (os_log_type_t)v697, "♻️ forcing bounce of colliding item %s to break reparent cycle with %s", (uint8_t *)v451, 0x16u);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v613, v633);
                      v374 = &v659;
                      goto LABEL_134;
                    }
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v611, v695);
                    (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v612, v593);

                    (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v613, v633);
                    v464 = &v659;
LABEL_149:
                    v590((unsigned char *)*(v464 - 32), v699);
                    goto LABEL_109;
                  }
                  v590(v627, v699);
                }
              }
            }
            else
            {
              TupleTypeMetadata2 = *(void *)(v694 + 8);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v653, v695);
            }
            v324 = v649;
            ((void (*)(char *, unsigned char *, uint64_t *))v669)(v649, v302, v671);
            if (v589(v324, 1, v699) == 1)
            {
              v255((uint64_t)v649, v671);
              goto LABEL_88;
            }
            v331 = v644;
            v592(v644, v649, v699);
            v332 = v645;
            sub_1003B4830((uint64_t)v645);
            uint64_t v333 = v704;
            char v334 = (*(uint64_t (**)(unsigned char *, unsigned char *, void))(*(void *)v697 + 552))(v331, v332, 0);
            uint64_t v704 = v333;
            if (v333)
            {
              uint64_t v329 = v699;
              v330 = v590;
              v590(v645, v699);
              v330(v644, v329);
              goto LABEL_94;
            }
            char v354 = v334;
            v590(v645, v699);
            if ((v354 & 1) == 0)
            {
              v590(v644, v699);
LABEL_88:
              uint64_t v325 = v666[9];
              if (!*(void *)&v302[v325]) {
                goto LABEL_156;
              }
              v326 = v643;
              sub_1003B4830((uint64_t)v643);
              uint64_t v327 = v704;
              (*(void (**)(unsigned char *))(*(void *)v684 + 152))(v326);
              uint64_t v704 = v327;
              v328 = (uint64_t *)&v675;
              if (v327)
              {
LABEL_90:
                uint64_t v329 = v699;
                v330 = v590;
                v590((unsigned char *)*(v328 - 32), v699);
LABEL_94:
                uint64_t v335 = v668;
                ((void (*)(unsigned char *, uint64_t))v316)(v664, v668);
                ((void (*)(unsigned char *, uint64_t))v316)(v665, v335);
                v330(v673, v329);
LABEL_159:
                (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                return ((uint64_t (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v691, v695);
              }
              v590(v643, v699);
              if ((*(unsigned int (**)(unsigned char *, uint64_t, unsigned __int8 *))(v674 + 48))(v640, 1, v593) == 1)
              {
                (*(void (**)(unsigned char *, uint64_t))(v615 + 8))(v640, v616);
                if (!*(void *)&v302[v325]) {
                  goto LABEL_156;
                }
              }
              else
              {
                v443 = v621;
                (*(void (**)(unsigned char *, unsigned char *, unsigned __int8 *))(v674 + 32))(v621, v640, v593);
                uint64_t v444 = v704;
                char v445 = (*(uint64_t (**)(unsigned char *, void))(*(void *)v646 + 536))(v443, v702);
                uint64_t v704 = v444;
                if (v444)
                {
                  (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v621, v593);
                  goto LABEL_158;
                }
                if (v445)
                {
                  id v473 = (id)fpfs_current_or_default_log();
                  sub_10096B490();
                  v474 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v674 + 16);
                  v474(v606, (void (*)(void, void))v702, v593);
                  ((void (*)(unsigned char *, unsigned char *, uint64_t))v659)(v605, v691, v695);
                  v475 = sub_10096B470();
                  os_log_type_t v476 = sub_10096C5D0();
                  if (os_log_type_enabled(v475, v476))
                  {
                    uint64_t v477 = swift_slowAlloc();
                    v697 = (unsigned __int8 *)swift_slowAlloc();
                    v705 = v697;
                    *(_DWORD *)uint64_t v477 = 136315394;
                    v669 = (unsigned char *)(v477 + 4);
                    v478 = v626;
                    v479 = v606;
                    uint64_t v480 = (uint64_t)v593;
                    v474(v626, (void (*)(void, void))v606, v593);
                    v481 = *(void (**)(unsigned char *, uint64_t))(v674 + 8);
                    v481(v479, v480);
                    v482 = v481;
                    uint64_t v672 = (uint64_t)v481;
                    uint64_t v483 = sub_10096D220();
                    unint64_t v485 = v484;
                    v482(v478, v480);
                    uint64_t v709 = sub_100719D44(v483, v485, (uint64_t *)&v705);
                    v671 = &v710;
                    sub_10096C8C0();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v477 + 12) = 2080;
                    v669 = (unsigned char *)(v477 + 14);
                    uint64_t v486 = v699;
                    v487 = v670;
                    v488 = v605;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v670, v605, v699);
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v488, v695);
                    swift_getAssociatedConformanceWitness();
                    uint64_t v489 = sub_10096D220();
                    unint64_t v491 = v490;
                    v590(v487, v486);
                    uint64_t v709 = sub_100719D44(v489, v491, (uint64_t *)&v705);
                    sub_10096C8C0();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, v475, v476, "♻️ forcing bounce of colliding item %s to break replace cycle with %s", (uint8_t *)v477, 0x16u);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v607, v633);
                    ((void (*)(unsigned char *, uint64_t))v672)(v621, v480);
                  }
                  else
                  {
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v605, v695);
                    v553 = *(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8);
                    uint64_t v554 = (uint64_t)v593;
                    v553(v606, v593);

                    (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v607, v633);
                    v553(v621, (unsigned __int8 *)v554);
                  }
                  goto LABEL_109;
                }
                (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v621, v593);
                if (!*(void *)&v302[v325]) {
                  goto LABEL_156;
                }
              }
              v375 = v620;
              sub_1003B4830((uint64_t)v620);
              uint64_t v376 = v704;
              char v377 = (*(uint64_t (**)(void, unsigned char *))(*(void *)v646 + 560))(v702, v375);
              uint64_t v704 = v376;
              if (v376)
              {
                v328 = &v652;
                goto LABEL_90;
              }
              char v492 = v377;
              v590(v620, v699);
              if (v492)
              {
                id v493 = (id)fpfs_current_or_default_log();
                sub_10096B490();
                v494 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v674 + 16);
                v494(v603, (void (*)(void, void))v702, v593);
                ((void (*)(unsigned char *, unsigned char *, uint64_t))v659)(v602, v691, v695);
                v495 = sub_10096B470();
                os_log_type_t v496 = sub_10096C5D0();
                if (os_log_type_enabled(v495, v496))
                {
                  uint64_t v497 = swift_slowAlloc();
                  v697 = (unsigned __int8 *)swift_slowAlloc();
                  v705 = v697;
                  *(_DWORD *)uint64_t v497 = 136315394;
                  uint64_t v672 = v497 + 4;
                  v498 = v626;
                  v499 = v603;
                  uint64_t v500 = (uint64_t)v593;
                  v494(v626, (void (*)(void, void))v603, v593);
                  v501 = *(void (**)(unsigned char *, uint64_t))(v674 + 8);
                  v501(v499, v500);
                  uint64_t v502 = sub_10096D220();
                  unint64_t v504 = v503;
                  v501(v498, v500);
                  uint64_t v709 = sub_100719D44(v502, v504, (uint64_t *)&v705);
                  sub_10096C8C0();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v497 + 12) = 2080;
                  uint64_t v505 = v699;
                  v506 = v670;
                  v507 = v602;
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v670, v602, v699);
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v507, v695);
                  swift_getAssociatedConformanceWitness();
                  uint64_t v508 = sub_10096D220();
                  unint64_t v510 = v509;
                  v590(v506, v505);
                  uint64_t v709 = sub_100719D44(v508, v510, (uint64_t *)&v705);
                  sub_10096C8C0();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v495, v496, "♻️ forcing bounce of colliding item %s to break reparent-to-new cycle with %s", (uint8_t *)v497, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v602, v695);
                  (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v603, v593);
                }

                (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v604, v633);
                goto LABEL_109;
              }
              if (v302[v325])
              {
                v543 = &v302[v666[16]];
                if (!v543[16] && (v543[1] & 1) != 0) {
                  goto LABEL_109;
                }
              }
LABEL_156:
              if ((v302[v661] & 3) == 0) {
                goto LABEL_158;
              }
              v544 = &v302[v666[16]];
              if (v544[16]) {
                goto LABEL_158;
              }
              uint64_t v546 = *(void *)v544;
              if ((v546 & 0x100) == 0)
              {
                if ((v546 & 2) == 0) {
                  goto LABEL_158;
                }
                v547 = v610;
                ((void (*)(char *, unsigned char *, uint64_t *))v669)(v610, v302, v671);
                if (v589(v547, 1, v699) == 1)
                {
                  uint64_t v548 = v668;
                  ((void (*)(unsigned char *, uint64_t))v316)(v664, v668);
                  ((void (*)(unsigned char *, uint64_t))v316)(v665, v548);
                  v590(v673, v699);
                  (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v691, v695);
                  return ((uint64_t (*)(char *, uint64_t *))v255)(v610, v671);
                }
                v549 = v596;
                v592(v596, v610, v699);
                v550 = v595;
                sub_1003B4830((uint64_t)v595);
                uint64_t v551 = v704;
                char v552 = (*(uint64_t (**)(unsigned char *, unsigned char *))(*(void *)v697 + 536))(v549, v550);
                uint64_t v704 = v551;
                if (v551)
                {
                  uint64_t v329 = v699;
                  v330 = v590;
                  v590(v595, v699);
                  v330(v596, v329);
                  goto LABEL_94;
                }
                char v582 = v552;
                uint64_t v583 = v699;
                v584 = v590;
                v590(v595, v699);
                v584(v596, v583);
                if ((v582 & 1) == 0)
                {
LABEL_158:
                  uint64_t v545 = v668;
                  ((void (*)(unsigned char *, uint64_t))v316)(v664, v668);
                  ((void (*)(unsigned char *, uint64_t))v316)(v665, v545);
                  v590(v673, v699);
                  goto LABEL_159;
                }
              }
LABEL_109:
              if (v586)
              {
                v385 = (int *)type metadata accessor for ItemReconciliationHalf();
                if ((v664[v385[9]] & 0x10) != 0
                  || !*(void *)&v664[v385[10]]
                  || (v386 = &v664[v385[16]], !v386[16]) && (*(_DWORD *)v386 & 0x42000) != 0)
                {
                  uint64_t v387 = v704;
                  (*(void (**)(void, uint64_t))(*(void *)v646 + 240))(v702, 1);
                  if (!v387)
                  {
                    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v688 + 48))(v635, 1, v689) == 1)
                    {
LABEL_177:
                      (*((void (**)(unsigned char *, uint64_t))v686 + 1))(v635, v687);
                      v705 = 0;
                      unint64_t v706 = 0xE000000000000000;
                      sub_10096CBD0(40);
                      v711._object = (void *)0x80000001009A02D0;
                      v711._countAndFlagsBits = 0xD000000000000026;
                      sub_10096BDC0(v711);
                      swift_getWitnessTable();
                      sub_10096D270();
                      uint64_t result = sub_10096CE20();
                      __break(1u);
                      return result;
                    }
                    uint64_t v388 = v689;
                    v389 = v632;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v688 + 32))(v632, v635, v689);
                    v390 = (uint64_t *)&v389[*(int *)(v388 + 44)];
                    uint64_t v392 = *v390;
                    unint64_t v391 = v390[1];
                    swift_retain();
                    swift_bridgeObjectRetain();
                    LOBYTE(v389) = sub_1007B7F20(v392, v391, v630, v631);
                    swift_release();
                    swift_bridgeObjectRelease();
                    if ((v389 & 1) != 0
                      || (uint64_t v393 = *(int *)(v689 + 48),
                          v394 = &v632[v393 + *(int *)(type metadata accessor for ItemMetadata() + 144)],
                          (v394[4] & 1) != 0)
                      || *(_DWORD *)v394 != 1)
                    {
                      uint64_t v395 = (uint64_t)v593;
                      sub_1006F0030((uint64_t)v593, (uint64_t)v593);
                      uint64_t v396 = v674;
                      swift_allocObject();
                      uint64_t v397 = sub_10096C0D0();
                      v398 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v396 + 16);
                      v398(v399, v692, v395);
                      uint64_t v400 = sub_1003FC080(v397);
                      v697 = (unsigned __int8 *)sub_100854970(v630, v631, v400);
                      uint64_t v466 = v465;
                      swift_bridgeObjectRelease();
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v694 + 16))(v619, v691, v695);
                      v588((uint64_t)v692);
                      if (v589(v617, 1, v699) != 1)
                      {
                        uint64_t v511 = v695;
                        v512 = v619;
                        v513 = *(void (**)(void))(v698 + 40);
                        v686 = &v619[*(int *)(v695 + 36)];
                        v513();
                        v515 = (uint64_t *)*v685;
                        uint64_t v514 = v685[1];
                        v516 = (uint64_t **)&v512[*(int *)(v511 + 44)];
                        swift_bridgeObjectRetain_n();
                        swift_bridgeObjectRelease();
                        v685 = v515;
                        *v516 = v515;
                        v516[1] = (uint64_t *)v514;
                        v517 = v632;
                        v398((uint64_t)v608, v632, (uint64_t)v593);
                        uint64_t v687 = (*(uint64_t (**)(unsigned char *))(*(void *)v646 + 296))(v517);
                        uint64_t v704 = 0;
                        if ((v518 & 1) == 0)
                        {
                          v705 = v678;
                          v555 = v678;
                          unint64_t v706 = (unint64_t)v681;
                          v556 = v681;
                          uint64_t v707 = v679;
                          uint64_t v557 = v679;
                          uint64_t v708 = v680;
                          uint64_t v558 = v680;
                          v684 = (unsigned char *)type metadata accessor for JobResult();
                          v705 = v555;
                          unint64_t v706 = (unint64_t)v556;
                          uint64_t v707 = v557;
                          uint64_t v708 = v558;
                          uint64_t v683 = type metadata accessor for Bouncing.BounceItem();
                          uint64_t v559 = v699;
                          v560 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16);
                          v561 = v670;
                          v560(v670, v619, v699);
                          uint64_t v562 = (uint64_t)v597;
                          v560(v597, v686, v559);
                          v563 = v599;
                          sub_1008353E4((uint64_t)v561, (uint64_t)v685, v514, v562, (uint64_t)v599);
                          uint64_t v564 = (*(uint64_t (**)(unsigned char *, void, uint64_t))(*(void *)(v598 - 8) + 56))(v563, 0, 1);
                          v565 = (void *)(*(uint64_t (**)(uint64_t))(*v703 + 272))(v564);
                          v566 = v608;
                          uint64_t v567 = sub_10083EC08((uint64_t)v608, v687, (uint64_t)v697, v466, (uint64_t)v563, v565, *(void *)(*v696 + 120), *(void *)(*v696 + 128), *(void *)(*v696 + 136));

                          (*(void (**)(unsigned char *, uint64_t))(v600 + 8))(v563, v601);
                          v568 = v593;
                          (*(void (**)(unsigned char *))(v674 + 8))(v566);
                          sub_1004D4360(v701, v567);
                          swift_release();
                          uint64_t v569 = v699;
                          uint64_t v570 = swift_getAssociatedConformanceWitness();
                          v705 = v568;
                          unint64_t v706 = v569;
                          v571 = v568;
                          uint64_t v707 = v594;
                          uint64_t v708 = v570;
                          type metadata accessor for ReconciliationID();
                          uint64_t v572 = swift_getTupleTypeMetadata2();
                          v573 = v675;
                          v574 = &v675[*(int *)(v572 + 48)];
                          sub_1003B4830((uint64_t)v675);
                          swift_storeEnumTagMultiPayload();
                          v398((uint64_t)v574, v702, (uint64_t)v571);
                          swift_storeEnumTagMultiPayload();
                          uint64_t v575 = v676;
                          swift_storeEnumTagMultiPayload();
                          sub_100591758(v701, (uint64_t)v573);
                          v576 = *(void (**)(unsigned char *, uint64_t))(v677 + 8);
                          v576(v573, v575);
                          uint64_t v577 = (uint64_t)&v573[*(int *)(v572 + 48)];
                          v398((uint64_t)v573, v702, (uint64_t)v593);
                          swift_storeEnumTagMultiPayload();
                          sub_1003B4830(v577);
                          swift_storeEnumTagMultiPayload();
                          swift_storeEnumTagMultiPayload();
                          sub_100591758(v701, (uint64_t)v573);
                          v576(v573, v575);
                          (*(void (**)(unsigned char *, uint64_t))(v688 + 8))(v632, v689);
                          v578 = *(void (**)(unsigned char *, uint64_t))(v667 + 8);
                          uint64_t v579 = v668;
                          v578(v664, v668);
                          v578(v665, v579);
                          v590(v673, v699);
                          (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                          uint64_t v580 = v695;
                          v581 = *(void (**)(unsigned char *, uint64_t))(v694 + 8);
                          v581(v691, v695);
                          return ((uint64_t (*)(unsigned char *, uint64_t))v581)(v619, v580);
                        }
                        goto LABEL_176;
                      }
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
                      goto LABEL_177;
                    }
                    (*(void (**)(unsigned char *, uint64_t))(v688 + 8))(v632, v689);
                  }
LABEL_124:
                  v409 = *(void (**)(unsigned char *, uint64_t))(v667 + 8);
                  uint64_t v410 = v668;
                  v409(v664, v668);
                  v409(v665, v410);
                  v590(v673, v699);
                  (*(void (**)(unsigned char *, uint64_t))(v693 + 8))(v692, v690);
                  return (*(uint64_t (**)(unsigned char *, uint64_t))(v694 + 8))(v691, v695);
                }
              }
              else
              {
                uint64_t v401 = v704;
                (*(void (**)(void, uint64_t))(*(void *)v646 + 240))(v702, 1);
                if (v401) {
                  goto LABEL_124;
                }
                if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v688 + 48))(v642, 1, v689) == 1)
                {
                  (*((void (**)(unsigned char *, uint64_t))v686 + 1))(v642, v687);
                  v402 = v678;
                  v403 = v681;
                  v705 = v678;
                  unint64_t v706 = (unint64_t)v681;
                  uint64_t v404 = v679;
                  uint64_t v405 = v680;
                  uint64_t v707 = v679;
                  uint64_t v708 = v680;
                  type metadata accessor for JobResult();
                  v705 = v402;
                  unint64_t v706 = (unint64_t)v403;
                  uint64_t v707 = v404;
                  uint64_t v708 = v405;
                  type metadata accessor for Ingestion.FetchItemMetadata();
                  uint64_t v406 = sub_100437D5C();
                  uint64_t v408 = sub_1008AA66C((uint64_t)v702, v406, v407, *(void *)(*v696 + 136));
                  sub_1004D4360(v701, v408);
                  swift_release();
                  goto LABEL_124;
                }
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v688 + 32))(v622, v642, v689);
                uint64_t v437 = (uint64_t)v593;
                sub_1006F0030((uint64_t)v593, (uint64_t)v593);
                uint64_t v438 = v674;
                swift_allocObject();
                uint64_t v439 = sub_10096C0D0();
                v440 = *(void (**)(uint64_t, uint64_t, uint64_t))(v438 + 16);
                v440(v441, v662, v437);
                uint64_t v442 = sub_1003FC080(v439);
                v697 = (unsigned __int8 *)sub_100854970(v630, v631, v442);
                uint64_t v470 = v469;
                swift_bridgeObjectRelease();
                v471 = v622;
                v440((uint64_t)v614, (uint64_t)v622, (uint64_t)v593);
                v686 = (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)v646 + 296))(v471);
                uint64_t v704 = 0;
                if (v472) {
                  goto LABEL_175;
                }
                v519 = v678;
                v705 = v678;
                unint64_t v706 = (unint64_t)v681;
                v520 = v681;
                uint64_t v521 = v679;
                uint64_t v707 = v679;
                uint64_t v708 = v680;
                uint64_t v522 = v680;
                uint64_t v687 = type metadata accessor for JobResult();
                v705 = v519;
                unint64_t v706 = (unint64_t)v520;
                uint64_t v707 = v521;
                uint64_t v708 = v522;
                v684 = (unsigned char *)type metadata accessor for Bouncing.BounceItem();
                v523 = v670;
                sub_1003B4830((uint64_t)v670);
                uint64_t v524 = v685[1];
                uint64_t v683 = *v685;
                uint64_t v525 = (uint64_t)v597;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v597, v673, v699);
                v526 = v599;
                sub_1008353E4((uint64_t)v523, v683, v524, v525, (uint64_t)v599);
                (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v598 - 8) + 56))(v526, 0, 1);
                v527 = *(uint64_t (**)(uint64_t))(*v703 + 272);
                uint64_t v528 = swift_bridgeObjectRetain();
                v529 = (void *)v527(v528);
                v530 = v614;
                uint64_t v531 = sub_10083EC08((uint64_t)v614, (uint64_t)v686, (uint64_t)v697, v470, (uint64_t)v526, v529, *(void *)(*v696 + 120), *(void *)(*v696 + 128), *(void *)(*v696 + 136));

                (*(void (**)(unsigned char *, uint64_t))(v600 + 8))(v526, v601);
                v532 = v593;
                (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v530, v593);
                sub_1004D4360(v701, v531);
                swift_release();
                uint64_t v533 = v699;
                uint64_t v534 = swift_getAssociatedConformanceWitness();
                v705 = v532;
                unint64_t v706 = v533;
                uint64_t v707 = v594;
                uint64_t v708 = v534;
                type metadata accessor for ReconciliationID();
                uint64_t v535 = swift_getTupleTypeMetadata2();
                v536 = v675;
                v537 = &v675[*(int *)(v535 + 48)];
                sub_1003B4830((uint64_t)v675);
                swift_storeEnumTagMultiPayload();
                v538 = (void (*)(void, void))v702;
                v440((uint64_t)v537, (uint64_t)v702, (uint64_t)v532);
                swift_storeEnumTagMultiPayload();
                uint64_t v539 = v676;
                swift_storeEnumTagMultiPayload();
                sub_100591758(v701, (uint64_t)v536);
                v703 = *(void **)(v677 + 8);
                ((void (*)(unsigned char *, uint64_t))v703)(v536, v539);
                uint64_t v540 = (uint64_t)&v536[*(int *)(v535 + 48)];
                v440((uint64_t)v536, (uint64_t)v538, (uint64_t)v593);
                swift_storeEnumTagMultiPayload();
                sub_1003B4830(v540);
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                sub_100591758(v701, (uint64_t)v536);
                ((void (*)(unsigned char *, uint64_t))v703)(v536, v539);
                (*(void (**)(unsigned char *, uint64_t))(v688 + 8))(v622, v689);
              }
              v541 = *(void (**)(unsigned char *, uint64_t))(v667 + 8);
              uint64_t v542 = v668;
              v541(v664, v668);
              v541(v665, v542);
              goto LABEL_65;
            }
            id v355 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            v356 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v674 + 16);
            v356(v624, (void (*)(void, void))v702, v593);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v659)(v623, v691, v695);
            v357 = sub_10096B470();
            os_log_type_t v358 = sub_10096C5D0();
            if (os_log_type_enabled(v357, v358))
            {
              uint64_t v359 = swift_slowAlloc();
              v697 = (unsigned __int8 *)swift_slowAlloc();
              v705 = v697;
              *(_DWORD *)uint64_t v359 = 136315394;
              uint64_t v672 = v359 + 4;
              v360 = v626;
              v361 = v624;
              uint64_t v362 = (uint64_t)v593;
              v356(v626, (void (*)(void, void))v624, v593);
              v363 = *(void (**)(unsigned char *, uint64_t))(v674 + 8);
              v363(v361, v362);
              uint64_t v364 = sub_10096D220();
              unint64_t v366 = v365;
              v363(v360, v362);
              uint64_t v709 = sub_100719D44(v364, v366, (uint64_t *)&v705);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v359 + 12) = 2080;
              uint64_t v672 = v359 + 14;
              uint64_t v367 = v699;
              v368 = v670;
              v369 = v623;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v698 + 16))(v670, v623, v699);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v369, v695);
              swift_getAssociatedConformanceWitness();
              uint64_t v370 = sub_10096D220();
              unint64_t v372 = v371;
              v373 = (void (*)(void, uint64_t))v590;
              v590(v368, v367);
              uint64_t v709 = sub_100719D44(v370, v372, (uint64_t *)&v705);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v357, v358, "♻️ forcing bounce of colliding item %s to break move cycle with %s", (uint8_t *)v359, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v625, v633);
              v374 = &v676;
LABEL_134:
              v373(*(v374 - 32), v367);
              goto LABEL_109;
            }
            ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v623, v695);
            (*(void (**)(unsigned char *, unsigned __int8 *))(v674 + 8))(v624, v593);

            (*(void (**)(unsigned char *, uint64_t))(v634 + 8))(v625, v633);
            v464 = &v676;
            goto LABEL_149;
          }
          uint64_t v255 = *(void (**)(uint64_t, uint64_t *))(v672 + 8);
          v255(v247, v253);
          v590(v260, v248);
        }
        (*(void (**)(int *, uint64_t))(v657 + 8))(v666, TupleTypeMetadata2);
        uint64_t v256 = v665;
        uint64_t v257 = v668;
        goto LABEL_56;
      }
      char v194 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if (v194) {
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v197 = v171;
    goto LABEL_26;
  }
  (*(void (**)(unsigned char *, uint64_t))(v128 + 8))(v131, v127);
  uint64_t v154 = (uint64_t)v686;
  uint64_t v155 = v684;
  uint64_t v156 = v687;
  (*((void (**)(unsigned char *, uint64_t, uint64_t))v686 + 2))(v684, (uint64_t)v149 + v700[4].i32[0], v687);
  uint64_t v157 = v688;
  uint64_t v158 = v689;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v688 + 48))(v155, 1, v689) == 1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v154 + 8))(v155, v156);
  }
  int v176 = v685;
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v157 + 32))(v685, v155, v158);
  uint64_t v177 = v157;
  v705 = v678;
  unint64_t v706 = (unint64_t)v681;
  uint64_t v707 = v679;
  uint64_t v708 = v680;
  type metadata accessor for JobResult();
  uint64_t v704 = 0;
  uint64_t v178 = v699;
  uint64_t v179 = swift_getAssociatedConformanceWitness();
  uint64_t v180 = (uint64_t)v593;
  v705 = v593;
  unint64_t v706 = v178;
  uint64_t v707 = v594;
  uint64_t v708 = v179;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v181 = swift_getTupleTypeMetadata2();
  uint64_t v182 = v675;
  uint64_t v183 = &v675[*(int *)(v181 + 48)];
  (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v674 + 16))(v675, v176, v180);
  swift_storeEnumTagMultiPayload();
  uint64_t v184 = sub_100437D5C();
  void *v183 = 0;
  v183[1] = v184;
  v183[2] = v185;
  swift_storeEnumTagMultiPayload();
  uint64_t v186 = v676;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v701, (uint64_t)v182);
  (*(void (**)(unsigned char *, uint64_t))(v677 + 8))(v182, v186);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v177 + 8))(v685, v158);
}

uint64_t sub_1003BD730(uint64_t a1, void *a2, uint64_t a3, int8x16_t *a4)
{
  uint64_t v188 = a3;
  int v176 = a2;
  uint64_t v163 = sub_10096B0E0();
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v161 = (char *)v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a4[1].i64[0];
  uint64_t v8 = a4[2].i64[0];
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v174 = sub_10096C890();
  uint64_t v173 = *(void *)(v174 - 8);
  uint64_t v10 = __chkstk_darwin(v174);
  uint64_t v160 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v171 = (char *)v155 - v13;
  uint64_t v175 = v9;
  uint64_t v172 = *(void *)(v9 - 8);
  __chkstk_darwin(v12);
  uint64_t v177 = (char *)v155 - v14;
  uint64_t v15 = (ValueMetadata *)a4[1].i64[1];
  uint64_t v193 = a4;
  uint64_t v16 = a4[2].i64[1];
  uint64_t v197 = v7;
  uint64_t v198 = v15;
  uint64_t v181 = v15;
  uint64_t v199 = v8;
  uint64_t v200 = v16;
  uint64_t v180 = v16;
  uint64_t v166 = type metadata accessor for ReconciliationMutation();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (uint64_t)v155 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v159 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  char v187 = (char *)v155 - v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v170 = type metadata accessor for ItemState();
  uint64_t v169 = sub_10096C890();
  uint64_t v178 = *(char **)(v169 - 8);
  uint64_t v21 = __chkstk_darwin(v169);
  uint64_t v23 = (char *)v155 - v22;
  uint64_t v186 = *(void *)(v19 - 8);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v158 = (char *)v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v185 = (char *)v155 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v189 = (char *)v155 - v29;
  uint64_t v194 = AssociatedTypeWitness;
  unint64_t v195 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v167 = (char *)v155 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v184 = (char *)v155 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  TupleTypeMetadata3 = (uint64_t)v155 - v35;
  __chkstk_darwin(v34);
  uint64_t v183 = (void (*)(unsigned char *, uint64_t))((char *)v155 - v36);
  uint64_t v190 = v7;
  uint64_t v191 = v8;
  uint64_t v37 = type metadata accessor for FileTreeError();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)v155 - v39;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v41((char *)v155 - v39, a1, v37);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      __chkstk_darwin(result);
      qmemcpy(&v155[-6], " filename below syncability original", 36);
      strcpy(&v154[2], "alError ");
      uint64_t v58 = v194;
      uint64_t v197 = v194;
      uint64_t v198 = &type metadata for Filename;
      uint64_t v199 = v194;
      uint64_t v200 = sub_100033BE8(qword_100ACD7A0);
      uint64_t v201 = sub_100033BE8(&qword_100AD7360);
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v60 = (uint64_t *)&v40[TupleTypeMetadata[12]];
      uint64_t v61 = *v60;
      unint64_t v62 = v60[1];
      uint64_t v63 = &v40[TupleTypeMetadata[16]];
      uint64_t v64 = (unint64_t *)&v40[TupleTypeMetadata[20]];
      unint64_t v65 = *v64;
      unint64_t v66 = v64[1];
      swift_errorRelease();
      uint64_t v67 = (void (*)(void (*)(unsigned char *, uint64_t), char *, uint64_t))v195[4];
      v67(v183, v40, v58);
      v67((void (*)(unsigned char *, uint64_t))TupleTypeMetadata3, v63, v58);
      uint64_t v68 = (int8x16_t *)v65;
      BOOL v69 = v65 >= 0xFFFFFFFF00000000;
      uint64_t v70 = v196;
      uint64_t v71 = v192;
      if (v69 && (v66 & 0xF000000000000007) == 0) {
        goto LABEL_19;
      }
      if (!(v66 >> 62))
      {
        uint64_t v193 = v68;
        swift_bridgeObjectRelease();
        unint64_t v189 = (char *)v66;
        goto LABEL_44;
      }
      if (v66 >> 62 == 1)
      {
        uint64_t v193 = v68;
        swift_bridgeObjectRelease();
        unint64_t v189 = (char *)(v66 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_44:
        uint64_t v146 = v190;
        uint64_t v145 = v191;
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v147 = v180;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for Ingestion.TrackTemporaryItem();
        uint64_t v148 = *(void *)(*(void *)v71 + 120);
        uint64_t v149 = *(void *)(*(void *)v71 + 128);
        sub_100356990((uint64_t)v193, v66);
        uint64_t v150 = sub_1003A9380(v183, v148, v149, 0x800000040);
        uint64_t v151 = *(void *)(v150 + 96);
        uint64_t v152 = *(void *)(v150 + 104);
        *(void *)(v150 + 96) = 256;
        *(void *)(v150 + 104) = v189;
        char v153 = *(unsigned char *)(v150 + 112);
        *(unsigned char *)(v150 + 112) = 0;
        sub_1000D31F8(v151, v152, v153);
        uint64_t v197 = v146;
        uint64_t v198 = v181;
        uint64_t v199 = v145;
        uint64_t v200 = v147;
        type metadata accessor for JobResult();
        sub_1004D4360(v188, v150);
        swift_release();
        sub_10010DC6C((uint64_t)v193, v66);
        uint64_t v113 = (void (*)(uint64_t, uint64_t))v195[1];
        v113(TupleTypeMetadata3, v58);
        uint64_t v114 = v183;
        return ((uint64_t (*)(void, uint64_t))v113)(v114, v58);
      }
LABEL_19:
      uint64_t v87 = v183;
      uint64_t v88 = v61;
      uint64_t v89 = TupleTypeMetadata3;
      sub_1003B768C(v183, v88, v62, TupleTypeMetadata3, v176, v188, v193);
      if (v70)
      {
        swift_bridgeObjectRelease();
        sub_10010DC6C((uint64_t)v68, v66);
        uint64_t v90 = (void (*)(uint64_t, uint64_t))v195[1];
        v90(v89, v58);
        return ((uint64_t (*)(void, uint64_t))v90)(v87, v58);
      }
      uint64_t v196 = 0;
      swift_bridgeObjectRelease();
      sub_10010DC6C((uint64_t)v68, v66);
      uint64_t v113 = (void (*)(uint64_t, uint64_t))v195[1];
      v113(v89, v58);
      uint64_t v114 = v87;
      return ((uint64_t (*)(void, uint64_t))v113)(v114, v58);
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v72 = v194;
      uint64_t v73 = &v40[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      return ((uint64_t (*)(char *, uint64_t))v195[1])(v73, v72);
    case 3:
      sub_100033BE8(&qword_100AD7360);
      uint64_t v74 = v194;
      swift_getTupleTypeMetadata2();
      swift_errorRelease();
      return ((uint64_t (*)(char *, uint64_t))v195[1])(v40, v74);
    case 4:
      uint64_t v75 = v194;
      uint64_t v76 = swift_getTupleTypeMetadata2();
      ((void (*)(char *, uint64_t))v195[1])(&v40[*(int *)(v76 + 48)], v75);
      return (*(uint64_t (**)(char *, uint64_t))(v186 + 8))(v40, v19);
    case 5:
    case 10:
    case 12:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return result;
    case 6:
    case 9:
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v40, v37);
    case 7:
      uint64_t v77 = swift_getAssociatedTypeWitness();
      uint64_t v78 = swift_getTupleTypeMetadata2();
      uint64_t v79 = *(void (**)(char *, uint64_t))(*(void *)(v77 - 8) + 8);
      v79(&v40[*(int *)(v78 + 48)], v77);
      return ((uint64_t (*)(char *, uint64_t))v79)(v40, v77);
    case 8:
      return swift_errorRelease();
    case 11:
      uint64_t result = sub_1003B48CC();
      if ((result & 0x18) != 0)
      {
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for JobResult();
        uint64_t v80 = swift_getAssociatedTypeWitness();
        uint64_t v81 = swift_getAssociatedConformanceWitness();
        uint64_t v197 = v194;
        uint64_t v198 = (ValueMetadata *)v80;
        uint64_t v199 = AssociatedConformanceWitness;
        uint64_t v200 = v81;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v82 = swift_getTupleTypeMetadata2();
        uint64_t v83 = v164;
        uint64_t v84 = v164 + *(int *)(v82 + 48);
        sub_1003B4830(v164);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v84 = 0;
        *(void *)(v84 + 8) = 0;
        *(void *)(v84 + 16) = 0xB000000000000000;
        *(_OWORD *)(v84 + 24) = 0u;
        *(_OWORD *)(v84 + 40) = 0u;
        *(unsigned char *)(v84 + 56) = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = v166;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v188, v83);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v165 + 8))(v83, v85);
      }
      return result;
    case 14:
      swift_getWitnessTable();
      swift_allocError();
      v41(v86, a1, v37);
      return swift_willThrow();
    default:
      uint64_t v43 = swift_getAssociatedTypeWitness();
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t v45 = swift_getAssociatedConformanceWitness();
      uint64_t v46 = swift_getAssociatedConformanceWitness();
      uint64_t v197 = v43;
      uint64_t v198 = (ValueMetadata *)v44;
      uint64_t v199 = v45;
      uint64_t v200 = v46;
      type metadata accessor for FileItemVersion();
      uint64_t v47 = sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v48 = v194;
      uint64_t v156 = v47;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      swift_errorRelease();
      uint64_t v49 = v195;
      uint64_t v50 = (void (*)(char *, char *, uint64_t))v195[4];
      uint64_t v51 = v184;
      v155[1] = v195 + 4;
      v155[0] = v50;
      v50(v184, v40, v48);
      uint64_t v52 = v189;
      uint64_t v183 = (void (*)(unsigned char *, uint64_t))v49[2];
      ((void (*)(char *, char *, uint64_t))v183)(v189, v51, v48);
      uint64_t v53 = 1;
      uint64_t v157 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v49[7];
      v157(v52, 0, 1, v48);
      uint64_t v54 = v169;
      (*((void (**)(char *, uint64_t, uint64_t))v178 + 2))(v23, v192 + v193[3].i32[3], v169);
      uint64_t v55 = v170;
      uint64_t v56 = *(char **)(v170 - 8);
      int v57 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v56 + 6))(v23, 1, v170);
      v155[2] = v49 + 2;
      if (v57 == 1)
      {
        uint64_t v56 = v178;
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v183)(v185, v23, v194);
        uint64_t v53 = 0;
        uint64_t v54 = v55;
      }
      (*((void (**)(char *, uint64_t))v56 + 1))(v23, v54);
      uint64_t v91 = v185;
      uint64_t v92 = v194;
      v157(v185, v53, 1, v194);
      uint64_t v93 = v186;
      uint64_t v94 = v187;
      uint64_t v95 = &v187[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v186 + 16);
      v96(v187, v189, v19);
      uint64_t v178 = v95;
      v96(v95, v91, v19);
      uint64_t v97 = v195;
      uint64_t v98 = v94;
      uint64_t v99 = (uint64_t (*)(char *, uint64_t, uint64_t))v195[6];
      if (v99(v98, 1, v92) != 1)
      {
        uint64_t v107 = v158;
        v96(v158, v187, v19);
        uint64_t v108 = v178;
        int v109 = v99(v178, 1, v92);
        uint64_t v110 = (void (**)(char *, uint64_t))(v97 + 1);
        uint64_t v105 = v92;
        if (v109 != 1)
        {
          uint64_t v115 = v167;
          ((void (*)(char *, char *, uint64_t))v155[0])(v167, v108, v92);
          LODWORD(TupleTypeMetadata2) = sub_10096BBE0();
          uint64_t v116 = *v110;
          (*v110)(v115, v92);
          uint64_t v117 = *(void (**)(char *, uint64_t))(v186 + 8);
          v117(v185, v19);
          v117(v189, v19);
          v116(v107, v92);
          v117(v187, v19);
          uint64_t v103 = v192;
          uint64_t v106 = v193;
          uint64_t v104 = v177;
          uint64_t v102 = v195;
          if ((TupleTypeMetadata2 & 1) == 0) {
            goto LABEL_33;
          }
          goto LABEL_30;
        }
        uint64_t v111 = v107;
        uint64_t v112 = *(void (**)(char *, uint64_t))(v186 + 8);
        v112(v185, v19);
        v112(v189, v19);
        (*v110)(v111, v92);
        uint64_t v103 = v192;
        uint64_t v104 = v177;
        uint64_t v102 = v195;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v159 + 8))(v187, TupleTypeMetadata2);
        uint64_t v106 = v193;
        goto LABEL_33;
      }
      uint64_t v100 = *(void (**)(char *, uint64_t))(v93 + 8);
      v100(v185, v19);
      v100(v189, v19);
      int v101 = v99(v178, 1, v92);
      uint64_t v102 = v97;
      uint64_t v103 = v192;
      uint64_t v104 = v177;
      uint64_t v105 = v92;
      if (v101 != 1) {
        goto LABEL_27;
      }
      v100(v187, v19);
      uint64_t v106 = v193;
LABEL_30:
      BOOL v118 = sub_1003B49A8(v106, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
      uint64_t v104 = v177;
      if (v118 && (*(unsigned char *)(*(void *)v103 + 136) & 1) != 0)
      {
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        uint64_t v192 = type metadata accessor for JobResult();
        uint64_t v119 = swift_getAssociatedTypeWitness();
        uint64_t v120 = swift_getAssociatedConformanceWitness();
        uint64_t v197 = v105;
        uint64_t v198 = (ValueMetadata *)v119;
        uint64_t v199 = AssociatedConformanceWitness;
        uint64_t v200 = v120;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v121 = swift_getTupleTypeMetadata2();
        uint64_t v122 = v164;
        uint64_t v123 = v164 + *(int *)(v121 + 48);
        sub_1003B4830(v164);
        swift_storeEnumTagMultiPayload();
        long long v124 = *(_OWORD *)(*(void *)v103 + 120);
        *(_WORD *)uint64_t v123 = 770;
        *(_OWORD *)(v123 + 8) = v124;
        uint64_t v106 = v193;
        swift_storeEnumTagMultiPayload();
        uint64_t v125 = v166;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v188, v122);
        uint64_t v104 = v177;
        (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v122, v125);
      }
LABEL_33:
      uint64_t v193 = (int8x16_t *)&v40[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v126 = v173;
      uint64_t v127 = v171;
      uint64_t v128 = v174;
      (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v171, v103 + v106[4].i32[0], v174);
      uint64_t v129 = v172;
      uint64_t v130 = v175;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v127, 1, v175) == 1)
      {
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        uint64_t v132 = v190;
        uint64_t v131 = v191;
        uint64_t v133 = v181;
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v134 = v180;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for JobResult();
        uint64_t v197 = v132;
        uint64_t v198 = v133;
        uint64_t v199 = v131;
        uint64_t v200 = v134;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v135 = (uint64_t)v167;
        ((void (*)(char *, char *, uint64_t))v183)(v167, v184, v105);
        uint64_t v136 = v161;
        sub_10096B0D0();
        sub_10096B080();
        double v138 = v137;
        (*(void (**)(char *, uint64_t))(v162 + 8))(v136, v163);
        double v139 = v138 * 1000000000.0;
        if ((~COERCE__INT64(v138 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v139 > -9.22337204e18)
          {
            if (v139 < 9.22337204e18)
            {
              uint64_t v140 = sub_1008AA66C(v135, 0x2000000000000000, (uint64_t)v139, 256);
              uint64_t v141 = (void (*)(uint64_t, uint64_t))v102[1];
              v141(v135, v105);
              sub_1004D4360(v188, v140);
              swift_release();
              v141((uint64_t)v184, v105);
              return (*(uint64_t (**)(int8x16_t *, uint64_t))(*(void *)(v156 - 8) + 8))(v193, v156);
            }
LABEL_48:
            __break(1u);
            JUMPOUT(0x1003BEF28);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v104, v127, v130);
      uint64_t v142 = (uint64_t)v104;
      uint64_t v143 = v160;
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v129 + 16))(v160, v142, v130);
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v129 + 56))(v143, 0, 1, v130);
      uint64_t v144 = v196;
      sub_10086C908(v143, v142, 0, 0, 0, v176, *(void *)(*(void *)v103 + 120), *(void *)(*(void *)v103 + 128), 256, v188);
      if (v144)
      {
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v126 + 8))(v143, v128);
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v142, v130);
        ((void (*)(char *, uint64_t))v102[1])(v184, v105);
        return (*(uint64_t (**)(int8x16_t *))(*(void *)(v156 - 8) + 8))(v193);
      }
      uint64_t v196 = 0;
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v126 + 8))(v143, v128);
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v142, v130);
      ((void (*)(char *, uint64_t))v102[1])(v184, v105);
      return (*(uint64_t (**)(int8x16_t *, uint64_t))(*(void *)(v156 - 8) + 8))(v193, v156);
  }
}

unsigned int (*sub_1003BEF84(unsigned int (*a1)(unsigned __int8 *, uint64_t, uint64_t), void *a2, uint64_t a3, int8x16_t *a4))(unsigned __int8 *, uint64_t, uint64_t)
{
  uint64_t v321 = a3;
  uint64_t v325 = a2;
  v323 = a1;
  uint64_t v4 = a4[1].i64[0];
  uint64_t v5 = a4[1].i64[1];
  uint64_t v7 = (uint64_t (*)(void, void))a4[2].i64[0];
  uint64_t v6 = a4[2].i64[1];
  v324 = a4;
  *(void *)&long long v329 = v4;
  *((void *)&v329 + 1) = v5;
  v330 = v7;
  int v322 = v7;
  uint64_t v331 = v6;
  uint64_t v260 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_10096C890();
  uint64_t v257 = *(void *)(v8 - 8);
  uint64_t v258 = v8;
  __chkstk_darwin(v8);
  uint64_t v315 = (char *)&v251 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v329 = AssociatedTypeWitness;
  *((void *)&v329 + 1) = v11;
  uint64_t v285 = AssociatedConformanceWitness;
  v330 = (uint64_t (*)(void, void))AssociatedConformanceWitness;
  uint64_t v283 = v14;
  uint64_t v331 = v14;
  type metadata accessor for ThrottlingKey();
  uint64_t v15 = sub_10096C890();
  uint64_t v298 = *(void *)(v15 - 8);
  uint64_t v299 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  v307 = (char *)&v251 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v306 = (char *)&v251 - v18;
  uint64_t v255 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v255);
  uint64_t v254 = (uint64_t)&v251 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v322;
  uint64_t v256 = type metadata accessor for SnapshotItem();
  uint64_t v21 = sub_10096C890();
  uint64_t v252 = *(void *)(v21 - 8);
  uint64_t v253 = v21;
  __chkstk_darwin(v21);
  uint64_t v261 = (char *)&v251 - v22;
  uint64_t v266 = sub_10096C890();
  uint64_t v316 = *(void *)(v266 - 8);
  uint64_t v23 = __chkstk_darwin(v266);
  char v263 = (char *)&v251 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v264 = (char *)&v251 - v26;
  uint64_t v289 = AssociatedTypeWitness;
  uint64_t v268 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v259 = (char *)&v251 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v262 = (char *)&v251 - v29;
  *(void *)&long long v329 = v5;
  *((void *)&v329 + 1) = v12;
  v330 = (uint64_t (*)(void, void))v6;
  uint64_t v331 = (uint64_t)v20;
  uint64_t v30 = type metadata accessor for ItemReconciliation();
  uint64_t v308 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v314 = (char *)&v251 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v278 = (char *)&v251 - v33;
  uint64_t v34 = sub_10096A7B0();
  uint64_t v296 = *(void *)(v34 - 8);
  uint64_t v297 = v34;
  __chkstk_darwin(v34);
  uint64_t v295 = (char *)&v251 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10096A630();
  uint64_t v312 = *(void *)(v36 - 8);
  uint64_t v313 = v36;
  __chkstk_darwin(v36);
  uint64_t v311 = (void (*)(char *, uint64_t, uint64_t))((char *)&v251 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v329 = v12;
  *((void *)&v329 + 1) = v5;
  v330 = v20;
  uint64_t v331 = v6;
  uint64_t v38 = type metadata accessor for ReconciliationMutation();
  uint64_t v286 = *(void *)(v38 - 8);
  uint64_t v287 = v38;
  __chkstk_darwin(v38);
  uint64_t v284 = (uint64_t)&v251 - v39;
  uint64_t v40 = sub_10096C890();
  uint64_t v275 = *(void *)(v40 - 8);
  uint64_t v276 = v40;
  __chkstk_darwin(v40);
  uint64_t v274 = (char *)&v251 - v41;
  uint64_t v42 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v280 = *(void *)(v42 - 8);
  uint64_t v281 = v42;
  __chkstk_darwin(v42);
  uint64_t v279 = (char *)&v251 - v43;
  uint64_t v290 = v6;
  uint64_t v291 = v5;
  uint64_t v44 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v301 = *(void *)(v44 - 8);
  uint64_t v302 = v44;
  uint64_t v45 = __chkstk_darwin(v44);
  uint64_t v300 = (char *)&v251 - v46;
  uint64_t v318 = v11;
  uint64_t v317 = *(void *)(v11 - 8);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v269 = (uint64_t)&v251 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v271 = (uint64_t)&v251 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v277 = (uint64_t)&v251 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v265 = (uint64_t)&v251 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v293 = (uint64_t)&v251 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v267 = (char *)&v251 - v58;
  __chkstk_darwin(v57);
  uint64_t v310 = (uint64_t)&v251 - v59;
  uint64_t v305 = v30;
  uint64_t v309 = sub_10096C890();
  uint64_t v320 = *(void *)(v309 - 8);
  uint64_t v60 = __chkstk_darwin(v309);
  uint64_t v272 = (uint64_t)&v251 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v270 = (uint64_t)&v251 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v292 = (uint64_t)&v251 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v273 = (char *)&v251 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v282 = (char *)&v251 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v294 = (char *)&v251 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v304 = (char *)&v251 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v303 = (char *)&v251 - v75;
  __chkstk_darwin(v74);
  uint64_t v319 = (char *)&v251 - v76;
  uint64_t v288 = v12;
  uint64_t v77 = v323;
  uint64_t v78 = type metadata accessor for FileTreeError();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v82 = (char *)&v251 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80);
  uint64_t v84 = (char *)&v251 - v83;
  type metadata accessor for Code(0);
  *(void *)&long long v329 = -2010;
  sub_1003D2B38((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
  if ((sub_10096AA60() & 1) == 0)
  {
    uint64_t v85 = v334;
    sub_1003B4FE8((uint64_t)v325, v77, v321, v324);
    if (v85) {
      return v77;
    }
    uint64_t v334 = 0;
  }
  *(void *)&long long v329 = v77;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  if (swift_dynamicCast())
  {
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    v86(v82, v84, v78);
    uint64_t v87 = v334;
    sub_1003BD730((uint64_t)v82, v325, v321, v324);
    if (v87)
    {
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))(v79 + 8);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v78);
    }
    else
    {
      swift_getWitnessTable();
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))swift_allocError();
      v86(v105, v82, v78);
    }
    swift_errorRelease();
    return v77;
  }
  swift_errorRelease();
  *(void *)&long long v329 = -2010;
  if (sub_10096AA60())
  {
    uint64_t v88 = v310;
    sub_1003B4830(v310);
    uint64_t v89 = (uint64_t)v319;
    uint64_t v90 = v334;
    sub_1000DF200(v88, (uint64_t)v319);
    uint64_t v91 = v320;
    if (v90)
    {
      uint64_t v92 = *(void (**)(char *, uint64_t))(v317 + 8);
      uint64_t v93 = (char *)v88;
LABEL_19:
      uint64_t v111 = v318;
LABEL_20:
      v92(v93, v111);
      return v77;
    }
    uint64_t v334 = 0;
    uint64_t v296 = *(void *)(v317 + 8);
    uint64_t v297 = v317 + 8;
    ((void (*)(uint64_t, uint64_t))v296)(v88, v318);
    uint64_t v112 = v91 + 16;
    uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
    uint64_t v114 = v303;
    uint64_t v115 = v309;
    v113(v303, v89, v309);
    uint64_t v116 = v308;
    uint64_t v117 = v305;
    uint64_t v312 = *(void *)(v308 + 48);
    uint64_t v313 = v308 + 48;
    int v118 = ((uint64_t (*)(char *, uint64_t, uint64_t))v312)(v114, 1, v305);
    uint64_t v311 = v113;
    if (v118 == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(v114, v115);
      uint64_t v119 = v304;
      v113(v304, v89, v115);
    }
    else
    {
      long long v124 = v300;
      uint64_t v123 = v301;
      uint64_t v125 = v114;
      uint64_t v126 = v114;
      uint64_t v127 = v302;
      (*(void (**)(char *, char *, uint64_t))(v301 + 16))(v300, v125, v302);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v126, v117);
      uint64_t v77 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))&v124[*(int *)(v127 + 40)];
      uint64_t v128 = v123;
      uint64_t v113 = v311;
      (*(void (**)(char *, uint64_t))(v128 + 8))(v124, v127);
      uint64_t v119 = v304;
      v113(v304, (uint64_t)v319, v115);
      if (v77)
      {
        uint64_t v129 = *(void (**)(char *, uint64_t))(v320 + 8);
        v129(v119, v115);
        goto LABEL_32;
      }
    }
    uint64_t v130 = v294;
    uint64_t v310 = v112;
    v113(v294, (uint64_t)v119, v115);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v312)(v130, 1, v117) == 1)
    {
      uint64_t v129 = *(void (**)(char *, uint64_t))(v320 + 8);
      v129(v119, v115);
      v129(v130, v115);
      goto LABEL_34;
    }
    uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v300;
    uint64_t v131 = v301;
    uint64_t v132 = v130;
    uint64_t v133 = v130;
    uint64_t v134 = v119;
    uint64_t v135 = v302;
    (*(void (**)(char *, char *, uint64_t))(v301 + 16))(v300, v132, v302);
    (*(void (**)(char *, uint64_t))(v308 + 8))(v133, v117);
    uint64_t v136 = *(void *)((char *)v77 + *(int *)(v135 + 36));
    (*(void (**)(unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t), uint64_t))(v131 + 8))(v77, v135);
    uint64_t v129 = *(void (**)(char *, uint64_t))(v320 + 8);
    v129(v134, v115);
    if ((v136 & 0xFFFFFFFFFFFFFFEFLL) == 0)
    {
LABEL_34:
      double v138 = v282;
      v311(v282, (uint64_t)v319, v115);
      int v139 = ((uint64_t (*)(char *, uint64_t, uint64_t))v312)(v138, 1, v117);
      v304 = (char *)v129;
      if (v139 == 1)
      {
        v129(v138, v115);
        uint64_t v140 = v289;
        uint64_t v141 = v318;
      }
      else
      {
        uint64_t v146 = v117;
        uint64_t v148 = v279;
        uint64_t v147 = v280;
        uint64_t v149 = v281;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v279, &v138[*(int *)(v117 + 52)], v281);
        uint64_t v150 = *(void (**)(char *, uint64_t))(v308 + 8);
        v150(v138, v146);
        LODWORD(v146) = v148[*(int *)(v149 + 52)];
        (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v149);
        BOOL v151 = v146 == 3;
        uint64_t v140 = v289;
        uint64_t v141 = v318;
        if (!v151) {
          goto LABEL_56;
        }
        uint64_t v303 = (char *)v150;
        uint64_t v152 = v273;
        v311(v273, (uint64_t)v319, v115);
        uint64_t v153 = v305;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v312)(v152, 1, v305) == 1)
        {
          ((void (*)(char *, uint64_t))v304)(v152, v115);
          uint64_t v154 = v274;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v317 + 56))(v274, 1, 1, v141);
          uint64_t v156 = v275;
          uint64_t v155 = v276;
        }
        else
        {
          uint64_t v163 = v300;
          uint64_t v162 = v301;
          uint64_t v164 = v302;
          (*(void (**)(char *, char *, uint64_t))(v301 + 16))(v300, v152, v302);
          ((void (*)(char *, uint64_t))v303)(v152, v153);
          uint64_t v154 = v274;
          uint64_t v156 = v275;
          uint64_t v155 = v276;
          (*(void (**)(char *, char *, uint64_t))(v275 + 16))(v274, v163, v276);
          (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v164);
          uint64_t v165 = v317;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v317 + 48))(v154, 1, v141) != 1)
          {
            int v176 = v267;
            (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v267, v154, v141);
            *(void *)&long long v329 = v288;
            *((void *)&v329 + 1) = v291;
            v330 = v322;
            uint64_t v331 = v290;
            uint64_t v313 = type metadata accessor for JobResult();
            *(void *)&long long v329 = v140;
            *((void *)&v329 + 1) = v141;
            v330 = (uint64_t (*)(void, void))v285;
            uint64_t v331 = v283;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v178 = v284;
            uint64_t v179 = (unsigned char *)(v284 + *(int *)(TupleTypeMetadata2 + 48));
            (*(void (**)(uint64_t, char *, uint64_t))(v165 + 16))(v284, v176, v141);
            swift_storeEnumTagMultiPayload();
            *uint64_t v179 = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v180 = v287;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v321, v178);
            (*(void (**)(uint64_t, uint64_t))(v286 + 8))(v178, v180);
            ((void (*)(char *, uint64_t))v296)(v176, v141);
            goto LABEL_56;
          }
        }
        (*(void (**)(char *, uint64_t))(v156 + 8))(v154, v155);
      }
LABEL_56:
      *(void *)&long long v329 = v288;
      *((void *)&v329 + 1) = v291;
      v330 = v322;
      uint64_t v331 = v290;
      int v322 = (uint64_t (*)(void, void))type metadata accessor for JobResult();
      *(void *)&long long v329 = v140;
      *((void *)&v329 + 1) = v141;
      v330 = (uint64_t (*)(void, void))v285;
      uint64_t v331 = v283;
      uint64_t v181 = type metadata accessor for ReconciliationID();
      uint64_t v182 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v312 = v181;
      uint64_t v313 = v182;
      uint64_t v183 = swift_getTupleTypeMetadata2();
      uint64_t v184 = v284;
      uint64_t v185 = (unsigned char *)(v284 + *(int *)(v183 + 48));
      sub_1003B4830(v284);
      swift_storeEnumTagMultiPayload();
      *uint64_t v185 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v186 = v287;
      swift_storeEnumTagMultiPayload();
      uint64_t v187 = v321;
      sub_100591758(v321, v184);
      uint64_t v188 = *(void (**)(uint64_t, uint64_t))(v286 + 8);
      v188(v184, v186);
      uint64_t v189 = v184 + *(int *)(v183 + 48);
      sub_1003B4830(v184);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v189 = 0;
      *(void *)(v189 + 8) = 0;
      *(void *)(v189 + 16) = 0xB000000000000000;
      *(_OWORD *)(v189 + 24) = 0u;
      *(_OWORD *)(v189 + 40) = 0u;
      *(unsigned char *)(v189 + 56) = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758(v187, v184);
      v188(v184, v186);
      ((void (*)(char *, uint64_t))v304)(v319, v309);
      uint64_t v77 = v323;
      goto LABEL_57;
    }
LABEL_32:
    uint64_t v137 = v334;
    sub_1003B4FE8((uint64_t)v325, v323, v321, v324);
    if (v137)
    {
      v129(v319, v309);
    }
    else
    {
      type metadata accessor for NSFileProviderError(0);
      *(void *)&long long v327 = -2010;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v157 = swift_allocObject();
      *(_OWORD *)(v157 + 16) = xmmword_100973BB0;
      *(void *)(v157 + 32) = 0xD000000000000016;
      *(void *)(v157 + 40) = 0x80000001009A0290;
      *(void *)(v157 + 72) = &type metadata for Bool;
      *(unsigned char *)(v157 + 48) = 1;
      sub_10004621C(v157);
      sub_1003D2B38((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
      sub_10096ABD0();
      v129(v319, v309);
      return (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v329;
    }
    return v77;
  }
  uint64_t v94 = (char *)v311;
  sub_10096A540();
  sub_1003D2B38((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
  uint64_t v95 = v313;
  char v96 = sub_10096AA60();
  (*(void (**)(char *, uint64_t))(v312 + 8))(v94, v95);
  uint64_t v97 = (uint64_t)v315;
  uint64_t v98 = v316;
  if (v96)
  {
    uint64_t v99 = (void *)sub_10096ABE0();
    id v100 = [v99 userInfo];
    uint64_t v101 = sub_10096B9C0();

    uint64_t v102 = v314;
    if (*(void *)(v101 + 16) && (unint64_t v103 = sub_10000DDD0(0xD000000000000013, 0x800000010099AFB0), (v104 & 1) != 0))
    {
      sub_1001FAC78(*(void *)(v101 + 56) + 32 * v103, (uint64_t)&v327);
    }
    else
    {
      long long v327 = 0u;
      long long v328 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v328 + 1))
    {
      sub_100042A48(&v327, &v329);
      LODWORD(v327) = 1;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100973BB0;
      *(void *)(inited + 32) = 0xD000000000000013;
      *(void *)(inited + 40) = 0x800000010099AFB0;
      sub_1001FAC78((uint64_t)&v329, inited + 48);
      sub_10004621C(inited);
      sub_1003D2B38((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      uint64_t v121 = v295;
      uint64_t v122 = v297;
      sub_10096ABD0();
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))sub_10096A790();

      (*(void (**)(char *, uint64_t))(v296 + 8))(v121, v122);
      sub_1000268E0((uint64_t)&v329);
      return v77;
    }

    sub_10017D1A4((uint64_t)&v327);
    uint64_t v107 = v325;
    goto LABEL_58;
  }
  LODWORD(v329) = sub_10096A680();
  sub_100045CB4();
  char v106 = sub_10096AA60();
  uint64_t v107 = v325;
  uint64_t v102 = v314;
  if (v106)
  {
    uint64_t v108 = v293;
    sub_1003B4830(v293);
    uint64_t v109 = v292;
    uint64_t v110 = v334;
    sub_1000DF200(v108, v292);
    if (v110)
    {
      uint64_t v92 = *(void (**)(char *, uint64_t))(v317 + 8);
      uint64_t v93 = (char *)v108;
      goto LABEL_19;
    }
    uint64_t v142 = *(void (**)(uint64_t, uint64_t))(v317 + 8);
    v142(v108, v318);
    uint64_t v143 = v308;
    uint64_t v144 = v305;
    int v145 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v308 + 48))(v109, 1, v305);
    uint64_t v334 = 0;
    if (v145 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v109, v309);
LABEL_57:
      uint64_t v107 = v325;
      uint64_t v102 = v314;
      uint64_t v97 = (uint64_t)v315;
      uint64_t v98 = v316;
      goto LABEL_58;
    }
    uint64_t v158 = v109;
    uint64_t v159 = v278;
    uint64_t v160 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 32))(v278, v158, v144);
    uint64_t v161 = &v159[*(int *)(v144 + 52)];
    if (v161[*(int *)(v281 + 44)] != 1)
    {
      (*(void (**)(char *, uint64_t))(v143 + 8))(v159, v144);
      goto LABEL_57;
    }
    if ((*(unsigned char *)(*v326 + 139) & 8) == 0)
    {
      (*(void (**)(char *, uint64_t))(v308 + 8))(v278, v305);
      goto LABEL_57;
    }
    if (((*(uint64_t (**)(uint64_t))(*v325 + 152))(v160) & 0x1000) != 0)
    {
      uint64_t v166 = v316;
      uint64_t v167 = v264;
      uint64_t v168 = v266;
      (*(void (**)(char *, char *, uint64_t))(v316 + 16))(v264, v161, v266);
      uint64_t v169 = v268;
      uint64_t v170 = v289;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v167, 1, v289) != 1)
      {
        uint64_t v226 = v262;
        (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v262, v167, v170);
        uint64_t v227 = v261;
        uint64_t v228 = v334;
        (*(void (**)(char *, uint64_t))(*(void *)v325[4] + 240))(v226, 1);
        if (v228)
        {
          (*(void (**)(char *, uint64_t))(v169 + 8))(v226, v170);
          uint64_t v92 = *(void (**)(char *, uint64_t))(v308 + 8);
          uint64_t v93 = v278;
          goto LABEL_85;
        }
        uint64_t v334 = 0;
        uint64_t v246 = v256;
        uint64_t v247 = *(void *)(v256 - 8);
        int v248 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v247 + 48))(v227, 1, v256);
        uint64_t v172 = v278;
        if (v248 == 1)
        {
          (*(void (**)(char *, uint64_t))(v252 + 8))(v227, v253);
          (*(void (**)(char *, uint64_t))(v268 + 8))(v262, v289);
          BOOL v171 = 0;
        }
        else
        {
          uint64_t v249 = v254;
          sub_10010DA98((uint64_t)&v227[*(int *)(v246 + 48)], v254);
          (*(void (**)(char *, uint64_t))(v247 + 8))(v227, v246);
          int v250 = *(unsigned __int8 *)(v249 + *(int *)(v255 + 84));
          sub_10010DAFC(v249);
          if (v250 == 3)
          {
            (*(void (**)(char *, uint64_t))(v268 + 8))(v262, v289);
            BOOL v171 = 1;
          }
          else
          {
            BOOL v171 = v250 == 2;
            (*(void (**)(char *, uint64_t))(v268 + 8))(v262, v289);
          }
        }
LABEL_53:
        uint64_t v173 = v325[5];
        uint64_t v174 = v265;
        sub_1003B4830(v265);
        uint64_t v175 = v334;
        (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v173 + 264))(v332, v174);
        if (v175)
        {
          v142(v174, v318);
          uint64_t v92 = *(void (**)(char *, uint64_t))(v308 + 8);
          uint64_t v93 = v172;
LABEL_85:
          uint64_t v111 = v305;
          goto LABEL_20;
        }
        uint64_t v334 = 0;
        uint64_t v224 = v174;
        uint64_t v225 = v318;
        v142(v224, v318);
        sub_10016B800((uint64_t)v332, (uint64_t)v333);
        if (sub_1000DBD64((uint64_t)v333) == 1)
        {
          if (!v171)
          {
LABEL_82:
            (*(void (**)(char *, uint64_t))(v308 + 8))(v172, v305);
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v233 = v305;
          uint64_t v234 = v333[26];
          uint64_t v235 = v333[27];
          LODWORD(v319) = *(_DWORD *)&v172[*(int *)(v305 + 76)] & 1;
          char v236 = (*(uint64_t (**)(void))(*v325 + 520))();
          uint64_t v237 = sub_1005EBAF8(v234, v235, 0, v236 & 1, v172[*(int *)(v233 + 56)] == 1, v319);
          sub_1000DBD88((uint64_t)v332);
          char v238 = v237 == 2 || v171;
          if ((v238 & 1) == 0) {
            goto LABEL_82;
          }
        }
        *(void *)&long long v329 = v288;
        *((void *)&v329 + 1) = v291;
        v330 = v322;
        uint64_t v331 = v290;
        uint64_t v325 = (void *)type metadata accessor for JobResult();
        *(void *)&long long v329 = v289;
        *((void *)&v329 + 1) = v225;
        v330 = (uint64_t (*)(void, void))v285;
        uint64_t v331 = v283;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v239 = swift_getTupleTypeMetadata2();
        uint64_t v240 = v284;
        uint64_t v241 = v284 + *(int *)(v239 + 48);
        uint64_t v242 = v326;
        sub_1003B4830(v284);
        swift_storeEnumTagMultiPayload();
        long long v243 = *(_OWORD *)(*v242 + 120);
        *(_WORD *)uint64_t v241 = 769;
        *(_OWORD *)(v241 + 8) = v243;
        swift_storeEnumTagMultiPayload();
        uint64_t v244 = v287;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v321, v240);
        v323 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v286 + 8);
        ((void (*)(uint64_t, uint64_t))v323)(v240, v244);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v245 = v240 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        sub_1003B4830(v240);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v245 = 0;
        *(void *)(v245 + 8) = 0;
        *(void *)(v245 + 16) = 0xB000000000000000;
        *(_OWORD *)(v245 + 24) = 0u;
        *(_OWORD *)(v245 + 40) = 0u;
        *(unsigned char *)(v245 + 56) = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v321, v240);
        ((void (*)(uint64_t, uint64_t))v323)(v240, v244);
        type metadata accessor for NSFileProviderError(0);
        *(void *)&long long v327 = -2008;
        sub_10004621C((uint64_t)_swiftEmptyArrayStorage);
        sub_1003D2B38((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
        sub_10096ABD0();
        (*(void (**)(char *, uint64_t))(v308 + 8))(v278, v305);
        return (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v329;
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v168);
    }
    BOOL v171 = 0;
    uint64_t v172 = v278;
    goto LABEL_53;
  }
LABEL_58:
  uint64_t v191 = (uint64_t)v306;
  uint64_t v190 = (uint64_t)v307;
  if (!sub_1005152D8() || (*(unsigned char *)(*v326 + 138) & 1) == 0) {
    goto LABEL_60;
  }
  sub_10040EE44(v191);
  uint64_t v193 = v334;
  BOOL v194 = sub_1003E08B8((uint64_t)v77, v191, (uint64_t)v107);
  uint64_t v334 = v193;
  if (v193)
  {
    (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v191, v299);
    return v77;
  }
  BOOL v198 = v194;
  (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v191, v299);
  if (v198)
  {
    uint64_t v199 = v277;
    uint64_t v200 = v326;
    sub_1003B4830(v277);
    uint64_t v201 = v271;
    sub_1003B4830(v271);
    uint64_t v202 = v270;
    uint64_t v203 = v334;
    sub_1000DF200(v201, v270);
    if (v203)
    {
      uint64_t v204 = *(void (**)(uint64_t, uint64_t))(v317 + 8);
      uint64_t v205 = v318;
      v204(v201, v318);
      v204(v199, v205);
      return v77;
    }
    int v322 = *(uint64_t (**)(void, void))(v317 + 8);
    uint64_t v208 = v322(v201, v318);
    uint64_t v209 = *v200;
    uint64_t v210 = *(void *)(*v200 + 120);
    uint64_t v334 = *(void *)(*v200 + 128);
    uint64_t v319 = *(char **)(v209 + 136);
    uint64_t v211 = (*(uint64_t (**)(uint64_t))(*v107 + 176))(v208);
    uint64_t v212 = (*(uint64_t (**)(void))(*(void *)v321 + 184))();
    sub_1003E1168(v199, v202, v210, v334, (uint64_t)v319, v211, v212);
    uint64_t v334 = 0;
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v202, v309);
    v322(v277, v318);
    uint64_t v77 = v323;
    uint64_t v192 = v326;
    uint64_t v102 = v314;
    uint64_t v97 = (uint64_t)v315;
    uint64_t v98 = v316;
    uint64_t v190 = (uint64_t)v307;
  }
  else
  {
LABEL_60:
    uint64_t v192 = v326;
  }
  if (sub_1005152D8() && (*(unsigned char *)(*v192 + 138) & 2) != 0)
  {
    sub_10040EE44(v190);
    uint64_t v195 = v334;
    BOOL v196 = sub_1003E08B8((uint64_t)v77, v190, (uint64_t)v107);
    if (v195)
    {
      (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v190, v299);
      return v77;
    }
    BOOL v206 = v196;
    (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v190, v299);
    if (v206)
    {
      uint64_t v334 = v107[2];
      uint64_t v207 = v269;
      sub_1003B4830(v269);
      sub_1000DF200(v207, v272);
      (*(void (**)(uint64_t, uint64_t))(v317 + 8))(v207, v318);
      uint64_t v213 = v272;
      uint64_t v214 = v305;
      int v215 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v308 + 48))(v272, 1, v305);
      uint64_t v216 = v213;
      if (v215 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v213, v309);
      }
      else
      {
        uint64_t v334 = 0;
        uint64_t v217 = v308;
        (*(void (**)(char *, uint64_t, uint64_t))(v308 + 32))(v102, v216, v214);
        uint64_t v218 = &v102[*(int *)(v214 + 52)];
        uint64_t v219 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
        uint64_t v220 = v263;
        uint64_t v221 = v266;
        v219(v263, v218, v266);
        char v222 = v102;
        uint64_t v223 = v289;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v220, 1, v289) == 1)
        {
          (*(void (**)(char *, uint64_t))(v217 + 8))(v222, v305);
          (*(void (**)(char *, uint64_t))(v316 + 8))(v220, v221);
        }
        else
        {
          uint64_t v229 = v268;
          uint64_t v230 = (uint64_t)v259;
          (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v259, v220, v223);
          uint64_t v231 = v305;
          sub_100827044(v305, v97);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v260 - 8) + 56))(v97, 0, 1);
          uint64_t v232 = v334;
          sub_1003E1168(v230, v97, *(void *)(*v326 + 120), *(void *)(*v326 + 128), *(void *)(*v326 + 136), (uint64_t)v107, v321);
          if (v232)
          {
            (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v97, v258);
            (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v230, v223);
            (*(void (**)(char *, uint64_t))(v308 + 8))(v222, v231);
            return v77;
          }
          (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v97, v258);
          (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v230, v223);
          (*(void (**)(char *, uint64_t))(v308 + 8))(v222, v231);
        }
      }
    }
  }
  swift_errorRetain();
  return v77;
}

#error "1003C1614: too big function (funcsize=0)"

int8x16_t *sub_1003D23B0(void *a1, uint64_t a2, int8x16_t *a3)
{
  uint64_t v8 = type metadata accessor for FileTreeError();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = v3 + a3[5].i32[0];
  uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))v12;
  if (!*(void *)v12)
  {
    sub_1003C1614(a1, a2, a3);
    if (!v4) {
      return 0;
    }
    v18[1] = v4;
    swift_errorRetain();
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    if (swift_dynamicCast())
    {
      if (swift_getEnumCaseMultiPayload() == 14)
      {
        swift_errorRelease();
        swift_getWitnessTable();
        uint64_t v16 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))swift_allocError();
        swift_storeEnumTagMultiPayload();
        a3 = (int8x16_t *)sub_1003BEF84(v16, a1, a2, a3);
        swift_errorRelease();
        swift_errorRelease();
        return a3;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    swift_errorRelease();
    return a3;
  }
  uint64_t v14 = *(void **)(v12 + 8);
  swift_errorRetain();
  id v15 = v14;
  a3 = (int8x16_t *)sub_1003BEF84(v13, a1, a2, a3);
  sub_1003D2AF8((uint64_t)v13, v14);
  return a3;
}

int8x16_t *sub_1003D25F0(void *a1, uint64_t a2, int8x16_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a3[1].i64[1];
  uint64_t v10 = a3[2].i64[0];
  uint64_t v9 = a3[2].i64[1];
  uint64_t v51 = a3[1].i64[0];
  uint64_t v52 = v8;
  uint64_t v53 = v10;
  uint64_t v54 = v9;
  uint64_t v47 = type metadata accessor for ReconciliationMutation();
  uint64_t v55 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v52 = v8;
  uint64_t v53 = v10;
  uint64_t v54 = v9;
  uint64_t v13 = type metadata accessor for JobResult();
  uint64_t v14 = *(void *)(v4 + a3[4].i32[3]);
  uint64_t v48 = a2;
  uint64_t v46 = v13;
  sub_100591830(a2, v14);
  uint64_t v49 = a3;
  uint64_t v50 = a1;
  uint64_t v15 = a3[5].i32[0];
  uint64_t v44 = v4;
  uint64_t v16 = (uint64_t *)(v4 + v15);
  uint64_t v45 = *v16;
  if (v45)
  {
    uint64_t v43 = (void *)v16[1];
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v20 = swift_getAssociatedConformanceWitness();
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = v18;
    uint64_t v53 = AssociatedConformanceWitness;
    uint64_t v54 = v20;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v22 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    sub_1003B4830((uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v22 = xmmword_10097B210;
    v22[16] = 4;
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v47;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    id v42 = v43;
    uint64_t v24 = v48;
    sub_100591758(v48, (uint64_t)v12);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v55 + 8);
    v55 += 8;
    v25(v12, v23);
    if (sub_1005152D8())
    {
      sub_1003D2AF8(v45, v43);
      uint64_t v26 = v49;
    }
    else
    {
      uint64_t v35 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v36 = v49;
      sub_1003B4830((uint64_t)v12);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v45;
      swift_errorRetain();
      id v38 = v42;
      swift_errorRelease();
      uint64_t v39 = v43;
      *(void *)uint64_t v35 = v43;
      uint64_t v24 = v48;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v47;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v24, (uint64_t)v12);
      sub_1003D2AF8(v37, v39);
      v25(v12, v40);
      uint64_t v26 = v36;
    }
  }
  else
  {
    uint64_t v27 = swift_getAssociatedTypeWitness();
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v29 = swift_getAssociatedConformanceWitness();
    uint64_t v30 = swift_getAssociatedConformanceWitness();
    uint64_t v51 = v27;
    uint64_t v52 = v28;
    uint64_t v53 = v29;
    uint64_t v54 = v30;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v31 = &v12[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v32 = v49;
    sub_1003B4830((uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v31 = xmmword_10097B210;
    unsigned char v31[16] = 4;
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v47;
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v48;
    sub_100591758(v48, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v33);
    uint64_t v26 = v32;
    uint64_t v24 = v34;
  }
  return sub_1003D23B0(v50, v24, v26);
}

void sub_1003D2AF8(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRelease();
  }
}

uint64_t sub_1003D2B38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Reconciliation.ReconcileAfterPropagation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003D2B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

uint64_t sub_1003D2BA0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ItemState();
    uint64_t result = sub_10096C890();
    if (v2 <= 0x3F)
    {
      type metadata accessor for SnapshotItem();
      uint64_t result = sub_10096C890();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1003D2E10(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v290 = *(_DWORD *)(v2 + 80);
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v266 = v4;
  uint64_t v267 = v3;
  int v288 = *(_DWORD *)(v4 + 80);
  uint64_t v296 = v288;
  uint64_t v292 = v290 & 0xF8 | v288 | 7u;
  uint64_t v268 = v2;
  unsigned int v5 = *(_DWORD *)(v2 + 84);
  unsigned int v259 = *(_DWORD *)(v4 + 84);
  unsigned int v273 = v5;
  if (v5 <= v259) {
    unsigned int v5 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v262 = v5;
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v5 = 2147483646;
  }
  unsigned int v272 = v5;
  uint64_t v276 = *(void *)(v2 + 64);
  uint64_t v278 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v282 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v282 - 8);
  int v286 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v270 = v8;
  uint64_t v271 = v7;
  int v283 = *(_DWORD *)(v8 + 80);
  uint64_t v304 = v286;
  uint64_t v298 = v283;
  uint64_t v291 = v6;
  uint64_t v10 = *(unsigned int *)(v6 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (v10 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v263 = v12;
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  unsigned int v274 = v12;
  unsigned int v275 = *(_DWORD *)(v8 + 84);
  uint64_t v280 = *(void *)(v6 + 64);
  size_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  size_t v306 = v13;
  if (!v9) {
    ++v13;
  }
  size_t v307 = v13;
  uint64_t v265 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v265 - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  unint64_t v17 = v283 | (unint64_t)v286;
  uint64_t v18 = v16;
  uint64_t v19 = *(void *)(v16 - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v261 = v19;
  uint64_t v303 = v20;
  uint64_t v301 = v15 & 0xF8 | v20 | 7u;
  unint64_t v21 = v17 | v301;
  uint64_t v264 = v14;
  unsigned int v22 = *(_DWORD *)(v14 + 84);
  if (v22 <= *(_DWORD *)(v19 + 84)) {
    unsigned int v23 = *(_DWORD *)(v19 + 84);
  }
  else {
    unsigned int v23 = *(_DWORD *)(v14 + 84);
  }
  if (v23 <= 0x7FFFFFFE) {
    unsigned int v24 = 2147483646;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v24 <= v10) {
    unsigned int v25 = v10;
  }
  else {
    unsigned int v25 = v24;
  }
  if (v25 > v11) {
    unsigned int v11 = v25;
  }
  if (v11 <= 0x7FFFFFFF) {
    int v26 = 0x7FFFFFFF;
  }
  else {
    int v26 = v11;
  }
  uint64_t v27 = *(void *)(v14 + 64);
  uint64_t v28 = *(void *)(*(void *)(v16 - 8) + 64);
  uint64_t v29 = *a2;
  *a1 = *a2;
  if ((v21 | v292) != 7) {
    goto LABEL_35;
  }
  if (((v288 | v290 | v286 | v283 | v15 | v20) & 0x100000) != 0) {
    goto LABEL_35;
  }
  uint64_t v277 = v276 + 7;
  uint64_t v250 = v288 + 8;
  uint64_t v248 = v278 + 7;
  size_t v30 = ((((v278 + 7 + ((v250 + (v277 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v288)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v31 = v283;
  uint64_t v32 = v283 | 7;
  uint64_t v33 = v17 | 7;
  uint64_t v284 = v280 + 7;
  uint64_t v279 = v298 + 16;
  uint64_t v255 = v298 + 10;
  size_t v256 = v307 + 7;
  unint64_t v257 = (v31
        + 10
        + ((((((v306 + 12 + ((v306 + v31 + ((v31 + 12) & ~v31)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v31;
  unint64_t v34 = ((((((((((v307 + 7 + v257) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v258 = (v31 + 16 + ((v280 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v31 | 7);
  size_t __n = v34 + v258;
  uint64_t v287 = v280 + v286;
  uint64_t v289 = v280 + v301;
  uint64_t v35 = v27 + 7;
  unint64_t v36 = ((((v28
          + 7
          + ((v20 + 8 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v20)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v37 = (v32 + 16 + ((v280 + v301 + ((v280 + v304) & ~v304)) & ~v301) + v36) & ~v32;
  if (((((((v21 + (((v17 | 7) + ((v292 + 8) & ~v292) + v30 + 9) & ~(v17 | 7)) + v34 + v258) & ~v21)
         + ((((v37 + v34 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
LABEL_35:
    a1 = (uint64_t *)(v29 + (((v21 | v292) + 16) & ~(v21 | v292)));
    swift_retain();
    return a1;
  }
  size_t v237 = v306 + 12;
  int v252 = v26;
  unsigned int v253 = v24;
  unsigned int v238 = v11;
  unsigned int v239 = v22;
  unsigned int v236 = v23;
  uint64_t v245 = v35;
  unint64_t v246 = ((((v37 + v34 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v241 = v28 + 7;
  uint64_t v242 = v20 + 8;
  unint64_t v247 = v36;
  uint64_t v244 = v32 + 16;
  uint64_t v281 = v298 + 12;
  uint64_t v251 = v306 + v298;
  uint64_t v243 = v18;
  unint64_t v240 = ((((((((((v307 + 7 + v257) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v254 = v37;
  uint64_t v297 = ~v296;
  id v38 = (char *)(((unint64_t)a1 + v292 + 8) & ~v292);
  uint64_t v39 = (char *)(((unint64_t)a2 + v292 + 8) & ~v292);
  swift_retain();
  unsigned int v260 = v10;
  if (v273 == v272)
  {
    uint64_t v40 = v277;
    uint64_t v41 = ~v33;
    if (!(*(unsigned int (**)(unint64_t))(v268 + 48))(((unint64_t)a2 + v292 + 8) & ~v292)) {
      goto LABEL_43;
    }
LABEL_42:
    memcpy(v38, v39, v30);
    goto LABEL_45;
  }
  uint64_t v40 = v277;
  id v42 = (uint64_t *)((unint64_t)&v39[v277] & 0xFFFFFFFFFFFFFFF8);
  if (v262 <= 0x7FFFFFFE)
  {
    uint64_t v43 = *v42;
    if ((unint64_t)*v42 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    uint64_t v41 = ~v33;
    if ((v43 + 1) < 2) {
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  uint64_t v41 = ~v33;
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v266 + 48))(((unint64_t)v42 + v250) & v297, v259, v267))
  {
    goto LABEL_42;
  }
LABEL_43:
  id v42 = (uint64_t *)((unint64_t)&v39[v40] & 0xFFFFFFFFFFFFFFF8);
LABEL_44:
  (*(void (**)(char *, char *, uint64_t))(v268 + 16))(v38, v39, AssociatedTypeWitness);
  uint64_t v44 = (void *)((unint64_t)&v38[v40] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v44 = *v42;
  unint64_t v45 = ((unint64_t)v44 + v250) & v297;
  unint64_t v46 = ((unint64_t)v42 + v250) & v297;
  uint64_t v47 = *(void (**)(unint64_t, unint64_t, uint64_t))(v266 + 16);
  swift_bridgeObjectRetain();
  v47(v45, v46, v267);
  uint64_t v48 = (void *)((v248 + v45) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)((v248 + v46) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  uint64_t v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = v260;
  swift_bridgeObjectRetain();
LABEL_45:
  uint64_t v52 = ~v32;
  uint64_t v53 = ~v298;
  uint64_t v54 = &v38[v30];
  uint64_t v55 = *(void *)&v39[v30];
  v54[8] = v39[v30 + 8];
  *(void *)uint64_t v54 = v55;
  uint64_t v299 = (void *)((unint64_t)&v38[v30 + 9 + v33] & v41);
  uint64_t v56 = (const void *)((unint64_t)&v39[v30 + 9 + v33] & v41);
  uint64_t v295 = v52;
  if (v10 == v274)
  {
    uint64_t v57 = (unint64_t)&v39[v30 + 9 + v33] & v41;
    uint64_t v58 = v282;
    int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v291 + 48))(v57, v10, v282);
    uint64_t v60 = v279;
    goto LABEL_47;
  }
  uint64_t v58 = v282;
  uint64_t v61 = v284;
  uint64_t v62 = (void *)(((unint64_t)v56 + v284) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v60 = v279;
  if ((v263 & 0x80000000) == 0)
  {
    unint64_t v63 = v62[1];
    if (v63 >= 0xFFFFFFFF) {
      LODWORD(v63) = -1;
    }
    if (v63 == -1) {
      goto LABEL_53;
    }
    goto LABEL_68;
  }
  unint64_t v64 = ((unint64_t)v62 + v279) & v52;
  unint64_t v66 = (v281 + v64) & v53;
  if (v275 > 0x7FFFFFFD)
  {
    int v59 = (*(uint64_t (**)(unint64_t))(v270 + 48))(v66);
LABEL_47:
    uint64_t v61 = v284;
    if (!v59)
    {
LABEL_53:
      uint64_t v62 = (void *)(((unint64_t)v56 + v61) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v64 = ((unint64_t)v62 + v60) & v52;
      uint64_t v65 = v281;
      unint64_t v66 = (v281 + v64) & v53;
      uint64_t v67 = v251;
      unint64_t v68 = (v251 + v66) & v53;
      goto LABEL_54;
    }
LABEL_68:
    uint64_t v102 = v299;
    memcpy(v299, v56, __n);
    unsigned int v112 = v260;
    unsigned int v113 = v253;
    int v114 = v252;
    unint64_t v115 = v257;
    unint64_t v116 = v258;
    unint64_t v117 = ~v21;
LABEL_69:
    size_t v111 = v307;
    goto LABEL_70;
  }
  unint64_t v68 = (v251 + v66) & v53;
  unint64_t v118 = *(void *)(((v237 + v68) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v118 >= 0xFFFFFFFF) {
    LODWORD(v118) = -1;
  }
  if ((v118 + 1) >= 2) {
    goto LABEL_68;
  }
  uint64_t v67 = v251;
  uint64_t v65 = v281;
LABEL_54:
  unint64_t v285 = v66;
  uint64_t v293 = v56;
  uint64_t v69 = v56;
  uint64_t v70 = v61;
  unint64_t v71 = v68;
  (*(void (**)(void *, const void *, uint64_t))(v291 + 16))(v299, v69, v58);
  uint64_t v72 = (void *)(((unint64_t)v299 + v70) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v72 = *v62;
  v72[1] = v62[1];
  unint64_t v73 = ((unint64_t)v72 + v60) & v52;
  *(unsigned char *)unint64_t v73 = *(unsigned char *)v64;
  uint64_t v74 = v73 | 4;
  int v75 = *(_DWORD *)(v64 | 4);
  *(unsigned char *)(v74 + 4) = *(unsigned char *)((v64 | 4) + 4);
  *(_DWORD *)uint64_t v74 = v75;
  *(_WORD *)(v73 + 10) = *(_WORD *)(v64 + 10);
  unint64_t v76 = (v65 + v73) & v53;
  uint64_t v77 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
  swift_bridgeObjectRetain();
  v77(v76, v285, v271);
  unint64_t v78 = (v67 + v76) & v53;
  v77(v78, v71, v271);
  uint64_t v79 = (unsigned char *)(v78 + v306);
  unsigned char *v79 = *(unsigned char *)(v71 + v306);
  v79[1] = *(unsigned char *)(v71 + v306 + 1);
  v79[2] = *(unsigned char *)(v71 + v306 + 2);
  v79[3] = *(unsigned char *)(v71 + v306 + 3);
  v79[4] = *(unsigned char *)(v71 + v306 + 4);
  unint64_t v80 = (v78 + v306 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v81 = (v71 + v306 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v80 = *(void *)v81;
  *(void *)(v80 + 8) = *(void *)(v81 + 8);
  *(unsigned char *)(v80 + 16) = *(unsigned char *)(v81 + 16);
  *(unsigned char *)(v80 + 17) = *(unsigned char *)(v81 + 17);
  *(unsigned char *)(v80 + 18) = *(unsigned char *)(v81 + 18);
  *(unsigned char *)(v80 + 19) = *(unsigned char *)(v81 + 19);
  unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v83 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v82 = *(void *)v83;
  *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
  *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
  *(unsigned char *)(v82 + 10) = *(unsigned char *)(v83 + 10);
  *(unsigned char *)(v82 + 11) = *(unsigned char *)(v83 + 11);
  *(unsigned char *)(v82 + 12) = *(unsigned char *)(v83 + 12);
  uint64_t v84 = (void *)((v81 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v85 = *v84;
  unint64_t v86 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
  uint64_t v88 = (void *)((v255 + v86) & v53);
  uint64_t v89 = (const void *)((v255 + v87) & v53);
  uint64_t v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v270 + 48);
  swift_bridgeObjectRetain();
  if (v90(v89, 1, v271))
  {
    memcpy(v88, v89, v307);
  }
  else
  {
    v77((unint64_t)v88, (unint64_t)v89, v271);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v270 + 56))(v88, 0, 1, v271);
  }
  uint64_t v91 = (void *)(((unint64_t)v88 + v256) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v92 = (void *)(((unint64_t)v89 + v256) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v91 = *v92;
  unint64_t v93 = ((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = ((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v95 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  *(void *)unint64_t v93 = v95;
  char v96 = (void *)(((unint64_t)v91 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v97 = (void *)(((unint64_t)v92 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v96 = *v97;
  unint64_t v98 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v99 = (uint64_t *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v100 = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v58 = v282;
  uint64_t v56 = v293;
  if ((v100 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v98 = *(_OWORD *)v99;
  }
  else
  {
    uint64_t v101 = *v99;
    sub_10001EBB0(*v99, v100);
    *(void *)unint64_t v98 = v101;
    *(void *)(v98 + 8) = v100;
  }
  uint64_t v102 = v299;
  unint64_t v103 = (v98 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v104 = ((unint64_t)v99 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v105 = *(void *)v104;
  *(unsigned char *)(v103 + 8) = *(unsigned char *)(v104 + 8);
  *(void *)unint64_t v103 = v105;
  *(unsigned char *)(v103 + 9) = *(unsigned char *)(v104 + 9);
  unint64_t v106 = (v103 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v107 = (v104 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v108 = *(_DWORD *)v107;
  *(unsigned char *)(v106 + 4) = *(unsigned char *)(v107 + 4);
  *(_DWORD *)unint64_t v106 = v108;
  uint64_t v109 = (void *)((v103 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v110 = (void *)((v104 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  size_t v111 = v306;
  unsigned int v112 = v260;
  unsigned int v113 = v253;
  int v114 = v252;
  unint64_t v115 = v257;
  unint64_t v116 = v258;
  unint64_t v117 = ~v21;
  if (!v275) {
    goto LABEL_69;
  }
LABEL_70:
  uint64_t v119 = ~v304;
  uint64_t v120 = ~v301;
  uint64_t v121 = ~v303;
  unint64_t v122 = v115 + 7;
  unint64_t v123 = v116
       + ((((((((((v122 + v111) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  long long v124 = (char *)(((unint64_t)v102 + v21 + v123) & v117);
  uint64_t v125 = (char *)(((unint64_t)v56 + v21 + v123) & v117);
  unint64_t v305 = v122;
  if (v112 == v114)
  {
    int v126 = (*(uint64_t (**)(char *))(v291 + 48))(v125);
    goto LABEL_72;
  }
  unint64_t v128 = (unint64_t)&v125[v287] & v119;
  unint64_t v129 = (v289 + v128) & v120;
  if (v113 == v114)
  {
    if (v239 == v113)
    {
      int v126 = (*(uint64_t (**)(unint64_t))(v264 + 48))((v289 + v128) & v120);
      goto LABEL_72;
    }
    uint64_t v207 = (unint64_t *)((v245 + v129) & 0xFFFFFFFFFFFFFFF8);
    if (v236 <= 0x7FFFFFFE)
    {
      unint64_t v208 = *v207;
      goto LABEL_108;
    }
    int v126 = (*(uint64_t (**)(unint64_t))(v261 + 48))(((unint64_t)v207 + v242) & v121);
  }
  else
  {
    unint64_t v130 = v129 + v247;
    if ((v238 & 0x80000000) == 0)
    {
      unint64_t v131 = *(void *)(v130 + 8);
      if (v131 >= 0xFFFFFFFF) {
        LODWORD(v131) = -1;
      }
      if (v131 != -1) {
        goto LABEL_73;
      }
      goto LABEL_82;
    }
    uint64_t v209 = (v281 + ((v244 + v130) & v295)) & v53;
    if (v275 <= 0x7FFFFFFD)
    {
      unint64_t v208 = *(void *)(((v237 + ((v251 + v209) & v53)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_108:
      if (v208 >= 0xFFFFFFFF) {
        LODWORD(v208) = -1;
      }
      if ((v208 + 1) >= 2) {
        goto LABEL_73;
      }
LABEL_83:
      uint64_t v132 = v125;
      uint64_t v133 = v53;
      uint64_t v134 = *(void (**)(char *))(v291 + 16);
      uint64_t v302 = v132;
      v134(v124);
      unint64_t v135 = (unint64_t)&v124[v287] & v119;
      ((void (*)(unint64_t, unint64_t, uint64_t))v134)(v135, v128, v58);
      unint64_t v136 = (v289 + v135) & v120;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 16))(v136, v129, v265);
      uint64_t v137 = (void *)((v245 + v136) & 0xFFFFFFFFFFFFFFF8);
      double v138 = (void *)((v245 + v129) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v137 = *v138;
      unint64_t v139 = ((unint64_t)v137 + v242) & v121;
      unint64_t v140 = ((unint64_t)v138 + v242) & v121;
      uint64_t v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v261 + 16);
      swift_bridgeObjectRetain();
      v141(v139, v140, v243);
      uint64_t v142 = (void *)((v241 + v140) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v143 = (void *)((v241 + v139) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v143 = *v142;
      uint64_t v144 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v145 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v144 = *v145;
      v144[1] = v145[1];
      uint64_t v146 = (void *)(v136 + v247);
      *uint64_t v146 = *(void *)(v129 + v247);
      v146[1] = *(void *)(v129 + v247 + 8);
      unint64_t v147 = (v244 + v136 + v247) & v295;
      unint64_t v148 = (v244 + v129 + v247) & v295;
      *(unsigned char *)unint64_t v147 = *(unsigned char *)v148;
      uint64_t v149 = v147 | 4;
      int v150 = *(_DWORD *)(v148 | 4);
      *(unsigned char *)(v149 + 4) = *(unsigned char *)((v148 | 4) + 4);
      *(_DWORD *)uint64_t v149 = v150;
      *(_WORD *)(v147 + 10) = *(_WORD *)(v148 + 0xA);
      unint64_t v151 = (v281 + v147) & v133;
      unint64_t v152 = (v281 + v148) & v133;
      uint64_t v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v151, v152, v271);
      uint64_t v154 = (v251 + v151) & v133;
      uint64_t v155 = (v251 + v152) & v133;
      v153(v154, v155, v271);
      uint64_t v156 = (unsigned char *)(v154 + v306);
      *uint64_t v156 = *(unsigned char *)(v155 + v306);
      v156[1] = *(unsigned char *)(v155 + v306 + 1);
      v156[2] = *(unsigned char *)(v155 + v306 + 2);
      v156[3] = *(unsigned char *)(v155 + v306 + 3);
      v156[4] = *(unsigned char *)(v155 + v306 + 4);
      unint64_t v157 = (v154 + v306 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v155 + v306 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (void *)((v255 + v163) & v133);
      uint64_t v166 = (const void *)((v255 + v164) & v133);
      uint64_t v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v270 + 48);
      swift_bridgeObjectRetain();
      if (v167(v166, 1, v271))
      {
        memcpy(v165, v166, v307);
      }
      else
      {
        v153((unint64_t)v165, (unint64_t)v166, v271);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v270 + 56))(v165, 0, 1, v271);
      }
      uint64_t v168 = (void *)(((unint64_t)v165 + v256) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (void *)(((unint64_t)v166 + v256) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      uint64_t v173 = (void *)(((unint64_t)v168 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v174 = (void *)(((unint64_t)v169 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v173 = *v174;
      unint64_t v175 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
      int v176 = (uint64_t *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v177 = v176[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v177 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v175 = *(_OWORD *)v176;
      }
      else
      {
        uint64_t v178 = *v176;
        sub_10001EBB0(*v176, v177);
        *(void *)unint64_t v175 = v178;
        *(void *)(v175 + 8) = v177;
      }
      unint64_t v179 = (v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = *(void *)v180;
      *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
      *(void *)unint64_t v179 = v181;
      *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
      unint64_t v182 = (v179 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v183 = (v180 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v184 = *(_DWORD *)v183;
      *(unsigned char *)(v182 + 4) = *(unsigned char *)(v183 + 4);
      *(_DWORD *)unint64_t v182 = v184;
      uint64_t v185 = (void *)((v179 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v186 = (void *)((v180 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v185 = *v186;
      v185[1] = v186[1];
      unint64_t v187 = v147 + v240;
      uint64_t v188 = (long long *)(v148 + v240);
      unint64_t v189 = *(void *)(v148 + v240 + 16);
      if (v189 >= 0xFFFFFFFF) {
        LODWORD(v189) = -1;
      }
      int v190 = v189 - 1;
      swift_bridgeObjectRetain();
      if (v190 < 0)
      {
        *(void *)unint64_t v187 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *((unsigned char *)v188 + 8);
        *(unsigned char *)(v187 + 9) = *((unsigned char *)v188 + 9);
        uint64_t v203 = *((void *)v188 + 2);
        swift_errorRetain();
        *(void *)(v187 + 16) = v203;
        uint64_t v204 = *((void *)v188 + 3);
        swift_errorRetain();
        *(void *)(v187 + 24) = v204;
        *(unsigned char *)(v187 + 32) = *((unsigned char *)v188 + 32);
        *(unsigned char *)(v187 + 33) = *((unsigned char *)v188 + 33);
        *(unsigned char *)(v187 + 34) = *((unsigned char *)v188 + 34);
        *(void *)(v187 + 40) = *((void *)v188 + 5);
        *(void *)(v187 + 48) = *((void *)v188 + 6);
        *(void *)(v187 + 56) = *((void *)v188 + 7);
        *(void *)(v187 + 64) = *((void *)v188 + 8);
        *(unsigned char *)(v187 + 72) = *((unsigned char *)v188 + 72);
        *(void *)(v187 + 80) = *((void *)v188 + 10);
        *(void *)(v187 + 88) = *((void *)v188 + 11);
        uint64_t v300 = (void *)*((void *)v188 + 12);
        *(void *)(v187 + 96) = v300;
        *(unsigned char *)(v187 + 104) = *((unsigned char *)v188 + 104);
        *(unsigned char *)(v187 + 105) = *((unsigned char *)v188 + 105);
        *(void *)(v187 + 112) = *((void *)v188 + 14);
        *(void *)(v187 + 120) = *((void *)v188 + 15);
        *(void *)(v187 + 128) = *((void *)v188 + 16);
        *(void *)(v187 + 136) = *((void *)v188 + 17);
        *(void *)(v187 + 144) = *((void *)v188 + 18);
        *(void *)(v187 + 152) = *((void *)v188 + 19);
        *(void *)(v187 + 160) = *((void *)v188 + 20);
        *(void *)(v187 + 168) = *((void *)v188 + 21);
        *(unsigned char *)(v187 + 176) = *((unsigned char *)v188 + 176);
        *(void *)(v187 + 184) = *((void *)v188 + 23);
        uint64_t v205 = *((void *)v188 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v206 = v300;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v205)
        {
          *(void *)(v187 + 192) = v205;
          *(void *)(v187 + 200) = *((void *)v188 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v187 + 192) = v188[12];
        }
        size_t v127 = v306;
        *(void *)(v187 + 208) = *((void *)v188 + 26);
        *(void *)(v187 + 216) = *((void *)v188 + 27);
        *(void *)(v187 + 224) = *((void *)v188 + 28);
        *(void *)(v187 + 232) = *((void *)v188 + 29);
        *(void *)(v187 + 240) = *((void *)v188 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v191 = *v188;
        long long v192 = v188[1];
        long long v193 = v188[3];
        *(_OWORD *)(v187 + 32) = v188[2];
        *(_OWORD *)(v187 + 48) = v193;
        *(_OWORD *)unint64_t v187 = v191;
        *(_OWORD *)(v187 + 16) = v192;
        long long v194 = v188[4];
        long long v195 = v188[5];
        long long v196 = v188[7];
        *(_OWORD *)(v187 + 96) = v188[6];
        *(_OWORD *)(v187 + 112) = v196;
        *(_OWORD *)(v187 + 64) = v194;
        *(_OWORD *)(v187 + 80) = v195;
        long long v197 = v188[8];
        long long v198 = v188[9];
        long long v199 = v188[11];
        *(_OWORD *)(v187 + 160) = v188[10];
        *(_OWORD *)(v187 + 176) = v199;
        *(_OWORD *)(v187 + 128) = v197;
        *(_OWORD *)(v187 + 144) = v198;
        long long v200 = v188[12];
        long long v201 = v188[13];
        long long v202 = v188[14];
        *(void *)(v187 + 240) = *((void *)v188 + 30);
        *(_OWORD *)(v187 + 208) = v201;
        *(_OWORD *)(v187 + 224) = v202;
        *(_OWORD *)(v187 + 192) = v200;
        size_t v127 = v306;
      }
      uint64_t v210 = (_OWORD *)((v187 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v211 = (long long *)(((unint64_t)v188 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v212 = *v211;
      *(_OWORD *)((char *)v210 + 9) = *(long long *)((char *)v211 + 9);
      *uint64_t v210 = v212;
      unint64_t v213 = (v187 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v214 = ((unint64_t)v188 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v215 = *(_OWORD *)v214;
      *(unsigned char *)(v213 + 16) = *(unsigned char *)(v214 + 16);
      *(_OWORD *)unint64_t v213 = v215;
      uint64_t v216 = (void *)((v187 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v217 = ((unint64_t)v188 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v218 = *(void *)v217;
      v217 += 15;
      *uint64_t v216 = v218;
      uint64_t v219 = (void *)(((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v220 = *(void *)(v217 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v221 = *(void *)((v217 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v220, v221);
      *uint64_t v219 = v220;
      v219[1] = v221;
      uint64_t v125 = v302;
      if (v275) {
        goto LABEL_103;
      }
      goto LABEL_74;
    }
    int v126 = (*(uint64_t (**)(uint64_t))(v270 + 48))(v209);
  }
LABEL_72:
  if (!v126)
  {
LABEL_82:
    unint64_t v128 = (unint64_t)&v125[v287] & v119;
    unint64_t v129 = (v289 + v128) & v120;
    goto LABEL_83;
  }
LABEL_73:
  memcpy(v124, v125, v246);
LABEL_74:
  size_t v127 = v307;
LABEL_103:
  unint64_t v222 = ((((v254
           + ((((((((((v305 + v127) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v223 = (unint64_t)&v124[v222];
  unint64_t v224 = (unint64_t)&v125[v222];
  unint64_t v225 = v223 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v225 = *(void *)(v224 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v225 + 8) = *(unsigned char *)((v224 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v226 = (void **)((v224 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v227 = *v226;
  uint64_t v228 = (void *)((v223 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v228 = *v226;
  unint64_t v229 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v230 = (unint64_t *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v231 = *v230;
  id v232 = v227;
  if (v231 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v229 = *(_OWORD *)v230;
  }
  else
  {
    swift_errorRetain();
    *(void *)unint64_t v229 = v231;
    uint64_t v233 = (void *)v230[1];
    *(void *)(v229 + 8) = v233;
    id v234 = v233;
  }
  return a1;
}

void sub_1003D4478(uint64_t a1)
{
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (a1 + (v4 | v7 | 7) + 8) & ~(unint64_t)(v4 | v7 | 7);
  uint64_t v9 = *(unsigned int *)(v3 + 84);
  if (v9 <= *(_DWORD *)(v6 + 84)) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v3 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    int v11 = 2147483646;
  }
  else {
    int v11 = v10;
  }
  uint64_t v12 = *(void *)(v3 + 64) + 7;
  uint64_t v13 = v7 + 8;
  uint64_t v123 = ~v7;
  unint64_t v126 = (((*(void *)(*(void *)(v5 - 8) + 64) + 7 + ((v7 + 8 + (v12 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v9 == v11)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v8, v9, AssociatedTypeWitness)) {
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
LABEL_17:
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v14 + v13) & v123, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
  if (v10 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v14 + v13) & ~v7)) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v15 = *v14;
  if ((unint64_t)*v14 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  if ((v15 + 1) < 2) {
    goto LABEL_17;
  }
LABEL_18:
  unint64_t v16 = (v8 + v126 + 16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v119 = sub_10096B0E0();
  uint64_t v20 = *(void *)(v119 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v115 = v19;
  uint64_t v112 = v21 | v19;
  uint64_t v22 = v21 | 7;
  uint64_t v23 = (v16 + (v21 | v19 | 7) + 9) & ~(v21 | v19 | 7);
  uint64_t v24 = *(unsigned int *)(v18 + 84);
  unsigned int v25 = *(_DWORD *)(v20 + 84);
  if (v25 <= 0x7FFFFFFE) {
    unsigned int v26 = 2147483646;
  }
  else {
    unsigned int v26 = *(_DWORD *)(v20 + 84);
  }
  unsigned int v108 = v26;
  if (v24 > v26) {
    unsigned int v26 = *(_DWORD *)(v18 + 84);
  }
  if (v26 <= 0x7FFFFFFF) {
    int v27 = 0x7FFFFFFF;
  }
  else {
    int v27 = v26;
  }
  uint64_t v110 = *(void *)(v18 + 64);
  uint64_t v28 = v110 + 7;
  uint64_t v127 = ~v22;
  uint64_t v29 = v21 + 16;
  uint64_t v114 = v21 | 7;
  unint64_t v107 = (v21 + 16 + ((v110 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v22;
  uint64_t v30 = ~v21;
  uint64_t v118 = v21 + 12;
  uint64_t v31 = *(void *)(*(void *)(v119 - 8) + 64);
  uint64_t v103 = v31 + v21;
  uint64_t v104 = v31 + 12;
  uint64_t v105 = ~v21;
  uint64_t v101 = v21 + 10;
  unint64_t v32 = (v21
       + 10
       + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  uint64_t v120 = v17;
  uint64_t v121 = v18;
  unsigned int v102 = *(_DWORD *)(v20 + 84);
  uint64_t v124 = v23;
  if (v24 == v27)
  {
    uint64_t v33 = *(uint64_t (**)(void))(v18 + 48);
    goto LABEL_28;
  }
  unint64_t v36 = (v28 + v23) & 0xFFFFFFFFFFFFFFF8;
  if ((v26 & 0x80000000) != 0)
  {
    unint64_t v39 = (v118 + ((v29 + v36) & v127)) & v30;
    if (v25 > 0x7FFFFFFD)
    {
      uint64_t v33 = *(uint64_t (**)(void))(v20 + 48);
LABEL_28:
      unint64_t v34 = (v21
           + 10
           + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      int v35 = v33();
      unint64_t v32 = v34;
      if (v35) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    unint64_t v40 = (v103 + v39) & v30;
    unint64_t v41 = (v104 + v40) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v95 = *(void *)(v41 + 8);
    if (v95 >= 0xFFFFFFFF) {
      LODWORD(v95) = -1;
    }
    if ((v95 + 1) < 2)
    {
      unint64_t v116 = (v21
            + 10
            + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      uint64_t v38 = ~v21;
      goto LABEL_35;
    }
  }
  else
  {
    unint64_t v37 = *(void *)(v36 + 8);
    if (v37 >= 0xFFFFFFFF) {
      LODWORD(v37) = -1;
    }
    if (v37 == -1)
    {
LABEL_34:
      unint64_t v116 = v32;
      uint64_t v38 = v105;
      unint64_t v39 = (v118 + ((v29 + ((v28 + v124) & 0xFFFFFFFFFFFFFFF8)) & v127)) & v105;
      unint64_t v40 = (v103 + v39) & v105;
      unint64_t v41 = (v104 + v40) & 0xFFFFFFFFFFFFFFF8;
LABEL_35:
      (*(void (**)(void))(v121 + 8))();
      swift_bridgeObjectRelease();
      id v42 = *(void (**)(unint64_t, uint64_t))(v20 + 8);
      v42(v39, v119);
      v42(v40, v119);
      swift_bridgeObjectRelease();
      unint64_t v43 = (v101 + ((((v41 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v38;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v43, 1, v119)) {
        v42(v43, v119);
      }
      uint64_t v44 = 7;
      if (!v102) {
        uint64_t v44 = 8;
      }
      unint64_t v45 = ((v44 + v31 + v43) & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v46 = (uint64_t *)(((v45 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v47 = v46[1];
      if ((v47 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v46, v47);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v120;
      unsigned int v25 = v102;
      unint64_t v32 = v116;
    }
  }
LABEL_42:
  uint64_t v106 = v20;
  if (v25) {
    uint64_t v48 = v31;
  }
  else {
    uint64_t v48 = v31 + 1;
  }
  uint64_t v99 = v48 + 7;
  unint64_t v117 = (((((((((v48 + 7 + v32) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(v100 - 8);
  uint64_t v50 = v49;
  int v51 = *(_DWORD *)(v49 + 80) & 0xF8;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = v51 | v54 | 7;
  uint64_t v56 = (v107 + v124 + (v112 | v55) + v117 + 16) & ~(v112 | v55);
  uint64_t v57 = *(unsigned int *)(v49 + 84);
  if (v57 <= *(_DWORD *)(v53 + 84)) {
    unsigned int v58 = *(_DWORD *)(v53 + 84);
  }
  else {
    unsigned int v58 = *(_DWORD *)(v49 + 84);
  }
  if (v58 <= 0x7FFFFFFE) {
    unsigned int v59 = 2147483646;
  }
  else {
    unsigned int v59 = v58;
  }
  if (v59 <= v24) {
    unsigned int v60 = v24;
  }
  else {
    unsigned int v60 = v59;
  }
  if (v60 <= v108) {
    unsigned int v60 = v108;
  }
  if (v60 <= 0x7FFFFFFF) {
    int v61 = 0x7FFFFFFF;
  }
  else {
    int v61 = v60;
  }
  uint64_t v62 = ~v115;
  uint64_t v63 = v110 + v115;
  uint64_t v64 = ~v55;
  uint64_t v65 = v110 + v55;
  uint64_t v66 = *(void *)(v49 + 64) + 7;
  unint64_t v67 = ((((*(void *)(*(void *)(v52 - 8) + 64) + 7 + ((v54 + 8 + (v66 & 0xFFFFFFFFFFFFFFF8)) & ~v54)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v125 = (v114 + 16 + v67 + ((v110 + v55 + ((v110 + v115) & ~v115)) & ~v55)) & v127;
  uint64_t v113 = v52;
  uint64_t v109 = v54 + 8;
  uint64_t v111 = ~v54;
  if (v24 == v61)
  {
    uint64_t v68 = v24;
    uint64_t v69 = v56;
    int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v56, v68, v17);
LABEL_61:
    uint64_t v56 = v69;
    goto LABEL_62;
  }
  uint64_t v72 = (v63 + v56) & v62;
  uint64_t v73 = (v65 + v72) & v64;
  if (v59 == v61)
  {
    if (v57 == v59)
    {
      uint64_t v69 = v56;
      int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))((v65 + v72) & v64, v57, v100);
      goto LABEL_61;
    }
    uint64_t v90 = (unint64_t *)((v66 + v73) & 0xFFFFFFFFFFFFFFF8);
    BOOL v91 = v58 > 0x7FFFFFFE;
    uint64_t v71 = v106;
    if (!v91)
    {
      unint64_t v92 = *v90;
      goto LABEL_101;
    }
    uint64_t v93 = ((unint64_t)v90 + v54 + 8) & ~v54;
    unint64_t v94 = *(uint64_t (**)(uint64_t))(v53 + 48);
LABEL_98:
    uint64_t v96 = v56;
    uint64_t v97 = v71;
    int v98 = v94(v93);
    uint64_t v71 = v97;
    uint64_t v56 = v96;
    if (v98) {
      goto LABEL_75;
    }
    goto LABEL_63;
  }
  unint64_t v88 = v73 + v67;
  if ((v60 & 0x80000000) == 0)
  {
    unint64_t v89 = *(void *)(v88 + 8);
    if (v89 >= 0xFFFFFFFF) {
      LODWORD(v89) = -1;
    }
    int v70 = v89 + 1;
LABEL_62:
    uint64_t v71 = v106;
    if (v70) {
      goto LABEL_75;
    }
LABEL_63:
    uint64_t v72 = (v63 + v56) & v62;
    uint64_t v73 = (v65 + v72) & v64;
LABEL_64:
    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
    uint64_t v122 = v56;
    uint64_t v75 = v71;
    v74(v56, v120);
    v74(v72, v120);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v73, v100);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v53 + 8))((v109 + ((v66 + v73) & 0xFFFFFFFFFFFFFFF8)) & v111, v113);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = (v114 + 16 + v73 + v67) & v127;
    uint64_t v77 = v75;
    unint64_t v78 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v78((v118 + v76) & v105, v119);
    uint64_t v79 = (v103 + ((v118 + v76) & v105)) & v105;
    v78(v79, v119);
    swift_bridgeObjectRelease();
    unint64_t v80 = (v101 + ((((((v104 + v79) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v105;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v77 + 48))(v80, 1, v119)) {
      v78(v80, v119);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v81 = (uint64_t *)((((((v99 + v80) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v82 = v81[1];
    if ((v82 & 0x3000000000000000) == 0) {
      sub_10001E9C0(*v81, v82);
    }
    swift_bridgeObjectRelease();
    unint64_t v83 = v76 + v117 + 16;
    LODWORD(v84) = -1;
    if (*(void *)(v83 + 16) < 0xFFFFFFFFuLL) {
      uint64_t v84 = *(void *)(v83 + 16);
    }
    if ((int)v84 - 1 < 0)
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v83 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1000CF144(*(void *)((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
    uint64_t v56 = v122;
    goto LABEL_75;
  }
  uint64_t v71 = v106;
  uint64_t v93 = (v118 + ((v114 + 16 + v88) & v127)) & v105;
  if (v102 > 0x7FFFFFFD)
  {
    unint64_t v94 = *(uint64_t (**)(uint64_t))(v106 + 48);
    goto LABEL_98;
  }
  unint64_t v92 = *(void *)(((v104 + ((v103 + v93) & v105)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_101:
  if (v92 >= 0xFFFFFFFF) {
    LODWORD(v92) = -1;
  }
  if ((v92 + 1) < 2) {
    goto LABEL_64;
  }
LABEL_75:
  uint64_t v85 = (id *)((v56 + ((((v117 + v125 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);

  unint64_t v86 = (void *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v86 >= 0xFFFFFFFFuLL)
  {
    swift_errorRelease();
    unint64_t v87 = (void *)v86[1];
  }
}

void *sub_1003D515C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v294 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v294 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v270 = a1;
  uint64_t v300 = ((unint64_t)a1 + v10 + 8) & ~v10;
  int v11 = (char *)(((unint64_t)a2 + v10 + 8) & ~v10);
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  uint64_t v291 = v8;
  uint64_t v13 = *(unsigned int *)(v8 + 84);
  if (v12 <= v13) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v5 + 84);
  }
  if (v14 <= 0x7FFFFFFE) {
    int v15 = 2147483646;
  }
  else {
    int v15 = v14;
  }
  uint64_t v16 = *(void *)(v5 + 64) + 7;
  uint64_t v288 = ~v9;
  uint64_t v17 = v9 + 8;
  uint64_t v284 = *(void *)(*(void *)(v294 - 8) + 64) + 7;
  unint64_t v297 = ((((v284 + ((v9 + 8 + (v16 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  swift_retain();
  if (v12 == v15)
  {
    int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, v12, AssociatedTypeWitness);
    uint64_t v19 = (char *)v300;
    uint64_t v20 = AssociatedTypeWitness;
    size_t v21 = v297;
    if (!v18) {
      goto LABEL_17;
    }
LABEL_16:
    memcpy(v19, v11, v21);
    goto LABEL_19;
  }
  uint64_t v303 = AssociatedTypeWitness;
  uint64_t v22 = (uint64_t *)((unint64_t)&v11[v16] & 0xFFFFFFFFFFFFFFF8);
  if (v14 <= 0x7FFFFFFE)
  {
    uint64_t v23 = *v22;
    if ((unint64_t)*v22 >= 0xFFFFFFFF) {
      LODWORD(v23) = -1;
    }
    uint64_t v19 = (char *)v300;
    uint64_t v20 = v303;
    size_t v21 = v297;
    if ((v23 + 1) < 2) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  int v24 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v291 + 48))(((unint64_t)v22 + v17) & v288, v13, v294);
  uint64_t v19 = (char *)v300;
  uint64_t v20 = v303;
  size_t v21 = v297;
  if (v24) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v22 = (uint64_t *)((unint64_t)&v11[v16] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v11, v20);
  unsigned int v25 = (void *)((unint64_t)&v19[v16] & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v22;
  unint64_t v26 = ((unint64_t)v25 + v17) & v288;
  unint64_t v27 = ((unint64_t)v22 + v17) & v288;
  uint64_t v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v291 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v294);
  uint64_t v29 = (void *)((v284 + v26) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v284 + v27) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_19:
  uint64_t v33 = &v19[v21];
  unint64_t v34 = &v11[v21];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = v37;
  uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = sub_10096B0E0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = v41;
  uint64_t v43 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = v43 | 7;
  uint64_t v268 = v39;
  uint64_t v271 = v43 | v39;
  uint64_t v45 = v43 | v39 | 7;
  unint64_t v46 = (void *)((unint64_t)&v33[v45 + 9] & ~v45);
  unint64_t v47 = (const void *)((unint64_t)&v34[v45 + 9] & ~v45);
  unsigned int v48 = *(_DWORD *)(v37 + 84);
  uint64_t v49 = *(unsigned int *)(v41 + 84);
  if (v49 <= 0x7FFFFFFE) {
    unsigned int v50 = 2147483646;
  }
  else {
    unsigned int v50 = *(_DWORD *)(v41 + 84);
  }
  unsigned int v273 = v50;
  if (v48 > v50) {
    unsigned int v50 = *(_DWORD *)(v37 + 84);
  }
  if (v50 <= 0x7FFFFFFF) {
    int v51 = 0x7FFFFFFF;
  }
  else {
    int v51 = v50;
  }
  uint64_t v275 = *(void *)(v37 + 64);
  uint64_t v52 = v275 + 7;
  uint64_t v53 = ~v44;
  uint64_t v54 = v43 + 16;
  uint64_t v279 = v43 | 7;
  unint64_t v298 = (v43 + 16 + ((v275 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v44;
  uint64_t v55 = ~v43;
  uint64_t v56 = v43 + 12;
  size_t v57 = *(void *)(v41 + 64);
  uint64_t v265 = v43 + 10;
  unint64_t v304 = (v43
        + 10
        + ((((((v57 + 12 + ((v57 + v43 + ((v43 + 12) & ~v43)) & ~v43)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v43;
  size_t v301 = v57;
  unsigned int v302 = *(_DWORD *)(v41 + 84);
  uint64_t v266 = v40;
  uint64_t v262 = ~v43;
  size_t v281 = v57 + v43;
  unint64_t v285 = v46;
  uint64_t v295 = v47;
  uint64_t v260 = *(void *)(v40 - 8);
  uint64_t v261 = v43 + 12;
  uint64_t v289 = v36;
  uint64_t v292 = ~v44;
  uint64_t v282 = v38;
  unsigned int v267 = *(_DWORD *)(v38 + 84);
  size_t v256 = v57 + 12;
  if (v48 == v51)
  {
    unsigned int v58 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v38 + 48);
    unint64_t v59 = (unint64_t)v47;
    uint64_t v49 = *(unsigned int *)(v38 + 84);
    uint64_t v60 = v36;
    goto LABEL_29;
  }
  uint64_t v63 = (void *)(((unint64_t)v47 + v52) & 0xFFFFFFFFFFFFFFF8);
  if ((v50 & 0x80000000) == 0)
  {
    unint64_t v64 = v63[1];
    if (v64 >= 0xFFFFFFFF) {
      LODWORD(v64) = -1;
    }
    if (v64 == -1) {
      goto LABEL_35;
    }
    goto LABEL_55;
  }
  uint64_t v60 = v40;
  unint64_t v65 = ((unint64_t)v63 + v54) & v53;
  unint64_t v59 = (v56 + v65) & v55;
  if (v49 > 0x7FFFFFFD)
  {
    unsigned int v58 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v41 + 48);
LABEL_29:
    int v61 = v46;
    int v62 = v58(v59, v49, v60);
    unint64_t v46 = v61;
    unint64_t v47 = v295;
    if (!v62)
    {
LABEL_35:
      uint64_t v63 = (void *)(((unint64_t)v47 + v52) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v65 = ((unint64_t)v63 + v54) & v53;
      unint64_t v258 = (v56 + v65) & v55;
      unint64_t v263 = (v281 + v258) & v55;
      goto LABEL_36;
    }
LABEL_55:
    uint64_t v108 = 7;
    if (v302)
    {
      size_t v84 = v57;
    }
    else
    {
      uint64_t v108 = 8;
      size_t v84 = v57 + 1;
    }
    memcpy(v46, v47, v298+ ((((((((((v108 + v57 + v304) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    uint64_t v85 = v267;
    uint64_t v86 = v268;
LABEL_59:
    size_t v106 = v84;
    goto LABEL_60;
  }
  unint64_t v107 = *(void *)(((v57 + 12 + ((v57 + v43 + v59) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v107 >= 0xFFFFFFFF) {
    LODWORD(v107) = -1;
  }
  if ((v107 + 1) >= 2) {
    goto LABEL_55;
  }
  unint64_t v258 = (v56 + v65) & v55;
  unint64_t v263 = (v57 + v43 + v59) & v55;
LABEL_36:
  (*(void (**)(void *, const void *, uint64_t))(v282 + 16))(v285, v47, v36);
  uint64_t v66 = (void *)(((unint64_t)v285 + v52) & 0xFFFFFFFFFFFFFFF8);
  void *v66 = *v63;
  v66[1] = v63[1];
  unint64_t v67 = ((unint64_t)v66 + v54) & v53;
  *(unsigned char *)unint64_t v67 = *(unsigned char *)v65;
  uint64_t v68 = v67 | 4;
  int v69 = *(_DWORD *)(v65 | 4);
  *(unsigned char *)(v68 + 4) = *(unsigned char *)((v65 | 4) + 4);
  *(_DWORD *)uint64_t v68 = v69;
  *(_WORD *)(v67 + 10) = *(_WORD *)(v65 + 10);
  unint64_t v70 = (v56 + v67) & v55;
  uint64_t v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16);
  swift_bridgeObjectRetain();
  v71(v70, v258, v266);
  v71((v281 + v70) & v55, v263, v266);
  uint64_t v72 = (unsigned char *)(((v281 + v70) & v55) + v57);
  *uint64_t v72 = *(unsigned char *)(v263 + v57);
  v72[1] = *(unsigned char *)(v263 + v57 + 1);
  v72[2] = *(unsigned char *)(v263 + v57 + 2);
  v72[3] = *(unsigned char *)(v263 + v57 + 3);
  v72[4] = *(unsigned char *)(v263 + v57 + 4);
  unint64_t v73 = (unint64_t)(v72 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v263 + v57 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v73 = *(void *)v74;
  *(void *)(v73 + 8) = *(void *)(v74 + 8);
  *(unsigned char *)(v73 + 16) = *(unsigned char *)(v74 + 16);
  *(unsigned char *)(v73 + 17) = *(unsigned char *)(v74 + 17);
  *(unsigned char *)(v73 + 18) = *(unsigned char *)(v74 + 18);
  *(unsigned char *)(v73 + 19) = *(unsigned char *)(v74 + 19);
  unint64_t v75 = (v73 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v74 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v75 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  *(unsigned char *)(v75 + 10) = *(unsigned char *)(v76 + 10);
  *(unsigned char *)(v75 + 11) = *(unsigned char *)(v76 + 11);
  *(unsigned char *)(v75 + 12) = *(unsigned char *)(v76 + 12);
  uint64_t v77 = (void *)((v74 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v78 = (void *)((v73 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v78 = *v77;
  unint64_t v79 = ((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v80 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v79 = *(void *)v80;
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
  *(unsigned char *)(v79 + 9) = *(unsigned char *)(v80 + 9);
  unint64_t v81 = (void *)((v265 + v79) & v55);
  unint64_t v82 = (const void *)((v265 + v80) & v55);
  unint64_t v83 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
  swift_bridgeObjectRetain();
  if (v83(v82, 1, v266))
  {
    if (v302) {
      size_t v84 = v57;
    }
    else {
      size_t v84 = v57 + 1;
    }
    memcpy(v81, v82, v84);
  }
  else
  {
    v71((unint64_t)v81, (unint64_t)v82, v266);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v81, 0, 1, v266);
    if (v302) {
      size_t v84 = v57;
    }
    else {
      size_t v84 = v57 + 1;
    }
  }
  uint64_t v85 = v267;
  uint64_t v86 = v268;
  unint64_t v87 = (void *)(((unint64_t)v81 + v84 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v88 = (void *)(((unint64_t)v82 + v84 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v87 = *v88;
  unint64_t v89 = ((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v90 = ((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = *(void *)v90;
  *(unsigned char *)(v89 + 8) = *(unsigned char *)(v90 + 8);
  *(void *)unint64_t v89 = v91;
  unint64_t v92 = (void *)(((unint64_t)v87 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v93 = (void *)(((unint64_t)v88 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v92 = *v93;
  unint64_t v94 = ((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = (uint64_t *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v96 = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v96 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v94 = *(_OWORD *)v95;
  }
  else
  {
    uint64_t v97 = *v95;
    sub_10001EBB0(*v95, v96);
    *(void *)unint64_t v94 = v97;
    *(void *)(v94 + 8) = v96;
  }
  unint64_t v98 = (v94 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v99 = ((unint64_t)v95 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v100 = *(void *)v99;
  *(unsigned char *)(v98 + 8) = *(unsigned char *)(v99 + 8);
  *(void *)unint64_t v98 = v100;
  *(unsigned char *)(v98 + 9) = *(unsigned char *)(v99 + 9);
  unint64_t v101 = (v98 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v102 = (v99 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v103 = *(_DWORD *)v102;
  *(unsigned char *)(v101 + 4) = *(unsigned char *)(v102 + 4);
  *(_DWORD *)unint64_t v101 = v103;
  uint64_t v104 = (void *)((v98 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v105 = (void *)((v99 + 25) & 0xFFFFFFFFFFFFFFF8);
  void *v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  size_t v106 = v57;
  if (!v302) {
    goto LABEL_59;
  }
LABEL_60:
  unint64_t v269 = v304 + 7;
  unint64_t v109 = (((((((((v304 + 7 + v106) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v264 = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(v264 - 8);
  uint64_t v111 = v110;
  int v112 = *(_DWORD *)(v110 + 80) & 0xF8;
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(v113 - 8);
  uint64_t v115 = v114;
  uint64_t v116 = *(unsigned __int8 *)(v114 + 80);
  uint64_t v117 = v112 | v116 | 7;
  uint64_t v118 = v298 + (v271 | v117) + v109 + 16;
  uint64_t v119 = (char *)(((unint64_t)v285 + v118) & ~(v271 | v117));
  uint64_t v120 = (char *)(((unint64_t)v295 + v118) & ~(v271 | v117));
  uint64_t v121 = *(unsigned int *)(v110 + 84);
  if (v121 <= *(_DWORD *)(v114 + 84)) {
    unsigned int v122 = *(_DWORD *)(v114 + 84);
  }
  else {
    unsigned int v122 = *(_DWORD *)(v110 + 84);
  }
  if (v122 <= 0x7FFFFFFE) {
    unsigned int v123 = 2147483646;
  }
  else {
    unsigned int v123 = v122;
  }
  if (v123 <= v85) {
    unsigned int v124 = v85;
  }
  else {
    unsigned int v124 = v123;
  }
  if (v124 <= v273) {
    unsigned int v124 = v273;
  }
  if (v124 <= 0x7FFFFFFF) {
    int v125 = 0x7FFFFFFF;
  }
  else {
    int v125 = v124;
  }
  uint64_t v126 = ~v86;
  uint64_t v127 = v275 + v86;
  uint64_t v128 = (v275 + v86) & ~v86;
  uint64_t v129 = ~v117;
  uint64_t v130 = v275 + v117;
  uint64_t v131 = *(void *)(v110 + 64) + 7;
  uint64_t v132 = ~v116;
  uint64_t v133 = v116 + 8;
  unint64_t v134 = ((((*(void *)(v114 + 64) + 7 + ((v116 + 8 + (v131 & 0xFFFFFFFFFFFFFFF8)) & ~v116)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v296 = (v279 + 16 + v134 + ((v275 + v117 + v128) & ~v117)) & v292;
  uint64_t v299 = v120;
  unint64_t v276 = v134;
  uint64_t v277 = v113;
  uint64_t v272 = v132;
  uint64_t v274 = *(void *)(v114 + 64) + 7;
  uint64_t v257 = v131;
  uint64_t v259 = v133;
  uint64_t v286 = ~v117;
  uint64_t v278 = v126;
  if (v85 == v125)
  {
    uint64_t v135 = v289;
    int v136 = (*(uint64_t (**)(char *, uint64_t))(v282 + 48))(v120, v85);
    uint64_t v120 = v299;
    goto LABEL_83;
  }
  uint64_t v135 = v289;
  unint64_t v137 = (unint64_t)&v120[v127] & v126;
  unint64_t v138 = (v130 + v137) & v129;
  if (v123 == v125)
  {
    if (v121 == v123)
    {
      int v136 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v110 + 48))((v130 + v137) & v129, v121, v264);
      uint64_t v120 = v299;
      goto LABEL_83;
    }
    unint64_t v148 = (unint64_t *)((v131 + v138) & 0xFFFFFFFFFFFFFFF8);
    size_t v141 = v301;
    if (v122 <= 0x7FFFFFFE)
    {
      unint64_t v149 = *v148;
      goto LABEL_123;
    }
    int v151 = (*(uint64_t (**)(unint64_t))(v114 + 48))(((unint64_t)v148 + v133) & v132);
LABEL_96:
    uint64_t v120 = v299;
    if (v151) {
      goto LABEL_84;
    }
LABEL_97:
    unint64_t v137 = (unint64_t)&v120[v127] & v278;
    unint64_t v138 = (v130 + v137) & v286;
    goto LABEL_98;
  }
  unint64_t v139 = v134 + v138;
  if ((v124 & 0x80000000) == 0)
  {
    unint64_t v140 = *(void *)(v139 + 8);
    if (v140 >= 0xFFFFFFFF) {
      LODWORD(v140) = -1;
    }
    int v136 = v140 + 1;
LABEL_83:
    size_t v141 = v301;
    if (v136)
    {
LABEL_84:
      uint64_t v142 = 7;
      if (!v302) {
        uint64_t v142 = 8;
      }
      uint64_t v143 = v296;
      if (v302) {
        size_t v144 = v141;
      }
      else {
        size_t v144 = v141 + 1;
      }
      memcpy(v119, v120, ((((((((((((((v142 + v141 + v304) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v296+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      unint64_t v146 = v304 + 7;
      int v145 = v270;
LABEL_90:
      size_t v147 = v144;
      goto LABEL_118;
    }
    goto LABEL_97;
  }
  uint64_t v150 = (v261 + ((v279 + 16 + v139) & v292)) & v262;
  size_t v141 = v301;
  if (v302 > 0x7FFFFFFD)
  {
    int v151 = (*(uint64_t (**)(uint64_t))(v260 + 48))(v150);
    goto LABEL_96;
  }
  unint64_t v149 = *(void *)(((v256 + ((v281 + v150) & v262)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_123:
  if (v149 >= 0xFFFFFFFF) {
    LODWORD(v149) = -1;
  }
  if ((v149 + 1) >= 2) {
    goto LABEL_84;
  }
LABEL_98:
  unint64_t v152 = v119;
  uint64_t v280 = v279 + 16;
  uint64_t v153 = *(void (**)(char *, char *, uint64_t))(v282 + 16);
  v153(v152, v120, v135);
  int v283 = v152;
  unint64_t v154 = (unint64_t)&v152[v127] & v278;
  v153((char *)v154, (char *)v137, v135);
  unint64_t v155 = (v130 + v154) & v286;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v111 + 16))(v155, v138, v264);
  uint64_t v156 = (void *)((v257 + v155) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v157 = (void *)((v257 + v138) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v156 = *v157;
  unint64_t v158 = ((unint64_t)v156 + v259) & v272;
  unint64_t v159 = ((unint64_t)v157 + v259) & v272;
  unint64_t v160 = *(void (**)(unint64_t, unint64_t, uint64_t))(v115 + 16);
  swift_bridgeObjectRetain();
  v160(v158, v159, v277);
  uint64_t v161 = (void *)((v274 + v159) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v162 = (void *)((v274 + v158) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v162 = *v161;
  unint64_t v163 = (void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v164 = (void *)(((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v163 = *v164;
  v163[1] = v164[1];
  uint64_t v165 = (void *)(v276 + v155);
  *uint64_t v165 = *(void *)(v276 + v138);
  v165[1] = *(void *)(v276 + v138 + 8);
  unint64_t v166 = (v280 + v276 + v155) & v292;
  unint64_t v167 = (v280 + v276 + v138) & v292;
  *(unsigned char *)unint64_t v166 = *(unsigned char *)v167;
  uint64_t v168 = v166 | 4;
  int v169 = *(_DWORD *)(v167 | 4);
  *(unsigned char *)(v168 + 4) = *(unsigned char *)((v167 | 4) + 4);
  *(_DWORD *)uint64_t v168 = v169;
  *(_WORD *)(v166 + 10) = *(_WORD *)(v167 + 0xA);
  unint64_t v290 = v166;
  unint64_t v170 = (v261 + v166) & v262;
  unint64_t v287 = v167;
  unint64_t v171 = (v261 + v167) & v262;
  uint64_t v172 = *(void (**)(unint64_t, unint64_t, uint64_t))(v260 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v172(v170, v171, v266);
  size_t v173 = (v281 + v171) & v262;
  v172((v281 + v170) & v262, v173, v266);
  uint64_t v174 = (unsigned char *)(((v281 + v170) & v262) + v301);
  *uint64_t v174 = *(unsigned char *)(v173 + v301);
  v174[1] = *(unsigned char *)(v173 + v301 + 1);
  v174[2] = *(unsigned char *)(v173 + v301 + 2);
  v174[3] = *(unsigned char *)(v173 + v301 + 3);
  v174[4] = *(unsigned char *)(v173 + v301 + 4);
  unint64_t v175 = (unint64_t)(v174 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v176 = (v173 + v301 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v175 = *(void *)v176;
  *(void *)(v175 + 8) = *(void *)(v176 + 8);
  *(unsigned char *)(v175 + 16) = *(unsigned char *)(v176 + 16);
  *(unsigned char *)(v175 + 17) = *(unsigned char *)(v176 + 17);
  *(unsigned char *)(v175 + 18) = *(unsigned char *)(v176 + 18);
  *(unsigned char *)(v175 + 19) = *(unsigned char *)(v176 + 19);
  unint64_t v177 = (v175 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v178 = (v176 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v177 = *(void *)v178;
  *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
  *(unsigned char *)(v177 + 9) = *(unsigned char *)(v178 + 9);
  *(unsigned char *)(v177 + 10) = *(unsigned char *)(v178 + 10);
  *(unsigned char *)(v177 + 11) = *(unsigned char *)(v178 + 11);
  *(unsigned char *)(v177 + 12) = *(unsigned char *)(v178 + 12);
  unint64_t v179 = (void *)((v176 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v180 = (void *)((v175 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v180 = *v179;
  unint64_t v181 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v182 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v181 = *(void *)v182;
  *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
  *(unsigned char *)(v181 + 9) = *(unsigned char *)(v182 + 9);
  unint64_t v183 = (void *)((v265 + v181) & v262);
  int v184 = (const void *)((v265 + v182) & v262);
  uint64_t v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v260 + 48);
  swift_bridgeObjectRetain();
  if (v185(v184, 1, v266))
  {
    unsigned int v186 = v302;
    size_t v187 = v301;
    if (v302) {
      size_t v188 = v301;
    }
    else {
      size_t v188 = v301 + 1;
    }
    memcpy(v183, v184, v188);
  }
  else
  {
    v172((unint64_t)v183, (unint64_t)v184, v266);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v260 + 56))(v183, 0, 1, v266);
    unsigned int v186 = v302;
    size_t v187 = v301;
    if (v302) {
      size_t v188 = v301;
    }
    else {
      size_t v188 = v301 + 1;
    }
  }
  uint64_t v119 = v283;
  size_t v293 = v188;
  size_t v189 = v188 + 7;
  int v190 = (void *)(((unint64_t)v183 + v189) & 0xFFFFFFFFFFFFFFF8);
  long long v191 = (void *)(((unint64_t)v184 + v189) & 0xFFFFFFFFFFFFFFF8);
  *int v190 = *v191;
  unint64_t v192 = ((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v193 = ((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v194 = *(void *)v193;
  *(unsigned char *)(v192 + 8) = *(unsigned char *)(v193 + 8);
  *(void *)unint64_t v192 = v194;
  long long v195 = (void *)(((unint64_t)v190 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v196 = (void *)(((unint64_t)v191 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v195 = *v196;
  unint64_t v197 = ((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v198 = (uint64_t *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v199 = v198[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v199 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v197 = *(_OWORD *)v198;
  }
  else
  {
    uint64_t v200 = *v198;
    sub_10001EBB0(*v198, v199);
    *(void *)unint64_t v197 = v200;
    *(void *)(v197 + 8) = v199;
  }
  size_t v147 = v187;
  unint64_t v201 = (v197 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v202 = ((unint64_t)v198 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v203 = *(void *)v202;
  *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
  *(void *)unint64_t v201 = v203;
  *(unsigned char *)(v201 + 9) = *(unsigned char *)(v202 + 9);
  unint64_t v204 = (v201 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v205 = (v202 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v206 = *(_DWORD *)v205;
  *(unsigned char *)(v204 + 4) = *(unsigned char *)(v205 + 4);
  *(_DWORD *)unint64_t v204 = v206;
  uint64_t v207 = (void *)((v201 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v208 = (void *)((v202 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v207 = *v208;
  v207[1] = v208[1];
  unint64_t v209 = ((((((((((v189 + v304) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v210 = v290 + v209;
  uint64_t v211 = (long long *)(v287 + v209);
  unint64_t v212 = *(void *)(v287 + v209 + 16);
  if (v212 >= 0xFFFFFFFF) {
    LODWORD(v212) = -1;
  }
  int v213 = v212 - 1;
  swift_bridgeObjectRetain();
  if (v213 < 0)
  {
    *(void *)unint64_t v210 = *(void *)v211;
    *(unsigned char *)(v210 + 8) = *((unsigned char *)v211 + 8);
    *(unsigned char *)(v210 + 9) = *((unsigned char *)v211 + 9);
    uint64_t v226 = *((void *)v211 + 2);
    swift_errorRetain();
    *(void *)(v210 + 16) = v226;
    uint64_t v227 = *((void *)v211 + 3);
    swift_errorRetain();
    *(void *)(v210 + 24) = v227;
    *(unsigned char *)(v210 + 32) = *((unsigned char *)v211 + 32);
    *(unsigned char *)(v210 + 33) = *((unsigned char *)v211 + 33);
    *(unsigned char *)(v210 + 34) = *((unsigned char *)v211 + 34);
    *(void *)(v210 + 40) = *((void *)v211 + 5);
    *(void *)(v210 + 48) = *((void *)v211 + 6);
    *(void *)(v210 + 56) = *((void *)v211 + 7);
    *(void *)(v210 + 64) = *((void *)v211 + 8);
    *(unsigned char *)(v210 + 72) = *((unsigned char *)v211 + 72);
    *(void *)(v210 + 80) = *((void *)v211 + 10);
    *(void *)(v210 + 88) = *((void *)v211 + 11);
    unint64_t v305 = (void *)*((void *)v211 + 12);
    *(void *)(v210 + 96) = v305;
    *(unsigned char *)(v210 + 104) = *((unsigned char *)v211 + 104);
    *(unsigned char *)(v210 + 105) = *((unsigned char *)v211 + 105);
    *(void *)(v210 + 112) = *((void *)v211 + 14);
    *(void *)(v210 + 120) = *((void *)v211 + 15);
    *(void *)(v210 + 128) = *((void *)v211 + 16);
    *(void *)(v210 + 136) = *((void *)v211 + 17);
    *(void *)(v210 + 144) = *((void *)v211 + 18);
    *(void *)(v210 + 152) = *((void *)v211 + 19);
    *(void *)(v210 + 160) = *((void *)v211 + 20);
    *(void *)(v210 + 168) = *((void *)v211 + 21);
    *(unsigned char *)(v210 + 176) = *((unsigned char *)v211 + 176);
    *(void *)(v210 + 184) = *((void *)v211 + 23);
    uint64_t v228 = *((void *)v211 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v229 = v305;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v228)
    {
      *(void *)(v210 + 192) = v228;
      *(void *)(v210 + 200) = *((void *)v211 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v210 + 192) = v211[12];
    }
    unint64_t v146 = v269;
    int v145 = v270;
    size_t v147 = v301;
    unsigned int v186 = v302;
    uint64_t v119 = v283;
    uint64_t v143 = v296;
    *(void *)(v210 + 208) = *((void *)v211 + 26);
    *(void *)(v210 + 216) = *((void *)v211 + 27);
    *(void *)(v210 + 224) = *((void *)v211 + 28);
    *(void *)(v210 + 232) = *((void *)v211 + 29);
    *(void *)(v210 + 240) = *((void *)v211 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v214 = *v211;
    long long v215 = v211[1];
    long long v216 = v211[3];
    *(_OWORD *)(v210 + 32) = v211[2];
    *(_OWORD *)(v210 + 48) = v216;
    *(_OWORD *)unint64_t v210 = v214;
    *(_OWORD *)(v210 + 16) = v215;
    long long v217 = v211[4];
    long long v218 = v211[5];
    long long v219 = v211[7];
    *(_OWORD *)(v210 + 96) = v211[6];
    *(_OWORD *)(v210 + 112) = v219;
    *(_OWORD *)(v210 + 64) = v217;
    *(_OWORD *)(v210 + 80) = v218;
    long long v220 = v211[8];
    long long v221 = v211[9];
    long long v222 = v211[11];
    *(_OWORD *)(v210 + 160) = v211[10];
    *(_OWORD *)(v210 + 176) = v222;
    *(_OWORD *)(v210 + 128) = v220;
    *(_OWORD *)(v210 + 144) = v221;
    long long v223 = v211[12];
    long long v224 = v211[13];
    long long v225 = v211[14];
    *(void *)(v210 + 240) = *((void *)v211 + 30);
    *(_OWORD *)(v210 + 208) = v224;
    *(_OWORD *)(v210 + 224) = v225;
    *(_OWORD *)(v210 + 192) = v223;
    unint64_t v146 = v304 + 7;
    int v145 = v270;
    uint64_t v143 = v296;
  }
  uint64_t v230 = (_OWORD *)((v210 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v231 = (long long *)(((unint64_t)v211 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v232 = *v231;
  *(_OWORD *)((char *)v230 + 9) = *(long long *)((char *)v231 + 9);
  _OWORD *v230 = v232;
  unint64_t v233 = (v210 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v234 = ((unint64_t)v211 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v235 = *(_OWORD *)v234;
  *(unsigned char *)(v233 + 16) = *(unsigned char *)(v234 + 16);
  *(_OWORD *)unint64_t v233 = v235;
  unsigned int v236 = (void *)((v210 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v237 = ((unint64_t)v211 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v238 = *(void *)v237;
  v237 += 15;
  void *v236 = v238;
  unsigned int v239 = (void *)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v240 = *(void *)(v237 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v241 = *(void *)((v237 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_10018B584(v240, v241);
  *unsigned int v239 = v240;
  v239[1] = v241;
  size_t v144 = v293;
  if (!v186) {
    goto LABEL_90;
  }
LABEL_118:
  unint64_t v242 = ((((v143
           + ((((((((((v146 + v147) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v243 = (unint64_t)&v119[v242];
  unint64_t v244 = (unint64_t)&v299[v242];
  unint64_t v245 = v243 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v245 = *(void *)(v244 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v245 + 8) = *(unsigned char *)((v244 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v246 = (void **)((v244 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v247 = *v246;
  uint64_t v248 = (void *)((v243 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v248 = *v246;
  unint64_t v249 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v250 = (unint64_t *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v251 = *v250;
  id v252 = v247;
  if (v251 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v249 = *(_OWORD *)v250;
  }
  else
  {
    swift_errorRetain();
    *(void *)unint64_t v249 = v251;
    unsigned int v253 = (void *)v250[1];
    *(void *)(v249 + 8) = v253;
    id v254 = v253;
  }
  return v145;
}

void *sub_1003D6730(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v7 | v11 | 7;
  uint64_t v539 = a1;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  uint64_t v16 = *(unsigned int *)(v10 + 84);
  if (v15 <= v16) {
    unsigned int v17 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v17 = *(_DWORD *)(v5 + 84);
  }
  if (v17 <= 0x7FFFFFFE) {
    int v18 = 2147483646;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = *(void *)(v5 + 64) + 7;
  uint64_t v20 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v21 = (((v20 + ((v11 + 8 + (v19 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = v21 + 16;
  uint64_t v576 = v8;
  uint64_t v579 = AssociatedTypeWitness;
  uint64_t v571 = ~v11;
  uint64_t v574 = *(void *)(v8 - 8);
  uint64_t v568 = v11 + 8;
  if (v15 == v18)
  {
    uint64_t v564 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v566 = v21 + 16;
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v24 = v13;
    int v25 = v23(v13, v15, AssociatedTypeWitness);
    unint64_t v26 = v14;
    int v27 = v23(v14, v15, AssociatedTypeWitness);
    if (v25) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
    if (v27)
    {
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      size_t v22 = v566;
      uint64_t v34 = v579;
      goto LABEL_22;
    }
    uint64_t v29 = (uint64_t *)((unint64_t)&v26[v19] & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = v26;
    uint64_t v13 = v24;
    uint64_t v20 = v564;
    size_t v22 = v566;
    uint64_t v34 = v579;
    goto LABEL_27;
  }
  uint64_t v28 = (uint64_t *)((unint64_t)&v13[v19] & 0xFFFFFFFFFFFFFFF8);
  if (v17 > 0x7FFFFFFE)
  {
    uint64_t v564 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v566 = v21 + 16;
    int v24 = v13;
    uint64_t v35 = ~v11;
    uint64_t v36 = ((unint64_t)v28 + v11 + 8) & ~v11;
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v9;
    uint64_t v39 = v11 + 8;
    int v40 = v37(v36, v16, v9);
    uint64_t v41 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v37;
    int v562 = v40;
    unint64_t v26 = v14;
    int v27 = v41((v39 + ((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8)) & v35, v16, v38);
    if (v562)
    {
LABEL_9:
      size_t v22 = v566;
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      if (!v27)
      {
        uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
LABEL_24:
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v14, v579);
        *uint64_t v28 = *v29;
        unint64_t v42 = ((unint64_t)v28 + v568) & v571;
        unint64_t v43 = ((unint64_t)v29 + v568) & v571;
        uint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v574 + 16);
        swift_bridgeObjectRetain();
        v44(v42, v43, v576);
        uint64_t v45 = (void *)((v564 + v42) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v46 = (void *)((v564 + v43) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v45 = *v46;
        unint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v47 = *v48;
        v47[1] = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  uint64_t v30 = *v28;
  if ((unint64_t)*v28 >= 0xFFFFFFFF) {
    LODWORD(v30) = -1;
  }
  unsigned int v31 = v30 + 1;
  uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = *v29;
  if ((unint64_t)*v29 >= 0xFFFFFFFF) {
    LODWORD(v32) = -1;
  }
  unsigned int v33 = v32 + 1;
  if (v31 >= 2)
  {
    uint64_t v564 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    if (v33 < 2) {
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  uint64_t v34 = AssociatedTypeWitness;
  if (v33 >= 2)
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v574 + 8))(((unint64_t)v28 + v568) & v571, v576);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    memcpy(v13, v14, v22);
    goto LABEL_28;
  }
LABEL_27:
  (*(void (**)(char *, char *, uint64_t))(v6 + 24))(v13, v14, v34);
  *uint64_t v28 = *v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v574 + 24))(((unint64_t)v28 + v568) & v571, ((unint64_t)v29 + v568) & v571, v576);
  uint64_t v49 = (void *)((v20 + (((unint64_t)v28 + v568) & v571)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v50 = v20 + (((unint64_t)v29 + v568) & v571);
  int v51 = v13;
  unint64_t v52 = (v50 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v49 = *(void *)(v50 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)(v52 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = v51;
  void *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v55 = &v13[v22];
  uint64_t v56 = &v14[v22];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = v59;
  uint64_t v61 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v62 = sub_10096B0E0();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = v63;
  uint64_t v65 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v66 = v65 | 7;
  uint64_t v550 = v61;
  uint64_t v67 = v65 | v61;
  uint64_t v68 = v65 | v61 | 7;
  int v69 = (void *)((unint64_t)&v13[v22 + 9 + v68] & ~v68);
  unint64_t v70 = (const void *)((unint64_t)&v56[v68 + 9] & ~v68);
  uint64_t v71 = *(unsigned int *)(v59 + 84);
  unsigned int v72 = *(_DWORD *)(v63 + 84);
  if (v72 <= 0x7FFFFFFE) {
    unsigned int v73 = 2147483646;
  }
  else {
    unsigned int v73 = *(_DWORD *)(v63 + 84);
  }
  unsigned int v546 = v73;
  if (v71 <= v73) {
    unsigned int v74 = v73;
  }
  else {
    unsigned int v74 = *(_DWORD *)(v59 + 84);
  }
  if (v74 <= 0x7FFFFFFF) {
    int v75 = 0x7FFFFFFF;
  }
  else {
    int v75 = v74;
  }
  uint64_t v76 = *(void *)(v59 + 64);
  uint64_t v77 = v76 + 7;
  uint64_t v78 = ~v66;
  uint64_t v79 = v65 + 16;
  unint64_t v540 = (v65 + 16 + ((v76 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v66;
  uint64_t v80 = ~v65;
  uint64_t v81 = v65 + 12;
  size_t v82 = *(void *)(v63 + 64);
  uint64_t v83 = v82 + v65;
  size_t v537 = v82 + 12;
  uint64_t v559 = v65 + 10;
  size_t v575 = v82;
  unint64_t v577 = (v65
        + 10
        + ((((((v82 + 12 + ((v82 + v65 + ((v65 + 12) & ~v65)) & ~v65)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v65;
  unsigned int v580 = *(_DWORD *)(v63 + 84);
  uint64_t v560 = v82 + v65;
  uint64_t v561 = v62;
  uint64_t v558 = *(void *)(v62 - 8);
  uint64_t v582 = ~v66;
  uint64_t v567 = v58;
  uint64_t v569 = v69;
  uint64_t v572 = v70;
  uint64_t v538 = ~v65;
  uint64_t v563 = v65 + 12;
  uint64_t v565 = v60;
  unsigned int v554 = v71;
  uint64_t v552 = v65 | 7;
  uint64_t v548 = v76;
  uint64_t v544 = v67;
  if (v71 == v75)
  {
    size_t v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
    uint64_t v85 = v71;
    uint64_t v86 = (void *)v70;
    int v87 = v84(v69, v71, v58);
    int v88 = v84(v86, v85, v58);
    int v69 = v569;
    size_t v89 = v575;
    if (v87)
    {
      unint64_t v70 = v572;
      if (!v88) {
        goto LABEL_61;
      }
      goto LABEL_87;
    }
    uint64_t v83 = v560;
    if (!v88) {
      goto LABEL_82;
    }
    goto LABEL_100;
  }
  unint64_t v90 = ((unint64_t)v69 + v77) & 0xFFFFFFFFFFFFFFF8;
  if ((v74 & 0x80000000) != 0)
  {
    unint64_t v93 = (v81 + ((v79 + v90) & v78)) & v80;
    if (v72 <= 0x7FFFFFFD)
    {
      size_t v122 = v82 + 12;
      unint64_t v123 = *(void *)(((v537 + ((v83 + v93) & v80)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v123 >= 0xFFFFFFFF) {
        LODWORD(v123) = -1;
      }
      unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = ((unint64_t)v94 + v79) & v78;
      unint64_t v99 = (v81 + v98) & v80;
      if ((v123 + 1) >= 2) {
        goto LABEL_84;
      }
      goto LABEL_94;
    }
    int v92 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v93);
    int v69 = v569;
    unint64_t v70 = v572;
  }
  else
  {
    unint64_t v91 = *(void *)(v90 + 8);
    if (v91 >= 0xFFFFFFFF) {
      LODWORD(v91) = -1;
    }
    int v92 = v91 + 1;
  }
  unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
  if (!v92)
  {
    if ((v74 & 0x80000000) == 0)
    {
      unint64_t v96 = v94[1];
      if (v96 >= 0xFFFFFFFF) {
        LODWORD(v96) = -1;
      }
      int v97 = v96 + 1;
LABEL_81:
      size_t v89 = v575;
      uint64_t v83 = v560;
      if (!v97)
      {
LABEL_82:
        unint64_t v94 = (void *)(((unint64_t)v572 + v77) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v98 = ((unint64_t)v94 + v79) & v582;
        unint64_t v99 = (v563 + v98) & v80;
        unint64_t v145 = (v83 + v99) & v80;
        goto LABEL_97;
      }
LABEL_100:
      unint64_t v170 = v69;
      (*(void (**)(void *, uint64_t))(v565 + 8))(v69, v567);
      swift_bridgeObjectRelease();
      unint64_t v171 = (v563 + ((v79 + (((unint64_t)v170 + v77) & 0xFFFFFFFFFFFFFFF8)) & v582)) & v80;
      uint64_t v172 = *(void (**)(unint64_t, uint64_t))(v64 + 8);
      v172(v171, v561);
      unint64_t v173 = (v83 + v171) & v80;
      v172(v173, v561);
      swift_bridgeObjectRelease();
      unint64_t v174 = (v559
            + ((((((v537 + v173) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v80;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v64 + 48))(v174, 1, v561)) {
        v172(v174, v561);
      }
      if (v580) {
        size_t v121 = v89;
      }
      else {
        size_t v121 = v89 + 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v175 = (uint64_t *)((((((v121 + 7 + v174) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v176 = v175[1];
      unint64_t v134 = v540;
      if ((v176 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v175, v176);
      }
      swift_bridgeObjectRelease();
      memcpy(v569, v572, v540+ ((((((((((v121 + 7 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
      goto LABEL_125;
    }
    unint64_t v98 = ((unint64_t)v94 + v79) & v582;
    unint64_t v99 = (v81 + v98) & v80;
    if (v580 > 0x7FFFFFFD)
    {
      int v97 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v99);
      int v69 = v569;
      goto LABEL_81;
    }
    uint64_t v83 = v560;
    size_t v122 = v537;
LABEL_94:
    unint64_t v145 = (v83 + v99) & v80;
    unint64_t v148 = *(void *)(((v122 + v145) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v148 >= 0xFFFFFFFF) {
      LODWORD(v148) = -1;
    }
    size_t v89 = v575;
    if ((v148 + 1) < 2)
    {
LABEL_97:
      unint64_t v535 = v145;
      unint64_t v149 = v69;
      (*(void (**)(void *, const void *, uint64_t))(v565 + 24))(v69, v572, v567);
      uint64_t v150 = (void *)(((unint64_t)v149 + v77) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v150 = *v94;
      v150[1] = v94[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v151 = ((unint64_t)v150 + v79) & v582;
      *(unsigned char *)unint64_t v151 = *(unsigned char *)v98;
      uint64_t v152 = v151 | 4;
      int v153 = *(_DWORD *)(v98 | 4);
      *(unsigned char *)(v152 + 4) = *(unsigned char *)((v98 | 4) + 4);
      *(_DWORD *)uint64_t v152 = v153;
      *(_WORD *)(v151 + 10) = *(_WORD *)(v98 + 10);
      unint64_t v154 = (v563 + v151) & v80;
      unint64_t v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 24);
      v155(v154, v99, v561);
      v155((v83 + v154) & v80, v535, v561);
      uint64_t v156 = (unsigned char *)(((v83 + v154) & v80) + v89);
      *uint64_t v156 = *(unsigned char *)(v535 + v89);
      v156[1] = *(unsigned char *)(v535 + v89 + 1);
      v156[2] = *(unsigned char *)(v535 + v89 + 2);
      v156[3] = *(unsigned char *)(v535 + v89 + 3);
      v156[4] = *(unsigned char *)(v535 + v89 + 4);
      unint64_t v157 = (unint64_t)(v156 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v535 + v89 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (char *)((v559 + v163) & v80);
      unint64_t v166 = (char *)((v559 + v164) & v80);
      unint64_t v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      int v168 = v167(v165, 1, v561);
      int v169 = v167(v166, 1, v561);
      if (v168)
      {
        if (!v169)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v165, v166, v561);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v165, 0, 1, v561);
LABEL_115:
          size_t v121 = v575;
          unsigned int v177 = v580;
          goto LABEL_116;
        }
      }
      else
      {
        if (!v169)
        {
          v155((unint64_t)v165, (unint64_t)v166, v561);
          goto LABEL_115;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v165, v561);
      }
      unsigned int v177 = v580;
      size_t v121 = v575;
      if (v580) {
        size_t v178 = v575;
      }
      else {
        size_t v178 = v575 + 1;
      }
      memcpy(v165, v166, v178);
LABEL_116:
      unint64_t v134 = v540;
      if (!v177) {
        ++v121;
      }
      unint64_t v179 = (unint64_t)&v165[v121 + 7];
      unint64_t v180 = (void *)((unint64_t)&v166[v121 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v181 = (v179 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v179 & 0xFFFFFFFFFFFFFFF8) = *v180;
      unint64_t v182 = (v179 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v183 = v181 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v184 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v185 = *(void *)v184;
      *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
      *(void *)unint64_t v183 = v185;
      unsigned int v186 = (void *)(((unint64_t)v180 + 31) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(v182 & 0xFFFFFFFFFFFFFFF8) = *v186;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      size_t v187 = (uint64_t *)(((v182 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = ((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = v187[1];
      uint64_t v190 = *(void *)(v188 + 8);
      uint64_t v191 = v190 & 0x3000000000000000;
      if ((v189 & 0x3000000000000000) != 0)
      {
        if (!v191)
        {
          uint64_t v192 = *(void *)v188;
          sub_10001EBB0(*(void *)v188, *(void *)(v188 + 8));
          *size_t v187 = v192;
          v187[1] = v190;
LABEL_124:
          unint64_t v193 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v194 = (v188 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v195 = *(void *)v194;
          *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
          *(void *)unint64_t v193 = v195;
          *(unsigned char *)(v193 + 9) = *(unsigned char *)(v194 + 9);
          unint64_t v196 = (v193 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v197 = (v194 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v198 = *(_DWORD *)v197;
          *(unsigned char *)(v196 + 4) = *(unsigned char *)(v197 + 4);
          *(_DWORD *)unint64_t v196 = v198;
          unint64_t v199 = (void *)((v193 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v200 = (void *)((v194 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v199 = *v200;
          v199[1] = v200[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_125:
          size_t v144 = v121;
          goto LABEL_126;
        }
      }
      else
      {
        if (!v191)
        {
          uint64_t v441 = *(void *)v188;
          sub_10001EBB0(*(void *)v188, *(void *)(v188 + 8));
          uint64_t v442 = *v187;
          unint64_t v443 = v187[1];
          *size_t v187 = v441;
          v187[1] = v190;
          sub_10001E9C0(v442, v443);
          goto LABEL_124;
        }
        sub_10001E9C0(*v187, v189);
      }
      *(_OWORD *)size_t v187 = *(_OWORD *)v188;
      goto LABEL_124;
    }
    goto LABEL_100;
  }
  if ((v74 & 0x80000000) == 0)
  {
    unint64_t v95 = v94[1];
    if (v95 >= 0xFFFFFFFF) {
      LODWORD(v95) = -1;
    }
    size_t v89 = v575;
    unint64_t v70 = v572;
    if (v95 == -1) {
      goto LABEL_61;
    }
    goto LABEL_87;
  }
  unint64_t v98 = ((unint64_t)v94 + v79) & v582;
  unint64_t v99 = (v81 + v98) & v80;
  if (v580 > 0x7FFFFFFD)
  {
    int v100 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v99);
    int v69 = v569;
    size_t v89 = v575;
    unint64_t v70 = v572;
    if (!v100)
    {
LABEL_61:
      unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = ((unint64_t)v94 + v79) & v582;
      unint64_t v99 = (v563 + v98) & v80;
      unint64_t v101 = (v560 + v99) & v80;
      goto LABEL_62;
    }
LABEL_87:
    uint64_t v147 = 7;
    if (!v580) {
      uint64_t v147 = 8;
    }
    unint64_t v134 = v540;
    if (v580) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
    memcpy(v69, v70, v540+ ((((((((((v147 + v89 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    goto LABEL_125;
  }
  uint64_t v83 = v560;
  size_t v122 = v537;
LABEL_84:
  unint64_t v101 = (v83 + v99) & v80;
  unint64_t v146 = *(void *)(((v122 + v101) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v146 >= 0xFFFFFFFF) {
    LODWORD(v146) = -1;
  }
  size_t v89 = v575;
  if ((v146 + 1) >= 2) {
    goto LABEL_87;
  }
LABEL_62:
  unint64_t v102 = v69;
  (*(void (**)(void *, const void *, uint64_t))(v565 + 16))(v69, v70, v567);
  int v103 = (void *)(((unint64_t)v102 + v77) & 0xFFFFFFFFFFFFFFF8);
  *int v103 = *v94;
  v103[1] = v94[1];
  unint64_t v104 = ((unint64_t)v103 + v79) & v582;
  *(unsigned char *)unint64_t v104 = *(unsigned char *)v98;
  uint64_t v105 = v104 | 4;
  int v106 = *(_DWORD *)(v98 | 4);
  *(unsigned char *)(v105 + 4) = *(unsigned char *)((v98 | 4) + 4);
  *(_DWORD *)uint64_t v105 = v106;
  *(_WORD *)(v104 + 10) = *(_WORD *)(v98 + 10);
  unint64_t v107 = (v563 + v104) & v80;
  uint64_t v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 16);
  swift_bridgeObjectRetain();
  v108(v107, v99, v561);
  v108((v560 + v107) & v80, v101, v561);
  unint64_t v109 = (unsigned char *)(((v560 + v107) & v80) + v89);
  *unint64_t v109 = *(unsigned char *)(v101 + v89);
  v109[1] = *(unsigned char *)(v101 + v89 + 1);
  v109[2] = *(unsigned char *)(v101 + v89 + 2);
  v109[3] = *(unsigned char *)(v101 + v89 + 3);
  v109[4] = *(unsigned char *)(v101 + v89 + 4);
  unint64_t v110 = (unint64_t)(v109 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v111 = (v101 + v89 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v110 = *(void *)v111;
  *(void *)(v110 + 8) = *(void *)(v111 + 8);
  *(unsigned char *)(v110 + 16) = *(unsigned char *)(v111 + 16);
  *(unsigned char *)(v110 + 17) = *(unsigned char *)(v111 + 17);
  *(unsigned char *)(v110 + 18) = *(unsigned char *)(v111 + 18);
  *(unsigned char *)(v110 + 19) = *(unsigned char *)(v111 + 19);
  unint64_t v112 = (v110 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v113 = (v111 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v112 = *(void *)v113;
  *(unsigned char *)(v112 + 8) = *(unsigned char *)(v113 + 8);
  *(unsigned char *)(v112 + 9) = *(unsigned char *)(v113 + 9);
  *(unsigned char *)(v112 + 10) = *(unsigned char *)(v113 + 10);
  *(unsigned char *)(v112 + 11) = *(unsigned char *)(v113 + 11);
  *(unsigned char *)(v112 + 12) = *(unsigned char *)(v113 + 12);
  uint64_t v114 = (void *)((v111 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v115 = (void *)((v110 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v115 = *v114;
  unint64_t v116 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v117 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v116 = *(void *)v117;
  *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
  *(unsigned char *)(v116 + 9) = *(unsigned char *)(v117 + 9);
  uint64_t v118 = (void *)((v559 + v116) & v80);
  uint64_t v119 = (const void *)((v559 + v117) & v80);
  uint64_t v120 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  swift_bridgeObjectRetain();
  if (v120(v119, 1, v561))
  {
    if (v580) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
    memcpy(v118, v119, v121);
  }
  else
  {
    v108((unint64_t)v118, (unint64_t)v119, v561);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v561);
    if (v580) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
  }
  unsigned int v124 = (void *)(((unint64_t)v118 + v121 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v125 = (void *)(((unint64_t)v119 + v121 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v124 = *v125;
  unint64_t v126 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v128 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  *(void *)unint64_t v126 = v128;
  uint64_t v129 = (void *)(((unint64_t)v124 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v130 = (void *)(((unint64_t)v125 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v129 = *v130;
  unint64_t v131 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v132 = (uint64_t *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v133 = v132[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v134 = v540;
  if ((v133 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
  }
  else
  {
    uint64_t v135 = *v132;
    sub_10001EBB0(*v132, v133);
    *(void *)unint64_t v131 = v135;
    *(void *)(v131 + 8) = v133;
  }
  unint64_t v136 = (v131 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v137 = ((unint64_t)v132 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v138 = *(void *)v137;
  *(unsigned char *)(v136 + 8) = *(unsigned char *)(v137 + 8);
  *(void *)unint64_t v136 = v138;
  *(unsigned char *)(v136 + 9) = *(unsigned char *)(v137 + 9);
  unint64_t v139 = (v136 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v140 = (v137 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v141 = *(_DWORD *)v140;
  *(unsigned char *)(v139 + 4) = *(unsigned char *)(v140 + 4);
  *(_DWORD *)unint64_t v139 = v141;
  uint64_t v142 = (void *)((v136 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v143 = (void *)((v137 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v142 = *v143;
  v142[1] = v143[1];
  swift_bridgeObjectRetain();
  size_t v144 = v89;
  if (!v580) {
    goto LABEL_125;
  }
LABEL_126:
  unint64_t v543 = v577 + 7;
  unint64_t v201 = (((((((((v577 + 7 + v144) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v542 = swift_getAssociatedTypeWitness();
  uint64_t v202 = *(void *)(v542 - 8);
  int v203 = *(_DWORD *)(v202 + 80) & 0xF8;
  uint64_t v204 = swift_getAssociatedTypeWitness();
  uint64_t v205 = *(void *)(v204 - 8);
  uint64_t v206 = v205;
  uint64_t v207 = *(unsigned __int8 *)(v205 + 80);
  uint64_t v208 = v203 | v207 | 7;
  uint64_t v209 = v134 + (v544 | v208) + v201 + 16;
  unint64_t v210 = (char *)(((unint64_t)v569 + v209) & ~(v544 | v208));
  uint64_t v211 = (char *)(((unint64_t)v572 + v209) & ~(v544 | v208));
  uint64_t v545 = v202;
  uint64_t v212 = *(unsigned int *)(v202 + 84);
  uint64_t v213 = *(unsigned int *)(v205 + 84);
  if (v212 <= v213) {
    unsigned int v214 = *(_DWORD *)(v205 + 84);
  }
  else {
    unsigned int v214 = *(_DWORD *)(v202 + 84);
  }
  if (v214 <= 0x7FFFFFFE) {
    unsigned int v215 = 2147483646;
  }
  else {
    unsigned int v215 = v214;
  }
  if (v215 <= v554) {
    unsigned int v216 = v554;
  }
  else {
    unsigned int v216 = v215;
  }
  if (v216 <= v546) {
    unsigned int v217 = v546;
  }
  else {
    unsigned int v217 = v216;
  }
  if (v217 <= 0x7FFFFFFF) {
    int v218 = 0x7FFFFFFF;
  }
  else {
    int v218 = v217;
  }
  uint64_t v219 = ~v550;
  uint64_t v220 = v548 + v550;
  uint64_t v221 = ~v208;
  uint64_t v222 = v548 + v208;
  uint64_t v223 = *(void *)(v202 + 64) + 7;
  uint64_t v224 = ~v207;
  uint64_t v225 = v207 + 8;
  unint64_t v226 = ((((*(void *)(v205 + 64) + 7 + ((v207 + 8 + (v223 & 0xFFFFFFFFFFFFFFF8)) & ~v207)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v227 = v552 + 16;
  uint64_t v570 = (v552 + 16 + v226 + ((v548 + v208 + ((v548 + v550) & ~v550)) & ~v208)) & v582;
  v573 = v211;
  uint64_t v551 = v223;
  uint64_t v553 = v552 + 16;
  unint64_t v534 = v226;
  uint64_t v536 = *(void *)(v204 - 8);
  uint64_t v541 = v204;
  uint64_t v533 = *(void *)(v205 + 64) + 7;
  uint64_t v547 = v225;
  uint64_t v549 = v224;
  if (v554 == v218)
  {
    uint64_t v228 = *(uint64_t (**)(char *))(v565 + 48);
    uint64_t v229 = ~v208;
    uint64_t v230 = v222;
    uint64_t v231 = v219;
    int v532 = v228(v210);
    int v232 = ((uint64_t (*)(char *, void, uint64_t))v228)(v211, v554, v567);
    uint64_t v219 = v231;
    uint64_t v222 = v230;
    uint64_t v221 = v229;
    if (v532)
    {
      if (!v232) {
        goto LABEL_199;
      }
      goto LABEL_193;
    }
    goto LABEL_227;
  }
  v555 = v210;
  unint64_t v233 = (v222 + ((unint64_t)&v210[v220] & v219)) & v221;
  if (v215 != v218)
  {
    unint64_t v239 = v226 + v233;
    if ((v217 & 0x80000000) == 0)
    {
      unint64_t v240 = *(void *)(v239 + 8);
      if (v240 >= 0xFFFFFFFF) {
        LODWORD(v240) = -1;
      }
      if (v240 != -1) {
        goto LABEL_153;
      }
LABEL_178:
      unint64_t v265 = (unint64_t)&v573[v220] & v219;
      unint64_t v266 = (v222 + v265) & v221;
      if (v215 == v218)
      {
        if (v212 == v215)
        {
          unsigned int v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v545 + 48);
          unint64_t v268 = (v222 + v265) & v221;
          uint64_t v269 = v212;
          uint64_t v270 = v542;
        }
        else
        {
          unsigned int v273 = (unint64_t *)((v551 + v266) & 0xFFFFFFFFFFFFFFF8);
          if (v214 <= 0x7FFFFFFE)
          {
            unint64_t v274 = *v273;
            if (v274 >= 0xFFFFFFFF) {
              LODWORD(v274) = -1;
            }
            uint64_t v275 = v555;
            if ((v274 + 1) >= 2) {
              goto LABEL_228;
            }
            goto LABEL_243;
          }
          unint64_t v268 = ((unint64_t)v273 + v547) & v549;
          unsigned int v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v536 + 48);
          uint64_t v269 = v213;
          uint64_t v270 = v541;
        }
        uint64_t v380 = v221;
        uint64_t v381 = v222;
        uint64_t v382 = v219;
        int v232 = v267(v268, v269, v270);
        uint64_t v219 = v382;
        uint64_t v222 = v381;
        uint64_t v221 = v380;
        unint64_t v210 = v555;
      }
      else
      {
        unint64_t v271 = v226 + v266;
        unint64_t v210 = v555;
        if ((v217 & 0x80000000) != 0)
        {
          uint64_t v363 = (v563 + ((v553 + v271) & v582)) & v538;
          if (v580 <= 0x7FFFFFFD)
          {
            uint64_t v275 = v555;
            unint64_t v499 = *(void *)(((v537 + ((v560 + v363) & v538)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v499 >= 0xFFFFFFFF) {
              LODWORD(v499) = -1;
            }
            if ((v499 + 1) >= 2) {
              goto LABEL_228;
            }
            goto LABEL_243;
          }
          uint64_t v364 = v221;
          uint64_t v365 = v222;
          uint64_t v366 = v219;
          int v232 = (*(uint64_t (**)(uint64_t))(v558 + 48))(v363);
          uint64_t v219 = v366;
          uint64_t v222 = v365;
          uint64_t v221 = v364;
        }
        else
        {
          unint64_t v272 = *(void *)(v271 + 8);
          if (v272 >= 0xFFFFFFFF) {
            LODWORD(v272) = -1;
          }
          int v232 = v272 + 1;
        }
      }
LABEL_227:
      uint64_t v275 = v210;
      if (v232)
      {
LABEL_228:
        v383 = *(void (**)(char *, uint64_t))(v565 + 8);
        uint64_t v384 = v221;
        uint64_t v385 = v222;
        uint64_t v386 = v219;
        v383(v275, v567);
        unint64_t v387 = (unint64_t)&v275[v220] & v386;
        v383((char *)v387, v567);
        unint64_t v388 = (v385 + v387) & v384;
        (*(void (**)(unint64_t, uint64_t))(v545 + 8))(v388, v542);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v536 + 8))((v547 + ((v551 + v388) & 0xFFFFFFFFFFFFFFF8)) & v549, v541);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v389 = (v553 + v534 + v388) & v582;
        v390 = *(void (**)(unint64_t, uint64_t))(v558 + 8);
        v390((v563 + v389) & v538, v561);
        unint64_t v391 = (v560 + ((v563 + v389) & v538)) & v538;
        v390(v391, v561);
        swift_bridgeObjectRelease();
        unint64_t v392 = (v559
              + ((((((v537 + v391) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v538;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v558 + 48))(v392, 1, v561)) {
          v390(v392, v561);
        }
        if (v580) {
          size_t v281 = v575;
        }
        else {
          size_t v281 = v575 + 1;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v393 = (uint64_t *)((((((v281 + 7 + v392) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v394 = v393[1];
        uint64_t v282 = v539;
        unint64_t v283 = v577 + 7;
        if ((v394 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v393, v394);
        }
        swift_bridgeObjectRelease();
        unint64_t v395 = (((((((((v281 + 7 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 19) & 0xFFFFFFFFFFFFFFF8)
              + 25) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v396 = v395 + v389;
        uint64_t v397 = v395 + v389 + 16;
        unint64_t v398 = *(void *)(v396 + 32);
        int v399 = -1;
        if (v398 < 0xFFFFFFFF) {
          int v399 = v398;
        }
        unint64_t v210 = v275;
        uint64_t v211 = v573;
        if (v399 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v397 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v397 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v397 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v280 = v570;
        memcpy(v210, v573, ((((v395 + v570 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
        goto LABEL_294;
      }
      unint64_t v265 = (unint64_t)&v573[v220] & v219;
      unint64_t v266 = (v222 + v265) & v221;
LABEL_243:
      uint64_t v400 = *(void (**)(char *, char *, uint64_t))(v565 + 24);
      uint64_t v401 = v275;
      v402 = v275;
      uint64_t v403 = v221;
      uint64_t v404 = v222;
      uint64_t v405 = v219;
      unint64_t v406 = v266;
      v400(v402, v573, v567);
      uint64_t v557 = v401;
      unint64_t v407 = (unint64_t)&v401[v220] & v405;
      v400((char *)v407, (char *)v265, v567);
      uint64_t v408 = (v404 + v407) & v403;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v545 + 24))(v408, v406, v542);
      v409 = (void *)((v551 + v408) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v410 = (void *)((v551 + v406) & 0xFFFFFFFFFFFFFFF8);
      void *v409 = *v410;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v536 + 24))(((unint64_t)v409 + v547) & v549, ((unint64_t)v410 + v547) & v549, v541);
      uint64_t v411 = (void *)((v533 + (((unint64_t)v409 + v547) & v549)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v412 = (v533 + (((unint64_t)v410 + v547) & v549)) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v413 = *(void *)v412;
      v412 += 15;
      *uint64_t v411 = v413;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v414 = (void *)(((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v414 = *(void *)(v412 & 0xFFFFFFFFFFFFFFF8);
      v414[1] = *(void *)((v412 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v415 = (void *)(v534 + v408);
      void *v415 = *(void *)(v534 + v406);
      v415[1] = *(void *)(v534 + v406 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v416 = ((unint64_t)v415 + v553) & v582;
      unint64_t v417 = (v553 + v534 + v406) & v582;
      *(unsigned char *)unint64_t v416 = *(unsigned char *)v417;
      uint64_t v418 = v416 | 4;
      int v419 = *(_DWORD *)(v417 | 4);
      *(unsigned char *)(v418 + 4) = *(unsigned char *)((v417 | 4) + 4);
      *(_DWORD *)uint64_t v418 = v419;
      *(_WORD *)(v416 + 10) = *(_WORD *)(v417 + 0xA);
      unint64_t v584 = v417;
      unint64_t v420 = (v563 + v417) & v538;
      v421 = *(void (**)(unint64_t, unint64_t, uint64_t))(v558 + 24);
      v421((v563 + v416) & v538, v420, v561);
      unint64_t v422 = (v560 + ((v563 + v416) & v538)) & v538;
      uint64_t v423 = (v560 + v420) & v538;
      v421(v422, v423, v561);
      uint64_t v424 = (unsigned char *)(v422 + v575);
      size_t v425 = v423 + v575;
      *uint64_t v424 = *(unsigned char *)(v423 + v575);
      v424[1] = *(unsigned char *)(v423 + v575 + 1);
      v424[2] = *(unsigned char *)(v423 + v575 + 2);
      v424[3] = *(unsigned char *)(v423 + v575 + 3);
      v424[4] = *(unsigned char *)(v423 + v575 + 4);
      unint64_t v426 = (v422 + v575 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v427 = (v425 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v426 = *(void *)v427;
      *(void *)(v426 + 8) = *(void *)(v427 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v426 + 16) = *(unsigned char *)(v427 + 16);
      *(unsigned char *)(v426 + 17) = *(unsigned char *)(v427 + 17);
      *(unsigned char *)(v426 + 18) = *(unsigned char *)(v427 + 18);
      *(unsigned char *)(v426 + 19) = *(unsigned char *)(v427 + 19);
      unint64_t v428 = (v426 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v429 = (v427 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v428 = *(void *)v429;
      *(unsigned char *)(v428 + 8) = *(unsigned char *)(v429 + 8);
      *(unsigned char *)(v428 + 9) = *(unsigned char *)(v429 + 9);
      *(unsigned char *)(v428 + 10) = *(unsigned char *)(v429 + 10);
      *(unsigned char *)(v428 + 11) = *(unsigned char *)(v429 + 11);
      *(unsigned char *)(v428 + 12) = *(unsigned char *)(v429 + 12);
      uint64_t v430 = (void *)((v427 + 47) & 0xFFFFFFFFFFFFFFF8);
      v431 = (void *)((v426 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v431 = *v430;
      unint64_t v432 = ((unint64_t)v431 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v433 = ((unint64_t)v430 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v432 = *(void *)v433;
      *(unsigned char *)(v432 + 8) = *(unsigned char *)(v433 + 8);
      *(unsigned char *)(v432 + 9) = *(unsigned char *)(v433 + 9);
      uint64_t v434 = (char *)((v559 + v432) & v538);
      v435 = (char *)((v559 + v433) & v538);
      uint64_t v436 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v558 + 48);
      LODWORD(v427) = v436(v434, 1, v561);
      int v437 = v436(v435, 1, v561);
      if (v427)
      {
        if (!v437)
        {
          (*(void (**)(char *, char *, uint64_t))(v558 + 16))(v434, v435, v561);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v558 + 56))(v434, 0, 1, v561);
LABEL_254:
          size_t v439 = v575;
          unsigned int v438 = v580;
          goto LABEL_255;
        }
      }
      else
      {
        if (!v437)
        {
          v421((unint64_t)v434, (unint64_t)v435, v561);
          goto LABEL_254;
        }
        (*(void (**)(char *, uint64_t))(v558 + 8))(v434, v561);
      }
      unsigned int v438 = v580;
      size_t v439 = v575;
      if (v580) {
        size_t v440 = v575;
      }
      else {
        size_t v440 = v575 + 1;
      }
      memcpy(v434, v435, v440);
LABEL_255:
      if (v438) {
        size_t v281 = v439;
      }
      else {
        size_t v281 = v439 + 1;
      }
      unint64_t v444 = (unint64_t)&v434[v281 + 7];
      char v445 = (void *)((unint64_t)&v435[v281 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v446 = (unint64_t)v445 + 31;
      unint64_t v447 = (v444 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v444 & 0xFFFFFFFFFFFFFFF8) = *v445;
      unint64_t v448 = (v444 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v449 = v447 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v450 = ((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v451 = *(void *)v450;
      *(unsigned char *)(v449 + 8) = *(unsigned char *)(v450 + 8);
      *(void *)unint64_t v449 = v451;
      v452 = (void *)(v448 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v453 = (v446 & 0xFFFFFFFFFFFFFFF8) + 15;
      void *v452 = *(void *)(v446 & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v454 = (uint64_t *)(((unint64_t)v452 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v455 = v453 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v456 = v454[1];
      uint64_t v457 = *(void *)(v455 + 8);
      uint64_t v458 = v457 & 0x3000000000000000;
      if ((v456 & 0x3000000000000000) != 0)
      {
        if (!v458)
        {
          uint64_t v459 = *(void *)v455;
          sub_10001EBB0(*(void *)v455, *(void *)(v455 + 8));
          *uint64_t v454 = v459;
          v454[1] = v457;
          goto LABEL_264;
        }
      }
      else
      {
        if (!v458)
        {
          uint64_t v490 = *(void *)v455;
          sub_10001EBB0(*(void *)v455, *(void *)(v455 + 8));
          uint64_t v491 = *v454;
          unint64_t v492 = v454[1];
          *uint64_t v454 = v490;
          v454[1] = v457;
          sub_10001E9C0(v491, v492);
LABEL_264:
          uint64_t v211 = v573;
          unint64_t v460 = ((unint64_t)v454 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v461 = (v455 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v462 = *(void *)v461;
          *(unsigned char *)(v460 + 8) = *(unsigned char *)(v461 + 8);
          *(void *)unint64_t v460 = v462;
          *(unsigned char *)(v460 + 9) = *(unsigned char *)(v461 + 9);
          unint64_t v463 = (v460 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v464 = (v461 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v465 = *(_DWORD *)v464;
          *(unsigned char *)(v463 + 4) = *(unsigned char *)(v464 + 4);
          *(_DWORD *)unint64_t v463 = v465;
          uint64_t v466 = (void *)((v460 + 25) & 0xFFFFFFFFFFFFFFF8);
          v467 = (void *)((v461 + 25) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v466 = *v467;
          v466[1] = v467[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          unint64_t v470 = ((((((((((v281 + 7 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v468 = v416 + v470;
          uint64_t v469 = (long long *)(v584 + v470);
          LODWORD(v470) = -1;
          if (*(void *)(v468 + 16) >= 0xFFFFFFFFuLL) {
            LODWORD(v471) = -1;
          }
          else {
            uint64_t v471 = *(void *)(v468 + 16);
          }
          int v472 = v471 - 1;
          if (*((void *)v469 + 2) < 0xFFFFFFFFuLL) {
            unint64_t v470 = *((void *)v469 + 2);
          }
          int v473 = v470 - 1;
          if ((v472 & 0x80000000) == 0)
          {
            if (v473 < 0)
            {
              *(void *)unint64_t v468 = *(void *)v469;
              *(unsigned char *)(v468 + 8) = *((unsigned char *)v469 + 8);
              *(unsigned char *)(v468 + 9) = *((unsigned char *)v469 + 9);
              uint64_t v474 = *((void *)v469 + 2);
              swift_errorRetain();
              *(void *)(v468 + 16) = v474;
              uint64_t v475 = *((void *)v469 + 3);
              swift_errorRetain();
              *(void *)(v468 + 24) = v475;
              *(unsigned char *)(v468 + 32) = *((unsigned char *)v469 + 32);
              *(unsigned char *)(v468 + 33) = *((unsigned char *)v469 + 33);
              *(unsigned char *)(v468 + 34) = *((unsigned char *)v469 + 34);
              *(void *)(v468 + 40) = *((void *)v469 + 5);
              *(void *)(v468 + 48) = *((void *)v469 + 6);
              *(void *)(v468 + 56) = *((void *)v469 + 7);
              *(void *)(v468 + 64) = *((void *)v469 + 8);
              *(unsigned char *)(v468 + 72) = *((unsigned char *)v469 + 72);
              *(void *)(v468 + 80) = *((void *)v469 + 10);
              *(void *)(v468 + 88) = *((void *)v469 + 11);
              v581 = (void *)*((void *)v469 + 12);
              *(void *)(v468 + 96) = v581;
              *(unsigned char *)(v468 + 104) = *((unsigned char *)v469 + 104);
              *(unsigned char *)(v468 + 105) = *((unsigned char *)v469 + 105);
              *(void *)(v468 + 112) = *((void *)v469 + 14);
              *(void *)(v468 + 120) = *((void *)v469 + 15);
              *(void *)(v468 + 128) = *((void *)v469 + 16);
              *(void *)(v468 + 136) = *((void *)v469 + 17);
              *(void *)(v468 + 144) = *((void *)v469 + 18);
              *(void *)(v468 + 152) = *((void *)v469 + 19);
              *(void *)(v468 + 160) = *((void *)v469 + 20);
              *(void *)(v468 + 168) = *((void *)v469 + 21);
              *(unsigned char *)(v468 + 176) = *((unsigned char *)v469 + 176);
              *(void *)(v468 + 184) = *((void *)v469 + 23);
              uint64_t v476 = *((void *)v469 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v477 = v581;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v476)
              {
                *(void *)(v468 + 192) = v476;
                *(void *)(v468 + 200) = *((void *)v469 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v468 + 192) = v469[12];
              }
              uint64_t v282 = v539;
              unint64_t v283 = v577 + 7;
              uint64_t v211 = v573;
              *(void *)(v468 + 208) = *((void *)v469 + 26);
              *(void *)(v468 + 216) = *((void *)v469 + 27);
              *(void *)(v468 + 224) = *((void *)v469 + 28);
              *(void *)(v468 + 232) = *((void *)v469 + 29);
              *(void *)(v468 + 240) = *((void *)v469 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_293;
            }
            goto LABEL_277;
          }
          if ((v473 & 0x80000000) == 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v468 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_277:
            long long v478 = *v469;
            long long v479 = v469[1];
            long long v480 = v469[3];
            *(_OWORD *)(v468 + 32) = v469[2];
            *(_OWORD *)(v468 + 48) = v480;
            *(_OWORD *)unint64_t v468 = v478;
            *(_OWORD *)(v468 + 16) = v479;
            long long v481 = v469[4];
            long long v482 = v469[5];
            long long v483 = v469[7];
            *(_OWORD *)(v468 + 96) = v469[6];
            *(_OWORD *)(v468 + 112) = v483;
            *(_OWORD *)(v468 + 64) = v481;
            *(_OWORD *)(v468 + 80) = v482;
            long long v484 = v469[8];
            long long v485 = v469[9];
            long long v486 = v469[11];
            *(_OWORD *)(v468 + 160) = v469[10];
            *(_OWORD *)(v468 + 176) = v486;
            *(_OWORD *)(v468 + 128) = v484;
            *(_OWORD *)(v468 + 144) = v485;
            long long v487 = v469[12];
            long long v488 = v469[13];
            long long v489 = v469[14];
            *(void *)(v468 + 240) = *((void *)v469 + 30);
            *(_OWORD *)(v468 + 208) = v488;
            *(_OWORD *)(v468 + 224) = v489;
            *(_OWORD *)(v468 + 192) = v487;
            uint64_t v282 = v539;
            unint64_t v283 = v577 + 7;
LABEL_293:
            uint64_t v500 = (_OWORD *)((v468 + 255) & 0xFFFFFFFFFFFFFFF8);
            v501 = (long long *)(((unint64_t)v469 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v502 = *v501;
            *(_OWORD *)((char *)v500 + 9) = *(long long *)((char *)v501 + 9);
            *uint64_t v500 = v502;
            unint64_t v503 = (v468 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v504 = ((unint64_t)v469 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v505 = *(_OWORD *)v504;
            *(unsigned char *)(v503 + 16) = *(unsigned char *)(v504 + 16);
            *(_OWORD *)unint64_t v503 = v505;
            v506 = (void *)((v468 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v507 = ((unint64_t)v469 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v508 = *(void *)v507;
            v507 += 15;
            void *v506 = v508;
            unint64_t v509 = (uint64_t *)(((unint64_t)v506 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v510 = *(void *)(v507 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v511 = *(void *)((v507 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_10018B584(v510, v511);
            uint64_t v512 = *v509;
            unint64_t v513 = v509[1];
            *unint64_t v509 = v510;
            v509[1] = v511;
            sub_1000CF144(v512, v513);
            unint64_t v210 = v557;
            uint64_t v280 = v570;
LABEL_294:
            size_t v358 = v281;
            goto LABEL_295;
          }
          *(void *)unint64_t v468 = *(void *)v469;
          *(unsigned char *)(v468 + 8) = *((unsigned char *)v469 + 8);
          *(unsigned char *)(v468 + 9) = *((unsigned char *)v469 + 9);
          uint64_t v493 = *((void *)v469 + 2);
          swift_errorRetain();
          *(void *)(v468 + 16) = v493;
          swift_errorRelease();
          uint64_t v494 = *((void *)v469 + 3);
          swift_errorRetain();
          *(void *)(v468 + 24) = v494;
          swift_errorRelease();
          *(unsigned char *)(v468 + 32) = *((unsigned char *)v469 + 32);
          *(unsigned char *)(v468 + 33) = *((unsigned char *)v469 + 33);
          *(unsigned char *)(v468 + 34) = *((unsigned char *)v469 + 34);
          *(void *)(v468 + 40) = *((void *)v469 + 5);
          *(void *)(v468 + 48) = *((void *)v469 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v468 + 56) = *((void *)v469 + 7);
          *(void *)(v468 + 64) = *((void *)v469 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v468 + 72) = *((unsigned char *)v469 + 72);
          *(void *)(v468 + 80) = *((void *)v469 + 10);
          *(void *)(v468 + 88) = *((void *)v469 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v495 = *(void **)(v468 + 96);
          os_log_type_t v496 = (void *)*((void *)v469 + 12);
          *(void *)(v468 + 96) = v496;
          id v497 = v496;

          *(unsigned char *)(v468 + 104) = *((unsigned char *)v469 + 104);
          *(unsigned char *)(v468 + 105) = *((unsigned char *)v469 + 105);
          *(void *)(v468 + 112) = *((void *)v469 + 14);
          *(void *)(v468 + 120) = *((void *)v469 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v468 + 128) = *((void *)v469 + 16);
          *(void *)(v468 + 136) = *((void *)v469 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v468 + 144) = *((void *)v469 + 18);
          *(void *)(v468 + 152) = *((void *)v469 + 19);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v468 + 160) = *((void *)v469 + 20);
          *(void *)(v468 + 168) = *((void *)v469 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v468 + 176) = *((unsigned char *)v469 + 176);
          *(void *)(v468 + 184) = *((void *)v469 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v498 = *((void *)v469 + 24);
          if (*(void *)(v468 + 192))
          {
            uint64_t v282 = v539;
            unint64_t v283 = v577 + 7;
            if (v498)
            {
              *(void *)(v468 + 192) = v498;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v468 + 200) = *((void *)v469 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
LABEL_292:
              *(void *)(v468 + 208) = *((void *)v469 + 26);
              *(void *)(v468 + 216) = *((void *)v469 + 27);
              *(void *)(v468 + 224) = *((void *)v469 + 28);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v468 + 232) = *((void *)v469 + 29);
              *(void *)(v468 + 240) = *((void *)v469 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_293;
            }
            sub_1002651E8(v468 + 192);
          }
          else
          {
            uint64_t v282 = v539;
            unint64_t v283 = v577 + 7;
            if (v498)
            {
              *(void *)(v468 + 192) = v498;
              *(void *)(v468 + 200) = *((void *)v469 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_292;
            }
          }
          *(_OWORD *)(v468 + 192) = v469[12];
          goto LABEL_292;
        }
        sub_10001E9C0(*v454, v456);
      }
      *(_OWORD *)uint64_t v454 = *(_OWORD *)v455;
      goto LABEL_264;
    }
    unint64_t v252 = (v563 + ((v227 + v239) & v582)) & v538;
    if (v580 <= 0x7FFFFFFD)
    {
      unint64_t v251 = *(void *)(((v537 + ((v560 + v252) & v538)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_175:
      if (v251 >= 0xFFFFFFFF) {
        LODWORD(v251) = -1;
      }
      if ((v251 + 1) >= 2) {
        goto LABEL_153;
      }
      goto LABEL_178;
    }
    unsigned int v253 = *(uint64_t (**)(unint64_t))(v558 + 48);
LABEL_170:
    unint64_t v256 = v226;
    uint64_t v257 = ~v208;
    uint64_t v258 = v222;
    uint64_t v259 = v219;
    int v260 = v253(v252);
    uint64_t v219 = v259;
    uint64_t v222 = v258;
    uint64_t v221 = v257;
    unint64_t v226 = v256;
    if (v260) {
      goto LABEL_153;
    }
    goto LABEL_178;
  }
  if (v212 != v215)
  {
    uint64_t v250 = (unint64_t *)((v223 + v233) & 0xFFFFFFFFFFFFFFF8);
    if (v214 <= 0x7FFFFFFE)
    {
      unint64_t v251 = *v250;
      goto LABEL_175;
    }
    unint64_t v252 = ((unint64_t)v250 + v225) & v224;
    unsigned int v253 = *(uint64_t (**)(unint64_t))(v206 + 48);
    goto LABEL_170;
  }
  unint64_t v234 = v226;
  uint64_t v235 = ~v208;
  uint64_t v236 = v222;
  uint64_t v237 = v219;
  int v238 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v545 + 48))(v233, v212, v542);
  uint64_t v219 = v237;
  uint64_t v222 = v236;
  uint64_t v221 = v235;
  unint64_t v226 = v234;
  if (!v238) {
    goto LABEL_178;
  }
LABEL_153:
  unint64_t v241 = (unint64_t)&v573[v220] & v219;
  unint64_t v242 = (v222 + v241) & v221;
  if (v215 == v218)
  {
    if (v212 == v215)
    {
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v545 + 48);
      unint64_t v244 = (v222 + v241) & v221;
      uint64_t v245 = v212;
      uint64_t v246 = v542;
LABEL_191:
      uint64_t v276 = v221;
      uint64_t v277 = v222;
      uint64_t v278 = v219;
      int v249 = v243(v244, v245, v246);
      uint64_t v219 = v278;
      uint64_t v222 = v277;
      uint64_t v221 = v276;
      unint64_t v210 = v555;
      goto LABEL_192;
    }
    id v254 = (unint64_t *)((v551 + v242) & 0xFFFFFFFFFFFFFFF8);
    if (v214 > 0x7FFFFFFE)
    {
      unint64_t v244 = ((unint64_t)v254 + v547) & v549;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v245 = v213;
      uint64_t v246 = v541;
      goto LABEL_191;
    }
    unint64_t v255 = *v254;
    if (v255 >= 0xFFFFFFFF) {
      LODWORD(v255) = -1;
    }
    unint64_t v210 = v555;
    uint64_t v211 = v573;
    if ((v255 + 1) >= 2) {
      goto LABEL_193;
    }
  }
  else
  {
    unint64_t v247 = v226 + v242;
    unint64_t v210 = v555;
    if ((v217 & 0x80000000) == 0)
    {
      unint64_t v248 = *(void *)(v247 + 8);
      if (v248 >= 0xFFFFFFFF) {
        LODWORD(v248) = -1;
      }
      int v249 = v248 + 1;
LABEL_192:
      uint64_t v211 = v573;
      if (!v249)
      {
LABEL_199:
        unint64_t v241 = (unint64_t)&v211[v220] & v219;
        unint64_t v242 = (v222 + v241) & v221;
        goto LABEL_200;
      }
LABEL_193:
      uint64_t v279 = 7;
      if (!v580) {
        uint64_t v279 = 8;
      }
      uint64_t v280 = v570;
      if (v580) {
        size_t v281 = v575;
      }
      else {
        size_t v281 = v575 + 1;
      }
      memcpy(v210, v211, ((((((((((((((v279 + v575 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v570+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      uint64_t v282 = v539;
      unint64_t v283 = v577 + 7;
      goto LABEL_294;
    }
    uint64_t v261 = (v563 + ((v553 + v247) & v582)) & v538;
    if (v580 > 0x7FFFFFFD)
    {
      uint64_t v262 = v221;
      uint64_t v263 = v222;
      uint64_t v264 = v219;
      int v249 = (*(uint64_t (**)(uint64_t))(v558 + 48))(v261);
      uint64_t v219 = v264;
      uint64_t v222 = v263;
      uint64_t v221 = v262;
      goto LABEL_192;
    }
    unint64_t v379 = *(void *)(((v537 + ((v560 + v261) & v538)) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v379 >= 0xFFFFFFFF) {
      LODWORD(v379) = -1;
    }
    uint64_t v211 = v573;
    if ((v379 + 1) >= 2) {
      goto LABEL_193;
    }
  }
LABEL_200:
  uint64_t v284 = *(void (**)(char *, char *, uint64_t))(v565 + 16);
  unint64_t v285 = v211;
  uint64_t v286 = v221;
  uint64_t v287 = v222;
  uint64_t v288 = v219;
  v284(v210, v285, v567);
  v556 = v210;
  unint64_t v289 = (unint64_t)&v210[v220] & v288;
  v284((char *)v289, (char *)v241, v567);
  unint64_t v290 = (v287 + v289) & v286;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v545 + 16))(v290, v242, v542);
  uint64_t v291 = (void *)((v551 + v290) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v292 = (void *)((v551 + v242) & 0xFFFFFFFFFFFFFFF8);
  void *v291 = *v292;
  unint64_t v293 = ((unint64_t)v291 + v547) & v549;
  unint64_t v294 = ((unint64_t)v292 + v547) & v549;
  uint64_t v295 = *(void (**)(unint64_t, unint64_t, uint64_t))(v536 + 16);
  swift_bridgeObjectRetain();
  v295(v293, v294, v541);
  uint64_t v296 = (void *)((v533 + v294) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v297 = (void *)((v533 + v293) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v297 = *v296;
  unint64_t v298 = (void *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v299 = (void *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v298 = *v299;
  v298[1] = v299[1];
  uint64_t v300 = (void *)(v534 + v290);
  *uint64_t v300 = *(void *)(v534 + v242);
  v300[1] = *(void *)(v534 + v242 + 8);
  unint64_t v301 = (v553 + v534 + v290) & v582;
  unint64_t v302 = (v553 + v534 + v242) & v582;
  *(unsigned char *)unint64_t v301 = *(unsigned char *)v302;
  uint64_t v303 = v301 | 4;
  int v304 = *(_DWORD *)(v302 | 4);
  *(unsigned char *)(v303 + 4) = *(unsigned char *)((v302 | 4) + 4);
  *(_DWORD *)uint64_t v303 = v304;
  *(_WORD *)(v301 + 10) = *(_WORD *)(v302 + 0xA);
  unint64_t v583 = v301;
  unint64_t v305 = (v563 + v301) & v538;
  unint64_t v306 = (v563 + v302) & v538;
  size_t v307 = *(void (**)(unint64_t, unint64_t, uint64_t))(v558 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v307(v305, v306, v561);
  uint64_t v308 = (v560 + v306) & v538;
  v307((v560 + v305) & v538, v308, v561);
  size_t v281 = v575;
  uint64_t v309 = (unsigned char *)(((v560 + v305) & v538) + v575);
  *uint64_t v309 = *(unsigned char *)(v308 + v575);
  v309[1] = *(unsigned char *)(v308 + v575 + 1);
  v309[2] = *(unsigned char *)(v308 + v575 + 2);
  v309[3] = *(unsigned char *)(v308 + v575 + 3);
  v309[4] = *(unsigned char *)(v308 + v575 + 4);
  unint64_t v310 = (unint64_t)(v309 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v311 = (v308 + v575 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v310 = *(void *)v311;
  *(void *)(v310 + 8) = *(void *)(v311 + 8);
  *(unsigned char *)(v310 + 16) = *(unsigned char *)(v311 + 16);
  *(unsigned char *)(v310 + 17) = *(unsigned char *)(v311 + 17);
  *(unsigned char *)(v310 + 18) = *(unsigned char *)(v311 + 18);
  *(unsigned char *)(v310 + 19) = *(unsigned char *)(v311 + 19);
  unint64_t v312 = (v310 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v313 = (v311 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  *(unsigned char *)(v312 + 9) = *(unsigned char *)(v313 + 9);
  *(unsigned char *)(v312 + 10) = *(unsigned char *)(v313 + 10);
  *(unsigned char *)(v312 + 11) = *(unsigned char *)(v313 + 11);
  *(unsigned char *)(v312 + 12) = *(unsigned char *)(v313 + 12);
  uint64_t v314 = (void *)((v311 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v315 = (void *)((v310 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v315 = *v314;
  unint64_t v316 = ((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v317 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v316 = *(void *)v317;
  *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
  *(unsigned char *)(v316 + 9) = *(unsigned char *)(v317 + 9);
  uint64_t v318 = (void *)((v559 + v316) & v538);
  uint64_t v319 = (const void *)((v559 + v317) & v538);
  uint64_t v320 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v558 + 48);
  swift_bridgeObjectRetain();
  if (v320(v319, 1, v561))
  {
    unsigned int v321 = v580;
    if (!v580) {
      size_t v281 = v575 + 1;
    }
    memcpy(v318, v319, v281);
  }
  else
  {
    v307((unint64_t)v318, (unint64_t)v319, v561);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v558 + 56))(v318, 0, 1, v561);
    unsigned int v321 = v580;
    if (!v580) {
      size_t v281 = v575 + 1;
    }
  }
  int v322 = (void *)(((unint64_t)v318 + v281 + 7) & 0xFFFFFFFFFFFFFFF8);
  v323 = (void *)(((unint64_t)v319 + v281 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v322 = *v323;
  unint64_t v324 = ((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v326 = *(void *)v325;
  *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
  *(void *)unint64_t v324 = v326;
  long long v327 = (void *)(((unint64_t)v322 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v328 = (void *)(((unint64_t)v323 + 31) & 0xFFFFFFFFFFFFFFF8);
  *long long v327 = *v328;
  unint64_t v329 = ((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8;
  v330 = (uint64_t *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v331 = v330[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v331 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v329 = *(_OWORD *)v330;
  }
  else
  {
    uint64_t v332 = *v330;
    sub_10001EBB0(*v330, v331);
    *(void *)unint64_t v329 = v332;
    *(void *)(v329 + 8) = v331;
  }
  uint64_t v211 = v573;
  unint64_t v333 = (v329 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v334 = ((unint64_t)v330 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v335 = *(void *)v334;
  *(unsigned char *)(v333 + 8) = *(unsigned char *)(v334 + 8);
  *(void *)unint64_t v333 = v335;
  *(unsigned char *)(v333 + 9) = *(unsigned char *)(v334 + 9);
  unint64_t v336 = (v333 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v337 = (v334 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v338 = *(_DWORD *)v337;
  *(unsigned char *)(v336 + 4) = *(unsigned char *)(v337 + 4);
  *(_DWORD *)unint64_t v336 = v338;
  os_log_type_t v339 = (void *)((v333 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v340 = (void *)((v334 + 25) & 0xFFFFFFFFFFFFFFF8);
  *os_log_type_t v339 = *v340;
  v339[1] = v340[1];
  unint64_t v341 = ((((((((((v281 + 7 + v577) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v342 = v583 + v341;
  uint64_t v343 = (long long *)(v302 + v341);
  unint64_t v344 = *((void *)v343 + 2);
  if (v344 >= 0xFFFFFFFF) {
    LODWORD(v344) = -1;
  }
  int v345 = v344 - 1;
  swift_bridgeObjectRetain();
  if (v345 < 0)
  {
    *(void *)unint64_t v342 = *(void *)v343;
    *(unsigned char *)(v342 + 8) = *((unsigned char *)v343 + 8);
    *(unsigned char *)(v342 + 9) = *((unsigned char *)v343 + 9);
    uint64_t v359 = *((void *)v343 + 2);
    swift_errorRetain();
    *(void *)(v342 + 16) = v359;
    uint64_t v360 = *((void *)v343 + 3);
    swift_errorRetain();
    *(void *)(v342 + 24) = v360;
    *(unsigned char *)(v342 + 32) = *((unsigned char *)v343 + 32);
    *(unsigned char *)(v342 + 33) = *((unsigned char *)v343 + 33);
    *(unsigned char *)(v342 + 34) = *((unsigned char *)v343 + 34);
    *(void *)(v342 + 40) = *((void *)v343 + 5);
    *(void *)(v342 + 48) = *((void *)v343 + 6);
    *(void *)(v342 + 56) = *((void *)v343 + 7);
    *(void *)(v342 + 64) = *((void *)v343 + 8);
    *(unsigned char *)(v342 + 72) = *((unsigned char *)v343 + 72);
    *(void *)(v342 + 80) = *((void *)v343 + 10);
    *(void *)(v342 + 88) = *((void *)v343 + 11);
    v578 = (void *)*((void *)v343 + 12);
    *(void *)(v342 + 96) = v578;
    *(unsigned char *)(v342 + 104) = *((unsigned char *)v343 + 104);
    *(unsigned char *)(v342 + 105) = *((unsigned char *)v343 + 105);
    *(void *)(v342 + 112) = *((void *)v343 + 14);
    *(void *)(v342 + 120) = *((void *)v343 + 15);
    *(void *)(v342 + 128) = *((void *)v343 + 16);
    *(void *)(v342 + 136) = *((void *)v343 + 17);
    *(void *)(v342 + 144) = *((void *)v343 + 18);
    *(void *)(v342 + 152) = *((void *)v343 + 19);
    *(void *)(v342 + 160) = *((void *)v343 + 20);
    *(void *)(v342 + 168) = *((void *)v343 + 21);
    *(unsigned char *)(v342 + 176) = *((unsigned char *)v343 + 176);
    *(void *)(v342 + 184) = *((void *)v343 + 23);
    uint64_t v361 = *((void *)v343 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v362 = v578;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v361)
    {
      *(void *)(v342 + 192) = v361;
      *(void *)(v342 + 200) = *((void *)v343 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v342 + 192) = v343[12];
    }
    uint64_t v282 = v539;
    uint64_t v211 = v573;
    size_t v358 = v575;
    unsigned int v321 = v580;
    unint64_t v283 = v543;
    *(void *)(v342 + 208) = *((void *)v343 + 26);
    *(void *)(v342 + 216) = *((void *)v343 + 27);
    *(void *)(v342 + 224) = *((void *)v343 + 28);
    *(void *)(v342 + 232) = *((void *)v343 + 29);
    *(void *)(v342 + 240) = *((void *)v343 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v346 = *v343;
    long long v347 = v343[1];
    long long v348 = v343[3];
    *(_OWORD *)(v342 + 32) = v343[2];
    *(_OWORD *)(v342 + 48) = v348;
    *(_OWORD *)unint64_t v342 = v346;
    *(_OWORD *)(v342 + 16) = v347;
    long long v349 = v343[4];
    long long v350 = v343[5];
    long long v351 = v343[7];
    *(_OWORD *)(v342 + 96) = v343[6];
    *(_OWORD *)(v342 + 112) = v351;
    *(_OWORD *)(v342 + 64) = v349;
    *(_OWORD *)(v342 + 80) = v350;
    long long v352 = v343[8];
    long long v353 = v343[9];
    long long v354 = v343[11];
    *(_OWORD *)(v342 + 160) = v343[10];
    *(_OWORD *)(v342 + 176) = v354;
    *(_OWORD *)(v342 + 128) = v352;
    *(_OWORD *)(v342 + 144) = v353;
    long long v355 = v343[12];
    long long v356 = v343[13];
    long long v357 = v343[14];
    *(void *)(v342 + 240) = *((void *)v343 + 30);
    *(_OWORD *)(v342 + 208) = v356;
    *(_OWORD *)(v342 + 224) = v357;
    *(_OWORD *)(v342 + 192) = v355;
    uint64_t v282 = v539;
    size_t v358 = v575;
    unint64_t v283 = v577 + 7;
  }
  uint64_t v367 = (_OWORD *)((v342 + 255) & 0xFFFFFFFFFFFFFFF8);
  v368 = (long long *)(((unint64_t)v343 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v369 = *v368;
  *(_OWORD *)((char *)v367 + 9) = *(long long *)((char *)v368 + 9);
  *uint64_t v367 = v369;
  unint64_t v370 = (v342 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v371 = ((unint64_t)v343 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v372 = *(_OWORD *)v371;
  *(unsigned char *)(v370 + 16) = *(unsigned char *)(v371 + 16);
  *(_OWORD *)unint64_t v370 = v372;
  v373 = (void *)((v342 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v374 = ((unint64_t)v343 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v375 = *(void *)v374;
  v374 += 15;
  void *v373 = v375;
  uint64_t v376 = (void *)(((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v377 = *(void *)(v374 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v378 = *(void *)((v374 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_10018B584(v377, v378);
  *uint64_t v376 = v377;
  v376[1] = v378;
  unint64_t v210 = v556;
  uint64_t v280 = v570;
  if (!v321) {
    goto LABEL_294;
  }
LABEL_295:
  unint64_t v514 = ((((v280
           + ((((((((((v283 + v358) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v515 = (unint64_t)&v210[v514];
  unint64_t v516 = (unint64_t)&v211[v514];
  unint64_t v517 = v515 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v517 = *(void *)(v516 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v517 + 8) = *(unsigned char *)((v516 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v518 = (void **)((v515 + 23) & 0xFFFFFFFFFFFFFFF8);
  v519 = (void **)((v516 + 23) & 0xFFFFFFFFFFFFFFF8);
  v520 = *v519;
  uint64_t v521 = *v518;
  *char v518 = *v519;
  id v522 = v520;

  unint64_t v523 = ((unint64_t)v518 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v524 = (unint64_t *)(((unint64_t)v519 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v525 = *v524;
  if (*(void *)v523 < 0xFFFFFFFFuLL)
  {
    if (v525 >= 0xFFFFFFFF)
    {
      swift_errorRetain();
      *(void *)unint64_t v523 = v525;
      v529 = (void *)v524[1];
      *(void *)(v523 + 8) = v529;
      id v530 = v529;
      return v282;
    }
LABEL_301:
    *(_OWORD *)unint64_t v523 = *(_OWORD *)v524;
    return v282;
  }
  if (v525 < 0xFFFFFFFF)
  {
    swift_errorRelease();

    goto LABEL_301;
  }
  swift_errorRetain();
  *(void *)unint64_t v523 = v525;
  swift_errorRelease();
  v526 = *(void **)(v523 + 8);
  v527 = (void *)v524[1];
  *(void *)(v523 + 8) = v527;
  id v528 = v527;

  return v282;
}

__n128 sub_1003D993C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v7 | v11 | 7;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  if (v15 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v16 = *(_DWORD *)(v5 + 84);
  }
  if (v16 <= 0x7FFFFFFE) {
    int v17 = 2147483646;
  }
  else {
    int v17 = v16;
  }
  uint64_t v18 = *(void *)(v5 + 64) + 7;
  uint64_t v19 = v11 + 8;
  size_t v20 = ((((*(void *)(v9 + 64) + 7 + ((v11 + 8 + (v18 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v241 = v8;
  uint64_t v235 = ~v11;
  uint64_t v238 = *(void *)(v9 + 64) + 7;
  if (v15 == v17)
  {
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, v15, AssociatedTypeWitness)) {
      goto LABEL_17;
    }
LABEL_16:
    memcpy(v13, v14, v20);
    goto LABEL_19;
  }
  unint64_t v21 = (uint64_t *)((unint64_t)&v14[v18] & 0xFFFFFFFFFFFFFFF8);
  if (v16 <= 0x7FFFFFFE)
  {
    uint64_t v22 = *v21;
    if ((unint64_t)*v21 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) < 2) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))(((unint64_t)v21 + v19) & ~v11)) {
    goto LABEL_16;
  }
LABEL_17:
  unint64_t v21 = (uint64_t *)((unint64_t)&v14[v18] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v14, AssociatedTypeWitness);
  uint64_t v23 = (void *)((unint64_t)&v13[v18] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v21;
  int v24 = v13;
  unint64_t v25 = ((unint64_t)v23 + v19) & v235;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v25, ((unint64_t)v21 + v19) & v235, v241);
  unint64_t v26 = v238 + v25;
  uint64_t v13 = v24;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  int v27 = (void *)((v238 + (((unint64_t)v21 + v19) & v235)) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v26 = *v27;
  *(_OWORD *)((v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  uint64_t v28 = &v13[v20];
  uint64_t v29 = &v14[v20];
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v32;
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = sub_10096B0E0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = v37 | 7;
  uint64_t v220 = v34;
  uint64_t v224 = v37 | v34;
  uint64_t v39 = v37 | v34 | 7;
  unint64_t v242 = (void *)((unint64_t)&v13[v20 + 9 + v39] & ~v39);
  int v40 = (const void *)((unint64_t)&v29[v39 + 9] & ~v39);
  uint64_t v41 = *(unsigned int *)(v32 + 84);
  unsigned int v42 = *(_DWORD *)(v36 + 84);
  if (v42 <= 0x7FFFFFFE) {
    unsigned int v43 = 2147483646;
  }
  else {
    unsigned int v43 = *(_DWORD *)(v36 + 84);
  }
  unsigned int v226 = v43;
  if (v41 > v43) {
    unsigned int v43 = *(_DWORD *)(v32 + 84);
  }
  if (v43 <= 0x7FFFFFFF) {
    int v44 = 0x7FFFFFFF;
  }
  else {
    int v44 = v43;
  }
  uint64_t v228 = *(void *)(v32 + 64);
  uint64_t v45 = v228 + 7;
  uint64_t v46 = ~v38;
  uint64_t v47 = v37 + 16;
  uint64_t v222 = v37 | 7;
  unint64_t v239 = (v37 + 16 + ((v228 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v38;
  uint64_t v48 = ~v37;
  uint64_t v49 = v37 + 12;
  size_t v50 = *(void *)(v36 + 64);
  size_t v51 = v50 + v37;
  uint64_t v215 = v37 + 10;
  unint64_t v245 = (v37
        + 10
        + ((((((v50 + 12 + ((v50 + v37 + ((v37 + 12) & ~v37)) & ~v37)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37;
  unsigned int v244 = *(_DWORD *)(v36 + 84);
  uint64_t v216 = *(void *)(v35 - 8);
  uint64_t v217 = v35;
  uint64_t v214 = ~v37;
  uint64_t v218 = v37 + 12;
  uint64_t v236 = v40;
  size_t v231 = v50;
  uint64_t v232 = v31;
  size_t v213 = v50 + v37;
  uint64_t v233 = v33;
  uint64_t v234 = v46;
  size_t v208 = v50 + 12;
  if (v41 == v44)
  {
    int v52 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v40, v41, v31);
    goto LABEL_29;
  }
  unint64_t v53 = ((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8;
  if ((v43 & 0x80000000) == 0)
  {
    unint64_t v54 = *(void *)(v53 + 8);
    if (v54 >= 0xFFFFFFFF) {
      LODWORD(v54) = -1;
    }
    if (v54 == -1) {
      goto LABEL_35;
    }
    goto LABEL_52;
  }
  unint64_t v55 = (v47 + v53) & v46;
  unint64_t v76 = (v49 + v55) & v48;
  if (v42 > 0x7FFFFFFD)
  {
    int v52 = (*(uint64_t (**)(unint64_t))(v36 + 48))(v76);
LABEL_29:
    int v40 = v236;
    if (!v52)
    {
LABEL_35:
      unint64_t v53 = ((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v55 = (v47 + v53) & v46;
      uint64_t v56 = v218;
      unint64_t v209 = (v218 + v55) & v48;
      size_t v211 = (v51 + v209) & v48;
      goto LABEL_36;
    }
LABEL_52:
    uint64_t v94 = 7;
    if (v244)
    {
      size_t v75 = v50;
    }
    else
    {
      uint64_t v94 = 8;
      size_t v75 = v50 + 1;
    }
    memcpy(v242, v40, v239+ ((((((((((v94 + v50 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    uint64_t v77 = v220;
    uint64_t v78 = v222;
LABEL_56:
    size_t v50 = v75;
    goto LABEL_57;
  }
  unint64_t v93 = *(void *)(((v50 + 12 + ((v51 + v76) & v48)) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v93 >= 0xFFFFFFFF) {
    LODWORD(v93) = -1;
  }
  if ((v93 + 1) >= 2) {
    goto LABEL_52;
  }
  uint64_t v56 = v37 + 12;
  unint64_t v209 = (v49 + v55) & v48;
  size_t v211 = (v51 + v76) & v48;
LABEL_36:
  (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v242, v40, v232);
  uint64_t v57 = (_OWORD *)(((unint64_t)v242 + v45) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v57 = *(_OWORD *)v53;
  unint64_t v58 = ((unint64_t)v57 + v47) & v46;
  *(unsigned char *)unint64_t v58 = *(unsigned char *)v55;
  uint64_t v59 = v58 | 4;
  int v60 = *(_DWORD *)(v55 | 4);
  *(unsigned char *)(v59 + 4) = *(unsigned char *)((v55 | 4) + 4);
  *(_DWORD *)uint64_t v59 = v60;
  *(_WORD *)(v58 + 10) = *(_WORD *)(v55 + 10);
  unint64_t v61 = (v56 + v58) & v48;
  uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32);
  v62(v61, v209, v217);
  v62((v51 + v61) & v48, v211, v217);
  uint64_t v63 = (unsigned char *)(((v51 + v61) & v48) + v50);
  *uint64_t v63 = *(unsigned char *)(v211 + v50);
  v63[1] = *(unsigned char *)(v211 + v50 + 1);
  v63[2] = *(unsigned char *)(v211 + v50 + 2);
  v63[3] = *(unsigned char *)(v211 + v50 + 3);
  v63[4] = *(unsigned char *)(v211 + v50 + 4);
  unint64_t v64 = (unint64_t)(v63 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v211 + v50 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v64 = *(_OWORD *)v65;
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  *(unsigned char *)(v64 + 17) = *(unsigned char *)(v65 + 17);
  *(unsigned char *)(v64 + 18) = *(unsigned char *)(v65 + 18);
  *(unsigned char *)(v64 + 19) = *(unsigned char *)(v65 + 19);
  unint64_t v66 = (v64 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(unsigned char *)(v66 + 9) = *(unsigned char *)(v67 + 9);
  *(unsigned char *)(v66 + 10) = *(unsigned char *)(v67 + 10);
  *(unsigned char *)(v66 + 11) = *(unsigned char *)(v67 + 11);
  *(unsigned char *)(v66 + 12) = *(unsigned char *)(v67 + 12);
  uint64_t v68 = (void *)((v65 + 47) & 0xFFFFFFFFFFFFFFF8);
  int v69 = (void *)((v64 + 47) & 0xFFFFFFFFFFFFFFF8);
  *int v69 = *v68;
  unint64_t v70 = ((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v71 = ((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  *(unsigned char *)(v70 + 9) = *(unsigned char *)(v71 + 9);
  unsigned int v72 = (void *)((v215 + v70) & v48);
  unsigned int v73 = (const void *)((v215 + v71) & v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v216 + 48))(v73, 1, v217))
  {
    unsigned int v74 = v244;
    if (v244) {
      size_t v75 = v50;
    }
    else {
      size_t v75 = v50 + 1;
    }
    memcpy(v72, v73, v75);
  }
  else
  {
    v62((unint64_t)v72, (unint64_t)v73, v217);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v216 + 56))(v72, 0, 1, v217);
    unsigned int v74 = v244;
    if (v244) {
      size_t v75 = v50;
    }
    else {
      size_t v75 = v50 + 1;
    }
  }
  uint64_t v77 = v220;
  uint64_t v78 = v222;
  uint64_t v79 = (void *)(((unint64_t)v72 + v75 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v80 = (void *)(((unint64_t)v73 + v75 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v79 = *v80;
  unint64_t v81 = ((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = *(void *)v82;
  *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
  *(void *)unint64_t v81 = v83;
  size_t v84 = (void *)(((unint64_t)v79 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void *)(((unint64_t)v80 + 31) & 0xFFFFFFFFFFFFFFF8);
  *size_t v84 = *v85;
  uint64_t v86 = (_OWORD *)(((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v87 = (_OWORD *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v86 = *v87;
  unint64_t v88 = ((unint64_t)v86 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v89 = ((unint64_t)v87 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v90 = *(void *)v89;
  *(unsigned char *)(v88 + 8) = *(unsigned char *)(v89 + 8);
  *(void *)unint64_t v88 = v90;
  *(unsigned char *)(v88 + 9) = *(unsigned char *)(v89 + 9);
  unint64_t v91 = (v88 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v92 = (v89 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v83) = *(_DWORD *)v92;
  *(unsigned char *)(v91 + 4) = *(unsigned char *)(v92 + 4);
  *(_DWORD *)unint64_t v91 = v83;
  *(_OWORD *)((v88 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v89 + 25) & 0xFFFFFFFFFFFFFFF8);
  if (!v74) {
    goto LABEL_56;
  }
LABEL_57:
  uint64_t v221 = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(v221 - 8);
  uint64_t v96 = v95;
  int v97 = *(_DWORD *)(v95 + 80) & 0xF8;
  uint64_t v98 = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(v98 - 8);
  uint64_t v100 = v99;
  uint64_t v101 = *(unsigned __int8 *)(v99 + 80);
  uint64_t v102 = v97 | v101 | 7;
  unint64_t v103 = v239
       + (v224 | v102)
       + ((((((((((v245 + 7 + v50) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v243 = (char *)(((unint64_t)v242 + v103) & ~(v224 | v102));
  unint64_t v104 = (char *)(((unint64_t)v236 + v103) & ~(v224 | v102));
  uint64_t v105 = *(unsigned int *)(v95 + 84);
  uint64_t v106 = *(unsigned int *)(v99 + 84);
  if (v105 <= v106) {
    unsigned int v107 = *(_DWORD *)(v99 + 84);
  }
  else {
    unsigned int v107 = *(_DWORD *)(v95 + 84);
  }
  if (v107 <= 0x7FFFFFFE) {
    unsigned int v108 = 2147483646;
  }
  else {
    unsigned int v108 = v107;
  }
  if (v108 <= v41) {
    unsigned int v109 = v41;
  }
  else {
    unsigned int v109 = v108;
  }
  if (v109 <= v226) {
    unsigned int v109 = v226;
  }
  if (v109 <= 0x7FFFFFFF) {
    int v110 = 0x7FFFFFFF;
  }
  else {
    int v110 = v109;
  }
  uint64_t v111 = ~v77;
  uint64_t v112 = v228 + v77;
  uint64_t v113 = (v228 + v77) & ~v77;
  uint64_t v114 = ~v102;
  uint64_t v115 = v228 + v102;
  uint64_t v116 = *(void *)(v95 + 64) + 7;
  uint64_t v117 = ~v101;
  uint64_t v118 = v101 + 8;
  unint64_t v119 = ((((*(void *)(v99 + 64) + 7 + ((v101 + 8 + (v116 & 0xFFFFFFFFFFFFFFF8)) & ~v101)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v120 = v78 + 16;
  uint64_t v240 = (v78 + 16 + v119 + ((v228 + v102 + v113) & ~v102)) & v234;
  uint64_t v219 = v98;
  uint64_t v227 = *(void *)(v99 + 64) + 7;
  unint64_t v229 = v119;
  uint64_t v225 = v117;
  uint64_t v210 = v116;
  uint64_t v212 = v118;
  uint64_t v237 = ~v102;
  uint64_t v230 = v111;
  if (v41 == v110)
  {
    uint64_t v121 = v233;
    int v122 = (*(uint64_t (**)(char *, void, uint64_t))(v233 + 48))(v104, v41, v232);
    goto LABEL_73;
  }
  unint64_t v123 = (unint64_t)&v104[v112] & v111;
  unint64_t v124 = (v115 + v123) & v114;
  uint64_t v121 = v233;
  if (v108 == v110)
  {
    if (v105 == v108)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v95 + 48))((v115 + v123) & v114, v105, v221))goto LABEL_83; {
      goto LABEL_103;
      }
    }
    unint64_t v196 = (unint64_t *)((v116 + v124) & 0xFFFFFFFFFFFFFFF8);
    if (v107 <= 0x7FFFFFFE)
    {
      unint64_t v197 = *v196;
      goto LABEL_100;
    }
    int v122 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v99 + 48))(((unint64_t)v196 + v118) & v117, v106, v98);
LABEL_73:
    if (!v122)
    {
LABEL_83:
      unint64_t v123 = (unint64_t)&v104[v112] & v230;
      unint64_t v124 = (v115 + v123) & v237;
      goto LABEL_84;
    }
LABEL_103:
    uint64_t v199 = 7;
    if (!v244) {
      uint64_t v199 = 8;
    }
    uint64_t v158 = v240;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
    memcpy(v243, v104, ((((((((((((((v199 + v231 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v240+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    unint64_t v157 = v245 + 7;
    goto LABEL_109;
  }
  unint64_t v125 = v119 + v124;
  if ((v109 & 0x80000000) == 0)
  {
    unint64_t v126 = *(void *)(v125 + 8);
    if (v126 >= 0xFFFFFFFF) {
      LODWORD(v126) = -1;
    }
    if (v126 == -1) {
      goto LABEL_83;
    }
    goto LABEL_103;
  }
  uint64_t v198 = (v218 + ((v120 + v125) & v234)) & v214;
  if (v244 > 0x7FFFFFFD)
  {
    int v122 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v216 + 48))(v198, v244, v217);
    goto LABEL_73;
  }
  unint64_t v197 = *(void *)(((v208 + ((v213 + v198) & v214)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_100:
  if (v197 >= 0xFFFFFFFF) {
    LODWORD(v197) = -1;
  }
  if ((v197 + 1) >= 2) {
    goto LABEL_103;
  }
LABEL_84:
  uint64_t v223 = v120;
  unint64_t v127 = *(void (**)(void))(v121 + 32);
  v127();
  unint64_t v128 = (unint64_t)&v243[v112] & v230;
  ((void (*)(unint64_t, unint64_t, uint64_t))v127)(v128, v123, v232);
  unint64_t v129 = (v115 + v128) & v237;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v96 + 32))(v129, v124, v221);
  uint64_t v130 = (void *)((v210 + v129) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v131 = (void *)((v210 + v124) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v130 = *v131;
  unint64_t v132 = ((unint64_t)v130 + v212) & v225;
  unint64_t v133 = ((unint64_t)v131 + v212) & v225;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v100 + 32))(v132, v133, v219);
  unint64_t v134 = (void *)((v227 + v132) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v135 = (void *)((v227 + v133) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v134 = *v135;
  *(_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)(v229 + v129) = *(_OWORD *)(v229 + v124);
  unint64_t v136 = (v223 + v229 + v129) & v234;
  unint64_t v137 = (v223 + v229 + v124) & v234;
  *(unsigned char *)unint64_t v136 = *(unsigned char *)v137;
  uint64_t v138 = v136 | 4;
  int v139 = *(_DWORD *)(v137 | 4);
  *(unsigned char *)(v138 + 4) = *(unsigned char *)((v137 | 4) + 4);
  *(_DWORD *)uint64_t v138 = v139;
  *(_WORD *)(v136 + 10) = *(_WORD *)(v137 + 0xA);
  unint64_t v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32);
  v140((v218 + v136) & v214, (v218 + v137) & v214, v217);
  size_t v141 = (v213 + ((v218 + v136) & v214)) & v214;
  size_t v142 = (v213 + ((v218 + v137) & v214)) & v214;
  v140(v141, v142, v217);
  size_t v143 = v231;
  size_t v144 = (unsigned char *)(v141 + v231);
  *size_t v144 = *(unsigned char *)(v142 + v231);
  v144[1] = *(unsigned char *)(v142 + v231 + 1);
  v144[2] = *(unsigned char *)(v142 + v231 + 2);
  v144[3] = *(unsigned char *)(v142 + v231 + 3);
  v144[4] = *(unsigned char *)(v142 + v231 + 4);
  unint64_t v145 = (v141 + v231 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v146 = (v142 + v231 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v145 = *(_OWORD *)v146;
  *(unsigned char *)(v145 + 16) = *(unsigned char *)(v146 + 16);
  *(unsigned char *)(v145 + 17) = *(unsigned char *)(v146 + 17);
  *(unsigned char *)(v145 + 18) = *(unsigned char *)(v146 + 18);
  *(unsigned char *)(v145 + 19) = *(unsigned char *)(v146 + 19);
  unint64_t v147 = (v145 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v148 = (v146 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v147 = *(void *)v148;
  *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
  *(unsigned char *)(v147 + 9) = *(unsigned char *)(v148 + 9);
  *(unsigned char *)(v147 + 10) = *(unsigned char *)(v148 + 10);
  *(unsigned char *)(v147 + 11) = *(unsigned char *)(v148 + 11);
  *(unsigned char *)(v147 + 12) = *(unsigned char *)(v148 + 12);
  unint64_t v149 = (void *)((v146 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v150 = (void *)((v145 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v150 = *v149;
  unint64_t v151 = ((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v152 = ((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v151 = *(void *)v152;
  *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
  *(unsigned char *)(v151 + 9) = *(unsigned char *)(v152 + 9);
  int v153 = (void *)((v215 + v151) & v214);
  unint64_t v154 = (const void *)((v215 + v152) & v214);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v216 + 48))(v154, 1, v217))
  {
    unsigned int v155 = v244;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
    memcpy(v153, v154, v156);
  }
  else
  {
    v140((unint64_t)v153, (unint64_t)v154, v217);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v216 + 56))(v153, 0, 1, v217);
    unsigned int v155 = v244;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
  }
  unint64_t v157 = v245 + 7;
  uint64_t v158 = v240;
  unint64_t v159 = (void *)(((unint64_t)v153 + v156 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v160 = (void *)(((unint64_t)v154 + v156 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v159 = *v160;
  unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v162 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v163 = *(void *)v162;
  *(unsigned char *)(v161 + 8) = *(unsigned char *)(v162 + 8);
  *(void *)unint64_t v161 = v163;
  unint64_t v164 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v165 = (void *)(((unint64_t)v160 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v164 = *v165;
  unint64_t v166 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v167 = (_OWORD *)(((unint64_t)v165 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v166 = *v167;
  unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v169 = ((unint64_t)v167 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v170 = *(void *)v169;
  *(unsigned char *)(v168 + 8) = *(unsigned char *)(v169 + 8);
  *(void *)unint64_t v168 = v170;
  *(unsigned char *)(v168 + 9) = *(unsigned char *)(v169 + 9);
  unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v172 = (v169 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v163) = *(_DWORD *)v172;
  *(unsigned char *)(v171 + 4) = *(unsigned char *)(v172 + 4);
  *(_DWORD *)unint64_t v171 = v163;
  *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v169 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v173 = ((((((((((v156 + 7 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v174 = v136 + v173;
  unint64_t v175 = (long long *)(v137 + v173);
  long long v176 = v175[7];
  long long v178 = v175[4];
  long long v177 = v175[5];
  *(_OWORD *)(v174 + 96) = v175[6];
  *(_OWORD *)(v174 + 112) = v176;
  *(_OWORD *)(v174 + 64) = v178;
  *(_OWORD *)(v174 + 80) = v177;
  long long v179 = v175[11];
  long long v181 = v175[8];
  long long v180 = v175[9];
  *(_OWORD *)(v174 + 160) = v175[10];
  *(_OWORD *)(v174 + 176) = v179;
  *(_OWORD *)(v174 + 128) = v181;
  *(_OWORD *)(v174 + 144) = v180;
  long long v183 = v175[13];
  long long v182 = v175[14];
  long long v184 = v175[12];
  *(void *)(v174 + 240) = *((void *)v175 + 30);
  *(_OWORD *)(v174 + 208) = v183;
  *(_OWORD *)(v174 + 224) = v182;
  *(_OWORD *)(v174 + 192) = v184;
  long long v185 = *v175;
  long long v186 = v175[1];
  long long v187 = v175[3];
  *(_OWORD *)(v174 + 32) = v175[2];
  *(_OWORD *)(v174 + 48) = v187;
  *(_OWORD *)unint64_t v174 = v185;
  *(_OWORD *)(v174 + 16) = v186;
  unint64_t v188 = (_OWORD *)((v174 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v189 = (long long *)(((unint64_t)v175 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v190 = *v189;
  *(_OWORD *)((char *)v188 + 9) = *(long long *)((char *)v189 + 9);
  _OWORD *v188 = v190;
  unint64_t v191 = (v174 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v192 = ((unint64_t)v175 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v193 = *(_OWORD *)v192;
  *(unsigned char *)(v191 + 16) = *(unsigned char *)(v192 + 16);
  *(_OWORD *)unint64_t v191 = v193;
  unint64_t v194 = (void *)((v174 + 311) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v195 = (void *)(((unint64_t)v175 + 311) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v194 = *v195;
  *(_OWORD *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (!v155) {
LABEL_109:
  }
    size_t v143 = v156;
  unint64_t v200 = ((((v158
           + ((((((((((v157 + v143) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v201 = (unint64_t)&v243[v200];
  unint64_t v202 = (unint64_t)&v104[v200];
  unint64_t v203 = v201 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v203 = *(void *)(v202 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v203 + 8) = *(unsigned char *)((v202 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v204 = (void *)((v201 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v205 = (void *)((v202 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v204 = *v205;
  uint64_t v206 = (__n128 *)(((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8);
  __n128 result = *v206;
  *(__n128 *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8) = *v206;
  return result;
}

void *sub_1003DAB7C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v7 | v11 | 7;
  unint64_t v514 = a1;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  uint64_t v16 = *(unsigned int *)(v10 + 84);
  if (v15 <= v16) {
    unsigned int v17 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v17 = *(_DWORD *)(v5 + 84);
  }
  if (v17 <= 0x7FFFFFFE) {
    int v18 = 2147483646;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = *(void *)(v5 + 64) + 7;
  uint64_t v20 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v21 = (((v20 + ((v11 + 8 + (v19 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = v21 + 16;
  uint64_t v531 = *(void *)(v8 - 8);
  uint64_t v533 = v8;
  uint64_t v524 = AssociatedTypeWitness;
  uint64_t v526 = v11 + 8;
  uint64_t v528 = ~v11;
  if (v15 == v18)
  {
    uint64_t v520 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v522 = v21 + 16;
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v24 = v13;
    int v25 = v23(v13, v15, AssociatedTypeWitness);
    unint64_t v26 = v14;
    int v27 = v23(v14, v15, AssociatedTypeWitness);
    if (v25) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
    if (v27)
    {
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      size_t v22 = v522;
      uint64_t v34 = v524;
      goto LABEL_22;
    }
    uint64_t v29 = (uint64_t *)((unint64_t)&v26[v19] & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = v26;
    uint64_t v13 = v24;
    uint64_t v20 = v520;
    size_t v22 = v522;
    uint64_t v34 = v524;
    goto LABEL_27;
  }
  uint64_t v28 = (uint64_t *)((unint64_t)&v13[v19] & 0xFFFFFFFFFFFFFFF8);
  if (v17 > 0x7FFFFFFE)
  {
    uint64_t v520 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v522 = v21 + 16;
    int v24 = v13;
    uint64_t v35 = ~v11;
    uint64_t v36 = ((unint64_t)v28 + v11 + 8) & ~v11;
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v9;
    uint64_t v39 = v11 + 8;
    int v40 = v37(v36, v16, v9);
    uint64_t v41 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v37;
    int v518 = v40;
    unint64_t v26 = v14;
    int v27 = v41((v39 + ((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8)) & v35, v16, v38);
    if (v518)
    {
LABEL_9:
      size_t v22 = v522;
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      if (!v27)
      {
        uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
LABEL_24:
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v14, v524);
        *uint64_t v28 = *v29;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 32))(((unint64_t)v28 + v526) & v528, ((unint64_t)v29 + v526) & v528, v533);
        unsigned int v42 = (void *)((v520 + (((unint64_t)v28 + v526) & v528)) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v43 = (void *)((v520 + (((unint64_t)v29 + v526) & v528)) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v42 = *v43;
        *(_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  uint64_t v30 = *v28;
  if ((unint64_t)*v28 >= 0xFFFFFFFF) {
    LODWORD(v30) = -1;
  }
  unsigned int v31 = v30 + 1;
  uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = *v29;
  if ((unint64_t)*v29 >= 0xFFFFFFFF) {
    LODWORD(v32) = -1;
  }
  unsigned int v33 = v32 + 1;
  if (v31 >= 2)
  {
    uint64_t v520 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    if (v33 < 2) {
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  uint64_t v34 = AssociatedTypeWitness;
  if (v33 >= 2)
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v531 + 8))(((unint64_t)v28 + v526) & v528, v533);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    memcpy(v13, v14, v22);
    goto LABEL_28;
  }
LABEL_27:
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v13, v14, v34);
  *uint64_t v28 = *v29;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 40))(((unint64_t)v28 + v526) & v528, ((unint64_t)v29 + v526) & v528, v533);
  int v44 = (void *)((v20 + (((unint64_t)v28 + v526) & v528)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v45 = (v20 + (((unint64_t)v29 + v526) & v528)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  v45 += 15;
  *int v44 = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *(void *)(v45 & 0xFFFFFFFFFFFFFFF8);
  v47[1] = *(void *)((v45 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v48 = &v13[v22];
  uint64_t v49 = &v14[v22];
  uint64_t v50 = *(void *)v49;
  v48[8] = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = v52;
  uint64_t v54 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v519 = sub_10096B0E0();
  uint64_t v55 = *(void *)(v519 - 8);
  uint64_t v56 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v57 = v56 | 7;
  uint64_t v506 = v54;
  uint64_t v498 = v56 | v54;
  uint64_t v58 = v56 | v54 | 7;
  uint64_t v59 = (unint64_t)&v48[v58 + 9] & ~v58;
  uint64_t v60 = (unint64_t)&v49[v58 + 9] & ~v58;
  uint64_t v61 = *(unsigned int *)(v52 + 84);
  unsigned int v534 = *(_DWORD *)(v55 + 84);
  if (v534 <= 0x7FFFFFFE) {
    unsigned int v62 = 2147483646;
  }
  else {
    unsigned int v62 = *(_DWORD *)(v55 + 84);
  }
  unsigned int v502 = v62;
  if (v61 <= v62) {
    unsigned int v63 = v62;
  }
  else {
    unsigned int v63 = *(_DWORD *)(v52 + 84);
  }
  if (v63 <= 0x7FFFFFFF) {
    int v64 = 0x7FFFFFFF;
  }
  else {
    int v64 = v63;
  }
  uint64_t v65 = *(void *)(v52 + 64);
  uint64_t v66 = v65 + 7;
  uint64_t v67 = ~v57;
  uint64_t v68 = v56 + 16;
  unint64_t v496 = (v56 + 16 + ((v65 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v57;
  uint64_t v69 = v56 + 12;
  size_t v70 = *(void *)(*(void *)(v519 - 8) + 64);
  uint64_t v71 = v70 + v56;
  uint64_t v72 = (v70 + v56 + ((v56 + 12) & ~v56)) & ~v56;
  size_t v532 = v70;
  size_t v73 = v70 + 12;
  uint64_t v512 = v56 + 10;
  unint64_t v527 = (v56 + 10 + ((((((v73 + v72) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v56;
  uint64_t v513 = *(void *)(v519 - 8);
  uint64_t v74 = ~v56;
  uint64_t v495 = ~v56;
  uint64_t v515 = v71;
  uint64_t v525 = v51;
  size_t v494 = v73;
  v529 = (void *)v59;
  unint64_t v516 = (const void *)v60;
  uint64_t v521 = v56 + 12;
  uint64_t v523 = v53;
  uint64_t v535 = ~v57;
  unsigned int v510 = v61;
  uint64_t v508 = v56 | 7;
  uint64_t v504 = v65;
  if (v61 == v64)
  {
    size_t v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    uint64_t v76 = *(void *)(v519 - 8);
    uint64_t v77 = v65 + 7;
    uint64_t v78 = *(unsigned int *)(v53 + 84);
    int v79 = v75(v59, v61, v51);
    int v80 = v75(v60, v78, v51);
    uint64_t v66 = v77;
    uint64_t v55 = v76;
    uint64_t v59 = (uint64_t)v529;
    unint64_t v81 = (const void *)v60;
    if (v79)
    {
      if (!v80) {
        goto LABEL_68;
      }
      goto LABEL_90;
    }
LABEL_57:
    uint64_t v90 = v515;
    if (v80)
    {
LABEL_58:
      uint64_t v91 = v59;
      uint64_t v92 = v66;
      (*(void (**)(uint64_t, uint64_t))(v523 + 8))(v59, v525);
      swift_bridgeObjectRelease();
      unint64_t v93 = (v521 + ((v68 + ((v92 + v91) & 0xFFFFFFFFFFFFFFF8)) & v535)) & v74;
      uint64_t v94 = *(void (**)(unint64_t, uint64_t))(v55 + 8);
      v94(v93, v519);
      unint64_t v95 = (v90 + v93) & v74;
      v94(v95, v519);
      swift_bridgeObjectRelease();
      unint64_t v96 = (v512 + ((((((v494 + v95) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v74;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v96, 1, v519)) {
        v94(v96, v519);
      }
      if (v534) {
        size_t v97 = v532;
      }
      else {
        size_t v97 = v532 + 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v98 = (uint64_t *)((((((v97 + 7 + v96) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v99 = v98[1];
      unint64_t v100 = v496;
      unint64_t v101 = v527;
      if ((v99 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v98, v99);
      }
      swift_bridgeObjectRelease();
      size_t v102 = v496
           + ((((((((((v97 + 7 + v527) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v103 = v529;
      goto LABEL_96;
    }
    goto LABEL_85;
  }
  unint64_t v82 = (v66 + v59) & 0xFFFFFFFFFFFFFFF8;
  if ((v63 & 0x80000000) != 0)
  {
    unint64_t v85 = (v69 + ((v68 + v82) & v67)) & v74;
    if (v534 <= 0x7FFFFFFD)
    {
      unint64_t v130 = *(void *)(((v73 + ((v71 + v85) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v130 >= 0xFFFFFFFF) {
        LODWORD(v130) = -1;
      }
      unint64_t v81 = (const void *)v60;
      int v87 = (void *)((v66 + v60) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v67;
      uint64_t v90 = v71;
      unint64_t v105 = (v69 + v104) & v74;
      if ((v130 + 1) >= 2) {
        goto LABEL_87;
      }
LABEL_98:
      unint64_t v150 = (v90 + v105) & v74;
      unint64_t v153 = *(void *)(((v73 + v150) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v153 >= 0xFFFFFFFF) {
        LODWORD(v153) = -1;
      }
      if ((v153 + 1) >= 2) {
        goto LABEL_58;
      }
LABEL_101:
      unint64_t v154 = v81;
      uint64_t v155 = v66;
      uint64_t v156 = v59;
      (*(void (**)(uint64_t, const void *, uint64_t))(v523 + 40))(v59, v154, v525);
      unint64_t v157 = (void *)((v155 + v156) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v157 = *v87;
      v157[1] = v87[1];
      swift_bridgeObjectRelease();
      unint64_t v158 = ((unint64_t)v157 + v68) & v535;
      *(unsigned char *)unint64_t v158 = *(unsigned char *)v104;
      uint64_t v159 = v158 | 4;
      int v160 = *(_DWORD *)(v104 | 4);
      *(unsigned char *)(v159 + 4) = *(unsigned char *)((v104 | 4) + 4);
      *(_DWORD *)uint64_t v159 = v160;
      *(_WORD *)(v158 + 10) = *(_WORD *)(v104 + 10);
      unint64_t v161 = (v521 + v158) & v74;
      unint64_t v162 = *(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 40);
      v162(v161, v105, v519);
      v162((v90 + v161) & v74, v150, v519);
      uint64_t v163 = (unsigned char *)(((v90 + v161) & v74) + v532);
      *uint64_t v163 = *(unsigned char *)(v150 + v532);
      v163[1] = *(unsigned char *)(v150 + v532 + 1);
      v163[2] = *(unsigned char *)(v150 + v532 + 2);
      v163[3] = *(unsigned char *)(v150 + v532 + 3);
      v163[4] = *(unsigned char *)(v150 + v532 + 4);
      unint64_t v164 = (unint64_t)(v163 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v165 = (v150 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v164 = *(void *)v165;
      *(void *)(v164 + 8) = *(void *)(v165 + 8);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v164 + 16) = *(unsigned char *)(v165 + 16);
      *(unsigned char *)(v164 + 17) = *(unsigned char *)(v165 + 17);
      *(unsigned char *)(v164 + 18) = *(unsigned char *)(v165 + 18);
      *(unsigned char *)(v164 + 19) = *(unsigned char *)(v165 + 19);
      unint64_t v166 = (v164 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v167 = (v165 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v166 = *(void *)v167;
      *(unsigned char *)(v166 + 8) = *(unsigned char *)(v167 + 8);
      *(unsigned char *)(v166 + 9) = *(unsigned char *)(v167 + 9);
      *(unsigned char *)(v166 + 10) = *(unsigned char *)(v167 + 10);
      *(unsigned char *)(v166 + 11) = *(unsigned char *)(v167 + 11);
      *(unsigned char *)(v166 + 12) = *(unsigned char *)(v167 + 12);
      unint64_t v168 = (void *)((v165 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v169 = (void *)((v164 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v169 = *v168;
      unint64_t v170 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v170 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
      unint64_t v172 = (char *)((v512 + v170) & v74);
      unint64_t v173 = (char *)((v512 + v171) & v74);
      unint64_t v174 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      LODWORD(v164) = v174(v172, 1, v519);
      int v175 = v174(v173, 1, v519);
      if (v164)
      {
        if (!v175)
        {
          (*(void (**)(char *, char *, uint64_t))(v513 + 32))(v172, v173, v519);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v513 + 56))(v172, 0, 1, v519);
LABEL_111:
          unint64_t v101 = v527;
          size_t v97 = v532;
          unsigned int v176 = v534;
          goto LABEL_112;
        }
      }
      else
      {
        if (!v175)
        {
          v162((unint64_t)v172, (unint64_t)v173, v519);
          goto LABEL_111;
        }
        (*(void (**)(char *, uint64_t))(v513 + 8))(v172, v519);
      }
      unsigned int v176 = v534;
      size_t v97 = v532;
      if (v534) {
        size_t v177 = v532;
      }
      else {
        size_t v177 = v532 + 1;
      }
      memcpy(v172, v173, v177);
      unint64_t v101 = v527;
LABEL_112:
      unint64_t v100 = v496;
      if (!v176) {
        ++v97;
      }
      unint64_t v178 = (unint64_t)&v172[v97 + 7];
      long long v179 = (void *)((unint64_t)&v173[v97 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v180 = (v178 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v178 & 0xFFFFFFFFFFFFFFF8) = *v179;
      unint64_t v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      unint64_t v182 = v180 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v183 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v184 = *(void *)v183;
      *(unsigned char *)(v182 + 8) = *(unsigned char *)(v183 + 8);
      *(void *)unint64_t v182 = v184;
      long long v185 = (void *)(((unint64_t)v179 + 31) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(v181 & 0xFFFFFFFFFFFFFFF8) = *v185;
      swift_bridgeObjectRelease();
      long long v186 = (uint64_t *)(((v181 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v187 = (uint64_t *)(((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = v186[1];
      if ((v188 & 0x3000000000000000) == 0)
      {
        uint64_t v189 = v187[1];
        if ((v189 & 0x3000000000000000) == 0)
        {
          uint64_t v425 = *v186;
          *long long v186 = *v187;
          v186[1] = v189;
          sub_10001E9C0(v425, v188);
          goto LABEL_118;
        }
        sub_10001E9C0(*v186, v188);
      }
      *(_OWORD *)long long v186 = *(_OWORD *)v187;
LABEL_118:
      uint64_t v131 = v498;
      unint64_t v190 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v191 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v192 = *(void *)v191;
      *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
      *(void *)unint64_t v190 = v192;
      *(unsigned char *)(v190 + 9) = *(unsigned char *)(v191 + 9);
      unint64_t v193 = (v190 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v194 = (v191 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v195 = *(_DWORD *)v194;
      *(unsigned char *)(v193 + 4) = *(unsigned char *)(v194 + 4);
      *(_DWORD *)unint64_t v193 = v195;
      unint64_t v196 = (void *)((v190 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v197 = (void *)((v191 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v196 = *v197;
      v196[1] = v197[1];
      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
    uint64_t v86 = v66;
    int v84 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v85);
    uint64_t v66 = v86;
    uint64_t v59 = (uint64_t)v529;
  }
  else
  {
    unint64_t v83 = *(void *)(v82 + 8);
    if (v83 >= 0xFFFFFFFF) {
      LODWORD(v83) = -1;
    }
    int v84 = v83 + 1;
  }
  unint64_t v81 = v516;
  int v87 = (void *)(((unint64_t)v516 + v66) & 0xFFFFFFFFFFFFFFF8);
  if (!v84)
  {
    if ((v63 & 0x80000000) == 0)
    {
      unint64_t v89 = v87[1];
      if (v89 >= 0xFFFFFFFF) {
        LODWORD(v89) = -1;
      }
      int v80 = v89 + 1;
      goto LABEL_57;
    }
    unint64_t v104 = ((unint64_t)v87 + v68) & v67;
    unint64_t v105 = (v69 + v104) & v74;
    if (v534 > 0x7FFFFFFD)
    {
      unint64_t v147 = v105;
      uint64_t v148 = v66;
      int v149 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v147);
      uint64_t v66 = v148;
      uint64_t v59 = (uint64_t)v529;
      uint64_t v90 = v515;
      if (v149) {
        goto LABEL_58;
      }
LABEL_85:
      int v87 = (void *)(((unint64_t)v81 + v66) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v535;
      unint64_t v105 = (v521 + v104) & v74;
      unint64_t v150 = (v90 + v105) & v74;
      goto LABEL_101;
    }
    uint64_t v90 = v515;
    size_t v73 = v494;
    goto LABEL_98;
  }
  if ((v63 & 0x80000000) == 0)
  {
    unint64_t v88 = v87[1];
    if (v88 >= 0xFFFFFFFF) {
      LODWORD(v88) = -1;
    }
    if (v88 == -1) {
      goto LABEL_68;
    }
    goto LABEL_90;
  }
  unint64_t v104 = ((unint64_t)v87 + v68) & v67;
  unint64_t v105 = (v69 + v104) & v74;
  if (v534 > 0x7FFFFFFD)
  {
    unint64_t v106 = v105;
    uint64_t v107 = v66;
    int v108 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v106);
    uint64_t v66 = v107;
    uint64_t v59 = (uint64_t)v529;
    if (!v108)
    {
LABEL_68:
      int v87 = (void *)(((unint64_t)v81 + v66) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v535;
      unint64_t v105 = (v521 + v104) & v74;
      unint64_t v109 = (v515 + v105) & v74;
      goto LABEL_69;
    }
    goto LABEL_90;
  }
  uint64_t v90 = v515;
  size_t v73 = v494;
LABEL_87:
  unint64_t v109 = (v90 + v105) & v74;
  unint64_t v151 = *(void *)(((v73 + v109) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v151 >= 0xFFFFFFFF) {
    LODWORD(v151) = -1;
  }
  if ((v151 + 1) >= 2)
  {
LABEL_90:
    uint64_t v152 = 7;
    if (!v534) {
      uint64_t v152 = 8;
    }
    unint64_t v101 = v527;
    unint64_t v100 = v496;
    size_t v102 = v496
         + ((((((((((v152 + v532 + v527) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    if (v534) {
      size_t v97 = v532;
    }
    else {
      size_t v97 = v532 + 1;
    }
    unint64_t v103 = (void *)v59;
LABEL_96:
    memcpy(v103, v81, v102);
    uint64_t v131 = v498;
LABEL_119:
    size_t v146 = v97;
    goto LABEL_120;
  }
LABEL_69:
  uint64_t v110 = v66;
  uint64_t v111 = v59;
  (*(void (**)(uint64_t, const void *, uint64_t))(v523 + 32))(v59, v81, v525);
  uint64_t v112 = (_OWORD *)((v110 + v111) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v112 = *(_OWORD *)v87;
  unint64_t v113 = ((unint64_t)v112 + v68) & v535;
  *(unsigned char *)unint64_t v113 = *(unsigned char *)v104;
  uint64_t v114 = v113 | 4;
  int v115 = *(_DWORD *)(v104 | 4);
  *(unsigned char *)(v114 + 4) = *(unsigned char *)((v104 | 4) + 4);
  *(_DWORD *)uint64_t v114 = v115;
  *(_WORD *)(v113 + 10) = *(_WORD *)(v104 + 10);
  unint64_t v116 = (v521 + v113) & v74;
  uint64_t v117 = *(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 32);
  v117(v116, v105, v519);
  v117((v515 + v116) & v74, v109, v519);
  uint64_t v118 = (unsigned char *)(((v515 + v116) & v74) + v532);
  *uint64_t v118 = *(unsigned char *)(v109 + v532);
  v118[1] = *(unsigned char *)(v109 + v532 + 1);
  v118[2] = *(unsigned char *)(v109 + v532 + 2);
  v118[3] = *(unsigned char *)(v109 + v532 + 3);
  v118[4] = *(unsigned char *)(v109 + v532 + 4);
  unint64_t v119 = (unint64_t)(v118 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v120 = (v109 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v119 = *(_OWORD *)v120;
  *(unsigned char *)(v119 + 16) = *(unsigned char *)(v120 + 16);
  *(unsigned char *)(v119 + 17) = *(unsigned char *)(v120 + 17);
  *(unsigned char *)(v119 + 18) = *(unsigned char *)(v120 + 18);
  *(unsigned char *)(v119 + 19) = *(unsigned char *)(v120 + 19);
  unint64_t v121 = (v119 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v121 = *(void *)v122;
  *(unsigned char *)(v121 + 8) = *(unsigned char *)(v122 + 8);
  *(unsigned char *)(v121 + 9) = *(unsigned char *)(v122 + 9);
  *(unsigned char *)(v121 + 10) = *(unsigned char *)(v122 + 10);
  *(unsigned char *)(v121 + 11) = *(unsigned char *)(v122 + 11);
  *(unsigned char *)(v121 + 12) = *(unsigned char *)(v122 + 12);
  unint64_t v123 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v124 = (void *)((v119 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v124 = *v123;
  unint64_t v125 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v126 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v125 = *(void *)v126;
  *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
  *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
  unint64_t v127 = (void *)((v512 + v125) & v74);
  unint64_t v128 = (const void *)((v512 + v126) & v74);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v128, 1, v519))
  {
    unsigned int v129 = v534;
    if (v534) {
      size_t v97 = v532;
    }
    else {
      size_t v97 = v532 + 1;
    }
    memcpy(v127, v128, v97);
  }
  else
  {
    v117((unint64_t)v127, (unint64_t)v128, v519);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v127, 0, 1, v519);
    unsigned int v129 = v534;
    if (v534) {
      size_t v97 = v532;
    }
    else {
      size_t v97 = v532 + 1;
    }
  }
  unint64_t v100 = v496;
  uint64_t v131 = v498;
  unint64_t v101 = v527;
  unint64_t v132 = (void *)(((unint64_t)v127 + v97 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v133 = (void *)(((unint64_t)v128 + v97 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v132 = *v133;
  unint64_t v134 = ((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v135 = ((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v136 = *(void *)v135;
  *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
  *(void *)unint64_t v134 = v136;
  unint64_t v137 = (void *)(((unint64_t)v132 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v138 = (void *)(((unint64_t)v133 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v137 = *v138;
  int v139 = (_OWORD *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v140 = (_OWORD *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v139 = *v140;
  unint64_t v141 = ((unint64_t)v139 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v142 = ((unint64_t)v140 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v143 = *(void *)v142;
  *(unsigned char *)(v141 + 8) = *(unsigned char *)(v142 + 8);
  *(void *)unint64_t v141 = v143;
  *(unsigned char *)(v141 + 9) = *(unsigned char *)(v142 + 9);
  unint64_t v144 = (v141 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v145 = (v142 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v136) = *(_DWORD *)v145;
  *(unsigned char *)(v144 + 4) = *(unsigned char *)(v145 + 4);
  *(_DWORD *)unint64_t v144 = v136;
  *(_OWORD *)((v141 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v142 + 25) & 0xFFFFFFFFFFFFFFF8);
  size_t v146 = v532;
  if (!v129) {
    goto LABEL_119;
  }
LABEL_120:
  unint64_t v501 = v101 + 7;
  unint64_t v198 = (((((((((v101 + 7 + v146) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v500 = swift_getAssociatedTypeWitness();
  uint64_t v199 = *(void *)(v500 - 8);
  int v200 = *(_DWORD *)(v199 + 80) & 0xF8;
  uint64_t v201 = swift_getAssociatedTypeWitness();
  uint64_t v202 = *(void *)(v201 - 8);
  uint64_t v203 = *(unsigned __int8 *)(v202 + 80);
  uint64_t v204 = v200 | v203 | 7;
  uint64_t v205 = v100 + (v131 | v204) + v198 + 16;
  uint64_t v206 = (char *)(((unint64_t)v529 + v205) & ~(v131 | v204));
  uint64_t v207 = (char *)(((unint64_t)v516 + v205) & ~(v131 | v204));
  uint64_t v499 = v199;
  uint64_t v208 = *(unsigned int *)(v199 + 84);
  uint64_t v209 = *(unsigned int *)(v202 + 84);
  if (v208 <= v209) {
    unsigned int v210 = *(_DWORD *)(v202 + 84);
  }
  else {
    unsigned int v210 = *(_DWORD *)(v199 + 84);
  }
  if (v210 <= 0x7FFFFFFE) {
    unsigned int v211 = 2147483646;
  }
  else {
    unsigned int v211 = v210;
  }
  if (v211 <= v510) {
    unsigned int v212 = v510;
  }
  else {
    unsigned int v212 = v211;
  }
  if (v212 <= v502) {
    unsigned int v213 = v502;
  }
  else {
    unsigned int v213 = v212;
  }
  if (v213 <= 0x7FFFFFFF) {
    int v214 = 0x7FFFFFFF;
  }
  else {
    int v214 = v213;
  }
  uint64_t v215 = ~v506;
  uint64_t v216 = v504 + v506;
  uint64_t v217 = ~v204;
  uint64_t v218 = v504 + v204;
  uint64_t v219 = *(void *)(v199 + 64) + 7;
  uint64_t v220 = ~v203;
  uint64_t v221 = v203 + 8;
  unint64_t v222 = ((((*(void *)(*(void *)(v201 - 8) + 64) + 7 + ((v203 + 8 + (v219 & 0xFFFFFFFFFFFFFFF8)) & ~v203)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v223 = v508 + 16;
  uint64_t v224 = v508 + 16 + v222 + ((v504 + v204 + ((v504 + v506) & ~v506)) & ~v204);
  id v530 = v206;
  unint64_t v517 = v207;
  uint64_t v507 = v219;
  uint64_t v509 = v224 & v535;
  uint64_t v503 = v220;
  uint64_t v505 = v223;
  uint64_t v497 = v201;
  uint64_t v490 = *(void *)(*(void *)(v201 - 8) + 64) + 7;
  unint64_t v491 = v222;
  uint64_t v492 = v221;
  uint64_t v493 = *(void *)(v201 - 8);
  if (v510 == v214)
  {
    uint64_t v225 = *(uint64_t (**)(char *))(v523 + 48);
    uint64_t v226 = ~v204;
    uint64_t v227 = v218;
    uint64_t v228 = v215;
    int v489 = v225(v206);
    int v229 = ((uint64_t (*)(char *, void, uint64_t))v225)(v207, v510, v525);
    uint64_t v215 = v228;
    uint64_t v218 = v227;
    uint64_t v217 = v226;
    uint64_t v231 = v513;
    uint64_t v230 = v514;
    if (v489)
    {
      if (!v229) {
        goto LABEL_191;
      }
      goto LABEL_186;
    }
    if (!v229) {
      goto LABEL_233;
    }
    goto LABEL_211;
  }
  unint64_t v232 = (v218 + ((unint64_t)&v206[v216] & v215)) & v217;
  if (v211 != v214)
  {
    unint64_t v238 = v222 + v232;
    if ((v213 & 0x80000000) == 0)
    {
      unint64_t v239 = *(void *)(v238 + 8);
      if (v239 >= 0xFFFFFFFF) {
        LODWORD(v239) = -1;
      }
      if (v239 != -1) {
        goto LABEL_149;
      }
LABEL_171:
      unint64_t v264 = (unint64_t)&v517[v216] & v215;
      unint64_t v265 = (v218 + v264) & v217;
      if (v211 == v214)
      {
        if (v208 == v211)
        {
          uint64_t v266 = v500;
          unsigned int v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v499 + 48);
          unint64_t v268 = (v218 + v264) & v217;
          uint64_t v269 = v208;
LABEL_208:
          uint64_t v356 = v217;
          uint64_t v357 = v218;
          uint64_t v358 = v215;
          int v272 = v267(v268, v269, v266);
          uint64_t v215 = v358;
          uint64_t v218 = v357;
          uint64_t v217 = v356;
LABEL_209:
          uint64_t v231 = v513;
LABEL_210:
          uint64_t v207 = v517;
          if (!v272)
          {
LABEL_233:
            unint64_t v264 = (unint64_t)&v207[v216] & v215;
            unint64_t v265 = (v218 + v264) & v217;
            goto LABEL_234;
          }
LABEL_211:
          uint64_t v359 = *(void (**)(char *, uint64_t))(v523 + 8);
          uint64_t v360 = v217;
          uint64_t v361 = v218;
          uint64_t v362 = v215;
          v359(v530, v525);
          unint64_t v363 = (unint64_t)&v530[v216] & v362;
          v359((char *)v363, v525);
          unint64_t v364 = (v361 + v363) & v360;
          (*(void (**)(unint64_t, uint64_t))(v499 + 8))(v364, v500);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v493 + 8))((v492 + ((v507 + v364) & 0xFFFFFFFFFFFFFFF8)) & v503, v497);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v365 = (v505 + v491 + v364) & v535;
          uint64_t v366 = *(void (**)(unint64_t, uint64_t))(v231 + 8);
          v366((v521 + v365) & v495, v519);
          unint64_t v367 = (v515 + ((v521 + v365) & v495)) & v495;
          v366(v367, v519);
          swift_bridgeObjectRelease();
          unint64_t v368 = (v512
                + ((((((v494 + v367) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v495;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v231 + 48))(v368, 1, v519)) {
            v366(v368, v519);
          }
          if (v534) {
            size_t v285 = v532;
          }
          else {
            size_t v285 = v532 + 1;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v369 = (uint64_t *)((((((v285 + 7 + v368) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v370 = v369[1];
          uint64_t v283 = v509;
          if ((v370 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v369, v370);
          }
          swift_bridgeObjectRelease();
          unint64_t v371 = (((((((((v285 + 7 + v527) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 19) & 0xFFFFFFFFFFFFFFF8)
                + 25) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v372 = v371 + v365;
          uint64_t v373 = v371 + v365 + 16;
          unint64_t v374 = *(void *)(v372 + 32);
          int v375 = -1;
          if (v374 < 0xFFFFFFFF) {
            int v375 = v374;
          }
          uint64_t v230 = v514;
          uint64_t v207 = v517;
          if (v375 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v373 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v373 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v373 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          size_t v284 = ((((v371 + v509 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
          goto LABEL_225;
        }
        unsigned int v273 = (unint64_t *)((v507 + v265) & 0xFFFFFFFFFFFFFFF8);
        if (v210 > 0x7FFFFFFE)
        {
          unint64_t v268 = ((unint64_t)v273 + v492) & v503;
          unsigned int v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v493 + 48);
          uint64_t v269 = v209;
          uint64_t v266 = v497;
          goto LABEL_208;
        }
        unint64_t v274 = *v273;
      }
      else
      {
        unint64_t v270 = v222 + v265;
        if ((v213 & 0x80000000) == 0)
        {
          unint64_t v271 = *(void *)(v270 + 8);
          if (v271 >= 0xFFFFFFFF) {
            LODWORD(v271) = -1;
          }
          int v272 = v271 + 1;
          goto LABEL_209;
        }
        uint64_t v275 = (v521 + ((v505 + v270) & v535)) & v495;
        if (v534 > 0x7FFFFFFD)
        {
          uint64_t v231 = v513;
          uint64_t v276 = v217;
          uint64_t v277 = v218;
          uint64_t v278 = v215;
          int v272 = (*(uint64_t (**)(uint64_t))(v513 + 48))(v275);
          uint64_t v215 = v278;
          uint64_t v218 = v277;
          uint64_t v217 = v276;
          goto LABEL_210;
        }
        unint64_t v274 = *(void *)(((v494 + ((v515 + v275) & v495)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v274 >= 0xFFFFFFFF) {
        LODWORD(v274) = -1;
      }
      uint64_t v231 = v513;
      if ((v274 + 1) < 2)
      {
LABEL_234:
        unint64_t v387 = *(void (**)(void))(v523 + 40);
        uint64_t v388 = v217;
        uint64_t v389 = v218;
        uint64_t v390 = v215;
        unint64_t v391 = v265;
        v387();
        unint64_t v392 = (unint64_t)&v530[v216] & v390;
        ((void (*)(unint64_t, unint64_t, uint64_t))v387)(v392, v264, v525);
        unint64_t v393 = (v389 + v392) & v388;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v499 + 40))(v393, v391, v500);
        unint64_t v394 = (void *)((v507 + v393) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v395 = (void *)((v507 + v391) & 0xFFFFFFFFFFFFFFF8);
        void *v394 = *v395;
        swift_bridgeObjectRelease();
        unint64_t v396 = ((unint64_t)v394 + v492) & v503;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 40))(v396, ((unint64_t)v395 + v492) & v503, v497);
        uint64_t v397 = (void *)((v490 + v396) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v398 = (v490 + (((unint64_t)v395 + v492) & v503)) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v399 = *(void *)v398;
        v398 += 15;
        *uint64_t v397 = v399;
        swift_bridgeObjectRelease();
        uint64_t v400 = (void *)(((unint64_t)v397 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v400 = *(void *)(v398 & 0xFFFFFFFFFFFFFFF8);
        v400[1] = *(void *)((v398 & 0xFFFFFFFFFFFFFFF8) + 8);
        swift_bridgeObjectRelease();
        uint64_t v401 = (void *)(v491 + v393);
        *uint64_t v401 = *(void *)(v491 + v391);
        v401[1] = *(void *)(v491 + v391 + 8);
        swift_bridgeObjectRelease();
        unint64_t v402 = (v505 + v491 + v393) & v535;
        unint64_t v403 = (v505 + v491 + v391) & v535;
        *(unsigned char *)unint64_t v402 = *(unsigned char *)v403;
        uint64_t v404 = v402 | 4;
        int v405 = *(_DWORD *)(v403 | 4);
        *(unsigned char *)(v404 + 4) = *(unsigned char *)((v403 | 4) + 4);
        *(_DWORD *)uint64_t v404 = v405;
        *(_WORD *)(v402 + 10) = *(_WORD *)(v403 + 0xA);
        unint64_t v406 = *(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 40);
        v406((v521 + v402) & v495, (v521 + v403) & v495, v519);
        unint64_t v407 = (v515 + ((v521 + v402) & v495)) & v495;
        unint64_t v408 = (v515 + ((v521 + v403) & v495)) & v495;
        v406(v407, v408, v519);
        v409 = (unsigned char *)(v407 + v532);
        unsigned char *v409 = *(unsigned char *)(v408 + v532);
        v409[1] = *(unsigned char *)(v408 + v532 + 1);
        v409[2] = *(unsigned char *)(v408 + v532 + 2);
        v409[3] = *(unsigned char *)(v408 + v532 + 3);
        v409[4] = *(unsigned char *)(v408 + v532 + 4);
        unint64_t v410 = (v407 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v411 = (v408 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v410 = *(void *)v411;
        *(void *)(v410 + 8) = *(void *)(v411 + 8);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v410 + 16) = *(unsigned char *)(v411 + 16);
        *(unsigned char *)(v410 + 17) = *(unsigned char *)(v411 + 17);
        *(unsigned char *)(v410 + 18) = *(unsigned char *)(v411 + 18);
        *(unsigned char *)(v410 + 19) = *(unsigned char *)(v411 + 19);
        unint64_t v412 = (v410 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v413 = (v411 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v412 = *(void *)v413;
        *(unsigned char *)(v412 + 8) = *(unsigned char *)(v413 + 8);
        *(unsigned char *)(v412 + 9) = *(unsigned char *)(v413 + 9);
        *(unsigned char *)(v412 + 10) = *(unsigned char *)(v413 + 10);
        *(unsigned char *)(v412 + 11) = *(unsigned char *)(v413 + 11);
        *(unsigned char *)(v412 + 12) = *(unsigned char *)(v413 + 12);
        v414 = (void *)((v411 + 47) & 0xFFFFFFFFFFFFFFF8);
        v415 = (void *)((v410 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v415 = *v414;
        unint64_t v416 = ((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v417 = ((unint64_t)v414 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v416 = *(void *)v417;
        *(unsigned char *)(v416 + 8) = *(unsigned char *)(v417 + 8);
        *(unsigned char *)(v416 + 9) = *(unsigned char *)(v417 + 9);
        uint64_t v418 = (char *)((v512 + v416) & v495);
        int v419 = (char *)((v512 + v417) & v495);
        unint64_t v420 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v513 + 48);
        LODWORD(v388) = v420(v418, 1, v519);
        int v421 = v420(v419, 1, v519);
        if (v388)
        {
          if (!v421)
          {
            (*(void (**)(char *, char *, uint64_t))(v513 + 32))(v418, v419, v519);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v513 + 56))(v418, 0, 1, v519);
LABEL_245:
            size_t v423 = v532;
            unsigned int v422 = v534;
            goto LABEL_246;
          }
        }
        else
        {
          if (!v421)
          {
            v406((unint64_t)v418, (unint64_t)v419, v519);
            goto LABEL_245;
          }
          (*(void (**)(char *, uint64_t))(v513 + 8))(v418, v519);
        }
        unsigned int v422 = v534;
        size_t v423 = v532;
        if (v534) {
          size_t v424 = v532;
        }
        else {
          size_t v424 = v532 + 1;
        }
        memcpy(v418, v419, v424);
LABEL_246:
        if (v422) {
          size_t v285 = v423;
        }
        else {
          size_t v285 = v423 + 1;
        }
        unint64_t v426 = (unint64_t)&v418[v285 + 7];
        unint64_t v427 = (void *)((unint64_t)&v419[v285 + 7] & 0xFFFFFFFFFFFFFFF8);
        unint64_t v428 = (v426 & 0xFFFFFFFFFFFFFFF8) + 15;
        *(void *)(v426 & 0xFFFFFFFFFFFFFFF8) = *v427;
        unint64_t v429 = (v426 & 0xFFFFFFFFFFFFFFF8) + 31;
        swift_bridgeObjectRelease();
        unint64_t v430 = v428 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v431 = ((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v432 = *(void *)v431;
        *(unsigned char *)(v430 + 8) = *(unsigned char *)(v431 + 8);
        *(void *)unint64_t v430 = v432;
        unint64_t v433 = (void *)(((unint64_t)v427 + 31) & 0xFFFFFFFFFFFFFFF8);
        *(void *)(v429 & 0xFFFFFFFFFFFFFFF8) = *v433;
        swift_bridgeObjectRelease();
        uint64_t v434 = (uint64_t *)(((v429 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v435 = ((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v436 = v434[1];
        if ((v436 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)uint64_t v434 = *(_OWORD *)v435;
          unint64_t v437 = v527;
          uint64_t v207 = v517;
        }
        else
        {
          uint64_t v438 = *(void *)(v435 + 8);
          unint64_t v437 = v527;
          uint64_t v207 = v517;
          if ((v438 & 0x3000000000000000) != 0)
          {
            sub_10001E9C0(*v434, v436);
            *(_OWORD *)uint64_t v434 = *(_OWORD *)v435;
          }
          else
          {
            uint64_t v439 = *v434;
            *uint64_t v434 = *(void *)v435;
            v434[1] = v438;
            sub_10001E9C0(v439, v436);
          }
        }
        unint64_t v440 = ((unint64_t)v434 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v441 = (v435 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v442 = *(void *)v441;
        *(unsigned char *)(v440 + 8) = *(unsigned char *)(v441 + 8);
        *(void *)unint64_t v440 = v442;
        *(unsigned char *)(v440 + 9) = *(unsigned char *)(v441 + 9);
        unint64_t v443 = (v440 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v444 = (v441 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v445 = *(_DWORD *)v444;
        *(unsigned char *)(v443 + 4) = *(unsigned char *)(v444 + 4);
        *(_DWORD *)unint64_t v443 = v445;
        unint64_t v446 = (void *)((v440 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v447 = (void *)((v441 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v446 = *v447;
        v446[1] = v447[1];
        swift_bridgeObjectRelease();
        unint64_t v450 = ((((((((((v285 + 7 + v437) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v448 = v402 + v450;
        unint64_t v449 = (long long *)(v403 + v450);
        LODWORD(v450) = -1;
        if (*(void *)(v448 + 16) < 0xFFFFFFFFuLL) {
          unint64_t v450 = *(void *)(v448 + 16);
        }
        if ((int)v450 - 1 >= 0)
        {
          long long v451 = *v449;
          long long v452 = v449[1];
          long long v453 = v449[3];
          *(_OWORD *)(v448 + 32) = v449[2];
          *(_OWORD *)(v448 + 48) = v453;
          *(_OWORD *)unint64_t v448 = v451;
          *(_OWORD *)(v448 + 16) = v452;
          long long v454 = v449[4];
          long long v455 = v449[5];
          long long v456 = v449[7];
          *(_OWORD *)(v448 + 96) = v449[6];
          *(_OWORD *)(v448 + 112) = v456;
          *(_OWORD *)(v448 + 64) = v454;
          *(_OWORD *)(v448 + 80) = v455;
          long long v457 = v449[8];
          long long v458 = v449[9];
          long long v459 = v449[11];
          *(_OWORD *)(v448 + 160) = v449[10];
          *(_OWORD *)(v448 + 176) = v459;
          *(_OWORD *)(v448 + 128) = v457;
          *(_OWORD *)(v448 + 144) = v458;
          long long v460 = v449[12];
          long long v461 = v449[13];
          long long v462 = v449[14];
          *(void *)(v448 + 240) = *((void *)v449 + 30);
          *(_OWORD *)(v448 + 208) = v461;
          *(_OWORD *)(v448 + 224) = v462;
          *(_OWORD *)(v448 + 192) = v460;
          uint64_t v283 = v509;
LABEL_275:
          long long v478 = (_OWORD *)((v448 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v479 = (long long *)(((unint64_t)v449 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v480 = *v479;
          *(_OWORD *)((char *)v478 + 9) = *(long long *)((char *)v479 + 9);
          _OWORD *v478 = v480;
          unint64_t v481 = (v448 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v482 = ((unint64_t)v449 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v483 = *(_OWORD *)v482;
          *(unsigned char *)(v481 + 16) = *(unsigned char *)(v482 + 16);
          *(_OWORD *)unint64_t v481 = v483;
          long long v484 = (void *)((v448 + 311) & 0xFFFFFFFFFFFFFFF8);
          long long v485 = (void *)(((unint64_t)v449 + 311) & 0xFFFFFFFFFFFFFFF8);
          *long long v484 = *v485;
          long long v486 = (uint64_t *)(((unint64_t)v484 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v487 = *v486;
          unint64_t v488 = v486[1];
          *(_OWORD *)long long v486 = *(_OWORD *)(((unint64_t)v485 + 15) & 0xFFFFFFFFFFFFFFF8);
          sub_1000CF144(v487, v488);
          unint64_t v318 = v501;
          uint64_t v230 = v514;
          goto LABEL_226;
        }
        unint64_t v463 = *((void *)v449 + 2);
        if (v463 >= 0xFFFFFFFF) {
          LODWORD(v463) = -1;
        }
        uint64_t v283 = v509;
        if ((int)v463 - 1 >= 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v448 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v464 = *v449;
          long long v465 = v449[1];
          long long v466 = v449[3];
          *(_OWORD *)(v448 + 32) = v449[2];
          *(_OWORD *)(v448 + 48) = v466;
          *(_OWORD *)unint64_t v448 = v464;
          *(_OWORD *)(v448 + 16) = v465;
          long long v467 = v449[4];
          long long v468 = v449[5];
          long long v469 = v449[7];
          *(_OWORD *)(v448 + 96) = v449[6];
          *(_OWORD *)(v448 + 112) = v469;
          *(_OWORD *)(v448 + 64) = v467;
          *(_OWORD *)(v448 + 80) = v468;
          long long v470 = v449[8];
          long long v471 = v449[9];
          long long v472 = v449[11];
          *(_OWORD *)(v448 + 160) = v449[10];
          *(_OWORD *)(v448 + 176) = v472;
          *(_OWORD *)(v448 + 128) = v470;
          *(_OWORD *)(v448 + 144) = v471;
          long long v473 = v449[12];
          long long v474 = v449[13];
          long long v475 = v449[14];
          *(void *)(v448 + 240) = *((void *)v449 + 30);
          *(_OWORD *)(v448 + 208) = v474;
          *(_OWORD *)(v448 + 224) = v475;
          *(_OWORD *)(v448 + 192) = v473;
          goto LABEL_275;
        }
        *(void *)unint64_t v448 = *(void *)v449;
        *(unsigned char *)(v448 + 8) = *((unsigned char *)v449 + 8);
        *(unsigned char *)(v448 + 9) = *((unsigned char *)v449 + 9);
        *(void *)(v448 + 16) = *((void *)v449 + 2);
        swift_errorRelease();
        *(void *)(v448 + 24) = *((void *)v449 + 3);
        swift_errorRelease();
        *(unsigned char *)(v448 + 32) = *((unsigned char *)v449 + 32);
        *(unsigned char *)(v448 + 33) = *((unsigned char *)v449 + 33);
        *(unsigned char *)(v448 + 34) = *((unsigned char *)v449 + 34);
        *(void *)(v448 + 40) = *((void *)v449 + 5);
        *(void *)(v448 + 48) = *((void *)v449 + 6);
        swift_bridgeObjectRelease();
        *(void *)(v448 + 56) = *((void *)v449 + 7);
        *(void *)(v448 + 64) = *((void *)v449 + 8);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v448 + 72) = *((unsigned char *)v449 + 72);
        *(void *)(v448 + 80) = *((void *)v449 + 10);
        *(void *)(v448 + 88) = *((void *)v449 + 11);
        swift_bridgeObjectRelease();
        uint64_t v476 = *(void **)(v448 + 96);
        *(void *)(v448 + 96) = *((void *)v449 + 12);

        *(unsigned char *)(v448 + 104) = *((unsigned char *)v449 + 104);
        *(unsigned char *)(v448 + 105) = *((unsigned char *)v449 + 105);
        *(void *)(v448 + 112) = *((void *)v449 + 14);
        *(void *)(v448 + 120) = *((void *)v449 + 15);
        swift_bridgeObjectRelease();
        *(void *)(v448 + 128) = *((void *)v449 + 16);
        *(void *)(v448 + 136) = *((void *)v449 + 17);
        swift_bridgeObjectRelease();
        *(void *)(v448 + 144) = *((void *)v449 + 18);
        *(void *)(v448 + 152) = *((void *)v449 + 19);
        swift_bridgeObjectRelease();
        *(void *)(v448 + 160) = *((void *)v449 + 20);
        *(void *)(v448 + 168) = *((void *)v449 + 21);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v448 + 176) = *((unsigned char *)v449 + 176);
        *(void *)(v448 + 184) = *((void *)v449 + 23);
        swift_bridgeObjectRelease();
        uint64_t v477 = *((void *)v449 + 24);
        if (*(void *)(v448 + 192))
        {
          if (v477)
          {
            *(void *)(v448 + 192) = v477;
            swift_bridgeObjectRelease();
            *(void *)(v448 + 200) = *((void *)v449 + 25);
            swift_bridgeObjectRelease();
LABEL_274:
            *(void *)(v448 + 208) = *((void *)v449 + 26);
            *(void *)(v448 + 216) = *((void *)v449 + 27);
            *(void *)(v448 + 224) = *((void *)v449 + 28);
            swift_bridgeObjectRelease();
            *(void *)(v448 + 232) = *((void *)v449 + 29);
            *(void *)(v448 + 240) = *((void *)v449 + 30);
            swift_bridgeObjectRelease();
            goto LABEL_275;
          }
          sub_1002651E8(v448 + 192);
        }
        *(_OWORD *)(v448 + 192) = v449[12];
        goto LABEL_274;
      }
      goto LABEL_211;
    }
    unint64_t v251 = (v521 + ((v223 + v238) & v535)) & v495;
    if (v534 <= 0x7FFFFFFD)
    {
      unint64_t v250 = *(void *)(((v494 + ((v515 + v251) & v495)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_168:
      if (v250 >= 0xFFFFFFFF) {
        LODWORD(v250) = -1;
      }
      if ((v250 + 1) >= 2) {
        goto LABEL_149;
      }
      goto LABEL_171;
    }
    unint64_t v252 = *(uint64_t (**)(unint64_t))(v513 + 48);
LABEL_163:
    unint64_t v255 = v222;
    uint64_t v256 = ~v204;
    uint64_t v257 = v218;
    uint64_t v258 = v215;
    int v259 = v252(v251);
    uint64_t v215 = v258;
    uint64_t v218 = v257;
    uint64_t v217 = v256;
    unint64_t v222 = v255;
    if (v259) {
      goto LABEL_149;
    }
    goto LABEL_171;
  }
  if (v208 != v211)
  {
    int v249 = (unint64_t *)((v219 + v232) & 0xFFFFFFFFFFFFFFF8);
    if (v210 <= 0x7FFFFFFE)
    {
      unint64_t v250 = *v249;
      goto LABEL_168;
    }
    unint64_t v251 = ((unint64_t)v249 + v221) & v220;
    unint64_t v252 = *(uint64_t (**)(unint64_t))(v202 + 48);
    goto LABEL_163;
  }
  unint64_t v233 = v222;
  uint64_t v234 = ~v204;
  uint64_t v235 = v218;
  uint64_t v236 = v215;
  int v237 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v499 + 48))(v232, v208, v500);
  uint64_t v215 = v236;
  uint64_t v218 = v235;
  uint64_t v217 = v234;
  unint64_t v222 = v233;
  if (!v237) {
    goto LABEL_171;
  }
LABEL_149:
  unint64_t v240 = (unint64_t)&v517[v216] & v215;
  unint64_t v241 = (v218 + v240) & v217;
  if (v211 == v214)
  {
    if (v208 == v211)
    {
      uint64_t v242 = v500;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v499 + 48);
      unint64_t v244 = (v218 + v240) & v217;
      uint64_t v245 = v208;
LABEL_183:
      uint64_t v279 = v217;
      uint64_t v280 = v218;
      uint64_t v281 = v215;
      int v248 = v243(v244, v245, v242);
      uint64_t v215 = v281;
      uint64_t v218 = v280;
      uint64_t v217 = v279;
LABEL_184:
      uint64_t v231 = v513;
      uint64_t v230 = v514;
LABEL_185:
      uint64_t v207 = v517;
      if (!v248)
      {
LABEL_191:
        unint64_t v240 = (unint64_t)&v207[v216] & v215;
        unint64_t v241 = (v218 + v240) & v217;
        goto LABEL_192;
      }
      goto LABEL_186;
    }
    unsigned int v253 = (unint64_t *)((v507 + v241) & 0xFFFFFFFFFFFFFFF8);
    if (v210 > 0x7FFFFFFE)
    {
      unint64_t v244 = ((unint64_t)v253 + v492) & v503;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v493 + 48);
      uint64_t v245 = v209;
      uint64_t v242 = v497;
      goto LABEL_183;
    }
    unint64_t v254 = *v253;
  }
  else
  {
    unint64_t v246 = v222 + v241;
    if ((v213 & 0x80000000) == 0)
    {
      unint64_t v247 = *(void *)(v246 + 8);
      if (v247 >= 0xFFFFFFFF) {
        LODWORD(v247) = -1;
      }
      int v248 = v247 + 1;
      goto LABEL_184;
    }
    uint64_t v260 = (v521 + ((v505 + v246) & v535)) & v495;
    if (v534 > 0x7FFFFFFD)
    {
      uint64_t v231 = v513;
      uint64_t v261 = v217;
      uint64_t v262 = v218;
      uint64_t v263 = v215;
      int v248 = (*(uint64_t (**)(uint64_t))(v513 + 48))(v260);
      uint64_t v215 = v263;
      uint64_t v218 = v262;
      uint64_t v217 = v261;
      uint64_t v230 = v514;
      goto LABEL_185;
    }
    unint64_t v254 = *(void *)(((v494 + ((v515 + v260) & v495)) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  if (v254 >= 0xFFFFFFFF) {
    LODWORD(v254) = -1;
  }
  uint64_t v231 = v513;
  uint64_t v230 = v514;
  uint64_t v207 = v517;
  if ((v254 + 1) >= 2)
  {
LABEL_186:
    uint64_t v282 = 7;
    if (!v534) {
      uint64_t v282 = 8;
    }
    uint64_t v283 = v509;
    size_t v284 = ((((((((((((((v282 + v532 + v527) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + v509
             + 327) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    if (v534) {
      size_t v285 = v532;
    }
    else {
      size_t v285 = v532 + 1;
    }
LABEL_225:
    memcpy(v530, v207, v284);
    unint64_t v318 = v501;
LABEL_226:
    size_t v317 = v285;
    goto LABEL_227;
  }
LABEL_192:
  unint64_t v511 = v241;
  uint64_t v286 = *(void (**)(void))(v523 + 32);
  uint64_t v287 = v217;
  uint64_t v288 = v218;
  uint64_t v289 = v215;
  v286();
  unint64_t v290 = (unint64_t)&v530[v216] & v289;
  ((void (*)(unint64_t, unint64_t, uint64_t))v286)(v290, v240, v525);
  unint64_t v291 = (v288 + v290) & v287;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v499 + 32))(v291, v511, v500);
  uint64_t v292 = (void *)((v507 + v291) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v293 = (void *)((v507 + v511) & 0xFFFFFFFFFFFFFFF8);
  void *v292 = *v293;
  unint64_t v294 = ((unint64_t)v292 + v492) & v503;
  unint64_t v295 = ((unint64_t)v293 + v492) & v503;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 32))(v294, v295, v497);
  uint64_t v296 = (void *)((v490 + v294) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v297 = (void *)((v490 + v295) & 0xFFFFFFFFFFFFFFF8);
  void *v296 = *v297;
  *(_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)(v491 + v291) = *(_OWORD *)(v491 + v511);
  unint64_t v298 = (v505 + v491 + v291) & v535;
  unint64_t v299 = (v505 + v491 + v511) & v535;
  *(unsigned char *)unint64_t v298 = *(unsigned char *)v299;
  uint64_t v300 = v298 | 4;
  int v301 = *(_DWORD *)(v299 | 4);
  *(unsigned char *)(v300 + 4) = *(unsigned char *)((v299 | 4) + 4);
  *(_DWORD *)uint64_t v300 = v301;
  *(_WORD *)(v298 + 10) = *(_WORD *)(v299 + 0xA);
  unint64_t v302 = *(void (**)(unint64_t, unint64_t, uint64_t))(v231 + 32);
  v302((v521 + v298) & v495, (v521 + v299) & v495, v519);
  unint64_t v303 = (v515 + ((v521 + v298) & v495)) & v495;
  unint64_t v304 = (v515 + ((v521 + v299) & v495)) & v495;
  v302(v303, v304, v519);
  unint64_t v305 = (unsigned char *)(v303 + v532);
  *unint64_t v305 = *(unsigned char *)(v304 + v532);
  v305[1] = *(unsigned char *)(v304 + v532 + 1);
  v305[2] = *(unsigned char *)(v304 + v532 + 2);
  v305[3] = *(unsigned char *)(v304 + v532 + 3);
  v305[4] = *(unsigned char *)(v304 + v532 + 4);
  unint64_t v306 = (v303 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v307 = (v304 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v306 = *(_OWORD *)v307;
  *(unsigned char *)(v306 + 16) = *(unsigned char *)(v307 + 16);
  *(unsigned char *)(v306 + 17) = *(unsigned char *)(v307 + 17);
  *(unsigned char *)(v306 + 18) = *(unsigned char *)(v307 + 18);
  *(unsigned char *)(v306 + 19) = *(unsigned char *)(v307 + 19);
  unint64_t v308 = (v306 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v309 = (v307 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v308 = *(void *)v309;
  *(unsigned char *)(v308 + 8) = *(unsigned char *)(v309 + 8);
  *(unsigned char *)(v308 + 9) = *(unsigned char *)(v309 + 9);
  *(unsigned char *)(v308 + 10) = *(unsigned char *)(v309 + 10);
  *(unsigned char *)(v308 + 11) = *(unsigned char *)(v309 + 11);
  *(unsigned char *)(v308 + 12) = *(unsigned char *)(v309 + 12);
  unint64_t v310 = (void *)((v307 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v311 = (void *)((v306 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v311 = *v310;
  unint64_t v312 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v313 = ((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  *(unsigned char *)(v312 + 9) = *(unsigned char *)(v313 + 9);
  uint64_t v314 = (void *)((v512 + v312) & v495);
  uint64_t v315 = (const void *)((v512 + v313) & v495);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v231 + 48))(v315, 1, v519))
  {
    unsigned int v316 = v534;
    if (v534) {
      size_t v285 = v532;
    }
    else {
      size_t v285 = v532 + 1;
    }
    memcpy(v314, v315, v285);
  }
  else
  {
    v302((unint64_t)v314, (unint64_t)v315, v519);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v231 + 56))(v314, 0, 1, v519);
    unsigned int v316 = v534;
    if (v534) {
      size_t v285 = v532;
    }
    else {
      size_t v285 = v532 + 1;
    }
  }
  size_t v317 = v532;
  unint64_t v318 = v501;
  uint64_t v207 = v517;
  uint64_t v283 = v509;
  uint64_t v319 = (void *)(((unint64_t)v314 + v285 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v320 = (void *)(((unint64_t)v315 + v285 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v319 = *v320;
  unint64_t v321 = ((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v322 = ((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v323 = *(void *)v322;
  *(unsigned char *)(v321 + 8) = *(unsigned char *)(v322 + 8);
  *(void *)unint64_t v321 = v323;
  unint64_t v324 = (void *)(((unint64_t)v319 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v325 = (void *)(((unint64_t)v320 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v324 = *v325;
  uint64_t v326 = (_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v327 = (_OWORD *)(((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v326 = *v327;
  unint64_t v328 = ((unint64_t)v326 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v329 = ((unint64_t)v327 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v330 = *(void *)v329;
  *(unsigned char *)(v328 + 8) = *(unsigned char *)(v329 + 8);
  *(void *)unint64_t v328 = v330;
  *(unsigned char *)(v328 + 9) = *(unsigned char *)(v329 + 9);
  unint64_t v331 = (v328 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v332 = (v329 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v323) = *(_DWORD *)v332;
  *(unsigned char *)(v331 + 4) = *(unsigned char *)(v332 + 4);
  *(_DWORD *)unint64_t v331 = v323;
  *(_OWORD *)((v328 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v329 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v333 = ((((((((((v285 + 7 + v527) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v334 = v298 + v333;
  uint64_t v335 = (long long *)(v299 + v333);
  long long v336 = v335[7];
  long long v338 = v335[4];
  long long v337 = v335[5];
  *(_OWORD *)(v334 + 96) = v335[6];
  *(_OWORD *)(v334 + 112) = v336;
  *(_OWORD *)(v334 + 64) = v338;
  *(_OWORD *)(v334 + 80) = v337;
  long long v339 = v335[11];
  long long v341 = v335[8];
  long long v340 = v335[9];
  *(_OWORD *)(v334 + 160) = v335[10];
  *(_OWORD *)(v334 + 176) = v339;
  *(_OWORD *)(v334 + 128) = v341;
  *(_OWORD *)(v334 + 144) = v340;
  long long v343 = v335[13];
  long long v342 = v335[14];
  long long v344 = v335[12];
  *(void *)(v334 + 240) = *((void *)v335 + 30);
  *(_OWORD *)(v334 + 208) = v343;
  *(_OWORD *)(v334 + 224) = v342;
  *(_OWORD *)(v334 + 192) = v344;
  long long v345 = *v335;
  long long v346 = v335[1];
  long long v347 = v335[3];
  *(_OWORD *)(v334 + 32) = v335[2];
  *(_OWORD *)(v334 + 48) = v347;
  *(_OWORD *)unint64_t v334 = v345;
  *(_OWORD *)(v334 + 16) = v346;
  long long v348 = (_OWORD *)((v334 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v349 = (long long *)(((unint64_t)v335 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v350 = *v349;
  *(_OWORD *)((char *)v348 + 9) = *(long long *)((char *)v349 + 9);
  *long long v348 = v350;
  unint64_t v351 = (v334 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v352 = ((unint64_t)v335 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v353 = *(_OWORD *)v352;
  *(unsigned char *)(v351 + 16) = *(unsigned char *)(v352 + 16);
  *(_OWORD *)unint64_t v351 = v353;
  long long v354 = (void *)((v334 + 311) & 0xFFFFFFFFFFFFFFF8);
  long long v355 = (void *)(((unint64_t)v335 + 311) & 0xFFFFFFFFFFFFFFF8);
  *long long v354 = *v355;
  *(_OWORD *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v230 = v514;
  if (!v316) {
    goto LABEL_226;
  }
LABEL_227:
  unint64_t v376 = ((((v283
           + ((((((((((v318 + v317) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v377 = (unint64_t)&v530[v376];
  unint64_t v378 = (unint64_t)&v207[v376];
  unint64_t v379 = v377 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v379 = *(void *)(v378 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v379 + 8) = *(unsigned char *)((v378 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v380 = (void **)((v377 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v381 = (void **)((v378 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v382 = *v380;
  *uint64_t v380 = *v381;

  unint64_t v383 = ((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v384 = ((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v383 < 0xFFFFFFFFuLL)
  {
LABEL_231:
    *(_OWORD *)unint64_t v383 = *(_OWORD *)v384;
    return v230;
  }
  if (*(void *)v384 < 0xFFFFFFFFuLL)
  {
    swift_errorRelease();

    goto LABEL_231;
  }
  *(void *)unint64_t v383 = *(void *)v384;
  swift_errorRelease();
  uint64_t v385 = *(void **)(v383 + 8);
  *(void *)(v383 + 8) = *(void *)(v384 + 8);

  return v230;
}

uint64_t sub_1003DD730(_DWORD *a1, unsigned int a2)
{
  uint64_t v81 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v91 = v81;
  unsigned int v2 = *(_DWORD *)(v81 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v89 = v83;
  unsigned int v3 = *(_DWORD *)(v83 + 84);
  unsigned int v65 = v3;
  if (v2 > v3) {
    unsigned int v3 = v2;
  }
  unsigned int v68 = v3;
  if (v3 <= 0x7FFFFFFE) {
    unsigned int v3 = 2147483646;
  }
  unsigned int v70 = v3;
  unsigned int v71 = v2;
  unsigned int v4 = v3 - 1;
  uint64_t v79 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v90 = v79;
  unsigned int v5 = *(_DWORD *)(v79 + 84);
  uint64_t v77 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v88 = v77;
  unsigned int v6 = *(_DWORD *)(v77 + 84);
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v77 + 84);
  }
  if (v5 <= v7) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v5;
  }
  unsigned int v64 = v8;
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  unsigned int v67 = v8;
  unsigned int v9 = v8 - 1;
  unsigned int v69 = v9;
  if (v4 > v9) {
    unsigned int v9 = v4;
  }
  unsigned int v73 = v9;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(v62 - 8);
  unsigned int v10 = *(_DWORD *)(v75 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  uint64_t v13 = v81;
  unsigned int v63 = v10;
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v14 = v10;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v82 = v5;
  if (v15 <= v5) {
    unsigned int v16 = v5;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v16 <= v7) {
    unsigned int v16 = v7;
  }
  if (v16 <= 0x7FFFFFFF) {
    int v17 = 0x7FFFFFFF;
  }
  else {
    int v17 = v16;
  }
  if (v73 <= v17 - 1) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = v73;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v21 = *(void *)(v83 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v79 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v24 = *(void *)(v79 + 64);
  uint64_t v25 = *(void *)(v77 + 64);
  unsigned int v84 = v6;
  uint64_t v80 = v75;
  uint64_t v26 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = *(void *)(v75 + 64);
  uint64_t v28 = *(void *)(v11 + 64);
  uint64_t v29 = 7;
  if (!v6) {
    uint64_t v29 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v30 = *(_DWORD *)(v91 + 80) & 0xF8 | v20 | 7;
  uint64_t v31 = *(void *)(v13 + 64) + 7;
  unint64_t v86 = ((((v21 + ((v20 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = v23 | 7;
  uint64_t v33 = v23 | v22 | 7;
  uint64_t v85 = v33 + 9;
  uint64_t v61 = v25 + v23;
  uint64_t v34 = v25 + 12;
  unint64_t v35 = ((((((((((v29
                + v25
                + ((v23
                  + ((((((v25 + 12 + ((v25 + v23 + ((v23 + 12) & ~v23)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v78 = v35 + ((v23 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v23 | 7));
  uint64_t v36 = *(_DWORD *)(v75 + 80) & 0xF8 | v26 | 7;
  uint64_t v37 = v23 | v22 | v36;
  uint64_t v74 = v24 + v22;
  uint64_t v76 = v24 + v36;
  uint64_t v38 = v27 + 7;
  unint64_t v39 = ((((v28 + ((v26 + 8 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v19 < a2)
  {
    unint64_t v40 = (((((((((((v23 | 7) + 16 + ((v76 + (v74 & ~v22)) & ~v36) + v39) & ~v32) + v35 + 311) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + ((v78 + v37 + ((v85 + ((v30 + 8) & ~v30) + v86) & ~v33)) & ~v37)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v40 & 0xFFFFFFF8) != 0) {
      unsigned int v41 = 2;
    }
    else {
      unsigned int v41 = a2 - v19 + 1;
    }
    if (v41 >= 0x10000) {
      unsigned int v42 = 4;
    }
    else {
      unsigned int v42 = 2;
    }
    if (v41 < 0x100) {
      unsigned int v42 = 1;
    }
    if (v41 >= 2) {
      uint64_t v43 = v42;
    }
    else {
      uint64_t v43 = 0;
    }
    switch(v43)
    {
      case 1:
        int v44 = *((unsigned __int8 *)a1 + v40);
        if (!*((unsigned char *)a1 + v40)) {
          break;
        }
        goto LABEL_55;
      case 2:
        int v44 = *(unsigned __int16 *)((char *)a1 + v40);
        if (*(_WORD *)((char *)a1 + v40)) {
          goto LABEL_55;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003DDFDCLL);
      case 4:
        int v44 = *(_DWORD *)((char *)a1 + v40);
        if (!v44) {
          break;
        }
LABEL_55:
        int v46 = v44 - 1;
        if ((v40 & 0xFFFFFFF8) != 0)
        {
          int v46 = 0;
          int v47 = *a1;
        }
        else
        {
          int v47 = 0;
        }
        return v19 + (v47 | v46) + 1;
      default:
        break;
    }
  }
  if ((v18 & 0x80000000) != 0)
  {
    uint64_t v49 = v34;
    uint64_t v50 = ((unint64_t)a1 + v30 + 8) & ~v30;
    if (v4 == v19)
    {
      if (v71 == v70)
      {
        unsigned int v51 = (*(uint64_t (**)(uint64_t))(v91 + 48))(v50);
        goto LABEL_94;
      }
      uint64_t v54 = (unint64_t *)((v31 + v50) & 0xFFFFFFFFFFFFFFF8);
      if (v68 <= 0x7FFFFFFE) {
        goto LABEL_71;
      }
      unsigned int v51 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v89 + 48))(((unint64_t)v54 + v20 + 8) & ~v20, v65, AssociatedTypeWitness);
      goto LABEL_94;
    }
    uint64_t v52 = ~v23;
    unint64_t v53 = (v85 + v86 + v50) & ~v33;
    if (v69 == v19)
    {
      if (v82 == v67) {
        goto LABEL_78;
      }
      unint64_t v56 = (v24 + 7 + v53) & 0xFFFFFFFFFFFFFFF8;
      if ((v64 & 0x80000000) != 0)
      {
        uint64_t v57 = v23 + 16;
LABEL_92:
        uint64_t v60 = (v23 + 12 + ((v57 + v56) & ~v32)) & v52;
        if (v84 <= 0x7FFFFFFD)
        {
          unint64_t v55 = *(void *)(((v49 + ((v61 + v60) & v52)) & 0xFFFFFFFFFFFFFFF8) + 8);
          goto LABEL_72;
        }
        unsigned int v51 = (*(uint64_t (**)(uint64_t))(v88 + 48))(v60);
        goto LABEL_94;
      }
    }
    else
    {
      unint64_t v53 = (v53 + v37 + v78) & ~v37;
      if (v82 == v17)
      {
LABEL_78:
        unsigned int v51 = (*(uint64_t (**)(unint64_t))(v90 + 48))(v53);
        goto LABEL_94;
      }
      unint64_t v58 = (v76 + ((v74 + v53) & ~v22)) & ~v36;
      if (v15 == v17)
      {
        if (v63 == v15)
        {
          unsigned int v51 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v80 + 48))(v58, v63, v62);
        }
        else
        {
          uint64_t v54 = (unint64_t *)((v38 + v58) & 0xFFFFFFFFFFFFFFF8);
          if (v14 <= 0x7FFFFFFE)
          {
LABEL_71:
            unint64_t v55 = *v54;
LABEL_72:
            if (v55 >= 0xFFFFFFFF) {
              LODWORD(v55) = -1;
            }
            if ((v55 + 1) >= 2) {
              unsigned int v51 = v55;
            }
            else {
              unsigned int v51 = 0;
            }
            goto LABEL_94;
          }
          unsigned int v51 = (*(uint64_t (**)(unint64_t))(v12 + 48))(((unint64_t)v54 + v26 + 8) & ~v26);
        }
LABEL_94:
        if (v51 >= 2) {
          return v51 - 1;
        }
        else {
          return 0;
        }
      }
      unint64_t v56 = v58 + v39;
      if ((v16 & 0x80000000) != 0)
      {
        uint64_t v57 = (v23 | 7) + 16;
        goto LABEL_92;
      }
    }
    unint64_t v59 = *(void *)(v56 + 8);
    if (v59 >= 0xFFFFFFFF) {
      LODWORD(v59) = -1;
    }
    unsigned int v51 = v59 + 1;
    goto LABEL_94;
  }
  uint64_t v48 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v48) = -1;
  }
  return (v48 + 1);
}

void sub_1003DDFF0(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v89 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v106 = v89;
  unsigned int v3 = *(_DWORD *)(v89 + 84);
  uint64_t v95 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v104 = v95;
  unsigned int v4 = *(_DWORD *)(v95 + 84);
  unsigned int v84 = v3;
  if (v3 > v4) {
    unsigned int v4 = v3;
  }
  unsigned int v82 = v4;
  if (v4 <= 0x7FFFFFFE) {
    unsigned int v4 = 2147483646;
  }
  unsigned int v87 = v4;
  unsigned int v5 = v4 - 1;
  uint64_t v93 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v105 = v93;
  unsigned int v6 = *(_DWORD *)(v93 + 84);
  uint64_t v91 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v103 = v91;
  unsigned int v7 = *(_DWORD *)(v91 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v91 + 84);
  }
  if (v6 <= v8) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = v6;
  }
  unsigned int v80 = v9;
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  unsigned int v85 = v9;
  unsigned int v10 = v9 - 1;
  unsigned int v88 = v5;
  unsigned int v86 = v10;
  if (v5 <= v10) {
    unsigned int v5 = v10;
  }
  uint64_t v98 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v11 = *(_DWORD *)(v98 + 84);
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v89;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v77 = v11;
  if (v11 > v14) {
    unsigned int v14 = v11;
  }
  unsigned int v76 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v83 = v6;
  unsigned int v79 = v14;
  if (v14 <= v6) {
    unsigned int v14 = v6;
  }
  if (v14 <= v8) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v15 <= 0x7FFFFFFF) {
    int v16 = 0x7FFFFFFF;
  }
  else {
    int v16 = v15;
  }
  unsigned int v90 = v16;
  unsigned int v17 = v16 - 1;
  if (v5 <= v17) {
    unsigned int v18 = v17;
  }
  else {
    unsigned int v18 = v5;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  unsigned int v78 = v7;
  BOOL v20 = v7 == 0;
  uint64_t v21 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v22 = *(_DWORD *)(v106 + 80) & 0xF8 | v21 | 7;
  uint64_t v81 = *(void *)(v13 + 64) + 7;
  uint64_t v23 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v25 = v24 | v23;
  uint64_t v26 = v24 | v23 | 7;
  unint64_t v97 = ((((*(void *)(v95 + 64) + ((v21 + 8 + (v81 & 0xFFFFFFFFFFFFFFF8)) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v27 = *(void *)(v93 + 64);
  uint64_t v96 = v24 + 12;
  uint64_t v28 = *(void *)(v91 + 64);
  uint64_t v92 = v28 + v24;
  uint64_t v94 = v28 + 12;
  if (v20) {
    uint64_t v29 = v28 + 1;
  }
  else {
    uint64_t v29 = v28;
  }
  uint64_t v75 = v12;
  uint64_t v30 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v31 = *(void *)(v98 + 64) + 7;
  uint64_t v32 = *(void *)(v12 + 64);
  uint64_t v33 = v30 + 8;
  uint64_t v34 = v32 + ((v30 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v30);
  uint64_t v35 = v27 + 7;
  unint64_t v36 = (v24 + 16 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v24 | 7);
  unint64_t v37 = v29
      + ((v24
        + ((((((v28 + 12 + ((v28 + v24 + ((v24 + 12) & ~v24)) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 10) & ~v24)
      + 7;
  unint64_t v38 = (((((((((v37 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v39 = *(_DWORD *)(v98 + 80) & 0xF8 | v30 | 7;
  uint64_t v40 = v25 | v39;
  unint64_t v41 = v38 + v36;
  uint64_t v42 = (v38 + v36 + (v25 | v39) + ((v26 + 9 + ((v22 + 8) & ~v22) + v97) & ~v26)) & ~(v25 | v39);
  uint64_t v43 = v27 + v23;
  uint64_t v44 = v27 + v39;
  uint64_t v45 = (v27 + v39 + ((v27 + v23) & ~v23)) & ~v39;
  unint64_t v46 = ((((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v47 = (v24 | 7) + 16;
  uint64_t v48 = (v47 + v45 + v46) & ~(v24 | 7);
  size_t v49 = ((((((((v48 + v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v42 + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v19 >= a3)
  {
    int v52 = 0;
  }
  else
  {
    if (v49) {
      unsigned int v50 = 2;
    }
    else {
      unsigned int v50 = a3 - v19 + 1;
    }
    if (v50 >= 0x10000) {
      int v51 = 4;
    }
    else {
      int v51 = 2;
    }
    if (v50 < 0x100) {
      int v51 = 1;
    }
    if (v50 >= 2) {
      int v52 = v51;
    }
    else {
      int v52 = 0;
    }
  }
  if (a2 > v19)
  {
    if (v49) {
      int v53 = 1;
    }
    else {
      int v53 = a2 - v19;
    }
    if (v49)
    {
      unsigned int v54 = ~v19 + a2;
      bzero(a1, v49);
      *a1 = v54;
    }
    switch(v52)
    {
      case 1:
        *((unsigned char *)a1 + v49) = v53;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v49) = v53;
        return;
      case 3:
        goto LABEL_129;
      case 4:
        *(unsigned int *)((char *)a1 + v49) = v53;
        return;
      default:
        return;
    }
  }
  uint64_t v101 = ~v22;
  uint64_t v99 = ~(v24 | 7);
  uint64_t v55 = ~v24;
  uint64_t v56 = ~v30;
  switch(v52)
  {
    case 1:
      *((unsigned char *)a1 + v49) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_64;
    case 2:
      *(_WORD *)((char *)a1 + v49) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_64;
    case 3:
LABEL_129:
      __break(1u);
      JUMPOUT(0x1003DEABCLL);
    case 4:
      *(unsigned int *)((char *)a1 + v49) = 0;
      goto LABEL_63;
    default:
LABEL_63:
      if (!a2) {
        return;
      }
LABEL_64:
      if ((v18 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v57 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v57 = a2 - 1;
        }
        uint64_t v62 = a1;
        goto LABEL_75;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)a1 + v22 + 8) & v101);
      if (v88 == v19)
      {
        uint64_t v57 = a2 + 1;
        if (v57 > v87)
        {
          if (!v97) {
            return;
          }
          unsigned int v59 = a2 - v87;
          uint64_t v60 = (void *)(((unint64_t)a1 + v22 + 8) & v101);
          size_t v61 = v97;
          goto LABEL_88;
        }
        if (a2 == -1) {
          return;
        }
        if (v84 == v87)
        {
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v106 + 56);
          uint64_t v67 = ((unint64_t)a1 + v22 + 8) & v101;
          uint64_t v63 = a2 + 1;
          goto LABEL_106;
        }
        uint64_t v62 = (void *)(((unint64_t)v58 + v81) & 0xFFFFFFFFFFFFFFF8);
        if (v82 > 0x7FFFFFFE)
        {
          uint64_t v67 = ((unint64_t)v62 + v21 + 8) & ~v21;
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v104 + 56);
          uint64_t v63 = a2 + 1;
          goto LABEL_106;
        }
        if (v57 <= 0x7FFFFFFE)
        {
LABEL_75:
          *uint64_t v62 = v57;
          return;
        }
        unsigned int v70 = a2 - 2147483646;
        *uint64_t v62 = 0;
LABEL_98:
        *(_DWORD *)uint64_t v62 = v70;
        return;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)v58 + v97 + v26 + 9) & ~v26);
      if (v86 == v19)
      {
        uint64_t v63 = a2 + 1;
        if (v63 <= v85)
        {
          if (a2 == -1) {
            return;
          }
          if (v83 == v85)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v105 + 56);
            uint64_t v67 = (uint64_t)v58;
            goto LABEL_106;
          }
          unsigned int v71 = (void *)(((unint64_t)v58 + v35) & 0xFFFFFFFFFFFFFFF8);
          if ((v80 & 0x80000000) == 0)
          {
            if ((v63 & 0x80000000) != 0)
            {
              *unsigned int v71 = a2 - 0x7FFFFFFF;
              v71[1] = 0;
            }
            else
            {
              v71[1] = a2;
            }
            return;
          }
          uint64_t v67 = (v96 + (((unint64_t)v71 + v24 + 16) & v99)) & v55;
          if (v78 > 0x7FFFFFFD)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v103 + 56);
            goto LABEL_106;
          }
          uint64_t v62 = (void *)((v94 + ((v92 + v67) & v55)) & 0xFFFFFFFFFFFFFFF8);
          if (v63 <= 0x7FFFFFFE)
          {
            v62[1] = v63;
            return;
          }
          unsigned int v70 = a2 - 2147483646;
          *uint64_t v62 = 0;
          v62[1] = 0;
          goto LABEL_98;
        }
        int v64 = v36
            + (((((((((v37 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8);
        size_t v61 = (v64 + 16);
        if (v64 == -16) {
          return;
        }
        unsigned int v65 = v85;
LABEL_87:
        unsigned int v59 = a2 - v65;
        uint64_t v60 = v58;
LABEL_88:
        bzero(v60, v61);
        *unint64_t v58 = v59;
        return;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)v58 + v40 + v41) & ~v40);
      uint64_t v68 = a2 + 1;
      if (v68 > v90)
      {
        int v69 = (((v48
               + (((((((((v37 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8)
               + 327) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8;
        size_t v61 = (v69 + 16);
        if (v69 == -16) {
          return;
        }
        unsigned int v65 = v90;
        goto LABEL_87;
      }
      if (a2 == -1) {
        return;
      }
      if (v83 == v90)
      {
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v105 + 56);
        uint64_t v67 = (uint64_t)v58;
        uint64_t v63 = a2 + 1;
      }
      else
      {
        uint64_t v67 = (v44 + (((unint64_t)v58 + v43) & ~v23)) & ~v39;
        if (v79 == v90)
        {
          if (v77 == v79)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v98 + 56);
            uint64_t v63 = a2 + 1;
          }
          else
          {
            unsigned int v73 = (void *)((v31 + v67) & 0xFFFFFFFFFFFFFFF8);
            if (v76 <= 0x7FFFFFFE)
            {
              if (v68 > 0x7FFFFFFE)
              {
                *unsigned int v73 = 0;
                *(_DWORD *)unsigned int v73 = a2 - 2147483646;
              }
              else
              {
                *unsigned int v73 = v68;
              }
              return;
            }
            uint64_t v67 = ((unint64_t)v73 + v33) & v56;
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v75 + 56);
            uint64_t v63 = a2 + 1;
          }
        }
        else
        {
          uint64_t v72 = (void *)(v67 + v46);
          if ((v15 & 0x80000000) == 0)
          {
            if ((v68 & 0x80000000) != 0)
            {
              *uint64_t v72 = a2 - 0x7FFFFFFF;
              v72[1] = 0;
            }
            else
            {
              v72[1] = a2;
            }
            return;
          }
          uint64_t v67 = (v96 + (((unint64_t)v72 + v47) & v99)) & v55;
          if (v78 <= 0x7FFFFFFD)
          {
            uint64_t v74 = (void *)((v94 + ((v92 + v67) & v55)) & 0xFFFFFFFFFFFFFFF8);
            if (v68 > 0x7FFFFFFE)
            {
              *uint64_t v74 = 0;
              v74[1] = 0;
              *(_DWORD *)uint64_t v74 = a2 - 2147483646;
            }
            else
            {
              v74[1] = v68;
            }
            return;
          }
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v103 + 56);
          uint64_t v63 = a2 + 1;
        }
      }
LABEL_106:
      v66(v67, v63);
      return;
  }
}

uint64_t ItemMetadata.withUnsafeFPFSMetadata<A>(nonSyncableAttributes:cb:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned int v6 = v5;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v59 = a1;
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  int v52 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unsigned int v15 = (char *)&v50 - v14;
  int v16 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v17 = __chkstk_darwin(v16);
  unsigned int v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v60 = 0;
  char v62 = 0;
  __int16 v61 = 0;
  __int16 v63 = 0;
  char v69 = 0;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  int v70 = 0;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  memset(v74, 0, 26);
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v75 = 0;
  int v78 = 0;
  sub_1003DF120(v6[*(int *)(v17 + 40)], (uint64_t)&v60);
  sub_1003DF140(v6[v16[13]], (uint64_t)&v60);
  uint64_t v20 = *v6;
  uint64_t v58 = a4;
  uint64_t v57 = a5;
  switch(v20)
  {
    case 1:
      int v21 = 2;
      goto LABEL_9;
    case 2:
      int v60 = 4;
      uint64_t v22 = 0;
      goto LABEL_7;
    case 3:
      int v60 = 1;
      uint64_t v22 = 1;
LABEL_7:
      sub_1003DF160(v22, (uint64_t)&v60);
      break;
    default:
      if (v6[v16[27]]) {
        int v21 = 3;
      }
      else {
        int v21 = 1;
      }
LABEL_9:
      int v60 = v21;
      break;
  }
  uint64_t v23 = v16[20];
  sub_1003DF180(v6[v23], (uint64_t)&v60);
  sub_1003DF194(v6[v16[9]], (uint64_t)&v60);
  uint64_t v24 = v16[21];
  int v25 = v6[v24];
  sub_10010DA98((uint64_t)v6, (uint64_t)v19);
  if (v25) {
    LOBYTE(v25) = v19[v16[12]] ^ 1;
  }
  sub_10010DAFC((uint64_t)v19);
  sub_1003DFF38(v25 & 1, (uint64_t)&v60);
  uint64_t v76 = qword_100981BA0[(char)v6[v24]];
  *((void *)&v71 + 1) = *(void *)&v6[v16[19]];
  sub_1003DFF58(v6[v16[11]], (uint64_t)&v60);
  sub_1003DFF78(v6[v16[15]], (uint64_t)&v60);
  sub_1003DFF98(v6[v16[16]], (uint64_t)&v60);
  sub_1003DFFB8(v6[v16[28]], (uint64_t)&v60);
  sub_1003DFFD8(v6[v16[35]], (uint64_t)&v60);
  sub_1003DFFF8(v6[v16[18]], (uint64_t)&v60);
  sub_1003E0018(v6[v16[23]], (uint64_t)&v60);
  sub_1003E0038(v6[v16[24]], (uint64_t)&v60);
  sub_10001AE98(v59, (uint64_t)v79, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v79) != 1)
  {
    v74[24] = v79[32];
    v74[25] = v79[34];
  }
  uint64_t v26 = v54;
  uint64_t v27 = v11;
  if (v6[v23] == 1) {
    LODWORD(v77) = v6[v16[22]];
  }
  uint64_t v28 = (uint64_t)v15;
  if (*v6 != 1)
  {
    uint64_t v29 = *(void *)&v6[v16[26]];
    *(void *)&long long v64 = *(void *)&v6[v16[25]];
    *(void *)&long long v72 = v29;
  }
  __int16 v63 = *((_WORD *)v6 + 5);
  uint64_t v30 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v54 + 16);
  v30(v15, &v6[v16[7]], v27);
  *((void *)&v64 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v65 = v31;
  v30(v15, &v6[v16[8]], v27);
  *((void *)&v65 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v66 = v32;
  uint64_t v33 = v27;
  uint64_t v34 = v53;
  sub_10016D1D8((uint64_t)&v6[v16[29]], v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v34, 1, v33) == 1)
  {
    uint64_t v35 = sub_10016D178(v34);
  }
  else
  {
    unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    int v51 = (void (*)(uint64_t, char *, uint64_t))v30;
    unint64_t v37 = v52;
    v36(v52, v34, v33);
    v51(v28, v37, v33);
    *((void *)&v66 + 1) = sub_1003E0058(v28);
    *(void *)&long long v67 = v38;
    sub_1003E0188((uint64_t)&v60);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v37, v33);
  }
  uint64_t v39 = &v6[v16[31]];
  if (v39[8]) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = *(void *)v39;
  }
  *((void *)&v67 + 1) = v40;
  if (v6[8])
  {
    unint64_t v41 = &v6[v16[36]];
    if (v41[4])
    {
      int v42 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v41 = v6 + 4;
  }
  int v42 = *(_DWORD *)v41;
LABEL_29:
  int v70 = v42;
  uint64_t v43 = &v6[v16[34]];
  if (v43[8]) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = __ROR8__(*(void *)v43, 32);
  }
  *(void *)&long long v71 = v44;
  __chkstk_darwin(v35);
  *(&v50 - 6) = v45;
  *(&v50 - 5) = (uint64_t)&v60;
  *(&v50 - 4) = v59;
  *(&v50 - 3) = (uint64_t)v6;
  uint64_t v46 = v56;
  *(&v50 - 2) = v55;
  *(&v50 - 1) = v46;
  sub_1003DF1B4(sub_1003E0164, (uint64_t)(&v50 - 8), v47, v48);
  return fpfs_free_metadata_tag_data();
}

uint64_t sub_1003DF120(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFB | v2;
  return result;
}

uint64_t sub_1003DF140(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 8;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFF7 | v2;
  return result;
}

uint64_t sub_1003DF160(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 2;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFD | v2;
  return result;
}

uint64_t sub_1003DF180(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFE | result;
  return result;
}

uint64_t sub_1003DF194(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 16;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFEF | v2;
  return result;
}

uint64_t sub_1003DF1B4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return a1(0);
  }
  __chkstk_darwin(a1);
  return sub_10096BD00();
}

uint64_t Dictionary<>.withUnsafeXattrs<A>(cb:)@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v55 = a4;
  uint64_t v54 = sub_10096BCB0();
  __chkstk_darwin(v54);
  uint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v61 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v62 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int v60 = "collaborationIdentifier";
  unint64_t v65 = 0x8000000100996D80;
  while (v11)
  {
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_21:
    uint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    if (*v22 != 0xD000000000000015 || v23 != v65)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v18);
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      if ((sub_10096D2D0() & 1) == 0)
      {
        uint64_t v63 = v24;
        uint64_t v64 = v23;
        uint64_t v51 = a2;
        int v52 = (unsigned char *)(v15 >> 62);
        swift_bridgeObjectRetain();
        sub_10001EBB0(v16, v15);
        sub_10096BC90();
        sub_10001F9C0();
        uint64_t v25 = sub_10096C8F0();
        (*v53)(v59, v54);
        uint64_t v26 = 0;
        switch((unint64_t)v52)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16)) {
              goto LABEL_55;
            }
            uint64_t v26 = (int)v26;
LABEL_29:
            BOOL v29 = __OFADD__(v26, 24);
            uint64_t v30 = v26 + 24;
            if (v29) {
              goto LABEL_51;
            }
            BOOL v29 = __OFADD__(v30, v25);
            uint64_t v31 = v30 + v25;
            if (v29) {
              goto LABEL_52;
            }
            if (__OFADD__(v31, 1)) {
              goto LABEL_53;
            }
            size_t v50 = v25;
            int v32 = (int)v52;
            uint64_t v58 = (void *)swift_slowAlloc();
            uint64_t v33 = 0;
            size_t v49 = v58 + 3;
            switch(v32)
            {
              case 1:
                LODWORD(v33) = HIDWORD(v16) - v16;
                if (__OFSUB__(HIDWORD(v16), v16)) {
                  goto LABEL_57;
                }
                uint64_t v33 = (int)v33;
LABEL_36:
                uint64_t v34 = v33;
                sub_10096AFC0();
                uint64_t v35 = v34;
                v58[2] = v34;
                goto LABEL_40;
              case 2:
                if (__OFSUB__(*(void *)(v16 + 24), *(void *)(v16 + 16))) {
                  goto LABEL_58;
                }
                sub_10096AFC0();
                uint64_t v37 = *(void *)(v16 + 16);
                uint64_t v36 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v36, v37);
                uint64_t v38 = v36 - v37;
                if (v29) {
                  goto LABEL_59;
                }
                v58[2] = v38;
                uint64_t v40 = *(void *)(v16 + 16);
                uint64_t v39 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v39, v40);
                uint64_t v35 = v39 - v40;
                if (v29) {
                  goto LABEL_60;
                }
LABEL_40:
                size_t v41 = v50;
                if (v50 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_54;
                }
                int v52 = (char *)v49 + v35;
                uint64_t v42 = sub_10096BCF0();
                swift_bridgeObjectRelease();
                uint64_t v43 = v52;
                memcpy(v52, (const void *)(v42 + 32), v41);
                swift_release();
                v43[v41] = 0;
                uint64_t v44 = v58;
                *uint64_t v58 = v13;
                v44[1] = v43;
                sub_10001E9C0(v16, v15);
                uint64_t v13 = v44;
                a2 = v51;
                break;
              case 3:
                goto LABEL_36;
              default:
                uint64_t v33 = BYTE6(v15);
                goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v16 + 16);
            uint64_t v27 = *(void *)(v16 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_29;
            }
            goto LABEL_56;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v26 = BYTE6(v15);
            goto LABEL_29;
        }
      }
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v19 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20)
  {
LABEL_20:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_21;
  }
  int64_t v21 = v19 + 3;
  if (v21 < v62)
  {
    unint64_t v20 = *(void *)(v61 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v62) {
          goto LABEL_42;
        }
        unint64_t v20 = *(void *)(v61 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x1003DF73CLL);
    }
    int64_t v12 = v21;
    goto LABEL_20;
  }
LABEL_42:
  swift_release();
  uint64_t v45 = v57;
  uint64_t result = v56(v13);
  if (v45)
  {
    if (v13)
    {
      do
      {
        uint64_t v47 = (void *)*v13;
        uint64_t result = swift_slowDealloc();
        uint64_t v13 = v47;
      }
      while (v47);
    }
  }
  else if (v13)
  {
    do
    {
      uint64_t v48 = (void *)*v13;
      uint64_t result = swift_slowDealloc();
      uint64_t v13 = v48;
    }
    while (v48);
  }
  return result;
}

uint64_t sub_1003DF75C@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v7) {
    return Dictionary<>.withUnsafeXattrs<A>(cb:)(a1, a2, v7, a3);
  }
  else {
    return a1(0);
  }
}

uint64_t sub_1003DF7DC(uint64_t (*a1)(void, void, uint64_t))
{
  uint64_t v3 = type metadata accessor for ItemMetadata();
  unsigned int v4 = (uint64_t *)(v1 + *(int *)(v3 + 132));
  unint64_t v5 = v4[1];
  if (v5 >> 60 == 15) {
    return a1(0, 0, 1);
  }
  uint64_t v7 = *v4;
  __chkstk_darwin(v3);
  sub_10001EBB0(v7, v5);
  sub_10096AF00();
  return sub_10001E9AC(v7, v5);
}

uint64_t sub_1003DF8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a2 + 176) = a1;
  sub_10001AE98(a3, (uint64_t)v17, &qword_100AD0EA0);
  int v12 = sub_1000DBD64((uint64_t)v17);
  if (v12 == 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v18;
  }
  if (v12 == 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v19;
  }
  uint64_t v16[2] = a7;
  v16[3] = a2;
  v16[4] = a4;
  v16[5] = a5;
  v16[6] = a6;
  return sub_1003DF1B4(sub_1003E020C, (uint64_t)v16, v13, v14);
}

uint64_t sub_1003DF9CC(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a2 + 192) = a1;
  uint64_t v11 = type metadata accessor for ItemMetadata();
  int v12 = (void *)((char *)a3 + *(int *)(v11 + 56));
  uint64_t v13 = v12[1];
  if (v13)
  {
    uint64_t v27 = *v12;
    uint64_t v28 = v13;
    uint64_t v25 = 47;
    unint64_t v26 = 0xE100000000000000;
    uint64_t v23 = 58;
    unint64_t v24 = 0xE100000000000000;
    unint64_t v22 = sub_10001F9C0();
    uint64_t v19 = &type metadata for String;
    unint64_t v20 = v22;
    uint64_t v11 = sub_10096C910();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v15 = 0;
  }
  __chkstk_darwin(v11);
  void v18[2] = a6;
  v18[3] = a2;
  uint64_t v19 = a3;
  unint64_t v20 = a4;
  uint64_t v21 = a5;
  sub_1003DF1B4(sub_1003E0238, (uint64_t)v18, v16, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DFB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  *(void *)(a2 + 160) = a1;
  uint64_t v6 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6) {
    return a4(a2);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  id v11[4] = sub_1003E03CC;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100949F40;
  v11[3] = &unk_100A88560;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

uint64_t sub_1003DFC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  int64_t v8 = *(void *)(a2 + 16);
  int64_t v9 = *(void *)(a3 + 16);
  if (v8 >= v9) {
    return v8 < v9;
  }
  if (v8 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = a3 + 32;
  swift_bridgeObjectRetain();
  NSString v11 = sub_10096BC00();
  swift_bridgeObjectRelease();
  if (!a1)
  {
LABEL_6:

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *v6 + 1;
    if (!__OFADD__(*v6, 1))
    {
      swift_beginAccess();
      *uint64_t v6 = v12;
      return v8 < v9;
    }
    goto LABEL_10;
  }
  *(void *)a1 = [v11 UTF8String];
  uint64_t result = swift_beginAccess();
  if (*v6 < (unint64_t)v9)
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(v10 + 24 * *v6 + 16);
    goto LABEL_6;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003DFDC8(uint64_t *a1, uint64_t a2)
{
  if (!a1) {
    return 1;
  }
  int v2 = (void *)(a2 + 16);
  uint64_t v3 = *a1;
  unsigned int v4 = *((unsigned __int8 *)a1 + 8);
  uint64_t result = swift_beginAccess();
  if (!*v2)
  {
LABEL_12:
    swift_endAccess();
    return 1;
  }
  if (v3)
  {
    sub_10096BDE0();
    sub_10001F9C0();
    uint64_t v6 = sub_10096C910();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    if (v4 <= 1) {
      char v9 = 1;
    }
    else {
      char v9 = v4;
    }
    uint64_t v10 = (void *)*v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *int v2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v10 = sub_1006A41B0(0, v10[2] + 1, 1, v10);
      *int v2 = v10;
    }
    unint64_t v13 = v10[2];
    unint64_t v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t v10 = sub_1006A41B0((void *)(v12 > 1), v13 + 1, 1, v10);
      *int v2 = v10;
    }
    v10[2] = v13 + 1;
    uint64_t v14 = &v10[3 * v13];
    id v14[4] = v6;
    v14[5] = v8;
    *((unsigned char *)v14 + 48) = v9;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DFF38(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 32;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFDF | v2;
  return result;
}

uint64_t sub_1003DFF58(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 128;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFF7F | v2;
  return result;
}

uint64_t sub_1003DFF78(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFEFF | v2;
  return result;
}

uint64_t sub_1003DFF98(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 512;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFDFF | v2;
  return result;
}

uint64_t sub_1003DFFB8(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 2048;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFF7FF | v2;
  return result;
}

uint64_t sub_1003DFFD8(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 1024;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFBFF | v2;
  return result;
}

uint64_t sub_1003DFFF8(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x4000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFBFFF | v2;
  return result;
}

uint64_t sub_1003E0018(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x8000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFF7FFF | v2;
  return result;
}

uint64_t sub_1003E0038(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFEFFFF | v2;
  return result;
}

uint64_t sub_1003E0058(uint64_t a1)
{
  uint64_t result = sub_10096B080();
  double v4 = v3;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = sub_10096B0E0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  double v6 = (v4 - (double)(uint64_t)v4) * 1000000000.0;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 < 9.22337204e18) {
    return (uint64_t)v4;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1003E0164(uint64_t a1)
{
  return sub_1003DF8FC(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

uint64_t sub_1003E0188(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 0x1000u;
  return result;
}

uint64_t sub_1003E0198()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003E01D0(uint64_t *a1)
{
  return sub_1003DFDC8(a1, v1);
}

uint64_t sub_1003E01D8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 1) & 1;
}

uint64_t sub_1003E01E4()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1003E020C(uint64_t a1)
{
  return sub_1003E0350(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1003DF9CC);
}

uint64_t sub_1003E0238(uint64_t a1)
{
  *(void *)(*(void *)(v1 + 24) + 136) = a1;
  return sub_1003DF7DC((uint64_t (*)(void, void, uint64_t))sub_1003E0298);
}

uint64_t sub_1003E0298@<X0>(uint64_t a1@<X8>)
{
  v3[2] = *(void *)(v1 + 16);
  int8x16_t v4 = vextq_s8(*(int8x16_t *)(v1 + 24), *(int8x16_t *)(v1 + 24), 8uLL);
  long long v5 = *(_OWORD *)(v1 + 40);
  return sub_1003DF75C((uint64_t (*)(void *))sub_1003E0324, (uint64_t)v3, a1);
}

uint64_t sub_1003E02F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 24))(a1, a2, 0);
}

uint64_t sub_1003E0324(uint64_t a1)
{
  return sub_1003E0350(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1003DFB14);
}

uint64_t sub_1003E0350(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_1003E037C()
{
  return swift_deallocObject();
}

uint64_t sub_1003E038C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003E03CC(uint64_t a1)
{
  return sub_1003DFC88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1003E03DC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (!(a1 >> 62) || v2 == 1)
  {
    sub_10034876C(a1);
    double v3 = (void *)sub_10096ABE0();
    sub_10096CBD0(30);
    if (v2) {
      v4._countAndFlagsBits = 0xD000000000000011;
    }
    else {
      v4._countAndFlagsBits = 0x6573616261746164;
    }
    if (v2) {
      long long v5 = (void *)0x800000010099D4E0;
    }
    else {
      long long v5 = (void *)0xED0000726F727245;
    }
    v4._object = v5;
    sub_10096BDC0(v4);
    swift_bridgeObjectRelease();
    v24._countAndFlagsBits = 0x6F44726F72726520;
    v24._object = (void *)0xED00003A6E69616DLL;
    sub_10096BDC0(v24);
    id v6 = [v3 domain];
    uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    char v9 = v8;

    v25._countAndFlagsBits = v7;
    v25._object = v9;
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    v26._countAndFlagsBits = 0x6F43726F72726520;
    v26._object = (void *)0xEB000000003A6564;
    sub_10096BDC0(v26);
    [v3 code];
    v27._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v27);
    swift_bridgeObjectRelease();
    id v10 = [v3 underlyingErrors];
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    uint64_t v11 = sub_10096C0A0();

    if (*(void *)(v11 + 16))
    {
      swift_errorRetain();
      swift_bridgeObjectRelease();
      sub_100011348(0, (unint64_t *)&qword_100ACECC0);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_14:
        sub_10096CBD0(20);
        swift_bridgeObjectRelease();
        swift_getErrorValue();
        id v17 = Error.prettyDescription.getter(v22);
        id v18 = [v17 description];
        uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v21 = v20;

        v32._countAndFlagsBits = v19;
        v32._object = v21;
        sub_10096BDC0(v32);

        swift_bridgeObjectRelease();
        v33._countAndFlagsBits = 0xD000000000000012;
        v33._object = (void *)0x80000001009A0B00;
        sub_10096BDC0(v33);

        sub_100348788(a1);
        swift_bridgeObjectRelease();
        return 0;
      }
      sub_10096CBD0(48);
      swift_bridgeObjectRelease();
      id v12 = [v23 domain];
      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v15 = v14;

      v28._countAndFlagsBits = v13;
      v28._object = v15;
      sub_10096BDC0(v28);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 0xD000000000000015;
      v29._object = (void *)0x80000001009A0B40;
      sub_10096BDC0(v29);
      [v23 code];
      v30._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v30);
      swift_bridgeObjectRelease();
      v31._countAndFlagsBits = 0xD000000000000017;
      v31._object = (void *)0x80000001009A0B20;
      sub_10096BDC0(v31);
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  unint64_t result = 0x74726F706D696572;
  switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
  {
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x526C616974726170;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1003E08B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v47 = a2;
  uint64_t v4 = sub_10096A630();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = a3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = AssociatedTypeWitness;
  *(void *)&long long v53 = AssociatedTypeWitness;
  *((void *)&v53 + 1) = v7;
  *(void *)&long long v54 = AssociatedConformanceWitness;
  *((void *)&v54 + 1) = v9;
  uint64_t v41 = v9;
  uint64_t v10 = type metadata accessor for ThrottlingKey();
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v48 = v10;
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v45 = (char *)&v38 - v18;
  type metadata accessor for Code(0);
  *(void *)&long long v53 = -2010;
  sub_1003FB684((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
  uint64_t v19 = v49;
  if (sub_10096AA60() & 1) != 0 || (*(void *)&long long v53 = -2005, (sub_10096AA60()))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v47, v11);
    uint64_t v20 = v50;
    uint64_t v21 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v15, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      return 0;
    }
    uint64_t v22 = v45;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v45, v15, v21);
    uint64_t v23 = v44;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v44, v22, v21);
    *(void *)&long long v53 = v43;
    *((void *)&v53 + 1) = v7;
    *(void *)&long long v54 = v42;
    *((void *)&v54 + 1) = v41;
    uint64_t v24 = type metadata accessor for ReconciliationID();
    unsigned int v25 = v23[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v25 >= 2)
      {
        if (v25 != 10) {
          goto LABEL_25;
        }
LABEL_13:
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        if (!sub_1005152D8())
        {
LABEL_14:
          (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v21);
          return 0;
        }
LABEL_17:
        Swift::String v27 = (void *)sub_10096ABE0();
        id v28 = [v27 userInfo];
        uint64_t v29 = sub_10096B9C0();

        uint64_t v30 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        if (*(void *)(v29 + 16) && (unint64_t v32 = sub_10000DDD0(v30, v31), (v33 & 1) != 0))
        {
          sub_1001FAC78(*(void *)(v29 + 56) + 32 * v32, (uint64_t)&v53);
        }
        else
        {
          long long v53 = 0u;
          long long v54 = 0u;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v21);
        if (*((void *)&v54 + 1))
        {
          if (swift_dynamicCast() & 1) != 0 && (v52[0]) {
            return 0;
          }
        }
        else
        {
          sub_10017D1A4((uint64_t)&v53);
        }
        return 1;
      }
    }
    else
    {
      if (v25 < 2) {
        goto LABEL_13;
      }
      if (v25 != 10)
      {
LABEL_25:
        (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v21);
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        return 0;
      }
    }
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    if (sub_1005152D8()) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  LODWORD(v53) = sub_10096A6B0();
  sub_100045CB4();
  if ((sub_10096AA60() & 1) == 0)
  {
    LODWORD(v53) = sub_10096A670();
    if ((sub_10096AA60() & 1) == 0)
    {
      *(void *)&long long v53 = -1004;
      if (sub_10096AA60()) {
        return 0;
      }
      *(void *)&long long v53 = -1000;
      if (sub_10096AA60()) {
        return 0;
      }
      *(void *)&long long v53 = -1003;
      if (sub_10096AA60()) {
        return 0;
      }
      LODWORD(v53) = sub_10096A730();
      if (sub_10096AA60()) {
        return 0;
      }
      uint64_t v34 = v38;
      sub_10096A530();
      sub_1003FB684((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
      uint64_t v35 = v40;
      char v36 = sub_10096AA60();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
      if (v36) {
        return 0;
      }
      uint64_t v55 = v19;
      swift_errorRetain();
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      if (swift_dynamicCast())
      {
        sub_1003ACB84((uint64_t)&v53, (uint64_t)v51);
        sub_1003ACB84((uint64_t)v51, (uint64_t)v52);
        if (sub_10021FECC((uint64_t)v52) == 19)
        {
          swift_errorRelease();
          return 1;
        }
        sub_10021FD38((uint64_t)v51);
      }
      swift_errorRelease();
      return 0;
    }
  }
  return sub_1005152D8();
}

uint64_t sub_1003E1168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v106 = a1;
  uint64_t v102 = a7;
  uint64_t v94 = a5;
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v9 = *(void *)(*(void *)a6 + 88);
  uint64_t v10 = *(void *)(*(void *)a6 + 96);
  uint64_t v11 = *(void *)(*(void *)a6 + 104);
  uint64_t v109 = *(void *)(*(void *)a6 + 80);
  uint64_t v110 = v9;
  uint64_t v111 = v10;
  uint64_t v112 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationMutation();
  uint64_t v100 = *(void *)(v12 - 8);
  uint64_t v101 = v12;
  __chkstk_darwin(v12);
  uint64_t v104 = v10;
  uint64_t v105 = (char *)&v84 - v13;
  uint64_t v103 = v109;
  uint64_t v110 = v9;
  uint64_t v111 = v10;
  uint64_t v112 = v11;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v84 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v108 = (char *)&v84 - v23;
  uint64_t v24 = a2;
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v24, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v14) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v86 = a6;
  unsigned int v85 = v22;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v108, v19, v14);
  uint64_t v28 = v103;
  uint64_t v109 = v103;
  uint64_t v110 = v9;
  uint64_t v111 = v104;
  uint64_t v112 = v11;
  uint64_t v29 = type metadata accessor for JobResult();
  uint64_t v95 = v26;
  uint64_t v96 = v29;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v99 = v14;
  uint64_t v33 = AssociatedConformanceWitness;
  uint64_t v87 = v11;
  uint64_t v88 = v9;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v109 = AssociatedTypeWitness;
  uint64_t v110 = v31;
  uint64_t v111 = v33;
  uint64_t v112 = v34;
  type metadata accessor for ReconciliationID();
  uint64_t v35 = type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = (uint64_t)v105;
  uint64_t v37 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  uint64_t v93 = AssociatedTypeWitness;
  unsigned int v90 = v39;
  uint64_t v89 = v38 + 16;
  v39(v105, v106, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v37 = 262;
  uint64_t v92 = v35;
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v101;
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v102;
  sub_100591758(v102, v36);
  uint64_t v42 = v41;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v43(v36, v40);
  uint64_t v44 = v28;
  uint64_t v45 = type metadata accessor for ItemReconciliationHalf();
  if (v108[*(int *)(v45 + 60)] == 1)
  {
    uint64_t v46 = v42;
    uint64_t v47 = (uint64_t)v105;
    uint64_t v48 = v43;
    uint64_t v49 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
    v90(v105, v106, v93);
    swift_storeEnumTagMultiPayload();
    *uint64_t v49 = 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(v46, v47);
    v48(v47, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v108, v99);
  }
  uint64_t v50 = v106;
  if (v108[*(int *)(v99 + 56)] == 1)
  {
    uint64_t v101 = v45;
    uint64_t v51 = *(void *)(v86 + 24);
    uint64_t v52 = v88;
    uint64_t v109 = v28;
    uint64_t v110 = v88;
    uint64_t v53 = v104;
    uint64_t v54 = v87;
    uint64_t v111 = v104;
    uint64_t v112 = v87;
    uint64_t v105 = (char *)type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v56 = sub_10096C0D0();
    uint64_t v109 = v44;
    uint64_t v110 = v52;
    uint64_t v111 = v53;
    uint64_t v112 = v54;
    uint64_t v57 = v54;
    *uint64_t v58 = type metadata accessor for Ingestion.FaultDirectoryInTree();
    uint64_t v59 = sub_1003FC080(v56);
    uint64_t v60 = v50;
    uint64_t v61 = v107;
    uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v51 + 272))(v50, v59);
    if (v61)
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v108, v99);
      return swift_bridgeObjectRelease();
    }
    uint64_t v64 = v62;
    swift_bridgeObjectRelease();
    uint64_t v113 = v64;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C450();
    swift_bridgeObjectRelease();
    uint64_t v107 = 0;
    if (v109)
    {
      if (*(unsigned char *)(v109 + 112) == 1)
      {
        uint64_t v65 = sub_100610C18();
        swift_retain();
        uint64_t v66 = v102;
        sub_1004D4360(v102, v65);
        swift_release();
        uint64_t v67 = v57;
        uint64_t v69 = v97;
        uint64_t v68 = v98;
        uint64_t v70 = v88;
LABEL_20:
        uint64_t v82 = v103;
        swift_release();
        uint64_t v109 = v82;
        uint64_t v110 = v70;
        uint64_t v111 = v104;
        uint64_t v112 = v67;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v83 = sub_1008AA760(v60, v69, v68, 2048);
        sub_1004D4360(v66, v83);
        swift_release();
        uint64_t v63 = *(uint64_t (**)(void))(v95 + 8);
        return v63();
      }
      swift_release();
    }
    uint64_t v71 = v102;
    uint64_t v72 = v99;
    long long v73 = v108;
    BOOL v74 = sub_100827AAC(v99);
    uint64_t v75 = v95;
    uint64_t v76 = v85;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v85, v73, v72);
    uint64_t v69 = v97;
    uint64_t v68 = v98;
    uint64_t v70 = v88;
    if (v74)
    {
      uint64_t v77 = *(void *)&v76[*(int *)(v101 + 36)];
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v72);
      if ((v77 & 0x10) == 0)
      {
        uint64_t v78 = v103;
        uint64_t v79 = v104;
        uint64_t v80 = v94;
        uint64_t v66 = v71;
LABEL_19:
        uint64_t v109 = v78;
        uint64_t v110 = v70;
        uint64_t v67 = v87;
        uint64_t v111 = v79;
        uint64_t v112 = v87;
        type metadata accessor for DiskImport.UnfaultDirectoryAndChildren();
        swift_allocObject();
        uint64_t v81 = sub_100610B30(v60, v69, v68, v80);
        sub_1004D4360(v66, v81);
        goto LABEL_20;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v72);
    }
    uint64_t v78 = v103;
    uint64_t v79 = v104;
    uint64_t v80 = v94;
    uint64_t v66 = v71;
    if ((v94 & 0x20) == 0) {
      uint64_t v80 = v94 | 0x20;
    }
    goto LABEL_19;
  }
  uint64_t v63 = *(uint64_t (**)(void))(v95 + 8);
  return v63();
}

void sub_1003E1A94()
{
  sub_1003E1AB4();
  qword_100B0B150 = v0;
}

void sub_1003E1AB4()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_DELAY, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_MIN);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  if (XPC_ACTIVITY_CPU_INTENSIVE)
  {
    xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_CPU_INTENSIVE, 1);
    if (XPC_ACTIVITY_DISK_INTENSIVE)
    {
      xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_DISK_INTENSIVE, 1);
      id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
      NSString v2 = sub_10096BC00();
      [v1 initWithLabel:v2 options:1 criteria:v0];

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1003E1C10()
{
  id result = sub_1003E1C30();
  qword_100B0B158 = (uint64_t)result;
  return result;
}

id sub_1003E1C30()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_DELAY, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_MIN);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
  NSString v2 = sub_10096BC00();
  id v3 = [v1 initWithLabel:v2 criteria:v0];

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1003E1D48()
{
  return 128;
}

uint64_t TrackingContinuation.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000268E0(a1);
  return v2;
}

uint64_t type metadata accessor for DiskImportContinuation()
{
  return self;
}

unint64_t sub_1003E1DCC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9libfssync15EvictionUrgencyO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003E1DF8()
{
  uint64_t result = 0x676E69646E6570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65726170;
      break;
    case 2:
      uint64_t result = 0x7463656C6573;
      break;
    case 3:
      uint64_t result = 1802725732;
      break;
    case 4:
      uint64_t result = 0x72656469766F7270;
      break;
    case 5:
      uint64_t result = 0x70756E61656C63;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1003E1EAC(void *a1@<X8>)
{
  *a1 = &off_100A6A638;
}

uint64_t sub_1003E1EBC(void *a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v4 = *(void *)(*a1 + 88);
  uint64_t v5 = *(void *)(*a1 + 96);
  uint64_t v6 = *(void *)(*a1 + 104);
  uint64_t v94 = *(void *)(*a1 + 80);
  uint64_t v3 = v94;
  uint64_t v95 = v4;
  uint64_t v96 = v5;
  uint64_t v97 = v6;
  uint64_t v7 = type metadata accessor for ReconciliationMutation();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v73 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  unsigned int v85 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v73 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v77 = v3;
  uint64_t v78 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v81 = v6;
  uint64_t v82 = v4;
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v13;
  uint64_t v84 = AssociatedConformanceWitness;
  uint64_t v96 = AssociatedConformanceWitness;
  uint64_t v97 = v15;
  uint64_t v16 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = (void *)swift_getTupleTypeMetadata2();
  uint64_t v89 = sub_10096C890();
  uint64_t v92 = *(uint64_t (***)(char *, uint64_t))(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v91 = *(void *)(v16 - 8);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v87 = a1;
  uint64_t v29 = a1[2];
  uint64_t v30 = v98;
  (*(void (**)(uint64_t))(*(void *)v29 + 224))(v26);
  if (v30) {
    return v18 & 1;
  }
  unint64_t v32 = v92;
  BOOL v74 = v25;
  uint64_t v75 = v28;
  uint64_t v98 = 0;
  uint64_t v76 = v16;
  uint64_t v73 = AssociatedTypeWitness;
  uint64_t v33 = TupleTypeMetadata2;
  if ((*(unsigned int (**)(char *, uint64_t, void *))(*(TupleTypeMetadata2 - 1) + 48))(v18, 1, TupleTypeMetadata2) != 1)
  {
    char v37 = v18[*((int *)v33 + 12)];
    uint64_t v38 = *(int *)(v19 + 48);
    uint64_t v39 = v91;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
    uint64_t v41 = v18;
    uint64_t v42 = v76;
    v40(v22, v41, v76);
    v22[v38] = v37;
    int v43 = v22[*(int *)(v19 + 48)];
    uint64_t v44 = v75;
    uint64_t v45 = v22;
    uint64_t v46 = v42;
    v40(v75, v45, v42);
    uint64_t v47 = v39;
    uint64_t v48 = (uint64_t)v44;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    uint64_t v50 = v74;
    v49(v74, v48, v46);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v50, v46);
LABEL_16:
      uint64_t v71 = (void *)(*(uint64_t (**)(uint64_t))(*v87 + 264))(v51);
      __chkstk_darwin(v71);
      *(&v73 - 2) = v90;
      *(&v73 - 1) = v48;
      char v72 = sub_10070C2F0((uint64_t)sub_1003FB8A8, (uint64_t)(&v73 - 4));

      LOBYTE(v18) = v72 & 1;
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
      return v18 & 1;
    }
    LODWORD(v92) = v43;
    TupleTypeMetadata2 = v49;
    uint64_t v52 = v86;
    uint64_t v53 = v88;
    uint64_t v54 = v73;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v50, v73);
    uint64_t v55 = v84;
    char v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 64))(v54, v84);
    uint64_t v57 = v85;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v85, v53, v54);
    if (v56)
    {
      uint64_t v58 = *(uint64_t (***)(char *, uint64_t))(v52 + 8);
      uint64_t v89 = (v52 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v92 = v58;
      ((void (*)(char *, uint64_t))v58)(v57, v54);
      uint64_t v59 = v82;
      uint64_t v60 = (uint64_t)v83;
      uint64_t v61 = v81;
    }
    else
    {
      int v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 72))(v54, v55);
      uint64_t v63 = *(void (**)(char *, uint64_t))(v52 + 8);
      v63(v57, v54);
      uint64_t v64 = v52 + 8;
      uint64_t v59 = v82;
      uint64_t v60 = (uint64_t)v83;
      uint64_t v61 = v81;
      if (((v62 | v92) & 1) == 0)
      {
        uint64_t v51 = ((uint64_t (*)(char *, uint64_t))v63)(v53, v54);
        uint64_t v47 = v91;
        goto LABEL_16;
      }
      uint64_t v89 = v64 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v92 = (uint64_t (**)(char *, uint64_t))v63;
    }
    uint64_t v94 = v77;
    uint64_t v95 = v59;
    uint64_t v96 = v78;
    uint64_t v97 = v61;
    type metadata accessor for JobResult();
    uint64_t v86 = type metadata accessor for ReconciliationSideMutation();
    uint64_t v87 = (void *)swift_getTupleTypeMetadata2();
    uint64_t v65 = v46;
    uint64_t v66 = (_WORD *)(v60 + *((int *)v87 + 12));
    uint64_t v18 = (char *)TupleTypeMetadata2;
    ((void (*)(uint64_t, uint64_t, uint64_t))TupleTypeMetadata2)(v60, v48, v65);
    _WORD *v66 = 3;
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v48;
    uint64_t v68 = v80;
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = v90;
    sub_100591758(v90, v60);
    unsigned int v85 = *(char **)(v79 + 8);
    ((void (*)(uint64_t, uint64_t))v85)(v60, v68);
    uint64_t v70 = (unsigned char *)(v60 + *((int *)v87 + 12));
    ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v60, v67, v76);
    *uint64_t v70 = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(v69, v60);
    ((void (*)(uint64_t, uint64_t))v85)(v60, v68);
    ((void (*)(char *, uint64_t))v92)(v88, v73);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v67, v76);
    LOBYTE(v18) = 1;
    return v18 & 1;
  }
  uint64_t v34 = v32[1](v18, v89);
  uint64_t v35 = v98;
  char v36 = (*(uint64_t (**)(uint64_t))(*(void *)v29 + 232))(v34);
  if (!v35)
  {
    if ((v36 & 1) == 0) {
      sub_1003E2B00(v87, v90);
    }
    LOBYTE(v18) = 1;
  }
  return v18 & 1;
}

uint64_t sub_1003E27DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 104);
  uint64_t v28 = *(void *)(*(void *)a1 + 80);
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v23 = type metadata accessor for ReconciliationMutation();
  uint64_t v27 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)v22 - v6;
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  _OWORD v22[2] = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = v9;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v15 = *(void *)(v12 - 8);
  v22[0] = *(void *)(v15 + 16);
  v22[1] = v15 + 16;
  uint64_t v16 = v24;
  ((void (*)(char *, uint64_t, uint64_t))v22[0])(v7, v24, v12);
  *(_WORD *)uint64_t v14 = 3;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v23;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v25;
  sub_100591758(v25, (uint64_t)v7);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 += 8;
  v19(v7, v17);
  uint64_t v20 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v22[0])(v7, v16, v12);
  *uint64_t v20 = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_100591758(v18, (uint64_t)v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v7, v17);
  *uint64_t v26 = 1;
  return result;
}

uint64_t sub_1003E2B00(void *a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v3 = (void *)*a1;
  uint64_t v23 = sub_10096B0E0();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)&AssociatedTypeWitness - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v3[13];
  uint64_t v8 = v3[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v11 = (char *)&AssociatedTypeWitness - v10;
  id v12 = [self queue];
  sub_100270A48(0, 0, (uint64_t)"scheduleDiskImportFinished(db:result:)", 38, 2, (uint64_t)sub_1003FB858, (uint64_t)a1);

  uint64_t v13 = v3[10];
  uint64_t v14 = v3[12];
  uint64_t v24 = v13;
  uint64_t v25 = v8;
  uint64_t v26 = v14;
  uint64_t v27 = v7;
  type metadata accessor for JobResult();
  uint64_t v24 = v8;
  uint64_t v25 = v13;
  uint64_t v26 = v7;
  uint64_t v27 = v14;
  type metadata accessor for DiskImport.DiskImportFinished();
  sub_10085378C();
  sub_10096B0D0();
  sub_10096B080();
  double v16 = v15;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  double v18 = v16 * 1000000000.0;
  if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v18 < 9.22337204e18)
  {
    uint64_t v19 = (uint64_t)v18;
    swift_allocObject();
    uint64_t v20 = sub_100610B30((uint64_t)v11, 0x2000000000000000, v19, 0x20000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    sub_1004D7588(v22, v20);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1003E2E28()
{
  return 0xD000000000000014;
}

uint64_t sub_1003E2E44(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v19 = a5;
  uint64_t v20 = a4;
  uint64_t v21 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_10096C890();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v19 - v11;
  if ((*(unsigned char *)(v5 + 140) & 2) != 0)
  {
    uint64_t v15 = v21;
    uint64_t v16 = a1[2];
    (*(void (**)(uint64_t))(*(void *)v16 + 224))(v10);
    int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v17 == 1 && ((*(uint64_t (**)(uint64_t))(*(void *)v16 + 232))(v18) & 1) == 0) {
      sub_1003E2B00(a1, v15);
    }
  }
  else if ((sub_1003E1EBC(a1, v21) & 1) == 0)
  {
    type metadata accessor for DiskImportContinuation();
    uint64_t v13 = swift_allocObject();
    v20(v13);
    return swift_release();
  }
  return ((uint64_t (*)(void, void, void, void))v20)(0, 0, 0, 0);
}

uint64_t type metadata accessor for DiskImport.ContinueDiskImport()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003E31A8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1003E31C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v83 = a5;
  uint64_t v84 = a4;
  uint64_t v95 = a3;
  uint64_t v112 = a2;
  uint64_t v8 = *v6;
  uint64_t v10 = *(void *)(*v6 + 608);
  uint64_t v11 = *(void *)(*v6 + 616);
  uint64_t v12 = *(void *)(*v6 + 624);
  uint64_t v113 = *(void *)(*v6 + 600);
  uint64_t v9 = v113;
  uint64_t v114 = v10;
  uint64_t v115 = v11;
  uint64_t v116 = v12;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v86 = sub_10096C890();
  uint64_t v106 = *(void *)(v86 - 8);
  uint64_t v14 = __chkstk_darwin(v86);
  uint64_t v100 = (char *)&v77 - v15;
  uint64_t v93 = v13;
  uint64_t v102 = *(void *)(v13 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unsigned int v85 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v90 = (char *)&v77 - v18;
  uint64_t v113 = v9;
  uint64_t v114 = v10;
  uint64_t v96 = v10;
  uint64_t v115 = v11;
  uint64_t v116 = v12;
  uint64_t v111 = v12;
  uint64_t v92 = type metadata accessor for ReconciliationMutation();
  uint64_t v103 = *(void (***)(char *, uint64_t))(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v20 = (char *)&v77 - v19;
  uint64_t v101 = v9;
  uint64_t v21 = type metadata accessor for SnapshotItem();
  uint64_t v94 = *(void *)(v21 - 8);
  uint64_t v22 = *(void *)(v94 + 64);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v91 = a1;
  uint64_t v27 = (uint64_t)v6 + *(void *)(v8 + 576);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 32) + 472))(v27, v112);
  int v108 = v26;
  uint64_t v109 = 0;
  uint64_t v89 = v20;
  uint64_t v78 = v29;
  uint64_t v98 = v11;
  uint64_t v30 = sub_10096C1A0();
  uint64_t v110 = v6;
  uint64_t v31 = (uint64_t)v100;
  uint64_t v32 = v27;
  uint64_t v33 = v94;
  uint64_t v34 = v28;
  if (v30)
  {
    uint64_t v35 = 0;
    uint64_t v107 = (void (**)(char *, uint64_t *, uint64_t))(v94 + 16);
    uint64_t v105 = (void (**)(char *, char *, uint64_t))(v94 + 32);
    uint64_t v88 = (void (**)(uint64_t, uint64_t))(v103 + 1);
    uint64_t v103 = (void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    uint64_t v81 = (void (**)(char *, uint64_t, uint64_t))(v102 + 32);
    uint64_t v79 = (void (**)(char *, char *, uint64_t))(v102 + 16);
    uint64_t v82 = (void (**)(char *, uint64_t))(v102 + 8);
    uint64_t v80 = (void (**)(uint64_t, uint64_t))(v106 + 8);
    uint64_t v97 = v32;
    uint64_t v102 = v22;
    uint64_t v106 = v28;
    uint64_t v104 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    do
    {
      BOOL v36 = sub_10096C130();
      sub_10096C0E0();
      if (v36)
      {
        char v37 = v108;
        (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v108, v34+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v35, v21);
        uint64_t v38 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v22 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v113 = result;
        uint64_t v69 = v108;
        (*v107)(v108, &v113, v21);
        char v37 = v69;
        swift_unknownObjectRelease();
        uint64_t v34 = v106;
        uint64_t v38 = v35 + 1;
        if (__OFADD__(v35, 1))
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      (*v105)(v24, v37, v21);
      if ((v110[17] & 0x20) != 0)
      {
        uint64_t v113 = v101;
        uint64_t v114 = v96;
        uint64_t v115 = v98;
        uint64_t v116 = v111;
        uint64_t v99 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v40 = swift_getAssociatedTypeWitness();
        uint64_t v112 = v38;
        uint64_t v41 = v40;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v43 = swift_getAssociatedConformanceWitness();
        uint64_t v113 = AssociatedTypeWitness;
        uint64_t v114 = v41;
        uint64_t v115 = AssociatedConformanceWitness;
        uint64_t v116 = v43;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v45 = (uint64_t)v89;
        uint64_t v46 = &v89[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
        uint64_t v48 = AssociatedTypeWitness;
        uint64_t v32 = v97;
        v47(v89, v104, v48);
        swift_storeEnumTagMultiPayload();
        *(_WORD *)uint64_t v46 = 262;
        uint64_t v31 = (uint64_t)v100;
        uint64_t v38 = v112;
        uint64_t v49 = v95;
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = v92;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v49, v45);
        uint64_t v51 = v45;
        uint64_t v33 = v94;
        uint64_t v24 = v104;
        uint64_t v52 = v50;
        uint64_t v34 = v106;
        uint64_t v22 = v102;
        (*v88)(v51, v52);
      }
      uint64_t WitnessTable = swift_getWitnessTable();
      if (FileItem.kind.getter(v21, WitnessTable) == 1)
      {
        uint64_t v54 = v109;
        sub_1000DEDD8((uint64_t)v24, v31);
        uint64_t v109 = v54;
        if (v54)
        {
          swift_release();
          (*v103)(v24, v21);
          swift_bridgeObjectRelease();
          uint64_t v76 = v109;
          swift_errorRetain();
          v84(0, 0, 0, v76);
          swift_errorRelease();
          return swift_errorRelease();
        }
        uint64_t v55 = v93;
        if ((*v87)(v31, 1, v93) != 1)
        {
          uint64_t v112 = v38;
          char v56 = v90;
          (*v81)(v90, v31, v55);
          uint64_t v57 = type metadata accessor for ItemReconciliationHalf();
          int v58 = v56[*(int *)(v57 + 56)];
          if (v58 == 6)
          {
            uint64_t v59 = v85;
            (*v79)(v85, v56, v55);
            uint64_t v60 = *v82;
            goto LABEL_17;
          }
          uint64_t v59 = v85;
          (*v79)(v85, v56, v55);
          uint64_t v60 = *v82;
          if (v58 == 1)
          {
            v60(v59, v55);
            goto LABEL_19;
          }
LABEL_17:
          int v61 = v59[*(int *)(v57 + 56)];
          v60(v59, v55);
          if (v61)
          {
            int v62 = v90;
            goto LABEL_21;
          }
LABEL_19:
          uint64_t v63 = v90;
          if (v90[*(int *)(v57 + 60)])
          {
            int v62 = v90;
LABEL_21:
            v60(v62, v55);
          }
          else
          {
            uint64_t v64 = v101;
            uint64_t v65 = v96;
            uint64_t v113 = v101;
            uint64_t v114 = v96;
            uint64_t v66 = v98;
            uint64_t v115 = v98;
            uint64_t v116 = v111;
            type metadata accessor for JobResult();
            uint64_t v113 = v64;
            uint64_t v114 = v65;
            uint64_t v115 = v66;
            uint64_t v116 = v111;
            type metadata accessor for Ingestion.UnfaultDirectoryInTree();
            uint64_t v67 = sub_1008AA5E8((uint64_t)v24, v110[15], v110[16], v110[17] | 0x20000);
            sub_1004D4360(v95, v67);
            swift_release();
            v60(v63, v93);
          }
          (*v103)(v24, v21);
          uint64_t v31 = (uint64_t)v100;
          uint64_t v32 = v97;
          uint64_t v22 = v102;
          uint64_t v34 = v106;
          uint64_t v38 = v112;
          goto LABEL_4;
        }
        (*v103)(v24, v21);
        (*v80)(v31, v86);
        uint64_t v22 = v102;
        uint64_t v34 = v106;
      }
      else
      {
        (*v103)(v24, v21);
      }
LABEL_4:
      ++v35;
    }
    while (v38 != sub_10096C1A0());
  }
  swift_bridgeObjectRelease();
  uint64_t v70 = v98;
  if (!v78)
  {
    uint64_t v71 = v101;
    uint64_t v72 = v96;
    uint64_t v113 = v101;
    uint64_t v114 = v96;
    uint64_t v73 = v111;
    uint64_t v115 = v98;
    uint64_t v116 = v111;
    type metadata accessor for JobResult();
    uint64_t v113 = v71;
    uint64_t v114 = v72;
    uint64_t v115 = v70;
    uint64_t v116 = v73;
    type metadata accessor for Ingestion.UnfaultDirectoryInTree();
    uint64_t v74 = sub_1008AA5E8(v32, v110[15], v110[16], v110[17] | 0x20000);
    sub_1004D4360(v95, v74);
    swift_release();
  }
  uint64_t v75 = swift_retain();
  v84(v75, 0, 0, 0);
  return swift_release_n();
}

uint64_t type metadata accessor for DiskImport.UnfaultDirectoryAndChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003E3D68()
{
  return 0xD000000000000015;
}

uint64_t sub_1003E3D84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v100 = a5;
  uint64_t v101 = a4;
  uint64_t v112 = a3;
  uint64_t v116 = a2;
  uint64_t v7 = *v5;
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t v10 = *(void *)(*v5 + 616);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v118 = *(void *)(*v5 + 600);
  uint64_t v8 = v118;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v121 = v11;
  uint64_t v94 = type metadata accessor for PersistenceTrigger();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v80 - v12;
  uint64_t v90 = sub_10096B0E0();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v91 = (uint64_t)&v80 - v14;
  uint64_t v118 = v8;
  uint64_t v119 = v9;
  uint64_t v114 = v9;
  uint64_t v120 = v10;
  uint64_t v121 = v11;
  uint64_t v117 = v11;
  uint64_t v99 = type metadata accessor for ReconciliationMutation();
  uint64_t v96 = *(void *)(v99 - 8);
  uint64_t v15 = __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v115 = (char *)&v80 - v17;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v19 = *(void *)(v97 + 64);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v80 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(v7 + 576);
  uint64_t v86 = v5;
  uint64_t v27 = (uint64_t)v5 + v26;
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(*(void *)v25 + 472);
  uint64_t v87 = v25;
  uint64_t v30 = v28((char *)v5 + v26, v116);
  uint64_t v110 = v23;
  uint64_t v81 = v19;
  uint64_t v82 = 0;
  uint64_t v84 = v27;
  uint64_t v85 = v31;
  uint64_t v111 = v8;
  uint64_t v83 = v24;
  uint64_t v32 = sub_10096C1A0();
  uint64_t v33 = v99;
  uint64_t v34 = (uint64_t)v115;
  uint64_t v35 = v97;
  uint64_t v36 = v30;
  if (v32)
  {
    char v37 = v21;
    uint64_t v118 = v111;
    uint64_t v119 = v114;
    uint64_t v120 = v10;
    uint64_t v121 = v117;
    uint64_t v38 = type metadata accessor for JobResult();
    uint64_t v39 = 0;
    uint64_t v109 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
    uint64_t v105 = (void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v106 = v38;
    uint64_t v104 = (void (**)(uint64_t, char *, uint64_t))(v98 + 16);
    uint64_t v103 = (void (**)(uint64_t, uint64_t))(v96 + 8);
    uint64_t v102 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v107 = v30;
    uint64_t v108 = v10;
    while (1)
    {
      BOOL v40 = sub_10096C130();
      sub_10096C0E0();
      if (v40)
      {
        unint64_t v41 = v36
            + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
            + *(void *)(v35 + 72) * v39;
        uint64_t v42 = v110;
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v35 + 16))(v110, v41, v18);
        uint64_t v43 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t result = sub_10096CC20();
        uint64_t v43 = AssociatedTypeWitness;
        uint64_t v42 = v110;
        if (v81 != 8) {
          goto LABEL_28;
        }
        uint64_t v118 = result;
        (*v109)(v110, &v118, v18);
        uint64_t result = swift_unknownObjectRelease();
      }
      if (__OFADD__(v39, 1)) {
        break;
      }
      uint64_t v115 = (char *)(v39 + 1);
      (*v105)(v37, v42, v18);
      (*v104)(v34, v37, v43);
      uint64_t v116 = v39;
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v46 = swift_getAssociatedConformanceWitness();
      uint64_t v118 = v43;
      uint64_t v119 = v44;
      uint64_t v120 = AssociatedConformanceWitness;
      uint64_t v121 = v46;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t WitnessTable = swift_getWitnessTable();
      if (FileItem.kind.getter(v18, WitnessTable) == 1) {
        char v48 = 2;
      }
      else {
        char v48 = 6;
      }
      uint64_t v10 = v108;
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v49 = v116;
      uint64_t v50 = (char *)(v34 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      *uint64_t v50 = v48;
      v50[1] = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758(v112, v34);
      (*v103)(v34, v33);
      (*v102)(v37, v18);
      uint64_t v36 = v107;
      uint64_t v39 = v49 + 1;
      if (v115 == (char *)sub_10096C1A0()) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v51 = v101;
  if (v85)
  {
LABEL_16:
    uint64_t v52 = swift_retain();
    v51(v52, 0, 0, 0);
    return swift_release_n();
  }
  uint64_t v53 = (uint64_t)v95;
  uint64_t v118 = v111;
  uint64_t v119 = v114;
  uint64_t v120 = v10;
  uint64_t v121 = v117;
  uint64_t v116 = type metadata accessor for JobResult();
  uint64_t v54 = v96;
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  uint64_t v118 = v56;
  uint64_t v119 = v55;
  uint64_t v120 = v57;
  uint64_t v121 = v58;
  type metadata accessor for ReconciliationID();
  uint64_t v59 = v10;
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v60 = (_WORD *)(v53 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  int v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16);
  v61(v53, v84, v56);
  swift_storeEnumTagMultiPayload();
  _WORD *v60 = 6;
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = v99;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v112, v53);
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v62);
  uint64_t v64 = v83;
  uint64_t v65 = v82;
  char v66 = (*(uint64_t (**)(uint64_t))(**(void **)(v83 + 16) + 240))(v63);
  if (v65)
  {
    swift_errorRetain();
    v101(0, 0, 0, v65);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v115 = (char *)v61;
  uint64_t v67 = v64;
  if (v66)
  {
LABEL_23:
    uint64_t v78 = v92;
    ((void (*)(char *, uint64_t, uint64_t))v115)(v92, v84, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = v94;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*(void *)v67 + 312))(v78);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v78, v79);
    uint64_t v51 = v101;
    goto LABEL_16;
  }
  uint64_t v118 = v111;
  uint64_t v119 = v114;
  uint64_t v120 = v59;
  uint64_t v121 = v117;
  type metadata accessor for DiskImport.ContinueDiskImport();
  sub_10085378C();
  uint64_t v68 = v88;
  sub_10096B0D0();
  sub_10096B080();
  double v70 = v69;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v68, v90);
  double v71 = v70 * 1000000000.0;
  if ((~COERCE__INT64(v70 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v72 = v112;
  uint64_t v73 = v98;
  if (v71 > -9.22337204e18)
  {
    if (v71 >= 9.22337204e18) {
      goto LABEL_27;
    }
    uint64_t v74 = (uint64_t)v71;
    uint64_t v75 = v86[17];
    swift_allocObject();
    uint64_t v76 = v91;
    uint64_t v77 = sub_100610B30(v91, 0x2000000000000000, v74, v75);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v76, AssociatedTypeWitness);
    sub_1004D4360(v72, v77);
    swift_release();
    goto LABEL_23;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003E4A18()
{
  return 0xD000000000000014;
}

uint64_t sub_1003E4A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a3;
  v12[6] = v6;
  uint64_t v13 = *(void (**)(uint64_t (*)(uint64_t), void *))(*(void *)v11 + 752);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13(sub_1003FB79C, v12);
  swift_release();

  return swift_release();
}

uint64_t sub_1003E4B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a3;
  v12[6] = a4;
  swift_retain_n();
  swift_errorRetain();
  uint64_t v13 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003A946C, v11, (uint64_t)sub_1003FB834, (uint64_t)v12, v13, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1003E4C84(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void, void, void, uint64_t))
{
  uint64_t v4 = a4;
  if (a1)
  {
    type metadata accessor for JobResult();
    type metadata accessor for DiskImport.DiskImportFinished();
    uint64_t v8 = (uint64_t)a3 + *(void *)(*a3 + 576);
    uint64_t v10 = a3[15];
    uint64_t v9 = a3[16];
    uint64_t v11 = a3[17];
    swift_allocObject();
    uint64_t v12 = sub_100610B30(v8, v10, v9, v11);
    sub_1004D4360(a2, v12);
    swift_release();
    uint64_t v4 = a4;
  }
  return v4(0, 0, 0, a1);
}

uint64_t type metadata accessor for DiskImport.DiskImportFinished()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003E4DE8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1003E4E58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B0D0();
  sub_10096B080();
  double v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v9 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    *(void *)(v1 + 16) = (uint64_t)v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003E4F84(uint64_t x0_0, char a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0x746976697463613CLL;
  unint64_t v25 = 0xEA00000000003A79;
  sub_10096B0D0();
  sub_10096B080();
  double v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v12(v9, v6);
  double v14 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10063A588((uint64_t)v14, a3);
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  sub_10096BDC0(v27);
  uint64_t v16 = v24;
  unint64_t v15 = v25;
  uint64_t v24 = 0x6974617269707865;
  unint64_t v25 = 0xEB000000003A6E6FLL;
  if (a2)
  {
    object = (void *)0xE600000000000000;
    v20._countAndFlagsBits = 0x3E656E6F6E3CLL;
    goto LABEL_10;
  }
  sub_10096B0D0();
  sub_10096B080();
  double v18 = v17;
  uint64_t result = v12(v9, v6);
  double v19 = v18 * 1000000000.0;
  if ((~COERCE__INT64(v18 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_14;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v19 < 9.22337204e18)
  {
    sub_10063A588((uint64_t)v19, x0_0);
    object = v20._object;
LABEL_10:
    v20._object = object;
    sub_10096BDC0(v20);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 62;
    v28._object = (void *)0xE100000000000000;
    sub_10096BDC0(v28);
    uint64_t v22 = v24;
    uint64_t v23 = (void *)v25;
    uint64_t v24 = v16;
    unint64_t v25 = v15;
    swift_bridgeObjectRetain();
    v29._countAndFlagsBits = v22;
    v29._object = v23;
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1003E522C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001009A0BE0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001009A0C00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1003E5318(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1003E5354(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v16[0] = a4;
  int v21 = a3;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
  swift_getWitnessTable();
  uint64_t v10 = sub_10096D200();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - v12;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  uint64_t v17 = a2;
  LOBYTE(v18) = v21 & 1;
  char v22 = 0;
  sub_1003FBECC();
  uint64_t v14 = v16[1];
  sub_10096D100();
  if (!v14)
  {
    uint64_t v17 = v16[0];
    char v22 = 1;
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1003E5528(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_10096D0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - v10;
  sub_10002689C(a1, a1[3]);
  sub_10096D570();
  if (!v5)
  {
    char v14 = 0;
    sub_1003FBE78();
    sub_10096CFB0();
    uint64_t WitnessTable = v13[0];
    char v14 = 1;
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1000268E0((uint64_t)a1);
  return WitnessTable;
}

unint64_t sub_1003E574C()
{
  return sub_1003E5318(*v0);
}

uint64_t sub_1003E5760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1003E88AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1003E522C, a4);
}

uint64_t sub_1003E5778@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1003E8900(a1, (uint64_t (*)(void, void, void, void))FileTree.isCaseSensitive.getter, a2);
}

uint64_t sub_1003E5790(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003E57E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003E5838@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1003E5528(a1, a2[2], a2[3], a2[4], a2[5]);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6 & 1;
    *(void *)(a3 + 16) = v7;
  }
  return result;
}

uint64_t sub_1003E587C(void *a1, uint64_t *a2)
{
  return sub_1003E5354(a1, *(void *)v2, *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_1003E58B4()
{
  return sub_1003E4F84(*(void *)v0, *(unsigned char *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1003E58CC()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for DiskImport.ImportingFolder();
  swift_getAssociatedConformanceWitness();
  if ((sub_10096BA50() & 1) != 0
    && (swift_getAssociatedTypeWitness(), swift_getAssociatedConformanceWitness(), (sub_10096BA50() & 1) != 0)
    && (sub_10096C360() & 1) != 0)
  {
    char v0 = sub_10096C360();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1003E5A34(void *a1, void *a2)
{
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v205 = a2;
  uint64_t v7 = a2[5];
  uint64_t v8 = (char *)a2[3];
  uint64_t v9 = (char *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v216 = AssociatedTypeWitness;
  uint64_t v217 = v9;
  uint64_t v202 = swift_getAssociatedConformanceWitness();
  int64_t v203 = AssociatedConformanceWitness;
  uint64_t v218 = AssociatedConformanceWitness;
  uint64_t v219 = v202;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v195 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v194 = (char *)&v172 - v12;
  uint64_t v13 = sub_10096C890();
  __chkstk_darwin(v13 - 8);
  uint64_t v206 = (char *)&v172 - v14;
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  unint64_t v196 = (char *)&v172 - v17;
  uint64_t v197 = *((void *)v9 - 1);
  __chkstk_darwin(v16);
  long long v187 = (char *)&v172 - v18;
  uint64_t v216 = v5;
  uint64_t v217 = v8;
  uint64_t v218 = v4;
  uint64_t v219 = v7;
  uint64_t v19 = type metadata accessor for DiskImport.ImportingFolder();
  uint64_t v204 = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v189 = sub_10096C890();
  uint64_t v174 = *(void *)(v189 - 8);
  uint64_t v21 = __chkstk_darwin(v189);
  unint64_t v191 = (char *)&v172 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v190 = (uint64_t)&v172 - v24;
  uint64_t v199 = *(char **)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v23);
  unint64_t v188 = (char *)&v172 - v25;
  uint64_t v207 = AssociatedTypeWitness;
  Swift::String v26 = v176;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v192 = (void *)sub_10096C890();
  Swift::String v28 = (void (**)(uint64_t, char *, void *))*(v192 - 1);
  uint64_t v29 = __chkstk_darwin(v192);
  uint64_t v31 = (uint64_t (**)(char *, void *))((char *)&v172 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  unint64_t v198 = (char *)&v172 - v32;
  if (sub_1003E58CC())
  {
    swift_getWitnessTable();
    if (sub_10096C360())
    {
      uint64_t v33 = a1[3];
      uint64_t v34 = a1[4];
      sub_10002689C(a1, v33);
      return sub_10059A0E8(0xD000000000000022, (void *)0x80000001009A09D0, v33, v34);
    }
  }
  unint64_t v183 = v28;
  uint64_t v193 = TupleTypeMetadata2;
  uint64_t v205 = (void *)v11;
  uint64_t v36 = a1[3];
  uint64_t v200 = a1[4];
  long long v186 = sub_10002689C(a1, v36);
  uint64_t v216 = 0;
  uint64_t v217 = (char *)0xE000000000000000;
  sub_10096CBD0(24);
  swift_bridgeObjectRelease();
  uint64_t v216 = 0xD000000000000016;
  uint64_t v217 = (char *)0x80000001009A0930;
  if (v26[5]) {
    v37._countAndFlagsBits = 0x6F6C667265766F20;
  }
  else {
    v37._countAndFlagsBits = 0;
  }
  if (v26[5]) {
    uint64_t v38 = (void *)0xED000021676E6977;
  }
  else {
    uint64_t v38 = (void *)0xE000000000000000;
  }
  v37._object = v38;
  sub_10096BDC0(v37);
  swift_bridgeObjectRelease();
  sub_10059A0E8(v216, v217, v36, v200);
  swift_bridgeObjectRelease();
  uint64_t v39 = *v26;
  uint64_t v175 = *(void *)(v203 + 32);
  char v40 = sub_10096BA50();
  unint64_t v41 = v26;
  uint64_t v200 = v19;
  uint64_t v201 = a1;
  if ((v40 & 1) == 0)
  {
    long long v185 = v31;
    uint64_t v42 = a1[3];
    uint64_t v43 = a1[4];
    sub_10002689C(a1, v42);
    uint64_t v216 = 0;
    uint64_t v217 = (char *)0xE000000000000000;
    sub_10096CBD0(19);
    swift_bridgeObjectRelease();
    uint64_t v216 = 0xD000000000000011;
    uint64_t v217 = (char *)0x80000001009A0950;
    uint64_t v211 = sub_10096BA20();
    v221._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v221);
    swift_bridgeObjectRelease();
    sub_10059A0E8(v216, v217, v42, v43);
    uint64_t v44 = v207;
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v39 + 64);
    uint64_t v177 = v39 + 64;
    uint64_t v46 = 1 << *(unsigned char *)(v39 + 32);
    uint64_t v47 = -1;
    if (v46 < 64) {
      uint64_t v47 = ~(-1 << v46);
    }
    unint64_t v48 = v47 & v45;
    long long v186 = (void *)v27;
    uint64_t v184 = v27 - 8;
    long long v179 = v199 + 16;
    v183 += 4;
    unint64_t v182 = (void (**)(char *, uint64_t, uint64_t))(v199 + 32);
    unint64_t v181 = (uint64_t (**)(char *, uint64_t))(v199 + 8);
    int64_t v178 = (unint64_t)(v46 + 63) >> 6;
    int64_t v173 = v178 - 1;
    uint64_t v180 = v39;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v49 = 0;
    while (1)
    {
      uint64_t v50 = (uint64_t)v198;
      if (v48)
      {
        unint64_t v51 = __clz(__rbit64(v48));
        v48 &= v48 - 1;
        unint64_t v52 = v51 | (v49 << 6);
        uint64_t v53 = v186;
        uint64_t v54 = (char *)v185;
        goto LABEL_16;
      }
      int64_t v62 = v49 + 1;
      uint64_t v53 = v186;
      uint64_t v54 = (char *)v185;
      if (__OFADD__(v49, 1)) {
        goto LABEL_145;
      }
      if (v62 >= v178) {
        goto LABEL_28;
      }
      unint64_t v63 = *(void *)(v177 + 8 * v62);
      if (v63) {
        goto LABEL_20;
      }
      v49 += 2;
      if (v62 + 1 >= v178)
      {
        unint64_t v48 = 0;
        uint64_t v56 = 1;
        int64_t v49 = v62;
        goto LABEL_29;
      }
      unint64_t v63 = *(void *)(v177 + 8 * v49);
      if (v63)
      {
        ++v62;
        goto LABEL_20;
      }
      int64_t v64 = v62 + 2;
      if (v62 + 2 >= v178)
      {
LABEL_28:
        unint64_t v48 = 0;
        uint64_t v56 = 1;
      }
      else
      {
        unint64_t v63 = *(void *)(v177 + 8 * v64);
        if (v63)
        {
          v62 += 2;
LABEL_20:
          unint64_t v48 = (v63 - 1) & v63;
          unint64_t v52 = __clz(__rbit64(v63)) + (v62 << 6);
          int64_t v49 = v62;
LABEL_16:
          uint64_t v55 = v180;
          (*((void (**)(char *, unint64_t, uint64_t))v199 + 2))(v54, *(void *)(v180 + 48) + *((void *)v199 + 9) * v52, v44);
          uint64_t v56 = 0;
          uint64_t v57 = *(void *)(v55 + 56) + 24 * v52;
          uint64_t v58 = &v54[*((int *)v53 + 12)];
          uint64_t v59 = *(void *)v57;
          char v60 = *(unsigned char *)(v57 + 8);
          uint64_t v61 = *(void *)(v57 + 16);
          *(void *)uint64_t v58 = v59;
          v58[8] = v60;
          *((void *)v58 + 2) = v61;
          goto LABEL_29;
        }
        while (1)
        {
          int64_t v62 = v64 + 1;
          if (__OFADD__(v64, 1)) {
            goto LABEL_149;
          }
          if (v62 >= v178) {
            break;
          }
          unint64_t v63 = *(void *)(v177 + 8 * v62);
          ++v64;
          if (v63) {
            goto LABEL_20;
          }
        }
        unint64_t v48 = 0;
        uint64_t v56 = 1;
        int64_t v49 = v173;
      }
LABEL_29:
      uint64_t v65 = *(v53 - 1);
      (*(void (**)(char *, uint64_t, uint64_t, void *))(v65 + 56))(v54, v56, 1, v53);
      (*v183)(v50, v54, v192);
      if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v65 + 48))(v50, 1, v53) == 1)
      {
        swift_release();
        unint64_t v41 = v176;
        a1 = v201;
        break;
      }
      uint64_t v66 = v50 + *((int *)v53 + 12);
      uint64_t v67 = *(void *)v66;
      char v68 = *(unsigned char *)(v66 + 8);
      uint64_t v69 = *(void *)(v66 + 16);
      double v70 = v188;
      (*v182)(v188, v50, v44);
      uint64_t v72 = v201[3];
      uint64_t v71 = v201[4];
      sub_10002689C(v201, v72);
      uint64_t v211 = 0;
      unsigned int v212 = (void *)0xE000000000000000;
      v222._countAndFlagsBits = 538976288;
      v222._object = (void *)0xE400000000000000;
      sub_10096BDC0(v222);
      sub_10096D270();
      v223._countAndFlagsBits = 8250;
      v223._object = (void *)0xE200000000000000;
      sub_10096BDC0(v223);
      uint64_t v216 = v67;
      LOBYTE(v217) = v68;
      uint64_t v218 = v69;
      swift_getWitnessTable();
      sub_10096D270();
      uint64_t v73 = v72;
      uint64_t v44 = v207;
      sub_10059A0E8(v211, v212, v73, v71);
      swift_bridgeObjectRelease();
      uint64_t result = (*v181)(v70, v44);
    }
  }
  uint64_t v74 = v41[1];
  uint64_t v180 = *(void *)(v202 + 32);
  if ((sub_10096BA50() & 1) == 0)
  {
    uint64_t v76 = a1[3];
    uint64_t v75 = a1[4];
    sub_10002689C(a1, v76);
    uint64_t v216 = 0;
    uint64_t v217 = (char *)0xE000000000000000;
    sub_10096CBD0(23);
    swift_bridgeObjectRelease();
    uint64_t v216 = 0xD000000000000015;
    uint64_t v217 = (char *)0x80000001009A0970;
    uint64_t v211 = sub_10096BA20();
    v224._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v224);
    swift_bridgeObjectRelease();
    sub_10059A0E8(v216, v217, v76, v75);
    swift_bridgeObjectRelease();
    uint64_t v77 = *(void *)(v74 + 64);
    unint64_t v181 = (uint64_t (**)(char *, uint64_t))(v74 + 64);
    uint64_t v78 = 1 << *(unsigned char *)(v74 + 32);
    uint64_t v79 = -1;
    if (v78 < 64) {
      uint64_t v79 = ~(-1 << v78);
    }
    uint64_t v80 = v74;
    unint64_t v81 = v79 & v77;
    uint64_t v192 = (void *)(v193 - 8);
    unint64_t v183 = (void (**)(uint64_t, char *, void *))(v197 + 16);
    unint64_t v188 = (char *)(v174 + 32);
    long long v186 = (void *)(v197 + 32);
    long long v185 = (uint64_t (**)(char *, void *))(v197 + 8);
    unint64_t v182 = (void (**)(char *, uint64_t, uint64_t))((unint64_t)(v78 + 63) >> 6);
    long long v179 = (char *)v182 - 1;
    uint64_t v184 = v80;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v82 = 0;
    for (i = v204; ; uint64_t result = (*v185)(v104, i))
    {
      uint64_t v84 = v190;
      if (v81)
      {
        unint64_t v85 = __clz(__rbit64(v81));
        v81 &= v81 - 1;
        unint64_t v86 = v85 | (v82 << 6);
        uint64_t v87 = v193;
        uint64_t v88 = v191;
        goto LABEL_43;
      }
      uint64_t v96 = v82 + 1;
      uint64_t v87 = v193;
      uint64_t v88 = v191;
      if (__OFADD__(v82, 1)) {
        goto LABEL_146;
      }
      if (v96 >= (uint64_t)v182) {
        goto LABEL_55;
      }
      unint64_t v97 = (unint64_t)v181[v96];
      if (v97) {
        goto LABEL_47;
      }
      v82 += 2;
      if (v96 + 1 >= (uint64_t)v182)
      {
        unint64_t v81 = 0;
        uint64_t v90 = 1;
        uint64_t v82 = v96;
        goto LABEL_56;
      }
      unint64_t v97 = (unint64_t)v181[v82];
      if (v97)
      {
        ++v96;
        goto LABEL_47;
      }
      uint64_t v98 = v96 + 2;
      if (v96 + 2 >= (uint64_t)v182)
      {
LABEL_55:
        unint64_t v81 = 0;
        uint64_t v90 = 1;
      }
      else
      {
        unint64_t v97 = (unint64_t)v181[v98];
        if (v97)
        {
          v96 += 2;
LABEL_47:
          unint64_t v81 = (v97 - 1) & v97;
          unint64_t v86 = __clz(__rbit64(v97)) + (v96 << 6);
          uint64_t v82 = v96;
LABEL_43:
          uint64_t v89 = v184;
          (*(void (**)(char *, unint64_t, char *))(v197 + 16))(v88, *(void *)(v184 + 48) + *(void *)(v197 + 72) * v86, v204);
          uint64_t v90 = 0;
          uint64_t v91 = *(void *)(v89 + 56) + 24 * v86;
          uint64_t v92 = &v88[*(int *)(v87 + 48)];
          uint64_t v93 = *(void *)v91;
          char v94 = *(unsigned char *)(v91 + 8);
          uint64_t v95 = *(void *)(v91 + 16);
          *(void *)uint64_t v92 = v93;
          v92[8] = v94;
          *((void *)v92 + 2) = v95;
          goto LABEL_56;
        }
        while (1)
        {
          uint64_t v96 = v98 + 1;
          if (__OFADD__(v98, 1)) {
            goto LABEL_150;
          }
          if (v96 >= (uint64_t)v182) {
            break;
          }
          unint64_t v97 = (unint64_t)v181[v96];
          ++v98;
          if (v97) {
            goto LABEL_47;
          }
        }
        unint64_t v81 = 0;
        uint64_t v90 = 1;
        uint64_t v82 = (uint64_t)v179;
      }
LABEL_56:
      uint64_t v99 = *(void *)(v87 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v88, v90, 1, v87);
      (*(void (**)(uint64_t, char *, uint64_t))v188)(v84, v88, v189);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v84, 1, v87) == 1)
      {
        swift_release();
        unint64_t v41 = v176;
        a1 = v201;
        break;
      }
      uint64_t v100 = v84 + *(int *)(v87 + 48);
      uint64_t v101 = *(void *)v100;
      char v102 = *(unsigned char *)(v100 + 8);
      uint64_t v103 = *(void *)(v100 + 16);
      uint64_t v104 = v187;
      ((void (*)(char *, uint64_t, char *))*v186)(v187, v84, i);
      uint64_t v105 = v201[3];
      unint64_t v198 = (char *)v201[4];
      sub_10002689C(v201, v105);
      uint64_t v211 = 0;
      unsigned int v212 = (void *)0xE000000000000000;
      v225._countAndFlagsBits = 538976288;
      v225._object = (void *)0xE400000000000000;
      sub_10096BDC0(v225);
      sub_10096D270();
      v226._countAndFlagsBits = 8250;
      v226._object = (void *)0xE200000000000000;
      sub_10096BDC0(v226);
      uint64_t v216 = v101;
      LOBYTE(v217) = v102;
      uint64_t v218 = v103;
      swift_getWitnessTable();
      sub_10096D270();
      sub_10059A0E8(v211, v212, v105, (uint64_t)v198);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v106 = v41[2];
  uint64_t v107 = v41;
  if (sub_10096C360() & 1) != 0 && (sub_10096C360()) {
    goto LABEL_122;
  }
  uint64_t v108 = a1[3];
  uint64_t v109 = a1[4];
  sub_10002689C(a1, v108);
  uint64_t v216 = 0;
  uint64_t v217 = (char *)0xE000000000000000;
  sub_10096CBD0(26);
  swift_bridgeObjectRelease();
  uint64_t v216 = 0xD000000000000018;
  uint64_t v217 = (char *)0x80000001009A0990;
  uint64_t v110 = sub_10096C320();
  uint64_t v111 = (char *)v107[3];
  uint64_t result = sub_10096C320();
  if (__OFADD__(v110, result)) {
    goto LABEL_148;
  }
  uint64_t v190 = (uint64_t)v111;
  uint64_t v211 = v110 + result;
  v227._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v227);
  swift_bridgeObjectRelease();
  sub_10059A0E8(v216, v217, v108, v109);
  swift_bridgeObjectRelease();
  if ((v106 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10096CAA0();
    uint64_t v112 = v207;
    uint64_t result = sub_10096C370();
    uint64_t v106 = v211;
    uint64_t v192 = v212;
    uint64_t v113 = v213;
    uint64_t v200 = v214;
    unint64_t v114 = v215;
  }
  else
  {
    uint64_t v115 = -1 << *(unsigned char *)(v106 + 32);
    uint64_t v116 = *(void *)(v106 + 56);
    uint64_t v192 = (void *)(v106 + 56);
    uint64_t v113 = ~v115;
    uint64_t v117 = -v115;
    if (v117 < 64) {
      uint64_t v118 = ~(-1 << v117);
    }
    else {
      uint64_t v118 = -1;
    }
    unint64_t v114 = v118 & v116;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v200 = 0;
    uint64_t v112 = v207;
  }
  uint64_t v119 = v196;
  uint64_t v193 = v106 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v120 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56);
  uint64_t v189 = v113;
  unint64_t v191 = (char *)((unint64_t)(v113 + 64) >> 6);
  unint64_t v198 = v199 + 16;
  uint64_t v121 = (uint64_t (**)(char *, uint64_t))(v199 + 8);
  while ((v106 & 0x8000000000000000) == 0)
  {
    if (v114)
    {
      unint64_t v122 = __clz(__rbit64(v114));
      v114 &= v114 - 1;
      uint64_t v123 = v122 | (v200 << 6);
    }
    else
    {
      uint64_t v127 = v200 + 1;
      if (__OFADD__(v200, 1))
      {
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
        goto LABEL_147;
      }
      if (v127 >= (uint64_t)v191) {
        goto LABEL_93;
      }
      unint64_t v128 = v192[v127];
      uint64_t v129 = v200 + 1;
      if (!v128)
      {
        uint64_t v129 = v200 + 2;
        if (v200 + 2 >= (uint64_t)v191) {
          goto LABEL_93;
        }
        unint64_t v128 = v192[v129];
        if (!v128)
        {
          uint64_t v129 = v200 + 3;
          if (v200 + 3 >= (uint64_t)v191) {
            goto LABEL_93;
          }
          unint64_t v128 = v192[v129];
          if (!v128)
          {
            unint64_t v130 = (char *)(v200 + 4);
            do
            {
              if (v191 == v130) {
                goto LABEL_93;
              }
              unint64_t v128 = v192[(void)v130++];
            }
            while (!v128);
            uint64_t v129 = (uint64_t)(v130 - 1);
          }
        }
      }
      unint64_t v114 = (v128 - 1) & v128;
      uint64_t v123 = __clz(__rbit64(v128)) + (v129 << 6);
      uint64_t v200 = v129;
    }
    (*((void (**)(char *, uint64_t, uint64_t))v199 + 2))(v119, *(void *)(v106 + 48) + *((void *)v199 + 9) * v123, v112);
LABEL_76:
    (*v120)(v119, 0, 1, v112);
    uint64_t v124 = a1[3];
    uint64_t v125 = a1[4];
    sub_10002689C(a1, v124);
    uint64_t v216 = 0;
    uint64_t v217 = (char *)0xE000000000000000;
    v228._countAndFlagsBits = 0x3A736620202020;
    v228._object = (void *)0xE700000000000000;
    sub_10096BDC0(v228);
    sub_10096D270();
    uint64_t v126 = v124;
    uint64_t v112 = v207;
    sub_10059A0E8(v216, v217, v126, v125);
    uint64_t v119 = v196;
    swift_bridgeObjectRelease();
    uint64_t result = (*v121)(v119, v112);
  }
  if (sub_10096CAD0())
  {
    sub_10096D290();
    swift_unknownObjectRelease();
    goto LABEL_76;
  }
LABEL_93:
  (*v120)(v119, 1, 1, v112);
  sub_1000146B4();
  uint64_t v131 = v190;
  if ((v190 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10096CAA0();
    unint64_t v132 = v204;
    uint64_t result = sub_10096C370();
    uint64_t v131 = v216;
    uint64_t v199 = v217;
    uint64_t v133 = v218;
    uint64_t v207 = v219;
    unint64_t v134 = v220;
  }
  else
  {
    uint64_t v135 = -1 << *(unsigned char *)(v190 + 32);
    uint64_t v136 = *(void *)(v190 + 56);
    uint64_t v199 = (char *)(v190 + 56);
    uint64_t v133 = ~v135;
    uint64_t v137 = -v135;
    if (v137 < 64) {
      uint64_t v138 = ~(-1 << v137);
    }
    else {
      uint64_t v138 = -1;
    }
    unint64_t v134 = v138 & v136;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v207 = 0;
    unint64_t v132 = v204;
  }
  int v139 = v206;
  uint64_t v200 = v131 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v140 = (void (**)(char *, uint64_t, uint64_t, void *))(v197 + 56);
  unint64_t v196 = (char *)v133;
  unint64_t v198 = (char *)((unint64_t)(v133 + 64) >> 6);
  int64_t v203 = v197 + 16;
  unint64_t v141 = (uint64_t (**)(char *, void *))(v197 + 8);
  uint64_t v142 = v131;
  while (2)
  {
    if ((v131 & 0x8000000000000000) == 0)
    {
      if (v134)
      {
        unint64_t v143 = __clz(__rbit64(v134));
        v134 &= v134 - 1;
        unint64_t v144 = v143 | (v207 << 6);
      }
      else
      {
        uint64_t v147 = v207 + 1;
        if (__OFADD__(v207, 1)) {
          goto LABEL_144;
        }
        if (v147 >= (uint64_t)v198) {
          goto LABEL_121;
        }
        unint64_t v148 = *(void *)&v199[8 * v147];
        uint64_t v149 = v207 + 1;
        if (!v148)
        {
          uint64_t v149 = v207 + 2;
          if (v207 + 2 >= (uint64_t)v198) {
            goto LABEL_121;
          }
          unint64_t v148 = *(void *)&v199[8 * v149];
          if (!v148)
          {
            uint64_t v149 = v207 + 3;
            if (v207 + 3 >= (uint64_t)v198) {
              goto LABEL_121;
            }
            unint64_t v148 = *(void *)&v199[8 * v149];
            if (!v148)
            {
              uint64_t v150 = v207 + 4;
              do
              {
                if (v198 == (char *)v150) {
                  goto LABEL_121;
                }
                unint64_t v148 = *(void *)&v199[8 * v150++];
              }
              while (!v148);
              uint64_t v149 = v150 - 1;
            }
          }
        }
        unint64_t v134 = (v148 - 1) & v148;
        unint64_t v144 = __clz(__rbit64(v148)) + (v149 << 6);
        uint64_t v207 = v149;
      }
      (*(void (**)(char *, unint64_t, char *))(v197 + 16))(v139, *(void *)(v131 + 48) + *(void *)(v197 + 72) * v144, v132);
      goto LABEL_102;
    }
    if (sub_10096CAD0())
    {
      unint64_t v151 = v206;
      sub_10096D290();
      int v139 = v151;
      swift_unknownObjectRelease();
LABEL_102:
      (*v140)(v139, 0, 1, v132);
      uint64_t v145 = a1[3];
      uint64_t v146 = a1[4];
      sub_10002689C(a1, v145);
      uint64_t v209 = 0;
      unsigned int v210 = (void *)0xE000000000000000;
      v229._countAndFlagsBits = 0x3A706620202020;
      v229._object = (void *)0xE700000000000000;
      sub_10096BDC0(v229);
      sub_10096D270();
      sub_10059A0E8(v209, v210, v145, v146);
      int v139 = v206;
      unint64_t v132 = v204;
      swift_bridgeObjectRelease();
      uint64_t result = (*v141)(v139, v132);
      uint64_t v131 = v142;
      continue;
    }
    break;
  }
  int v139 = v206;
LABEL_121:
  (*v140)(v139, 1, 1, v132);
  sub_1000146B4();
  uint64_t v107 = v176;
LABEL_122:
  uint64_t v152 = v107[4];
  swift_getWitnessTable();
  uint64_t result = sub_10096C360();
  if (result) {
    return result;
  }
  uint64_t v153 = a1[3];
  uint64_t v154 = a1[4];
  sub_10002689C(a1, v153);
  uint64_t v209 = 0;
  unsigned int v210 = (void *)0xE000000000000000;
  sub_10096CBD0(22);
  swift_bridgeObjectRelease();
  uint64_t v209 = 0xD000000000000014;
  unsigned int v210 = (void *)0x80000001009A09B0;
  uint64_t v208 = sub_10096C320();
  v230._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v230);
  swift_bridgeObjectRelease();
  uint64_t v155 = v153;
  uint64_t v156 = v205;
  sub_10059A0E8(v209, v210, v155, v154);
  swift_bridgeObjectRelease();
  uint64_t v157 = *(void *)(v152 + 56);
  uint64_t v202 = v152 + 56;
  uint64_t v158 = 1 << *(unsigned char *)(v152 + 32);
  uint64_t v159 = -1;
  if (v158 < 64) {
    uint64_t v159 = ~(-1 << v158);
  }
  unint64_t v160 = v159 & v157;
  int64_t v203 = (unint64_t)(v158 + 63) >> 6;
  uint64_t v206 = (char *)(v195 + 16);
  uint64_t v207 = v152;
  uint64_t v204 = (char *)(v195 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v161 = 0;
  uint64_t v162 = v195;
  uint64_t v163 = v194;
  while (2)
  {
    if (v160)
    {
      unint64_t v164 = __clz(__rbit64(v160));
      v160 &= v160 - 1;
      unint64_t v165 = v164 | (v161 << 6);
LABEL_127:
      (*(void (**)(char *, unint64_t, void *))(v162 + 16))(v163, *(void *)(v207 + 48) + *(void *)(v162 + 72) * v165, v156);
      uint64_t v166 = a1[3];
      uint64_t v167 = a1[4];
      sub_10002689C(a1, v166);
      uint64_t v209 = 0;
      unsigned int v210 = (void *)0xE000000000000000;
      v231._countAndFlagsBits = 538976288;
      v231._object = (void *)0xE400000000000000;
      sub_10096BDC0(v231);
      swift_getWitnessTable();
      sub_10096D270();
      uint64_t v168 = v166;
      uint64_t v156 = v205;
      sub_10059A0E8(v209, v210, v168, v167);
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, void *))(v162 + 8))(v163, v156);
      continue;
    }
    break;
  }
  int64_t v169 = v161 + 1;
  if (__OFADD__(v161, 1))
  {
    __break(1u);
    goto LABEL_143;
  }
  if (v169 >= v203) {
    return swift_release();
  }
  unint64_t v170 = *(void *)(v202 + 8 * v169);
  ++v161;
  if (v170) {
    goto LABEL_139;
  }
  int64_t v161 = v169 + 1;
  if (v169 + 1 >= v203) {
    return swift_release();
  }
  unint64_t v170 = *(void *)(v202 + 8 * v161);
  if (v170) {
    goto LABEL_139;
  }
  int64_t v171 = v169 + 2;
  if (v171 >= v203) {
    return swift_release();
  }
  unint64_t v170 = *(void *)(v202 + 8 * v171);
  int64_t v161 = v171;
  if (v170)
  {
LABEL_139:
    unint64_t v160 = (v170 - 1) & v170;
    unint64_t v165 = __clz(__rbit64(v170)) + (v161 << 6);
    goto LABEL_127;
  }
  while (1)
  {
    int64_t v161 = v171 + 1;
    if (__OFADD__(v171, 1)) {
      break;
    }
    if (v161 >= v203) {
      return swift_release();
    }
    unint64_t v170 = *(void *)(v202 + 8 * v161);
    ++v171;
    if (v170) {
      goto LABEL_139;
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
  return result;
}

uint64_t sub_1003E74A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001009A0B60 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001009A0B80 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001009A0BA0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001009A0BC0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F466465727474 && a2 == 0xEC00000073726564 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C667265764F7369 && a2 == 0xED0000676E69776FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1003E7734(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6C6F466465727474;
      break;
    case 5:
      unint64_t result = 0x6C667265764F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003E7804(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v27 = a2[5];
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  uint64_t v41 = v27;
  type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
  swift_getWitnessTable();
  uint64_t v29 = sub_10096D200();
  uint64_t v25 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v7 = (char *)&v21 - v6;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  uint64_t v42 = *v28;
  char v37 = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  uint64_t v24 = v4;
  uint64_t v40 = v5;
  uint64_t v41 = v27;
  type metadata accessor for DiskImport.ImportingFolder();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(AssociatedConformanceWitness + 32);
  sub_10096BA80();
  uint64_t v11 = *(void *)(AssociatedConformanceWitness + 24);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = v11;
  uint64_t v36 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v13 = v26;
  sub_10096D1A0();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v29);
  }
  uint64_t v22 = v11;
  uint64_t v23 = v10;
  uint64_t v21 = AssociatedConformanceWitness;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v38 = v28[1];
  LOBYTE(v42) = 1;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  sub_10096BA80();
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v33 = v17;
  uint64_t v34 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v18 = v29;
  sub_10096D1A0();
  uint64_t v19 = v17;
  uint64_t v38 = v28[2];
  LOBYTE(v42) = 2;
  uint64_t v20 = v26;
  sub_10096C3A0();
  uint64_t v32 = v22;
  swift_getWitnessTable();
  sub_10096D1A0();
  uint64_t v38 = v28[3];
  LOBYTE(v42) = 3;
  sub_10096C3A0();
  uint64_t v31 = v19;
  swift_getWitnessTable();
  sub_10096D1A0();
  uint64_t v42 = v28[4];
  char v37 = 4;
  uint64_t v38 = v20;
  uint64_t v39 = v15;
  uint64_t v40 = v21;
  uint64_t v41 = v16;
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  sub_10096C3A0();
  uint64_t v30 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_10096D1A0();
  LOBYTE(v38) = 5;
  sub_10096D160();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v18);
}

uint64_t sub_1003E7D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for DiskImport.ImportingFolder();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t v3 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v16 = sub_10096BA00();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v6 = sub_10096BA00();
  uint64_t v7 = sub_10096C110();
  if (sub_10096C1B0()) {
    uint64_t v8 = (void *)sub_1003FB210(v7, AssociatedTypeWitness, v3);
  }
  else {
    uint64_t v8 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10096C110();
  if (sub_10096C1B0()) {
    uint64_t v10 = (void *)sub_1003FB210(v9, v4, v5);
  }
  else {
    uint64_t v10 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = sub_10096C110();
  if (sub_10096C1B0())
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v14 = (void *)sub_1003FB210(v12, v11, WitnessTable);
  }
  else
  {
    uint64_t v14 = &_swiftEmptySetSingleton;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1003E7FC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v40 = a6;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v10 = type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = v10;
  uint64_t v44 = sub_10096D0B0();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v52 = (char *)&v40 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  type metadata accessor for DiskImport.ImportingFolder();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v53 = sub_10096BA00();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v16 = *(void *)(v15 + 32);
  uint64_t v17 = sub_10096BA00();
  uint64_t v18 = sub_10096C110();
  if (sub_10096C1B0()) {
    uint64_t v47 = (void *)sub_1003FB210(v18, AssociatedTypeWitness, v13);
  }
  else {
    uint64_t v47 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_10096C110();
  if (sub_10096C1B0()) {
    uint64_t v46 = (void *)sub_1003FB210(v19, v14, v16);
  }
  else {
    uint64_t v46 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = AssociatedTypeWitness;
  uint64_t v64 = v14;
  uint64_t v65 = AssociatedConformanceWitness;
  uint64_t v66 = v15;
  uint64_t v20 = type metadata accessor for ReconciliationID();
  uint64_t v21 = sub_10096C110();
  Swift::Int v22 = sub_10096C1B0();
  uint64_t v48 = v17;
  uint64_t v42 = v16;
  uint64_t v41 = v15;
  if (v22)
  {
    uint64_t v23 = swift_getWitnessTable();
    uint64_t v45 = (void *)sub_1003FB210(v21, v20, v23);
  }
  else
  {
    uint64_t v45 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  sub_10002689C(v55, v55[3]);
  uint64_t v25 = v51;
  uint64_t v24 = v52;
  sub_10096D570();
  if (!v25)
  {
    uint64_t v26 = v13;
    sub_10096BA80();
    uint64_t v51 = 0;
    char v67 = 0;
    uint64_t v27 = *(void *)(AssociatedConformanceWitness + 16);
    uint64_t v28 = swift_getWitnessTable();
    uint64_t v61 = v27;
    uint64_t v62 = v28;
    uint64_t AssociatedConformanceWitness = v28;
    swift_getWitnessTable();
    uint64_t v29 = v44;
    uint64_t v30 = v51;
    sub_10096D040();
    if (!v30)
    {
      uint64_t v50 = v27;
      uint64_t v51 = v26;
      swift_bridgeObjectRelease();
      uint64_t v53 = v63;
      sub_10096BA80();
      char v67 = 1;
      uint64_t v59 = *(void *)(v41 + 16);
      uint64_t v31 = v59;
      uint64_t v60 = AssociatedConformanceWitness;
      swift_getWitnessTable();
      sub_10096D040();
      swift_bridgeObjectRelease();
      uint64_t v32 = v63;
      sub_10096C3A0();
      char v67 = 2;
      uint64_t v58 = v50;
      swift_getWitnessTable();
      sub_10096D040();
      swift_bridgeObjectRelease();
      uint64_t v33 = v63;
      sub_10096C3A0();
      char v67 = 3;
      uint64_t v57 = v31;
      swift_getWitnessTable();
      sub_10096D040();
      swift_bridgeObjectRelease();
      uint64_t v34 = v63;
      swift_getWitnessTable();
      sub_10096C3A0();
      char v67 = 4;
      uint64_t v56 = swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v35 = v52;
      sub_10096D040();
      swift_bridgeObjectRelease();
      uint64_t v36 = v63;
      LOBYTE(v63) = 5;
      char v37 = sub_10096D010();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v29);
      uint64_t result = sub_1000268E0((uint64_t)v55);
      uint64_t v39 = v40;
      *uint64_t v40 = v53;
      v39[1] = v32;
      void v39[2] = v33;
      v39[3] = v34;
      v39[4] = v36;
      *((unsigned char *)v39 + 40) = v37 & 1;
      return result;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v29);
  }
  sub_1000268E0((uint64_t)v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_1003E8800(char *a1, char *a2)
{
  return static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1003E8818()
{
  return PackageInternalLookupPolicy.hashValue.getter(*v0);
}

void sub_1003E8828(uint64_t a1)
{
  PackageInternalLookupPolicy.hash(into:)(a1, *v1);
}

Swift::Int sub_1003E8838()
{
  sub_10096D4B0();
  PackageInternalLookupPolicy.hash(into:)((uint64_t)v2, *v0);
  return sub_10096D500();
}

unint64_t sub_1003E8884()
{
  return sub_1003E7734(*v0);
}

uint64_t sub_1003E8894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1003E88AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1003E74A4, a4);
}

uint64_t sub_1003E88AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_1003E88E8@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1003E8900(a1, (uint64_t (*)(void, void, void, void))sub_1003FBE58, a2);
}

uint64_t sub_1003E8900@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_1003E893C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003E8990(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

double sub_1003E89E4@<D0>(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1003E7FC8(a1, a2[2], a2[3], a2[4], a2[5], (uint64_t *)&v7);
  if (!v3)
  {
    long long v6 = v8[0];
    *a3 = v7;
    a3[1] = v6;
    double result = *(double *)((char *)v8 + 9);
    *(_OWORD *)((char *)a3 + 25) = *(_OWORD *)((char *)v8 + 9);
  }
  return result;
}

uint64_t sub_1003E8A34(void *a1, void *a2)
{
  return sub_1003E7804(a1, a2);
}

double sub_1003E8A4C@<D0>(_OWORD *a1@<X8>)
{
  sub_1003E7D30((uint64_t)&v4);
  long long v2 = v5[0];
  *a1 = v4;
  a1[1] = v2;
  double result = *(double *)((char *)v5 + 9);
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)v5 + 9);
  return result;
}

void *sub_1003E8A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E8AFC(a1, a2, a3, a4);
}

void *sub_1003E8AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone((Class)FPDTapToRadarManager);
  swift_retain();
  id v10 = [v9 init];
  v4[16] = a1;
  v4[17] = v10;
  v4[18] = a2;
  v4[19] = a3;
  v4[20] = a4;
  v4[21] = 0;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 32) + 16) + 136);
  v14[3] = type metadata accessor for DocumentWharf();
  id v14[4] = &off_100AA5F70;
  v14[0] = v11;
  swift_retain_n();
  uint64_t v12 = sub_10044AC48((uint64_t)v14, 0xD000000000000019, 0x80000001009A0A00);
  swift_release();
  swift_release();
  return v12;
}

void sub_1003E8BEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 248);
  uint64_t v3 = *(void *)(*(void *)v0 + 272);
  uint64_t v4 = *(void *)(*(void *)v0 + 264);
  uint64_t v141 = *(void *)(*(void *)v0 + 256);
  uint64_t v142 = v2;
  uint64_t v5 = v141;
  uint64_t v6 = v2;
  uint64_t v143 = v3;
  uint64_t v144 = v4;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v100 = sub_10096C890();
  uint64_t v98 = *(void *)(v100 - 8);
  uint64_t v8 = __chkstk_darwin(v100);
  uint64_t v108 = (uint64_t)&v94 - v9;
  uint64_t v106 = v7;
  uint64_t v97 = *(void *)(v7 - 8);
  __chkstk_darwin(v8);
  uint64_t v107 = (char *)&v94 - v10;
  uint64_t v11 = v5;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v115 = *(AssociatedTypeWitness - 1);
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v114 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v124 = (char *)&v94 - v16;
  uint64_t v95 = v17;
  __chkstk_darwin(v15);
  unint64_t v128 = (char *)&v94 - v18;
  uint64_t v141 = v6;
  uint64_t v142 = v5;
  uint64_t v143 = v4;
  uint64_t v144 = v3;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v104 = sub_10096C890();
  uint64_t v135 = *(char **)(v104 - 8);
  uint64_t v20 = __chkstk_darwin(v104);
  uint64_t v112 = (uint64_t)&v94 - v21;
  uint64_t v111 = v19;
  unint64_t v134 = *(void (***)(char *, char *, void *))(v19 - 8);
  __chkstk_darwin(v20);
  uint64_t v105 = (char *)&v94 - v22;
  uint64_t v113 = v6;
  uint64_t v23 = (void *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v141 = (uint64_t)v23;
  uint64_t v142 = (uint64_t)AssociatedTypeWitness;
  uint64_t v143 = AssociatedConformanceWitness;
  uint64_t v144 = v25;
  uint64_t v99 = v25;
  uint64_t v131 = type metadata accessor for ReconciliationID();
  uint64_t v123 = *(void *)(v131 - 8);
  uint64_t v26 = __chkstk_darwin(v131);
  unint64_t v130 = (char *)&v94 - v27;
  uint64_t v122 = *(v23 - 1);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v118 = (void (**)(char *, uint64_t))((char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v127 = (void (**)(char *, uint64_t))((char *)&v94 - v31);
  uint64_t v96 = v32;
  __chkstk_darwin(v30);
  uint64_t v136 = (char *)&v94 - v33;
  sub_10044B360();
  sub_10044AE18((uint64_t)&v141);
  uint64_t v34 = v141;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v137 = v113;
  uint64_t v138 = v11;
  uint64_t v109 = v4;
  uint64_t v139 = v4;
  uint64_t v140 = v3;
  uint64_t v35 = type metadata accessor for DiskImport.ImportingFolder();
  uint64_t v36 = *(void *)(AssociatedConformanceWitness + 32);
  v37._uint64_t countAndFlagsBits = v34;
  v37._object = v23;
  uint64_t countAndFlagsBits = Filename.init(rawValue:)(v37).rawValue._countAndFlagsBits;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v137 = countAndFlagsBits;
  uint64_t v129 = v35;
  uint64_t v117 = v36;
  sub_10096BA10();
  swift_getWitnessTable();
  uint64_t v39 = sub_10096C1F0();
  uint64_t v40 = sub_10096C1A0();
  uint64_t v145 = AssociatedTypeWitness;
  if (!v40) {
    goto LABEL_19;
  }
  uint64_t v41 = 0;
  uint64_t v116 = v1 + 80;
  uint64_t v42 = v122;
  uint64_t v125 = (void (**)(char *, uint64_t *, void *))(v122 + 16);
  uint64_t v121 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 32);
  uint64_t v120 = (void (**)(char *, uint64_t, uint64_t))(v123 + 8);
  uint64_t v110 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 6);
  uint64_t v103 = (void (**)(char *, uint64_t, uint64_t))(v134 + 4);
  uint64_t v101 = (void (**)(char *, uint64_t))(v134 + 1);
  uint64_t v119 = (void (**)(uint64_t, uint64_t))(v122 + 8);
  char v102 = (void (**)(uint64_t, uint64_t))(v135 + 8);
  uint64_t v126 = v23;
  uint64_t v132 = v39;
  while (1)
  {
    BOOL v46 = sub_10096C130();
    sub_10096C0E0();
    if (v46)
    {
      uint64_t v47 = *(void (**)(char *, uint64_t *, void *))(v42 + 16);
      v47(v136, (uint64_t *)(v39+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * (void)v41), v23);
      uint64_t v48 = (char *)v41 + 1;
      if (__OFADD__(v41, 1)) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v66 = sub_10096CC20();
      if (v96 != 8)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        return;
      }
      uint64_t v141 = v66;
      uint64_t v47 = *v125;
      (*v125)(v136, &v141, v23);
      swift_unknownObjectRelease();
      uint64_t v48 = (char *)v41 + 1;
      if (__OFADD__(v41, 1))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        uint64_t v43 = v123;
LABEL_20:
        swift_bridgeObjectRelease();
        sub_10044AE18((uint64_t)&v141);
        swift_bridgeObjectRelease();
        uint64_t v67 = v142;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v68 = *(void (***)(char *, uint64_t *, void *))(v99 + 32);
        v69._uint64_t countAndFlagsBits = v67;
        v69._object = AssociatedTypeWitness;
        uint64_t v70 = Filename.init(rawValue:)(v69).rawValue._countAndFlagsBits;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v137 = v70;
        uint64_t v125 = v68;
        sub_10096BA10();
        swift_getWitnessTable();
        uint64_t v71 = sub_10096C1F0();
        if (!sub_10096C1A0())
        {
LABEL_38:
          swift_bridgeObjectRelease();
          uint64_t v93 = v133;
          sub_1003ED4D4();
          if (!v93)
          {
            sub_1003EEFE0();
            sub_1003ECAC8();
          }
          return;
        }
        uint64_t v72 = 0;
        uint64_t v122 = v1 + 80;
        uint64_t v73 = (void (**)(char *, uint64_t *, void *))(v115 + 16);
        unint64_t v134 = (void (**)(char *, char *, void *))(v115 + 32);
        uint64_t v127 = (void (**)(char *, uint64_t))(v43 + 8);
        uint64_t v121 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
        uint64_t v120 = (void (**)(char *, uint64_t, uint64_t))(v97 + 32);
        uint64_t v123 = v1 + 88;
        uint64_t v118 = (void (**)(char *, uint64_t))(v97 + 8);
        uint64_t v126 = (void *)(v115 + 8);
        uint64_t v119 = (void (**)(uint64_t, uint64_t))(v98 + 8);
        uint64_t v132 = v71;
        while (2)
        {
          BOOL v76 = sub_10096C130();
          sub_10096C0E0();
          if (v76)
          {
            uint64_t v77 = *(void (**)(char *, uint64_t *, void *))(v115 + 16);
            v77(v128, (uint64_t *)(v71+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * (void)v72), AssociatedTypeWitness);
          }
          else
          {
            uint64_t v92 = sub_10096CC20();
            if (v95 != 8) {
              goto LABEL_46;
            }
            uint64_t v141 = v92;
            uint64_t v77 = *v73;
            (*v73)(v128, &v141, AssociatedTypeWitness);
            swift_unknownObjectRelease();
          }
          uint64_t v78 = (uint64_t)v124;
          if (__OFADD__(v72, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          uint64_t v135 = v72;
          uint64_t v136 = v72 + 1;
          (*v134)(v124, v128, AssociatedTypeWitness);
          sub_10044AE18((uint64_t)&v141);
          uint64_t v79 = v73;
          swift_bridgeObjectRelease();
          uint64_t AssociatedTypeWitness = v145;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = v130;
          v77(v130, (uint64_t *)v78, AssociatedTypeWitness);
          uint64_t v81 = v131;
          swift_storeEnumTagMultiPayload();
          swift_getWitnessTable();
          char v82 = sub_10096C380();
          swift_bridgeObjectRelease();
          (*v127)(v80, v81);
          if ((v82 & 1) == 0)
          {
            swift_retain();
            uint64_t v83 = v108;
            uint64_t v84 = v133;
            sub_1000DF200(v78, v108);
            uint64_t v133 = v84;
            unint64_t v85 = v107;
            if (v84)
            {
              swift_release();
              ((void (*)(char *, void *))*v126)(v124, v145);
              goto LABEL_42;
            }
            swift_release();
            uint64_t v86 = v106;
            if ((*v121)(v83, 1, v106) == 1)
            {
              (*v119)(v83, v100);
              uint64_t v87 = v124;
              uint64_t AssociatedTypeWitness = v145;
              uint64_t v73 = v79;
              v77(v114, (uint64_t *)v124, v145);
              uint64_t v141 = 0;
              uint64_t v142 = 0;
              uint64_t v143 = 0;
              LOBYTE(v144) = 1;
              swift_beginAccess();
              sub_10096BA80();
              sub_10096BAB0();
              swift_endAccess();
              sub_10044B80C();
              ((void (*)(char *, void *))*v126)(v87, AssociatedTypeWitness);
              goto LABEL_35;
            }
            (*v120)(v85, v83, v86);
            uint64_t v88 = &v85[*(int *)(v86 + 52)];
            if (v88[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] == 4)
            {
              (*v118)(v85, v86);
              uint64_t AssociatedTypeWitness = v145;
              ((void (*)(char *, void *))*v126)(v124, v145);
LABEL_23:
              uint64_t v71 = v132;
              uint64_t v73 = v79;
            }
            else
            {
              uint64_t v89 = v124;
              uint64_t v90 = v145;
              v77(v114, (uint64_t *)v124, v145);
              uint64_t v141 = 0;
              uint64_t v142 = 0;
              uint64_t v143 = 0;
              LOBYTE(v144) = 1;
              swift_beginAccess();
              sub_10096BA80();
              sub_10096BAB0();
              swift_endAccess();
              sub_10044B80C();
              uint64_t v91 = v85;
              uint64_t AssociatedTypeWitness = v90;
              uint64_t v73 = v79;
              (*v118)(v91, v86);
              ((void (*)(char *, void *))*v126)(v89, AssociatedTypeWitness);
LABEL_35:
              uint64_t v71 = v132;
            }
            uint64_t v74 = v136;
            uint64_t v75 = sub_10096C1A0();
            uint64_t v72 = v135 + 1;
            if (v74 == (char *)v75) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        v77(v114, (uint64_t *)v78, AssociatedTypeWitness);
        uint64_t v141 = 0;
        uint64_t v142 = 0;
        uint64_t v143 = 0;
        LOBYTE(v144) = 1;
        swift_beginAccess();
        sub_10096BA80();
        sub_10096BAB0();
        swift_endAccess();
        sub_10044B80C();
        ((void (*)(uint64_t, void *))*v126)(v78, AssociatedTypeWitness);
        goto LABEL_23;
      }
    }
    unint64_t v134 = v41;
    uint64_t v135 = v48;
    uint64_t v50 = v126;
    uint64_t v49 = (uint64_t)v127;
    (*v121)((uint64_t)v127, (uint64_t)v136, (uint64_t)v126);
    sub_10044AE18((uint64_t)&v141);
    uint64_t v51 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v52 = v130;
    v47(v130, (uint64_t *)v49, v50);
    uint64_t v53 = v131;
    swift_storeEnumTagMultiPayload();
    swift_getWitnessTable();
    char v54 = sub_10096C380();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))*v120)(v52, v53);
    if ((v54 & 1) == 0) {
      break;
    }
    v47((char *)v118, (uint64_t *)v49, v50);
    uint64_t v141 = 0;
    uint64_t v142 = 0;
    uint64_t v143 = 0;
    LOBYTE(v144) = 1;
    swift_beginAccess();
    sub_10096BA80();
    sub_10096BAB0();
    swift_endAccess();
    sub_10044B80C();
    (*v119)(v49, (uint64_t)v50);
    uint64_t v1 = v51;
    uint64_t AssociatedTypeWitness = v145;
    uint64_t v39 = v132;
    uint64_t v43 = v123;
    uint64_t v42 = v122;
    uint64_t v23 = v50;
LABEL_4:
    uint64_t v44 = v135;
    uint64_t v45 = sub_10096C1A0();
    uint64_t v41 = (void (**)(char *, char *, void *))((char *)v134 + 1);
    if (v44 == (char *)v45) {
      goto LABEL_20;
    }
  }
  uint64_t v55 = v47;
  swift_retain();
  uint64_t v56 = v112;
  uint64_t v57 = v133;
  sub_1000DEDD8(v49, v112);
  uint64_t v133 = v57;
  uint64_t v1 = v51;
  uint64_t AssociatedTypeWitness = v145;
  uint64_t v39 = v132;
  if (!v57)
  {
    swift_release();
    uint64_t v58 = v111;
    int v59 = (*v110)(v56, 1, v111);
    uint64_t v23 = v126;
    if (v59 == 1)
    {
      (*v102)(v56, v104);
      uint64_t v60 = v127;
      v47((char *)v118, (uint64_t *)v127, v23);
      uint64_t v141 = 0;
      uint64_t v142 = 0;
      uint64_t v143 = 0;
      LOBYTE(v144) = 1;
      swift_beginAccess();
      sub_10096BA80();
      sub_10096BAB0();
      swift_endAccess();
      sub_10044B80C();
      (*v119)((uint64_t)v60, (uint64_t)v23);
      uint64_t v43 = v123;
    }
    else
    {
      uint64_t v61 = v105;
      (*v103)(v105, v56, v58);
      uint64_t v62 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v63 = v61;
      BOOL v64 = v61[*(int *)(v62 + 56)] == 3;
      uint64_t v43 = v123;
      if (v64)
      {
        (*v101)(v63, v58);
        (*v119)((uint64_t)v127, (uint64_t)v23);
      }
      else
      {
        uint64_t v65 = v127;
        v55((char *)v118, (uint64_t *)v127, v23);
        uint64_t v141 = 0;
        uint64_t v142 = 0;
        uint64_t v143 = 0;
        LOBYTE(v144) = 1;
        swift_beginAccess();
        sub_10096BA80();
        sub_10096BAB0();
        swift_endAccess();
        sub_10044B80C();
        (*v101)(v105, v58);
        (*v119)((uint64_t)v65, (uint64_t)v23);
      }
    }
    uint64_t v42 = v122;
    goto LABEL_4;
  }
  swift_release();
  (*v119)((uint64_t)v127, (uint64_t)v126);
LABEL_42:
  swift_bridgeObjectRelease();
}

uint64_t sub_1003E9FB8(char a1)
{
  uint64_t result = sub_1003EC9C0();
  if (a1)
  {
    return sub_10044B4FC();
  }
  return result;
}

uint64_t sub_1003E9FFC(void *a1)
{
  uint64_t v3 = *v1;
  sub_10044AE18((uint64_t)&v8);
  long long v10 = v8;
  *(_OWORD *)uint64_t v11 = v9[0];
  *(_OWORD *)&v11[9] = *(_OWORD *)((char *)v9 + 9);
  long long v4 = *(_OWORD *)(v3 + 264);
  v7[0] = *(_OWORD *)(v3 + 248);
  v7[1] = v4;
  uint64_t v5 = (void *)type metadata accessor for DiskImport.MonitoredFolders();
  sub_1003E5A34(a1, v5);
  uint64_t v12 = v10;
  sub_100130294((uint64_t)&v12);
  uint64_t v13 = *((void *)&v10 + 1);
  sub_100130294((uint64_t)&v13);
  uint64_t v14 = *(void *)v11;
  sub_100130294((uint64_t)&v14);
  uint64_t v15 = *(void *)&v11[8];
  sub_100130294((uint64_t)&v15);
  *(void *)&v7[0] = *(void *)&v11[16];
  return sub_100130294((uint64_t)v7);
}

void sub_1003EA0E8(uint64_t a1)
{
  uint64_t v3 = sub_10096B480();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_10096CBD0(38);
  swift_bridgeObjectRelease();
  uint64_t v32 = 0xD000000000000017;
  unint64_t v33 = 0x80000001009A08F0;
  uint64_t v7 = *(void *)(*(void *)(*(void *)(*(void *)(v1 + 128) + 32) + 16) + 136);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void **)(v7 + 24);
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = v8;
  v34._object = v9;
  sub_10096BDC0(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 10;
  v35._object = (void *)0xE100000000000000;
  sub_10096BDC0(v35);
  uint64_t v31 = *(void *)(a1 + 16);
  v36._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 0xA3A736D65744920;
  v37._object = (void *)0xE800000000000000;
  sub_10096BDC0(v37);
  uint64_t v31 = a1;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_100025500(qword_100ACE150, (uint64_t *)&unk_100AD5CC0);
  uint64_t v27 = v10;
  v38._uint64_t countAndFlagsBits = sub_10096BB50();
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  uint64_t v28 = v32;
  unint64_t v29 = v33;
  id v11 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_bridgeObjectRetain_n();
  uint64_t v30 = v6;
  uint64_t v12 = sub_10096B470();
  os_log_type_t v13 = sub_10096C5B0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v3;
    uint64_t v31 = a1;
    uint64_t v32 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v25 = v4;
    uint64_t v16 = sub_10096BB50();
    uint64_t v31 = sub_100719D44(v16, v17, &v32);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "💂🏼‍♀️  TTR-ing stuck items:\n%s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v30, v3);
  }
  uint64_t v18 = *(void **)(v1 + 136);
  NSString v19 = sub_10096BC00();
  NSString v20 = sub_10096BC00();
  swift_bridgeObjectRelease();
  sub_100011348(0, (unint64_t *)&qword_100ACB6E0);
  Class isa = sub_10096C080().super.isa;
  sub_10096AE50();
  Class v22 = sub_10096C080().super.isa;
  NSString v23 = sub_10096BC00();
  [v18 requestTapToRadarWithTitle:v19 description:v20 keywords:isa attachments:v22 displayReason:v23];
}

uint64_t sub_1003EA554(uint64_t a1)
{
  uint64_t v223 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 272);
  unint64_t v4 = *(void *)(*v1 + 256);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_10096C890();
  __chkstk_darwin(v6 - 8);
  Swift::String v229 = (char *)&v203 - v7;
  uint64_t v8 = *(void *)(v2 + 264);
  uint64_t v9 = v2;
  unint64_t v10 = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(v9 + 248);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_10096C890();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  Swift::String v230 = (char *)&v203 - v15;
  uint64_t v215 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  int v237 = (char *)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unsigned int v210 = (char *)&v203 - v19;
  __chkstk_darwin(v18);
  uint64_t v214 = (char *)&v203 - v20;
  uint64_t v251 = v11;
  unint64_t v252 = v4;
  uint64_t v253 = v8;
  uint64_t v254 = v3;
  uint64_t v21 = type metadata accessor for DiskImport.ImportingFolder();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v219 = sub_10096C890();
  uint64_t v208 = *(void (***)(char *, char *, uint64_t))(v219 - 8);
  uint64_t v22 = __chkstk_darwin(v219);
  Swift::String v226 = (char *)&v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  Swift::String v227 = (char *)&v203 - v24;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = v12;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v251 = v12;
  unint64_t v252 = v10;
  uint64_t v225 = AssociatedConformanceWitness;
  uint64_t v253 = AssociatedConformanceWitness;
  uint64_t v254 = v27;
  uint64_t v224 = v27;
  uint64_t v248 = type metadata accessor for ReconciliationID();
  uint64_t v28 = *(void *)(v248 - 8);
  uint64_t v29 = __chkstk_darwin(v248);
  unint64_t v240 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  unint64_t v247 = (char *)&v203 - v32;
  uint64_t v216 = *(void *)(v12 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v238 = (char *)&v203 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  unsigned int v212 = (char *)&v203 - v36;
  __chkstk_darwin(v35);
  uint64_t v242 = (char *)&v203 - v37;
  uint64_t v213 = v21;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  Swift::String v222 = (void (**)(char *, char *, uint64_t))sub_10096C890();
  uint64_t v39 = (uint64_t)*(v222 - 1);
  uint64_t v40 = __chkstk_darwin(v222);
  uint64_t v42 = (char *)&v203 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v40);
  Swift::String v228 = (char *)&v203 - v44;
  int v249 = v1;
  uint64_t v45 = v1[19];
  uint64_t v46 = 1000000000 * v45;
  if ((unsigned __int128)(v45 * (__int128)1000000000) >> 64 != (1000000000 * v45) >> 63)
  {
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  uint64_t v232 = v223 - v46;
  if (__OFSUB__(v223, v46))
  {
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    return result;
  }
  uint64_t v245 = v10;
  uint64_t v47 = v249;
  sub_10044AE18((uint64_t)&v251);
  uint64_t v48 = v251;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v260 = v48;
  uint64_t v209 = *(void *)(v225 + 32);
  uint64_t v49 = sub_10096BA80();
  swift_getWitnessTable();
  uint64_t v211 = (void *)v49;
  uint64_t v231 = sub_10096C1F0();
  uint64_t v234 = 0;
  unint64_t v241 = v47 + 10;
  unint64_t v233 = (uint64_t (**)(char *, uint64_t))(v38 - 8);
  Swift::String v221 = (void (**)(char *, char *, void))(v39 + 32);
  uint64_t v236 = (void (**)(char *, char *, uint64_t))(v216 + 32);
  unint64_t v243 = (void (**)(char *, char *, uint64_t))(v216 + 16);
  unint64_t v246 = (void (**)(char *, uint64_t))(v28 + 8);
  unint64_t v239 = v47 + 14;
  uint64_t v235 = (void (**)(char *, uint64_t))(v216 + 8);
  unint64_t v250 = (char *)_swiftEmptyArrayStorage;
  uint64_t v205 = (void *)0x80000001009A08A0;
  unint64_t v207 = (unint64_t)"- Provider phase for ";
  uint64_t v204 = (void *)0x80000001009A0850;
  uint64_t v206 = (void *)0x80000001009A0870;
  uint64_t v244 = v26;
  uint64_t v50 = v226;
  uint64_t v51 = v227;
  unint64_t v52 = v242;
  uint64_t v218 = v38;
  uint64_t v217 = v42;
LABEL_4:
  uint64_t v53 = v228;
  uint64_t v54 = v231;
  while (1)
  {
    uint64_t v55 = sub_10096C1A0();
    uint64_t v56 = v234;
    uint64_t v57 = v245;
    if (v234 == (void (**)(char *, char *, uint64_t))v55)
    {
      uint64_t v58 = *(void *)(v38 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v42, 1, 1, v38);
    }
    else
    {
      BOOL v59 = sub_10096C130();
      sub_10096C0E0();
      if (v59)
      {
        uint64_t v60 = *(void *)(v38 - 8);
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v60 + 16))(v42, v54+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * (void)v56, v38);
        BOOL v61 = __OFADD__(v56, 1);
        uint64_t v62 = (void (**)(char *, char *, uint64_t))((char *)v56 + 1);
        if (v61) {
          goto LABEL_138;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        uint64_t v60 = *(void *)(v38 - 8);
        if (*(void *)(v60 + 64) != 8) {
          goto LABEL_144;
        }
        uint64_t v251 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 16))(v42, &v251, v38);
        uint64_t result = swift_unknownObjectRelease();
        BOOL v61 = __OFADD__(v56, 1);
        uint64_t v62 = (void (**)(char *, char *, uint64_t))((char *)v56 + 1);
        if (v61)
        {
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
      }
      uint64_t v234 = v62;
      uint64_t v58 = v60;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v42, 0, 1, v38);
      unint64_t v52 = v242;
    }
    (*v221)(v53, v42, v222);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v53, 1, v38) == 1) {
      break;
    }
    uint64_t v63 = &v53[*(int *)(v38 + 48)];
    BOOL v64 = v53;
    uint64_t v65 = *(void *)v63;
    char v66 = v63[8];
    uint64_t v67 = *((void *)v63 + 2);
    (*v236)(v52, v64, v26);
    if (v67 < v232)
    {
      sub_10044AE18((uint64_t)&v251);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v68 = *v243;
      Swift::String v69 = v247;
      (*v243)(v247, v52, v26);
      uint64_t v70 = v248;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v71 = sub_10096C380();
      swift_bridgeObjectRelease();
      uint64_t v72 = *v246;
      uint64_t v73 = v69;
      uint64_t v50 = v226;
      uint64_t v74 = v70;
      uint64_t v26 = v244;
      (*v246)(v73, v74);
      if ((v71 & 1) == 0)
      {
        uint64_t v251 = 0;
        unint64_t v252 = 0xE000000000000000;
        sub_10096CBD0(48);
        v267._uint64_t countAndFlagsBits = 0xD000000000000011;
        v267._object = v205;
        sub_10096BDC0(v267);
        sub_10096D270();
        v268._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
        v268._object = v204;
        sub_10096BDC0(v268);
        uint64_t v260 = v67 / 1000000000;
        sub_10014D284();
        v269._uint64_t countAndFlagsBits = sub_10096C9C0();
        sub_10096BDC0(v269);
        swift_bridgeObjectRelease();
        uint64_t v87 = v251;
        unint64_t v88 = v252;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v89 = v250;
        }
        else {
          uint64_t v89 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
        }
        unint64_t v91 = *((void *)v89 + 2);
        unint64_t v90 = *((void *)v89 + 3);
        if (v91 >= v90 >> 1) {
          uint64_t v89 = sub_100072CCC((char *)(v90 > 1), v91 + 1, 1, v89);
        }
        *((void *)v89 + 2) = v91 + 1;
        unint64_t v250 = v89;
        uint64_t v92 = &v89[16 * v91];
        *((void *)v92 + 4) = v87;
        *((void *)v92 + 5) = v88;
        uint64_t v93 = v242;
        v68(v240, v242, v26);
        uint64_t v94 = v248;
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_10096C3A0();
        uint64_t v95 = v247;
        sub_10096C330();
        uint64_t v96 = v94;
        uint64_t v26 = v244;
        v72(v95, v96);
        sub_10044B80C();
        v68(v212, v93, v26);
        uint64_t v251 = 0;
        unint64_t v252 = 0;
        uint64_t v253 = 0;
        LOBYTE(v254) = 1;
        sub_10096BAB0();
        swift_endAccess();
        sub_10044B80C();
        unint64_t v52 = v93;
        (*v235)(v93, v26);
        uint64_t v51 = v227;
        uint64_t v38 = v218;
        uint64_t v42 = v217;
        goto LABEL_4;
      }
    }
    uint64_t v54 = v231;
    if ((v66 & 1) == 0 && v65 < v223)
    {
      uint64_t v251 = 0;
      unint64_t v252 = 0xE000000000000000;
      sub_10096CBD0(45);
      v265._uint64_t countAndFlagsBits = 0x206D657449202DLL;
      v265._object = (void *)0xE700000000000000;
      sub_10096BDC0(v265);
      sub_10096D270();
      v266._uint64_t countAndFlagsBits = 0xD000000000000024;
      v266._object = v206;
      sub_10096BDC0(v266);
      uint64_t v75 = v251;
      unint64_t v76 = v252;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native) {
        uint64_t v78 = v250;
      }
      else {
        uint64_t v78 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
      }
      unint64_t v80 = *((void *)v78 + 2);
      unint64_t v79 = *((void *)v78 + 3);
      uint64_t v51 = v227;
      if (v80 >= v79 >> 1) {
        uint64_t v78 = sub_100072CCC((char *)(v79 > 1), v80 + 1, 1, v78);
      }
      uint64_t v42 = v217;
      *((void *)v78 + 2) = v80 + 1;
      unint64_t v250 = v78;
      uint64_t v81 = &v78[16 * v80];
      *((void *)v81 + 4) = v75;
      *((void *)v81 + 5) = v76;
      char v82 = *v243;
      uint64_t v83 = v242;
      (*v243)(v240, v242, v26);
      uint64_t v84 = v248;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_10096C3A0();
      unint64_t v85 = v247;
      sub_10096C330();
      uint64_t v86 = v84;
      uint64_t v26 = v244;
      (*v246)(v85, v86);
      sub_10044B80C();
      v82(v212, v83, v26);
      uint64_t v251 = 0;
      unint64_t v252 = 0;
      uint64_t v253 = 0;
      LOBYTE(v254) = 1;
      sub_10096BAB0();
      swift_endAccess();
      sub_10044B80C();
      unint64_t v52 = v83;
      (*v235)(v83, v26);
      uint64_t v38 = v218;
      goto LABEL_4;
    }
    unint64_t v52 = v242;
    (*v235)(v242, v26);
    uint64_t v51 = v227;
    uint64_t v38 = v218;
    uint64_t v42 = v217;
    uint64_t v53 = v228;
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = v249;
  sub_10044AE18((uint64_t)&v251);
  swift_bridgeObjectRelease();
  unint64_t v98 = v252;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v260 = v98;
  uint64_t v213 = *(void *)(v224 + 32);
  uint64_t v99 = sub_10096BA80();
  swift_getWitnessTable();
  uint64_t v100 = TupleTypeMetadata2;
  uint64_t v218 = v99;
  uint64_t v101 = sub_10096C1F0();
  uint64_t v102 = 0;
  Swift::String v228 = (char *)(v100 - 8);
  Swift::String v222 = v208 + 4;
  uint64_t v234 = (void (**)(char *, char *, uint64_t))(v215 + 32);
  uint64_t v242 = (char *)(v215 + 16);
  uint64_t v217 = (char *)(v97 + 11);
  unint64_t v233 = (uint64_t (**)(char *, uint64_t))(v215 + 8);
  uint64_t v211 = (void *)0x80000001009A0830;
  uint64_t v208 = (void (**)(char *, char *, uint64_t))(v207 | 0x8000000000000000);
  unsigned int v212 = (char *)0x80000001009A0800;
  uint64_t v103 = v214;
  Swift::String v221 = (void (**)(char *, char *, void))v101;
  while (1)
  {
    if (v102 == sub_10096C1A0())
    {
      uint64_t v104 = *(void *)(v100 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v50, 1, 1, v100);
    }
    else
    {
      BOOL v105 = sub_10096C130();
      sub_10096C0E0();
      if (v105)
      {
        uint64_t v106 = *(void *)(v100 - 8);
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v106 + 16))(v50, v101+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v102, v100);
        BOOL v61 = __OFADD__(v102++, 1);
        if (v61) {
          goto LABEL_139;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        uint64_t v106 = *(void *)(v100 - 8);
        if (*(void *)(v106 + 64) != 8) {
          goto LABEL_145;
        }
        uint64_t v251 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v106 + 16))(v50, &v251, v100);
        uint64_t result = swift_unknownObjectRelease();
        BOOL v61 = __OFADD__(v102++, 1);
        if (v61) {
          goto LABEL_139;
        }
      }
      uint64_t v104 = v106;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v50, 0, 1, v100);
    }
    (*v222)(v51, v50, v219);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v51, 1, v100) == 1) {
      break;
    }
    uint64_t v231 = v102;
    uint64_t v107 = &v51[*(int *)(v100 + 48)];
    uint64_t v108 = *(void *)v107;
    char v109 = v107[8];
    uint64_t v110 = *((void *)v107 + 2);
    (*v234)(v103, v51, v57);
    if (v110 < v232)
    {
      uint64_t v111 = v57;
      sub_10044AE18((uint64_t)&v251);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))v242;
      uint64_t v113 = v247;
      (*(void (**)(char *, char *, uint64_t))v242)(v247, v103, v111);
      uint64_t v114 = v248;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v115 = sub_10096C380();
      swift_bridgeObjectRelease();
      uint64_t v116 = *v246;
      uint64_t v117 = v113;
      uint64_t v51 = v227;
      uint64_t v118 = v114;
      uint64_t v103 = v214;
      (*v246)(v117, v118);
      if ((v115 & 1) == 0)
      {
        uint64_t v251 = 0;
        unint64_t v252 = 0xE000000000000000;
        sub_10096CBD0(52);
        v272._uint64_t countAndFlagsBits = 0xD000000000000015;
        v272._object = v211;
        sub_10096BDC0(v272);
        sub_10096D270();
        v273._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
        v273._object = v208;
        sub_10096BDC0(v273);
        uint64_t v260 = v110 / 1000000000;
        sub_10014D284();
        v274._uint64_t countAndFlagsBits = sub_10096C9C0();
        sub_10096BDC0(v274);
        swift_bridgeObjectRelease();
        uint64_t v129 = v251;
        unint64_t v130 = v252;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v131 = v250;
        }
        else {
          uint64_t v131 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
        }
        unint64_t v133 = *((void *)v131 + 2);
        unint64_t v132 = *((void *)v131 + 3);
        if (v133 >= v132 >> 1) {
          uint64_t v131 = sub_100072CCC((char *)(v132 > 1), v133 + 1, 1, v131);
        }
        *((void *)v131 + 2) = v133 + 1;
        unint64_t v250 = v131;
        unint64_t v134 = &v131[16 * v133];
        *((void *)v134 + 4) = v129;
        *((void *)v134 + 5) = v130;
        uint64_t v135 = v245;
        v112(v240, v103, v245);
        uint64_t v136 = v248;
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_10096C3A0();
        uint64_t v137 = v247;
        sub_10096C330();
        v116(v137, v136);
        sub_10044B80C();
        v112(v210, v103, v135);
        uint64_t v57 = v135;
        uint64_t v251 = 0;
        unint64_t v252 = 0;
        uint64_t v253 = 0;
        LOBYTE(v254) = 1;
        sub_10096BAB0();
        swift_endAccess();
        sub_10044B80C();
        (*v233)(v103, v135);
        goto LABEL_45;
      }
    }
    if ((v109 & 1) != 0 || v108 >= v223)
    {
      uint64_t v57 = v245;
      (*v233)(v103, v245);
LABEL_45:
      uint64_t v100 = TupleTypeMetadata2;
      uint64_t v50 = v226;
      goto LABEL_46;
    }
    uint64_t v251 = 0;
    unint64_t v252 = 0xE000000000000000;
    sub_10096CBD0(49);
    v270._uint64_t countAndFlagsBits = 0x206D657449202DLL;
    v270._object = (void *)0xE700000000000000;
    sub_10096BDC0(v270);
    sub_10096D270();
    v271._uint64_t countAndFlagsBits = 0xD000000000000028;
    v271._object = v212;
    sub_10096BDC0(v271);
    uint64_t v119 = v251;
    unint64_t v120 = v252;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v121 = v250;
    }
    else {
      uint64_t v121 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
    }
    unint64_t v123 = *((void *)v121 + 2);
    unint64_t v122 = *((void *)v121 + 3);
    uint64_t v50 = v226;
    if (v123 >= v122 >> 1) {
      uint64_t v121 = sub_100072CCC((char *)(v122 > 1), v123 + 1, 1, v121);
    }
    *((void *)v121 + 2) = v123 + 1;
    unint64_t v250 = v121;
    uint64_t v124 = &v121[16 * v123];
    *((void *)v124 + 4) = v119;
    *((void *)v124 + 5) = v120;
    uint64_t v125 = *(void (**)(char *, char *, uint64_t))v242;
    uint64_t v126 = v245;
    (*(void (**)(char *, char *, uint64_t))v242)(v240, v103, v245);
    uint64_t v127 = v248;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_getWitnessTable();
    sub_10096C3A0();
    unint64_t v128 = v247;
    sub_10096C330();
    (*v246)(v128, v127);
    sub_10044B80C();
    v125(v210, v103, v126);
    uint64_t v251 = 0;
    unint64_t v252 = 0;
    uint64_t v253 = 0;
    LOBYTE(v254) = 1;
    sub_10096BAB0();
    swift_endAccess();
    uint64_t v57 = v126;
    sub_10044B80C();
    (*v233)(v103, v126);
    uint64_t v100 = TupleTypeMetadata2;
LABEL_46:
    uint64_t v101 = (uint64_t)v221;
    uint64_t v102 = v231;
  }
  swift_bridgeObjectRelease();
  sub_10044AE18((uint64_t)&v251);
  uint64_t v138 = v253;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v138 & 0xC000000000000001) != 0)
  {
    sub_10096CAA0();
    uint64_t result = sub_10096C370();
    uint64_t v138 = v255;
    uint64_t v231 = v256;
    uint64_t v139 = v257;
    uint64_t v140 = v258;
    unint64_t v141 = v259;
  }
  else
  {
    uint64_t v140 = 0;
    uint64_t v142 = -1 << *(unsigned char *)(v138 + 32);
    uint64_t v143 = *(void *)(v138 + 56);
    uint64_t v231 = v138 + 56;
    uint64_t v139 = ~v142;
    uint64_t v144 = -v142;
    if (v144 < 64) {
      uint64_t v145 = ~(-1 << v144);
    }
    else {
      uint64_t v145 = -1;
    }
    unint64_t v141 = v145 & v143;
  }
  uint64_t v146 = v230;
  uint64_t v232 = v138 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v147 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v216 + 56);
  Swift::String v227 = (char *)v139;
  Swift::String v228 = (char *)((unint64_t)(v139 + 64) >> 6);
  Swift::String v226 = "ort";
  unint64_t v148 = v238;
  if (v138 < 0) {
    goto LABEL_72;
  }
LABEL_70:
  if (v141)
  {
    unint64_t v149 = __clz(__rbit64(v141));
    v141 &= v141 - 1;
    unint64_t v150 = v149 | ((void)v140 << 6);
LABEL_86:
    uint64_t v152 = v244;
    (*(void (**)(char *, unint64_t, uint64_t))(v216 + 16))(v146, *(void *)(v138 + 48) + *(void *)(v216 + 72) * v150, v244);
    while (1)
    {
      (*v147)(v146, 0, 1, v152);
      (*v236)(v238, v146, v152);
      uint64_t v251 = 0;
      unint64_t v252 = 0xE000000000000000;
      sub_10096CBD0(22);
      v275._uint64_t countAndFlagsBits = 0xD000000000000014;
      v275._object = (void *)0x80000001009A07E0;
      sub_10096BDC0(v275);
      sub_10096D270();
      uint64_t v157 = v251;
      unint64_t v158 = v252;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v159 = v250;
      }
      else {
        uint64_t v159 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
      }
      unint64_t v161 = *((void *)v159 + 2);
      unint64_t v160 = *((void *)v159 + 3);
      if (v161 >= v160 >> 1) {
        uint64_t v159 = sub_100072CCC((char *)(v160 > 1), v161 + 1, 1, v159);
      }
      *((void *)v159 + 2) = v161 + 1;
      unint64_t v250 = v159;
      uint64_t v162 = &v159[16 * v161];
      *((void *)v162 + 4) = v157;
      *((void *)v162 + 5) = v158;
      uint64_t v163 = v244;
      (*v243)(v240, v148, v244);
      uint64_t v164 = v248;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_10096C3A0();
      unint64_t v165 = v247;
      sub_10096C330();
      (*v246)(v165, v164);
      swift_endAccess();
      sub_10044B80C();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v235)(v148, v163);
      uint64_t v146 = v230;
      if ((v138 & 0x8000000000000000) == 0) {
        goto LABEL_70;
      }
LABEL_72:
      if (!sub_10096CAD0()) {
        break;
      }
      unint64_t v151 = v230;
      uint64_t v152 = v244;
      sub_10096D290();
      uint64_t v146 = v151;
      swift_unknownObjectRelease();
    }
    uint64_t v146 = v230;
    goto LABEL_96;
  }
  uint64_t v153 = (uint64_t)(v140 + 1);
  if (__OFADD__(v140, 1))
  {
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  if (v153 < (uint64_t)v228)
  {
    unint64_t v154 = *(void *)(v231 + 8 * v153);
    uint64_t v155 = v140 + 1;
    if (v154) {
      goto LABEL_85;
    }
    uint64_t v155 = v140 + 2;
    if ((uint64_t)(v140 + 2) >= (uint64_t)v228) {
      goto LABEL_96;
    }
    unint64_t v154 = *(void *)(v231 + 8 * (void)v155);
    if (v154) {
      goto LABEL_85;
    }
    uint64_t v155 = v140 + 3;
    if ((uint64_t)(v140 + 3) >= (uint64_t)v228) {
      goto LABEL_96;
    }
    unint64_t v154 = *(void *)(v231 + 8 * (void)v155);
    if (v154)
    {
LABEL_85:
      unint64_t v141 = (v154 - 1) & v154;
      unint64_t v150 = __clz(__rbit64(v154)) + ((void)v155 << 6);
      uint64_t v140 = v155;
      goto LABEL_86;
    }
    uint64_t v156 = v140 + 4;
    while (v228 != v156)
    {
      unint64_t v154 = *(void *)(v231 + 8 * (void)v156++);
      if (v154)
      {
        uint64_t v155 = v156 - 1;
        goto LABEL_85;
      }
    }
  }
LABEL_96:
  uint64_t v166 = v244;
  (*v147)(v146, 1, 1, v244);
  sub_1000146B4();
  uint64_t v167 = sub_10096C110();
  Swift::Int v168 = sub_10096C1B0();
  int64_t v169 = v249;
  if (v168) {
    unint64_t v170 = (void *)sub_1003FB210(v167, v166, v209);
  }
  else {
    unint64_t v170 = &_swiftEmptySetSingleton;
  }
  int64_t v171 = v226;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v169[12] = v170;
  swift_bridgeObjectRelease();
  sub_10044B80C();
  sub_10044AE18((uint64_t)&v251);
  uint64_t v172 = v254;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v172 & 0xC000000000000001) != 0)
  {
    sub_10096CAA0();
    uint64_t v173 = v245;
    uint64_t result = sub_10096C370();
    uint64_t v172 = v260;
    unint64_t v243 = v261;
    uint64_t v174 = v262;
    uint64_t v175 = v263;
    unint64_t v176 = v264;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v177 = -1 << *(unsigned char *)(v172 + 32);
    uint64_t v178 = *(void *)(v172 + 56);
    unint64_t v243 = (void (**)(char *, char *, uint64_t))(v172 + 56);
    uint64_t v174 = ~v177;
    uint64_t v179 = -v177;
    if (v179 < 64) {
      uint64_t v180 = ~(-1 << v179);
    }
    else {
      uint64_t v180 = -1;
    }
    unint64_t v176 = v180 & v178;
    uint64_t v173 = v245;
  }
  unint64_t v181 = v229;
  uint64_t v244 = v172 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v182 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v215 + 56);
  uint64_t v236 = (void (**)(char *, char *, uint64_t))v174;
  unint64_t v238 = (char *)((unint64_t)(v174 + 64) >> 6);
  unint64_t v183 = (void *)((unint64_t)v171 | 0x8000000000000000);
  uint64_t v184 = v247;
  if (v172 < 0) {
    goto LABEL_108;
  }
LABEL_106:
  if (v176)
  {
    unint64_t v185 = __clz(__rbit64(v176));
    v176 &= v176 - 1;
    unint64_t v186 = v185 | ((void)v175 << 6);
    goto LABEL_122;
  }
  uint64_t v188 = (uint64_t)(v175 + 1);
  if (__OFADD__(v175, 1)) {
    goto LABEL_141;
  }
  if (v188 >= (uint64_t)v238) {
    goto LABEL_132;
  }
  unint64_t v189 = (unint64_t)v243[v188];
  uint64_t v190 = v175 + 1;
  if (v189) {
    goto LABEL_121;
  }
  uint64_t v190 = v175 + 2;
  if ((uint64_t)(v175 + 2) >= (uint64_t)v238) {
    goto LABEL_132;
  }
  unint64_t v189 = (unint64_t)v243[(void)v190];
  if (v189) {
    goto LABEL_121;
  }
  uint64_t v190 = v175 + 3;
  if ((uint64_t)(v175 + 3) >= (uint64_t)v238) {
    goto LABEL_132;
  }
  unint64_t v189 = (unint64_t)v243[(void)v190];
  if (v189)
  {
LABEL_121:
    unint64_t v176 = (v189 - 1) & v189;
    unint64_t v186 = __clz(__rbit64(v189)) + ((void)v190 << 6);
    uint64_t v175 = v190;
LABEL_122:
    (*(void (**)(char *, unint64_t, uint64_t))(v215 + 16))(v181, *(void *)(v172 + 48) + *(void *)(v215 + 72) * v186, v173);
    while (1)
    {
      (*v182)(v181, 0, 1, v173);
      (*v234)(v237, v181, v173);
      uint64_t v251 = 0;
      unint64_t v252 = 0xE000000000000000;
      sub_10096CBD0(22);
      v276._uint64_t countAndFlagsBits = 0xD000000000000014;
      v276._object = v183;
      sub_10096BDC0(v276);
      sub_10096D270();
      uint64_t v192 = v251;
      unint64_t v193 = v252;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v194 = v250;
      }
      else {
        unint64_t v194 = sub_100072CCC(0, *((void *)v250 + 2) + 1, 1, v250);
      }
      unint64_t v196 = *((void *)v194 + 2);
      unint64_t v195 = *((void *)v194 + 3);
      if (v196 >= v195 >> 1) {
        unint64_t v194 = sub_100072CCC((char *)(v195 > 1), v196 + 1, 1, v194);
      }
      *((void *)v194 + 2) = v196 + 1;
      unint64_t v250 = v194;
      uint64_t v197 = &v194[16 * v196];
      *((void *)v197 + 4) = v192;
      *((void *)v197 + 5) = v193;
      unint64_t v198 = v237;
      uint64_t v173 = v245;
      (*(void (**)(char *, char *, uint64_t))v242)(v240, v237, v245);
      uint64_t v199 = v248;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_10096C3A0();
      sub_10096C330();
      (*v246)(v184, v199);
      swift_endAccess();
      sub_10044B80C();
      uint64_t result = (*v233)(v198, v173);
      unint64_t v181 = v229;
      if ((v172 & 0x8000000000000000) == 0) {
        goto LABEL_106;
      }
LABEL_108:
      if (!sub_10096CAD0())
      {
        unint64_t v181 = v229;
        goto LABEL_132;
      }
      long long v187 = v229;
      sub_10096D290();
      unint64_t v181 = v187;
      swift_unknownObjectRelease();
    }
  }
  unint64_t v191 = v175 + 4;
  while (v238 != v191)
  {
    unint64_t v189 = (unint64_t)v243[(void)v191++];
    if (v189)
    {
      uint64_t v190 = v191 - 1;
      goto LABEL_121;
    }
  }
LABEL_132:
  (*v182)(v181, 1, 1, v173);
  sub_1000146B4();
  uint64_t v200 = sub_10096C110();
  if (sub_10096C1B0()) {
    uint64_t v201 = (void *)sub_1003FB210(v200, v173, v213);
  }
  else {
    uint64_t v201 = &_swiftEmptySetSingleton;
  }
  uint64_t v202 = v249;
  swift_bridgeObjectRelease();
  v202[13] = v201;
  swift_bridgeObjectRelease();
  sub_10044B80C();
  if (*((void *)v250 + 2))
  {
    sub_10044B134();
    sub_1003EA0E8((uint64_t)v250);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003EC9C0()
{
  if (*(void *)(v0 + 168))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C750();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + 168))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C720();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + 168) = 0;

  return swift_unknownObjectRelease();
}

uint64_t sub_1003ECA60()
{
  swift_bridgeObjectRetain();
  v1._object = (void *)0x8000000100997040;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  sub_10096BE70(v1);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1003ECAC8()
{
  Swift::String v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_10096B710();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v40 = (void *)((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v39 = (void *)((char *)v33 - v6);
  uint64_t v45 = sub_10096B820();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v37 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v44 = (char *)v33 - v9;
  uint64_t v43 = (void (*)(char *, uint64_t))sub_10096B7D0();
  uint64_t v42 = *((void *)v43 - 1);
  __chkstk_darwin(v43);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096C6E0();
  uint64_t ObjectType = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044AE18((uint64_t)&v48);
  long long v50 = v48;
  *(_OWORD *)uint64_t v51 = v49[0];
  *(_OWORD *)&v51[9] = *(_OWORD *)((char *)v49 + 9);
  uint64_t v15 = v2[31];
  uint64_t v16 = v2[32];
  uint64_t v17 = v2[33];
  uint64_t v18 = v2[34];
  v47[0] = v15;
  v47[1] = v16;
  v47[2] = v17;
  v47[3] = v18;
  type metadata accessor for DiskImport.MonitoredFolders();
  char v19 = sub_1003E58CC();
  uint64_t v52 = v50;
  sub_100130294((uint64_t)&v52);
  uint64_t v53 = *((void *)&v50 + 1);
  sub_100130294((uint64_t)&v53);
  uint64_t v54 = *(void *)v51;
  sub_100130294((uint64_t)&v54);
  uint64_t v55 = *(void *)&v51[8];
  sub_100130294((uint64_t)&v55);
  v47[0] = *(void *)&v51[16];
  uint64_t result = sub_100130294((uint64_t)v47);
  if (v19) {
    return sub_1003EC9C0();
  }
  uint64_t v36 = v3;
  if (!v1[21])
  {
    sub_1003ECA60();
    uint64_t v35 = (void (*)(void *))sub_100011348(0, (unint64_t *)&qword_100ACB010);
    uint64_t v21 = (void *)sub_1006F2F2C();
    v33[2] = v21;
    *(void *)&long long v48 = _swiftEmptyArrayStorage;
    v33[1] = sub_1003FB684((unint64_t *)&qword_100ACF610, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
    id v34 = v21;
    sub_10002B7CC((uint64_t *)&unk_100ACB020);
    sub_100025500((unint64_t *)&qword_100ACF620, (uint64_t *)&unk_100ACB020);
    sub_10096CA60();
    uint64_t v22 = sub_10096C6F0();

    (*(void (**)(char *, uint64_t))(ObjectType + 8))(v14, v12);
    v1[21] = v22;
    uint64_t result = swift_unknownObjectRelease();
    if (v1[21])
    {
      swift_getObjectType();
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v15;
      v24[3] = v16;
      v24[4] = v17;
      v24[5] = v18;
      v24[6] = v23;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1004B1508();
      sub_1006B7CE4(0, (uint64_t)v11, (uint64_t)sub_1003FB73C, (uint64_t)v24);
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, void *))(v42 + 8))(v11, v43);
      uint64_t result = swift_release();
      if (v1[21])
      {
        uint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v25 = v37;
        sub_10096B800();
        uint64_t v26 = v1[18];
        uint64_t v27 = v39;
        *uint64_t v39 = v26;
        LODWORD(v42) = enum case for DispatchTimeInterval.seconds(_:);
        uint64_t v28 = v41;
        uint64_t v35 = *(void (**)(void *))(v41 + 104);
        uint64_t v29 = v36;
        v35(v27);
        sub_10096B840();
        uint64_t v30 = *(void (**)(void *, uint64_t))(v28 + 8);
        v30(v27, v29);
        uint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
        v43(v25, v45);
        void *v27 = v26;
        ((void (*)(void *, void, uint64_t))v35)(v27, v42, v29);
        uint64_t v31 = v40;
        sub_1000418D4(v40);
        uint64_t v32 = v44;
        sub_10096C7D0();
        swift_unknownObjectRelease();
        v30(v31, v29);
        v30(v27, v29);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v43)(v32, v45);
        if (v1[21])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_10096C730();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1003ED240()
{
  uint64_t v0 = sub_10096B0E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10096B480();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v10 = sub_10096B470();
    os_log_type_t v11 = sub_10096C5A0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "💂🏼‍♀️  evaluating stuck imports", v12, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10096B0D0();
    sub_10096B080();
    double v14 = v13;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    double v15 = v14 * 1000000000.0;
    if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          uint64_t v16 = sub_1003EA554((uint64_t)v15);
          sub_1003ECAC8(v16);
          return swift_release();
        }
LABEL_11:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

void sub_1003ED4D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_10096B480();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  id v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v33 - v6;
  sub_10044AE18((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v2[33];
  uint64_t v8 = v2[31];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = v2[32];
  uint64_t v11 = v2[34];
  uint64_t v40 = v8;
  uint64_t v41 = v10;
  uint64_t v42 = v7;
  uint64_t v43 = v11;
  type metadata accessor for DiskImport.ImportingFolder();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v12 = sub_10096BA20();
  swift_bridgeObjectRelease();
  sub_10044AE18((uint64_t)&v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_10096BA20();
  swift_bridgeObjectRelease();
  uint64_t v15 = v12 + v14;
  if (__OFADD__(v12, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_10044AE18((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10096C320();
  swift_bridgeObjectRelease();
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_10044AE18((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_10096C320();
  swift_bridgeObjectRelease();
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v20 = v1;
  sub_10044AE18((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v13;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v38;
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  uint64_t v21 = sub_10096C320();
  swift_bridgeObjectRelease();
  uint64_t v22 = v19 + v21;
  if (__OFADD__(v19, v21))
  {
LABEL_20:
    __break(1u);
    return;
  }
  sub_10044AE18((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0 || v22 < 51)
  {
    sub_10044AE18((uint64_t)&v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45 == 1 && v22 <= 29)
    {
      id v28 = (id)fpfs_current_or_default_log();
      uint64_t v29 = v34;
      sub_10096B490();
      uint64_t v30 = sub_10096B470();
      os_log_type_t v31 = sub_10096C5A0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "💂🏼‍♀️ we can track more items", v32, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
      swift_beginAccess();
      *((unsigned char *)v20 + 120) = 0;
      sub_10044B80C();
      sub_1003EEFE0();
    }
  }
  else
  {
    id v23 = (id)fpfs_current_or_default_log();
    uint64_t v24 = v35;
    sub_10096B490();
    uint64_t v25 = sub_10096B470();
    os_log_type_t v26 = sub_10096C5A0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 134217984;
      uint64_t v44 = v22;
      sub_10096C8C0();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "💂🏼‍♀️ we're tracking to many importing items (%ld)", v27, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
    swift_beginAccess();
    *((unsigned char *)v20 + 120) = 1;
    sub_10044B80C();
  }
}

uint64_t sub_1003EDAF8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = (result / 0x3E8 + 1) * v2;
  if (((unsigned __int128)(result / 0x3E8 + 1) * v2) >> 64 != v3 >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t result = 1000000000 * v3;
  if ((unsigned __int128)(v3 * (__int128)1000000000) >> 64 != (1000000000 * v3) >> 63) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1003EDB44(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  uint64_t v85 = a1;
  uint64_t v3 = (void *)*v2;
  uint64_t v73 = v2 + 14;
  uint64_t v4 = v3[33];
  uint64_t v5 = v3[31];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v62 = (uint8_t *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (uint8_t *)&v54 - v9;
  uint64_t v59 = sub_10096B480();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  Swift::String v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v11 - 8);
  uint64_t v56 = (uint8_t *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v66 = (os_log_t)type metadata accessor for SnapshotItem();
  uint64_t v55 = sub_10096C890();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v72 = (char *)&v54 - v13;
  uint64_t v14 = v3[34];
  uint64_t v15 = v3[32];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v64 = v4;
  uint64_t v63 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v14;
  uint64_t v60 = v15;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v80 = AssociatedTypeWitness;
  uint64_t v81 = v16;
  uint64_t v57 = AssociatedConformanceWitness;
  uint64_t v82 = AssociatedConformanceWitness;
  uint64_t v83 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_10096C890();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  os_log_type_t v26 = (char *)&v54 - v25;
  uint64_t v27 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v75 + 16);
  uint64_t v67 = AssociatedTypeWitness;
  uint64_t v70 = v27;
  uint64_t v71 = v75 + 16;
  v27((uint8_t *)v22, v85, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_getWitnessTable();
  sub_10096C3A0();
  sub_10096C340();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  swift_endAccess();
  sub_10044B80C();
  id v28 = v2;
  uint64_t v29 = v74;
  uint64_t result = sub_1003ED4D4();
  if (v29) {
    return result;
  }
  os_log_type_t v31 = v72;
  uint64_t v32 = v85;
  sub_10044AE18((uint64_t)&v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v84) {
    return result;
  }
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(**(void **)(v2[16] + 32) + 240);
  swift_retain();
  v33(v32, 1);
  swift_release();
  uint64_t v74 = v2 + 10;
  os_log_t v34 = v66;
  Class isa = v66[-1].isa;
  if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v31, 1, v66) != 1)
  {
    uint64_t v39 = (uint64_t)v56;
    sub_10010DA98((uint64_t)&v31[SLODWORD(v34[6].isa)], (uint64_t)v56);
    (*((void (**)(char *, os_log_t))isa + 1))(v31, v34);
    unsigned int v40 = *(_DWORD *)(v39 + 4);
    char v41 = *(unsigned char *)(v39 + 8);
    uint64_t result = sub_10010DAFC(v39);
    uint64_t v36 = v67;
    uint64_t v38 = v69;
    uint64_t v37 = v32;
    if (v41)
    {
      uint64_t v73 = 0;
      LODWORD(v72) = 1;
      goto LABEL_8;
    }
    uint64_t v43 = v28[20];
    uint64_t v44 = (v40 / 0x3E8 + 1) * v43;
    if (((unsigned __int128)(v40 / 0x3E8 + 1) * v43) >> 64 == v44 >> 63)
    {
      uint64_t v45 = 1000000000 * v44;
      if ((unsigned __int128)(v44 * (__int128)1000000000) >> 64 == (1000000000 * v44) >> 63)
      {
        uint64_t v42 = v65;
        if (!__OFADD__(v68, v45))
        {
          uint64_t v73 = (void *)(v68 + v45);
          LODWORD(v72) = 0;
          goto LABEL_13;
        }
LABEL_20:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
  uint64_t v73 = 0;
  LODWORD(v72) = 1;
  uint64_t v36 = v67;
  uint64_t v37 = v32;
  uint64_t v38 = v69;
LABEL_8:
  uint64_t v42 = v65;
LABEL_13:
  id v46 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  v70(v42, v37, v36);
  uint64_t v47 = sub_10096B470();
  uint64_t v48 = v36;
  os_log_type_t v49 = sub_10096C5A0();
  if (os_log_type_enabled(v47, v49))
  {
    os_log_t v66 = v47;
    long long v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v80 = v67;
    uint64_t v65 = v50;
    *(_DWORD *)long long v50 = 136315138;
    uint64_t v56 = v50 + 4;
    uint64_t v51 = sub_10096D220();
    uint64_t v76 = sub_100719D44(v51, v52, &v80);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint8_t *, uint64_t))(v75 + 8))(v42, v48);
    os_log_t v53 = v66;
    _os_log_impl((void *)&_mh_execute_header, v66, v49, "💂🏼‍♀️ start monitoring import:disk for %s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v37 = v32;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v59);
  }
  else
  {
    (*(void (**)(uint8_t *, uint64_t))(v75 + 8))(v42, v48);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
  }
  v70(v62, v37, v48);
  LOBYTE(v80) = (_BYTE)v72;
  uint64_t v76 = (uint64_t)v73;
  uint64_t v77 = v72 & 1;
  uint64_t v78 = v68;
  char v79 = 0;
  swift_beginAccess();
  uint64_t v80 = v63;
  uint64_t v81 = v60;
  uint64_t v82 = v64;
  uint64_t v83 = v61;
  type metadata accessor for DiskImport.ImportingFolder();
  sub_10096BA80();
  sub_10096BAB0();
  swift_endAccess();
  sub_10044B80C();
  return sub_1003ED4D4();
}

uint64_t sub_1003EE594(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  uint64_t v85 = a1;
  uint64_t v3 = (void *)*v2;
  uint64_t v73 = v2 + 14;
  uint64_t v4 = v3[34];
  uint64_t v5 = v3[32];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v62 = (uint8_t *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (uint8_t *)&v54 - v9;
  uint64_t v59 = sub_10096B480();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  Swift::String v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v11 - 8);
  uint64_t v56 = (uint8_t *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v66 = (os_log_t)type metadata accessor for SnapshotItem();
  uint64_t v55 = sub_10096C890();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v72 = (char *)&v54 - v13;
  uint64_t v14 = v3[33];
  uint64_t v15 = v3[31];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v61 = v14;
  uint64_t v60 = v15;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v4;
  uint64_t v63 = v5;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v80 = v16;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = AssociatedConformanceWitness;
  uint64_t v83 = v18;
  uint64_t v57 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_10096C890();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  os_log_type_t v26 = (char *)&v54 - v25;
  uint64_t v27 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v75 + 16);
  uint64_t v67 = AssociatedTypeWitness;
  uint64_t v70 = v27;
  uint64_t v71 = v75 + 16;
  v27((uint8_t *)v22, v85, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_getWitnessTable();
  sub_10096C3A0();
  sub_10096C340();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  swift_endAccess();
  sub_10044B80C();
  id v28 = v2;
  uint64_t v29 = v74;
  uint64_t result = sub_1003ED4D4();
  if (v29) {
    return result;
  }
  os_log_type_t v31 = v72;
  uint64_t v32 = v85;
  sub_10044AE18((uint64_t)&v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v84) {
    return result;
  }
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(**(void **)(v2[16] + 40) + 240);
  swift_retain();
  v33(v32, 1);
  swift_release();
  uint64_t v74 = v2 + 10;
  os_log_t v34 = v66;
  Class isa = v66[-1].isa;
  if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v31, 1, v66) != 1)
  {
    uint64_t v39 = (uint64_t)v56;
    sub_10010DA98((uint64_t)&v31[SLODWORD(v34[6].isa)], (uint64_t)v56);
    (*((void (**)(char *, os_log_t))isa + 1))(v31, v34);
    unsigned int v40 = *(_DWORD *)(v39 + 4);
    char v41 = *(unsigned char *)(v39 + 8);
    uint64_t result = sub_10010DAFC(v39);
    uint64_t v36 = v67;
    uint64_t v38 = v69;
    uint64_t v37 = v32;
    if (v41)
    {
      uint64_t v73 = 0;
      LODWORD(v72) = 1;
      goto LABEL_8;
    }
    uint64_t v43 = v28[20];
    uint64_t v44 = (v40 / 0x3E8 + 1) * v43;
    if (((unsigned __int128)(v40 / 0x3E8 + 1) * v43) >> 64 == v44 >> 63)
    {
      uint64_t v45 = 1000000000 * v44;
      if ((unsigned __int128)(v44 * (__int128)1000000000) >> 64 == (1000000000 * v44) >> 63)
      {
        uint64_t v42 = v65;
        if (!__OFADD__(v68, v45))
        {
          uint64_t v73 = (void *)(v68 + v45);
          LODWORD(v72) = 0;
          goto LABEL_13;
        }
LABEL_20:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
  uint64_t v73 = 0;
  LODWORD(v72) = 1;
  uint64_t v36 = v67;
  uint64_t v37 = v32;
  uint64_t v38 = v69;
LABEL_8:
  uint64_t v42 = v65;
LABEL_13:
  id v46 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  v70(v42, v37, v36);
  uint64_t v47 = sub_10096B470();
  uint64_t v48 = v36;
  os_log_type_t v49 = sub_10096C5A0();
  if (os_log_type_enabled(v47, v49))
  {
    os_log_t v66 = v47;
    long long v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v80 = v67;
    uint64_t v65 = v50;
    *(_DWORD *)long long v50 = 136315138;
    uint64_t v56 = v50 + 4;
    uint64_t v51 = sub_10096D220();
    uint64_t v76 = sub_100719D44(v51, v52, &v80);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint8_t *, uint64_t))(v75 + 8))(v42, v48);
    os_log_t v53 = v66;
    _os_log_impl((void *)&_mh_execute_header, v66, v49, "💂🏼‍♀️ start monitoring import:provider for %s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v37 = v32;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v59);
  }
  else
  {
    (*(void (**)(uint8_t *, uint64_t))(v75 + 8))(v42, v48);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
  }
  v70(v62, v37, v48);
  LOBYTE(v80) = (_BYTE)v72;
  uint64_t v76 = (uint64_t)v73;
  uint64_t v77 = v72 & 1;
  uint64_t v78 = v68;
  char v79 = 0;
  swift_beginAccess();
  uint64_t v80 = v60;
  uint64_t v81 = v63;
  uint64_t v82 = v61;
  uint64_t v83 = v64;
  type metadata accessor for DiskImport.ImportingFolder();
  sub_10096BA80();
  sub_10096BAB0();
  swift_endAccess();
  sub_10044B80C();
  return sub_1003ED4D4();
}

uint64_t sub_1003EEFE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044AE18((uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    sub_10096B0D0();
    sub_10096B080();
    double v8 = v7;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          uint64_t v10 = *(void *)(*(void *)(v0 + 128) + 16);
          __chkstk_darwin(result);
          *(&v13 - 2) = v1;
          *(&v13 - 1) = v11;
          uint64_t v12 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, int), uint64_t *))(*(void *)v10 + 264);
          swift_retain();
          v12(sub_1003FB664, &v13 - 4);
          return swift_release();
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1003EF1F4(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v98 = a5;
  int v112 = a3;
  uint64_t v119 = a2;
  uint64_t v120 = a1;
  uint64_t v6 = *a4;
  uint64_t v7 = *(void *)(*a4 + 264);
  uint64_t v8 = *(void *)(*a4 + 248);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v6 + 272);
  uint64_t v121 = a4;
  uint64_t v11 = *(void *)(v6 + 256);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v103 = v7;
  uint64_t v102 = v8;
  uint64_t v101 = v10;
  uint64_t v100 = v11;
  v127[0] = AssociatedTypeWitness;
  v127[1] = v12;
  uint64_t v13 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v127[2] = AssociatedConformanceWitness;
  uint64_t v128 = swift_getAssociatedConformanceWitness();
  uint64_t v107 = v128;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v114 = *(void *)(v14 - 8);
  uint64_t v115 = v14;
  __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v98 - v15;
  uint64_t v118 = sub_10096C890();
  uint64_t v130 = *(void *)(v118 - 8);
  uint64_t v16 = __chkstk_darwin(v118);
  uint64_t v111 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v110 = (char *)&v98 - v19;
  uint64_t v122 = v12;
  uint64_t v20 = *(void *)(v12 - 8);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v104 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  BOOL v105 = (char *)&v98 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v108 = (uint64_t)&v98 - v26;
  __chkstk_darwin(v25);
  uint64_t v116 = (char *)&v98 - v27;
  uint64_t v28 = sub_10096C890();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v98 - v31;
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = __chkstk_darwin(v30);
  uint64_t v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v98 - v38;
  __chkstk_darwin(v37);
  char v41 = (char *)&v98 - v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v120, v28);
  uint64_t v120 = v33;
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v13);
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v130 + 16);
  uint64_t v109 = v20;
  uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v42 == 1)
  {
    uint64_t v45 = v116;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    id v46 = v110;
    uint64_t v47 = v118;
    (*v43)(v110, v119, v118);
    uint64_t v48 = v122;
    if ((*v44)(v46, 1, v122) == 1)
    {
      (*(void (**)(char *, uint64_t))(v130 + 8))(v46, v47);
LABEL_33:
      sub_10044AE18((uint64_t)v127);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v85 = v129 ^ 1;
      return v85 & 1;
    }
    uint64_t v62 = v109;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v45, v46, v48);
    sub_10044AE18((uint64_t)v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void (**)(char *, char *))(v62 + 16);
    uint64_t v64 = v48;
    uint64_t v65 = v113;
    uint64_t v66 = v64;
    v63(v113, v45);
    uint64_t v67 = v115;
    swift_storeEnumTagMultiPayload();
    swift_getWitnessTable();
    char v68 = sub_10096C380();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v65, v67);
    if (v68)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v116, v66);
      goto LABEL_33;
    }
    uint64_t v86 = v116;
    ((void (*)(char *, char *, uint64_t))v63)(v104, v116, v66);
    swift_beginAccess();
    sub_10096C3A0();
    uint64_t v87 = v105;
    sub_10096C330();
    unint64_t v88 = *(void (**)(char *, uint64_t))(v62 + 8);
    v88(v87, v66);
    swift_endAccess();
    sub_10044B80C();
    uint64_t v89 = v117;
    sub_1003ED4D4(v90);
    if (!v89)
    {
      v88(v86, v66);
      goto LABEL_33;
    }
    v88(v86, v66);
    return v85 & 1;
  }
  uint64_t v110 = v36;
  uint64_t v116 = v39;
  unsigned __int8 v49 = v112;
  uint64_t v50 = v120;
  uint64_t v51 = v13;
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v41, v32, v13);
  unint64_t v52 = v111;
  uint64_t v53 = v118;
  (*v43)(v111, v119, v118);
  uint64_t v54 = v122;
  unsigned int v55 = (*v44)(v52, 1, v122);
  uint64_t v56 = v51;
  uint64_t v99 = v41;
  if (v55 != 1)
  {
    uint64_t v69 = v50;
    uint64_t v70 = v109;
    uint64_t v71 = v108;
    (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v108, v52, v54);
    int v72 = v49;
    if (v49 == 4)
    {
      sub_10044AE18((uint64_t)v127);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v91 = v113;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v113, v71, v54);
      uint64_t v92 = v115;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v93 = sub_10096C380();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v91, v92);
      if (v93)
      {
        uint64_t v73 = v69;
        uint64_t v71 = v108;
        uint64_t v54 = v122;
      }
      else
      {
        sub_10044AE18((uint64_t)v127);
        uint64_t v123 = v102;
        uint64_t v124 = v100;
        uint64_t v125 = v103;
        uint64_t v126 = v101;
        type metadata accessor for DiskImport.ImportingFolder();
        uint64_t v95 = v122;
        sub_10096BAA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v126 == 1)
        {
          uint64_t v71 = v108;
          uint64_t v96 = v117;
          sub_1003EE594(v108, v98);
          uint64_t v73 = v120;
          if (v96)
          {
            (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v95);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v99, v56);
            return v85 & 1;
          }
        }
        else
        {
          uint64_t v73 = v120;
          uint64_t v71 = v108;
        }
        uint64_t v54 = v95;
      }
    }
    else
    {
      uint64_t v73 = v50;
      if (v72 != 3) {
        goto LABEL_32;
      }
      sub_10044AE18((uint64_t)v127);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v74 = *(void (**)(char *))(v50 + 16);
      uint64_t v75 = v51;
      uint64_t v76 = v113;
      uint64_t v77 = (uint64_t)v99;
      v74(v113);
      uint64_t v78 = v115;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v79 = sub_10096C380();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v76, v78);
      if (v79)
      {
        uint64_t v56 = v75;
LABEL_29:
        uint64_t v71 = v108;
        uint64_t v54 = v122;
        goto LABEL_32;
      }
      sub_10044AE18((uint64_t)v127);
      uint64_t v123 = v102;
      uint64_t v124 = v100;
      uint64_t v125 = v103;
      uint64_t v126 = v101;
      type metadata accessor for DiskImport.ImportingFolder();
      sub_10096BAA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v75;
      if (v126 != 1)
      {
        uint64_t v73 = v120;
        goto LABEL_29;
      }
      uint64_t v94 = v117;
      sub_1003EDB44(v77, v98);
      uint64_t v73 = v120;
      uint64_t v71 = v108;
      uint64_t v54 = v122;
      if (v94)
      {
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v108, v122);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v77, v75);
        return v85 & 1;
      }
    }
LABEL_32:
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v54);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v99, v56);
    goto LABEL_33;
  }
  (*(void (**)(char *, uint64_t))(v130 + 8))(v52, v53);
  sub_10044AE18((uint64_t)v127);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v58 = v56;
  uint64_t v59 = v113;
  v57(v113, v41, v58);
  uint64_t v60 = v115;
  swift_storeEnumTagMultiPayload();
  swift_getWitnessTable();
  char v61 = sub_10096C380();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v60);
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v99, v58);
    goto LABEL_33;
  }
  uint64_t v80 = v99;
  v57(v110, v99, v58);
  swift_beginAccess();
  sub_10096C3A0();
  uint64_t v81 = v116;
  sub_10096C330();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v50 + 8);
  v82(v81, v58);
  swift_endAccess();
  sub_10044B80C();
  uint64_t v83 = v117;
  sub_1003ED4D4(v84);
  if (!v83)
  {
    v82(v80, v58);
    goto LABEL_33;
  }
  v82(v80, v58);
  return v85 & 1;
}

void sub_1003F009C(uint64_t a1)
{
  uint64_t v346 = a1;
  Class isa = v1->isa;
  uint64_t v3 = *((void *)v1->isa + 34);
  uint64_t v4 = *((void *)v1->isa + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v309 = sub_10096C890();
  uint64_t v308 = *(void *)(v309 - 8);
  uint64_t v6 = __chkstk_darwin(v309);
  unint64_t v305 = (char *)&v286 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v299 = (char *)&v286 - v8;
  uint64_t v9 = *((void *)isa + 33);
  long long v344 = v1;
  os_log_t v10 = (os_log_t)*((void *)isa + 31);
  os_log_t v11 = (os_log_t)swift_getAssociatedTypeWitness();
  uint64_t v330 = sub_10096C890();
  unint64_t v329 = *(void (**)(char *, char *, os_log_t))(v330 - 8);
  uint64_t v12 = __chkstk_darwin(v330);
  uint64_t v326 = (char *)&v286 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v306 = (char *)&v286 - v15;
  __chkstk_darwin(v14);
  uint64_t v314 = (char *)&v286 - v16;
  uint64_t v301 = sub_10096B480();
  uint64_t v300 = *(void *)(v301 - 8);
  uint64_t v17 = __chkstk_darwin(v301);
  uint64_t v289 = (char *)&v286 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v303 = (char *)&v286 - v20;
  uint64_t v328 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v292 = (char *)&v286 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v304 = (char *)&v286 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v318 = (char *)&v286 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v290 = (char *)&v286 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v298 = (char *)&v286 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v287 = (char *)&v286 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v291 = (char *)&v286 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  unint64_t v297 = (char *)&v286 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  unint64_t v295 = (char *)&v286 - v38;
  __chkstk_darwin(v37);
  uint64_t v288 = (char *)&v286 - v39;
  uint64_t v317 = sub_10096B0E0();
  uint64_t v316 = *(void *)(v317 - 8);
  __chkstk_darwin(v317);
  uint64_t v315 = (char *)&v286 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v348 = v10;
  os_log_t v349 = v4;
  uint64_t v350 = v9;
  uint64_t v351 = v3;
  uint64_t v41 = type metadata accessor for PersistenceTrigger();
  uint64_t v347 = *(void *)(v41 - 8);
  uint64_t v42 = __chkstk_darwin(v41);
  unint64_t v332 = (void (**)(char *, uint64_t))((char *)&v286 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = __chkstk_darwin(v42);
  unint64_t v331 = (void (*)(char *, char *, uint64_t))((char *)&v286 - v45);
  uint64_t v46 = __chkstk_darwin(v44);
  unint64_t v334 = (char *)&v286 - v47;
  __chkstk_darwin(v46);
  unsigned __int8 v49 = (char *)&v286 - v48;
  uint64_t v338 = v9;
  os_log_t v341 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v337 = v3;
  os_log_t v342 = v4;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  os_log_t v348 = v11;
  os_log_t v349 = (os_log_t)AssociatedTypeWitness;
  uint64_t v324 = AssociatedTypeWitness;
  uint64_t v335 = AssociatedConformanceWitness;
  uint64_t v350 = AssociatedConformanceWitness;
  uint64_t v351 = v51;
  os_log_t v333 = (os_log_t)type metadata accessor for ReconciliationID();
  uint64_t v336 = sub_10096C890();
  unint64_t v52 = *(void (***)(char *, uint64_t))(v336 - 8);
  uint64_t v53 = __chkstk_darwin(v336);
  unint64_t v307 = (char *)&v286 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v53);
  unint64_t v311 = (char *)&v286 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v320 = (char *)&v286 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  unint64_t v302 = (char *)&v286 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  unint64_t v322 = (char *)&v286 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  unint64_t v312 = (char *)&v286 - v64;
  os_log_t v340 = v11;
  Class v339 = v11[-1].isa;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v319 = (char *)&v286 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  long long v327 = (char *)&v286 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v71 = (char *)&v286 - v70;
  uint64_t v72 = __chkstk_darwin(v69);
  unint64_t v293 = (char *)&v286 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  unint64_t v294 = (char *)&v286 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v78 = (char *)&v286 - v77;
  uint64_t v79 = __chkstk_darwin(v76);
  uint64_t v81 = (char *)&v286 - v80;
  uint64_t v82 = __chkstk_darwin(v79);
  uint64_t v296 = (char *)&v286 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v323 = (char *)&v286 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  unint64_t v313 = (char *)&v286 - v87;
  uint64_t v88 = __chkstk_darwin(v86);
  unint64_t v321 = (char *)&v286 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  uint64_t v325 = (uint64_t)&v286 - v91;
  __chkstk_darwin(v90);
  unint64_t v310 = (char *)&v286 - v92;
  char v93 = *(void (**)(char *, uint64_t, uint64_t))(v347 + 16);
  v93(v49, v346, v41);
  long long v345 = (void (*)(char *, char *, uint64_t))v49;
  uint64_t v346 = v41;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xBu:
      uint64_t v94 = v51;
      unint64_t v332 = v52;
      uint64_t v95 = v334;
      uint64_t v96 = ((uint64_t (*)(char *, void, uint64_t))v93)(v334, v345, v346);
      __chkstk_darwin(v96);
      strcpy((char *)&v286 - 32, " otherID from to ");
      os_log_t v97 = v333;
      uint64_t v98 = v336;
      os_log_t v348 = v333;
      os_log_t v349 = (os_log_t)v336;
      uint64_t v350 = sub_100033BE8((uint64_t *)&unk_100AD4BE0);
      uint64_t v351 = v350;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v100 = &v95[TupleTypeMetadata[12]];
      int v101 = v95[TupleTypeMetadata[16]];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v332[1](v100, v98);
        (*((void (**)(char *, os_log_t))v97[-1].isa + 1))(v95, v97);
LABEL_60:
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
LABEL_61:
        uint64_t v113 = v343;
        goto LABEL_62;
      }
      int v114 = v95[TupleTypeMetadata[20]];
      if (v114 == 6)
      {
        uint64_t v325 = v94;
        os_log_t v162 = v340;
        uint64_t v117 = v332;
        if ((v101 - 3) >= 2)
        {
          (*((void (**)(char *, os_log_t))v339 + 1))(v95, v340);
          goto LABEL_59;
        }
        uint64_t v163 = (void (*)(char *, char *, os_log_t))*((void *)v339 + 4);
        uint64_t v164 = v310;
        uint64_t v330 = (uint64_t)v339 + 32;
        unint64_t v329 = v163;
        v163(v310, v95, v340);
        unint64_t v165 = (void (*)(char *, char *, uint64_t))v117[4];
        unint64_t v334 = (char *)(v117 + 4);
        unint64_t v331 = v165;
        v165(v312, v100, v98);
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
        sub_10044AE18((uint64_t)&v348);
        os_log_t v166 = v162;
        uint64_t v356 = (uint64_t)v341;
        os_log_t v357 = v342;
        uint64_t v358 = v338;
        uint64_t v359 = v337;
        uint64_t v167 = type metadata accessor for DiskImport.ImportingFolder();
        uint64_t v347 = *(void *)(v335 + 32);
        sub_10096BAA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v346 = v167;
        if (v359)
        {
          (*((void (**)(char *, os_log_t))v339 + 1))(v164, v162);
          uint64_t v168 = v328;
          os_log_t v169 = v333;
          unint64_t v170 = v307;
        }
        else
        {
          id v233 = (id)fpfs_current_or_default_log();
          uint64_t v234 = v303;
          sub_10096B490();
          uint64_t v235 = v296;
          (*((void (**)(char *, char *, os_log_t))v339 + 2))(v296, v164, v166);
          uint64_t v236 = sub_10096B470();
          os_log_type_t v237 = sub_10096C5A0();
          if (os_log_type_enabled(v236, v237))
          {
            unint64_t v238 = v235;
            unint64_t v239 = (uint8_t *)swift_slowAlloc();
            os_log_t v348 = (os_log_t)swift_slowAlloc();
            *(_DWORD *)unint64_t v239 = 136315138;
            uint64_t v240 = sub_10096D220();
            uint64_t v356 = sub_100719D44(v240, v241, (uint64_t *)&v348);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            (*((void (**)(char *, os_log_t))v339 + 1))(v238, v340);
            _os_log_impl((void *)&_mh_execute_header, v236, v237, "💂🏼‍♀️ stop monitoring import:disk for %s", v239, 0xCu);
            swift_arrayDestroy();
            os_log_t v166 = v340;
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v300 + 8))(v303, v301);
          }
          else
          {
            (*((void (**)(char *, os_log_t))v339 + 1))(v235, v166);

            (*(void (**)(char *, uint64_t))(v300 + 8))(v234, v301);
          }
          uint64_t v168 = v328;
          os_log_t v169 = v333;
          unint64_t v170 = v307;
          v329(v321, v310, v166);
          os_log_t v348 = 0;
          os_log_t v349 = 0;
          uint64_t v350 = 0;
          LOBYTE(v351) = 1;
          swift_beginAccess();
          sub_10096BA80();
          sub_10096BAB0();
          swift_endAccess();
          sub_10044B80C();
        }
        uint64_t v263 = v336;
        v331(v170, v312, v336);
        Class v264 = v169[-1].isa;
        if ((*((unsigned int (**)(char *, uint64_t, os_log_t))v264 + 6))(v170, 1, v169) == 1)
        {
          v332[1](v170, v263);
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v113 = v343;
          if (EnumCaseMultiPayload != 1)
          {
            (*((void (**)(char *, os_log_t))v264 + 1))(v170, v169);
            goto LABEL_62;
          }
          Swift::String v266 = v291;
          (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v291, v170, v324);
          sub_10044AE18((uint64_t)&v348);
          uint64_t v347 = *(void *)(v325 + 32);
          sub_10096BAA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v359)
          {
            (*(void (**)(char *, uint64_t))(v328 + 8))(v266, v324);
            goto LABEL_62;
          }
          id v270 = (id)fpfs_current_or_default_log();
          Swift::String v271 = v289;
          sub_10096B490();
          uint64_t v272 = v328;
          Swift::String v273 = v287;
          long long v345 = *(void (**)(char *, char *, uint64_t))(v328 + 16);
          v345(v287, v266, v324);
          Swift::String v274 = sub_10096B470();
          os_log_type_t v275 = sub_10096C5A0();
          if (os_log_type_enabled(v274, v275))
          {
            os_log_t v342 = v274;
            Swift::String v276 = (uint8_t *)swift_slowAlloc();
            os_log_t v348 = (os_log_t)swift_slowAlloc();
            *(_DWORD *)Swift::String v276 = 136315138;
            os_log_t v341 = (os_log_t)(v276 + 4);
            uint64_t v277 = v324;
            uint64_t v278 = sub_10096D220();
            uint64_t v356 = sub_100719D44(v278, v279, (uint64_t *)&v348);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            uint64_t v280 = *(void (**)(char *, uint64_t))(v272 + 8);
            v280(v273, v277);
            os_log_t v281 = v342;
            os_log_type_t v282 = v275;
            uint64_t v283 = v280;
            _os_log_impl((void *)&_mh_execute_header, v342, v282, "💂🏼‍♀️ stop monitoring import:provider for %s", v276, 0xCu);
            swift_arrayDestroy();
            size_t v284 = v291;
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v300 + 8))(v289, v301);
          }
          else
          {
            size_t v284 = v266;
            uint64_t v283 = *(void (**)(char *, uint64_t))(v272 + 8);
            v283(v273, v324);

            (*(void (**)(char *, uint64_t))(v300 + 8))(v271, v301);
          }
          uint64_t v285 = v324;
          v345(v295, v284, v324);
          os_log_t v348 = 0;
          os_log_t v349 = 0;
          uint64_t v350 = 0;
          LOBYTE(v351) = 1;
          swift_beginAccess();
          sub_10096BA80();
          sub_10096BAB0();
          swift_endAccess();
          sub_10044B80C();
          v283(v284, v285);
        }
LABEL_14:
        uint64_t v113 = v343;
        goto LABEL_62;
      }
      os_log_t v115 = v340;
      Class v116 = v339;
      uint64_t v117 = v332;
      if (v114 == 4)
      {
        int64_t v171 = v323;
        (*((void (**)(char *, char *, os_log_t))v339 + 4))(v323, v95, v340);
        uint64_t v172 = v320;
        ((void (*)(char *, char *, uint64_t))v117[4])(v320, v100, v98);
        unint64_t v334 = (char *)*((void *)v116 + 2);
        ((void (*)(char *, char *, os_log_t))v334)(v321, v171, v115);
        uint64_t v356 = 0;
        os_log_t v357 = 0;
        uint64_t v358 = 0;
        LOBYTE(v359) = 1;
        uint64_t v173 = v344 + 10;
        swift_beginAccess();
        os_log_t v348 = v341;
        os_log_t v349 = v342;
        uint64_t v350 = v338;
        uint64_t v351 = v337;
        type metadata accessor for DiskImport.ImportingFolder();
        os_log_t v341 = *(os_log_t *)(v335 + 32);
        sub_10096BA80();
        uint64_t v174 = v117;
        os_log_t v342 = v173;
        sub_10096BAB0();
        swift_endAccess();
        sub_10044B80C();
        Class v175 = v116;
        unint64_t v176 = v311;
        uint64_t v177 = v172;
        uint64_t v178 = v336;
        ((void (*)(char *, char *, uint64_t))v117[2])(v311, v177, v336);
        Class v179 = v97[-1].isa;
        int v180 = (*((uint64_t (**)(char *, uint64_t, os_log_t))v179 + 6))(v176, 1, v97);
        unint64_t v181 = v174;
        uint64_t v182 = v178;
        if (v180 != 1)
        {
          uint64_t v183 = v328;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v184 = (uint64_t)v297;
            uint64_t v185 = v324;
            (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v297, v176, v324);
            unint64_t v186 = v315;
            sub_10096B0D0();
            sub_10096B080();
            double v188 = v187;
            (*(void (**)(char *, uint64_t))(v316 + 8))(v186, v317);
            double v189 = v188 * 1000000000.0;
            if ((~COERCE__INT64(v188 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              uint64_t v190 = v343;
              unint64_t v191 = v320;
              uint64_t v192 = (uint64_t)v323;
              if (v189 > -9.22337204e18)
              {
                if (v189 < 9.22337204e18)
                {
                  Class v116 = v175;
                  sub_1003EE594(v184, (uint64_t)v189);
                  uint64_t v113 = v190;
                  if (v190)
                  {
                    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v184, v185);
                    uint64_t v124 = v191;
                    uint64_t v325 = v192;
                    uint64_t v123 = v332;
                    goto LABEL_23;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v184, v185);
                  v332[1](v191, v336);
                  (*((void (**)(uint64_t, os_log_t))v116 + 1))(v192, v340);
                  goto LABEL_100;
                }
LABEL_110:
                __break(1u);
                JUMPOUT(0x1003F2E80);
              }
LABEL_109:
              __break(1u);
              goto LABEL_110;
            }
LABEL_108:
            __break(1u);
            goto LABEL_109;
          }
          unint64_t v181 = (void (**)(char *, uint64_t))v179;
          uint64_t v182 = (uint64_t)v97;
          uint64_t v174 = v332;
          uint64_t v178 = v336;
          os_log_t v115 = v340;
        }
        v181[1](v176, v182);
        ((void (*)(char *, char *, os_log_t))v334)(v313, v323, v115);
        swift_beginAccess();
        sub_10096C3A0();
        uint64_t v242 = v321;
        sub_10096C330();
        unint64_t v243 = (void (*)(char *, os_log_t))*((void *)v175 + 1);
        v243(v242, v115);
        swift_endAccess();
        sub_10044B80C();
        v174[1](v320, v178);
        v243(v323, v115);
        uint64_t v113 = v343;
        goto LABEL_100;
      }
      if (v114 != 3)
      {
        (*((void (**)(char *, os_log_t))v339 + 1))(v334, v340);
LABEL_59:
        v117[1](v100, v98);
        goto LABEL_60;
      }
      (*((void (**)(uint64_t, char *, os_log_t))v339 + 4))(v325, v334, v340);
      ((void (*)(char *, char *, uint64_t))v117[4])(v322, v100, v98);
      uint64_t v118 = v315;
      sub_10096B0D0();
      sub_10096B080();
      double v120 = v119;
      (*(void (**)(char *, uint64_t))(v316 + 8))(v118, v317);
      double v121 = v120 * 1000000000.0;
      uint64_t v122 = v343;
      if ((~COERCE__INT64(v120 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_106;
      }
      if (v121 <= -9.22337204e18)
      {
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      if (v121 >= 9.22337204e18)
      {
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      sub_1003EDB44(v325, (uint64_t)v121);
      uint64_t v113 = v122;
      if (v122)
      {
        uint64_t v123 = v332;
        uint64_t v124 = v322;
LABEL_23:
        v123[1](v124, v336);
        (*((void (**)(uint64_t, os_log_t))v116 + 1))(v325, v340);
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
        return;
      }
      uint64_t v213 = v332;
      uint64_t v214 = v302;
      uint64_t v215 = v336;
      ((void (*)(char *, char *, uint64_t))v332[2])(v302, v322, v336);
      Class v216 = v97[-1].isa;
      int v217 = (*((uint64_t (**)(char *, uint64_t, os_log_t))v216 + 6))(v214, 1, v97);
      uint64_t v218 = v214;
      uint64_t v219 = v213;
      unint64_t v220 = v213;
      uint64_t v221 = v215;
      if (v217 == 1) {
        goto LABEL_99;
      }
      Swift::String v222 = v218;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        unint64_t v220 = (void (**)(char *, uint64_t))v216;
        uint64_t v221 = (uint64_t)v97;
        uint64_t v215 = v336;
        uint64_t v218 = v222;
LABEL_99:
        v220[1](v218, v221);
        os_log_t v267 = v340;
        (*((void (**)(char *, uint64_t, os_log_t))v116 + 2))(v313, v325, v340);
        swift_beginAccess();
        sub_10096C3A0();
        Swift::String v268 = v321;
        sub_10096C330();
        Swift::String v269 = (void (*)(char *, os_log_t))*((void *)v116 + 1);
        v269(v268, v267);
        swift_endAccess();
        sub_10044B80C();
        v219[1](v322, v215);
        v269((char *)v325, v267);
        goto LABEL_100;
      }
      uint64_t v223 = v222;
      uint64_t v224 = v328;
      uint64_t v225 = v288;
      uint64_t v226 = v324;
      (*(void (**)(char *, char *, uint64_t))(v328 + 32))(v288, v223, v324);
      (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v295, v225, v226);
      uint64_t v356 = 0;
      os_log_t v357 = 0;
      uint64_t v358 = 0;
      LOBYTE(v359) = 1;
      swift_beginAccess();
      os_log_t v348 = v341;
      os_log_t v349 = v342;
      uint64_t v350 = v338;
      uint64_t v351 = v337;
      type metadata accessor for DiskImport.ImportingFolder();
      sub_10096BA80();
      sub_10096BAB0();
      swift_endAccess();
      sub_10044B80C();
      (*(void (**)(char *, uint64_t))(v224 + 8))(v225, v226);
      v219[1](v322, v336);
      (*((void (**)(uint64_t, os_log_t))v116 + 1))(v325, v340);
LABEL_100:
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
LABEL_62:
      sub_1003ED4D4();
      if (!v113) {
        sub_1003ECAC8();
      }
      return;
    case 0x14u:
      uint64_t v102 = v332;
      v93((char *)v332, (uint64_t)v345, v346);
      if ((*v102 & 0x8000000000000000) == 0)
      {
        os_log_t v348 = v341;
        os_log_t v349 = v342;
        uint64_t v103 = v338;
        uint64_t v104 = v337;
        uint64_t v350 = v338;
        uint64_t v351 = v337;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v105 = swift_dynamicCastClass();
        os_log_t v106 = v340;
        Class v107 = v339;
        if (v105) {
          goto LABEL_9;
        }
        goto LABEL_6;
      }
      uint64_t v325 = v51;
      uint64_t v125 = v341;
      os_log_t v348 = v341;
      os_log_t v349 = v342;
      uint64_t v126 = v338;
      uint64_t v127 = v337;
      uint64_t v350 = v338;
      uint64_t v351 = v337;
      type metadata accessor for Propagation.CreateItem();
      uint64_t v128 = swift_dynamicCastClass();
      os_log_t v129 = v340;
      Class v130 = v339;
      if (v128) {
        goto LABEL_29;
      }
      os_log_t v348 = v342;
      os_log_t v349 = v125;
      uint64_t v350 = v127;
      uint64_t v351 = v126;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v131 = v125;
      uint64_t v132 = swift_dynamicCastClass();
      if (v132) {
        goto LABEL_38;
      }
      os_log_t v348 = v342;
      os_log_t v349 = v131;
      uint64_t v350 = v127;
      uint64_t v351 = v126;
      type metadata accessor for Propagation.CreateItem();
      uint64_t v133 = swift_dynamicCastClass();
      uint64_t v134 = v328;
      uint64_t v135 = v126;
      if (v133) {
        goto LABEL_72;
      }
      goto LABEL_6;
    case 0x15u:
      uint64_t v325 = v51;
      uint64_t v108 = (uint64_t *)v331;
      v93((char *)v331, (uint64_t)v345, v346);
      uint64_t v109 = *v108;
      if (v109 < 0)
      {
        uint64_t v125 = v341;
        os_log_t v348 = v341;
        os_log_t v349 = v342;
        uint64_t v126 = v338;
        uint64_t v127 = v337;
        uint64_t v350 = v338;
        uint64_t v351 = v337;
        type metadata accessor for Propagation.CreateItem();
        uint64_t v128 = swift_dynamicCastClass();
        os_log_t v129 = v340;
        Class v130 = v339;
        if (v128)
        {
LABEL_29:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          uint64_t v136 = v128 + *(void *)(*(void *)v128 + 648);
          swift_beginAccess();
          uint64_t v137 = v329;
          uint64_t v138 = v326;
          uint64_t v139 = v136;
          uint64_t v140 = v330;
          (*((void (**)(char *, uint64_t, uint64_t))v329 + 2))(v326, v139, v330);
          swift_release();
          if ((*((unsigned int (**)(char *, uint64_t, os_log_t))v130 + 6))(v138, 1, v129) == 1)
          {
            (*((void (**)(char *, uint64_t))v137 + 1))(v138, v140);
          }
          else
          {
            uint64_t v147 = v327;
            (*((void (**)(char *, char *, os_log_t))v130 + 4))(v327, v138, v129);
            unint64_t v148 = v319;
            (*((void (**)(char *, char *, os_log_t))v130 + 2))(v319, v147, v129);
            unint64_t v149 = v125;
            uint64_t v150 = v127;
            unint64_t v151 = sub_10044AEBC((uint64_t)&v348);
            os_log_t v352 = v149;
            os_log_t v353 = v342;
            uint64_t v354 = v338;
            uint64_t v355 = v150;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_10096BA80();
            uint64_t v152 = (void (*)(uint64_t *, void))sub_10096BA90();
            if ((*(unsigned char *)(v153 + 24) & 1) == 0) {
              sub_1003E4E58();
            }
            v152(&v356, 0);
            unint64_t v154 = (void (*)(char *, os_log_t))*((void *)v130 + 1);
            v154(v148, v129);
            v151((uint64_t)&v348, 0);
            v154(v327, v129);
          }
          goto LABEL_14;
        }
        os_log_t v348 = v342;
        os_log_t v349 = v125;
        uint64_t v350 = v127;
        uint64_t v351 = v126;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v131 = v125;
        uint64_t v132 = swift_dynamicCastClass();
        if (v132)
        {
LABEL_38:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          uint64_t v155 = v328;
          uint64_t v156 = v318;
          uint64_t v157 = v127;
          uint64_t v158 = v324;
          (*(void (**)(char *, uint64_t, uint64_t))(v328 + 16))(v318, v132 + *(void *)(*(void *)v132 + 576), v324);
          swift_release();
          uint64_t v159 = sub_10044AEBC((uint64_t)&v348);
          os_log_t v352 = v131;
          os_log_t v353 = v342;
          uint64_t v354 = v126;
          uint64_t v355 = v157;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_10096BA80();
          unint64_t v160 = (void (*)(uint64_t *, void))sub_10096BA90();
          if ((*(unsigned char *)(v161 + 24) & 1) == 0) {
            sub_1003E4E58();
          }
          v160(&v356, 0);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v156, v158);
          v159((uint64_t)&v348, 0);
          goto LABEL_14;
        }
        os_log_t v348 = v342;
        os_log_t v349 = v131;
        uint64_t v350 = v127;
        uint64_t v351 = v126;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v208 = swift_dynamicCastClass();
        uint64_t v209 = v328;
        if (v208)
        {
          unsigned int v210 = v131;
          uint64_t v211 = v299;
          sub_10086F32C();
          uint64_t v212 = v324;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v211, 1, v324) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v308 + 8))(v211, v309);
          }
          else
          {
            uint64_t v257 = v298;
            (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v298, v211, v212);
            uint64_t v258 = v290;
            (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v290, v257, v212);
            swift_retain();
            unint64_t v259 = sub_10044AEBC((uint64_t)&v348);
            os_log_t v352 = v210;
            os_log_t v353 = v342;
            uint64_t v354 = v338;
            uint64_t v355 = v127;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_10096BA80();
            uint64_t v260 = (void (*)(uint64_t *, void))sub_10096BA90();
            if ((*(unsigned char *)(v261 + 24) & 1) == 0) {
              sub_1003E4E58();
            }
            v260(&v356, 0);
            uint64_t v262 = *(void (**)(char *, uint64_t))(v209 + 8);
            v262(v258, v212);
            v259((uint64_t)&v348, 0);
            swift_release_n();
            v262(v298, v212);
          }
LABEL_13:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          goto LABEL_14;
        }
      }
      else
      {
        os_log_t v348 = v341;
        os_log_t v349 = v342;
        uint64_t v103 = v338;
        uint64_t v104 = v337;
        uint64_t v350 = v338;
        uint64_t v351 = v337;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v105 = swift_dynamicCastClass();
        os_log_t v106 = v340;
        Class v107 = v339;
        if (v105)
        {
LABEL_9:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          (*((void (**)(char *, uint64_t, os_log_t))v107 + 2))(v71, v105 + *(void *)(*(void *)v105 + 576), v106);
          swift_release();
          uint64_t v110 = sub_10044AEBC((uint64_t)&v348);
          os_log_t v352 = v341;
          os_log_t v353 = v342;
          uint64_t v354 = v103;
          uint64_t v355 = v104;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_10096BA80();
          uint64_t v111 = (void (*)(uint64_t *, void))sub_10096BA90();
          if ((*(unsigned char *)(v112 + 24) & 1) == 0) {
            sub_1003E4E58();
          }
          v111(&v356, 0);
          (*((void (**)(char *, os_log_t))v107 + 1))(v71, v106);
          v110((uint64_t)&v348, 0);
          uint64_t v113 = v343;
          goto LABEL_62;
        }
        os_log_t v141 = v341;
        os_log_t v142 = v342;
        os_log_t v348 = v341;
        os_log_t v349 = v342;
        uint64_t v350 = v103;
        uint64_t v351 = v104;
        type metadata accessor for Ingestion.FetchContent();
        if (swift_dynamicCastClass())
        {
          uint64_t v336 = v109;
          uint64_t v143 = v314;
          sub_10086F32C();
          Class v144 = v107;
          uint64_t v145 = (unsigned int (*)(char *, uint64_t, os_log_t))*((void *)v107 + 6);
          os_log_t v146 = v340;
          if (v145(v143, 1, v340) == 1)
          {
            swift_release();
            (*((void (**)(char *, uint64_t))v329 + 1))(v143, v330);
          }
          else
          {
            (*((void (**)(char *, char *, os_log_t))v144 + 4))(v81, v143, v146);
            (*((void (**)(char *, char *, os_log_t))v144 + 2))(v78, v81, v146);
            swift_retain();
            uint64_t v204 = sub_10044AEBC((uint64_t)&v348);
            os_log_t v352 = v141;
            os_log_t v353 = v342;
            uint64_t v354 = v103;
            uint64_t v355 = v337;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_10096BA80();
            uint64_t v205 = (void (*)(uint64_t *, void))sub_10096BA90();
            if ((*(unsigned char *)(v206 + 24) & 1) == 0) {
              sub_1003E4E58();
            }
            v205(&v356, 0);
            unint64_t v207 = (void (*)(char *, os_log_t))*((void *)v144 + 1);
            v207(v78, v146);
            v204((uint64_t)&v348, 0);
            swift_release_n();
            v207(v81, v146);
          }
          goto LABEL_60;
        }
        os_log_t v348 = v141;
        os_log_t v349 = v142;
        uint64_t v350 = v103;
        uint64_t v351 = v104;
        type metadata accessor for Ingestion.DeleteRejectedItemInTree();
        uint64_t v193 = swift_dynamicCastClass();
        if (v193)
        {
          Class v194 = v107;
          uint64_t v195 = v104;
          uint64_t v196 = v103;
          uint64_t v197 = v193 + *(void *)(*(void *)v193 + 632);
          swift_beginAccess();
          unint64_t v198 = v329;
          uint64_t v199 = v306;
          uint64_t v200 = v197;
          uint64_t v201 = v330;
          (*((void (**)(char *, uint64_t, uint64_t))v329 + 2))(v306, v200, v330);
          uint64_t v202 = (unsigned int (*)(char *, uint64_t, os_log_t))*((void *)v107 + 6);
          os_log_t v203 = v340;
          if (v202(v199, 1, v340) == 1)
          {
            swift_release();
            (*((void (**)(char *, uint64_t))v198 + 1))(v199, v201);
          }
          else
          {
            uint64_t v244 = v294;
            (*((void (**)(char *, char *, os_log_t))v194 + 4))(v294, v199, v203);
            uint64_t v245 = v293;
            (*((void (**)(char *, char *, os_log_t))v194 + 2))(v293, v244, v203);
            swift_retain();
            unint64_t v246 = sub_10044AEBC((uint64_t)&v348);
            os_log_t v352 = v341;
            os_log_t v353 = v342;
            uint64_t v354 = v196;
            uint64_t v355 = v195;
            unint64_t v247 = v245;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_10096BA80();
            uint64_t v248 = (void (*)(uint64_t *, void))sub_10096BA90();
            if ((*(unsigned char *)(v249 + 24) & 1) == 0) {
              sub_1003E4E58();
            }
            v248(&v356, 0);
            unint64_t v250 = (void (*)(char *, os_log_t))*((void *)v194 + 1);
            v250(v247, v203);
            v246((uint64_t)&v348, 0);
            swift_release_n();
            v250(v244, v203);
          }
          uint64_t v113 = v343;
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          goto LABEL_62;
        }
        os_log_t v348 = v142;
        os_log_t v349 = v141;
        uint64_t v350 = v104;
        uint64_t v351 = v103;
        uint64_t v135 = v103;
        type metadata accessor for Propagation.CreateItem();
        uint64_t v133 = swift_dynamicCastClass();
        uint64_t v134 = v328;
        if (v133)
        {
LABEL_72:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v347 + 8))(v345, v346);
          uint64_t v227 = v133 + *(void *)(*(void *)v133 + 648);
          swift_beginAccess();
          uint64_t v228 = v308;
          Swift::String v229 = v305;
          uint64_t v230 = v227;
          uint64_t v231 = v309;
          (*(void (**)(char *, uint64_t, uint64_t))(v308 + 16))(v305, v230, v309);
          swift_release();
          uint64_t v232 = v324;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v229, 1, v324) == 1)
          {
            (*(void (**)(char *, uint64_t))(v228 + 8))(v229, v231);
            goto LABEL_61;
          }
          uint64_t v251 = v304;
          (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v304, v229, v232);
          unint64_t v252 = v292;
          (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v292, v251, v232);
          uint64_t v253 = sub_10044AEBC((uint64_t)&v348);
          os_log_t v352 = v341;
          os_log_t v353 = v342;
          uint64_t v354 = v135;
          uint64_t v355 = v337;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_10096BA80();
          uint64_t v254 = (void (*)(uint64_t *, void))sub_10096BA90();
          if ((*(unsigned char *)(v255 + 24) & 1) == 0) {
            sub_1003E4E58();
          }
          v254(&v356, 0);
          uint64_t v256 = *(void (**)(char *, uint64_t))(v134 + 8);
          v256(v252, v232);
          v253((uint64_t)&v348, 0);
          v256(v304, v232);
          goto LABEL_14;
        }
      }
LABEL_6:
      swift_release();
      goto LABEL_60;
    case 0x29u:
      sub_10044B134();
      goto LABEL_13;
    default:
      goto LABEL_60;
  }
}

uint64_t sub_1003F2EFC()
{
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t *sub_1003F2F34()
{
  uint64_t v0 = sub_10044AD90();
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1003F2F74()
{
  sub_1003F2F34();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DiskImport.Monitor()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DiskImport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003F2FD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003F3028(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003F30A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithCopy for SpeculativeSetPacerState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1003F3164(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1003F31D4(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1003F321C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DiskImport.MonitoredFolders()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003F3280(void *a1, int a2, uint64_t (*a3)(void), char *a4)
{
  uint64_t v296 = a3;
  unint64_t v295 = a4;
  LODWORD(v271) = a2;
  uint64_t v5 = (void *)*a1;
  uint64_t v266 = sub_10096B0E0();
  uint64_t v263 = *(void *)(v266 - 8);
  __chkstk_darwin(v266);
  Swift::String v265 = (char *)v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[72];
  uint64_t v8 = v5[74];
  uint64_t v259 = type metadata accessor for SnapshotItem();
  uint64_t v258 = sub_10096C890();
  uint64_t v257 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  uint64_t v260 = (char *)v253 - v9;
  uint64_t v276 = sub_10096B480();
  uint64_t v279 = *(void *)(v276 - 8);
  uint64_t v10 = __chkstk_darwin(v276);
  Swift::String v273 = (char *)v253 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  Class v264 = (char *)v253 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  Swift::String v274 = (char *)v253 - v15;
  __chkstk_darwin(v14);
  uint64_t v275 = (uint64_t)v253 - v16;
  uint64_t v17 = v5[75];
  uint64_t v18 = v5[73];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v285 = sub_10096C890();
  os_log_type_t v282 = *(void **)(v285 - 8);
  uint64_t v20 = __chkstk_darwin(v285);
  TupleTypeMetadata2 = (char *)v253 - v21;
  uint64_t v286 = AssociatedTypeWitness;
  uint64_t v287 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v20);
  size_t v284 = (char *)v253 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_10096C890();
  uint64_t v288 = *(void *)(v24 - 8);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)v253 - v26;
  uint64_t v292 = v23;
  uint64_t v290 = *(void *)(v23 - 8);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v262 = (uint64_t)v253 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v261 = (char *)v253 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  os_log_t v267 = (char *)v253 - v33;
  __chkstk_darwin(v32);
  uint64_t v289 = (uint64_t)v253 - v34;
  uint64_t v280 = v7;
  unint64_t v299 = (char *)v7;
  uint64_t v300 = v18;
  uint64_t v278 = v18;
  uint64_t v281 = v8;
  uint64_t v301 = v8;
  uint64_t v302 = v17;
  uint64_t v277 = v17;
  uint64_t v35 = type metadata accessor for ItemReconciliation();
  uint64_t v36 = sub_10096C890();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)v253 - v39;
  uint64_t v294 = v35;
  uint64_t v293 = *(void *)(v35 - 8);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)v253 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)v253 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  unsigned __int8 v49 = (uint64_t (*)(void))((char *)v253 - v48);
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v272 = (char *)v253 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  Swift::String v268 = (char *)v253 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  id v270 = (char *)v253 - v55;
  __chkstk_darwin(v54);
  unint64_t v291 = (char *)v253 - v56;
  Swift::String v269 = a1;
  uint64_t result = sub_1006C816C();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v58 = v297;
  uint64_t result = v296();
  if (v58) {
    return result;
  }
  uint64_t v296 = v49;
  uint64_t v297 = 0;
  uint64_t v60 = v293;
  uint64_t v59 = v294;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v40, 1, v294) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  }
  uint64_t v61 = v291;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v291, v40, v59);
  uint64_t v62 = v288;
  (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v27, v61, v24);
  uint64_t v63 = v290;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v290 + 48))(v27, 1, v292) == 1)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v27, v24);
  }
  uint64_t v64 = v292;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v289, v27, v292);
  uint64_t v66 = v282;
  uint64_t v65 = (uint64_t)TupleTypeMetadata2;
  uint64_t v67 = (void (*)(char *))v282[2];
  unint64_t v295 = &v61[*(int *)(v59 + 52)];
  v67(TupleTypeMetadata2);
  uint64_t v68 = v286;
  uint64_t v69 = v287;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v287 + 48))(v65, 1, v286) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v289, v64);
    (*(void (**)(char *, uint64_t))(v293 + 8))(v61, v294);
    return ((uint64_t (*)(uint64_t, uint64_t))v66[1])(v65, v285);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v284, v65, v68);
  uint64_t v288 = type metadata accessor for ItemReconciliationHalf();
  if (v61[*(int *)(v288 + 56)] != 3)
  {
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v293 + 16);
    v100(v46, v61, v294);
    BOOL v101 = (v271 & 1) != 0 && v46[*(int *)(v288 + 56)] == 6;
    uint64_t v115 = v278;
    uint64_t v116 = v294;
    uint64_t v117 = *(void (**)(char *, uint64_t))(v293 + 8);
    v117(v46, v294);
    v100(v43, v291, v116);
    if (v101)
    {
      uint64_t v118 = &v43[*(int *)(v116 + 52)];
      uint64_t v119 = v277;
      LODWORD(v118) = v118[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)];
      v117(v43, v116);
      if (v118)
      {
        uint64_t v120 = v289;
        uint64_t v121 = v297;
        char v122 = (*(uint64_t (**)(uint64_t))(*(void *)v269[4] + 408))(v289);
        uint64_t v123 = v292;
        if (v121)
        {
          (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
          (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v120, v123);
          return ((uint64_t (*)(char *, uint64_t))v117)(v291, v294);
        }
        if (v122)
        {
          uint64_t v125 = v286;
          uint64_t v116 = v294;
          goto LABEL_28;
        }
        uint64_t v297 = 0;
        unint64_t v299 = (char *)v280;
        uint64_t v300 = v115;
        uint64_t v301 = v281;
        uint64_t v302 = v119;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v127 = v262;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v290 + 16))(v262, v289, v123);
        uint64_t v128 = v265;
        sub_10096B0D0();
        sub_10096B080();
        double v130 = v129;
        uint64_t v131 = *(void (**)(char *, uint64_t))(v263 + 8);
        v131(v128, v266);
        double v132 = v130 * 1000000000.0;
        if ((~COERCE__INT64(v130 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v132 > -9.22337204e18)
          {
            if (v132 < 9.22337204e18)
            {
              uint64_t v133 = sub_1008AA760(v127, 0x2000000000000000, (uint64_t)v132, 0x20000);
              uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v290 + 8);
              v134(v127, v292);
              uint64_t v135 = v265;
              sub_10096B0D0();
              sub_10096B080();
              double v137 = v136;
              v131(v135, v266);
              double v138 = v137 * 1000000000.0;
              if ((~COERCE__INT64(v137 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v138 > -9.22337204e18)
                {
                  if (v138 < 9.22337204e18)
                  {
                    uint64_t v139 = v297;
                    sub_10059C450(v133);
                    if (v139)
                    {
                      swift_release();
                      (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
                      v134(v289, v292);
                      return ((uint64_t (*)(char *, uint64_t))v117)(v291, v294);
                    }
                    swift_release();
                    uint64_t v123 = v292;
                    uint64_t v125 = v286;
                    uint64_t v126 = v284;
                    uint64_t v116 = v294;
LABEL_29:
                    (*(void (**)(char *, uint64_t))(v287 + 8))(v126, v125);
                    (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v289, v123);
                    return ((uint64_t (*)(char *, uint64_t))v117)(v291, v116);
                  }
LABEL_94:
                  __break(1u);
                  goto LABEL_95;
                }
LABEL_93:
                __break(1u);
                goto LABEL_94;
              }
LABEL_92:
              __break(1u);
              goto LABEL_93;
            }
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_91;
      }
    }
    else
    {
      v117(v43, v116);
    }
    uint64_t v125 = v286;
    uint64_t v123 = v292;
LABEL_28:
    uint64_t v126 = v284;
    goto LABEL_29;
  }
  id v70 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v71 = (id)fpfs_current_or_default_log();
  uint64_t v72 = v275;
  sub_10096B490();
  uint64_t v73 = v293;
  uint64_t v74 = v294;
  uint64_t v75 = v293 + 16;
  uint64_t v76 = v270;
  uint64_t v285 = *(void *)(v293 + 16);
  ((void (*)(char *, char *, uint64_t))v285)(v270, v61, v294);
  uint64_t v77 = v70;
  uint64_t v78 = sub_10096B470();
  os_log_type_t v79 = sub_10096C5A0();
  int v80 = v79;
  BOOL v81 = os_log_type_enabled(v78, v79);
  uint64_t v271 = v75;
  os_log_type_t v282 = v77;
  if (v81)
  {
    uint64_t v82 = v76;
    uint64_t v83 = swift_slowAlloc();
    uint64_t v84 = (void *)swift_slowAlloc();
    uint64_t v256 = v84;
    TupleTypeMetadata2 = (char *)swift_slowAlloc();
    unint64_t v299 = TupleTypeMetadata2;
    *(_DWORD *)uint64_t v83 = 138412546;
    id v85 = [v77 enter];
    os_log_t v255 = v78;
    id v86 = v85;
    uint64_t v298 = (uint64_t)v85;
    int v254 = v80;
    sub_10096C8C0();
    *uint64_t v84 = v86;

    *(_WORD *)(v83 + 12) = 2082;
    v253[1] = v83 + 14;
    uint64_t v87 = v268;
    uint64_t v88 = (void (*)(char *, char *, uint64_t))v285;
    ((void (*)(char *, char *, uint64_t))v285)(v268, v82, v294);
    uint64_t v89 = *(char **)(v73 + 8);
    ((void (*)(char *, uint64_t))v89)(v82, v294);
    uint64_t v90 = sub_10082F470(v294);
    unint64_t v92 = v91;
    ((void (*)(char *, uint64_t))v89)(v87, v294);
    char v93 = v89;
    uint64_t v298 = sub_100719D44(v90, v92, (uint64_t *)&v299);
    uint64_t v94 = v294;
    sub_10096C8C0();
    uint64_t v95 = v288;
    swift_bridgeObjectRelease();
    os_log_t v96 = v255;
    _os_log_impl((void *)&_mh_execute_header, v255, (os_log_type_t)v254, "%@ evaluating disk import status for %{public}s", (uint8_t *)v83, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v97 = v276;
    TupleTypeMetadata2 = *(char **)(v279 + 8);
    ((void (*)(uint64_t, uint64_t))TupleTypeMetadata2)(v275, v276);
    uint64_t v98 = v274;
    uint64_t v99 = v272;
  }
  else
  {
    char v93 = *(char **)(v73 + 8);
    ((void (*)(char *, uint64_t))v93)(v76, v74);

    uint64_t v97 = v276;
    TupleTypeMetadata2 = *(char **)(v279 + 8);
    ((void (*)(uint64_t, uint64_t))TupleTypeMetadata2)(v72, v276);
    uint64_t v94 = v74;
    uint64_t v98 = v274;
    uint64_t v99 = v272;
    uint64_t v88 = (void (*)(char *, char *, uint64_t))v285;
    uint64_t v95 = v288;
  }
  uint64_t v102 = type metadata accessor for ItemReconciliationHalf();
  if (v295[*(int *)(v102 + 52)] != 3)
  {
    uint64_t v103 = v102;
    unint64_t v295 = v93;
    id v104 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v105 = v291;
    v88(v99, v291, v94);
    os_log_t v106 = v296;
    v88((char *)v296, v105, v94);
    uint64_t v107 = v94;
    uint64_t v108 = sub_10096B470();
    int v109 = sub_10096C5C0();
    if (os_log_type_enabled(v108, (os_log_type_t)v109))
    {
      LODWORD(v275) = v109;
      uint64_t v110 = swift_slowAlloc();
      uint64_t v272 = (char *)swift_slowAlloc();
      unint64_t v299 = v272;
      *(_DWORD *)uint64_t v110 = 136446466;
      uint64_t v111 = v99[*(int *)(v107 + 52) + *(int *)(v103 + 52)];
      ((void (*)(char *, uint64_t))v295)(v99, v107);
      unint64_t v112 = 0xED00006465747365;
      uint64_t v113 = 0x7265746E49746F6ELL;
      int v114 = v296;
      switch(v111)
      {
        case 1:
          unint64_t v112 = 0xEC000000676E6974;
          uint64_t v113 = 0x746F687370616E73;
          break;
        case 2:
          unint64_t v112 = 0xE800000000000000;
          uint64_t v113 = 0x676E696863746177;
          break;
        case 3:
          unint64_t v112 = 0x8000000100996790;
          uint64_t v113 = 0xD000000000000011;
          break;
        case 4:
          uint64_t v113 = 0xD000000000000015;
          unint64_t v112 = 0x8000000100996770;
          break;
        default:
          break;
      }
      uint64_t v298 = sub_100719D44(v113, v112, (uint64_t *)&v299);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2082;
      uint64_t v140 = v268;
      uint64_t v141 = v294;
      ((void (*)(char *, uint64_t (*)(void), uint64_t))v285)(v268, v114, v294);
      os_log_t v142 = v114;
      char v93 = v295;
      ((void (*)(uint64_t (*)(void), uint64_t))v295)(v142, v141);
      uint64_t v143 = sub_10082F470(v141);
      unint64_t v145 = v144;
      ((void (*)(char *, uint64_t))v93)(v140, v294);
      uint64_t v298 = sub_100719D44(v143, v145, (uint64_t *)&v299);
      sub_10096C8C0();
      uint64_t v94 = v294;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v275, "👽 item content status is %{public}s instead of content:import: %{public}s", (uint8_t *)v110, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v97 = v276;
      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v274, v276);
      uint64_t v95 = v288;
    }
    else
    {
      uint64_t v124 = v106;
      char v93 = v295;
      ((void (*)(uint64_t (*)(void), uint64_t))v295)(v124, v107);
      ((void (*)(char *, uint64_t))v93)(v99, v107);

      uint64_t v97 = v276;
      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v98, v276);
      uint64_t v94 = v107;
    }
  }
  uint64_t v146 = v94;
  if (v291[*(int *)(v95 + 52)] == 2)
  {
    uint64_t v147 = v269[4];
    uint64_t v148 = v289;
    uint64_t v149 = v297;
    char v150 = (*(uint64_t (**)(uint64_t))(*(void *)v147 + 408))(v289);
    uint64_t v151 = v290;
    if (v149)
    {
      uint64_t v152 = v282;
      sub_1003F58E4(v282);

      (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v148, v292);
      return ((uint64_t (*)(char *, uint64_t))v93)(v291, v146);
    }
    if (v150)
    {
      id v160 = (id)fpfs_current_or_default_log();
      uint64_t v161 = v264;
      sub_10096B490();
      os_log_t v162 = sub_10096B470();
      os_log_type_t v163 = sub_10096C5A0();
      if (os_log_type_enabled(v162, v163))
      {
        uint64_t v164 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v164 = 0;
        _os_log_impl((void *)&_mh_execute_header, v162, v163, "skip item with pending children", v164, 2u);
        uint64_t v161 = v264;
        swift_slowDealloc();
      }

      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v161, v97);
      unint64_t v165 = v282;
      sub_1003F58E4(v282);

      (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
      (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v289, v292);
      return ((uint64_t (*)(char *, uint64_t))v93)(v291, v146);
    }
    unint64_t v295 = v93;
    int v166 = v291[*(int *)(v95 + 60)];
    uint64_t v167 = *(void (**)(char *, uint64_t, uint64_t))(v290 + 16);
    uint64_t v168 = v267;
    uint64_t v169 = v292;
    v167(v267, v289, v292);
    if (v166 == 1) {
      char v170 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v147 + 368))(v168, 1);
    }
    else {
      char v170 = 1;
    }
    uint64_t v297 = 0;
    uint64_t v171 = v290 + 8;
    uint64_t v172 = *(uint64_t (**)(void))(v290 + 8);
    ((void (*)(char *, uint64_t))v172)(v267, v169);
    uint64_t v173 = v261;
    v167(v261, v289, v169);
    uint64_t v290 = v171;
    uint64_t v296 = v172;
    if (v170)
    {
      ((void (*)(char *, uint64_t))v172)(v173, v169);
      uint64_t v174 = v281;
      uint64_t v175 = v280;
      uint64_t v176 = v169;
      goto LABEL_60;
    }
    unint64_t v191 = v260;
    uint64_t v192 = v297;
    (*(void (**)(char *, uint64_t))(*(void *)v147 + 240))(v173, 1);
    uint64_t v193 = v173;
    if (v192)
    {
      uint64_t v194 = v292;
      uint64_t v195 = v296;
      ((void (*)(char *, uint64_t))v296)(v173, v292);
      uint64_t v196 = v282;
      sub_1003F58E4(v282);

      (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
      ((void (*)(uint64_t, uint64_t))v195)(v289, v194);
      return ((uint64_t (*)(char *, uint64_t))v295)(v291, v146);
    }
    uint64_t v297 = 0;
    uint64_t v203 = v259;
    uint64_t v204 = *(void *)(v259 - 8);
    int v205 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 48))(v191, 1, v259);
    uint64_t v206 = v292;
    if (v205 == 1)
    {
      ((void (*)(char *, uint64_t))v296)(v193, v292);
      (*(void (**)(char *, uint64_t))(v257 + 8))(v191, v258);
      uint64_t v207 = v206;
    }
    else
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v209 = v191;
      char v210 = FileItem.isDataless.getter(v203, WitnessTable);
      ((void (*)(char *, uint64_t))v296)(v193, v206);
      (*(void (**)(char *, uint64_t))(v204 + 8))(v209, v203);
      uint64_t v207 = v206;
      if ((v210 & 1) == 0)
      {
        uint64_t v146 = v294;
        uint64_t v176 = v206;
        uint64_t v174 = v281;
        uint64_t v175 = v280;
LABEL_60:
        uint64_t v177 = v278;
        unint64_t v299 = (char *)v175;
        uint64_t v300 = v278;
        uint64_t v178 = v277;
        uint64_t v301 = v174;
        uint64_t v302 = v277;
        type metadata accessor for Mutation();
        uint64_t v288 = sub_10096C110();
        unint64_t v299 = (char *)v175;
        uint64_t v300 = v177;
        uint64_t v301 = v174;
        uint64_t v302 = v178;
        uint64_t v285 = type metadata accessor for ReconciliationMutation();
        sub_10096D230();
        swift_allocObject();
        TupleTypeMetadata2 = (char *)sub_10096C0D0();
        uint64_t v180 = v179;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v182 = v286;
        uint64_t v183 = swift_getAssociatedConformanceWitness();
        unint64_t v299 = (char *)v176;
        uint64_t v300 = v182;
        uint64_t v301 = AssociatedConformanceWitness;
        uint64_t v302 = v183;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v184 = (_WORD *)(v180 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        uint64_t v185 = v287;
        unint64_t v186 = v284;
        (*(void (**)(uint64_t, char *, uint64_t))(v287 + 16))(v180, v284, v182);
        swift_storeEnumTagMultiPayload();
        _WORD *v184 = 4;
        uint64_t v187 = v288;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_1003FC080((uint64_t)TupleTypeMetadata2);
        double v188 = (void **)v269;
        uint64_t v189 = v297;
        sub_10035B6FC(v187);
        if (v189)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v190 = v282;
          sub_1003F58E4(v282);

          (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v182);
          ((void (*)(uint64_t, uint64_t))v296)(v289, v292);
          return ((uint64_t (*)(char *, uint64_t))v295)(v291, v146);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v299 = (char *)v280;
        uint64_t v300 = v278;
        uint64_t v301 = v281;
        uint64_t v302 = v277;
        type metadata accessor for ConcreteJobResult();
        uint64_t v197 = sub_100591720();
        unint64_t v198 = v265;
        sub_10096B0D0();
        sub_10096B080();
        double v200 = v199;
        uint64_t v201 = *(void (**)(char *, uint64_t))(v263 + 8);
        v201(v198, v266);
        double v202 = v200 * 1000000000.0;
        if ((~COERCE__INT64(v200 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v202 > -9.22337204e18)
          {
            if (v202 < 9.22337204e18)
            {
              sub_1008B08F0(v289, 0x2000000000000000, (uint64_t)v202, 0x20000, v188, 0, v197);
              unint64_t v238 = v265;
              sub_10096B0D0();
              sub_10096B080();
              double v240 = v239;
              v201(v238, v266);
              double v241 = v240 * 1000000000.0;
              if ((~COERCE__INT64(v240 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v241 > -9.22337204e18)
                {
                  if (v241 < 9.22337204e18)
                  {
                    sub_10059C6F4(v197, (uint64_t)v241);
LABEL_87:
                    swift_release();
                    unint64_t v252 = v282;
                    sub_1003F58E4(v282);

                    (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
                    ((void (*)(uint64_t, uint64_t))v296)(v289, v292);
                    return (*(uint64_t (**)(char *, uint64_t))(v293 + 8))(v291, v294);
                  }
                  goto LABEL_103;
                }
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
                goto LABEL_104;
              }
LABEL_101:
              __break(1u);
              goto LABEL_102;
            }
            goto LABEL_97;
          }
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
          goto LABEL_98;
        }
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
    }
    uint64_t v211 = v280;
    uint64_t v212 = v278;
    unint64_t v299 = (char *)v280;
    uint64_t v300 = v278;
    uint64_t v301 = v281;
    uint64_t v213 = v281;
    uint64_t v214 = v277;
    uint64_t v302 = v277;
    type metadata accessor for Mutation();
    uint64_t v276 = sub_10096C110();
    unint64_t v299 = (char *)v211;
    uint64_t v300 = v212;
    uint64_t v301 = v213;
    uint64_t v302 = v214;
    uint64_t v215 = type metadata accessor for ReconciliationMutation();
    unint64_t v295 = (char *)v215;
    sub_10096D230();
    uint64_t v285 = *(void *)(*(void *)(v215 - 8) + 72);
    uint64_t v288 = 2 * v285;
    swift_allocObject();
    uint64_t v275 = sub_10096C0D0();
    uint64_t v217 = v216;
    uint64_t v218 = swift_getAssociatedConformanceWitness();
    uint64_t v219 = v286;
    uint64_t v220 = swift_getAssociatedConformanceWitness();
    unint64_t v299 = (char *)v207;
    uint64_t v300 = v219;
    uint64_t v301 = v218;
    uint64_t v302 = v220;
    type metadata accessor for ReconciliationID();
    uint64_t v221 = type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
    Swift::String v222 = (unsigned char *)(v217 + *((int *)TupleTypeMetadata2 + 12));
    uint64_t v279 = *(void *)(v287 + 16);
    uint64_t v223 = v284;
    ((void (*)(uint64_t, char *, uint64_t))v279)(v217, v284, v219);
    swift_storeEnumTagMultiPayload();
    *Swift::String v222 = 0;
    Swift::String v274 = (char *)v221;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v224 = v217 + v285;
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v225 = (_WORD *)(v224 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    uint64_t v226 = v223;
    uint64_t v227 = (void (*)(uint64_t, char *, uint64_t))v279;
    ((void (*)(uint64_t, char *, uint64_t))v279)(v224, v226, v219);
    swift_storeEnumTagMultiPayload();
    _WORD *v225 = 6;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v228 = v217 + v288;
    uint64_t v229 = *((int *)TupleTypeMetadata2 + 12);
    v227(v217 + v288, v284, v219);
    swift_storeEnumTagMultiPayload();
    uint64_t v230 = v265;
    sub_10096B0D0();
    sub_10096B080();
    double v232 = v231;
    id v233 = *(void (**)(char *, uint64_t))(v263 + 8);
    v233(v230, v266);
    double v234 = v232 * 1000000000.0;
    if ((~COERCE__INT64(v232 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v234 > -9.22337204e18)
      {
        if (v234 < 9.22337204e18)
        {
          uint64_t v235 = v228 + v229;
          *(_OWORD *)uint64_t v235 = xmmword_100981BD0;
          *(void *)(v235 + 16) = (uint64_t)v234;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_1003FC080(v275);
          uint64_t v236 = v297;
          sub_10035B6FC(v276);
          if (v236)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            os_log_type_t v237 = v282;
            sub_1003F58E4(v282);

            (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
            ((void (*)(uint64_t, uint64_t))v296)(v289, v292);
            return (*(uint64_t (**)(char *, uint64_t))(v293 + 8))(v291, v294);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v299 = (char *)v280;
          uint64_t v300 = v278;
          uint64_t v301 = v281;
          uint64_t v302 = v277;
          type metadata accessor for DiskImport.ContinueDiskImport();
          sub_10085378C();
          uint64_t v242 = v265;
          sub_10096B0D0();
          sub_10096B080();
          double v244 = v243;
          v233(v242, v266);
          double v245 = v244 * 1000000000.0;
          if ((~COERCE__INT64(v244 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v245 > -9.22337204e18)
            {
              if (v245 < 9.22337204e18)
              {
                uint64_t v246 = v262;
                uint64_t v247 = sub_1003A9384(v262, 0x2000000000000000, (uint64_t)v245, 0x10000);
                ((void (*)(uint64_t, uint64_t))v296)(v246, v292);
                uint64_t v248 = v265;
                sub_10096B0D0();
                sub_10096B080();
                double v250 = v249;
                v233(v248, v266);
                double v251 = v250 * 1000000000.0;
                if ((~COERCE__INT64(v250 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v251 > -9.22337204e18)
                  {
                    if (v251 < 9.22337204e18)
                    {
                      sub_10059C450(v247);
                      goto LABEL_87;
                    }
LABEL_109:
                    __break(1u);
                    JUMPOUT(0x1003F58D0);
                  }
LABEL_108:
                  __break(1u);
                  goto LABEL_109;
                }
LABEL_107:
                __break(1u);
                goto LABEL_108;
              }
LABEL_106:
              __break(1u);
              goto LABEL_107;
            }
LABEL_105:
            __break(1u);
            goto LABEL_106;
          }
LABEL_104:
          __break(1u);
          goto LABEL_105;
        }
        goto LABEL_100;
      }
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  id v153 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  unint64_t v154 = sub_10096B470();
  os_log_type_t v155 = sub_10096C5A0();
  BOOL v156 = os_log_type_enabled(v154, v155);
  uint64_t v157 = v290;
  if (v156)
  {
    uint64_t v158 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v158 = 0;
    _os_log_impl((void *)&_mh_execute_header, v154, v155, "skip item not watching content", v158, 2u);
    swift_slowDealloc();
  }

  ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v273, v97);
  uint64_t v159 = v282;
  sub_1003F58E4(v282);

  (*(void (**)(char *, uint64_t))(v287 + 8))(v284, v286);
  (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v289, v292);
  return ((uint64_t (*)(char *, uint64_t))v93)(v291, v146);
}

uint64_t sub_1003F58E4(void *a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v7 = a1;
  uint64_t v8 = sub_10096B470();
  os_log_type_t v9 = sub_10096C5A0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v15[0] = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = [v7 leave];
    v15[1] = v13;
    sub_10096C8C0();
    *uint64_t v12 = v13;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%@", v11, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v15[0];
    swift_slowDealloc();
  }
  else
  {

    uint64_t v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1003F5AE8(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  return sub_1003F3280(a1, a3, (uint64_t (*)(void))sub_1003FB5CC, v4);
}

uint64_t sub_1003F5B28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v22 = *a1;
  uint64_t v5 = *(void *)(v22 + 592);
  uint64_t v6 = *(void *)(v22 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v9);
  id v13 = (char *)&v21 - v12;
  uint64_t v14 = v29;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1[4] + 280))(a2);
  if (!v14)
  {
    uint64_t v29 = v6;
    uint64_t v16 = v21;
    uint64_t v17 = v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v8);
      uint64_t v18 = *(void *)(v17 + 584);
      uint64_t v19 = *(void *)(v17 + 600);
      uint64_t v25 = v29;
      uint64_t v26 = v18;
      uint64_t v27 = v5;
      uint64_t v28 = v19;
      uint64_t v20 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v13, v11, AssociatedTypeWitness);
      sub_1000DEDD8((uint64_t)v13, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_1003F5E20(uint64_t (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a1;
  uint64_t v6 = *(void **)a3;
  uint64_t v7 = sub_10096B0E0();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v6[74];
  uint64_t v10 = v6[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v53 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v57 = (uint64_t)&v50 - v12;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v58 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = v6[73];
  uint64_t v18 = v6[75];
  uint64_t v62 = v10;
  uint64_t v63 = v17;
  uint64_t v59 = v17;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  uint64_t result = type metadata accessor for ItemReconciliation();
  if (*(unsigned char *)(a2 + *(int *)(result + 56)) != 1) {
    return result;
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(a3 + 32) + 240))(v60, 1);
  if (v3) {
    return result;
  }
  uint64_t v51 = 0;
  uint64_t v20 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v13) != 1)
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v22 = FileItem.isDataless.getter(v13, WitnessTable);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v13);
    uint64_t v23 = v60;
    if ((v22 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v62 = v10;
    uint64_t v63 = v59;
    uint64_t v64 = v9;
    uint64_t v65 = v18;
    type metadata accessor for Ingestion.UnfaultDirectoryInTree();
    uint64_t v25 = v52;
    uint64_t v24 = v53;
    (*(void (**)(uint64_t, uint64_t (*)(char *, uint64_t), uint64_t))(v52 + 16))(v57, v23, v53);
    uint64_t v26 = v54;
    sub_10096B0D0();
    sub_10096B080();
    double v28 = v27;
    uint64_t v29 = v56;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
    uint64_t result = v30(v26, v56);
    double v31 = v28 * 1000000000.0;
    if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        uint64_t v60 = v30;
        if (v31 < 9.22337204e18)
        {
          uint64_t v32 = v57;
          uint64_t v33 = sub_1008AA5E8(v57, 0x2000000000000000, (uint64_t)v31, 0x10000);
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v32, v24);
          sub_10096B0D0();
          sub_10096B080();
          double v35 = v34;
          uint64_t result = v60(v26, v29);
          double v36 = v35 * 1000000000.0;
          if ((~COERCE__INT64(v35 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v36 > -9.22337204e18)
            {
              if (v36 < 9.22337204e18)
              {
                sub_10059C450(v33);
                return swift_release();
              }
              goto LABEL_28;
            }
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v14);
LABEL_14:
  uint64_t v37 = *(void *)(a3 + 24);
  uint64_t v38 = v59;
  uint64_t v62 = v10;
  uint64_t v63 = v59;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  uint64_t v58 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v40 = sub_10096C0D0();
  uint64_t v62 = v10;
  uint64_t v63 = v38;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  *uint64_t v41 = type metadata accessor for Ingestion.FaultDirectoryInTree();
  uint64_t v42 = sub_1003FC080(v40);
  uint64_t v43 = v51;
  uint64_t v44 = (*(uint64_t (**)(void, uint64_t))(*(void *)v37 + 272))(v60, v42);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v43)
  {
    uint64_t v61 = v44;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C450();
    uint64_t result = swift_bridgeObjectRelease();
    if (v62)
    {
      if (*(unsigned char *)(v62 + 112) == 1)
      {
        uint64_t v45 = sub_100610C18();
        swift_retain();
        uint64_t v46 = v54;
        sub_10096B0D0();
        sub_10096B080();
        double v48 = v47;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v46, v56);
        double v49 = v48 * 1000000000.0;
        if ((~COERCE__INT64(v48 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v49 > -9.22337204e18)
          {
            if (v49 < 9.22337204e18)
            {
              sub_10059C450(v45);
              swift_release();
              return swift_release();
            }
            goto LABEL_31;
          }
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003F6554(uint64_t a1, ValueMetadata *a2)
{
  uint64_t v500 = a2;
  uint64_t v497 = (char *)a1;
  uint64_t v3 = *(void *)(a2->Kind + 576);
  uint64_t v4 = *(ValueMetadata **)(a2->Kind + 600);
  uint64_t v5 = *(ValueMetadata **)(a2->Kind + 592);
  uint64_t v502 = *(void *)(a2->Kind + 584);
  uint64_t v2 = v502;
  uint64_t v503 = v3;
  uint64_t v504 = v4;
  uint64_t v505 = v5;
  uint64_t v6 = type metadata accessor for ItemReconciliation();
  uint64_t v452 = sub_10096C890();
  uint64_t v451 = *(void *)(v452 - 8);
  uint64_t v7 = __chkstk_darwin(v452);
  uint64_t v466 = (uint64_t)&v420 - v8;
  uint64_t v461 = v6;
  uint64_t v464 = *(void *)(v6 - 8);
  __chkstk_darwin(v7);
  long long v458 = (char *)&v420 - v9;
  uint64_t v478 = type metadata accessor for FileTreeError();
  uint64_t v469 = sub_10096C890();
  uint64_t v468 = *(void *)(v469 - 8);
  uint64_t v10 = __chkstk_darwin(v469);
  long long v470 = (char *)&v420 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v467 = (char *)&v420 - v12;
  uint64_t v444 = sub_10096B480();
  uint64_t v445 = *(void *)(v444 - 8);
  uint64_t v13 = __chkstk_darwin(v444);
  unint64_t v446 = (char *)&v420 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v435 = (char *)&v420 - v16;
  __chkstk_darwin(v15);
  unint64_t v427 = (char *)&v420 - v17;
  id AssociatedTypeWitness = (id)swift_getAssociatedTypeWitness();
  uint64_t v459 = sub_10096C890();
  uint64_t v453 = *(void *)(v459 - 8);
  uint64_t v19 = __chkstk_darwin(v459);
  unint64_t v450 = (char *)&v420 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v440 = (char *)&v420 - v21;
  uint64_t v502 = v3;
  uint64_t v503 = v2;
  uint64_t v504 = v5;
  uint64_t v505 = v4;
  uint64_t v439 = type metadata accessor for ReconciliationMutation();
  uint64_t v441 = *(void *)(v439 - 8);
  __chkstk_darwin(v439);
  uint64_t v438 = (char *)&v420 - v22;
  uint64_t v502 = v3;
  uint64_t v503 = v2;
  uint64_t v504 = v5;
  uint64_t v505 = v4;
  uint64_t v23 = type metadata accessor for ItemReconciliation();
  uint64_t v454 = sub_10096C890();
  uint64_t v455 = *(void *)(v454 - 8);
  uint64_t v24 = __chkstk_darwin(v454);
  uint64_t v434 = (char *)&v420 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v465 = (uint64_t)&v420 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v424 = (uint64_t)&v420 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v430 = (uint64_t)&v420 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v429 = (char *)&v420 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v436 = (uint64_t)&v420 - v35;
  uint64_t v462 = v23;
  uint64_t v463 = *(void *)(v23 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v443 = (uint64_t)&v420 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v460 = (uint64_t)&v420 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  size_t v423 = (char *)&v420 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  unint64_t v428 = (uint64_t)&v420 - v43;
  __chkstk_darwin(v42);
  unint64_t v431 = (char *)&v420 - v44;
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  uint64_t v502 = (uint64_t)AssociatedTypeWitness;
  uint64_t v503 = v45;
  os_log_t isa = AssociatedConformanceWitness;
  uint64_t v495 = (ValueMetadata *)v47;
  uint64_t v504 = (ValueMetadata *)AssociatedConformanceWitness;
  uint64_t v505 = (ValueMetadata *)v47;
  uint64_t v490 = type metadata accessor for ThrottlingKey();
  uint64_t v457 = sub_10096C890();
  uint64_t v456 = *(void *)(v457 - 8);
  uint64_t v48 = __chkstk_darwin(v457);
  unint64_t v447 = (char *)&v420 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v448 = (char *)&v420 - v51;
  uint64_t v493 = (void (*)(void, void, void))v45;
  unint64_t v491 = *(uint8_t **)(v45 - 8);
  uint64_t v52 = __chkstk_darwin(v50);
  unint64_t v437 = (char *)&v420 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v442 = (char *)&v420 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  long long v479 = (char *)&v420 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  long long v473 = (char *)&v420 - v59;
  id v496 = AssociatedTypeWitness;
  uint64_t v492 = (uint8_t *)*((void *)AssociatedTypeWitness - 1);
  uint64_t v60 = __chkstk_darwin(v58);
  unint64_t v449 = (uint64_t (*)(char *, uint64_t))((char *)&v420 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = __chkstk_darwin(v60);
  unint64_t v433 = (char *)&v420 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  long long v483 = (uint64_t (*)(char *, uint64_t))((char *)&v420 - v65);
  uint64_t v66 = __chkstk_darwin(v64);
  unint64_t v426 = (char *)&v420 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v425 = (char *)&v420 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v432 = (uint64_t (*)(char *, uint64_t))((char *)&v420 - v71);
  uint64_t v72 = __chkstk_darwin(v70);
  int v489 = (uint8_t *)&v420 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  long long v480 = (char *)&v420 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  long long v484 = (char *)&v420 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  long long v472 = (char *)&v420 - v79;
  __chkstk_darwin(v78);
  unint64_t v481 = (char *)&v420 - v80;
  uint64_t v81 = type metadata accessor for SnapshotItem();
  unint64_t v488 = *(unsigned int (***)(char *, uint64_t, void))(v81 - 8);
  __chkstk_darwin(v81);
  unint64_t v482 = (char *)&v420 - v82;
  uint64_t v83 = type metadata accessor for SnapshotItem();
  long long v486 = *(void **)(v83 - 8);
  uint64_t v487 = (char *)v83;
  __chkstk_darwin(v83);
  long long v471 = (char *)&v420 - v84;
  uint64_t v476 = v3;
  uint64_t v502 = v3;
  uint64_t v503 = v2;
  uint64_t v474 = v2;
  uint64_t v477 = v5;
  uint64_t v504 = v5;
  uint64_t v505 = v4;
  long long v475 = v4;
  uint64_t v85 = type metadata accessor for PersistenceTrigger();
  uint64_t v498 = *(void *)(v85 - 8);
  uint64_t v499 = v85;
  uint64_t v86 = __chkstk_darwin(v85);
  uint64_t v88 = (char *)&v420 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __chkstk_darwin(v86);
  long long v485 = (char *)&v420 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  char v93 = (char *)&v420 - v92;
  uint64_t v94 = __chkstk_darwin(v91);
  os_log_t v96 = (char *)&v420 - v95;
  uint64_t v97 = __chkstk_darwin(v94);
  uint64_t v99 = (char *)&v420 - v98;
  uint64_t v100 = __chkstk_darwin(v97);
  uint64_t v102 = (char *)&v420 - v101;
  __chkstk_darwin(v100);
  id v104 = (char *)&v420 - v103;
  uint64_t v105 = v500;
  uint64_t result = sub_1006C816C();
  if (result)
  {
    uint64_t v422 = v81;
    if (*(uint64_t *)((char *)&v105->Kind + qword_100B0B3B8))
    {
      swift_retain();
      uint64_t v107 = (uint64_t)v497;
      uint64_t v108 = v501;
      sub_1003F009C((uint64_t)v497);
      if (v108) {
        return swift_release();
      }
      int v421 = v88;
      uint64_t v501 = 0;
      swift_release();
      uint64_t v109 = v107;
    }
    else
    {
      int v421 = v88;
      uint64_t v109 = (uint64_t)v497;
    }
    uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v498 + 16);
    v110(v104, v109, v499);
    uint64_t v497 = v104;
    int v111 = swift_getEnumCaseMultiPayload() - 5;
    uint64_t v112 = v422;
    uint64_t v113 = (uint64_t)v497;
    switch(v111)
    {
      case 0:
        v110(v102, (uint64_t)v497, v499);
        int v114 = v487;
        uint64_t v115 = sub_10096C890();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v117 = &v102[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v118 = *(void *)&v102[*(int *)(TupleTypeMetadata3 + 64)];
        uint64_t v119 = v486;
        uint64_t v120 = (unsigned int (*)(char *, uint64_t, char *))v486[6];
        if (v120(v102, 1, v114) == 1)
        {
          uint64_t v121 = *(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8);
          v121(v117, v115);
          v121(v102, v115);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        if (v120(v117, 1, v114) != 1)
        {
          ((void (*)(char *, char *))v119[1])(v102, v114);
          goto LABEL_77;
        }
        uint64_t v171 = v471;
        uint64_t v172 = ((uint64_t (*)(char *, char *, char *))v119[4])(v471, v102, v114);
        if ((v118 & 2) == 0)
        {
          ((void (*)(char *, char *))v119[1])(v171, v114);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        __chkstk_darwin(v172);
        uint64_t v215 = v500;
        uint64_t v216 = v501;
        *(&v420 - 2) = (uint64_t)v500;
        *(&v420 - 1) = (uint64_t)v171;
        sub_1003F3280(v215, 0, (uint64_t (*)(void))sub_1003FB648, (char *)&v420 - 32);
        if (v216)
        {
          ((void (*)(char *, char *))v119[1])(v171, v114);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        uint64_t v501 = 0;
        ((void (*)(char *, char *))v119[1])(v171, v114);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 1:
        v110(v99, (uint64_t)v497, v499);
        uint64_t v115 = sub_10096C890();
        uint64_t v122 = v112;
        uint64_t v123 = swift_getTupleTypeMetadata3();
        uint64_t v117 = &v99[*(int *)(v123 + 48)];
        uint64_t v124 = (uint64_t)v488;
        if (v488[6](v99, 1, v122) == 1)
        {
          uint64_t v125 = *(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8);
          v125(v117, v115);
          v125(v99, v115);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        uint64_t v173 = *(void *)&v99[*(int *)(v123 + 64)];
        uint64_t v174 = v482;
        uint64_t v175 = (*(uint64_t (**)(char *, char *, uint64_t))(v124 + 32))(v482, v99, v122);
        if ((v173 & 2) != 0)
        {
          __chkstk_darwin(v175);
          uint64_t v213 = v500;
          uint64_t v214 = v501;
          *(&v420 - 2) = (uint64_t)v500;
          *(&v420 - 1) = (uint64_t)v174;
          sub_1003F3280(v213, 0, (uint64_t (*)(void))sub_1003FB62C, (char *)&v420 - 32);
          if (v214)
          {
            (*(void (**)(char *, uint64_t))(v124 + 8))(v174, v422);
            (*(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8))(v117, v115);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          uint64_t v501 = 0;
          (*(void (**)(char *, uint64_t))(v124 + 8))(v174, v422);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v124 + 8))(v174, v122);
        }
LABEL_77:
        (*(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8))(v117, v115);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 2:
      case 3:
      case 4:
      case 8:
      case 9:
      case 10:
      case 11:
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 5:
        v110(v93, (uint64_t)v497, v499);
        uint64_t v127 = v495;
        id v126 = v496;
        uint64_t v129 = (uint64_t)v493;
        os_log_t v128 = isa;
        uint64_t v502 = (uint64_t)v496;
        uint64_t v503 = (uint64_t)v493;
        uint64_t v504 = (ValueMetadata *)isa;
        uint64_t v505 = v495;
        uint64_t v502 = type metadata accessor for ReconciliationID();
        uint64_t v503 = sub_10096C890();
        uint64_t v504 = &type metadata for ContentStatus;
        uint64_t v505 = &type metadata for ContentStatus;
        uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
        uint64_t v131 = &v93[*(int *)(TupleTypeMetadata + 48)];
        int v132 = v93[*(int *)(TupleTypeMetadata + 80)];
        uint64_t v502 = (uint64_t)v126;
        uint64_t v503 = v129;
        uint64_t v504 = (ValueMetadata *)v128;
        uint64_t v505 = v127;
        type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          if (v132 == 3)
          {
            uint64_t v133 = v491;
            uint64_t v134 = v473;
            uint64_t v135 = (*((uint64_t (**)(char *, char *, uint64_t))v491 + 4))(v473, v93, v129);
            __chkstk_darwin(v135);
            double v136 = v500;
            uint64_t v137 = v501;
            *(&v420 - 2) = (uint64_t)v500;
            *(&v420 - 1) = (uint64_t)v134;
            sub_1003F3280(v136, 0, (uint64_t (*)(void))sub_1003FB610, (char *)&v420 - 32);
            if (v137)
            {
              (*((void (**)(char *, uint64_t))v133 + 1))(v134, v129);
LABEL_37:
              uint64_t v181 = sub_10096C890();
              (*(void (**)(char *, uint64_t))(*(void *)(v181 - 8) + 8))(v131, v181);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
            }
            uint64_t v501 = 0;
            (*((void (**)(char *, uint64_t))v133 + 1))(v134, v129);
          }
          else
          {
            (*((void (**)(char *, uint64_t))v491 + 1))(v93, v129);
          }
        }
        else if (v132 == 2)
        {
          uint64_t v176 = v492;
          uint64_t v177 = v472;
          uint64_t v178 = (*((uint64_t (**)(char *, char *, id))v492 + 4))(v472, v93, v126);
          __chkstk_darwin(v178);
          uint64_t v179 = v500;
          uint64_t v180 = v501;
          *(&v420 - 2) = (uint64_t)v500;
          *(&v420 - 1) = (uint64_t)v177;
          sub_1003F3280(v179, 0, (uint64_t (*)(void))sub_1003FB5E8, (char *)&v420 - 32);
          if (v180)
          {
            (*((void (**)(char *, id))v176 + 1))(v177, v126);
            goto LABEL_37;
          }
          uint64_t v501 = 0;
          (*((void (**)(char *, id))v176 + 1))(v177, v126);
        }
        else
        {
          (*((void (**)(char *, id))v492 + 1))(v93, v126);
        }
        uint64_t v226 = sub_10096C890();
        (*(void (**)(char *, uint64_t))(*(void *)(v226 - 8) + 8))(v131, v226);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 6:
        double v138 = v485;
        uint64_t v139 = ((uint64_t (*)(char *, char *, uint64_t))v110)(v485, v497, v499);
        __chkstk_darwin(v139);
        strcpy((char *)&v420 - 32, " otherID from to ");
        uint64_t v141 = v495;
        id v140 = v496;
        uint64_t v142 = (uint64_t)v493;
        os_log_t v143 = isa;
        uint64_t v502 = (uint64_t)v496;
        uint64_t v503 = (uint64_t)v493;
        uint64_t v504 = (ValueMetadata *)isa;
        uint64_t v505 = v495;
        uint64_t v502 = type metadata accessor for ReconciliationID();
        uint64_t v503 = sub_10096C890();
        uint64_t v504 = (ValueMetadata *)sub_100033BE8((uint64_t *)&unk_100AD4BE0);
        uint64_t v505 = v504;
        unint64_t v144 = (int *)swift_getTupleTypeMetadata();
        unint64_t v145 = (ValueMetadata *)&v138[v144[12]];
        int v146 = v138[v144[16]];
        int v147 = v138[v144[20]];
        uint64_t v502 = (uint64_t)v140;
        uint64_t v503 = v142;
        uint64_t v504 = (ValueMetadata *)v143;
        uint64_t v505 = v141;
        uint64_t v148 = type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v149 = sub_10096C890();
          (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v149 - 8) + 8))(v145, v149);
          (*(void (**)(char *, uint64_t))(*(void *)(v148 - 8) + 8))(v138, v148);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        uint64_t v182 = (ValueMetadata *)v484;
        uint64_t v183 = (*((uint64_t (**)(char *, char *, id))v492 + 4))(v484, v138, v140);
        if (v147 != 2)
        {
          uint64_t v184 = v501;
          uint64_t v185 = (uint64_t)v480;
          if (v147 == 3)
          {
            uint64_t v219 = v145;
            __chkstk_darwin(v183);
            uint64_t v220 = v500;
            *(&v420 - 2) = (uint64_t)v500;
            *(&v420 - 1) = (uint64_t)v182;
            sub_1003F3280(v220, 0, (uint64_t (*)(void))sub_1003FC068, (char *)&v420 - 32);
            if (v184)
            {
              (*((void (**)(ValueMetadata *, id))v492 + 1))(v182, v140);
              uint64_t v221 = sub_10096C890();
              (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v221 - 8) + 8))(v219, v221);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
            }
            unint64_t v186 = v220;
            Swift::String v222 = v477;
            uint64_t v223 = v475;
            uint64_t v224 = v474;
            unint64_t v145 = v219;
LABEL_117:
            if (v146 != 3)
            {
              if (v146)
              {
                uint64_t v501 = v184;
                (*((void (**)(char *, id))v492 + 1))(v484, v140);
              }
              else
              {
                uint64_t v278 = v145;
                uint64_t v279 = v484;
                uint64_t v504 = v186;
                uint64_t v505 = (ValueMetadata *)v484;
                sub_1003F3280(v186, 1, (uint64_t (*)(void))sub_1003FB5CC, (char *)&v502);
                if (v184)
                {
                  (*((void (**)(char *, id))v492 + 1))(v279, v140);
                  uint64_t v280 = sub_10096C890();
                  (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v280 - 8) + 8))(v278, v280);
                  return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
                }
                uint64_t v501 = 0;
                (*((void (**)(char *, id))v492 + 1))(v279, v140);
                unint64_t v145 = v278;
              }
LABEL_126:
              uint64_t v288 = sub_10096C890();
              (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v288 - 8) + 8))(v145, v288);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
            }
            uint64_t v495 = v145;
            uint64_t v502 = v476;
            uint64_t v503 = v224;
            uint64_t v504 = v222;
            uint64_t v505 = v223;
            uint64_t v501 = v184;
            type metadata accessor for DiskImport.ContinueDiskImport();
            uint64_t v281 = (uint64_t)v480;
            sub_10085378C();
            uint64_t v282 = sub_100437D5C();
            uint64_t v284 = sub_1003A9384(v281, v282, v283, 0x20000);
            uint64_t v285 = (void (*)(uint64_t, id))*((void *)v492 + 1);
            v285(v281, v140);
            sub_10063ADA8();
            uint64_t v286 = v501;
            sub_10059C450(v284);
            if (!v286)
            {
              uint64_t v501 = 0;
              v285((uint64_t)v484, v140);
              swift_release();
              unint64_t v145 = v495;
              goto LABEL_126;
            }
            v285((uint64_t)v484, v140);
            swift_release();
            uint64_t v287 = sub_10096C890();
            (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v287 - 8) + 8))(v495, v287);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          if (v147 != 6)
          {
            unint64_t v186 = v500;
LABEL_71:
            Swift::String v222 = v477;
            uint64_t v223 = v475;
            uint64_t v224 = v474;
            goto LABEL_117;
          }
          uint64_t v495 = v145;
          unint64_t v186 = v500;
          char v187 = (*(uint64_t (**)(uint64_t))(*(void *)v500[1].Kind + 232))(v183);
          if (!v184)
          {
            if ((v187 & 1) == 0)
            {
              uint64_t v502 = v476;
              uint64_t v503 = v474;
              uint64_t v504 = v477;
              uint64_t v505 = v475;
              uint64_t v501 = 0;
              type metadata accessor for DiskImport.ContinueDiskImport();
              sub_10085378C();
              uint64_t v188 = sub_100437D5C();
              uint64_t v190 = sub_1003A9384(v185, v188, v189, 0x20000);
              unint64_t v191 = v186;
              uint64_t v192 = (void (*)(uint64_t, id))*((void *)v492 + 1);
              v192(v185, v140);
              sub_10063ADA8();
              uint64_t v184 = v501;
              sub_10059C450(v190);
              if (v184)
              {
                v192((uint64_t)v484, v140);
                swift_release();
                uint64_t v193 = sub_10096C890();
                (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v193 - 8) + 8))(v495, v193);
                return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
              }
              swift_release();
              unint64_t v186 = v191;
              uint64_t v182 = (ValueMetadata *)v484;
            }
            unint64_t v145 = v495;
            uint64_t v504 = v186;
            uint64_t v505 = v182;
            sub_1003F3280(v186, 0, (uint64_t (*)(void))sub_1003FB5CC, (char *)&v502);
            goto LABEL_71;
          }
LABEL_67:
          (*((void (**)(ValueMetadata *, id))v492 + 1))(v182, v140);
          uint64_t v218 = sub_10096C890();
          (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v218 - 8) + 8))(v495, v218);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        uint64_t v495 = v145;
        unint64_t v186 = v500;
        uint64_t v184 = v501;
        char v217 = (*(uint64_t (**)(uint64_t))(*(void *)v500[1].Kind + 240))(v183);
        if (v184) {
          goto LABEL_67;
        }
        if (v217)
        {
          Swift::String v222 = v477;
          uint64_t v223 = v475;
          uint64_t v224 = v474;
LABEL_116:
          unint64_t v145 = v495;
          goto LABEL_117;
        }
        uint64_t v502 = v476;
        uint64_t v503 = v474;
        uint64_t v504 = v477;
        uint64_t v505 = v475;
        uint64_t v501 = 0;
        type metadata accessor for DiskImport.ContinueDiskImport();
        uint64_t v252 = (uint64_t)v480;
        sub_10085378C();
        uint64_t v253 = sub_100437D5C();
        uint64_t v255 = sub_1003A9384(v252, v253, v254, 0x20000);
        uint64_t v256 = v186;
        uint64_t v257 = (void (*)(uint64_t, id))*((void *)v492 + 1);
        v257(v252, v140);
        sub_10063ADA8();
        uint64_t v258 = v501;
        sub_10059C450(v255);
        uint64_t v501 = v258;
        if (!v258)
        {
          swift_release();
          unint64_t v186 = v256;
          Swift::String v222 = v477;
          uint64_t v223 = v475;
          uint64_t v224 = v474;
          uint64_t v184 = v501;
          goto LABEL_116;
        }
        v257((uint64_t)v484, v140);
        swift_release();
        uint64_t v259 = sub_10096C890();
        (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v259 - 8) + 8))(v495, v259);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 7:
        char v150 = v421;
        v110(v421, (uint64_t)v497, v499);
        sub_100033BE8((uint64_t *)&unk_100ACB6B0);
        uint64_t v151 = *(unsigned int (***)(char *, uint64_t, void))&v150[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        id v152 = v496;
        id v153 = v493;
        uint64_t v502 = (uint64_t)v496;
        uint64_t v503 = (uint64_t)v493;
        uint64_t v504 = (ValueMetadata *)isa;
        uint64_t v505 = v495;
        uint64_t v154 = type metadata accessor for ReconciliationID();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v156 = v150[*(int *)(TupleTypeMetadata2 + 48)];
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          if (v156 != 6)
          {
            (*((void (**)(char *, void (*)(void, void, void)))v491 + 1))(v150, v153);
            swift_errorRelease();
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          uint64_t v157 = (uint64_t)v479;
          (*((void (**)(char *, char *, void))v491 + 4))(v479, v150, v153);
          uint64_t v506 = (uint64_t)v151;
          swift_errorRetain();
          int v158 = swift_dynamicCast();
          uint64_t v159 = v501;
          if (v158)
          {
            id v160 = v151;
            uint64_t v161 = v502;
            uint64_t v162 = v503;
            char v163 = (char)v504;
            if (v504 <= 0xFBu)
            {
              swift_errorRelease();
              sub_10017DC9C(v161, v162, v163);
              goto LABEL_82;
            }
            sub_10017DC9C(v502, v503, (char)v504);
            uint64_t v151 = v160;
            uint64_t v157 = (uint64_t)v479;
          }
          uint64_t v502 = (uint64_t)v151;
          swift_errorRetain();
          uint64_t v164 = v470;
          uint64_t v165 = v478;
          int v166 = swift_dynamicCast();
          uint64_t v167 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56);
          if (v166)
          {
            uint64_t v168 = *(void *)(v165 - 8);
            v167(v164, 0, 1, v165);
            if (swift_getEnumCaseMultiPayload() == 13)
            {
              (*((void (**)(uint64_t, void (*)(void, void, void)))v491 + 1))(v157, v153);
              swift_errorRelease();
              (*(void (**)(char *, uint64_t))(v168 + 8))(v164, v165);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
            }
            uint64_t v225 = v165;
          }
          else
          {
            v167(v164, 1, 1, v165);
            uint64_t v168 = v468;
            uint64_t v225 = v469;
          }
          (*(void (**)(char *, uint64_t))(v168 + 8))(v164, v225);
          uint64_t v228 = v466;
          sub_1000DF200(v157, v466);
          if (v159)
          {
            (*((void (**)(uint64_t, void (*)(void, void, void)))v491 + 1))(v157, v153);
            swift_errorRelease();
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          uint64_t v229 = v228;
          uint64_t v230 = v464;
          uint64_t v231 = v461;
          int v232 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v464 + 48))(v229, 1, v461);
          uint64_t v501 = 0;
          if (v232 == 1)
          {
            (*((void (**)(uint64_t, void (*)(void, void, void)))v491 + 1))(v157, v153);
            swift_errorRelease();
            (*(void (**)(uint64_t, uint64_t))(v451 + 8))(v229, v452);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          double v239 = v458;
          (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v458, v229, v231);
          uint64_t v240 = v453;
          double v241 = *(void (**)(char *))(v453 + 16);
          uint64_t v242 = v450;
          os_log_t isa = (os_log_t)&v239[*(int *)(v231 + 52)];
          v241(v450);
          if ((*((unsigned int (**)(char *, uint64_t, id))v492 + 6))(v242, 1, v152) == 1)
          {
            swift_errorRelease();
            (*(void (**)(char *, uint64_t))(v464 + 8))(v239, v231);
            (*((void (**)(char *, void (*)(void, void, void)))v491 + 1))(v479, v153);
            (*(void (**)(char *, uint64_t))(v240 + 8))(v242, v459);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          uint64_t v260 = v492;
          uint64_t v261 = v449;
          (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v492 + 4))(v449, v242, v152);
          if (*((unsigned char *)&isa->isa + *(int *)(type metadata accessor for ItemReconciliationHalf() + 56)) == 4)
          {
            unint64_t v488 = v151;
            id v262 = (id)fpfs_current_or_default_log();
            uint64_t v263 = v446;
            sub_10096B490();
            Class v264 = v153;
            Swift::String v265 = v491;
            uint64_t v266 = (void (*)(char *, char *, void))*((void *)v491 + 2);
            os_log_t v267 = v442;
            v266(v442, v479, v153);
            Swift::String v268 = sub_10096B470();
            os_log_type_t v269 = sub_10096C5B0();
            if (os_log_type_enabled(v268, v269))
            {
              os_log_t isa = v268;
              id v270 = (uint64_t (*)(char *, uint64_t))swift_slowAlloc();
              uint64_t v490 = swift_slowAlloc();
              uint64_t v502 = (uint64_t)v490;
              int v489 = (uint8_t *)v270;
              *(_DWORD *)id v270 = 136446210;
              uint64_t v487 = (char *)v270 + 4;
              uint64_t v271 = v437;
              v266(v437, v267, v153);
              uint64_t v272 = (ValueMetadata *)*((void *)v265 + 1);
              ((void (*)(char *, void (*)(void, void, void)))v272)(v267, v153);
              uint64_t v273 = sub_10096D220();
              unint64_t v275 = v274;
              uint64_t v495 = v272;
              ((void (*)(char *, void (*)(void, void, void)))v272)(v271, v264);
              id v152 = v496;
              uint64_t v506 = sub_100719D44(v273, v275, &v502);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              os_log_t v276 = isa;
              _os_log_impl((void *)&_mh_execute_header, isa, v269, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v489, 0xCu);
              swift_arrayDestroy();
              uint64_t v277 = v461;
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v445 + 8))(v446, v444);
            }
            else
            {
              uint64_t v495 = (ValueMetadata *)*((void *)v265 + 1);
              ((void (*)(char *, void (*)(void, void, void)))v495)(v267, v153);

              (*(void (**)(char *, uint64_t))(v445 + 8))(v263, v444);
              uint64_t v277 = v461;
            }
            uint64_t v333 = v443;
            unint64_t v334 = v458;
            sub_100827044(v277, v443);
            uint64_t v335 = v449;
            uint64_t v336 = v501;
            sub_1003F5E20(v449, v333, (uint64_t)v500);
            uint64_t v337 = v492;
            uint64_t v338 = v479;
            if (v336)
            {
              swift_errorRelease();
              (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v333, v462);
              (*((void (**)(uint64_t (*)(char *, uint64_t), id))v337 + 1))(v335, v152);
              (*(void (**)(char *, uint64_t))(v464 + 8))(v334, v277);
              ((void (*)(char *, void (*)(void, void, void)))v495)(v338, v264);
              return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
            }
            uint64_t v501 = 0;
            swift_errorRelease();
            (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v333, v462);
            (*((void (**)(uint64_t (*)(char *, uint64_t), id))v337 + 1))(v335, v152);
            (*(void (**)(char *, uint64_t))(v464 + 8))(v334, v277);
            ((void (*)(char *, void (*)(void, void, void)))v495)(v338, v264);
            uint64_t v113 = (uint64_t)v497;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          swift_errorRelease();
          (*((void (**)(uint64_t (*)(char *, uint64_t), id))v260 + 1))(v261, v152);
          (*(void (**)(char *, uint64_t))(v464 + 8))(v458, v231);
LABEL_82:
          (*((void (**)(char *, void (*)(void, void, void)))v491 + 1))(v479, v153);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        break;
      case 12:
        v110(v96, (uint64_t)v497, v499);
        id v169 = v496;
        uint64_t v502 = (uint64_t)v496;
        uint64_t v503 = (uint64_t)v493;
        uint64_t v504 = (ValueMetadata *)isa;
        uint64_t v505 = v495;
        uint64_t v170 = type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, uint64_t))(*(void *)(v170 - 8) + 8))(v96, v170);
        }
        else
        {
          char v210 = v492;
          uint64_t v211 = (ValueMetadata *)v481;
          (*((void (**)(char *, char *, id))v492 + 4))(v481, v96, v169);
          uint64_t v212 = v501;
          uint64_t v504 = v500;
          uint64_t v505 = v211;
          sub_1003F3280(v500, 0, (uint64_t (*)(void))sub_1003FB5CC, (char *)&v502);
          if (!v212) {
            uint64_t v501 = 0;
          }
          (*((void (**)(ValueMetadata *, id))v210 + 1))(v211, v169);
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      default:
        uint64_t v113 = (uint64_t)v497;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
    }
    uint64_t v495 = (ValueMetadata *)v154;
    unint64_t v488 = v151;
    uint64_t v194 = v492;
    uint64_t v195 = (void (*)(uint8_t *, char *, id))*((void *)v492 + 2);
    v195(v489, v150, v152);
    int v196 = 1;
    int v197 = 0;
    int v198 = 0;
    switch(v156)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
        double v199 = (void (*)(uint8_t *, id))*((void *)v194 + 1);
        id v200 = v496;
        v199(v489, v496);
        if (v156 != 6)
        {
          v199((uint8_t *)v421, v200);
          swift_errorRelease();
          uint64_t v113 = (uint64_t)v497;
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v194 + 4))((uint8_t *)v483, v421, v200);
        uint64_t v201 = (uint64_t)v488;
        uint64_t v506 = (uint64_t)v488;
        swift_errorRetain();
        if (!swift_dynamicCast()) {
          goto LABEL_50;
        }
        uint64_t v202 = v502;
        uint64_t v203 = v503;
        char v204 = (char)v504;
        if (v504 <= 0xFBu)
        {
          swift_errorRelease();
          sub_10017DC9C(v202, v203, v204);
        }
        else
        {
          sub_10017DC9C(v502, v503, (char)v504);
          uint64_t v201 = (uint64_t)v488;
LABEL_50:
          uint64_t v502 = v201;
          swift_errorRetain();
          int v205 = v467;
          uint64_t v206 = v478;
          int v207 = swift_dynamicCast();
          uint64_t v208 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v206 - 8) + 56);
          if (v207)
          {
            uint64_t v209 = *(void *)(v206 - 8);
            v208(v205, 0, 1, v206);
            if (swift_getEnumCaseMultiPayload() == 13)
            {
              v199((uint8_t *)v483, v496);
              swift_errorRelease();
              (*(void (**)(char *, uint64_t))(v209 + 8))(v205, v206);
              uint64_t v113 = (uint64_t)v497;
              return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
            }
            uint64_t v493 = (void (*)(void, void, void))v195;
            uint64_t v227 = v206;
          }
          else
          {
            uint64_t v493 = (void (*)(void, void, void))v195;
            v208(v205, 1, 1, v206);
            uint64_t v209 = v468;
            uint64_t v227 = v469;
          }
          (*(void (**)(char *, uint64_t))(v209 + 8))(v205, v227);
          double v234 = v500;
          uint64_t v233 = v501;
          uint64_t v235 = v465;
          uint64_t v236 = v483;
          sub_1000DEDD8((uint64_t)v483, v465);
          uint64_t v501 = v233;
          if (v233)
          {
            v199((uint8_t *)v236, v496);
            swift_errorRelease();
            return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
          }
          uint64_t v237 = v463;
          uint64_t v238 = v462;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v463 + 48))(v235, 1, v462) == 1)
          {
            v199((uint8_t *)v236, v496);
            swift_errorRelease();
            (*(void (**)(uint64_t, uint64_t))(v455 + 8))(v235, v454);
            uint64_t v113 = (uint64_t)v497;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
          uint64_t v243 = v460;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 32))(v460, v235, v238);
          uint64_t v244 = type metadata accessor for ItemReconciliationHalf();
          if (*(unsigned char *)(v243 + *(int *)(v244 + 56)) == 3)
          {
            uint64_t v492 = (uint8_t *)v244;
            uint64_t v245 = *(int *)(TupleTypeMetadata2 + 48);
            uint64_t v246 = (uint64_t)v447;
            uint64_t v247 = v483;
            uint64_t v248 = v493;
            v493(v447, (uint8_t *)v483, v496);
            swift_storeEnumTagMultiPayload();
            *(unsigned char *)(v246 + v245) = 6;
            (*((void (**)(uint64_t, void, uint64_t))v490[-1].isa + 7))(v246, 0, 1);
            uint64_t v249 = v501;
            BOOL v250 = sub_1003E08B8((uint64_t)v488, v246, (uint64_t)v234);
            uint64_t v501 = v249;
            if (v249)
            {
              swift_errorRelease();
              (*(void (**)(uint64_t, uint64_t))(v456 + 8))(v246, v457);
              (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v460, v462);
LABEL_105:
              double v251 = v247;
LABEL_106:
              v199((uint8_t *)v251, v496);
              return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
            }
            BOOL v315 = v250;
            uint64_t v493 = v248;
            (*(void (**)(uint64_t, uint64_t))(v456 + 8))(v246, v457);
            if (v315)
            {
              uint64_t v316 = v476;
              uint64_t v317 = v474;
              uint64_t v502 = v476;
              uint64_t v503 = v474;
              unint64_t v318 = v477;
              uint64_t v319 = v475;
              uint64_t v504 = v477;
              uint64_t v505 = v475;
              type metadata accessor for ConcreteJobResult();
              os_log_t isa = (os_log_t)sub_100591720();
              uint64_t v502 = v316;
              uint64_t v503 = v317;
              uint64_t v504 = v318;
              uint64_t v505 = v319;
              uint64_t v320 = type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v321 = swift_getTupleTypeMetadata2();
              uint64_t v322 = (uint64_t)v438;
              uint64_t v323 = &v438[*(int *)(v321 + 48)];
              uint64_t v247 = v483;
              v493((uint8_t *)v438, (uint8_t *)v483, v496);
              swift_storeEnumTagMultiPayload();
              char *v323 = 0;
              swift_storeEnumTagMultiPayload();
              uint64_t v324 = v439;
              swift_storeEnumTagMultiPayload();
              unint64_t v491 = (uint8_t *)v320;
              os_log_t v325 = isa;
              sub_100591758((uint64_t)isa, v322);
              uint64_t v326 = *(NSObject **)(v441 + 8);
              v441 += 8;
              uint64_t v490 = v326;
              ((void (*)(uint64_t, uint64_t))v326)(v322, v324);
              uint64_t v327 = v463;
              uint64_t v328 = (uint64_t)v434;
              uint64_t v329 = v460;
              uint64_t v330 = v462;
              (*(void (**)(char *, uint64_t, uint64_t))(v463 + 16))(v434, v460, v462);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v327 + 56))(v328, 0, 1, v330);
              unint64_t v331 = (uint64_t *)(v329 + *(int *)(v330 + 64));
              uint64_t v332 = v501;
              sub_1003E1168((uint64_t)v247, v328, *v331, v331[1], 0x10000, (uint64_t)v500, (uint64_t)v325);
              uint64_t v501 = v332;
              if (v332)
              {
                swift_release();
                swift_errorRelease();
                (*(void (**)(uint64_t, uint64_t))(v455 + 8))(v328, v454);
                (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v329, v330);
                goto LABEL_105;
              }
              uint64_t v358 = (uint64_t)v325;
              (*(void (**)(uint64_t, uint64_t))(v455 + 8))(v328, v454);
              if ((*(unsigned char *)(v329 + *((int *)v492 + 15)) & 1) == 0)
              {
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v359 = swift_getTupleTypeMetadata2();
                uint64_t v360 = (uint64_t)v438;
                uint64_t v361 = &v438[*(int *)(v359 + 48)];
                v493((uint8_t *)v438, (uint8_t *)v483, v496);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)uint64_t v361 = 3;
                *(_OWORD *)(v361 + 8) = *(_OWORD *)v331;
                swift_storeEnumTagMultiPayload();
                uint64_t v362 = v439;
                swift_storeEnumTagMultiPayload();
                sub_100591758(v358, v360);
                ((void (*)(uint64_t, uint64_t))v490)(v360, v362);
                uint64_t v502 = v476;
                uint64_t v503 = v474;
                uint64_t v504 = v477;
                uint64_t v505 = v475;
                type metadata accessor for Materialization.MaterializeItem();
                uint64_t v363 = sub_1008BCD00((uint64_t)v483, *v331, v331[1], 1);
                sub_1004D4360(v358, v363);
                swift_release();
              }
              uint64_t v502 = v476;
              uint64_t v503 = v474;
              uint64_t v504 = v477;
              uint64_t v505 = v475;
              type metadata accessor for Ingestion.FetchChildrenMetadata();
              uint64_t v364 = sub_1008AA760((uint64_t)v483, *v331, v331[1], 0x400000);
              sub_1004D4360(v358, v364);
              swift_release();
              uint64_t v365 = sub_10063ADA8();
              uint64_t v366 = v501;
              sub_10059C6F4(v358, v365);
              uint64_t v501 = v366;
              if (v366)
              {
                swift_release();
LABEL_167:
                swift_errorRelease();
                (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v460, v462);
                double v251 = v483;
                goto LABEL_106;
              }
              swift_release();
            }
            else if ((*(unsigned char *)(v460 + *((int *)v492 + 15)) & 1) == 0)
            {
              id v344 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              v493(v433, (uint8_t *)v483, v496);
              long long v345 = sub_10096B470();
              os_log_type_t v346 = sub_10096C5B0();
              if (os_log_type_enabled(v345, v346))
              {
                uint64_t v347 = (uint8_t *)swift_slowAlloc();
                uint64_t v495 = (ValueMetadata *)swift_slowAlloc();
                uint64_t v502 = (uint64_t)v495;
                *(_DWORD *)uint64_t v347 = 136446210;
                unint64_t v491 = v347 + 4;
                uint64_t v492 = v347;
                os_log_t v348 = v480;
                os_log_t v349 = v433;
                id v350 = v496;
                v493(v480, v433, v496);
                v199((uint8_t *)v349, v350);
                uint64_t v351 = sub_10096D220();
                unint64_t v353 = v352;
                v199((uint8_t *)v348, v350);
                uint64_t v506 = sub_100719D44(v351, v353, &v502);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v345, v346, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v492, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
                v199((uint8_t *)v433, v496);
              }

              (*(void (**)(char *, uint64_t))(v445 + 8))(v435, v444);
              uint64_t v367 = v501;
              sub_1003F5E20(v483, v460, (uint64_t)v500);
              uint64_t v501 = v367;
              if (v367) {
                goto LABEL_167;
              }
            }
            swift_errorRelease();
            (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v460, v462);
          }
          else
          {
            swift_errorRelease();
            (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v243, v238);
          }
        }
        v199((uint8_t *)v483, v496);
        uint64_t v113 = (uint64_t)v497;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
      case 12:
        int v196 = 0;
        int v197 = 1;
        goto LABEL_128;
      case 23:
        goto LABEL_129;
      default:
LABEL_128:
        int v198 = v196;
        int v196 = 0;
LABEL_129:
        uint64_t v506 = (uint64_t)v488;
        swift_errorRetain();
        if (!swift_dynamicCast()) {
          goto LABEL_132;
        }
        uint64_t v289 = v502;
        char v290 = (char)v504;
        if (v504 <= 0xFBu)
        {
          uint64_t v312 = v503;
          swift_errorRelease();
          sub_10017DC9C(v289, v312, v290);
          unint64_t v313 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v314 = v496;
          v313(v489, v496);
          goto LABEL_144;
        }
        sub_10017DC9C(v502, v503, (char)v504);
LABEL_132:
        uint64_t v291 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v292 = (uint64_t)v448;
        id v293 = v496;
        v195((uint8_t *)v448, (char *)v489, v496);
        swift_storeEnumTagMultiPayload();
        *(unsigned char *)(v292 + v291) = v156;
        (*((void (**)(uint64_t, void, uint64_t))v490[-1].isa + 7))(v292, 0, 1);
        uint64_t v294 = v501;
        BOOL v295 = sub_1003E08B8((uint64_t)v488, v292, (uint64_t)v500);
        uint64_t v501 = v294;
        if (v294)
        {
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v456 + 8))(v292, v457);
          uint64_t v296 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          v296(v489, v293);
          v296((uint8_t *)v421, v293);
          return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
        }
        BOOL v297 = v295;
        (*(void (**)(uint64_t, uint64_t))(v456 + 8))(v292, v457);
        if (v297)
        {
          if (v196)
          {
            uint64_t v298 = v501;
            sub_1000DEDD8((uint64_t)v489, v436);
            uint64_t v501 = v298;
            if (v298)
            {
LABEL_172:
              unint64_t v370 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
              id v371 = v496;
              v370(v489, v496);
              swift_errorRelease();
              goto LABEL_173;
            }
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v463 + 48))(v436, 1, v462) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v463 + 32))(v431, v436, v462);
              uint64_t v373 = v476;
              uint64_t v374 = v474;
              uint64_t v502 = v476;
              uint64_t v503 = v474;
              int v375 = v477;
              unint64_t v376 = v475;
              uint64_t v504 = v477;
              uint64_t v505 = v475;
              type metadata accessor for ConcreteJobResult();
              os_log_t isa = (os_log_t)sub_100591720();
              uint64_t v502 = v373;
              uint64_t v503 = v374;
              uint64_t v504 = v375;
              uint64_t v505 = v376;
              type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v377 = swift_getTupleTypeMetadata2();
              uint64_t v378 = (uint64_t)v438;
              unint64_t v379 = &v438[*(int *)(v377 + 48)];
              v195((uint8_t *)v438, (char *)v489, v496);
              swift_storeEnumTagMultiPayload();
              uint64_t v380 = (uint64_t *)&v431[*(int *)(v462 + 64)];
              *(void *)unint64_t v379 = 0x80000000000;
              *(_OWORD *)(v379 + 8) = *(_OWORD *)v380;
              swift_storeEnumTagMultiPayload();
              uint64_t v381 = v439;
              swift_storeEnumTagMultiPayload();
              os_log_t v382 = isa;
              sub_100591758((uint64_t)isa, v378);
              (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v378, v381);
              uint64_t v383 = v463;
              uint64_t v384 = (uint64_t)v429;
              uint64_t v385 = v462;
              (*(void (**)(char *, char *, uint64_t))(v463 + 16))(v429, v431, v462);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v383 + 56))(v384, 0, 1, v385);
              uint64_t v386 = v501;
              sub_1003E1168((uint64_t)v489, v384, *v380, v380[1], 0x10000, (uint64_t)v500, (uint64_t)v382);
              if (v386)
              {
                swift_release();
                swift_errorRelease();
                (*(void (**)(char *, uint64_t))(v455 + 8))(v429, v454);
                (*(void (**)(char *, uint64_t))(v463 + 8))(v431, v462);
                unint64_t v387 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
                id v388 = v496;
                v387(v489, v496);
                v387((uint8_t *)v421, v388);
                return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
              }
              (*(void (**)(char *, uint64_t))(v455 + 8))(v429, v454);
              uint64_t v391 = sub_10063ADA8();
              sub_10059C6F4((uint64_t)v382, v391);
              uint64_t v501 = 0;
              (*(void (**)(char *, uint64_t))(v463 + 8))(v431, v462);
              swift_release();
              if (!v197) {
                goto LABEL_171;
              }
              goto LABEL_141;
            }
            (*(void (**)(uint64_t, uint64_t))(v455 + 8))(v436, v454);
          }
          if (!v197)
          {
LABEL_171:
            uint64_t v372 = v501;
            uint64_t v504 = v500;
            uint64_t v505 = (ValueMetadata *)v489;
            sub_1003F3280(v500, 0, (uint64_t (*)(void))sub_1003FB5CC, (char *)&v502);
            uint64_t v501 = v372;
            if (v372) {
              goto LABEL_172;
            }
            unint64_t v313 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
            id v314 = v496;
            v313(v489, v496);
            swift_errorRelease();
LABEL_144:
            v313((uint8_t *)v421, v314);
            uint64_t v113 = (uint64_t)v497;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
          }
LABEL_141:
          uint64_t v299 = v476;
          uint64_t v300 = v474;
          uint64_t v502 = v476;
          uint64_t v503 = v474;
          uint64_t v301 = v477;
          uint64_t v302 = v475;
          uint64_t v504 = v477;
          uint64_t v505 = v475;
          type metadata accessor for ConcreteJobResult();
          uint64_t v303 = sub_100591720();
          uint64_t v502 = v299;
          uint64_t v503 = v300;
          uint64_t v504 = v301;
          uint64_t v505 = v302;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v304 = swift_getTupleTypeMetadata2();
          uint64_t v305 = (uint64_t)v438;
          unint64_t v306 = &v438[*(int *)(v304 + 48)];
          v195((uint8_t *)v438, (char *)v489, v496);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)unint64_t v306 = 262;
          swift_storeEnumTagMultiPayload();
          uint64_t v307 = v439;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v303, v305);
          (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v305, v307);
          uint64_t v308 = sub_10063ADA8();
          uint64_t v309 = v501;
          sub_10059C6F4(v303, v308);
          uint64_t v501 = v309;
          if (v309)
          {
            unint64_t v310 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
            id v311 = v496;
            v310(v489, v496);
            swift_release();
            swift_errorRelease();
            v310((uint8_t *)v421, v311);
            return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
          }
          swift_release();
          goto LABEL_171;
        }
        uint64_t v339 = v501;
        os_log_t v340 = v440;
        os_log_t v341 = v489;
        (*(void (**)(uint8_t *))(*(void *)v500[2].Kind + 280))(v489);
        uint64_t v501 = v339;
        if (v339)
        {
          os_log_t v342 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v343 = v496;
          v342(v341, v496);
          swift_errorRelease();
          v342((uint8_t *)v421, v343);
          return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
        }
        if ((*((unsigned int (**)(char *, uint64_t, id))v492 + 6))(v340, 1, v496) == 1)
        {
          uint64_t v354 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          v354(v489, v496);
          swift_errorRelease();
          uint64_t v355 = *(void (**)(char *, void))(v453 + 8);
          uint64_t v356 = v440;
          os_log_t v357 = (id *)&v491;
LABEL_159:
          v355(v356, *(v357 - 32));
LABEL_160:
          v354((uint8_t *)v421, v496);
          uint64_t v113 = (uint64_t)v497;
          return (*(uint64_t (**)(uint64_t, uint64_t))(v498 + 8))(v113, v499);
        }
        unint64_t v368 = v432;
        (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v492 + 4))(v432, v440, v496);
        uint64_t v369 = v501;
        sub_1000DEDD8((uint64_t)v368, v430);
        uint64_t v501 = v369;
        if (v369)
        {
          swift_errorRelease();
          unint64_t v370 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v371 = v496;
          v370((uint8_t *)v432, v496);
          v370(v489, v371);
LABEL_173:
          v370((uint8_t *)v421, v371);
          return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
        }
        uint64_t v495 = *(ValueMetadata **)(v463 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v495)(v430, 1, v462) == 1)
        {
          swift_errorRelease();
          uint64_t v354 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v389 = v496;
          v354((uint8_t *)v432, v496);
          v354(v489, v389);
          uint64_t v355 = *(void (**)(char *, void))(v455 + 8);
          uint64_t v390 = &v462;
LABEL_181:
          uint64_t v356 = (char *)*(v390 - 32);
          os_log_t v357 = (id *)&v486;
          goto LABEL_159;
        }
        unint64_t v392 = *(uint8_t **)(v463 + 32);
        uint64_t v393 = v428;
        uint64_t v493 = (void (*)(void, void, void))(v463 + 32);
        unint64_t v491 = v392;
        ((void (*)(char *, uint64_t, uint64_t))v392)((char *)v428, v430, v462);
        if (*(unsigned char *)(v393 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 56)) != 3)
        {
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v463 + 8))((char *)v428, v462);
          uint64_t v354 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v407 = v496;
          v354((uint8_t *)v432, v496);
          v354(v489, v407);
          goto LABEL_160;
        }
        id v394 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        id v395 = v496;
        v195((uint8_t *)v425, (char *)v489, v496);
        v195((uint8_t *)v426, (char *)v432, v395);
        unint64_t v396 = sub_10096B470();
        os_log_type_t v397 = sub_10096C5B0();
        uint64_t v490 = v396;
        LODWORD(v487) = v397;
        if (os_log_type_enabled(v396, v397))
        {
          uint64_t v398 = swift_slowAlloc();
          long long v486 = (void *)swift_slowAlloc();
          uint64_t v502 = (uint64_t)v486;
          *(_DWORD *)uint64_t v398 = 136446466;
          os_log_t isa = (os_log_t)isa[1].isa;
          uint64_t v399 = v425;
          id v400 = v496;
          uint64_t v401 = sub_10096D220();
          uint64_t v506 = sub_100719D44(v401, v402, &v502);
          long long v485 = (char *)&v507;
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          uint64_t v354 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          v354((uint8_t *)v399, v400);
          *(_WORD *)(v398 + 12) = 2082;
          long long v484 = (char *)(v398 + 14);
          unint64_t v403 = v426;
          uint64_t v404 = sub_10096D220();
          uint64_t v506 = sub_100719D44(v404, v405, &v502);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          v354((uint8_t *)v403, v400);
          unint64_t v406 = v490;
          _os_log_impl((void *)&_mh_execute_header, v490, (os_log_type_t)v487, "👽  import of %{public}s within %{public}s is throttled, unfaulting folder to allow user access", (uint8_t *)v398, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v354 = (void (*)(uint8_t *, id))*((void *)v492 + 1);
          id v408 = v496;
          v354((uint8_t *)v425, v496);
          v354((uint8_t *)v426, v408);
        }
        (*(void (**)(char *, uint64_t))(v445 + 8))(v427, v444);
        uint64_t v409 = v501;
        sub_1003F5E20(v432, v428, (uint64_t)v500);
        uint64_t v501 = v409;
        if (v409)
        {
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v463 + 8))((char *)v428, v462);
LABEL_192:
          id v410 = v496;
          v354((uint8_t *)v432, v496);
          v354(v489, v410);
          v354((uint8_t *)v421, v410);
          return (*(uint64_t (**)(char *, uint64_t))(v498 + 8))(v497, v499);
        }
        if (v198)
        {
          uint64_t v411 = v501;
          sub_1000DEDD8((uint64_t)v489, v424);
          uint64_t v501 = v411;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v495)(v424, 1, v462) == 1)
          {
            swift_errorRelease();
            (*(void (**)(char *, uint64_t))(v463 + 8))((char *)v428, v462);
            id v412 = v496;
            v354((uint8_t *)v432, v496);
            v354(v489, v412);
            uint64_t v355 = *(void (**)(char *, void))(v455 + 8);
            uint64_t v390 = &v456;
            goto LABEL_181;
          }
          uint64_t v414 = (uint64_t)v423;
          ((void (*)(char *, uint64_t, uint64_t))v491)(v423, v424, v462);
          uint64_t v415 = v501;
          sub_1003F5E20((uint64_t (*)(char *, uint64_t))v489, v414, (uint64_t)v500);
          uint64_t v501 = v415;
          if (v415)
          {
            swift_errorRelease();
            unint64_t v416 = *(void (**)(char *, uint64_t))(v463 + 8);
            uint64_t v417 = v462;
            v416(v423, v462);
            v416((char *)v428, v417);
            goto LABEL_192;
          }
          swift_errorRelease();
          uint64_t v418 = *(void (**)(char *, uint64_t))(v463 + 8);
          uint64_t v419 = v462;
          v418(v423, v462);
          v418((char *)v428, v419);
        }
        else
        {
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v463 + 8))((char *)v428, v462);
        }
        id v413 = v496;
        v354((uint8_t *)v432, v496);
        v354(v489, v413);
        goto LABEL_160;
    }
  }
  return result;
}

uint64_t sub_1003FABFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SnapshotItem();
  return sub_1000DEDD8(a1 + *(int *)(v4 + 36), a2);
}

uint64_t sub_1003FAC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 584);
  uint64_t v4 = *(void *)(*(void *)a1 + 576);
  uint64_t v5 = *(void *)(*(void *)a1 + 600);
  uint64_t v6 = *(void *)(*(void *)a1 + 592);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_10096C890();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = v27;
  uint64_t result = sub_1000DF200(v22 + *(int *)(v11 + 36), (uint64_t)v10);
  if (!v12)
  {
    uint64_t v22 = v5;
    uint64_t v27 = v6;
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    uint64_t v16 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
      uint64_t v23 = v4;
      uint64_t v24 = v3;
      uint64_t v25 = v27;
      uint64_t v26 = v22;
      uint64_t v17 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
    }
    else
    {
      sub_100827044(v7, v15);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v7);
      uint64_t v23 = v4;
      uint64_t v24 = v3;
      uint64_t v25 = v27;
      uint64_t v26 = v22;
      uint64_t v18 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 0, 1, v18);
    }
  }
  return result;
}

uint64_t sub_1003FAF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 584);
  uint64_t v4 = *(void *)(*(void *)a1 + 576);
  uint64_t v5 = *(void *)(*(void *)a1 + 600);
  uint64_t v6 = *(void *)(*(void *)a1 + 592);
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v25 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_10096C890();
  uint64_t v19 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = v26;
  uint64_t result = sub_1000DF200(v21, (uint64_t)&v18 - v9);
  if (!v11)
  {
    uint64_t v21 = v8;
    uint64_t v26 = v6;
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v21);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v16 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
    }
    else
    {
      sub_100827044(v7, v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v7);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v17 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
    }
  }
  return result;
}

unint64_t _s9libfssync15EvictionUrgencyO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t type metadata accessor for DiskImport.MonitoredFolders.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DiskImport.ImportingFolder()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1003FB210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v38 - v11;
  uint64_t v39 = v12;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  if (sub_10096C160())
  {
    sub_10096CBB0();
    uint64_t v15 = (unsigned char *)sub_10096CBA0();
  }
  else
  {
    uint64_t v15 = &_swiftEmptySetSingleton;
  }
  Swift::Int v43 = sub_10096C1B0();
  if (!v43) {
    return (uint64_t)v15;
  }
  uint64_t v16 = 0;
  uint64_t v48 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v49 = v15 + 56;
  uint64_t v45 = v6 + 32;
  uint64_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  uint64_t v42 = v14;
  while (1)
  {
    BOOL v17 = sub_10096C130();
    sub_10096C0E0();
    if (v17)
    {
      uint64_t v18 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_10096CC20();
      if (v39 != 8) {
        goto LABEL_23;
      }
      uint64_t v51 = result;
      uint64_t v18 = *v48;
      (*v48)(v14, &v51, a2);
      swift_unknownObjectRelease();
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return (uint64_t)v15;
      }
    }
    uint64_t v46 = v20;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v44(v50, v14, a2);
    uint64_t v21 = sub_10096BAC0();
    uint64_t v22 = v15;
    uint64_t v23 = -1 << v15[32];
    unint64_t v24 = v21 & ~v23;
    unint64_t v25 = v24 >> 6;
    uint64_t v26 = *(void *)&v49[8 * (v24 >> 6)];
    uint64_t v27 = 1 << v24;
    uint64_t v28 = *(void *)(v6 + 72);
    if (((1 << v24) & v26) != 0)
    {
      uint64_t v29 = ~v23;
      do
      {
        v18(v9, (uint64_t *)(v22[6] + v28 * v24), a2);
        uint64_t v30 = a3;
        char v31 = sub_10096BBE0();
        uint64_t v32 = *v47;
        (*v47)(v9, a2);
        if (v31)
        {
          v32(v50, a2);
          a3 = v30;
          uint64_t v6 = v40;
          uint64_t v5 = v41;
          uint64_t v15 = v22;
          goto LABEL_7;
        }
        unint64_t v24 = (v24 + 1) & v29;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = *(void *)&v49[8 * (v24 >> 6)];
        uint64_t v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      uint64_t v6 = v40;
      uint64_t v5 = v41;
    }
    uint64_t v33 = v50;
    *(void *)&v49[8 * v25] = v27 | v26;
    unint64_t v34 = v22[6] + v28 * v24;
    uint64_t v15 = v22;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v34, v33, a2);
    uint64_t v36 = v22[2];
    BOOL v19 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v19) {
      break;
    }
    _OWORD v22[2] = v37;
LABEL_7:
    uint64_t v14 = v42;
    uint64_t v16 = v46;
    if (v46 == v43) {
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1003FB5CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F5B28(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB5E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000DEDD8(*(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB610@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FAF34(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB62C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FAC78(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB648@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FABFC(*(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB664(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1003EF1F4(a1, a2, a3, *(uint64_t **)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

uint64_t sub_1003FB684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003FB6CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003FB704()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FB73C()
{
  return sub_1003ED240();
}

uint64_t sub_1003FB74C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FB79C(uint64_t a1)
{
  return sub_1003E4B3C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1003FB7AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FB7E4()
{
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FB834()
{
  return sub_1003E4C84(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(void, void, void, uint64_t))(v0 + 40));
}

uint64_t sub_1003FB858()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t sub_1003FB8A8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003E27DC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003FB8B0(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v28 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  v25[1] = a4;
  v13[2] = a4;
  v13[3] = a5;
  void v13[4] = a6;
  sub_10002B7CC(&qword_100ADBF40);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = _swiftEmptyArrayStorage;
  *(void *)(inited + 24) = _swiftEmptyArrayStorage;
  *(void *)(inited + 32) = _swiftEmptyArrayStorage;
  *(void *)(inited + 40) = _swiftEmptyArrayStorage;
  *(void *)(inited + 48) = 0;
  v25[0] = a5;
  swift_retain();
  id v15 = a6;
  swift_beginAccess();
  uint64_t v16 = *(void **)(inited + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_1006A3268(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_1006A3268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  void v16[2] = v18 + 1;
  BOOL v19 = &v16[15 * v18];
  v19[4] = v27;
  v19[5] = a2;
  v19[6] = 5;
  *(_OWORD *)(v19 + 7) = 0u;
  *(_OWORD *)(v19 + 9) = 0u;
  *(_OWORD *)(v19 + 11) = 0u;
  *(_OWORD *)(v19 + 13) = 0u;
  *(_OWORD *)(v19 + 15) = 0u;
  v19[17] = 0;
  *((_DWORD *)v19 + 36) = 151715840;
  *(void *)(inited + 32) = v16;
  swift_endAccess();
  sub_10096B0D0();
  sub_10096B080();
  double v21 = v20;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v28);
  double v23 = v21 * 1000000000.0;
  if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v23 < 9.22337204e18)
  {
    uint64_t v24 = v26;
    sub_1004AC3EC((void *)inited, (uint64_t)v23);
    (*(void (**)(uint64_t (*)(uint64_t), void *))(*(void *)v24 + 2368))(sub_1003FBC58, v13);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003FBC18()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003FBC58(uint64_t a1)
{
  return sub_1002D3D20(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

unsigned char *sub_1003FBC6C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FBD38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskImportStatus()
{
  return &type metadata for DiskImportStatus;
}

uint64_t sub_1003FBD70()
{
  return sub_100025500(&qword_100AD4D00, &qword_100AD4D08);
}

unint64_t sub_1003FBDB0()
{
  unint64_t result = qword_100AD4D10;
  if (!qword_100AD4D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4D10);
  }
  return result;
}

uint64_t sub_1003FBE04()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FBE20()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FBE3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FBE58()
{
  return 6;
}

uint64_t type metadata accessor for DiskImport.ImportingFolder.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1003FBE78()
{
  unint64_t result = qword_100ADAE90;
  if (!qword_100ADAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADAE90);
  }
  return result;
}

unint64_t sub_1003FBECC()
{
  unint64_t result = qword_100AD4D20[0];
  if (!qword_100AD4D20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD4D20);
  }
  return result;
}

unsigned char *sub_1003FBF20(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FBFECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1003FC014()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FC030()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FC04C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003FC068@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FB5E8(a1);
}

uint64_t sub_1003FC080(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003FC0AC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_10096C400();
  if (!v18) {
    return sub_10096C110();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_10096CD20();
  uint64_t v32 = sub_10096CD30();
  sub_10096CCD0(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_10096C3F0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      double v21 = (void (*)(char *, void))sub_10096C4A0();
      uint64_t v22 = v12;
      double v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_10096CD10();
      sub_10096C420();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1003FC4AC(uint64_t a1)
{
  return sub_1003FC4DC(a1, (uint64_t (*)(void))sub_1006A2318);
}

uint64_t sub_1003FC4C4(uint64_t a1)
{
  return sub_1003FC4DC(a1, (uint64_t (*)(void))sub_1006A2324);
}

uint64_t sub_1003FC4DC(uint64_t a1, uint64_t (*a2)(void))
{
  size_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v5 + v3) <= *(void *)(v4 + 24) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v4 = a2();
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = (void *)(v4 + v9 + 32);
  if (a1 + 32 < (unint64_t)v10 + v8 && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_21;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FC638(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  size_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  size_t v3 = sub_100072CCC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FC78C(unint64_t a1)
{
  return sub_1003FD0D0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057CF10);
}

uint64_t sub_1003FC7A4(uint64_t a1, uint64_t (*a2)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(void *)(v4 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v4 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v9 = (void *)(v4 + v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + v3 && (unint64_t)v9 < a1 + 32 + v3) {
    goto LABEL_21;
  }
  memcpy(v9, (const void *)(a1 + 32), v3);
  if (!v3)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v11, v3);
  uint64_t v13 = v11 + v3;
  if (!v12)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FC8FC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int64_t v3 = sub_1006A3A44(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_10002B7CC((uint64_t *)&unk_100AD70F0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FCA74(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10096CE70();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10096CC40();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10057D144(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_10096C0C0();
}

uint64_t sub_1003FCC40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1006A3DBC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2) {
    goto LABEL_24;
  }
  sub_10002B7CC((uint64_t *)&unk_100AD7490);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FCDAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1006A4044(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_10002B7CC((uint64_t *)&unk_100AD0DC0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FCF10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1006A419C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_10002B7CC(&qword_100AD65C0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10096CEB0();
  __break(1u);
  return result;
}

uint64_t sub_1003FD0B8(unint64_t a1)
{
  return sub_1003FD0D0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057D36C);
}

uint64_t sub_1003FD0D0(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10096CE70();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10096CC40();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_10096C0C0();
}

unint64_t sub_1003FD2A4(uint64_t a1)
{
  unint64_t v2 = (unint64_t)[v1 longAtIndex:a1];
  if (v2 <= 4 && ((0x17u >> v2) & 1) != 0) {
    return 0x300020100uLL >> (8 * v2);
  }
  sub_10017D094();
  swift_allocError();
  *unint64_t v3 = 0;
  return swift_willThrow();
}

id sub_1003FD334(uint64_t a1)
{
  return sub_1003FD3B8(a1);
}

id sub_1003FD34C(uint64_t a1)
{
  id result = [v1 longAtIndex:a1];
  if ((unint64_t)result > 4)
  {
    sub_10017D094();
    swift_allocError();
    *unint64_t v3 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

id sub_1003FD3B8(uint64_t a1)
{
  id result = [v1 longAtIndex:a1];
  if ((unint64_t)result > 5)
  {
    sub_10017D094();
    swift_allocError();
    *unint64_t v3 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

_UNKNOWN **sub_1003FD424()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0x6465727574706143, 0xEF746E65746E6F43), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100AD4DC8);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A820;
    uint64_t v8 = sub_10002B7CC(&qword_100AD4DC8);
    *(void *)&long long v7 = &off_100A6A820;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0x6465727574706143, 0xEF746E65746E6F43);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FD62C()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0xD000000000000012, 0x80000001009A0D20), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC((uint64_t *)&unk_100AD6940);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A848;
    uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100AD6940);
    *(void *)&long long v7 = &off_100A6A848;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0xD000000000000012, 0x80000001009A0D20);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FD824()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0xD000000000000012, 0x80000001009A0D90), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100AD4EF0);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A7A8;
    uint64_t v8 = sub_10002B7CC(&qword_100AD4EF0);
    *(void *)&long long v7 = &off_100A6A7A8;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0xD000000000000012, 0x80000001009A0D90);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FDA1C()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0x6174654D6D657449, 0xEC00000061746164), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(qword_100AD4F80);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A4D8;
    uint64_t v8 = sub_10002B7CC(qword_100AD4F80);
    *(void *)&long long v7 = &off_100A6A4D8;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0x6174654D6D657449, 0xEC00000061746164);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FDC1C()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0x746F726854626F4ALL, 0xEB00000000656C74), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100ACE138);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A4B0;
    uint64_t v8 = sub_10002B7CC(&qword_100ACE138);
    *(void *)&long long v7 = &off_100A6A4B0;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0x746F726854626F4ALL, 0xEB00000000656C74);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FDE1C()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0xD000000000000019, 0x80000001009A0E90), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100AD4F70);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &off_100A6A6D8;
    uint64_t v8 = sub_10002B7CC(&qword_100AD4F70);
    *(void *)&long long v7 = &off_100A6A6D8;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0xD000000000000019, 0x80000001009A0E90);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_1003FE014()
{
  return sub_1003FE074(0xD000000000000015, 0x80000001009A0EB0, &qword_100AD4F78, (uint64_t (*)(uint64_t))sub_100407460);
}

uint64_t sub_1003FE04C()
{
  return sub_1003FE9BC(&qword_100AD4F00, &qword_100AD4EE8, (uint64_t (*)(uint64_t))sub_1004053A8);
}

uint64_t sub_1003FE074(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v9 = sub_10000DDD0(a1, a2), (v10 & 1) != 0))
  {
    sub_1001FAC78(v8[7] + 32 * v9, (uint64_t)v14);
    sub_100042A48(v14, &v16);
    swift_endAccess();
    sub_100042A48(&v16, v14);
    sub_10002B7CC(a3);
    swift_dynamicCast();
    uint64_t v11 = v15;
  }
  else
  {
    uint64_t v12 = swift_endAccess();
    uint64_t v11 = a4(v12);
    uint64_t v17 = sub_10002B7CC(a3);
    *(void *)&long long v16 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10036004C((uint64_t)&v16, a1, a2);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v11;
}

uint64_t sub_1003FE270()
{
  return sub_1003FE9BC(&qword_100AD4F50, &qword_100AD4F58, (uint64_t (*)(uint64_t))sub_100407CC0);
}

uint64_t sub_1003FE298()
{
  return sub_1003FE328(&qword_100AD4F48);
}

uint64_t sub_1003FE2A4()
{
  return sub_1003FE328((uint64_t *)&unk_100AD6C50);
}

uint64_t sub_1003FE2B0()
{
  return sub_1003FE328(&qword_100AD4F40);
}

uint64_t sub_1003FE2BC()
{
  return sub_1003FE328((uint64_t *)&unk_100AD6C40);
}

uint64_t sub_1003FE2C8()
{
  return sub_1003FE328(&qword_100AD4F38);
}

uint64_t sub_1003FE2D4()
{
  return sub_1003FE328((uint64_t *)&unk_100AD68F0);
}

uint64_t sub_1003FE2E0()
{
  return sub_1003FE328(&qword_100AD6AD0);
}

uint64_t sub_1003FE2EC()
{
  return sub_1003FE328(&qword_100AD4F30);
}

uint64_t sub_1003FE2F8()
{
  return sub_1003FE328((uint64_t *)&unk_100AD6B20);
}

uint64_t sub_1003FE304()
{
  return sub_1003FE328(&qword_100AD4F28);
}

uint64_t sub_1003FE310()
{
  return sub_1003FE328(&qword_100AD68D0);
}

uint64_t sub_1003FE31C()
{
  return sub_1003FE328(&qword_100AD4F18);
}

uint64_t sub_1003FE328(uint64_t *a1)
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  sub_10002B7CC(a1);
  uint64_t v2 = sub_10096D5D0();
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v5 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v6 = sub_10000DDD0(v2, v4), (v7 & 1) != 0))
  {
    sub_1001FAC78(v5[7] + 32 * v6, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v14 + 1))
  {
    sub_100042A48(&v13, &v16);
    swift_endAccess();
    sub_100042A48(&v16, &v13);
    sub_10002B7CC(&qword_100AD4F20);
    swift_dynamicCast();
    uint64_t v8 = v15;
  }
  else
  {
    sub_10017D1A4((uint64_t)&v13);
    swift_endAccess();
    if (qword_100ACC188 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_100B0B500;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10096D5D0();
    uint64_t v11 = v10;
    uint64_t v17 = sub_10002B7CC(&qword_100AD4F20);
    *(void *)&long long v16 = v8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10036004C((uint64_t)&v16, v9, v11);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v8;
}

_UNKNOWN **sub_1003FE5A4()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0xD000000000000036, 0x80000001009A0E10), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100AD4F60);
    swift_dynamicCast();
    uint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = &off_100A6B890;
    uint64_t v8 = sub_10002B7CC(&qword_100AD4F60);
    *(void *)&long long v7 = &off_100A6B890;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0xD000000000000036, 0x80000001009A0E10);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

_UNKNOWN **sub_1003FE79C()
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v1 = sub_10000DDD0(0xD000000000000036, 0x80000001009A0E50), (v2 & 1) != 0))
  {
    sub_1001FAC78(v0[7] + 32 * v1, (uint64_t)v5);
    sub_100042A48(v5, &v7);
    swift_endAccess();
    sub_100042A48(&v7, v5);
    sub_10002B7CC(&qword_100AD4F68);
    swift_dynamicCast();
    uint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = &off_100A6B8B8;
    uint64_t v8 = sub_10002B7CC(&qword_100AD4F68);
    *(void *)&long long v7 = &off_100A6B8B8;
    swift_beginAccess();
    sub_10036004C((uint64_t)&v7, 0xD000000000000036, 0x80000001009A0E50);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_1003FE994()
{
  return sub_1003FE9BC((uint64_t *)&unk_100AD0CC0, &qword_100AD4F78, (uint64_t (*)(uint64_t))sub_10040765C);
}

uint64_t sub_1003FE9BC(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (qword_100ACC130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_100ACC140 != -1) {
    swift_once();
  }
  sub_10002B7CC(a1);
  uint64_t v6 = sub_10096D5D0();
  uint64_t v8 = v7;
  swift_beginAccess();
  uint64_t v9 = off_100ADA540;
  if (*((void *)off_100ADA540 + 2) && (unint64_t v10 = sub_10000DDD0(v6, v8), (v11 & 1) != 0))
  {
    sub_1001FAC78(v9[7] + 32 * v10, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v19 + 1))
  {
    sub_100042A48(&v18, &v21);
    swift_endAccess();
    sub_100042A48(&v21, &v18);
    sub_10002B7CC(a2);
    swift_dynamicCast();
    uint64_t v12 = v20;
  }
  else
  {
    sub_10017D1A4((uint64_t)&v18);
    uint64_t v13 = swift_endAccess();
    uint64_t v12 = a3(v13);
    uint64_t v14 = sub_10096D5D0();
    uint64_t v16 = v15;
    uint64_t v22 = sub_10002B7CC(a2);
    *(void *)&long long v21 = v12;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10036004C((uint64_t)&v21, v14, v16);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v12;
}

uint64_t sub_1003FEC0C(unsigned __int8 *a1, char *a2)
{
  return sub_10025BEF0(*a1, *a2);
}

Swift::Int sub_1003FEC18()
{
  return sub_10096D500();
}

uint64_t sub_1003FED10()
{
  sub_10096BD50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003FEDF0()
{
  return sub_10096D500();
}

uint64_t sub_1003FEEE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004083D0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1003FEF14(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x64695F656C6966;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC000000746E6574;
      uint64_t v3 = 0x6E6F635F74736574;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461636F6CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6874676E656CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x7367616C66;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1003FEFD0(void *a1@<X8>)
{
  *a1 = &off_100A6A610;
}

uint64_t sub_1003FEFE0()
{
  uint64_t result = 0x64695F656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F635F74736574;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x6874676E656CLL;
      break;
    case 4:
      uint64_t result = 0x7367616C66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003FF08C(char a1, id a2)
{
  switch(a1)
  {
    case 1:
      sub_10001AE98(v2 + 8, (uint64_t)v14, &qword_100AD0598);
      sub_10001AE98((uint64_t)v14, (uint64_t)&v15, &qword_100AD0598);
      if (v16 >> 60 == 15) {
        Class isa = 0;
      }
      else {
        Class isa = sub_10096AF20().super.isa;
      }
      id v10 = [a2 bindObjectParameter:isa];
      swift_unknownObjectRelease();
      goto LABEL_16;
    case 2:
      sub_10001AE98(v2 + 24, (uint64_t)v14, &qword_100AD4ED0);
      sub_10001AE98((uint64_t)v14, (uint64_t)&v15, &qword_100AD4ED0);
      if (v17) {
        uint64_t v9 = -1;
      }
      else {
        uint64_t v9 = v15;
      }
      goto LABEL_11;
    case 3:
      sub_10001AE98(v2 + 24, (uint64_t)v14, &qword_100AD4ED0);
      sub_10001AE98((uint64_t)v14, (uint64_t)&v15, &qword_100AD4ED0);
      if (v17) {
        uint64_t v9 = -1;
      }
      else {
        uint64_t v9 = v16;
      }
LABEL_11:
      id v10 = [a2 bindLongParameter:v9];
LABEL_16:
      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      uint64_t result = v13;
      break;
    case 4:
      id v11 = [a2 bindUnsignedLongParameter:*(void *)(v2 + 48)];
      uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      uint64_t result = v12;
      break;
    default:
      Class v4 = sub_10096D540().super.super.isa;
      id v5 = [a2 bindObjectParameter:v4];

      uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t result = v6;
      break;
  }
  return result;
}

void sub_1003FF2BC(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(a2)
  {
    case 1:
      if ([a1 isNullAtIndex:a3]) {
        goto LABEL_8;
      }
      id v9 = [a1 dataAtIndex:a3];
      uint64_t v10 = sub_10096AF60();
      uint64_t v12 = v11;

      *(void *)(a4 + 24) = &type metadata for Data;
      *(void *)a4 = v10;
      *(void *)(a4 + 8) = v12;
      return;
    case 2:
    case 3:
      id v7 = [a1 longLongAtIndex:a3];
      uint64_t v8 = &type metadata for Int64;
      goto LABEL_6;
    case 4:
      if ([a1 isNullAtIndex:a3])
      {
LABEL_8:
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        id v7 = [a1 unsignedIntegerAtIndex:a3];
        uint64_t v8 = &type metadata for UInt;
LABEL_6:
        *(void *)(a4 + 24) = v8;
        *(void *)a4 = v7;
      }
      return;
    default:
      id v7 = [a1 unsignedLongLongAtIndex:a3];
      uint64_t v8 = &type metadata for UInt64;
      goto LABEL_6;
  }
}

uint64_t sub_1003FF418@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v22 = 1;
  uint64_t v7 = sub_10002B7CC(&qword_100AD0598);
  uint64_t result = sub_1006FCBE4((uint64_t)&v22, v7, a1, v7, a2);
  if (!v3)
  {
    uint64_t v9 = v20;
    unint64_t v10 = v21;
    char v22 = 2;
    uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100AD6850);
    sub_1006FCBE4((uint64_t)&v22, v11, a1, v11, a2);
    if ((v21 & 1) != 0
      || (uint64_t v12 = v20, v22 = 3, sub_1006FCBE4((uint64_t)&v22, v11, a1, v11, a2), v21 == 1))
    {
      uint64_t v12 = 0;
      uint64_t v19 = 0;
      char v13 = 1;
    }
    else
    {
      char v13 = 0;
      uint64_t v19 = v20;
    }
    char v22 = 4;
    uint64_t v14 = sub_10002B7CC(&qword_100AD4EC8);
    uint64_t result = sub_1006FCBE4((uint64_t)&v22, v14, a1, v14, a2);
    uint64_t v15 = v20;
    if ((_BYTE)v21) {
      uint64_t v15 = 0;
    }
    if (v21 >> 60 == 15)
    {
      uint64_t v18 = v15;
      char v22 = 0;
      uint64_t result = sub_1006FCBE4((uint64_t)&v22, (uint64_t)&type metadata for UInt64, a1, (uint64_t)&type metadata for UInt64, a2);
      uint64_t v9 = 0;
      uint64_t v17 = v19;
      uint64_t v16 = v20;
      unint64_t v10 = 0xF000000000000000;
      uint64_t v15 = v18;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = v19;
    }
    *(void *)a3 = v16;
    *(void *)(a3 + 8) = v9;
    *(void *)(a3 + 16) = v10;
    *(void *)(a3 + 24) = v12;
    *(void *)(a3 + 32) = v17;
    *(unsigned char *)(a3 + 40) = v13;
    *(void *)(a3 + 48) = v15;
  }
  return result;
}

uint64_t sub_1003FF624(char *a1, void *a2)
{
  return sub_1003FF08C(*a1, a2);
}

void sub_1003FF674(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

double sub_1003FF690@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1003FF418(a1, a2, (uint64_t)v7);
  if (!v3)
  {
    long long v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    double result = *(double *)&v8;
    *(_OWORD *)(a3 + 32) = v8;
    *(void *)(a3 + 48) = v9;
  }
  return result;
}

unint64_t sub_1003FF6E0(uint64_t a1)
{
  unint64_t result = sub_1003FF708();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003FF708()
{
  unint64_t result = qword_100AD4DB0;
  if (!qword_100AD4DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4DB0);
  }
  return result;
}

unint64_t sub_1003FF760()
{
  unint64_t result = qword_100AD4DB8;
  if (!qword_100AD4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4DB8);
  }
  return result;
}

uint64_t sub_1003FF7B4()
{
  return sub_100025500(&qword_100AD4DC0, &qword_100AD4DC8);
}

unsigned char *_s9SQLFieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FF8BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_0()
{
  return &_s9SQLFieldsON;
}

uint64_t sub_1003FF8F4()
{
  return sub_100025500(&qword_100AD4E00, &qword_100AD4DC8);
}

unint64_t sub_1003FF934()
{
  unint64_t result = qword_100AD4E08;
  if (!qword_100AD4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E08);
  }
  return result;
}

unint64_t sub_1003FF98C()
{
  unint64_t result = qword_100AD4E10;
  if (!qword_100AD4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD4E10);
  }
  return result;
}

unint64_t sub_1003FF9E0(unsigned __int8 a1)
{
  switch(a1 >> 6)
  {
    case 1:
      unint64_t v9 = 0x696C756465686373;
      int v4 = a1 & 0x3F;
      if ((a1 & 0x3F) != 0)
      {
        if (v4 == 1) {
          v5._uint64_t countAndFlagsBits = 0xD000000000000010;
        }
        else {
          v5._uint64_t countAndFlagsBits = 0xD000000000000012;
        }
        if (v4 == 1) {
          unsigned int v6 = (void *)0x80000001009958F0;
        }
        else {
          unsigned int v6 = (void *)0x8000000100995910;
        }
      }
      else
      {
        unsigned int v6 = (void *)0xE500000000000000;
        v5._uint64_t countAndFlagsBits = 0x6574617473;
      }
      v5._object = v6;
      sub_10096BDC0(v5);
      goto LABEL_20;
    case 2:
      int v7 = a1;
      unint64_t result = 25705;
      switch(v7)
      {
        case 129:
          unint64_t result = 0x6E6F6974656C6564;
          break;
        case 130:
          unint64_t result = 0x5F64657461647075;
          break;
        case 131:
          unint64_t result = 0xD000000000000016;
          break;
        case 132:
          goto LABEL_26;
        case 133:
          goto LABEL_27;
        case 134:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 135:
          unint64_t result = 0x656C69665F736676;
          break;
        default:
          return result;
      }
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      switch(a1)
      {
        case 0xC1u:
        case 0xC4u:
LABEL_26:
          unint64_t result = 0x5F746E65746E6F63;
          break;
        case 0xC2u:
          unint64_t result = 0xD000000000000014;
          break;
        case 0xC3u:
          unint64_t result = 0xD000000000000013;
          break;
        case 0xC5u:
LABEL_27:
          unint64_t result = 0xD000000000000012;
          break;
        case 0xC6u:
          unint64_t result = 0x765F6E69616D6F64;
          break;
        default:
          return result;
      }
      break;
    default:
      sub_10096CBD0(19);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000011;
      uint64_t v2 = (void *)0xE700000000000000;
      v3._uint64_t countAndFlagsBits = 0x64695F656C6966;
      switch(a1)
      {
        case 1u:
          uint64_t v2 = (void *)0xEC000000746E6574;
          v3._uint64_t countAndFlagsBits = 0x6E6F635F74736574;
          break;
        case 2u:
          uint64_t v2 = (void *)0xE800000000000000;
          v3._uint64_t countAndFlagsBits = 0x6E6F697461636F6CLL;
          break;
        case 3u:
          uint64_t v2 = (void *)0xE600000000000000;
          v3._uint64_t countAndFlagsBits = 0x6874676E656CLL;
          break;
        case 4u:
          uint64_t v2 = (void *)0xE500000000000000;
          v3._uint64_t countAndFlagsBits = 0x7367616C66;
          break;
        default:
          break;
      }
      v3._object = v2;
      sub_10096BDC0(v3);
LABEL_20:
      swift_bridgeObjectRelease();
      unint64_t result = v9;
      break;
  }
  return result;
}

void sub_1003FFDD4(uint64_t a1, unsigned __int8 a2)
{
  switch(a2 >> 6)
  {
    case 1:
      sub_10096D4C0(8uLL);
      goto LABEL_8;
    case 2:
      switch(a2)
      {
        case 0x81u:
          Swift::UInt v2 = 1;
          break;
        case 0x82u:
          Swift::UInt v2 = 2;
          break;
        case 0x83u:
          Swift::UInt v2 = 3;
          break;
        case 0x84u:
          Swift::UInt v2 = 4;
          break;
        case 0x85u:
          Swift::UInt v2 = 5;
          break;
        case 0x86u:
          Swift::UInt v2 = 6;
          break;
        case 0x87u:
          Swift::UInt v2 = 9;
          break;
        default:
          Swift::UInt v2 = 0;
          break;
      }
      goto LABEL_24;
    case 3:
      switch(a2)
      {
        case 0xC1u:
          Swift::UInt v2 = 11;
          break;
        case 0xC2u:
          Swift::UInt v2 = 12;
          break;
        case 0xC3u:
          Swift::UInt v2 = 13;
          break;
        case 0xC4u:
          Swift::UInt v2 = 14;
          break;
        case 0xC5u:
          Swift::UInt v2 = 15;
          break;
        case 0xC6u:
          Swift::UInt v2 = 16;
          break;
        default:
          Swift::UInt v2 = 10;
          break;
      }
LABEL_24:
      sub_10096D4C0(v2);
      break;
    default:
      sub_10096D4C0(7uLL);
LABEL_8:
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
  }
}

Swift::Int sub_100400078(uint64_t a1, uint64_t a2)
{
  return sub_1004052D8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1003FFDD4);
}

void sub_100400090(uint64_t a1)
{
  sub_1003FFDD4(a1, *v1);
}

Swift::Int sub_100400098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100405348(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1003FFDD4);
}

unint64_t sub_1004000B0()
{
  return sub_1003FF9E0(*v0);
}

uint64_t sub_1004000B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100407E0C(*a1, *a2);
}

void *sub_1004000C4()
{
  sub_10002B7CC(&qword_100AD4F10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10097C0C0;
  *(_DWORD *)(inited + 32) = -2088599168;
  unint64_t v1 = sub_1006A2640((void *)1, 8, 1, (void *)inited);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v5;
  *((unsigned char *)v1 + v3 + 32) = -124;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 2, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v6;
  *((unsigned char *)v1 + v5 + 32) = -123;
  unint64_t v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 3, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v7;
  *((unsigned char *)v1 + v6 + 32) = -122;
  unint64_t v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 4, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v8;
  *((unsigned char *)v1 + v7 + 32) = -58;
  unint64_t v9 = v3 + 5;
  if (v4 < (uint64_t)(v3 + 5))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 5, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v9;
  *((unsigned char *)v1 + v8 + 32) = -60;
  if (v4 < (uint64_t)(v3 + 6)) {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 6, 1, v1);
  }
  v1[2] = v3 + 6;
  *((unsigned char *)v1 + v9 + 32) = -59;
  uint64_t v30 = v1;
  unint64_t v10 = sub_1003FD424();
  int64_t v11 = (int64_t)v10[2];
  if (v11)
  {
    sub_100445FA4(0, v11, 0);
    uint64_t v12 = 0;
    uint64_t v13 = _swiftEmptyArrayStorage[2];
    do
    {
      char v14 = *((unsigned char *)v10 + v12 + 32);
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v13 + v12 >= v15 >> 1) {
        sub_100445FA4(v15 > 1, v13 + v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + v12 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v13 + v12++) = v14;
    }
    while (v11 != v12);
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A2640);
  uint64_t v16 = sub_1003FD62C();
  uint64_t v17 = (char *)v16[2];
  if (v17)
  {
    uint64_t v18 = (unsigned __int8 *)(v16 + 4);
    do
    {
      int v20 = *v18++;
      int v19 = v20;
      if (v20 && v19 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100445F54(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v23 = _swiftEmptyArrayStorage[2];
          unint64_t v22 = _swiftEmptyArrayStorage[3];
          if (v23 >= v22 >> 1) {
            sub_100445F54(v22 > 1, v23 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v23 + 1;
          *((unsigned char *)&_swiftEmptyArrayStorage[4] + v23) = v19;
        }
      }
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  int64_t v24 = _swiftEmptyArrayStorage[2];
  if (v24)
  {
    sub_100445FA4(0, v24, 0);
    uint64_t v25 = 0;
    uint64_t v26 = _swiftEmptyArrayStorage[2];
    do
    {
      char v27 = *((unsigned char *)&_swiftEmptyArrayStorage[4] + v25);
      unint64_t v28 = _swiftEmptyArrayStorage[3];
      if (v26 + v25 >= v28 >> 1) {
        sub_100445FA4(v28 > 1, v26 + v25 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v26 + v25 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v26 + v25++) = v27 | 0x40;
    }
    while (v24 != v25);
  }
  swift_release();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A2640);
  return v30;
}

void *sub_1004005D8()
{
  sub_10002B7CC(&qword_100AD4F10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10097C0C0;
  *(_DWORD *)(inited + 32) = -2088599168;
  unint64_t v1 = sub_1006A2640((void *)1, 8, 1, (void *)inited);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v5;
  *((unsigned char *)v1 + v3 + 32) = -124;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 2, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v6;
  *((unsigned char *)v1 + v5 + 32) = -123;
  unint64_t v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 3, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v7;
  *((unsigned char *)v1 + v6 + 32) = -122;
  unint64_t v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4)) {
    unint64_t v1 = sub_1006A2640((void *)(v2 > 1), v3 + 4, 1, v1);
  }
  v1[2] = v8;
  *((unsigned char *)v1 + v7 + 32) = -58;
  int64_t v9 = v3 + 7;
  if (__OFADD__(v8, 3))
  {
    __break(1u);
  }
  else
  {
    unint64_t v10 = v1[3];
    unint64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) >= v9) {
      goto LABEL_11;
    }
  }
  if ((uint64_t)v8 <= v9) {
    int64_t v43 = v3 + 7;
  }
  else {
    int64_t v43 = v3 + 4;
  }
  unint64_t v1 = sub_1006A2640((void *)1, v43, 1, v1);
  unint64_t v8 = v1[2];
  unint64_t v10 = v1[3];
  unint64_t v11 = v10 >> 1;
LABEL_11:
  unint64_t v12 = v8 + 1;
  if (v11 <= v8) {
    unint64_t v1 = sub_1006A2640((void *)(v10 > 1), v8 + 1, 1, v1);
  }
  v1[2] = v12;
  *((unsigned char *)v1 + v8 + 32) = -121;
  unint64_t v13 = v1[3];
  unint64_t v14 = v8 + 2;
  if ((uint64_t)(v8 + 2) > (uint64_t)(v13 >> 1)) {
    unint64_t v1 = sub_1006A2640((void *)(v13 > 1), v8 + 2, 1, v1);
  }
  v1[2] = v14;
  *((unsigned char *)v1 + v12 + 32) = -64;
  unint64_t v15 = v1[3];
  int64_t v16 = v8 + 3;
  if (v16 > (uint64_t)(v15 >> 1)) {
    unint64_t v1 = sub_1006A2640((void *)(v15 > 1), v16, 1, v1);
  }
  v1[2] = v16;
  *((unsigned char *)v1 + v14 + 32) = -63;
  int64_t v17 = v16 + 2;
  if (__OFADD__(v16, 2))
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = v1[3];
    unint64_t v19 = v18 >> 1;
    if ((uint64_t)(v18 >> 1) >= v17) {
      goto LABEL_19;
    }
  }
  if (v16 <= v17) {
    int64_t v44 = v16 + 2;
  }
  else {
    int64_t v44 = v16;
  }
  unint64_t v1 = sub_1006A2640((void *)1, v44, 1, v1);
  unint64_t v18 = v1[3];
  unint64_t v19 = v18 >> 1;
LABEL_19:
  unint64_t v20 = v1[2];
  unint64_t v21 = v20 + 1;
  if (v19 <= v20)
  {
    unint64_t v1 = sub_1006A2640((void *)(v18 > 1), v20 + 1, 1, v1);
    unint64_t v18 = v1[3];
    unint64_t v19 = v18 >> 1;
  }
  v1[2] = v21;
  *((unsigned char *)v1 + v20 + 32) = -62;
  int64_t v22 = v20 + 2;
  if ((uint64_t)v19 < v22) {
    unint64_t v1 = sub_1006A2640((void *)(v18 > 1), v22, 1, v1);
  }
  v1[2] = v22;
  *((unsigned char *)v1 + v21 + 32) = -61;
  uint64_t v45 = v1;
  unint64_t v23 = sub_1003FD424();
  int64_t v24 = (int64_t)v23[2];
  if (v24)
  {
    sub_100445FA4(0, v24, 0);
    uint64_t v25 = 0;
    uint64_t v26 = _swiftEmptyArrayStorage[2];
    do
    {
      char v27 = *((unsigned char *)v23 + v25 + 32);
      unint64_t v28 = _swiftEmptyArrayStorage[3];
      if (v26 + v25 >= v28 >> 1) {
        sub_100445FA4(v28 > 1, v26 + v25 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v26 + v25 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v26 + v25++) = v27;
    }
    while (v24 != v25);
  }
  swift_bridgeObjectRelease();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A2640);
  uint64_t v29 = sub_1003FD62C();
  uint64_t v30 = (char *)v29[2];
  if (v30)
  {
    uint64_t v31 = (unsigned __int8 *)(v29 + 4);
    do
    {
      int v33 = *v31++;
      int v32 = v33;
      if (v33 && v32 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100445F54(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v36 = _swiftEmptyArrayStorage[2];
          unint64_t v35 = _swiftEmptyArrayStorage[3];
          if (v36 >= v35 >> 1) {
            sub_100445F54(v35 > 1, v36 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v36 + 1;
          *((unsigned char *)&_swiftEmptyArrayStorage[4] + v36) = v32;
        }
      }
      --v30;
    }
    while (v30);
  }
  swift_bridgeObjectRelease();
  int64_t v37 = _swiftEmptyArrayStorage[2];
  if (v37)
  {
    sub_100445FA4(0, v37, 0);
    uint64_t v38 = 0;
    uint64_t v39 = _swiftEmptyArrayStorage[2];
    do
    {
      char v40 = *((unsigned char *)&_swiftEmptyArrayStorage[4] + v38);
      unint64_t v41 = _swiftEmptyArrayStorage[3];
      if (v39 + v38 >= v41 >> 1) {
        sub_100445FA4(v41 > 1, v39 + v38 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v39 + v38 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v39 + v38++) = v40 | 0x40;
    }
    while (v37 != v38);
  }
  swift_release();
  sub_1003FC7A4((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(void))sub_1006A2640);
  return v45;
}

_UNKNOWN **sub_100400C18()
{
  sub_10002B7CC(&qword_100AD4ED8);
  swift_getWitnessTable();
  sub_10096C170();
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype()) {
    sub_10096C170();
  }
  else {
    sub_10096C180();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion();
  if (swift_dynamicCastMetatype()) {
    sub_10096C170();
  }
  else {
    sub_10096C180();
  }
  sub_1003FD424();
  uint64_t v0 = sub_10002B7CC(&qword_100AD4DC8);
  uint64_t v1 = sub_100025500(&qword_100AD4E00, &qword_100AD4DC8);
  sub_1003FC0AC((void (*)(char *, char *))sub_100408884, 0, v0, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v2);
  swift_bridgeObjectRelease();
  sub_10096C170();
  unint64_t v3 = sub_1003FD62C();
  int64_t v4 = (char *)v3[2];
  if (v4)
  {
    unint64_t v5 = (unsigned __int8 *)(v3 + 4);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if (v7 && v6 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v8 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100445F54(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v10 = _swiftEmptyArrayStorage[2];
          unint64_t v9 = _swiftEmptyArrayStorage[3];
          if (v10 >= v9 >> 1) {
            sub_100445F54(v9 > 1, v10 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v10 + 1;
          *((unsigned char *)&_swiftEmptyArrayStorage[4] + v10) = v6;
        }
      }
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100AD6940);
  uint64_t v12 = sub_100025500(&qword_100AD4EE0, (uint64_t *)&unk_100AD6940);
  sub_1003FC0AC((void (*)(char *, char *))sub_10040107C, 0, v11, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, (uint64_t)&type metadata for Never, v12, (uint64_t)&protocol witness table for Never, v13);
  swift_release();
  sub_10096C170();
  return &off_100A6A870;
}

unsigned char *sub_10040107C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result | 0x40;
  return result;
}

uint64_t sub_10040108C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v168 = a2;
  int v166 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_10096C890();
  uint64_t v159 = *(void *)(v5 - 8);
  uint64_t v160 = v5;
  __chkstk_darwin(v5);
  int v158 = (char *)&v141 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v152 = sub_10096C890();
  uint64_t v151 = *(void *)(v152 - 8);
  uint64_t v8 = __chkstk_darwin(v152);
  uint64_t v156 = (char *)&v141 - v9;
  uint64_t v163 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int v147 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  int v146 = (char *)&v141 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v145 = (char *)&v141 - v15;
  __chkstk_darwin(v14);
  unint64_t v144 = (char *)&v141 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v157 = type metadata accessor for ItemStateVersion();
  uint64_t v155 = *(void *)(v157 - 8);
  uint64_t v18 = __chkstk_darwin(v157);
  os_log_t v143 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v142 = (char *)&v141 - v20;
  uint64_t v154 = v17;
  uint64_t v161 = sub_10096C890();
  uint64_t v150 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  id v153 = (char *)&v141 - v21;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v169 = v7;
  *((void *)&v169 + 1) = AssociatedTypeWitness;
  uint64_t v164 = AssociatedTypeWitness;
  uint64_t v149 = v22;
  *(void *)&long long v170 = v22;
  *((void *)&v170 + 1) = v23;
  uint64_t v148 = v23;
  uint64_t v165 = type metadata accessor for FileItemVersion();
  sub_10096C890();
  uint64_t v24 = __chkstk_darwin(a1);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v141 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  int v33 = (char *)&v141 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  unint64_t v36 = (char *)&v141 - v35;
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = __chkstk_darwin(v34);
  char v40 = (char *)&v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  int64_t v43 = (char *)&v141 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)&v141 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v49 = (char *)&v141 - v48;
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v141 - v51;
  unsigned __int8 v53 = __chkstk_darwin(v50);
  uint64_t v62 = (char *)&v141 - v61;
  switch(v53 >> 6)
  {
    case 1:
      uint64_t v72 = v176;
      uint64_t v73 = (uint64_t)sub_1007B29A0(v53 & 0x3F, v168, *(void *)(v167 + v166[16]), *(void *)(v167 + v166[16] + 8), *(unsigned char *)(v167 + v166[16] + 16));
      if (v72) {
        return (uint64_t)v62;
      }
      return v73;
    case 2:
      switch(v53)
      {
        case 0x81u:
          uint64_t v116 = v166[9];
          goto LABEL_30;
        case 0x82u:
          uint64_t v116 = v166[10];
LABEL_30:
          uint64_t v115 = *(void *)(v167 + v116);
          goto LABEL_31;
        case 0x83u:
          uint64_t v117 = *(unsigned __int8 *)(v167 + v166[11]);
          if (v117 == 3) {
            goto LABEL_28;
          }
          goto LABEL_35;
        case 0x84u:
          uint64_t v115 = *(unsigned __int8 *)(v167 + v166[13]);
LABEL_31:
          *((void *)&v170 + 1) = &type metadata for Int;
          *(void *)&long long v169 = v115;
          goto LABEL_36;
        case 0x85u:
          uint64_t v117 = *(unsigned __int8 *)(v167 + v166[14]);
          if (v117 == 6)
          {
LABEL_28:
            long long v169 = 0u;
            long long v170 = 0u;
          }
          else
          {
LABEL_35:
            *((void *)&v170 + 1) = &type metadata for Int;
            *(void *)&long long v169 = v117;
          }
LABEL_36:
          uint64_t v62 = (char *)sub_1003AC444((uint64_t)&v169);
          uint64_t v124 = v123;
          sub_10017D1A4((uint64_t)&v169);
          if (v124) {
            return (uint64_t)v62;
          }
          sub_10096CE20();
          __break(1u);
LABEL_38:
          id v65 = [v168 bindBooleanParameter:*(unsigned __int8 *)(v167 + v166[15])];
          break;
        case 0x86u:
          goto LABEL_38;
        case 0x87u:
          uint64_t v118 = v58;
          uint64_t v119 = v60;
          uint64_t v120 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v36, v167 + v166[12], v60);
          uint64_t v121 = v165;
          uint64_t v122 = *(void *)(v165 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v36, 1, v165) == 1)
          {
            (*(void (**)(char *, uint64_t))(v120 + 8))(v36, v119);
            uint64_t isa = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v52, v36, v118);
            (*(void (**)(char *, uint64_t))(v122 + 8))(v36, v121);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v62, v52, v118);
            swift_dynamicCast();
            uint64_t isa = sub_10096D2B0();
          }
          goto LABEL_56;
        default:
          return Optional<A>.encode(_:)(v168, v161, *(void *)(AssociatedConformanceWitness + 40));
      }
      goto LABEL_54;
    case 3:
      uint64_t v66 = v165;
      switch(v53)
      {
        case 0xC1u:
          uint64_t v98 = v58;
          uint64_t v99 = v60;
          uint64_t v100 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v30, v167 + v166[12], v60);
          uint64_t v101 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v30, 1, v66) == 1)
          {
            (*(void (**)(char *, uint64_t))(v100 + 8))(v30, v99);
            uint64_t isa = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v30, v98);
            (*(void (**)(char *, uint64_t))(v101 + 8))(v30, v66);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v43, v40, v98);
            swift_dynamicCast();
            if (BYTE8(v170)) {
              uint64_t isa = 0;
            }
            else {
              uint64_t isa = (uint64_t)sub_10096D460().super.super.isa;
            }
          }
          goto LABEL_56;
        case 0xC2u:
          uint64_t v85 = v60;
          uint64_t v86 = v59;
          uint64_t v87 = v57;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v167 + v166[12], v60);
          uint64_t v88 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v87, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v85);
            uint64_t v89 = v154;
            uint64_t v90 = *(void *)(v154 - 8);
            uint64_t v91 = 1;
            uint64_t v84 = v153;
          }
          else
          {
            uint64_t v128 = v163;
            uint64_t v127 = v164;
            uint64_t v129 = v145;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v145, v87 + *(int *)(v66 + 56), v164);
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v66);
            (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v144, v129, v127);
            double v130 = v142;
            uint64_t v131 = v157;
            swift_dynamicCast();
            uint64_t v89 = v154;
            uint64_t v90 = *(void *)(v154 - 8);
            uint64_t v84 = v153;
            (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v153, v130, v154);
            (*(void (**)(char *, uint64_t))(v155 + 8))(v130, v131);
            uint64_t v91 = 0;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v84, v91, 1, v89);
          uint64_t v125 = v161;
          uint64_t v62 = (char *)Optional<A>.encode(_:)(v168, v161, *(void *)(AssociatedConformanceWitness + 40));
          id v126 = &v176;
          goto LABEL_43;
        case 0xC3u:
          uint64_t v92 = v60;
          uint64_t v93 = v59;
          uint64_t v94 = v56;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v56, v167 + v166[12], v60);
          uint64_t v95 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v94, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v92);
            uint64_t v96 = 0;
            uint64_t v97 = 0;
          }
          else
          {
            uint64_t v133 = v163;
            uint64_t v132 = v164;
            uint64_t v134 = v147;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v147, v94 + *(int *)(v66 + 56), v164);
            (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v66);
            (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v146, v134, v132);
            uint64_t v135 = v143;
            uint64_t v136 = v157;
            swift_dynamicCast();
            uint64_t v137 = (uint64_t *)&v135[*(int *)(v136 + 36)];
            uint64_t v96 = *v137;
            uint64_t v97 = v137[1];
            double v138 = *(void (**)(char *, uint64_t))(v155 + 8);
            swift_bridgeObjectRetain();
            v138(v135, v136);
          }
          uint64_t v62 = (char *)sub_10038FCD8(v96, v97);
          swift_bridgeObjectRelease();
          return (uint64_t)v62;
        case 0xC4u:
          uint64_t v77 = v58;
          uint64_t v78 = v59;
          uint64_t v79 = v60;
          uint64_t v80 = v55;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v55, v167 + v166[12], v60);
          uint64_t v81 = *(void *)(v66 - 8);
          uint64_t v82 = 1;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v80, 1, v66) == 1)
          {
            uint64_t v81 = v78;
            uint64_t v83 = v79;
            uint64_t v84 = v156;
          }
          else
          {
            uint64_t v84 = v156;
            (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v156, v80, v77);
            uint64_t v82 = 0;
            uint64_t v83 = v66;
          }
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v83);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v84, v82, 1, v77);
          uint64_t v125 = v152;
          uint64_t v62 = (char *)Optional<A>.encode(_:)(v168, v152, *(void *)(v149 + 32));
          id v126 = &v177;
LABEL_43:
          (*(void (**)(char *, uint64_t))(*(v126 - 32) + 8))(v84, v125);
          return (uint64_t)v62;
        case 0xC5u:
          uint64_t v102 = v167 + v166[12];
          uint64_t v167 = v59;
          uint64_t v103 = v60;
          uint64_t v104 = v54;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v54, v102, v60);
          uint64_t v105 = *(void *)(v66 - 8);
          uint64_t v106 = 1;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v104, 1, v66) == 1)
          {
            uint64_t v108 = v163;
            uint64_t v107 = v164;
            uint64_t v110 = v159;
            uint64_t v109 = v160;
            int v111 = v158;
            uint64_t v105 = v167;
            uint64_t v112 = v103;
          }
          else
          {
            uint64_t v108 = v163;
            uint64_t v107 = v164;
            int v111 = v158;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v158, v104 + *(int *)(v66 + 56), v164);
            uint64_t v106 = 0;
            uint64_t v112 = v66;
            uint64_t v110 = v159;
            uint64_t v109 = v160;
          }
          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v112);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v111, v106, 1, v107);
          uint64_t v62 = (char *)Optional<A>.encode(_:)(v168, v109, *(void *)(v148 + 32));
          (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
          return (uint64_t)v62;
        case 0xC6u:
          uint64_t v113 = *(void **)(v167 + v166[18]);
          if (v113) {
            id v114 = [v113 version];
          }
          else {
            id v114 = 0;
          }
          id v65 = [v168 bindLongParameter:v114];
          goto LABEL_54;
        default:
          uint64_t v67 = v58;
          uint64_t v68 = v60;
          uint64_t v69 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v33, v167 + v166[12], v60);
          uint64_t v70 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v33, 1, v66) == 1)
          {
            (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v68);
            uint64_t isa = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v46, v33, v67);
            (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v66);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v49, v46, v67);
            swift_dynamicCast();
            LODWORD(v169) = DWORD2(v169);
            uint64_t isa = sub_10096D2B0();
          }
LABEL_56:
          id v139 = [v168 bindObjectParameter:isa];
          swift_unknownObjectRelease();
          goto LABEL_57;
      }
    default:
      uint64_t v63 = (long long *)(v167 + v166[17]);
      unint64_t v64 = *((void *)v63 + 2);
      if (v64 >> 60 == 11)
      {
        id v65 = [v168 bindObjectParameter:0];
LABEL_54:
        id v139 = v65;
LABEL_57:
        uint64_t v62 = (char *)_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      }
      else
      {
        uint64_t v74 = *((void *)v63 + 6);
        int v75 = *((_DWORD *)v63 + 10);
        long long v171 = *v63;
        unint64_t v172 = v64;
        long long v173 = *(long long *)((char *)v63 + 24);
        char v174 = v75 & 1;
        uint64_t v175 = v74;
        uint64_t v76 = v176;
        uint64_t v73 = sub_1003FF08C(v53, v168);
        if (!v76) {
          return v73;
        }
      }
      return (uint64_t)v62;
  }
}