uint64_t sub_1008DE72C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned char *v6;
  unsigned char v8[16];

  v3 = sub_10002B7CC(&qword_100ADF118);
  v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_100937FA0();
  sub_10096D590();
  v8[15] = 0;
  sub_10096D1F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_10096D1F0();
    v8[13] = 2;
    sub_10096D1F0();
    type metadata accessor for VFSCounters(0);
    v8[12] = 3;
    sub_10096B0E0();
    sub_1000256AC(&qword_100ACB9B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1008DE934@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v23 = sub_10096B0E0();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002B7CC(&qword_100ADF108);
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for VFSCounters(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v11 = 0;
  v11[1] = 0;
  v11[2] = 0;
  v12 = (char *)v11 + *(int *)(v9 + 36);
  sub_10096B0B0();
  sub_10002689C(a1, a1[3]);
  sub_100937FA0();
  sub_10096D570();
  if (!v2)
  {
    v20 = v12;
    uint64_t v14 = v22;
    uint64_t v13 = v23;
    uint64_t v15 = v24;
    char v29 = 0;
    uint64_t *v11 = sub_10096D090();
    char v28 = 1;
    v11[1] = sub_10096D090();
    char v27 = 2;
    v11[2] = sub_10096D090();
    char v26 = 3;
    sub_1000256AC(&qword_100ACB9F0, (void (*)(uint64_t))&type metadata accessor for Date);
    v19 = v5;
    uint64_t v17 = v25;
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
    (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v20, v19, v13);
    sub_1009381C4((uint64_t)v11, v15, type metadata accessor for VFSCounters);
  }
  sub_1000268E0((uint64_t)a1);
  return sub_10092D018((uint64_t)v11, type metadata accessor for VFSCounters);
}

unint64_t sub_1008DEC9C()
{
  unint64_t result = 0x6F4370756B6F6F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E756F436E616373;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7461447465736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008DED44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10092DB3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008DED6C(uint64_t a1)
{
  unint64_t v2 = sub_100937FA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008DEDA8(uint64_t a1)
{
  unint64_t v2 = sub_100937FA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008DEDE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008DE934(a1, a2);
}

uint64_t sub_1008DEDFC(void *a1)
{
  return sub_1008DE72C(a1);
}

Swift::Int sub_1008DEE18()
{
  Swift::UInt64 v1 = *v0;
  sub_10096D4B0();
  sub_10096D4F0(v1);
  sub_10096BD50();
  return sub_10096D500();
}

uint64_t sub_1008DEE7C()
{
  sub_10096D4F0(*v0);

  return sub_10096BD50();
}

Swift::Int sub_1008DEED0()
{
  Swift::UInt64 v1 = *v0;
  sub_10096D4B0();
  sub_10096D4F0(v1);
  sub_10096BD50();
  return sub_10096D500();
}

uint64_t sub_1008DEF30(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_10096D2D0();
  }
}

uint64_t sub_1008DEF78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    uint64_t v5 = a2 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t *))(v5 - 8);
      uint64_t v7 = v4;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t VFSFileTree.rootID.getter()
{
  return 0;
}

uint64_t VFSFileTree.trashID.getter()
{
  return 1;
}

uint64_t VFSFileTree.isCaseSensitive.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096AE50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096AA50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(unsigned __int8 *)(v1 + 152);
  if (v10 == 3)
  {
    v11 = (void *)swift_retain();
    if (objc_sync_enter(v11)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, v1);
    }
    uint64_t v12 = *(void *)(v1 + 160);
    swift_retain();
    if (objc_sync_exit((id)v1)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, v1);
    }
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v2);
    swift_release();
    sub_10002B7CC(&qword_100ACF740);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BB0;
    *(void *)(inited + 32) = NSURLVolumeSupportsCaseSensitiveNamesKey;
    uint64_t v14 = NSURLVolumeSupportsCaseSensitiveNamesKey;
    sub_1000087CC(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    sub_10096ACB0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10096AA20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)(v1 + 152) = v10;
  }
  return v10;
}

uint64_t VFSFileTree.lookupScope.getter()
{
  uint64_t v1 = (void *)swift_retain();
  if (objc_sync_enter(v1)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v0);
  }
  uint64_t v2 = v0[20];
  swift_retain();
  if (objc_sync_exit(v0)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v0);
  }
  swift_release();
  return v2;
}

uint64_t VFSFileTree.lookupScope.setter(uint64_t a1)
{
  swift_retain();
  swift_retain();
  sub_100843DDC(v1, (uint64_t)v1, a1);

  return swift_release();
}

uint64_t (*VFSFileTree.lookupScope.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = (void *)swift_retain();
  if (objc_sync_enter(v3)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v1);
  }
  uint64_t v4 = v1[20];
  swift_retain();
  if (objc_sync_exit(v1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v1);
  }
  swift_release();
  *a1 = v4;
  return sub_1008DF4D0;
}

uint64_t sub_1008DF4D0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  if (a2)
  {
    swift_retain_n();
    uint64_t v4 = (void *)swift_retain();
    sub_100843DDC(v4, (uint64_t)v3, v2);
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_100843DDC(v3, (uint64_t)v3, v2);
  }

  return swift_release();
}

uint64_t (*sub_1008DF56C())()
{
  return j_j__swift_endAccess_0;
}

id sub_1008DF5C0()
{
  return [*(id *)(v0 + 232) hasPlannedRescan];
}

id sub_1008DF5E4(char a1)
{
  return [*(id *)(v1 + 232) setPlannedRescan:a1 & 1];
}

NSObject *sub_1008DF5FC()
{
  uint64_t result = FPCreateWorkloop("com.apple.fssync.fstree");
  qword_100B0B628 = (uint64_t)result;
  return result;
}

uint64_t property wrapper backing initializer of VFSFileTree.lastFSEventID()
{
  return sub_10096B5D0();
}

uint64_t sub_1008DF65C()
{
  return sub_1008DF684();
}

uint64_t sub_1008DF670()
{
  return sub_1008DF684();
}

uint64_t sub_1008DF684()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10096B600();
  swift_release();
  swift_release();
  return v1;
}

uint64_t (*sub_1008DF6F0())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_1008DF74C()
{
  uint64_t v0 = type metadata accessor for VFSLookupItemContinuation();
  sub_10092CE94(v0);
  uint64_t v1 = type metadata accessor for VFSDirectoryLister(0);
  sub_10092CE94(v1);
  uint64_t v2 = type metadata accessor for VFSStagedContext();
  sub_10092CE94(v2);
  uint64_t v3 = type metadata accessor for VFSTrackingContinuation(0);

  return sub_10092CE94(v3);
}

fp_task_tracker *VFSFileTree.init(rootURLs:wharf:pathManager:providerDomainID:openTelemetrySession:fsChangeMonitor:coordinatorPurposeIdentifier:setupRootFolders:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  id v159 = a1;
  uint64_t v11 = v10;
  uint64_t v166 = a4;
  id v158 = a3;
  uint64_t v131 = sub_10096B480();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_10002B7CC(&qword_100ADE730);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10002B7CC(&qword_100ADE738);
  __chkstk_darwin(v19 - 8);
  v144 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10096C680();
  uint64_t v21 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_10002B7CC(&qword_100AD0F88);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_10002B7CC(&qword_100ACDA30);
  uint64_t v147 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10002B7CC(&qword_100ADE740);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  v146 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10002B7CC(&qword_100ADE748);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v11 + 152) = 3;
  swift_retain();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_10096CE70()) {
    sub_10009A4F8((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    char v27 = &_swiftEmptySetSingleton;
  }
  uint64_t v140 = v21;
  uint64_t v162 = a5;
  *(void *)(v11 + 192) = v27;
  *(void *)(v11 + 200) = sub_100099C5C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for TaskTracker();
  uint64_t v28 = swift_allocObject();
  uint64_t result = fp_task_tracker_create("vfstree");
  if (!result) {
    goto LABEL_33;
  }
  LODWORD(v157) = a10;
  *(void *)(v28 + 16) = result;
  *(void *)(v11 + 224) = v28;
  *(void *)(v11 + 280) = 0;
  uint64_t v150 = v11 + 272;
  swift_unknownObjectWeakInit();
  uint64_t v153 = qword_100B0B630;
  *(void *)(v11 + qword_100B0B630) = 0;
  uint64_t v154 = qword_100B0B638;
  *(void *)(v11 + qword_100B0B638) = 0;
  uint64_t v30 = v11 + qword_100ADE750;
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 41) = 0u;
  uint64_t v31 = v11 + qword_100ADE758;
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  uint64_t v32 = v11 + qword_100ADE760;
  *(void *)uint64_t v32 = 0;
  *(void *)(v32 + 8) = 0;
  *(unsigned char *)(v32 + 16) = 1;
  v33 = (void *)(v11 + qword_100B0B640);
  type metadata accessor for VFSCounters(0);
  v33[1] = 0;
  v33[2] = 0;
  void *v33 = 0;
  sub_10096B0B0();
  v151 = (char *)qword_100ADE768;
  *(void *)(v11 + qword_100ADE768) = 1;
  uint64_t v34 = qword_100ADE770;
  unint64_t v35 = sub_100099D88((uint64_t)_swiftEmptyArrayStorage);
  v152 = (void (*)(char *, uint64_t))v34;
  *(void *)(v11 + v34) = v35;
  *(void *)(v11 + 176) = a8;
  *(void *)(v11 + 184) = a9;
  uint64_t v161 = a6;
  v155 = v33;
  if (a7)
  {
    id v36 = a7;
  }
  else
  {
    uint64_t v37 = qword_100ACC1C0;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    v38 = (void *)qword_100B0B628;
    id v39 = objc_allocWithZone((Class)FSChangeMonitor);
    id v40 = v38;
    NSString v41 = sub_10096BC00();
    swift_bridgeObjectRelease();
    id v36 = [v39 initWithLabel:v41 workloop:v40];
  }
  *(void *)(v11 + 232) = v36;
  id v156 = a7;
  *(void *)(v11 + 216) = [v36 delegationQueue];
  id v42 = [objc_allocWithZone((Class)NSOperationQueue) init];
  *(void *)(v11 + 208) = v42;
  [v42 setUnderlyingQueue:*(void *)(v11 + 216)];
  [*(id *)(v11 + 208) setMaxConcurrentOperationCount:1];
  uint64_t v164 = sub_10096AE10();
  uint64_t v165 = v43;
  swift_bridgeObjectRetain();
  v167._countAndFlagsBits = 0x6F7473626D6F742FLL;
  v167._object = (void *)0xEB000000002F656ELL;
  sub_10096BDC0(v167);
  swift_bridgeObjectRelease();
  uint64_t v44 = v164;
  uint64_t v45 = v165;
  type metadata accessor for DocumentTrackingTombstoneSlayer();
  uint64_t v46 = swift_allocObject();
  *(_WORD *)(v46 + 32) = 1;
  *(unsigned char *)(v46 + 34) = 0;
  *(void *)(v46 + 16) = v44;
  *(void *)(v46 + 24) = v45;
  sub_10064067C();
  *(void *)(v11 + 248) = v46;
  *(void *)(v11 + 256) = sub_100099D94((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v11 + 264) = dispatch_group_create();
  uint64_t v47 = v11 + qword_100ADE778;
  swift_beginAccess();
  id v163 = 0;
  uint64_t v149 = v47;
  sub_10096B5D0();
  swift_endAccess();
  uint64_t v48 = v11 + qword_100ADE780;
  swift_beginAccess();
  id v163 = 0;
  uint64_t v148 = v48;
  sub_10096B5D0();
  swift_endAccess();
  id v49 = v158;
  *(void *)(v11 + 168) = v158;
  uint64_t v50 = a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  int v51 = *(_DWORD *)(v50 + 8);
  v52 = *(const void **)(a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  uint64_t v53 = *(unsigned int *)(a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8);
  int v54 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 12);
  type metadata accessor for VFSLookupScope();
  uint64_t v55 = a2;
  swift_allocObject();
  id v56 = v49;
  _Block_copy(v52);
  v57 = &_mh_execute_header;
  if (!v54) {
    v57 = 0;
  }
  uint64_t v58 = v160;
  uint64_t v59 = sub_1007002EC((uint64_t)v159, v51, (uint64_t)sub_10002BFF4, 0, v52, (unint64_t)v57 | v53, v157 & 1);
  if (v58)
  {

    sub_1000705CC(v162);
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    sub_10000A63C(v150);
    uint64_t v60 = sub_10002B7CC(&qword_100ACDA28);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v149, v60);
    uint64_t v61 = sub_10002B7CC(&qword_100AD74A0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v148, v61);
    swift_release();
    swift_release();
    sub_100929F70(*(void *)v30, *(void *)(v30 + 8));
    sub_10092D018((uint64_t)v155, type metadata accessor for VFSCounters);
    sub_10002D240(*(id *)&v151[v11]);
    swift_bridgeObjectRelease();
    type metadata accessor for VFSFileTree(0);
    swift_deallocPartialClassInstance();
    return (fp_task_tracker *)v11;
  }
  id v159 = v56;
  *(void *)(v11 + 160) = v59;
  *(void *)(v11 + 240) = _swiftEmptyArrayStorage;
  v62 = (void *)v166;
  *(void *)(v11 + qword_100ADE788) = v166;
  v63 = (void *)(v11 + qword_100ADE790);
  uint64_t v64 = v161;
  uint64_t v65 = v162;
  void *v63 = v162;
  v63[1] = v64;
  id v158 = v62;
  sub_100031400(v65);
  swift_release();
  v66 = self;
  swift_retain();
  id v67 = [v66 defaultStore];
  uint64_t v160 = 0;
  id v68 = v67;
  uint64_t v69 = (int)[v67 softConcurrentOperationLimit];
  LODWORD(v65) = [v68 hardConcurrentOperationLimit];

  uint64_t v70 = (int)v65;
  type metadata accessor for JobLimit();
  v71 = (void *)swift_allocObject();
  v71[2] = 0;
  v71[3] = v69;
  v71[4] = v69;
  v71[5] = v70;
  id v72 = [v66 defaultStore];
  uint64_t v73 = (int)[v72 softConcurrentContentUpdateLimit];
  LODWORD(v69) = [v72 hardConcurrentContentUpdateLimit];

  uint64_t v74 = (int)v69;
  v75 = (void *)swift_allocObject();
  v75[2] = 0;
  v75[3] = v73;
  v75[4] = v73;
  v75[5] = v74;
  id v76 = [v66 defaultStore];
  uint64_t v77 = (int)[v76 softConcurrentMetadataOnlyUpdateLimit];
  LODWORD(v73) = [v76 hardConcurrentMetadataOnlyUpdateLimit];

  uint64_t v78 = (int)v73;
  v79 = (void *)swift_allocObject();
  v79[2] = 0;
  v79[3] = v77;
  v79[4] = v77;
  v79[5] = v78;
  id v80 = [v66 defaultStore];
  uint64_t v81 = (int)[v80 softConcurrentProvideFileLimit];
  LODWORD(v66) = [v80 hardConcurrentProvideFileLimit];

  v82 = (void *)swift_allocObject();
  v82[2] = 0;
  v82[3] = v81;
  v82[4] = v81;
  v82[5] = (int)v66;
  uint64_t v11 = sub_1008D4AB8(v55, (uint64_t)v71, (uint64_t)v75, (uint64_t)v79, (uint64_t)v82, &qword_100ADF170, sub_1008DCB94, (void (*)(uint64_t, uint64_t))sub_100843AD4);
  swift_retain();
  swift_retain();
  uint64_t v83 = v160;
  sub_100701AF4((void *)v166);
  if (v83)
  {

    sub_1000705CC(v162);
    swift_release_n();
    swift_release();
    swift_release();

    return (fp_task_tracker *)v11;
  }
  swift_release();
  uint64_t result = (fp_task_tracker *)[*(id *)(v11 + 232) latency];
  double v85 = v84 * 5000.0;
  if (v85 <= 100.0) {
    double v85 = 100.0;
  }
  if ((~*(void *)&v85 & 0x7FF0000000000000) != 0)
  {
    if (v85 > -9.22337204e18)
    {
      uint64_t v157 = v55;
      uint64_t v160 = 0;
      if (v85 < 9.22337204e18)
      {
        uint64_t v86 = (uint64_t)v85;
        v87 = (void *)(v11 + qword_100ADE778);
        swift_beginAccess();
        uint64_t v88 = sub_10002B7CC(&qword_100ACDA28);
        v89 = v141;
        uint64_t v154 = v88;
        v155 = v87;
        sub_10096B5E0();
        swift_endAccess();
        swift_beginAccess();
        sub_10002B7CC(&qword_100AD74A0);
        v90 = v132;
        sub_10096B5E0();
        swift_endAccess();
        uint64_t v91 = sub_100025500(&qword_100ACDA48, &qword_100ACDA30);
        sub_100025500((unint64_t *)&unk_100AD0F98, &qword_100AD0F88);
        uint64_t v92 = v142;
        uint64_t v93 = v134;
        uint64_t v153 = v91;
        sub_10096B630();
        (*(void (**)(char *, uint64_t))(v133 + 8))(v90, v93);
        v94 = *(void (**)(char *, uint64_t))(v147 + 8);
        v147 += 8;
        v152 = v94;
        v94(v89, v92);
        v95 = v143;
        uint64_t v166 = v86;
        sub_10096C660();
        id v163 = *(id *)(v11 + 216);
        id v96 = v163;
        uint64_t v97 = sub_10096C640();
        uint64_t v98 = *(void *)(v97 - 8);
        v99 = *(char **)(v98 + 56);
        uint64_t v100 = (uint64_t)v144;
        uint64_t v148 = v97;
        uint64_t v150 = v98 + 56;
        v151 = v99;
        ((void (*)(char *, uint64_t, uint64_t))v99)(v144, 1, 1);
        uint64_t v101 = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
        sub_100025500(&qword_100ADE798, &qword_100ADE740);
        uint64_t v102 = sub_100345DBC((unint64_t *)&qword_100ACDA50, (unint64_t *)&qword_100ACBC10);
        id v103 = v96;
        v104 = v137;
        uint64_t v105 = v136;
        uint64_t v149 = v101;
        uint64_t v134 = v102;
        v106 = v146;
        sub_10096B650();
        sub_10002B770(v100, &qword_100ADE738);

        v107 = *(void (**)(char *, uint64_t))(v140 + 8);
        v107(v95, v145);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v106, v105);
        swift_allocObject();
        swift_weakInit();
        sub_100025500(&qword_100ADE7A0, &qword_100ADE748);
        uint64_t v108 = v139;
        uint64_t v109 = sub_10096B670();
        swift_release();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v104, v108);
        *(void *)(v11 + qword_100B0B630) = v109;
        swift_release();
        [*(id *)(v11 + 232) latency];
        if (v110 == 0.0)
        {
          uint64_t v111 = 10 * v166;
          if ((unsigned __int128)(v166 * (__int128)10) >> 64 == (10 * v166) >> 63)
          {
LABEL_24:
            swift_beginAccess();
            v112 = v141;
            sub_10096B5E0();
            swift_endAccess();
            v113 = v143;
            v155 = (void *)v111;
            sub_10096C660();
            id v163 = *(id *)(v11 + 216);
            id v114 = v163;
            uint64_t v115 = (uint64_t)v144;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v151)(v144, 1, 1, v148);
            id v116 = v114;
            v117 = v126;
            uint64_t v118 = v142;
            sub_10096B650();
            sub_10002B770(v115, &qword_100ADE738);

            v107(v113, v145);
            v152(v112, v118);
            swift_allocObject();
            swift_weakInit();
            sub_100025500(&qword_100ADE7A8, &qword_100ADE730);
            uint64_t v119 = v128;
            uint64_t v120 = sub_10096B670();
            swift_release();
            (*(void (**)(char *, uint64_t))(v127 + 8))(v117, v119);
            *(void *)(v11 + qword_100B0B638) = v120;
            swift_release();
            id v121 = (id)fpfs_current_or_default_log();
            v122 = v129;
            sub_10096B490();
            v123 = sub_10096B470();
            os_log_type_t v124 = sub_10096C590();
            if (os_log_type_enabled(v123, v124))
            {
              uint64_t v125 = swift_slowAlloc();
              *(_DWORD *)uint64_t v125 = 134218240;
              id v163 = (id)v166;
              sub_10096C8C0();
              *(_WORD *)(v125 + 12) = 2048;
              id v163 = v155;
              sub_10096C8C0();
              _os_log_impl((void *)&_mh_execute_header, v123, v124, "idle stream timeouts: %ldms, long: %ldms", (uint8_t *)v125, 0x16u);
              swift_slowDealloc();
            }

            sub_1000705CC(v162);
            swift_release();

            (*(void (**)(char *, uint64_t))(v130 + 8))(v122, v131);
            swift_release();
            return (fp_task_tracker *)v11;
          }
          __break(1u);
        }
        uint64_t v111 = 60000;
        goto LABEL_24;
      }
      goto LABEL_32;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1008E0C70(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10096B600();
    swift_release();
    swift_release();
    if (v1 == v9)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10096B600();
      swift_release();
      swift_release();
      if (v2 == v9)
      {
        uint64_t v5 = v4 + qword_100ADE750;
        swift_beginAccess();
        if (*(void *)(v5 + 8) || [*(id *)(v4 + 232) hasBufferedEvents])
        {
          uint64_t v6 = v4 + qword_100ADE760;
          *(void *)uint64_t v6 = v1;
          *(void *)(v6 + 8) = v2;
          *(unsigned char *)(v6 + 16) = 0;
        }
        else
        {
          uint64_t v7 = *(void (**)(uint64_t, void *, void, void))(v4 + 16);
          if (v7)
          {
            sub_10002B7CC(&qword_100AD0D48);
            sub_10002B7CC((uint64_t *)&unk_100AD0D50);
            uint64_t v8 = swift_allocObject();
            *(_OWORD *)(v8 + 16) = xmmword_100973BB0;
            swift_storeEnumTagMultiPayload();
            swift_retain();
            v7(v8, _swiftEmptyArrayStorage, 0, 0);
            sub_1000705CC((uint64_t)v7);
            swift_bridgeObjectRelease();
          }
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1008E0EB0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10096B600();
    swift_release();
    swift_release();
    if (v1 == v8)
    {
      uint64_t v4 = v3 + qword_100ADE750;
      swift_beginAccess();
      if (*(void *)(v4 + 8) || [*(id *)(v3 + 232) hasBufferedEvents])
      {
        uint64_t v5 = v3 + qword_100ADE758;
        *(void *)uint64_t v5 = v1;
        *(unsigned char *)(v5 + 8) = 0;
      }
      else
      {
        uint64_t v6 = *(void (**)(uint64_t, void *, void, void))(v3 + 16);
        if (v6)
        {
          sub_10002B7CC(&qword_100AD0D48);
          sub_10002B7CC((uint64_t *)&unk_100AD0D50);
          uint64_t v7 = swift_allocObject();
          *(_OWORD *)(v7 + 16) = xmmword_100973BB0;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v6(v7, _swiftEmptyArrayStorage, 0, 0);
          sub_1000705CC((uint64_t)v6);
          swift_bridgeObjectRelease();
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t VFSFileTree.deviceID.getter()
{
  uint64_t v1 = (void *)swift_retain();
  if (objc_sync_enter(v1)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v0);
  }
  uint64_t v2 = v0[20];
  swift_retain();
  if (objc_sync_exit(v0)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v0);
  }
  swift_release();
  uint64_t v3 = *(unsigned int *)(v2 + 16);
  swift_release();
  return v3;
}

void *sub_1008E113C()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_100ADE768;
  uint64_t v3 = *(void **)(v0 + qword_100ADE768);
  uint64_t v4 = v3;
  if (v3 == (void *)1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v1 + qword_100ADE790);
    if (v5)
    {
      uint64_t v4 = (void *)v5();
      if (v4)
      {
        if (*(void *)(v1 + qword_100ADE788)) {
          NSString v6 = sub_10015A4E8();
        }
        else {
          NSString v6 = 0;
        }
        uint64_t v7 = swift_allocObject();
        *(void *)(v7 + 16) = v6;
        v13[4] = sub_10093CD18;
        v13[5] = v7;
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 1107296256;
        v13[2] = sub_1008D49BC;
        v13[3] = &unk_100AA5AE0;
        uint64_t v8 = _Block_copy(v13);
        id v9 = v6;
        swift_release();
        [v4 setModifyDecoratedPayloadHook:v8 forCategory:1];
        _Block_release(v8);
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v10 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v11 = v4;
    sub_10002D240(v10);
  }
  sub_100078C18(v3);
  return v4;
}

void sub_1008E12B8(int a1, uint64_t a2, id a3, void *a4)
{
  if (a4)
  {
    id v6 = a4;
    if (shouldSendDynamicError(for:)((__C::FPProviderID)v6))
    {
      NSString v7 = sub_10096BC00();
      objc_msgSend(a3, "__swift_setObject:forKeyedSubscript:", v7, sub_10096D3A0());

      swift_unknownObjectRelease();
      if (a2)
      {
        swift_errorRetain();
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        sub_100011348(0, (unint64_t *)&qword_100ACECC0);
        if (swift_dynamicCast())
        {
          id v8 = objc_msgSend(v11, "fp_protectionClassBehindError");
          if (v8)
          {
            id v9 = v8;
            _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            NSString v10 = sub_10096BC00();
            swift_bridgeObjectRelease();
            objc_msgSend(a3, "__swift_setObject:forKeyedSubscript:", v10, sub_10096D3A0());

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
      }

      return;
    }
  }

  [a3 removeAllObjects];
}

uint64_t sub_1008E14B0(unint64_t a1, char a2, void *a3)
{
  int v5 = a2 & 1;
  uint64_t v6 = sub_10096B3D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - v14;
  if (qword_100ACC1D0 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_100B0B650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
  int v45 = v5;
  unint64_t v17 = sub_1008D5640(a1, v5);
  uint64_t v19 = v18;
  sub_10002B70C((uint64_t)v15, (uint64_t)v13, &qword_100AD0830);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  unint64_t v46 = a1;
  if (v20 == 1)
  {
    id v21 = v16;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v13, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
  }
  swift_bridgeObjectRetain();
  sub_10096C780();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v22 = swift_allocObject();
  long long v44 = xmmword_100973BB0;
  *(_OWORD *)(v22 + 16) = xmmword_100973BB0;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_1000240A4();
  *(void *)(v22 + 32) = v17;
  *(void *)(v22 + 40) = v19;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10002B770((uint64_t)v15, &qword_100AD0830);
  uint64_t v24 = (void (*)(uint64_t, uint64_t, void, void))a3[2];
  if (v24)
  {
    BOOL v25 = v45 != 0;
    sub_10002B7CC(&qword_100AD0D48);
    uint64_t v26 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100AD0D50) - 8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v44;
    unint64_t v29 = v28 + v27;
    *(unsigned char *)unint64_t v29 = 0;
    *(void *)(v29 + 8) = v46;
    *(unsigned char *)(v29 + 16) = v25;
    swift_storeEnumTagMultiPayload();
    sub_10002B7CC(&qword_100ACF628);
    uint64_t v30 = *(void *)(type metadata accessor for SyncState() - 8);
    uint64_t v31 = *(void *)(v30 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100973BA0;
    unint64_t v34 = v33 + v32;
    swift_retain();
    *(void *)unint64_t v34 = FSEventsGetCurrentEventId();
    *(unsigned char *)(v34 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    unint64_t v35 = (void *)swift_retain();
    if (objc_sync_enter(v35)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a3);
    }
    uint64_t v36 = a3[20];
    swift_retain();
    if (objc_sync_exit(a3)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a3);
    }
    swift_release();
    uint64_t v37 = v34 + v31;
    v38 = self;
    uint64_t v39 = *(unsigned int *)(v36 + 16);
    swift_release();
    id v40 = [v38 eventStreamUUIDForDevice:v39];
    if (v40)
    {
      NSString v41 = v40;
      sub_10096B140();

      uint64_t v42 = sub_10096B180();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v37, 0, 1, v42);
    }
    else
    {
      uint64_t v43 = sub_10096B180();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v37, 1, 1, v43);
    }
    swift_storeEnumTagMultiPayload();
    v24(v28, v33, 0, 0);
    sub_1000705CC((uint64_t)v24);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*sub_1008E1A98())(uint64_t *, void)
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t result = (void (*)(uint64_t *, void))sub_10096B5F0();
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    result(&v2, 0);
    swift_release();
    return (void (*)(uint64_t *, void))swift_release();
  }
  return result;
}

uint64_t sub_1008E1B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10096B480();
  uint64_t v10 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v78 - v17;
  uint64_t v19 = (void *)swift_retain();
  if (objc_sync_enter(v19)) {
LABEL_40:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v4);
  uint64_t v83 = v3;
  uint64_t v84 = a2;
  uint64_t v81 = v9;
  uint64_t v20 = v4[20];
  swift_retain();
  if (objc_sync_exit(v4)) {
    goto LABEL_41;
  }
  swift_release();
  id v21 = self;
  uint64_t v22 = *(unsigned int *)(v20 + 16);
  swift_release();
  id v23 = [v21 eventStreamUUIDForDevice:v22];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_10096B140();

    uint64_t v25 = sub_10096B180();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
    int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v25);
    uint64_t v28 = v84;
    if (v27 != 1) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v29 = sub_10096B180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
  }
  id v30 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_retain_n();
  uint64_t v31 = sub_10096B470();
  os_log_type_t v32 = sub_10096C5B0();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v78 = a1;
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 67109120;
    unint64_t v34 = (void *)swift_retain();
    if (objc_sync_enter(v34)) {
      goto LABEL_40;
    }
    v79 = v16;
    id v80 = v18;
    uint64_t v35 = v4[20];
    swift_retain();
    if (objc_sync_exit(v4)) {
      goto LABEL_41;
    }
    swift_release();
    int v36 = *(_DWORD *)(v35 + 16);
    swift_release();
    swift_release();
    LODWORD(v85) = v36;
    sub_10096C8C0();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unable to retrieve FSEvent stream UUID for device %d", v33, 8u);
    swift_slowDealloc();

    uint64_t v16 = v79;
    uint64_t v18 = v80;
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v82);
  uint64_t v28 = v84;
LABEL_13:
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v38 = v83;
  uint64_t v39 = sub_100599840(ObjectType, v28);
  if (v38)
  {
LABEL_15:
    uint64_t v43 = (uint64_t)v18;
    return sub_10002B770(v43, (uint64_t *)&unk_100ACAF10);
  }
  id v41 = (id)v39;
  char v42 = v40;
  sub_100599734(ObjectType, v28, (uint64_t)v16);
  if (v42)
  {
    uint64_t v55 = (void *)v4[27];
    uint64_t v56 = sub_10096B7D0();
    uint64_t v57 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v81, 1, 1, v56);
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = 0;
    *(unsigned char *)(v58 + 24) = 1;
    *(void *)(v58 + 32) = v4;
    swift_retain();
    id v59 = v55;
    sub_1003946CC(v59, v57, (void (*)())Filename.init(rawValue:), 0, (uint64_t)sub_10093C2C0, v58);

    swift_release();
    sub_10002B770(v57, (uint64_t *)&unk_100ACF600);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10096B600();
    swift_release();
    swift_release();
    id v41 = v85;
    goto LABEL_24;
  }
  uint64_t v45 = sub_10096B180();
  unint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48);
  if (v46(v16, 1, v45) == 1)
  {
    uint64_t v47 = (void *)v4[27];
    uint64_t v84 = v4[28];
    uint64_t v48 = sub_10096B7D0();
    uint64_t v49 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v81, 1, 1, v48);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = 1;
    *(unsigned char *)(v50 + 24) = 1;
    *(void *)(v50 + 32) = v4;
    swift_retain();
    id v51 = v47;
    v52 = v51;
    uint64_t v53 = v49;
    uint64_t v54 = v50;
  }
  else
  {
    if (v46(v18, 1, v45) != 1) {
      goto LABEL_24;
    }
    uint64_t v60 = (void *)v4[27];
    uint64_t v61 = sub_10096B7D0();
    uint64_t v49 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v81, 1, 1, v61);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = 2;
    *(unsigned char *)(v62 + 24) = 1;
    *(void *)(v62 + 32) = v4;
    swift_retain();
    id v51 = v60;
    v52 = v51;
    uint64_t v53 = v49;
    uint64_t v54 = v62;
  }
  sub_1003946CC(v51, v53, (void (*)())Filename.init(rawValue:), 0, (uint64_t)sub_10093E068, v54);

  swift_release();
  sub_10002B770(v49, (uint64_t *)&unk_100ACF600);
LABEL_24:
  swift_getKeyPath();
  swift_getKeyPath();
  id v85 = v41;
  swift_retain();
  sub_10096B610();
  v63 = (void *)swift_retain();
  if (objc_sync_enter(v63)) {
    goto LABEL_40;
  }
  uint64_t v64 = v4[20];
  swift_retain();
  if (objc_sync_exit(v4)) {
LABEL_41:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v4);
  id v80 = v18;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10096B600();
  swift_release();
  uint64_t v65 = swift_release();
  uint64_t v66 = *(void *)(v64 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  __chkstk_darwin(v65);
  *(&v78 - 4) = v68;
  *(&v78 - 3) = v67;
  *(&v78 - 2) = (uint64_t)v16;
  *(&v78 - 1) = (uint64_t)v4;
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_1008D28F0((void (*)(uint64_t *__return_ptr, uint64_t))sub_10093C320, (uint64_t)(&v78 - 6), v66);
  swift_release();
  swift_bridgeObjectRelease();
  v4[30] = v69;
  swift_bridgeObjectRelease();
  unint64_t v70 = v4[30];
  v79 = v16;
  if (v70 >> 62) {
    goto LABEL_38;
  }
  uint64_t v71 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v71; uint64_t v71 = sub_10096CE70())
  {
    uint64_t v72 = 4;
    while (1)
    {
      id v73 = (v70 & 0xC000000000000001) != 0 ? (id)sub_10096CC30() : *(id *)(v70 + 8 * v72);
      uint64_t v74 = v73;
      uint64_t v75 = v72 - 3;
      if (__OFADD__(v72 - 4, 1)) {
        break;
      }
      id v85 = 0;
      if (![v73 activateWithError:&v85])
      {
        id v77 = v85;
        swift_bridgeObjectRelease();
        sub_10096ABF0();

        swift_willThrow();
        sub_10002B770((uint64_t)v79, (uint64_t *)&unk_100ACAF10);
        uint64_t v18 = v80;
        goto LABEL_15;
      }
      id v76 = v85;

      ++v72;
      if (v75 == v71) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v79, (uint64_t *)&unk_100ACAF10);
  uint64_t v43 = (uint64_t)v80;
  return sub_10002B770(v43, (uint64_t *)&unk_100ACAF10);
}

void sub_1008E25A4()
{
  id v1 = *(id *)(v0 + 216);
  sub_100270A48(0, 0, (uint64_t)"stopEventAggregation()", 22, 2, (uint64_t)sub_10093C26C, v0);
}

uint64_t sub_1008E2630(void *a1)
{
  a1[35] = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v2 = a1[2];
  a1[2] = 0;
  a1[3] = 0;
  sub_1000705CC(v2);
  uint64_t v3 = a1[6];
  a1[6] = 0;
  a1[7] = 0;
  return sub_1000705CC(v3);
}

void sub_1008E2680()
{
  id v1 = *(id *)(v0 + 216);
  sub_100270A48(0, 0, (uint64_t)"cancel()", 8, 2, (uint64_t)sub_10093C250, v0);
}

uint64_t sub_1008E270C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 192);
  swift_bridgeObjectRetain();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_41;
  }
LABEL_2:
  uint64_t v3 = &_swiftEmptySetSingleton;
LABEL_3:
  *(void *)(a1 + 192) = v3;
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_100099C5C((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess();
  uint64_t v25 = a1;
  *(void *)(a1 + 200) = v4;
  swift_bridgeObjectRelease();
  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_10096CAA0();
    sub_100011348(0, (unint64_t *)&unk_100AD6280);
    sub_100345DBC(&qword_100ADF140, (unint64_t *)&unk_100AD6280);
    sub_10096C370();
    uint64_t v2 = v27;
    uint64_t v26 = v28;
    uint64_t v5 = v29;
    uint64_t v6 = v30;
    unint64_t v7 = v31;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
  }
  a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  while ((v2 & 0x8000000000000000) == 0)
  {
    if (v7)
    {
      uint64_t v14 = (v7 - 1) & v7;
      unint64_t v15 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v13 = v6;
    }
    else
    {
      int64_t v16 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_41:
        if (sub_10096CE70())
        {
          sub_10009A4F8((unint64_t)_swiftEmptyArrayStorage);
          goto LABEL_3;
        }
        goto LABEL_2;
      }
      if (v16 >= v11) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v16);
      uint64_t v13 = v6 + 1;
      if (!v17)
      {
        uint64_t v13 = v6 + 2;
        if (v6 + 2 >= v11) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v13);
        if (!v17)
        {
          uint64_t v13 = v6 + 3;
          if (v6 + 3 >= v11) {
            goto LABEL_32;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v13);
          if (!v17)
          {
            uint64_t v13 = v6 + 4;
            if (v6 + 4 >= v11) {
              goto LABEL_32;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v13);
            if (!v17)
            {
              uint64_t v18 = v6 + 5;
              while (v11 != v18)
              {
                unint64_t v17 = *(void *)(v26 + 8 * v18++);
                if (v17)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_28;
                }
              }
              goto LABEL_32;
            }
          }
        }
      }
LABEL_28:
      uint64_t v14 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    }
    id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    if (!v12) {
      goto LABEL_32;
    }
LABEL_30:
    [v12 cancel];

    uint64_t v6 = v13;
    unint64_t v7 = v14;
  }
  if (sub_10096CAD0())
  {
    sub_100011348(0, (unint64_t *)&unk_100AD6280);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v32;
    swift_unknownObjectRelease();
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    if (v32) {
      goto LABEL_30;
    }
  }
LABEL_32:
  sub_1000146B4();
  fp_task_tracker_cancel(*(void **)(*(void *)(v25 + 224) + 16));
  unint64_t v19 = *(void *)(v25 + 240);
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_34;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    *(void *)(v25 + 240) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *(void *)(v25 + qword_100B0B630) = 0;
    swift_release();
    *(void *)(v25 + qword_100B0B638) = 0;
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_10096CE70();
  uint64_t v20 = result;
  if (!result) {
    goto LABEL_44;
  }
LABEL_34:
  if (v20 >= 1)
  {
    for (uint64_t i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v23 = (id)sub_10096CC30();
      }
      else {
        id v23 = *(id *)(v19 + 8 * i + 32);
      }
      uint64_t v24 = v23;
      [v23 dispose];
    }
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

id sub_1008E2B50()
{
  uint64_t v1 = v0;
  fp_task_tracker_wait(*(void *)(*(void *)(v0 + 224) + 16));
  [*(id *)(v0 + 208) waitUntilAllOperationsAreFinished];
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1008D2BA0(v2);
  swift_bridgeObjectRelease();
  id v3 = *(id *)(v0 + 216);
  sub_100270A48(0, 0, (uint64_t)"close()", 7, 2, (uint64_t)Filename.init(rawValue:), 0);

  return [*(id *)(v1 + 232) close];
}

uint64_t sub_1008E2C20(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v150 = a1;
  uint64_t v138 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t v146 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v4 - 8);
  uint64_t v139 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  int64_t v9 = (int64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v149 = (void **)((char *)&v133 - v10);
  uint64_t v11 = sub_10096AE50();
  uint64_t v154 = *(void *)(v11 - 8);
  uint64_t v155 = v11;
  __chkstk_darwin(v11);
  unint64_t v13 = (unint64_t)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B480();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v142 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v148 = (char *)&v133 - v18;
  uint64_t v19 = sub_10096B830();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (unint64_t)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = (void *)v2[27];
  *(void *)unint64_t v22 = v23;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = sub_10096B860();
  (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v25 = (void *)swift_retain();
  if (objc_sync_enter(v25)) {
    goto LABEL_78;
  }
  uint64_t v26 = v2[20];
  swift_retain();
  int v27 = objc_sync_exit(v2);
  uint64_t v28 = v150;
  uint64_t v29 = v148;
  if (v27) {
    goto LABEL_79;
  }
  swift_release();
  uint64_t v30 = *(void *)(v26 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  id v31 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v32 = sub_10096B470();
  int v144 = sub_10096C590();
  BOOL v33 = os_log_type_enabled(v32, (os_log_type_t)v144);
  int64_t v140 = v9;
  if (v33)
  {
    uint64_t v145 = v30;
    os_log_t v134 = v32;
    uint64_t v135 = v15;
    uint64_t v136 = v14;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v133 = (void *)swift_slowAlloc();
    id v158 = v133;
    *(_DWORD *)uint64_t v34 = 136315394;
    int64_t v35 = *(void *)(v28 + 16);
    v143 = v2;
    uint64_t v141 = v34;
    if (v35)
    {
      id v156 = _swiftEmptyArrayStorage;
      sub_100021770(0, v35, 0);
      unint64_t v36 = *(void *)(v154 + 16);
      unint64_t v37 = v28 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      unint64_t v151 = *(void *)(v154 + 72);
      unint64_t v152 = v36;
      uint64_t v153 = (void (*)(unint64_t, uint64_t, uint64_t))(v154 + 16);
      uint64_t v38 = (void (**)(char *, uint64_t))(v154 + 8);
      do
      {
        uint64_t v39 = v155;
        ((void (*)(unint64_t, unint64_t, uint64_t))v152)(v13, v37, v155);
        sub_10096AD20(v40);
        char v42 = v41;
        id v43 = objc_msgSend(v41, "fp_shortDescription", v133);

        uint64_t v44 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v46 = v45;

        (*v38)((char *)v13, v39);
        uint64_t v47 = v156;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100021770(0, v47[2] + 1, 1);
          uint64_t v47 = v156;
        }
        unint64_t v49 = v47[2];
        unint64_t v48 = v47[3];
        if (v49 >= v48 >> 1)
        {
          sub_100021770((char *)(v48 > 1), v49 + 1, 1);
          uint64_t v47 = v156;
        }
        v47[2] = v49 + 1;
        uint64_t v50 = &v47[2 * v49];
        v50[4] = v44;
        v50[5] = v46;
        v37 += v151;
        --v35;
      }
      while (v35);
      uint64_t v2 = v143;
      uint64_t v34 = v141;
    }
    uint64_t v52 = sub_10096C0B0();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    id v156 = (void *)sub_100719D44(v52, v54, (uint64_t *)&v158);
    unint64_t v151 = (unint64_t)&v157;
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v55 = v145;
    int64_t v56 = *(void *)(v145 + 16);
    if (v56)
    {
      id v156 = _swiftEmptyArrayStorage;
      sub_100021770(0, v56, 0);
      uint64_t v57 = *(void (**)(unint64_t, uint64_t, uint64_t))(v154 + 16);
      uint64_t v58 = v55 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      unint64_t v152 = *(void *)(v154 + 72);
      uint64_t v153 = v57;
      v154 += 16;
      id v59 = (void (**)(char *, uint64_t))(v154 - 8);
      do
      {
        uint64_t v60 = v155;
        v153(v13, v58, v155);
        sub_10096AD20(v61);
        v63 = v62;
        id v64 = objc_msgSend(v62, "fp_shortDescription");

        uint64_t v65 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v67 = v66;

        (*v59)((char *)v13, v60);
        uint64_t v68 = v156;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100021770(0, v68[2] + 1, 1);
          uint64_t v68 = v156;
        }
        unint64_t v70 = v68[2];
        unint64_t v69 = v68[3];
        if (v70 >= v69 >> 1)
        {
          sub_100021770((char *)(v69 > 1), v70 + 1, 1);
          uint64_t v68 = v156;
        }
        v68[2] = v70 + 1;
        uint64_t v71 = &v68[2 * v70];
        v71[4] = v65;
        v71[5] = v67;
        v58 += v152;
        --v56;
      }
      while (v56);
      uint64_t v2 = v143;
      uint64_t v34 = v141;
    }
    uint64_t v72 = sub_10096C0B0();
    unint64_t v74 = v73;
    swift_bridgeObjectRelease();
    id v156 = (void *)sub_100719D44(v72, v74, (uint64_t *)&v158);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v75 = v134;
    _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v144, "starting to observe fsevent on %s (was %s)", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v51 = *(void (**)(char *, uint64_t))(v135 + 8);
    uint64_t v14 = v136;
    v51(v148, v136);
    uint64_t v28 = v150;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    id v51 = *(void (**)(char *, uint64_t))(v15 + 8);
    v51(v29, v14);
  }
  id v76 = (void *)swift_retain();
  if (objc_sync_enter(v76)) {
LABEL_78:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v2);
  swift_retain();
  if (objc_sync_exit(v2)) {
LABEL_79:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v2);
  swift_release();
  uint64_t v77 = v147;
  unint64_t v22 = sub_100702DD4(v28, 1);
  LODWORD(v9) = v78;
  uint64_t v80 = v79;
  uint64_t result = swift_release();
  if (v77) {
    return result;
  }
  uint64_t v150 = v80;
  if (v9)
  {
    swift_retain();
    swift_retain();
    sub_100843DDC(v2, (uint64_t)v2, v22);
    sub_100701AF4(*(void **)((char *)v2 + qword_100ADE788));
    uint64_t v148 = 0;
    uint64_t v87 = sub_10096B180();
    uint64_t v88 = *(void *)(v87 - 8);
    uint64_t v154 = *(void *)(v88 + 56);
    uint64_t v155 = v87;
    uint64_t v153 = (void (*)(unint64_t, uint64_t, uint64_t))(v88 + 56);
    ((void (*)(void *, uint64_t, uint64_t))v154)(v149, 1, 1);
    unint64_t v13 = v2[30];
    v2[30] = _swiftEmptyArrayStorage;
    v143 = v2;
    if (v13 >> 62) {
      goto LABEL_74;
    }
    uint64_t v89 = v140;
    uint64_t v90 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      LODWORD(v147) = v9;
      unint64_t v151 = v22;
      if (v90)
      {
        if (v90 < 1) {
          __break(1u);
        }
        uint64_t v91 = 0;
        unint64_t v152 = v13 & 0xC000000000000001;
        uint64_t v92 = (char *)v13;
        uint64_t v93 = (uint64_t)v149;
        do
        {
          if (v152) {
            id v97 = (id)sub_10096CC30();
          }
          else {
            id v97 = *(id *)(v13 + 8 * v91 + 32);
          }
          uint64_t v98 = v97;
          id v99 = objc_msgSend(v97, "eventStreamUUID", v133);
          if (v99)
          {
            v94 = v99;
            uint64_t v95 = v89;
            sub_10096B140();

            uint64_t v96 = 0;
          }
          else
          {
            uint64_t v96 = 1;
            uint64_t v95 = v89;
          }
          ++v91;
          sub_10002B770(v93, (uint64_t *)&unk_100ACAF10);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v154)(v95, v96, 1, v155);
          uint64_t v89 = v95;
          sub_10001AE98(v95, v93, (uint64_t *)&unk_100ACAF10);
          [v98 dispose];

          unint64_t v13 = (unint64_t)v92;
        }
        while (v90 != v91);
      }
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v100 = v143;
      sub_10096B600();
      swift_release();
      uint64_t v101 = swift_release();
      unint64_t v22 = (unint64_t)&v133;
      uint64_t v102 = *(void *)(v151 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
      __chkstk_darwin(v101);
      *(&v133 - 4) = v104;
      *(&v133 - 3) = v103;
      *(&v133 - 2) = v149;
      *(&v133 - 1) = v100;
      swift_bridgeObjectRetain();
      uint64_t v105 = v148;
      v106 = sub_1008D28F0((void (*)(uint64_t *__return_ptr, uint64_t))sub_10093E088, (uint64_t)(&v133 - 6), v102);
      swift_bridgeObjectRelease();
      v100[30] = v106;
      swift_bridgeObjectRelease();
      unint64_t v107 = v100[30];
      uint64_t v148 = v105;
      uint64_t v108 = v100;
      if (v107 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_10096CE70();
        if (v109)
        {
LABEL_46:
          unint64_t v22 = v107 & 0xC000000000000001;
          uint64_t v110 = 4;
          int64_t v9 = (int64_t)&selRef_setBarrierFolderURL_;
          while (1)
          {
            uint64_t v111 = v22 ? (char *)sub_10096CC30() : (char *)*(id *)(v107 + 8 * v110);
            unint64_t v13 = (unint64_t)v111;
            uint64_t v112 = v110 - 3;
            if (__OFADD__(v110 - 4, 1)) {
              break;
            }
            id v158 = 0;
            if (![v111 activateWithError:&v158])
            {
              uint64_t v131 = v158;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10096ABF0();

              swift_willThrow();
              swift_release();

              return sub_10002B770((uint64_t)v149, (uint64_t *)&unk_100ACAF10);
            }
            v113 = v158;

            ++v110;
            if (v112 == v109) {
              goto LABEL_53;
            }
          }
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v109 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v109) {
          goto LABEL_46;
        }
      }
LABEL_53:
      swift_bridgeObjectRelease();
      if ((v147 & 0x100) != 0)
      {
        unint64_t v22 = v108[27];
        uint64_t v114 = sub_10096B7D0();
        uint64_t v115 = (uint64_t)v139;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v139, 1, 1, v114);
        uint64_t v116 = swift_allocObject();
        *(void *)(v116 + 16) = 4;
        *(unsigned char *)(v116 + 24) = 1;
        *(void *)(v116 + 32) = v108;
        swift_retain();
        id v117 = (id)v22;
        sub_1003946CC(v117, v115, (void (*)())Filename.init(rawValue:), 0, (uint64_t)sub_10093E068, v116);

        swift_release();
        sub_10002B770(v115, (uint64_t *)&unk_100ACF600);
      }
      uint64_t v118 = v150;
      int64_t v119 = *(void *)(v150 + 16);
      if (!v119 || (unint64_t v13 = v151, !v108[2]))
      {
        sub_10002B770((uint64_t)v149, (uint64_t *)&unk_100ACAF10);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      uint64_t v153 = (void (*)(unint64_t, uint64_t, uint64_t))v108[2];
      unint64_t v120 = v108[3];
      id v158 = _swiftEmptyArrayStorage;
      unint64_t v152 = v120;
      swift_retain();
      sub_10044607C(0, v119, 0);
      id v121 = v158;
      int64_t v9 = sub_100929CF4(v118);
      int v123 = v122;
      int v125 = v124 & 1;
      uint64_t v154 = v118 + 56;
      uint64_t v126 = (uint64_t)v137;
      while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v118 + 32))
      {
        if (((*(void *)(v154 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_72;
        }
        if (*(_DWORD *)(v118 + 36) != v123) {
          goto LABEL_73;
        }
        LODWORD(v155) = v125;
        *(void *)uint64_t v126 = *(void *)(*(void *)(v118 + 48) + 8 * v9);
        *(unsigned char *)(v126 + 8) = 1;
        *(void *)(v126 + 16) = 4;
        *(unsigned char *)(v126 + 24) = 1;
        swift_storeEnumTagMultiPayload();
        id v158 = v121;
        unint64_t v22 = v121[2];
        unint64_t v127 = v121[3];
        if (v22 >= v127 >> 1)
        {
          sub_10044607C(v127 > 1, v22 + 1, 1);
          id v121 = v158;
        }
        v121[2] = v22 + 1;
        sub_10001AE98(v126, (uint64_t)v121+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v22, (uint64_t *)&unk_100AD0D50);
        int64_t v128 = sub_100929D98(v9, v123, v155 & 1, v118);
        int64_t v9 = v128;
        int v123 = v129;
        int v125 = v130 & 1;
        --v119;
        unint64_t v13 = v151;
        if (!v119)
        {
          sub_100130288(v128, v129, v125);
          swift_bridgeObjectRelease();
          uint64_t v132 = (uint64_t)v153;
          ((void (*)(void *, void *, void, void))v153)(v121, _swiftEmptyArrayStorage, 0, 0);
          swift_release();
          sub_1000705CC(v132);
          swift_release();
          return sub_10002B770((uint64_t)v149, (uint64_t *)&unk_100ACAF10);
        }
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      uint64_t v89 = v140;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_10096CE70();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  id v82 = (id)fpfs_current_or_default_log();
  uint64_t v83 = v142;
  sub_10096B490();
  uint64_t v84 = sub_10096B470();
  os_log_type_t v85 = sub_10096C5A0();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "roots haven't changed", v86, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  return ((uint64_t (*)(char *, uint64_t))v51)(v83, v14);
}

uint64_t VFSFileTree.lookupItem(by:lastKnownVersion:domainVersion:options:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10043E018(a1, a2, a3, 0, a5, a6, a7);
}

uint64_t sub_1008E3D94(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (void *)swift_retain();
  if (objc_sync_enter(v5)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v3);
  }
  swift_retain();
  if (objc_sync_exit(v3)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v3);
  }
  swift_release();
  char v6 = sub_100700E9C(a1 & 1);
  uint64_t result = swift_release();
  if (!v2 && (v6 & 1) != 0)
  {
    uint64_t v8 = (void (*)(uint64_t, void *, void, void))v3[2];
    if (v8)
    {
      sub_10002B7CC(&qword_100AD0D48);
      uint64_t v9 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100AD0D50) - 8);
      unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_100973BB0;
      unint64_t v12 = v11 + v10;
      uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
      unint64_t v14 = v12 + *(int *)(v13 + 48);
      uint64_t v15 = *(int *)(v13 + 64);
      *(void *)unint64_t v12 = 1;
      *(unsigned char *)(v12 + 8) = 2;
      uint64_t v16 = type metadata accessor for VFSItem(0);
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
      *(void *)(v12 + v15) = 0;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v8(v11, _swiftEmptyArrayStorage, 0, 0);
      sub_1000705CC((uint64_t)v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1008E3FC4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = a1;
  if (a2)
  {
    if (a2 != 1)
    {
      uint64_t v9 = (void *)swift_retain();
      int v10 = objc_sync_enter(v9);
      if (v7)
      {
        if (!v10)
        {
          swift_retain();
          if (objc_sync_exit(v5)) {
            goto LABEL_34;
          }
          swift_release();
          char v11 = sub_100700E9C(1);
          swift_release();
          if (v11)
          {
            uint64_t v19 = (void (*)(uint64_t, void *, void, void))v5[2];
            if (v19)
            {
              sub_10002B7CC(&qword_100AD0D48);
              uint64_t v20 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100AD0D50) - 8);
              unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
              uint64_t v22 = swift_allocObject();
              *(_OWORD *)(v22 + 16) = xmmword_100973BB0;
              unint64_t v23 = v22 + v21;
              uint64_t v24 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
              unint64_t v25 = v23 + *(int *)(v24 + 48);
              uint64_t v26 = *(int *)(v24 + 64);
              *(void *)unint64_t v23 = 1;
              *(unsigned char *)(v23 + 8) = 2;
              uint64_t v27 = type metadata accessor for VFSItem(0);
              (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
              *(void *)(v23 + v26) = 0;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v19(v22, _swiftEmptyArrayStorage, 0, 0);
              sub_1000705CC((uint64_t)v19);
              swift_bridgeObjectRelease();
            }
          }
          uint64_t v28 = (void *)swift_retain();
          if (!objc_sync_enter(v28))
          {
            uint64_t v29 = v5[20];
            swift_retain();
            if (objc_sync_exit(v5)) {
              goto LABEL_34;
            }
            swift_release();
            uint64_t v7 = *(void *)(v29 + 40);
            int v30 = *(unsigned __int8 *)(v29 + 48);
            swift_release();
            if (v30) {
              uint64_t v7 = 0;
            }
            id v31 = (void *)swift_retain();
            if (!objc_sync_enter(v31))
            {
              uint64_t v32 = v5[20];
              swift_retain();
              if (!objc_sync_exit(v5))
              {
                swift_release();
                uint64_t v18 = *(void *)(v32 + 24);
                uint64_t result = swift_release();
                int v12 = 0;
                int v16 = 0;
                uint64_t v17 = 0;
                uint64_t v15 = 0;
                goto LABEL_32;
              }
LABEL_34:
              sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v5);
            }
          }
        }
LABEL_33:
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v5);
      }
      if (v10) {
        goto LABEL_33;
      }
      uint64_t v13 = v5[20];
      swift_retain();
      if (objc_sync_exit(v5)) {
        goto LABEL_34;
      }
      swift_release();
      uint64_t v7 = *(void *)(v13 + 24);
      swift_release();
    }
    int v12 = 0;
  }
  else
  {
    int v12 = a1;
    uint64_t v7 = 0;
  }
  uint64_t result = sub_10001AE98(a3, (uint64_t)&v34, (uint64_t *)&unk_100AD6BC0);
  uint64_t v15 = v39;
  if (v39)
  {
    int v16 = v35;
    uint64_t v17 = v38;
    if (!v7) {
      uint64_t v7 = v34;
    }
    memset(v40, 0, sizeof(v40));
    sub_1008E3FC4(v33, v36, v37, v40);
    sub_10021E550((uint64_t)v33);
    uint64_t v18 = v33[0];
    if (v7)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v7 = 0;
      goto LABEL_32;
    }
LABEL_35:
    sub_100713A94((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 531, sub_100047098);
  }
  int v16 = 0;
  uint64_t v18 = 0;
  uint64_t v17 = 0;
  uint64_t v15 = 0;
  if (!v7 && !v12) {
    goto LABEL_35;
  }
LABEL_32:
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v18;
  *(_DWORD *)(a4 + 16) = v12;
  *(_DWORD *)(a4 + 20) = v16;
  *(void *)(a4 + 24) = v17;
  *(void *)(a4 + 32) = v15;
  return result;
}

void sub_1008E43D0(Swift::UInt64 a1, char a2, int a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  if (*(void *)(v3[32] + 16) && (sub_10031F858(a1, a2), (v8 & 1) != 0))
  {
    sub_10093CCE4((uint64_t)&aBlock);
  }
  else
  {
    uint64_t flock_type = fpfs_get_flock_type();
    int v10 = (void (*)(void ***, uint64_t, void))v3[6];
    if (v10)
    {
      uint64_t v11 = flock_type;
      aBlock = (void **)a1;
      LOBYTE(v26) = a2;
      swift_retain();
      v10(&aBlock, v11, 0);
      sub_1000705CC((uint64_t)v10);
    }
    int v12 = (void *)v3[27];
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    *(unsigned char *)(v14 + 32) = a2;
    uint64_t v29 = sub_10093CCD8;
    uint64_t v30 = v14;
    aBlock = _NSConcreteStackBlock;
    uint64_t v26 = 1107296256;
    uint64_t v27 = sub_100020480;
    uint64_t v28 = &unk_100AA5A68;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = v12;
    swift_release();
    uint64_t v17 = sub_100090AC0(a3, v16, v15);
    _Block_release(v15);

    if (v17)
    {
      uint64_t v18 = v4[33];
      uint64_t v19 = v17;
      dispatch_group_enter(v18);
      swift_beginAccess();
      uint64_t v20 = v19;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v4[32];
      v4[32] = 0x8000000000000000;
      sub_10038D018((uint64_t)v20, a1, a2, isUniquelyReferenced_nonNull_native);
      v4[32] = v24;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_10093CCE4((uint64_t)&aBlock);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)&aBlock, v22, (uint64_t *)&unk_100ACD9A0);
      swift_willThrow();

      return;
    }
    sub_10093AF70((uint64_t)&aBlock);
  }
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  swift_allocError();
  sub_10001AE98((uint64_t)&aBlock, v23, (uint64_t *)&unk_100ACD9A0);
  swift_willThrow();
}

uint64_t sub_1008E46EC(uint64_t a1, Swift::UInt64 a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    swift_beginAccess();
    uint64_t v7 = (void *)sub_1009177F8(a2, a3);
    swift_endAccess();
    if (v7)
    {
      dispatch_group_leave(*(dispatch_group_t *)(v6 + 264));
      sub_100011348(0, (unint64_t *)&qword_100ACB010);
      sub_10096C720();
    }
    char v8 = *(void (**)(Swift::UInt64 *, uint64_t, uint64_t))(v6 + 48);
    if (v8)
    {
      Swift::UInt64 v9 = a2;
      char v10 = a3;
      swift_retain();
      v8(&v9, 3, 1);
      sub_1000705CC((uint64_t)v8);
    }
    return swift_release();
  }
  return result;
}

uint64_t VFSFileTree.lookupItem(by:options:)@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (void *)((char *)v3 + qword_100B0B640);
  swift_beginAccess();
  if (*v7 == -1)
  {
    __break(1u);
LABEL_6:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v3);
  }
  ++*v7;
  char v8 = (void *)swift_retain();
  if (objc_sync_enter(v8)) {
    goto LABEL_6;
  }
  uint64_t v9 = v3[20];
  swift_retain();
  if (objc_sync_exit(v3)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v3);
  }
  swift_release();
  type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  static VFSFileTree.lookupItem(by:lookupScope:lookupCache:pkgItemsLookupPolicy:options:)(a1, a2, v9, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t VFSFileTree.lookupItem(at:pkgItemsLookupPolicy:options:openOptions:)@<X0>(unsigned int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v5 = (void *)((char *)v2 + qword_100B0B640);
  swift_beginAccess();
  if (*v5 == -1)
  {
    __break(1u);
LABEL_6:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v2);
  }
  ++*v5;
  uint64_t v6 = (void *)swift_retain();
  if (objc_sync_enter(v6)) {
    goto LABEL_6;
  }
  uint64_t v7 = v2[20];
  swift_retain();
  if (objc_sync_exit(v2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v2);
  }
  swift_release();
  type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v7, a1, a2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t VFSFileTree.lookupItem(at:pkgItemsLookupPolicy:options:openOptions:)@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  sub_10096AE10();
  uint64_t v5 = (void *)((char *)v2 + qword_100B0B640);
  swift_beginAccess();
  if (*v5 == -1)
  {
    __break(1u);
LABEL_6:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v2);
  }
  ++*v5;
  uint64_t v6 = (void *)swift_retain();
  if (objc_sync_enter(v6)) {
    goto LABEL_6;
  }
  uint64_t v7 = v2[20];
  swift_retain();
  if (objc_sync_exit(v2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v2);
  }
  swift_release();
  type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1008E4C34(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v178 = a8;
  int v180 = a4;
  uint64_t v181 = a3;
  uint64_t v13 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v13 - 8);
  id v156 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10096AC80();
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v155 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10096AE50();
  uint64_t v158 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  id v159 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v161 = (uint64_t)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v148 - v21;
  __chkstk_darwin(v20);
  uint64_t v162 = (uint64_t)&v148 - v23;
  uint64_t v164 = sub_10096B0E0();
  uint64_t v163 = *(void *)(v164 - 8);
  uint64_t v24 = __chkstk_darwin(v164);
  uint64_t v160 = (char *)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v171 = (char *)&v148 - v26;
  uint64_t v167 = sub_10096A7B0();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v165 = (char *)&v148 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10096B480();
  uint64_t v169 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  v172 = (char *)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v168 = (char *)&v148 - v31;
  uint64_t v32 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v32 - 8);
  v179 = (char *)&v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10002B7CC(&qword_100AD5650);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v148 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = v28;
  if (a1 && (type metadata accessor for VFSLookupItemContinuation(), (uint64_t v37 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v38 = v37;
    swift_retain();
  }
  else
  {
    type metadata accessor for VFSLookupItemContinuation();
    uint64_t v39 = swift_allocObject();
    uint64_t v38 = sub_10016CF9C(v39);
    swift_release();
  }
  char v40 = v180;
  sub_1008E3FC4(v181, v180, a5, (uint64_t)&v193);
  uint64_t v41 = v193;
  if (v40 == 2 && v181 == 1 && !v193)
  {
    char v42 = (void *)swift_retain();
    if (objc_sync_enter(v42)) {
      goto LABEL_116;
    }
    uint64_t v43 = a2[20];
    swift_retain();
    if (objc_sync_exit(a2)) {
      goto LABEL_117;
    }
    swift_release();
    char v44 = *(unsigned char *)(v43 + 49);
    swift_release();
    if (v44)
    {
      sub_10021E550((uint64_t)&v193);
      uint64_t v45 = type metadata accessor for VFSItem(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v36, 1, 1, v45);
      sub_10002B7CC(&qword_100AD5658);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      a6(v36);
      swift_release();
      uint64_t v46 = &qword_100AD5650;
      uint64_t v47 = (uint64_t)v36;
      return sub_10002B770(v47, v46);
    }
  }
  uint64_t v150 = v22;
  uint64_t v48 = a7;
  unint64_t v49 = (void *)swift_retain();
  if (objc_sync_enter(v49)) {
LABEL_116:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  uint64_t v175 = v41;
  uint64_t v50 = (void (*)(uint64_t))a6;
  uint64_t v176 = v34;
  v173 = (uint64_t *)v36;
  uint64_t v177 = v38;
  uint64_t v51 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_117;
  }
  v174 = a2;
  swift_release();
  unsigned int v52 = *(_DWORD *)(v51 + 16);
  uint64_t v53 = swift_release();
  __chkstk_darwin(v53);
  uint64_t v146 = (uint64_t *)(v52 | 0x20800000000000);
  v191 = 0;
  uint64_t v192 = 0;
  uint64_t v54 = v194;
  uint64_t v55 = v175;
  *(void *)&long long v189 = v175;
  *((void *)&v189 + 1) = v194;
  uint64_t v57 = v195;
  unsigned int v56 = HIDWORD(v195);
  unint64_t v190 = v195;
  sub_10001AE98((uint64_t)v196, (uint64_t)v197, &qword_100ADF5E0);
  uint64_t v58 = sub_10001AE98((uint64_t)v197, (uint64_t)v200, &qword_100ADF5E0);
  if (v200[1])
  {
    uint64_t v149 = v54;
    uint64_t v151 = v57;
    uint64_t v152 = v48;
    uint64_t v59 = __chkstk_darwin(v58);
    *(&v148 - 4) = (uint64_t)&v189;
    *(&v148 - 3) = (uint64_t)sub_10043F5DC;
    uint64_t v146 = &v148 - 4;
    if ((v61 & 0x1000000000000000) != 0 || !(v61 & 0x2000000000000000 | v60 & 0x1000000000000000))
    {
      sub_10096CBC0();
      uint64_t v65 = (uint64_t)v179;
      a2 = v174;
LABEL_21:
      sub_10021E550((uint64_t)&v193);
LABEL_26:
      int v69 = LODWORD(v182);
      unint64_t v70 = v50;
LABEL_27:
      uint64_t v72 = (void *)swift_retain();
      if (!objc_sync_enter(v72))
      {
        uint64_t v73 = a2[20];
        swift_retain();
        if (!objc_sync_exit(a2))
        {
          swift_release();
          type metadata accessor for VFSFileTree(0);
          swift_unknownObjectWeakLoadStrong();
          uint64_t v146 = 0;
          sub_100438EE8(v73, v65);
          swift_release();
          swift_unknownObjectRelease();
          uint64_t v74 = (uint64_t)v173;
          if ((v69 & 0x80000000) == 0) {
            close(v69);
          }
          sub_10002B70C(v65, v74, &qword_100ACB910);
          sub_10002B7CC(&qword_100AD5658);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          v70(v74);
          swift_release();
          sub_10002B770(v74, &qword_100AD5650);
          uint64_t v47 = v65;
          uint64_t v46 = &qword_100ACB910;
          return sub_10002B770(v47, v46);
        }
LABEL_117:
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
      }
      goto LABEL_116;
    }
    __chkstk_darwin(v59);
    uint64_t v146 = (uint64_t *)sub_10043F5F4;
    uint64_t v147 = v64;
    uint64_t v65 = (uint64_t)v179;
    a2 = v174;
    if ((v63 & 0x2000000000000000) == 0)
    {
      if ((v62 & 0x1000000000000000) != 0)
      {
        uint64_t v66 = (v63 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v67 = v62 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v66 = sub_10096CC90();
      }
      LODWORD(v182) = sub_100441D24(v66, v67, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
      goto LABEL_21;
    }
    uint64_t v198 = v62;
    uint64_t v199 = v63 & 0xFFFFFFFFFFFFFFLL;
    v191 = &v198;
    long long v185 = v189;
    unint64_t v186 = v190;
    v187 = &v198;
    uint64_t v188 = v192;
    int v71 = fpfs_openfdbyhandle();
    if ((v71 & 0x80000000) == 0)
    {
      LODWORD(v182) = v71;
      sub_10021E550((uint64_t)&v193);
      goto LABEL_26;
    }
    int v78 = sub_10096B4D0();
    uint64_t v76 = sub_1005970E0(v78, 0, 0, 0xAu);
    swift_willThrow();
    uint64_t v77 = (char *)v50;
  }
  else
  {
    v191 = 0;
    *(void *)&long long v185 = v55;
    *((void *)&v185 + 1) = v54;
    unint64_t v186 = __PAIR64__(v56, v57);
    uint64_t v188 = 0;
    v187 = 0;
    int v68 = fpfs_openfdbyhandle();
    if ((v68 & 0x80000000) == 0)
    {
      int v69 = v68;
      unint64_t v70 = v50;
      uint64_t v65 = (uint64_t)v179;
      a2 = v174;
      goto LABEL_27;
    }
    uint64_t v149 = v54;
    uint64_t v151 = v57;
    int v75 = sub_10096B4D0();
    uint64_t v76 = sub_1005970E0(v75, 0, 0, 0xAu);
    swift_willThrow();
    uint64_t v77 = (char *)v50;
    a2 = v174;
  }
  swift_errorRetain();
  LODWORD(v189) = sub_10096A710();
  sub_100045CB4();
  char v79 = sub_10096AA60();
  swift_errorRelease();
  uint64_t v80 = v171;
  if ((v79 & 1) == 0)
  {
    swift_errorRetain();
    LODWORD(v189) = sub_10096A6C0();
    char v89 = sub_10096AA60();
    swift_errorRelease();
    id v82 = v172;
    if (v89)
    {
      swift_errorRelease();
      uint64_t v81 = v177;
      goto LABEL_48;
    }
    swift_errorRetain();
    LODWORD(v189) = sub_10096A680();
    char v92 = sub_10096AA60();
    swift_errorRelease();
    if (v92)
    {
      swift_errorRelease();
      uint64_t v81 = v177;
      *(unsigned char *)(v177 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_hasSeenBusy) = 1;
      goto LABEL_48;
    }
    swift_errorRetain();
    LODWORD(v189) = sub_10096A740();
    char v111 = sub_10096AA60();
    swift_errorRelease();
    if (v111)
    {
      swift_errorRelease();
      uint64_t v81 = v177;
      v94 = (char *)(v177 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale);
      if (*(unsigned char *)(v177 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale) != 2) {
        goto LABEL_50;
      }
      char v93 = 1;
LABEL_49:
      char *v94 = v93;
LABEL_50:
      sub_10021E550((uint64_t)&v193);
      if (!v151
        || !v149
        || (sub_10001AE98((uint64_t)v197, (uint64_t)&v185, &qword_100ADF5E0), !*((void *)&v185 + 1))
        || (sub_10096B060(), v95 >= -0.5))
      {
        sub_10096B060();
        if (v96 > -5.0)
        {
          uint64_t v97 = *(void *)(v81 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff);
          if (__OFADD__(v97, -5000000000))
          {
            __break(1u);
          }
          else
          {
            if (v97 - 5000000000 > 0) {
              uint64_t v97 = 5000000000;
            }
            if (v97 + 0x4000000000000000 >= 0)
            {
              *(void *)(v81 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff) = 2 * v97;
              uint64_t v91 = v173;
              uint64_t *v173 = v81;
              sub_10002B7CC(&qword_100AD5658);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              swift_retain();
              goto LABEL_60;
            }
          }
          __break(1u);
          goto LABEL_114;
        }
        char v99 = *v94;
        id v100 = (id)fpfs_current_or_default_log();
        if ((v99 & 1) == 0)
        {
          sub_10096B490();
          swift_retain_n();
          uint64_t v101 = sub_10096B470();
          os_log_type_t v102 = sub_10096C5C0();
          if (os_log_type_enabled(v101, v102))
          {
            v179 = v77;
            uint64_t v103 = swift_slowAlloc();
            uint64_t v184 = swift_slowAlloc();
            *(_DWORD *)uint64_t v103 = 136315650;
            uint64_t v104 = VFSItemID.parseableString.getter(v181, v180);
            double v182 = COERCE_DOUBLE(sub_100719D44(v104, v105, &v184));
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v103 + 12) = 2048;
            sub_10096B060();
            double v182 = -v106;
            uint64_t v107 = v177;
            sub_10096C8C0();
            swift_release_n();
            *(_WORD *)(v103 + 22) = 2080;
            uint64_t v108 = *(void *)(v107 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff);
            if (v108 < 0)
            {
              BOOL v138 = __OFSUB__(0, v108);
              uint64_t v108 = -v108;
              if (v138)
              {
LABEL_114:
                __break(1u);
LABEL_115:
                __break(1u);
              }
              unint64_t v110 = 0xE100000000000000;
              uint64_t v109 = 45;
            }
            else
            {
              *(double *)&uint64_t v109 = 0.0;
              unint64_t v110 = 0xE000000000000000;
            }
            v201._countAndFlagsBits = sub_10063AA90(v108);
            double v182 = *(double *)&v109;
            unint64_t v183 = v110;
            sub_10096BDC0(v201);
            swift_bridgeObjectRelease();
            double v182 = COERCE_DOUBLE(sub_100719D44(*(uint64_t *)&v182, v183, &v184));
            sub_10096C8C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v101, v102, "⏲  lookup of %s timed out after %f (backoff: %sns)", (uint8_t *)v103, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v169 + 8))(v172, v170);
            uint64_t v77 = v179;
          }
          else
          {

            swift_release_n();
            (*(void (**)(char *, uint64_t))(v169 + 8))(v82, v170);
          }
          LODWORD(v182) = 60;
          sub_100042898((uint64_t)_swiftEmptyArrayStorage);
          sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          uint64_t v139 = v165;
          uint64_t v140 = v167;
          sub_10096ABD0();
          uint64_t v141 = sub_10096A790();
          (*(void (**)(char *, uint64_t))(v166 + 8))(v139, v140);
          uint64_t v142 = v173;
          uint64_t *v173 = v141;
          swift_storeEnumTagMultiPayload();
          ((void (*)(uint64_t *))v77)(v142);
          swift_release();
          uint64_t v46 = &qword_100AD5650;
          uint64_t v47 = (uint64_t)v142;
          return sub_10002B770(v47, v46);
        }
        uint64_t v112 = v168;
        sub_10096B490();
        swift_retain_n();
        v113 = sub_10096B470();
        os_log_type_t v114 = sub_10096C5C0();
        if (os_log_type_enabled(v113, v114))
        {
          v179 = v77;
          uint64_t v115 = swift_slowAlloc();
          uint64_t v184 = swift_slowAlloc();
          *(_DWORD *)uint64_t v115 = 136315650;
          uint64_t v116 = VFSItemID.parseableString.getter(v181, v180);
          double v182 = COERCE_DOUBLE(sub_100719D44(v116, v117, &v184));
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v115 + 12) = 2048;
          sub_10096B060();
          double v182 = -v118;
          uint64_t v119 = v177;
          sub_10096C8C0();
          swift_release_n();
          *(_WORD *)(v115 + 22) = 2080;
          uint64_t v120 = *(void *)(v119 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff);
          if (v120 < 0)
          {
            BOOL v138 = __OFSUB__(0, v120);
            uint64_t v120 = -v120;
            if (v138) {
              goto LABEL_115;
            }
            unint64_t v122 = 0xE100000000000000;
            uint64_t v121 = 45;
          }
          else
          {
            *(double *)&uint64_t v121 = 0.0;
            unint64_t v122 = 0xE000000000000000;
          }
          v202._countAndFlagsBits = sub_10063AA90(v120);
          double v182 = *(double *)&v121;
          unint64_t v183 = v122;
          sub_10096BDC0(v202);
          swift_bridgeObjectRelease();
          double v182 = COERCE_DOUBLE(sub_100719D44(*(uint64_t *)&v182, v183, &v184));
          sub_10096C8C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v113, v114, "⏲  lookup of %s timed out after %f (backoff: %sns), item is stale, consider it's dead", (uint8_t *)v115, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v170);
          uint64_t v77 = v179;
        }
        else
        {

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v169 + 8))(v112, v170);
        }
      }
LABEL_45:
      uint64_t v90 = type metadata accessor for VFSItem(0);
      uint64_t v91 = v173;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v173, 1, 1, v90);
      sub_10002B7CC(&qword_100AD5658);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
LABEL_60:
      ((void (*)(uint64_t *))v77)(v91);
      swift_release();
LABEL_61:
      uint64_t v46 = &qword_100AD5650;
      uint64_t v47 = (uint64_t)v91;
      return sub_10002B770(v47, v46);
    }
    swift_errorRetain();
    LODWORD(v189) = sub_10096A6B0();
    if ((sub_10096AA60() & 1) == 0)
    {
      LODWORD(v189) = sub_10096A6A0();
      if ((sub_10096AA60() & 1) == 0)
      {
        sub_10021E550((uint64_t)&v193);
        swift_errorRelease();
        uint64_t v91 = v173;
        uint64_t *v173 = v76;
        swift_storeEnumTagMultiPayload();
        swift_errorRetain();
        ((void (*)(uint64_t *))v77)(v91);
        swift_release();
        swift_errorRelease();
        goto LABEL_61;
      }
    }
    swift_errorRelease();
    sub_10021E550((uint64_t)&v193);
    *(void *)&long long v189 = 0;
    if (!v151) {
      goto LABEL_79;
    }
    int v123 = (void *)swift_retain();
    if (objc_sync_enter(v123)) {
      goto LABEL_116;
    }
    swift_retain();
    if (objc_sync_exit(a2)) {
      goto LABEL_117;
    }
    swift_release();
    swift_release();
    if (GSLibraryResolveDocumentId2())
    {
LABEL_79:
      char v124 = (void *)swift_retain();
      if (objc_sync_enter(v124)) {
        goto LABEL_116;
      }
      swift_retain();
      if (objc_sync_exit(a2)) {
        goto LABEL_117;
      }
      swift_release();
      swift_release();
      if ((fpfs_fsgetpath() & 0x80000000) != 0)
      {
        if (sub_10096B4D0() == 13 || sub_10096B4D0() == 1)
        {
          uint64_t v143 = type metadata accessor for VFSItem(0);
          uint64_t v144 = (uint64_t)v173;
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v173, 1, 1, v143);
          sub_10002B7CC(&qword_100AD5658);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
LABEL_104:
          ((void (*)(uint64_t))v77)(v144);
          sub_10002B770(v144, &qword_100AD5650);
LABEL_107:
          if ((void)v189) {
            swift_slowDealloc();
          }
          swift_errorRelease();
          return swift_release();
        }
      }
      else if ((void)v189)
      {
        sub_10096BDE0();
        (*(void (**)(char *, void, uint64_t))(v153 + 104))(v155, enum case for URL.DirectoryHint.notDirectory(_:), v154);
        uint64_t v125 = v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v156, 1, 1, v157);
        sub_10096AE30();
        uint64_t v126 = (void *)swift_retain();
        if (objc_sync_enter(v126)) {
          goto LABEL_116;
        }
        uint64_t v127 = a2[20];
        swift_retain();
        if (objc_sync_exit(a2)) {
          goto LABEL_117;
        }
        swift_release();
        uint64_t v128 = *(void *)(v127 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v129 = v159;
        char v130 = sub_100846178(v128);
        swift_bridgeObjectRelease();
        if (v130)
        {
          uint64_t v131 = (uint64_t)v173;
          uint64_t *v173 = v76;
          swift_storeEnumTagMultiPayload();
          swift_errorRetain();
        }
        else
        {
          uint64_t v145 = type metadata accessor for VFSItem(0);
          uint64_t v131 = (uint64_t)v173;
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v173, 1, 1, v145);
          sub_10002B7CC(&qword_100AD5658);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
        }
        ((void (*)(uint64_t))v77)(v131);
        sub_10002B770(v131, &qword_100AD5650);
        (*(void (**)(char *, uint64_t))(v158 + 8))(v129, v125);
        goto LABEL_107;
      }
    }
    uint64_t v144 = (uint64_t)v173;
    uint64_t *v173 = v76;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    goto LABEL_104;
  }
  swift_errorRelease();
  uint64_t v81 = v177;
  id v82 = v172;
  if ((v178 & 0x200) != 0
    || (*(unsigned char *)(v177 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_hasSeenBusy) & 1) != 0
    || !v151)
  {
    sub_10021E550((uint64_t)&v193);
    goto LABEL_45;
  }
  if (v149)
  {
    sub_10001AE98((uint64_t)v197, (uint64_t)&v198, &qword_100ADF5E0);
    if (v199) {
      goto LABEL_48;
    }
  }
  uint64_t v83 = v81 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;
  swift_beginAccess();
  uint64_t v84 = v162;
  sub_10002B70C(v83, v162, (uint64_t *)&unk_100ACB5E0);
  uint64_t v85 = v163;
  uint64_t v86 = v164;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v84, 1, v164) == 1)
  {
    sub_10002B770(v84, (uint64_t *)&unk_100ACB5E0);
    uint64_t v87 = (uint64_t)v150;
    sub_10096B0D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v86);
    uint64_t v88 = v161;
    sub_10001AE98(v87, v161, (uint64_t *)&unk_100ACB5E0);
    swift_beginAccess();
    sub_1000148B8(v88, v83, (uint64_t *)&unk_100ACB5E0);
    swift_endAccess();
LABEL_48:
    char v93 = 0;
    v94 = (char *)(v81 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale);
    goto LABEL_49;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v80, v84, v86);
  uint64_t v132 = v160;
  sub_10096B0D0();
  sub_10096B010();
  double v134 = v133;
  uint64_t v135 = *(void (**)(char *, uint64_t))(v85 + 8);
  v135(v132, v86);
  if (v134 <= 2.0)
  {
    v135(v80, v86);
    goto LABEL_48;
  }
  sub_10021E550((uint64_t)&v193);
  uint64_t v136 = type metadata accessor for VFSItem(0);
  uint64_t v137 = (uint64_t)v173;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v173, 1, 1, v136);
  sub_10002B7CC(&qword_100AD5658);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  ((void (*)(uint64_t))v77)(v137);
  swift_release();
  sub_10002B770(v137, &qword_100AD5650);
  return ((uint64_t (*)(char *, uint64_t))v135)(v80, v86);
}

void sub_1008E692C(Swift::UInt64 a1, char a2, unint64_t a3, char a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v46 = a5;
  uint64_t v13 = sub_10096B830();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (void *)v7[27];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (!v33) {
      goto LABEL_18;
    }
    goto LABEL_4;
  }
  if (a3 >> 62) {
    goto LABEL_17;
  }
  if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    v46(0, 0);
    return;
  }
LABEL_4:
  if (a4) {
    goto LABEL_18;
  }
  id v19 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  if (v7[23])
  {
    NSString v20 = sub_10096BC00();
    [v19 setPurposeIdentifier:v20];
  }
  swift_beginAccess();
  id v21 = v19;
  sub_100496C34(v47, v21);
  swift_endAccess();

  if (a2 == -1) {
    goto LABEL_22;
  }
  uint64_t v22 = (id *)(v7 + 25);
  swift_beginAccess();
  if (*(void *)(v7[25] + 16))
  {
    sub_10031F858(a1, a2);
    if (v23)
    {
      uint64_t v24 = sub_1008DF56C();
      uint64_t v25 = sub_1008D4900(v47, a1, a2);
      if (*v26)
      {
        sub_100496C34(&v48, v21);
        ((void (*)(id *, void))v25)(v47, 0);
        ((void (*)(void *, void))v24)(aBlock, 0);
      }
      else
      {
        ((void (*)(id *, void))v25)(v47, 0);
        ((void (*)(void *, void))v24)(aBlock, 0);
      }
      goto LABEL_22;
    }
  }
  sub_10002B7CC(&qword_100ACAF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100974D40;
  *(void *)(inited + 32) = v21;
  aBlock[0] = inited;
  sub_10096C0C0();
  unint64_t v28 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    id v34 = v21;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_14;
    }
LABEL_20:
    uint64_t v32 = &_swiftEmptySetSingleton;
    goto LABEL_21;
  }
  uint64_t v29 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v30 = v21;
  if (!v29) {
    goto LABEL_20;
  }
LABEL_14:
  sub_10009A4F8(v28);
  uint64_t v32 = v31;
LABEL_21:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47[0] = *v22;
  *uint64_t v22 = (id)0x8000000000000000;
  sub_10038D164((uint64_t)v32, a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v22 = v47[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_22:
  id v37 = (id)fpfs_current_log();
  sub_100011348(0, &qword_100AD88E0);
  Class isa = sub_10096C080().super.isa;
  uint64_t v39 = (void *)v7[26];
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v37;
  *(void *)(v40 + 24) = v7;
  *(void *)(v40 + 32) = v21;
  *(void *)(v40 + 40) = a1;
  *(unsigned char *)(v40 + 48) = a2;
  *(void *)(v40 + 56) = v46;
  *(void *)(v40 + 64) = a6;
  aBlock[4] = sub_100938EB4;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000072D0;
  aBlock[3] = &unk_100AA5A18;
  uint64_t v41 = _Block_copy(aBlock);
  id v42 = v21;
  id v43 = v39;
  id v44 = v37;
  swift_retain();
  swift_retain();
  swift_release();
  [v42 coordinateAccessWithIntents:isa queue:v43 byAccessor:v41];
  _Block_release(v41);
}

void sub_1008E6E68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, Swift::UInt64 a5, char a6, void (*a7)(void *, uint64_t))
{
  int v12 = ~a6;
  id v13 = (id)fpfs_adopt_log();
  swift_beginAccess();
  uint64_t v14 = (void *)sub_100927388(a4, (unint64_t *)&unk_100AD6280, (uint64_t)NSFileCoordinator_ptr, (uint64_t *)&unk_100ACCC20);
  swift_endAccess();

  if (v12)
  {
    uint64_t v15 = sub_1008DF56C();
    uint64_t v16 = sub_1008D4900(v33, a5, a6);
    if (*v17)
    {
      id v18 = (void *)sub_100927388(a4, (unint64_t *)&unk_100AD6280, (uint64_t)NSFileCoordinator_ptr, (uint64_t *)&unk_100ACCC20);
      ((void (*)(void *, void))v16)(v33, 0);
      ((void (*)(unsigned char *, void))v15)(v34, 0);
    }
    else
    {
      ((void (*)(void *, void))v16)(v33, 0);
      ((void (*)(unsigned char *, void))v15)(v34, 0);
    }
    id v19 = (uint64_t *)(a3 + 200);
    swift_beginAccess();
    uint64_t v20 = *(void *)(a3 + 200);
    if (*(void *)(v20 + 16))
    {
      unint64_t v21 = sub_10031F858(a5, a6);
      if (v22)
      {
        uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
        if ((v23 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_10096CAB0();
          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_16;
          }
        }
        else if (*(void *)(v23 + 16))
        {
          goto LABEL_16;
        }
        swift_beginAccess();
        unint64_t v25 = sub_10031F858(a5, a6);
        if (v26)
        {
          unint64_t v27 = v25;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v29 = *v19;
          uint64_t v32 = *v19;
          uint64_t *v19 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100920BF0(&qword_100ACCC18);
            uint64_t v29 = v32;
          }
          sub_10091AA80(v27, v29);
          uint64_t *v19 = v29;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
      }
    }
  }
LABEL_16:
  a7(a4, a1);
  id v30 = (id)fpfs_adopt_log();
}

uint64_t sub_1008E7128(uint64_t a1, void *a2, void (*a3)(uint64_t *__return_ptr, unsigned char *, char *), uint64_t a4)
{
  void (*v30)(uint64_t *__return_ptr, unsigned char *, char *);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, char *, uint64_t);
  uint64_t (**v36)(char *, uint64_t);
  unsigned int (**v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;

  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  if (!a1) {
    return 2;
  }
  uint64_t v15 = (void *)swift_retain();
  if (objc_sync_enter(v15)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  uint64_t v16 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  }
  uint64_t v33 = v4;
  swift_release();
  uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v32 = v17;
  if (v18)
  {
    uint64_t v29 = a4;
    id v30 = a3;
    id v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v20 = v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v21 = *(void *)(v10 + 72);
    char v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    id v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v19;
    id v34 = v21;
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v31 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v40;
    v19(v14, v20, v9);
    while (1)
    {
      uint64_t v24 = *v22;
      (*v22)(v14, 0, 1, v9);
      if ((*v37)(v14, 1, v9) == 1) {
        break;
      }
      (*v35)(v23, v14, v9);
      sub_10096AE10();
      sub_10096BCF0();
      swift_bridgeObjectRelease();
      unint64_t v25 = (unsigned char *)fpfs_path_relative_to();
      swift_release();
      if (v25 && *v25)
      {
        swift_bridgeObjectRelease();
        char v26 = v40;
        uint64_t v27 = v33;
        v30(&v41, v25, v40);
        if (v27) {
          return (*v36)(v26, v9);
        }
        (*v36)(v26, v9);
        return v41;
      }
      uint64_t v23 = v40;
      (*v36)(v40, v9);
      v20 += v34;
      if (!--v18)
      {
        v24(v14, 1, 1, v9);
        break;
      }
      v38(v14, v20, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return 2;
}

uint64_t sub_1008E74E8(uint64_t a1, void *a2, void (*a3)(uint64_t *__return_ptr, unsigned char *, char *), uint64_t a4)
{
  void (*v30)(uint64_t *__return_ptr, unsigned char *, char *);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, char *, uint64_t);
  uint64_t (**v36)(char *, uint64_t);
  unsigned int (**v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;

  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  if (!a1) {
    return 0;
  }
  uint64_t v15 = (void *)swift_retain();
  if (objc_sync_enter(v15)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  uint64_t v16 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  }
  uint64_t v33 = v4;
  swift_release();
  uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v32 = v17;
  if (v18)
  {
    uint64_t v29 = a4;
    id v30 = a3;
    id v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v20 = v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v21 = *(void *)(v10 + 72);
    char v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    id v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v19;
    id v34 = v21;
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v31 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v40;
    v19(v14, v20, v9);
    while (1)
    {
      uint64_t v24 = *v22;
      (*v22)(v14, 0, 1, v9);
      if ((*v37)(v14, 1, v9) == 1) {
        break;
      }
      (*v35)(v23, v14, v9);
      sub_10096AE10();
      sub_10096BCF0();
      swift_bridgeObjectRelease();
      unint64_t v25 = (unsigned char *)fpfs_path_relative_to();
      swift_release();
      if (v25 && *v25)
      {
        swift_bridgeObjectRelease();
        char v26 = v40;
        uint64_t v27 = v33;
        v30(&v41, v25, v40);
        if (v27) {
          return (*v36)(v26, v9);
        }
        (*v36)(v26, v9);
        return v41;
      }
      uint64_t v23 = v40;
      (*v36)(v40, v9);
      v20 += v34;
      if (!--v18)
      {
        v24(v14, 1, 1, v9);
        break;
      }
      v38(v14, v20, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1008E78C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = fpfs_pkg_system_relative_lookup();
  *a1 = 0;
  return result;
}

uint64_t sub_1008E793C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = fpfs_pkg_system_relative_lookup();
  *a1 = 0;
  return result;
}

uint64_t sub_1008E7A2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v4 + 216);
  uint64_t v13 = *(void *)(v4 + 224);
  uint64_t v14 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = a1;
  *(unsigned char *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  *(void *)(v16 + 48) = a4;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_1000DEB20;
  v17[3] = v15;
  v17[4] = v13;
  swift_retain_n();
  id v18 = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1003946CC(v18, (uint64_t)v11, (void (*)())sub_100248430, v17, (uint64_t)sub_10093C1A0, v16);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v11, (uint64_t *)&unk_100ACF600);
}

void sub_1008E7C10(uint64_t a1, Swift::UInt64 a2, char a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 200);
  if (!*(void *)(v8 + 16) || (unint64_t v9 = sub_10031F858(a2, a3), (v10 & 1) == 0))
  {
LABEL_33:
    a4(0);
    return;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  uint64_t v27 = a4;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10096CAA0();
    sub_100011348(0, (unint64_t *)&unk_100AD6280);
    sub_100345DBC(&qword_100ADF140, (unint64_t *)&unk_100AD6280);
    sub_10096C370();
    uint64_t v11 = v30;
    uint64_t v28 = v31;
    uint64_t v12 = v32;
    uint64_t v13 = v33;
    unint64_t v14 = v34;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(v11 + 32);
    uint64_t v28 = v11 + 56;
    uint64_t v12 = ~v15;
    uint64_t v16 = -v15;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v14 = v17 & *(void *)(v11 + 56);
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
  }
  uint64_t v26 = v12;
  int64_t v18 = (unint64_t)(v12 + 64) >> 6;
  if (v11 < 0) {
    goto LABEL_12;
  }
  while (1)
  {
    if (v14)
    {
      uint64_t v19 = (v14 - 1) & v14;
      unint64_t v20 = __clz(__rbit64(v14)) | (v13 << 6);
      uint64_t v21 = v13;
      goto LABEL_29;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v23 >= v18) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    uint64_t v21 = v13 + 1;
    if (!v24)
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v21);
      if (!v24)
      {
        uint64_t v21 = v13 + 3;
        if (v13 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v24 = *(void *)(v28 + 8 * v21);
        if (!v24)
        {
          uint64_t v21 = v13 + 4;
          if (v13 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v24 = *(void *)(v28 + 8 * v21);
          if (!v24)
          {
            uint64_t v25 = v13 + 5;
            while (v18 != v25)
            {
              unint64_t v24 = *(void *)(v28 + 8 * v25++);
              if (v24)
              {
                uint64_t v21 = v25 - 1;
                goto LABEL_28;
              }
            }
LABEL_32:
            sub_1000146B4();
            a4 = v27;
            goto LABEL_33;
          }
        }
      }
    }
LABEL_28:
    uint64_t v19 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v21 << 6);
LABEL_29:
    id v22 = *(id *)(*(void *)(v11 + 48) + 8 * v20);
    if (!v22) {
      goto LABEL_32;
    }
    while (1)
    {
      objc_msgSend(v22, "cancel", v26);

      uint64_t v13 = v21;
      unint64_t v14 = v19;
      if ((v11 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_12:
      if (sub_10096CAD0())
      {
        sub_100011348(0, (unint64_t *)&unk_100AD6280);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v22 = v29;
        swift_unknownObjectRelease();
        uint64_t v21 = v13;
        uint64_t v19 = v14;
        if (v29) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t VFSFileTree.scan(directoryID:startingFrom:domainVersion:requestor:handler:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10092A65C(a1, a2, a3, a6, a7, a8, a9);
}

uint64_t sub_1008E7F40(void *a1, uint64_t a2, int a3, void (*a4)(void, void), uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8)
{
  uint64_t v146 = a7;
  uint64_t v147 = a8;
  uint64_t v14 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v14 - 8);
  id v156 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for VFSItem(0);
  uint64_t v148 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v145 = (uint64_t)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10096A7B0();
  uint64_t v166 = *(uint64_t **)(v17 - 8);
  uint64_t v167 = v17;
  __chkstk_darwin(v17);
  uint64_t v165 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10096B480();
  unint64_t v163 = *(void *)(v19 - 8);
  uint64_t v164 = v19;
  __chkstk_darwin(v19);
  uint64_t v162 = (char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = sub_10096AE50();
  id v22 = *(void (***)(char *, unint64_t))(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v189, 0, sizeof(v189));
  uint64_t v157 = a2;
  uint64_t v158 = a1;
  int v161 = a3;
  sub_1008E3FC4(a2, a3, (uint64_t)v189, (uint64_t)v184);
  sub_10021E550((uint64_t)v184);
  uint64_t v25 = v184[0];
  if (!v184[0]) {
    return ((uint64_t (*)(void, void))a4)(0, 0);
  }
  uint64_t v137 = a6;
  uint64_t v138 = a5;
  uint64_t v140 = (void (*)(void *, void))a4;
  uint64_t v136 = v184[0];
  if (a6)
  {
    type metadata accessor for VFSDirectoryLister(0);
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      a2 = v26;
      swift_beginAccess();
      if (*(void *)(a2 + 24) != v25)
      {
        if (v161 != 2 || v157)
        {
          swift_retain_n();
          sub_100718804((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 906, v157, v161, a2);
        }
        char v79 = v158;
        swift_retain();
        swift_retain();
        if (objc_sync_enter(v79)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v79);
        }
        swift_retain();
        if (objc_sync_exit(v79)) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v79);
        }
        swift_release();
        if (qword_100ACC040 != -1) {
          goto LABEL_123;
        }
        goto LABEL_80;
      }
      swift_retain();
LABEL_6:
      uint64_t v27 = v158;
      uint64_t v28 = sub_1008E113C();
      if (v28)
      {
        uint64_t v29 = v28;
        if (*(void *)(a2 + 64))
        {
          swift_release();

          goto LABEL_90;
        }
        *(void *)(a2 + 64) = v28;
      }
LABEL_89:
      swift_release();
LABEL_90:
      id v89 = [self defaultStore];
      int v90 = [v89 vfsDirectoryListerLimit];

      uint64_t v91 = (void *)swift_retain();
      if (!objc_sync_enter(v91))
      {
        uint64_t v92 = v27[20];
        swift_retain();
        int v93 = objc_sync_exit(v27);
        uint64_t v94 = v137;
        if (!v93)
        {
          swift_release();
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          uint64_t v96 = v27[35];
          uint64_t v97 = v27[17];
          uint64_t v98 = *(void *)(v97 + 24);
          uint64_t v166 = *(uint64_t **)(v97 + 16);
          uint64_t v167 = v96;
          uint64_t v99 = Strong;
          if (v94)
          {
            type metadata accessor for VFSDirectoryLister(0);
            uint64_t v100 = swift_dynamicCastClass();
            if (v100) {
              swift_retain();
            }
          }
          else
          {
            uint64_t v100 = 0;
          }
          uint64_t v101 = v27;
          uint64_t v102 = v27[22];
          uint64_t v103 = v101[23];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v104 = sub_1008E113C();
          type metadata accessor for VFSDirectoryLister(0);
          swift_allocObject();
          uint64_t v112 = sub_1005940C4(v136, v90, v92, v99, v167, (uint64_t)v166, v98, v100, v102, v103, v104);
          LOBYTE(v170) = 0;
          __chkstk_darwin(v112);
          uint64_t v131 = (uint64_t)&v170;
          uint64_t v132 = v146;
          double v133 = v147;
          sub_1008D5804((uint64_t)sub_10093C634, (uint64_t)(&v135 - 6));
          v113 = v140;
          if (v112[6])
          {
            os_log_type_t v114 = 0;
          }
          else
          {
            swift_retain();
            os_log_type_t v114 = v112;
          }
          v113(v114, 0);
          swift_release();
          return swift_release();
        }
LABEL_127:
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v27);
      }
LABEL_126:
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v27);
    }
  }
  uint64_t v27 = v158;
  uint64_t v30 = (void *)swift_retain();
  if (objc_sync_enter(v30)) {
    goto LABEL_126;
  }
  uint64_t v31 = v27[20];
  swift_retain();
  if (objc_sync_exit(v27)) {
    goto LABEL_127;
  }
  swift_release();
  swift_beginAccess();
  uint64_t v32 = *(void *)(v31 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v159 = v32 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v21 = v35 & v33;
  id v22 = (void (**)(char *, unint64_t))((char *)v27 + qword_100B0B640);
  uint64_t v153 = v27 + 34;
  swift_beginAccess();
  int64_t v36 = 0;
  unint64_t v24 = 0;
  int64_t v160 = (unint64_t)(v34 + 63) >> 6;
  BOOL v37 = v161 == 2;
  BOOL v38 = v157 == 1 && v161 == 2;
  BOOL v142 = v38;
  if (v157) {
    BOOL v37 = 0;
  }
  BOOL v139 = v37;
  uint64_t v151 = &v187;
  uint64_t v152 = (void *)&v171 + 1;
  uint64_t v141 = &v180;
  uint64_t v144 = v148 + 56;
  uint64_t v150 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
  long long v143 = xmmword_100973BB0;
  uint64_t v154 = v32;
  uint64_t v149 = v22;
  while (1)
  {
    do
    {
      while (1)
      {
        if (v21)
        {
          unint64_t v39 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
          unint64_t v40 = v39 | (v36 << 6);
        }
        else
        {
          if (__OFADD__(v36++, 1)) {
            goto LABEL_121;
          }
          if (v36 >= v160) {
            goto LABEL_89;
          }
          unint64_t v42 = *(void *)(v159 + 8 * v36);
          if (!v42)
          {
            int64_t v43 = v36 + 1;
            if (v36 + 1 >= v160) {
              goto LABEL_89;
            }
            unint64_t v42 = *(void *)(v159 + 8 * v43);
            if (!v42)
            {
              int64_t v43 = v36 + 2;
              if (v36 + 2 >= v160) {
                goto LABEL_89;
              }
              unint64_t v42 = *(void *)(v159 + 8 * v43);
              if (!v42)
              {
                int64_t v43 = v36 + 3;
                if (v36 + 3 >= v160) {
                  goto LABEL_89;
                }
                unint64_t v42 = *(void *)(v159 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    int64_t v36 = v43 + 1;
                    if (__OFADD__(v43, 1)) {
                      goto LABEL_122;
                    }
                    if (v36 >= v160) {
                      goto LABEL_89;
                    }
                    unint64_t v42 = *(void *)(v159 + 8 * v36);
                    ++v43;
                    if (v42) {
                      goto LABEL_33;
                    }
                  }
                }
              }
            }
            int64_t v36 = v43;
          }
LABEL_33:
          unint64_t v21 = (v42 - 1) & v42;
          unint64_t v40 = __clz(__rbit64(v42)) + (v36 << 6);
        }
        uint64_t v44 = *(void *)(v32 + 48) + 16 * v40;
        uint64_t v45 = *(void *)v44;
        a2 = *(unsigned __int8 *)(v44 + 8);
        uint64_t v46 = *(void *)(v32 + 56) + 32 * v40;
        uint64_t v47 = *(void *)v46;
        if (!*(unsigned char *)(v46 + 8)) {
          break;
        }
        if (*(unsigned char *)(v46 + 8) == 1)
        {
          if (v161 == 1 && v47 == v157) {
            goto LABEL_46;
          }
        }
        else if (v47)
        {
          if (v142) {
            goto LABEL_46;
          }
        }
        else if (v139)
        {
          goto LABEL_46;
        }
      }
    }
    while ((_BYTE)v161 || v47 != v157);
LABEL_46:
    uint64_t v162 = (char *)v36;
    swift_bridgeObjectRetain();
    sub_1008E3FC4(v45, a2, (uint64_t)v189, (uint64_t)&v185);
    swift_bridgeObjectRelease();
    uint64_t v48 = (uint64_t)*v22 + 1;
    if (*v22 == (void (*)(char *, unint64_t))-1) {
      break;
    }
    unint64_t v163 = v21;
    *id v22 = (void (*)(char *, unint64_t))v48;
    uint64_t v49 = objc_sync_enter(v27);
    if (v49)
    {
      __chkstk_darwin(v49);
      double v133 = v27;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1001E9E7C, (uint64_t)&v131, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314);
    }
    uint64_t v50 = v27[20];
    swift_retain();
    uint64_t v51 = objc_sync_exit(v27);
    if (v51)
    {
      __chkstk_darwin(v51);
      double v133 = v27;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1001E9E84, (uint64_t)&v131, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318);
    }
    uint64_t v165 = (char *)type metadata accessor for VFSFileTree(0);
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    uint64_t v166 = &v135;
    uint64_t v167 = v52;
    uint64_t v164 = v27[35];
    unsigned int v53 = *(_DWORD *)(v50 + 16);
    __chkstk_darwin(v52);
    double v133 = (uint64_t *)(v53 | 0x20800000000000);
    uint64_t v54 = (uint64_t)v151;
    uint64_t v55 = v152;
    *uint64_t v152 = 0;
    v55[1] = 0;
    long long v56 = v185;
    long long v170 = v185;
    unsigned int v57 = v186;
    unsigned int v58 = HIDWORD(v186);
    *(void *)&long long v171 = v186;
    sub_10001AE98(v54, (uint64_t)v188, &qword_100ADF5E0);
    uint64_t v59 = sub_10001AE98((uint64_t)v188, (uint64_t)v190, &qword_100ADF5E0);
    if (v190[1])
    {
      uint64_t v60 = (uint64_t *)v56;
      __chkstk_darwin(v59);
      uint64_t v131 = (uint64_t)&v170;
      uint64_t v132 = (uint64_t *)sub_10043F5DC;
      double v133 = &v131;
      if ((v62 & 0x1000000000000000) != 0 || !(v62 & 0x2000000000000000 | v61 & 0x1000000000000000))
      {
        uint64_t v66 = sub_10096CBC0();
        unint64_t v24 = 0;
        uint64_t v63 = v167;
        uint64_t v69 = (uint64_t)v156;
      }
      else
      {
        unint64_t v24 = 0;
        uint64_t v63 = v167;
        if ((v62 & 0x2000000000000000) != 0)
        {
          v168[0] = v61;
          v168[1] = v62 & 0xFFFFFFFFFFFFFFLL;
          *((void *)&v171 + 1) = v168;
          long long v178 = v170;
          unint64_t v179 = v171;
          int v180 = v168;
          uint64_t v181 = v172;
          uint64_t v66 = fpfs_openfdbyhandle();
          if ((v66 & 0x80000000) != 0)
          {
LABEL_107:
            int v115 = sub_10096B4D0();
            uint64_t v88 = sub_1005970E0(v115, 0, 0, 0xAu);
            swift_willThrow();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))v140;
            sub_10021E550((uint64_t)&v185);
            goto LABEL_97;
          }
        }
        else
        {
          if ((v61 & 0x1000000000000000) != 0)
          {
            uint64_t v64 = (v62 & 0xFFFFFFFFFFFFFFFLL) + 32;
            goto LABEL_55;
          }
          uint64_t v64 = sub_10096CC90();
          if (v64)
          {
LABEL_55:
            *((void *)&v171 + 1) = v64;
            long long v178 = v170;
            uint64_t v65 = v172;
            unint64_t v179 = v171;
            int v180 = (void *)v64;
          }
          else
          {
            *((void *)&v171 + 1) = 0;
            long long v178 = v170;
            uint64_t v65 = v172;
            unint64_t v179 = v171;
            int v180 = 0;
          }
          uint64_t v181 = v65;
          uint64_t v66 = fpfs_openfdbyhandle();
          if ((v66 & 0x80000000) != 0) {
            goto LABEL_107;
          }
        }
        unsigned int v169 = v66;
        uint64_t v69 = (uint64_t)v156;
      }
      uint64_t v68 = v169;
      goto LABEL_63;
    }
    *((void *)&v171 + 1) = 0;
    long long v178 = v56;
    unint64_t v179 = __PAIR64__(v58, v57);
    uint64_t v67 = v141;
    void *v141 = 0;
    v67[1] = 0;
    uint64_t v66 = fpfs_openfdbyhandle();
    if ((v66 & 0x80000000) != 0)
    {
      int v87 = sub_10096B4D0();
      uint64_t v88 = sub_1005970E0(v87, 0, 0, 0xAu);
      swift_willThrow();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))v140;
      goto LABEL_97;
    }
    uint64_t v68 = v66;
    uint64_t v60 = (uint64_t *)v56;
    unint64_t v24 = 0;
    uint64_t v69 = (uint64_t)v156;
    uint64_t v63 = v167;
LABEL_63:
    a2 = (uint64_t)&v135;
    __chkstk_darwin(v66);
    *(&v135 - 10) = v70;
    *((_DWORD *)&v135 - 18) = v68;
    *(&v135 - 8) = v50;
    *(&v135 - 7) = v63;
    *(&v135 - 6) = v71;
    *((unsigned char *)&v135 - 40) = 2;
    uint64_t v131 = 1;
    uint64_t v132 = v60;
    LOBYTE(v133) = 1;
    double v134 = 0;
    *(void *)&long long v170 = v72;
    DWORD2(v170) = v73;
    BYTE12(v170) = v74;
    sub_10094A1CC(0, (uint64_t)sub_1009381AC, (uint64_t)(&v135 - 12), v69);
    sub_100595FB8(v68);
    swift_release();
    swift_unknownObjectRelease();
    sub_10021E550((uint64_t)&v185);
    uint64_t v27 = v158;
    int v75 = (*v150)(v69, 1, v155);
    uint64_t v32 = v154;
    unint64_t v21 = v163;
    if (v75 == 1)
    {
      sub_10002B770(v69, &qword_100ACB910);
    }
    else
    {
      a2 = v145;
      sub_10001158C(v69, v145, type metadata accessor for VFSItem);
      sub_10002B7CC((uint64_t *)&unk_100AD75F0);
      unint64_t v76 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
      uint64_t v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = v143;
      sub_1009381C4(a2, v77 + v76, type metadata accessor for VFSItem);
      LOBYTE(v76) = ((uint64_t (*)(uint64_t))v146)(v77);
      swift_bridgeObjectRelease();
      if (v76)
      {
        v140(0, 0);
        sub_10092D018(a2, type metadata accessor for VFSItem);
        return swift_release();
      }
      sub_10092D018(a2, type metadata accessor for VFSItem);
    }
    id v22 = v149;
    int64_t v36 = (int64_t)v162;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  swift_once();
LABEL_80:
  long long v170 = static Filename.trashName;
  *(void *)&long long v178 = 47;
  *((void *)&v178 + 1) = 0xE100000000000000;
  uint64_t v182 = 58;
  unint64_t v183 = 0xE100000000000000;
  double v133 = (uint64_t *)sub_10001F9C0();
  double v134 = v133;
  uint64_t v131 = (uint64_t)&type metadata for String;
  uint64_t v132 = v133;
  sub_10096C910();
  sub_10096AD60();
  swift_bridgeObjectRelease();
  VFSLookupScope.checkExistingTrashFolder(at:)((uint64_t)v24);
  v22[1](v24, v21);
  swift_release();
  uint64_t v80 = *(void *)(a2 + 24);
  uint64_t v27 = v158;
  uint64_t v81 = (void *)swift_retain();
  if (objc_sync_enter(v81)) {
    goto LABEL_126;
  }
  uint64_t v82 = v27[20];
  swift_retain();
  int v83 = objc_sync_exit(v27);
  uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))v140;
  if (v83) {
    goto LABEL_127;
  }
  swift_release();
  uint64_t v85 = *(void *)(v82 + 40);
  char v86 = *(unsigned char *)(v82 + 48);
  swift_release();
  if ((v86 & 1) == 0 && v80 == v85)
  {
    uint64_t v136 = *(void *)(a2 + 24);
    goto LABEL_6;
  }
  id v116 = (id)fpfs_current_or_default_log();
  unint64_t v117 = v162;
  sub_10096B490();
  double v118 = v158;
  swift_retain_n();
  swift_retain();
  uint64_t v119 = sub_10096B470();
  os_log_type_t v120 = sub_10096C5B0();
  if (os_log_type_enabled(v119, v120))
  {
    uint64_t v121 = swift_slowAlloc();
    *(void *)&long long v170 = swift_slowAlloc();
    *(_DWORD *)uint64_t v121 = 134218754;
    *(void *)&long long v178 = *(void *)(a2 + 24);
    sub_10096C8C0();
    swift_release();
    *(_WORD *)(v121 + 12) = 2048;
    unint64_t v122 = (void *)swift_retain();
    if (objc_sync_enter(v122)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v118);
    }
    uint64_t v123 = v118[20];
    swift_retain();
    if (objc_sync_exit(v118)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v118);
    }
    swift_release();
    uint64_t v124 = *(void *)(v123 + 40);
    int v125 = *(unsigned __int8 *)(v123 + 48);
    swift_release();
    swift_release();
    if (v125) {
      uint64_t v126 = 0;
    }
    else {
      uint64_t v126 = v124;
    }
    *(void *)&long long v178 = v126;
    sub_10096C8C0();
    swift_release();
    *(_WORD *)(v121 + 22) = 2048;
    *(void *)&long long v178 = v136;
    sub_10096C8C0();
    *(_WORD *)(v121 + 32) = 2080;
    uint64_t v127 = VFSItemID.parseableString.getter(0, 2);
    *(void *)&long long v178 = sub_100719D44(v127, v128, (uint64_t *)&v170);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v119, v120, "ESTALE: root/trash changed during enumeration. %llu, %llu, %llu, %s", (uint8_t *)v121, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v163 + 8))(v117, v164);
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))v140;
  }
  else
  {

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v163 + 8))(v117, v164);
  }
  LODWORD(v170) = 70;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  uint64_t v129 = v165;
  uint64_t v130 = v167;
  sub_10096ABD0();
  uint64_t v88 = sub_10096A790();
  ((void (*)(char *, uint64_t))v166[1])(v129, v130);
  swift_willThrow();
  swift_release();
LABEL_97:
  swift_errorRetain();
  LODWORD(v170) = sub_10096A760();
  sub_100045CB4();
  char v105 = sub_10096AA60();
  swift_errorRelease();
  if (v105)
  {
    swift_errorRelease();
    return v84(0, 0);
  }
  else
  {
    swift_errorRetain();
    LODWORD(v170) = sub_10096A740();
    char v106 = sub_10096AA60();
    swift_errorRelease();
    if (v106)
    {
      swift_errorRelease();
      sub_10093C600((uint64_t)&v170);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v107 = swift_allocError();
      sub_10001AE98((uint64_t)&v170, v108, (uint64_t *)&unk_100ACD9A0);
      v84(v107, 1);
      return swift_errorRelease();
    }
    else
    {
      swift_errorRetain();
      LODWORD(v170) = sub_10096A710();
      char v109 = sub_10096AA60();
      swift_errorRelease();
      if (v109)
      {
        *(void *)&long long v170 = v157;
        BYTE8(v170) = v161;
        long long v171 = 0u;
        long long v172 = 0u;
        long long v173 = 0u;
        long long v174 = 0u;
        long long v175 = 0u;
        long long v176 = 0u;
        uint64_t v177 = v88;
        sub_1000D3768((uint64_t)&v170);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        uint64_t v110 = swift_allocError();
        sub_10001AE98((uint64_t)&v170, v111, (uint64_t *)&unk_100ACD9A0);
        swift_errorRetain();
        v84(v110, 1);
      }
      else
      {
        swift_errorRetain();
        v84(v88, 1);
      }
      swift_errorRelease();
      return swift_errorRelease();
    }
  }
}

void sub_1008E96E4(uint64_t a1, unsigned char *a2, uint64_t (*a3)(uint64_t))
{
  sub_1008E9764(a2, a1, a3);
  if (v3) {
    __break(1u);
  }
}

uint64_t sub_1008E9764(unsigned char *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for VFSItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  char v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    unint64_t v21 = a3;
    uint64_t v11 = *(void *)a2;
    int v12 = *(unsigned __int8 *)(a2 + 8);
    sub_1009381C4(a2, (uint64_t)v10, type metadata accessor for VFSItem);
    if (v12 == 2 && v11 == 1)
    {
      return sub_10092D018((uint64_t)v10, type metadata accessor for VFSItem);
    }
    else
    {
      uint64_t v14 = &v10[*(int *)(v6 + 28)];
      char v15 = v14[*(int *)(type metadata accessor for ItemMetadata() + 72)];
      uint64_t result = sub_10092D018((uint64_t)v10, type metadata accessor for VFSItem);
      uint64_t v16 = v21;
      if ((v15 & 1) == 0)
      {
        sub_10002B7CC((uint64_t *)&unk_100AD75F0);
        unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_100973BB0;
        sub_1009381C4(a2, v18 + v17, type metadata accessor for VFSItem);
        char v19 = v16(v18);
        uint64_t result = swift_bridgeObjectRelease();
        if (v19) {
          *a1 = 1;
        }
      }
    }
  }
  return result;
}

uint64_t VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v63 = a5;
  uint64_t v56 = a3;
  uint64_t v12 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v12 - 8);
  unsigned int v58 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096AE50();
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unsigned int v57 = (char *)&v53 - v18;
  uint64_t v19 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v19 - 8);
  unint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for VFSItem(0);
  uint64_t v22 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v61 = (uint64_t)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v73, 0, sizeof(v73));
  sub_1008E3FC4(a1, a2, (uint64_t)v73, (uint64_t)v72);
  sub_10021E550((uint64_t)v72);
  uint64_t v24 = v72[0];
  uint64_t v25 = (void *)((char *)v7 + qword_100B0B640);
  swift_beginAccess();
  uint64_t v26 = *v25 + 1;
  if (*v25 == -1) {
    __break(1u);
  }
  uint64_t v55 = v17;
  *uint64_t v25 = v26;
  uint64_t v27 = (void *)swift_retain();
  if (objc_sync_enter(v27)) {
    goto LABEL_24;
  }
  uint64_t v28 = v7[20];
  swift_retain();
  if (objc_sync_exit(v7)) {
    goto LABEL_25;
  }
  uint64_t v54 = a4;
  uint64_t v64 = a6;
  swift_release();
  type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  uint64_t v69 = v24;
  long long v70 = 0u;
  long long v71 = 0u;
  uint64_t v29 = fpfs_openfdbyhandle();
  if ((v29 & 0x80000000) == 0)
  {
    uint64_t v30 = v29;
    sub_100438EE8(v28, (uint64_t)v21);
    sub_100595FB8(v30);
    uint64_t v36 = v62;
    goto LABEL_9;
  }
  int v31 = sub_10096B4D0();
  sub_1005970E0(v31, 0, 0, 0xAu);
  swift_willThrow();
  swift_errorRetain();
  LODWORD(v69) = sub_10096A710();
  sub_100045CB4();
  char v32 = sub_10096AA60();
  swift_errorRelease();
  if (v32)
  {
    uint64_t v36 = v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v21, 1, 1, v62);
    swift_errorRelease();
LABEL_9:
    swift_release();
    swift_unknownObjectRelease();
    int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v36);
    BOOL v38 = v64;
    if (v37 == 1)
    {
      unint64_t v39 = &qword_100ACB910;
      uint64_t v40 = (uint64_t)v21;
LABEL_18:
      sub_10002B770(v40, v39);
      goto LABEL_19;
    }
    uint64_t v41 = v61;
    sub_10001158C((uint64_t)v21, v61, type metadata accessor for VFSItem);
    if ((v63 & 1) == 0)
    {
      uint64_t v42 = v41 + *(int *)(v36 + 28);
      if (*(unsigned char *)(v42 + *(int *)(type metadata accessor for ItemMetadata() + 64)) == 1)
      {
        sub_10092D018(v41, type metadata accessor for VFSItem);
LABEL_19:
        uint64_t v33 = sub_10002B7CC(&qword_100AD0E00);
        uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
        uint64_t v35 = v38;
        return v34((uint64_t)v35, 1, 1, v33);
      }
    }
    int64_t v43 = (void *)swift_retain();
    if (!objc_sync_enter(v43))
    {
      swift_retain();
      if (!objc_sync_exit(v7))
      {
        swift_release();
        uint64_t v44 = v58;
        VFSItem.fetchURL()(v58);
        swift_release();
        uint64_t v45 = v59;
        uint64_t v46 = v60;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v44, 1, v60) != 1)
        {
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
          uint64_t v49 = v57;
          v48(v57, v44, v46);
          uint64_t v69 = v56;
          *(void *)&long long v70 = v54;
          uint64_t v67 = 47;
          unint64_t v68 = 0xE100000000000000;
          uint64_t v65 = 58;
          unint64_t v66 = 0xE100000000000000;
          sub_10001F9C0();
          sub_10096C910();
          uint64_t v50 = v55;
          sub_10096AD50();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v46);
          uint64_t v51 = sub_10002B7CC(&qword_100AD0E00);
          uint64_t v52 = (uint64_t)&v38[*(int *)(v51 + 48)];
          v48(v38, v50, v46);
          sub_10001158C(v61, v52, type metadata accessor for VFSItem);
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v38, 0, 1, v51);
        }
        sub_10092D018(v41, type metadata accessor for VFSItem);
        unint64_t v39 = &qword_100ACA8C0;
        uint64_t v40 = (uint64_t)v44;
        goto LABEL_18;
      }
LABEL_25:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v7);
    }
LABEL_24:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v7);
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_errorRelease();
  uint64_t v33 = sub_10002B7CC(&qword_100AD0E00);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v35 = v64;
  return v34((uint64_t)v35, 1, 1, v33);
}

uint64_t sub_1008EA0C0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v82) = a5;
  uint64_t v81 = a4;
  id v89 = a2;
  uint64_t v90 = a3;
  uint64_t v88 = a1;
  uint64_t v5 = sub_10096A630();
  __chkstk_darwin(v5 - 8);
  uint64_t v77 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10096A650();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  unint64_t v76 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10096AE50();
  uint64_t v84 = *(void *)(v80 - 8);
  uint64_t v11 = *(void *)(v84 + 64);
  uint64_t v12 = __chkstk_darwin(v80);
  int v75 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v12);
  int v73 = (char *)&v73 - v14;
  __chkstk_darwin(v13);
  int v83 = (char *)&v73 - v15;
  uint64_t v16 = type metadata accessor for VFSItem(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  int v87 = (uint8_t *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v86 = (void (*)(char *, char *, uint64_t))sub_10096B480();
  uint64_t v85 = *((void *)v86 - 1);
  uint64_t v19 = __chkstk_darwin(v86);
  char v74 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = sub_10002B7CC(&qword_100ADF130);
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(v88, (uint64_t)v28, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v25 = *v28;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v89(v25);
    swift_errorRelease();
    return sub_10002B770((uint64_t)v25, &qword_100ADF130);
  }
  else
  {
    uint64_t v88 = v23;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v28, 1, v16) == 1)
    {
      id v30 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      int v31 = sub_10096B470();
      os_log_type_t v32 = sub_10096C5B0();
      uint64_t v33 = v25;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136315138;
        int v87 = v34 + 4;
        uint64_t v35 = v81;
        char v36 = v82;
        uint64_t v37 = VFSItemID.parseableString.getter(v81, v82);
        uint64_t v100 = sub_100719D44(v37, v38, &v91);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "⚔️  Item %s not found, can not update conflict losers for this item...", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v85 + 8))(v22, v86);
      }
      else
      {

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v85 + 8))(v22, v86);
        char v36 = v82;
        uint64_t v35 = v81;
      }
      uint64_t v91 = v35;
      char v92 = v36;
      long long v93 = 0u;
      long long v94 = 0u;
      long long v95 = 0u;
      long long v96 = 0u;
      long long v97 = 0u;
      long long v98 = 0u;
      uint64_t v99 = 0;
      sub_1000D3768((uint64_t)&v91);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v57 = swift_allocError();
      sub_10001AE98((uint64_t)&v91, v58, (uint64_t *)&unk_100ACD9A0);
      uint64_t *v33 = v57;
      swift_storeEnumTagMultiPayload();
      v89(v33);
      return sub_10002B770((uint64_t)v33, &qword_100ADF130);
    }
    else
    {
      uint64_t v39 = (uint64_t)v87;
      sub_10001158C((uint64_t)v28, (uint64_t)v87, type metadata accessor for VFSItem);
      if (qword_100ACC0A0 != -1) {
        swift_once();
      }
      uint64_t v40 = static GSConflictManager.instance;
      VFSItem.fetchURL()(v10);
      uint64_t v41 = v84;
      uint64_t v42 = v80;
      int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48))(v10, 1, v80);
      uint64_t v44 = v83;
      if (v43 == 1)
      {
        sub_10002B770((uint64_t)v10, &qword_100ACA8C0);
        id v45 = (id)fpfs_current_or_default_log();
        uint64_t v46 = v74;
        sub_10096B490();
        uint64_t v47 = sub_10096B470();
        os_log_type_t v48 = sub_10096C5B0();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315138;
          uint64_t v50 = VFSItemID.parseableString.getter(v81, v82);
          uint64_t v100 = sub_100719D44(v50, v51, &v91);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "⚔️  Impossible to fetch URL for Item %s, can not update conflict losers for this item...", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v85 + 8))(v46, v86);
        uint64_t v52 = v89;
        sub_10096A580();
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_1000256AC((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
        uint64_t v53 = v76;
        uint64_t v54 = v79;
        sub_10096ABD0();
        uint64_t v55 = sub_10096A4D0();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v53, v54);
        *uint64_t v25 = v55;
        swift_storeEnumTagMultiPayload();
        v52(v25);
        sub_10002B770((uint64_t)v25, &qword_100ADF130);
        uint64_t v56 = v39;
      }
      else
      {
        uint64_t v88 = v40;
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v59(v83, v10, v42);
        uint64_t v60 = v73;
        char v86 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        v86(v73, v44, v42);
        uint64_t v61 = *(unsigned __int8 *)(v41 + 80);
        uint64_t v82 = ~v61;
        uint64_t v85 = v61 | 7;
        uint64_t v62 = swift_allocObject();
        uint64_t v63 = v90;
        *(void *)(v62 + 16) = v89;
        *(void *)(v62 + 24) = v63;
        id v89 = (void (*)(uint64_t *))v59;
        v59((char *)(v62 + ((v61 + 32) & ~v61)), v60, v42);
        uint64_t v64 = qword_100ACC0A8;
        swift_retain();
        if (v64 != -1) {
          swift_once();
        }
        uint64_t v90 = qword_100AD88D0;
        id v65 = (id)fpfs_current_log();
        unint64_t v66 = v75;
        uint64_t v67 = v83;
        v86(v75, v83, v42);
        uint64_t v68 = (v61 + 24) & v82;
        unint64_t v69 = (v11 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v70 = swift_allocObject();
        long long v71 = (void (*)(uint64_t, char *, uint64_t))v89;
        *(void *)(v70 + 16) = v88;
        v71(v70 + v68, v66, v42);
        uint64_t v72 = (uint64_t (**)(uint64_t, char))(v70 + v69);
        *uint64_t v72 = sub_10093BFF0;
        v72[1] = (uint64_t (*)(uint64_t, char))v62;
        swift_retain();
        swift_retain();
        sub_1006B8108(v65, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_1005F2F90, v70);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v84 + 8))(v67, v42);
        uint64_t v56 = (uint64_t)v87;
      }
      return sub_10092D018(v56, type metadata accessor for VFSItem);
    }
  }
}

uint64_t sub_1008EACEC(uint64_t a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10002B7CC(&qword_100ADF130);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    void *v11 = a1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
  }
  else
  {
    uint64_t v12 = (char *)v11 + *(int *)(sub_10002B7CC(&qword_100ADF138) + 48);
    void *v11 = a1;
    uint64_t v13 = sub_10096AE50();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a5, v13);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  a3(v11);
  return sub_10002B770((uint64_t)v11, &qword_100ADF130);
}

uint64_t sub_1008EAE34(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v6 + 216);
  uint64_t v16 = *(void *)(v6 + 224);
  uint64_t v17 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = a1;
  *(unsigned char *)(v18 + 32) = a2;
  *(void *)(v18 + 40) = a4;
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a3;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = v16;
  swift_retain_n();
  id v20 = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1003946CC(v20, (uint64_t)v14, (void (*)())sub_10093BE58, v19, (uint64_t)sub_10093BE40, v18);

  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008EAFF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  *(void *)(v12 + 32) = a2;
  *(unsigned char *)(v12 + 40) = a3;
  *(void *)(v12 + 48) = a6;
  *(void *)(v12 + 56) = a1;
  memset(v15, 0, sizeof(v15));
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10093BEC8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = a2;
  *(unsigned char *)(v13 + 40) = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10043E018(a2, a3, (uint64_t)v15, 0, 0, (uint64_t)sub_10093BF14, v13);
  swift_release();

  return swift_release();
}

uint64_t sub_1008EB11C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v85 = a7;
  uint64_t v86 = a6;
  int v81 = a5;
  uint64_t v80 = a4;
  uint64_t v10 = sub_10096B480();
  unint64_t v82 = *(void *)(v10 - 8);
  uint64_t v83 = v10;
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096AE50();
  uint64_t v87 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC(&qword_100ADE618);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10002B7CC(&qword_100ADF130);
  __chkstk_darwin(v18);
  id v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a1, (uint64_t)v20, &qword_100ADF130);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v22 = *(void *)v20;
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v17 = v22;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a2(v17);
    swift_errorRelease();
    return sub_10002B770((uint64_t)v17, &qword_100ADE618);
  }
  else
  {
    uint64_t v89 = v15;
    uint64_t v84 = v17;
    uint64_t v24 = sub_10002B7CC(&qword_100ADF138);
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v14, &v20[*(int *)(v24 + 48)], v12);
    id v25 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain_n();
    uint64_t v26 = v86;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_10096B470();
    os_log_type_t v28 = sub_10096C590();
    int v29 = v28;
    BOOL v30 = os_log_type_enabled(v27, v28);
    int v31 = v14;
    uint64_t v79 = a2;
    uint64_t v78 = a3;
    uint64_t v77 = v12;
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(void *)&long long v91 = v75;
      *(_DWORD *)uint64_t v32 = 136315650;
      uint64_t v33 = VFSItemID.parseableString.getter(v80, v81);
      uint64_t v90 = sub_100719D44(v33, v34, (uint64_t *)&v91);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_10096B9D0();
      int v81 = v29;
      uint64_t v36 = v22;
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_100719D44(v35, v38, (uint64_t *)&v91);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_10002B7CC((uint64_t *)&unk_100ACB960);
      uint64_t v39 = sub_10096C0B0();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_100719D44(v39, v41, (uint64_t *)&v91);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v81, "⚔️  conflicts for %s: existing - %s new %s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v82 + 8))(v88, v83);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v88, v83);
      uint64_t v36 = v22;
    }
    uint64_t v42 = *(char **)((char *)v85 + qword_100ADE788);
    unint64_t v43 = *(void *)(v26 + 16);
    uint64_t v44 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v88 = v42;
    uint64_t result = v42;
    id v45 = (void *)result;
    uint64_t v46 = v84;
    if (v43)
    {
      unint64_t v47 = 0;
      uint64_t v48 = v26 + 32;
      unint64_t v82 = v43 - 1;
      uint64_t v85 = _swiftEmptyArrayStorage;
      unint64_t v76 = v31;
      uint64_t v83 = v26 + 32;
      do
      {
        if (v47 <= v43) {
          unint64_t v49 = v43;
        }
        else {
          unint64_t v49 = v47;
        }
        uint64_t v50 = (long long *)(v48 + (v47 << 6));
        unint64_t v51 = v47;
        while (1)
        {
          if (v49 == v51)
          {
            __break(1u);
            return result;
          }
          long long v52 = v50[1];
          long long v91 = *v50;
          long long v92 = v52;
          long long v53 = v50[3];
          long long v93 = v50[2];
          long long v94 = v53;
          unint64_t v47 = v51 + 1;
          sub_10007897C((uint64_t *)&v91);
          id v54 = v45;
          sub_10007897C((uint64_t *)&v91);
          char v55 = sub_10092A2D8(v44, &v91, (uint64_t)v88);

          sub_1000789EC((uint64_t *)&v91);
          if ((v55 & 1) == 0) {
            break;
          }
          uint64_t result = (uint64_t)sub_1000789EC((uint64_t *)&v91);
          v50 += 4;
          ++v51;
          if (v43 == v47)
          {
            int v31 = v76;
            uint64_t v46 = v84;
            goto LABEL_23;
          }
        }
        uint64_t v56 = v85;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v57 = v56;
        uint64_t v90 = (uint64_t)v56;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100445EE4(0, v56[2] + 1, 1);
          uint64_t v57 = (void *)v90;
        }
        int v31 = v76;
        uint64_t v46 = v84;
        unint64_t v59 = v57[2];
        unint64_t v58 = v57[3];
        if (v59 >= v58 >> 1)
        {
          uint64_t result = sub_100445EE4(v58 > 1, v59 + 1, 1);
          uint64_t v46 = v84;
          uint64_t v57 = (void *)v90;
        }
        v57[2] = v59 + 1;
        uint64_t v85 = v57;
        uint64_t v60 = &v57[8 * v59];
        long long v61 = v91;
        long long v62 = v92;
        long long v63 = v94;
        v60[4] = v93;
        v60[5] = v63;
        v60[2] = v61;
        v60[3] = v62;
        uint64_t v48 = v83;
      }
      while (v82 != v51);
    }
    else
    {
      uint64_t v85 = _swiftEmptyArrayStorage;
    }
LABEL_23:
    uint64_t v64 = v86;
    swift_bridgeObjectRelease();
    uint64_t v65 = v44;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v66 = v45;
    uint64_t v67 = sub_10093000C(v44, v64, v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v68 = (char *)v46 + *(int *)(sub_10002B7CC(&qword_100ADE620) + 80);
    unint64_t v69 = v46;
    uint64_t v70 = *(void *)(v65 + 16);
    swift_bridgeObjectRelease();
    long long v71 = v85;
    *unint64_t v69 = v70;
    v69[1] = (uint64_t)v71;
    v69[2] = v67;
    uint64_t v72 = v87;
    uint64_t v73 = v77;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v68, v31, v77);
    swift_storeEnumTagMultiPayload();
    v79(v69);
    sub_10002B770((uint64_t)v69, &qword_100ADE618);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v31, v73);
  }
}

uint64_t sub_1008EB914(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v5 + 216;
  uint64_t v15 = *(void **)(v5 + 216);
  uint64_t v14 = *(void *)(v16 + 8);
  uint64_t v17 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(unsigned char *)(v19 + 24) = a2;
  *(_DWORD *)(v19 + 28) = a3;
  *(void *)(v19 + 32) = a4;
  *(void *)(v19 + 40) = a5;
  id v20 = (void *)swift_allocObject();
  v20[2] = sub_1000DEB20;
  v20[3] = v18;
  v20[4] = v14;
  swift_retain_n();
  id v21 = v15;
  swift_retain();
  swift_retain();
  sub_1003946CC(v21, (uint64_t)v13, (void (*)())sub_100248430, v20, (uint64_t)sub_10093BDE0, v19);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v13, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008EBAF8(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(void), void *a5)
{
  if (a2) {
    return a4(0);
  }
  type metadata accessor for GSRemoteVersionsManager();
  uint64_t inited = swift_initStackObject();
  id v11 = [objc_allocWithZone((Class)FPGSStorageManager) init];
  *(void *)(inited + 16) = v11;
  sub_10002B7CC((uint64_t *)&unk_100ACB990);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100973BA0;
  *(void *)(v12 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(v12 + 56) = v14;
  sub_10043502C(a1, a3, v12, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008EBC08(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  HIDWORD(v22) = a3;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v6 + 224);
  id v23 = *(id *)(v6 + 216);
  uint64_t v16 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(unsigned char *)(v18 + 24) = a2;
  *(_DWORD *)(v18 + 28) = HIDWORD(v22);
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = v6;
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a6;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = sub_10021E33C;
  v19[3] = v17;
  v19[4] = v15;
  swift_retain_n();
  id v20 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1003946CC(v20, (uint64_t)v14, (void (*)())sub_10093E160, v19, (uint64_t)sub_10093BDC4, v18);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008EBE14(uint64_t a1, unsigned __int8 a2, unint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void, void), uint64_t a7)
{
  int v13 = a2;
  uint64_t v14 = sub_10096B480();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13) {
    return ((uint64_t (*)(void, void))a6)(0, 0);
  }
  uint64_t v65 = v18;
  uint64_t v62 = v16;
  uint64_t v56 = a4;
  uint64_t v57 = a7;
  if (qword_100ACC0A0 != -1) {
    goto LABEL_41;
  }
LABEL_4:
  uint64_t v20 = *(void *)(static GSConflictManager.instance + 16);
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  swift_retain();
  uint64_t v21 = a1;
  a1 = 0;
  id v22 = sub_100434F40(v21, a3);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v73 = _swiftEmptyArrayStorage;
  unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10096CE70();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)(((unint64_t)v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v55 = a6;
  v54[1] = v20;
  uint64_t v72 = a5;
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v23; ++i)
    {
      if (((unint64_t)v22 & 0xC000000000000001) != 0) {
        id v25 = (id)sub_10096CC30();
      }
      else {
        id v25 = *((id *)v22 + i + 4);
      }
      uint64_t v26 = v25;
      if ([v25 isSavedConflictResolved])
      {
        sub_10096CCB0();
        sub_10096CCF0();
        sub_10096CD00();
        sub_10096CCC0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    id v66 = v73;
    a6 = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v66 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = v56;
  uint64_t v28 = *(void *)(v56 + 16);
  if (v28)
  {
    int v29 = self;
    uint64_t v63 = *(void *)(v72 + qword_100ADE788);
    id v64 = v29;
    long long v61 = (void (**)(char *, uint64_t))(v15 + 8);
    swift_bridgeObjectRetain();
    BOOL v30 = (uint64_t *)(v27 + 48);
    *(void *)&long long v31 = 136315138;
    long long v59 = v31;
    unint64_t v58 = (char *)&type metadata for Any + 8;
    while (1)
    {
      uint64_t v67 = v28;
      uint64_t v32 = *(v30 - 2);
      a5 = *(v30 - 1);
      uint64_t v34 = *v30;
      uint64_t v33 = v30[1];
      unint64_t v36 = v30[2];
      uint64_t v35 = v30[3];
      uint64_t v37 = v30[5];
      sub_10001EBB0(v32, a5);
      uint64_t v68 = v34;
      swift_bridgeObjectRetain();
      sub_10001EBB0(v33, v36);
      swift_bridgeObjectRetain();
      uint64_t v69 = v35;
      swift_bridgeObjectRetain();
      sub_10001EBB0(v32, a5);
      sub_10001EBB0(v33, v36);
      swift_bridgeObjectRetain();
      uint64_t v70 = v32;
      v38.super.Class isa = sub_10096AF20().super.isa;
      unint64_t v71 = v36;
      uint64_t v72 = v33;
      v39.super.Class isa = sub_10096AF20().super.isa;
      if (v37)
      {
        NSString v40 = sub_10096BC00();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v40 = 0;
      }
      id v41 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v38.super.isa metadataVersion:v39.super.isa lastEditorDeviceName:v40];
      sub_10001E9C0(v72, v71);
      sub_10001E9C0(v70, a5);

      id v42 = [v64 etagForVersion:v41 providerDomainID:v63];
      uint64_t v43 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      a6 = v44;

      swift_bridgeObjectRetain();
      unint64_t v45 = swift_retain();
      a3 = (unint64_t)sub_10092A11C(v45, v43, (uint64_t)a6);
      swift_release();
      swift_bridgeObjectRelease();
      if (a3 >> 62)
      {
        if (!sub_10096CE70())
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v52 = v67;
          goto LABEL_33;
        }
      }
      else if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        sub_10096CC30();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        if (!v15)
        {
          __break(1u);
LABEL_41:
          swift_once();
          goto LABEL_4;
        }
      }
      id v46 = (id)fpfs_current_or_default_log();
      unint64_t v47 = v65;
      sub_10096B490();
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_10096B470();
      os_log_type_t v49 = sub_10096C5A0();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        unint64_t v51 = (void *)swift_slowAlloc();
        uint64_t v60 = a1;
        uint64_t v73 = v51;
        *(_DWORD *)uint64_t v50 = v59;
        swift_bridgeObjectRetain();
        *(void *)(v50 + 4) = sub_100719D44(v43, (unint64_t)a6, (uint64_t *)&v73);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "⚔️  marking loser %s as resolved", (uint8_t *)v50, 0xCu);
        swift_arrayDestroy();
        a1 = v60;
        swift_slowDealloc();
        swift_slowDealloc();

        (*v61)(v65, v62);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*v61)(v47, v62);
      }
      uint64_t v52 = v67;
      [v41 setConflictResolved:1];
LABEL_33:
      id v53 = v41;
      sub_10096C070();
      if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10096C0F0();
      }
      v30 += 8;
      sub_10096C150();
      sub_10096C0C0();

      sub_10001E9C0(v70, a5);
      swift_bridgeObjectRelease();
      sub_10001E9C0(v72, v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v52 - 1;
      if (!v28)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v55(v74, 0);
        goto LABEL_39;
      }
    }
  }
  swift_release();
  a6(_swiftEmptyArrayStorage, 0);
LABEL_39:
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t VFSFileTree.provideFile(for:kind:expectedFileSize:lastKnownVersion:domainVersion:requestor:options:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_10092C9A4(a1, a2, a5, a8, a9, a10);
}

uint64_t sub_1008EC5A8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7)
{
  uint64_t v91 = a7;
  long long v92 = a6;
  long long v93 = a2;
  uint64_t v94 = a3;
  sub_10001AE98(a1, (uint64_t)v104, (uint64_t *)&unk_100AD6BC0);
  uint64_t v87 = v104[1];
  unint64_t v88 = v104[0];
  id v85 = (id)v104[3];
  Swift::UInt64 v86 = v104[2];
  uint64_t v83 = v104[5];
  uint64_t v84 = v104[4];
  uint64_t v81 = v104[7];
  uint64_t v82 = v104[6];
  uint64_t v79 = v104[9];
  uint64_t v80 = v104[8];
  uint64_t v77 = v104[11];
  uint64_t v78 = v104[10];
  uint64_t v10 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100ADF160);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_10096AE50();
  uint64_t v89 = *(void *)(v75 - 8);
  uint64_t v16 = __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v74 = (char *)&v68 - v18;
  uint64_t v72 = type metadata accessor for VFSItem(0);
  uint64_t v69 = *(void *)(v72 - 8);
  uint64_t v19 = *(void *)(v69 + 64);
  uint64_t v20 = __chkstk_darwin(v72);
  uint64_t v70 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v71 = (uint64_t)&v68 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  id v25 = (char *)&v68 - v24;
  __chkstk_darwin(v23);
  uint64_t v90 = (uint64_t)&v68 - v26;
  sub_10001AE98(a1, (uint64_t)v105, (uint64_t *)&unk_100AD6BC0);
  if (!(void)v106)
  {
    unint64_t v95 = a4;
    char v96 = a5;
    *(void *)&long long v97 = v88;
    *((void *)&v97 + 1) = v87;
    *(void *)&long long v98 = v86;
    *((void *)&v98 + 1) = v85;
    *(void *)&long long v99 = v84;
    *((void *)&v99 + 1) = v83;
    *(void *)&long long v100 = v82;
    *((void *)&v100 + 1) = v81;
    *(void *)&long long v101 = v80;
    *((void *)&v101 + 1) = v79;
    *(void *)&long long v102 = v78;
    *((void *)&v102 + 1) = v77;
    uint64_t v103 = 0;
    sub_1000D3768((uint64_t)&v95);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v28 = swift_allocError();
    sub_10001AE98((uint64_t)&v95, v29, (uint64_t *)&unk_100ACD9A0);
    *uint64_t v15 = v28;
    swift_storeEnumTagMultiPayload();
    v93(v15);
    return sub_10002B770((uint64_t)v15, &qword_100ADF160);
  }
  unint64_t v76 = v15;
  unint64_t v88 = v13;
  v108[2] = v105[2];
  v108[3] = v105[3];
  v108[4] = v106;
  v108[5] = v107;
  v108[0] = v105[0];
  v108[1] = v105[1];
  uint64_t v27 = v92;
  sub_1008F3004(a4, a5, (uint64_t)v108, 8, v91, (uint64_t)v25);
  sub_1009381C4((uint64_t)v25, v90, type metadata accessor for VFSItem);
  long long v31 = (void *)swift_retain();
  int v32 = objc_sync_enter(v31);
  uint64_t v33 = v76;
  if (v32) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v27);
  }
  swift_retain();
  if (objc_sync_exit(v27)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v27);
  }
  swift_release();
  VFSItem.fetchURL()(v12);
  swift_release();
  uint64_t v34 = v89;
  uint64_t v35 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v12, 1, v75) != 1)
  {
    NSData v39 = v73;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v73, v12, v35);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v74, v39, v35);
    uint64_t v41 = *((void *)v25 + 4);
    unint64_t v40 = *((void *)v25 + 5);
    swift_bridgeObjectRetain();
    sub_100008D90(0x6F632D6863746566, (void *)0xED0000746E65746ELL, v41, v40);
    swift_bridgeObjectRelease();
    uint64_t v42 = v35;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v89 + 8);
    v89 += 8;
    v43(v39, v42);
    sub_10092D018((uint64_t)v25, type metadata accessor for VFSItem);
    uint64_t v45 = v71;
    uint64_t v44 = v72;
    LODWORD(v40) = *(unsigned __int8 *)(v90 + *(int *)(v72 + 28));
    sub_1009381C4(v90, v71, type metadata accessor for VFSItem);
    if (v40 == 1)
    {
      sub_10092D018(v45, type metadata accessor for VFSItem);
      id v46 = (void (*)(uint64_t))v93;
      unint64_t v47 = v74;
    }
    else
    {
      Swift::UInt64 v86 = a4;
      LODWORD(v87) = a5;
      uint64_t v48 = v45 + *(int *)(v44 + 28);
      LODWORD(v48) = *(unsigned __int8 *)(v48 + *(int *)(type metadata accessor for ItemMetadata() + 80));
      sub_10092D018(v45, type metadata accessor for VFSItem);
      id v46 = (void (*)(uint64_t))v93;
      uint64_t v49 = v94;
      unint64_t v47 = v74;
      if (v48 != 1)
      {
        id v54 = self;
        sub_10096AD20(v55);
        uint64_t v57 = v56;
        id v58 = [v54 readingIntentWithURL:v56 options:1];
        id v85 = v58;

        sub_10002B7CC(&qword_100ACAF70);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_100974D40;
        *(void *)(v59 + 32) = v58;
        unint64_t v95 = v59;
        sub_10096C0C0();
        unint64_t v88 = v95;
        uint64_t v60 = v70;
        sub_1009381C4(v90, v70, type metadata accessor for VFSItem);
        unint64_t v61 = (*(unsigned __int8 *)(v69 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        unint64_t v62 = (v19 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v63 = swift_allocObject();
        *(void *)(v63 + 16) = v46;
        *(void *)(v63 + 24) = v49;
        Swift::UInt64 v64 = v86;
        *(void *)(v63 + 32) = v86;
        char v65 = v87;
        *(unsigned char *)(v63 + 40) = v87;
        sub_10001158C(v60, v63 + v61, type metadata accessor for VFSItem);
        uint64_t v66 = v91;
        *(void *)(v63 + v62) = v92;
        *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v66;
        swift_retain();
        id v67 = v85;
        swift_retain();
        sub_1008E692C(v64, v65, v88, 0, (void (*)(void, void))sub_10093D298, v63);

        swift_bridgeObjectRelease();
        swift_release();
        id v53 = v74;
        goto LABEL_13;
      }
    }
    sub_10093D35C((uint64_t)&v95);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v50 = swift_allocError();
    sub_10001AE98((uint64_t)&v95, v51, (uint64_t *)&unk_100ACD9A0);
    uint64_t v52 = (uint64_t)v76;
    *unint64_t v76 = v50;
    swift_storeEnumTagMultiPayload();
    v46(v52);
    sub_10002B770(v52, &qword_100ADF160);
    id v53 = v47;
LABEL_13:
    v43(v53, v75);
    uint64_t v38 = v90;
    return sub_10092D018(v38, type metadata accessor for VFSItem);
  }
  sub_10002B770((uint64_t)v12, &qword_100ACA8C0);
  unint64_t v95 = a4;
  char v96 = a5;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  uint64_t v103 = 0;
  sub_1000D3768((uint64_t)&v95);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  uint64_t v36 = swift_allocError();
  sub_10001AE98((uint64_t)&v95, v37, (uint64_t *)&unk_100ACD9A0);
  uint64_t *v33 = v36;
  swift_storeEnumTagMultiPayload();
  v93(v33);
  sub_10002B770((uint64_t)v33, &qword_100ADF160);
  sub_10092D018((uint64_t)v25, type metadata accessor for VFSItem);
  uint64_t v38 = v90;
  return sub_10092D018(v38, type metadata accessor for VFSItem);
}

uint64_t sub_1008ED058(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, Swift::UInt64 a5, int a6, uint64_t a7, void *a8, unint64_t a9)
{
  uint64_t v135 = a8;
  int v136 = a6;
  Swift::UInt64 v137 = a5;
  uint64_t v13 = (int *)type metadata accessor for VFSItem(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B480();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002B7CC(&qword_100ADF160);
  __chkstk_darwin(v20);
  uint64_t v138 = (uint64_t *)((char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v22 = a3;
    swift_errorRetain();
    LODWORD(v140) = sub_10096A710();
    sub_100045CB4();
    char v23 = sub_10096AA60();
    swift_errorRelease();
    if (v23)
    {
      uint64_t v24 = a7 + v13[9];
      unint64_t v25 = *(void *)v24;
      uint64_t v26 = *(unsigned int *)(v24 + 8);
      uint64_t v27 = *(void *)(v24 + 16);
      uint64_t v28 = *(unsigned __int8 *)(v24 + 24);
      uint64_t v29 = *(void *)(a7 + 16);
      uint64_t v30 = *(unsigned __int8 *)(a7 + 24);
      uint64_t v31 = *(void *)(a7 + 32);
      uint64_t v32 = *(void *)(a7 + 40);
      Swift::UInt64 v140 = v137;
      LOBYTE(v141) = v136;
      unint64_t v142 = v25;
      long long v143 = v26;
      uint64_t v144 = v27;
      uint64_t v145 = v28;
      uint64_t v146 = 0;
      uint64_t v147 = v29;
      uint64_t v148 = v30;
      uint64_t v149 = v31;
      uint64_t v150 = v32;
      long long v151 = 0uLL;
      *(void *)&long long v152 = 0;
      *((void *)&v152 + 1) = a2;
      sub_1000D3768((uint64_t)&v140);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v33 = swift_allocError();
      sub_10001AE98((uint64_t)&v140, v34, (uint64_t *)&unk_100ACD9A0);
      uint64_t v35 = v138;
      *uint64_t v138 = v33;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v35 = v138;
      *uint64_t v138 = a2;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
    }
    v22(v35);
LABEL_9:
    uint64_t v44 = (uint64_t)v35;
    return sub_10002B770(v44, &qword_100ADF160);
  }
  uint64_t v124 = v15;
  int v125 = v19;
  uint64_t v127 = v17;
  uint64_t v126 = v16;
  uint64_t v130 = v20;
  uint64_t v131 = a4;
  double v134 = a3;
  uint64_t v36 = v135[17];
  uint64_t v37 = a7;
  uint64_t v38 = (uint64_t *)(a7 + v13[9]);
  uint64_t v39 = *v38;
  unint64_t v40 = (unsigned int *)(v37 + v13[14]);
  unsigned int v41 = *v40;
  unint64_t v128 = v40;
  if (*((unsigned char *)v40 + 4)) {
    unsigned int v41 = 0;
  }
  int v42 = *((_DWORD *)v38 + 2);
  v153[0] = v39;
  v153[1] = 0;
  unsigned int v154 = v41;
  int v155 = v42;
  uint64_t v156 = 0;
  uint64_t v157 = 0;
  uint64_t v132 = v13;
  uint64_t v43 = v13[7];
  uint64_t v133 = v37;
  (*(void (**)(Swift::UInt64 *__return_ptr, void *, uint64_t, void, void, uint64_t, unint64_t, void))(*(void *)v36 + 352))(&v140, v153, v37 + v43, 0, 0, 1, (a9 >> 6) & 1, 0);
  uint64_t v120 = v36;
  uint64_t v46 = v140;
  unint64_t v47 = v142;
  uint64_t v122 = v141;
  double v118 = v143;
  uint64_t v116 = v144;
  LODWORD(v115) = v145;
  uint64_t v48 = v147;
  uint64_t v114 = v146;
  LODWORD(v123) = v148;
  uint64_t v119 = v149;
  int v121 = v150;
  uint64_t v49 = v38[2];
  uint64_t v129 = v38;
  char v50 = *((unsigned char *)v38 + 24);
  swift_bridgeObjectRelease_n();
  BOOL v51 = v48 == v39;
  uint64_t v52 = v134;
  uint64_t v53 = v133;
  uint64_t v54 = v127;
  if (v51 && v123 == v42)
  {
    if (v121)
    {
      if ((v50 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_25:
      uint64_t v76 = sub_10002B7CC(&qword_100ADF168);
      uint64_t v77 = v138;
      uint64_t v78 = (uint64_t)v138 + *(int *)(v76 + 48);
      uint64_t v79 = v122;
      *uint64_t v138 = v46;
      v77[1] = v79;
      uint64_t v80 = v118;
      v77[2] = v47;
      v77[3] = (uint64_t)v80;
      v77[4] = v116;
      *((unsigned char *)v77 + 40) = v115;
      v77[6] = v114;
      sub_1009381C4(v53, v78, type metadata accessor for VFSItem);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v77, 0, 1, v76);
      swift_storeEnumTagMultiPayload();
      sub_10002D830(v79, v47);
      v52(v77);
      sub_10001E9AC(v79, v47);
      uint64_t v44 = (uint64_t)v77;
      return sub_10002B770(v44, &qword_100ADF160);
    }
    if (v119 == v49) {
      char v75 = v50;
    }
    else {
      char v75 = 1;
    }
    if ((v75 & 1) == 0) {
      goto LABEL_25;
    }
  }
LABEL_16:
  uint64_t v116 = v46;
  id v55 = (id)fpfs_current_or_default_log();
  uint64_t v56 = v125;
  sub_10096B490();
  uint64_t v57 = (uint64_t)v124;
  sub_1009381C4(v53, (uint64_t)v124, type metadata accessor for VFSItem);
  id v58 = sub_10096B470();
  os_log_type_t v59 = sub_10096C5B0();
  double v118 = v58;
  BOOL v60 = os_log_type_enabled(v58, v59);
  unint64_t v117 = v47;
  if (v60)
  {
    uint64_t v61 = swift_slowAlloc();
    Swift::UInt64 v140 = swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 136446466;
    uint64_t v115 = v61 + 4;
    uint64_t v62 = VFSVersion.description.getter(v48, v123, v119, v121);
    uint64_t v139 = sub_100719D44(v62, v63, (uint64_t *)&v140);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2082;
    uint64_t v123 = v61 + 14;
    uint64_t v64 = v57 + v132[9];
    uint64_t v65 = *(void *)v64;
    int v121 = *(_DWORD *)(v64 + 8);
    uint64_t v119 = *(void *)(v64 + 16);
    LODWORD(v115) = *(unsigned __int8 *)(v64 + 24);
    swift_bridgeObjectRelease_n();
    uint64_t v66 = VFSVersion.description.getter(v65, v121, v119, v115);
    uint64_t v139 = sub_100719D44(v66, v67, (uint64_t *)&v140);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_10092D018(v57, type metadata accessor for VFSItem);
    uint64_t v68 = v118;
    _os_log_impl((void *)&_mh_execute_header, v118, v59, "Failed to capture a stable version of item: %{public}s != %{public}s", (uint8_t *)v61, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10092D018(v57, type metadata accessor for VFSItem);
  }
  uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v56, v126);
  uint64_t v70 = v120;
  char v71 = v136;
  uint64_t v72 = v129;
  uint64_t v73 = v132;
  if (v116)
  {
    __chkstk_darwin(v69);
    *(&v114 - 4) = v70;
    *((_DWORD *)&v114 - 6) = 0;
    *(&v114 - 2) = v74;
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    *(unsigned char *)(v70 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v70 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
  }
  unint64_t v81 = *v72;
  uint64_t v82 = *((unsigned int *)v72 + 2);
  uint64_t v83 = v72[2];
  uint64_t v84 = *((unsigned __int8 *)v72 + 24);
  uint64_t v85 = *(void *)(v133 + 16);
  uint64_t v86 = *(unsigned __int8 *)(v133 + 24);
  uint64_t v87 = *(void *)(v133 + 32);
  uint64_t v88 = *(void *)(v133 + 40);
  Swift::UInt64 v140 = v137;
  LOBYTE(v141) = v71;
  unint64_t v142 = v81;
  long long v143 = v82;
  uint64_t v144 = v83;
  uint64_t v145 = v84;
  uint64_t v146 = 0;
  uint64_t v147 = v85;
  uint64_t v148 = v86;
  uint64_t v149 = v87;
  uint64_t v150 = v88;
  long long v151 = 0u;
  long long v152 = 0u;
  sub_1000D3768((uint64_t)&v140);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  id v89 = (id)swift_allocError();
  sub_10001AE98((uint64_t)&v140, v90, (uint64_t *)&unk_100ACD9A0);
  swift_bridgeObjectRetain();
  swift_willThrow();
  sub_10001E9AC(v122, v117);
  swift_errorRetain();
  LODWORD(v140) = sub_10096A720();
  sub_100045CB4();
  LOBYTE(v88) = sub_10096AA60();
  swift_errorRelease();
  if ((v88 & 1) == 0)
  {
    swift_errorRetain();
    LODWORD(v140) = sub_10096A6A0();
    char v98 = sub_10096AA60();
    swift_errorRelease();
    if (v98)
    {
      long long v99 = (unsigned int *)(v133 + v73[11]);
      if ((v99[1] & 1) == 0)
      {
        uint64_t v100 = *v99;
        swift_errorRelease();
        id v89 = objc_msgSend(self, "fp_errorForDataProtectionClass:", v100);
        swift_willThrow();
      }
    }
    goto LABEL_40;
  }
  swift_errorRelease();
  uint64_t v91 = *v72;
  if (*((unsigned char *)v128 + 4)) {
    unsigned int v92 = 0;
  }
  else {
    unsigned int v92 = *v128;
  }
  uint64_t v129 = v72;
  unsigned int v93 = *((_DWORD *)v72 + 2);
  uint64_t v94 = v135;
  unint64_t v95 = (void *)swift_retain();
  if (objc_sync_enter(v95)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v94);
  }
  swift_retain();
  if (objc_sync_exit(v94)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v94);
  }
  swift_release();
  swift_release();
  Swift::UInt64 v140 = v91;
  uint64_t v141 = 0;
  unint64_t v142 = __PAIR64__(v93, v92);
  long long v143 = 0;
  uint64_t v144 = 0;
  uint64_t v96 = fpfs_openfdbyhandle();
  if ((v96 & 0x80000000) != 0)
  {
    int v101 = sub_10096B4D0();
    id v89 = (id)sub_1005970E0(v101, 0, 0, 0xAu);
    swift_willThrow();
    uint64_t v52 = v134;
    uint64_t v72 = v129;
LABEL_40:
    swift_errorRetain();
    LODWORD(v140) = sub_10096A710();
    char v102 = sub_10096AA60();
    swift_errorRelease();
    if ((v102 & 1) == 0)
    {
      v113 = v138;
      *uint64_t v138 = (uint64_t)v89;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v52(v113);
      swift_errorRelease();
      uint64_t v44 = (uint64_t)v113;
      return sub_10002B770(v44, &qword_100ADF160);
    }
    unint64_t v103 = *v72;
    uint64_t v104 = *((unsigned int *)v72 + 2);
    uint64_t v105 = v72[2];
    uint64_t v106 = *((unsigned __int8 *)v72 + 24);
    uint64_t v107 = *(void *)(v133 + 16);
    uint64_t v108 = *(unsigned __int8 *)(v133 + 24);
    uint64_t v109 = *(void *)(v133 + 32);
    uint64_t v110 = *(void *)(v133 + 40);
    Swift::UInt64 v140 = v137;
    LOBYTE(v141) = v71;
    unint64_t v142 = v103;
    long long v143 = v104;
    uint64_t v144 = v105;
    uint64_t v145 = v106;
    uint64_t v146 = 0;
    uint64_t v147 = v107;
    uint64_t v148 = v108;
    uint64_t v149 = v109;
    uint64_t v150 = v110;
    long long v151 = 0uLL;
    *(void *)&long long v152 = 0;
    *((void *)&v152 + 1) = v89;
    sub_1000D3768((uint64_t)&v140);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v111 = swift_allocError();
    sub_10001AE98((uint64_t)&v140, v112, (uint64_t *)&unk_100ACD9A0);
    uint64_t v35 = v138;
    *uint64_t v138 = v111;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    v52(v35);
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v97 = v96;
  sub_1008E43D0(v137, v71, v96);
  return sub_100595FB8(v97);
}

uint64_t sub_1008EDEB4(uint64_t a1, char a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v7 + 224);
  id v30 = *(id *)(v7 + 216);
  uint64_t v17 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(void *)(v18 + 24) = a7;
  uint64_t v19 = swift_allocObject();
  long long v20 = a3[3];
  *(_OWORD *)(v19 + 72) = a3[2];
  *(_OWORD *)(v19 + 88) = v20;
  long long v21 = a3[5];
  *(_OWORD *)(v19 + 104) = a3[4];
  *(_OWORD *)(v19 + 120) = v21;
  long long v22 = a3[1];
  *(_OWORD *)(v19 + 40) = *a3;
  *(void *)(v19 + 16) = v7;
  *(void *)(v19 + 24) = a1;
  *(unsigned char *)(v19 + 32) = a2;
  *(_OWORD *)(v19 + 56) = v22;
  uint64_t v23 = v29;
  *(void *)(v19 + 136) = v28;
  *(void *)(v19 + 144) = v23;
  *(void *)(v19 + 152) = a6;
  *(void *)(v19 + 160) = a7;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = sub_10021E33C;
  v24[3] = v18;
  v24[4] = v16;
  swift_retain_n();
  id v25 = v30;
  swift_retain();
  sub_100938D34((uint64_t)a3);
  swift_retain();
  swift_retain();
  sub_1003946CC(v25, (uint64_t)v15, (void (*)())sub_10093BD48, v24, (uint64_t)sub_10093BD2C, v19);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v15, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008EE0E4(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, off_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v13 = *(unsigned int *)(a4 + 8);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v15 = *(unsigned __int8 *)(a4 + 48);
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v17 = *(void *)(a4 + 64);
  uint64_t v18 = *(void *)(a4 + 88);
  uint64_t v19 = *(unsigned char *)(a4 + 24) & 1;
  v72[0] = *(void *)a4;
  v72[1] = v13;
  v72[2] = v14;
  v72[3] = v19;
  long long v73 = *(_OWORD *)(a4 + 32);
  uint64_t v74 = v15;
  uint64_t v75 = v16;
  long long v77 = *(_OWORD *)(a4 + 72);
  uint64_t v76 = v17;
  uint64_t v78 = v18;
  sub_1008E3FC4(a2, a3, (uint64_t)v72, (uint64_t)&v68);
  long long v20 = (void *)swift_retain();
  if (objc_sync_enter(v20)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  v55[1] = a8;
  uint64_t v56 = a7;
  swift_retain();
  if (objc_sync_exit(a1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  uint64_t v21 = swift_release();
  uint64_t v57 = v55;
  __chkstk_darwin(v21);
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  long long v22 = v68;
  long long v64 = v68;
  unsigned int v23 = v69;
  unsigned int v24 = HIDWORD(v69);
  unint64_t v65 = v69;
  sub_10001AE98((uint64_t)&v70, (uint64_t)v71, &qword_100ADF5E0);
  uint64_t v25 = sub_10001AE98((uint64_t)v71, (uint64_t)v79, &qword_100ADF5E0);
  if (v79[1])
  {
    uint64_t v26 = __chkstk_darwin(v25);
    if ((v28 & 0x1000000000000000) != 0 || !(v28 & 0x2000000000000000 | v27 & 0x1000000000000000))
    {
LABEL_46:
      sub_10096CBC0();
      sub_10021E550((uint64_t)&v68);
    }
    else
    {
      __chkstk_darwin(v26);
      if ((v30 & 0x2000000000000000) != 0)
      {
        v58[0] = v29;
        v58[1] = v30 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v66 = v58;
        long long v60 = v64;
        unint64_t v61 = v65;
        uint64_t v62 = v58;
        uint64_t v63 = v67;
        unsigned int v35 = fpfs_openfdbyhandle();
        if ((v35 & 0x80000000) != 0)
        {
          int v48 = sub_10096B4D0();
          uint64_t v37 = sub_1005970E0(v48, 0, 0, 0xAu);
          swift_willThrow();
          sub_10021E550((uint64_t)&v68);
          goto LABEL_34;
        }
        unsigned int v59 = v35;
        sub_10021E550((uint64_t)&v68);
      }
      else
      {
        if ((v29 & 0x1000000000000000) != 0)
        {
          uint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v31 = sub_10096CC90();
        }
        unsigned int v59 = sub_100441D24(v31, v32, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
        sub_10021E550((uint64_t)&v68);
      }
    }
    uint64_t v34 = v59;
  }
  else
  {
    uint64_t v66 = 0;
    long long v60 = v22;
    unint64_t v61 = __PAIR64__(v24, v23);
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v33 = fpfs_openfdbyhandle();
    if ((v33 & 0x80000000) != 0)
    {
      int v36 = sub_10096B4D0();
      uint64_t v37 = sub_1005970E0(v36, 0, 0, 0xAu);
      swift_willThrow();
      goto LABEL_34;
    }
    uint64_t v34 = v33;
  }
  off_t v38 = lseek(v34, a5 & ~(a5 >> 63), 4);
  if (v38 < 0)
  {
    unint64_t v40 = _swiftEmptyArrayStorage;
    off_t v42 = -1;
LABEL_28:
    int v46 = sub_10096B4D0();
    uint64_t v37 = sub_1005970E0(v46, 28, 0, 0xAu);
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v64) = sub_10096A690();
    sub_100045CB4();
    char v47 = sub_10096AA60();
    swift_errorRelease();
    if (v47)
    {
      swift_errorRelease();
      if (a5 == v42) {
        goto LABEL_42;
      }
      goto LABEL_36;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    sub_100595FB8(v34);
LABEL_34:
    char v50 = v56;
    swift_errorRetain();
    v50(v37, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  unint64_t v39 = v38;
  unint64_t v40 = _swiftEmptyArrayStorage;
  while (1)
  {
    off_t v41 = lseek(v34, v39, 3);
    if (v41 < 0)
    {
      int v49 = sub_10096B4D0();
      uint64_t v37 = sub_1005970E0(v49, 28, 0, 0xAu);
      swift_willThrow();
      goto LABEL_33;
    }
    off_t v42 = v41;
    if (v41 >= a6) {
      break;
    }
    if (v41 < v39)
    {
      __break(1u);
      goto LABEL_46;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v40 = sub_1006A4798(0, v40[2] + 1, 1, v40);
    }
    unint64_t v44 = v40[2];
    unint64_t v43 = v40[3];
    if (v44 >= v43 >> 1) {
      unint64_t v40 = sub_1006A4798((void *)(v43 > 1), v44 + 1, 1, v40);
    }
    v40[2] = v44 + 1;
    uint64_t v45 = &v40[2 * v44];
    v45[4] = v39;
    v45[5] = v42;
    unint64_t v39 = lseek(v34, v42, 4);
    a5 = v42;
    if ((v39 & 0x8000000000000000) != 0) {
      goto LABEL_28;
    }
  }
  a5 = v39;
  if (v39 == v41) {
    goto LABEL_42;
  }
LABEL_36:
  if (((a5 | v42) & 0x8000000000000000) == 0)
  {
    if (v42 < a5)
    {
      __break(1u);
    }
    else if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_39:
      unint64_t v53 = v40[2];
      unint64_t v52 = v40[3];
      if (v53 >= v52 >> 1) {
        unint64_t v40 = sub_1006A4798((void *)(v52 > 1), v53 + 1, 1, v40);
      }
      v40[2] = v53 + 1;
      uint64_t v54 = &v40[2 * v53];
      v54[4] = a5;
      v54[5] = v42;
      goto LABEL_42;
    }
    unint64_t v40 = sub_1006A4798(0, v40[2] + 1, 1, v40);
    goto LABEL_39;
  }
LABEL_42:
  if ((v34 & 0x80000000) == 0) {
    close(v34);
  }
  v56((uint64_t)v40, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008EE770(uint64_t a1, uint64_t (*a2)(uint64_t a1), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t a1), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v181 = a8;
  uint64_t v182 = a7;
  uint64_t v195 = a6;
  uint64_t v198 = a5;
  v200 = a2;
  uint64_t v179 = sub_10096B3D0();
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  long long v174 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v177 = (uint64_t)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v191 = (uint64_t (*)(uint64_t))((char *)&v163 - v15);
  uint64_t v173 = type metadata accessor for Signpost(0);
  uint64_t v175 = *(void *)(v173 - 8);
  uint64_t v16 = __chkstk_darwin(v173);
  uint64_t v180 = (uint64_t)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = v17;
  __chkstk_darwin(v16);
  uint64_t v196 = (uint64_t)&v163 - v18;
  v197 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v19 = __chkstk_darwin(v197);
  uint64_t v172 = (uint64_t)&v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v188 = (uint64_t)&v163 - v21;
  uint64_t v189 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v189);
  unint64_t v190 = (uint64_t *)((char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_10002B7CC(&qword_100AD0DF0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_10002B7CC(&qword_100AD0E00);
  uint64_t v26 = *(void *)(v202 - 8);
  uint64_t v27 = __chkstk_darwin(v202);
  uint64_t v193 = (char *)&v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  long long v171 = (char *)&v163 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v187 = (char *)&v163 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v194 = (char *)&v163 - v34;
  __chkstk_darwin(v33);
  uint64_t v199 = (uint64_t)&v163 - v35;
  uint64_t v36 = sub_10096A7B0();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v39 = (char *)&v163 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v40);
  off_t v42 = (uint64_t *)((char *)&v163 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for VFSStagedContext();
  uint64_t v201 = a1;
  uint64_t v43 = swift_dynamicCastClass();
  if (!v43)
  {
    LODWORD(v203) = 22;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    uint64_t v58 = sub_10096A790();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    *off_t v42 = v58;
    swift_storeEnumTagMultiPayload();
    v200((uint64_t)v42);
    return sub_10002B770((uint64_t)v42, &qword_100AD0E10);
  }
  uint64_t v44 = v43;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = 0;
  int v46 = (void *)swift_allocObject();
  v46[2] = a4;
  v46[3] = v44;
  uint64_t v183 = v44;
  char v47 = v200;
  v46[4] = v200;
  v46[5] = a3;
  int v48 = v198;
  sub_10001AE98((uint64_t)v198, (uint64_t)(v46 + 6), (uint64_t *)&unk_100ACF710);
  uint64_t v184 = v46;
  v46[13] = v45;
  sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v192 = swift_allocBox();
  uint64_t v50 = v49;
  sub_10002B70C(v195, v49, (uint64_t *)&unk_100ADBFF0);
  if (*(unsigned char *)(v50 + 8) != 2 || *(void *)v50)
  {
    swift_retain_n();
    sub_100245AD4(v48, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    BOOL v51 = v47;
    unint64_t v52 = v48;
    uint64_t v54 = *(void *)(v50 + 16);
    unint64_t v53 = *(void *)(v50 + 24);
    swift_retain_n();
    sub_100245AD4(v52, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    uint64_t v55 = qword_100ACC040;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v55 != -1) {
      swift_once();
    }
    BOOL v56 = sub_1007B7F20(v54, v53, static Filename.trashName, *((unint64_t *)&static Filename.trashName + 1));
    swift_bridgeObjectRelease();
    char v47 = v51;
    if (v56)
    {
      if (qword_100ACC048 != -1) {
        swift_once();
      }
      uint64_t v57 = unk_100B0B120;
      *(void *)(v50 + 16) = qword_100B0B118;
      *(void *)(v50 + 24) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v169 = a3;
  uint64_t v185 = v45;
  uint64_t v60 = *(void *)v50;
  uint64_t v61 = *(void *)(v50 + 16);
  uint64_t v62 = *(void *)(v50 + 24);
  char v63 = *(unsigned char *)(v50 + 8);
  swift_bridgeObjectRetain();
  VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v60, v63, v61, v62, 3, v25);
  swift_bridgeObjectRelease();
  uint64_t v64 = v202;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v202) != 1)
  {
    uint64_t v167 = a4;
    uint64_t v71 = *(int *)(v64 + 48);
    uint64_t v72 = v199;
    uint64_t v73 = v199 + v71;
    uint64_t v74 = (uint64_t)&v25[v71];
    uint64_t v75 = sub_10096AE50();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = v76;
    uint64_t v164 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 32);
    uint64_t v163 = v76 + 32;
    v164(v72, v25, v75);
    sub_10001158C(v74, v73, type metadata accessor for VFSItem);
    uint64_t v78 = (uint64_t)&v194[*(int *)(v64 + 48)];
    uint64_t v166 = v77;
    uint64_t v79 = *(void (**)(void))(v77 + 16);
    long long v170 = v79;
    v79();
    uint64_t v165 = type metadata accessor for VFSItem;
    sub_1009381C4(v73, v78, type metadata accessor for VFSItem);
    uint64_t v168 = type metadata accessor for VFSItem(0);
    uint64_t v80 = v188;
    sub_1009381C4(v78 + *(int *)(v168 + 28), v188, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    sub_10092D018(v78, type metadata accessor for VFSItem);
    int v81 = *(unsigned __int8 *)(v80 + v197[16]);
    sub_10092D018(v80, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v82 = (uint64_t)v187;
    uint64_t v83 = (uint64_t)&v187[*(int *)(v64 + 48)];
    uint64_t v84 = v72;
    uint64_t v85 = (uint64_t (*)(uint64_t))v75;
    uint64_t v186 = v77 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v79)(v187, v84, v75);
    uint64_t v195 = v73;
    sub_1009381C4(v73, v83, v165);
    if (v81 == 1)
    {
      sub_10002B770(v82, &qword_100AD0E00);
      uint64_t v86 = *(char **)(v166 + 8);
      uint64_t v188 = (v166 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v87 = v194;
      uint64_t v194 = v86;
      ((void (*)(char *, uint64_t))v86)(v87, v75);
      uint64_t v88 = v197;
      id v89 = v193;
      uint64_t v90 = v202;
      uint64_t v91 = v195;
      uint64_t v92 = v199;
    }
    else
    {
      uint64_t v93 = v166;
      uint64_t v94 = v171;
      uint64_t v95 = (uint64_t)&v171[*(int *)(v202 + 48)];
      v164((uint64_t)v171, (char *)v82, v75);
      sub_10001158C(v83, v95, type metadata accessor for VFSItem);
      uint64_t v96 = v172;
      sub_1009381C4(v95 + *(int *)(v168 + 28), v172, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      sub_10092D018(v95, type metadata accessor for VFSItem);
      uint64_t v88 = v197;
      int v97 = *(unsigned __int8 *)(v96 + v197[17]);
      sub_10092D018(v96, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      if (v97 == 2)
      {
        char v98 = *(void (**)(char *, uint64_t (*)(uint64_t)))(v93 + 8);
        uint64_t v188 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v98(v94, v85);
        long long v99 = v194;
        uint64_t v194 = (char *)v98;
        v98(v99, v85);
        id v89 = v193;
        uint64_t v90 = v202;
        uint64_t v91 = v195;
        uint64_t v92 = v199;
        goto LABEL_20;
      }
      uint64_t v100 = *(void (**)(char *, uint64_t (*)(uint64_t)))(v93 + 8);
      uint64_t v188 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v100(v94, v85);
      int v101 = v194;
      uint64_t v194 = (char *)v100;
      v100(v101, v85);
      id v89 = v193;
      uint64_t v90 = v202;
      uint64_t v91 = v195;
      uint64_t v92 = v199;
      if ((v97 & 1) == 0) {
        goto LABEL_20;
      }
    }
    uint64_t v102 = (uint64_t)&v89[*(int *)(v90 + 48)];
    ((void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v170)(v89, v92, v85);
    sub_1009381C4(v91, v102, type metadata accessor for VFSItem);
    char v103 = *(unsigned char *)(v102 + *(int *)(v168 + 28) + v88[20]);
    sub_10092D018(v102, type metadata accessor for VFSItem);
    ((void (*)(char *, uint64_t (*)(uint64_t)))v194)(v89, v85);
    if ((v103 & 1) == 0)
    {
      char v159 = *(unsigned char *)(v50 + 8);
      v203 = *(uint64_t (**)(uint64_t))v50;
      LOBYTE(v204) = v159;
      long long v205 = 0u;
      long long v206 = 0u;
      long long v207 = 0u;
      long long v208 = 0u;
      long long v209 = 0u;
      long long v210 = 0u;
      uint64_t v211 = 0;
      sub_1000D3768((uint64_t)&v203);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v160 = swift_allocError();
      sub_10001AE98((uint64_t)&v203, v161, (uint64_t *)&unk_100ACD9A0);
      uint64_t v162 = (uint64_t)v190;
      *unint64_t v190 = v160;
      swift_storeEnumTagMultiPayload();
      sub_1008EFF98(v162, v167, v183, (void (*)(void *))v200, v169, v198, v185);
      swift_release();
      swift_release();
      sub_10002B770(v162, (uint64_t *)&unk_100ACEC90);
      unint64_t v69 = &qword_100AD0E00;
      uint64_t v70 = v92;
      goto LABEL_30;
    }
LABEL_20:
    uint64_t v104 = (uint64_t)&v89[*(int *)(v90 + 48)];
    uint64_t v105 = v170;
    ((void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v170)(v89, v92, v85);
    sub_1009381C4(v91, v104, type metadata accessor for VFSItem);
    uint64_t v106 = *(void *)v104;
    char v107 = *(unsigned char *)(v104 + 8);
    sub_10092D018(v104, type metadata accessor for VFSItem);
    *(void *)uint64_t v50 = v106;
    *(unsigned char *)(v50 + 8) = v107;
    ((void (*)(char *, uint64_t (*)(uint64_t)))v194)(v89, v85);
    uint64_t v108 = v92;
    uint64_t v109 = v105;
    if (qword_100ACC1D0 != -1) {
      swift_once();
    }
    unint64_t v190 = (uint64_t *)qword_100B0B650;
    uint64_t v110 = v178;
    uint64_t v111 = v191;
    uint64_t v112 = v179;
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v178 + 56))(v191, 1, 1, v179);
    v203 = 0;
    unint64_t v204 = 0xE000000000000000;
    sub_10096CBD0(18);
    swift_bridgeObjectRelease();
    v203 = (uint64_t (*)(uint64_t))0xD000000000000010;
    unint64_t v204 = 0x80000001009BEC00;
    uint64_t v113 = (uint64_t)&v89[*(int *)(v90 + 48)];
    ((void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v109)(v89, v108, v85);
    sub_1009381C4(v195, v113, type metadata accessor for VFSItem);
    uint64_t v114 = sub_10096AE10();
    uint64_t v116 = v115;
    v200 = v85;
    ((void (*)(char *, uint64_t (*)(uint64_t)))v194)(v89, v85);
    v212._countAndFlagsBits = v114;
    v212._object = v116;
    sub_10096BDC0(v212);
    swift_bridgeObjectRelease();
    sub_10092D018(v113, type metadata accessor for VFSItem);
    double v118 = v203;
    unint64_t v117 = v204;
    uint64_t v119 = v177;
    sub_10002B70C((uint64_t)v111, v177, &qword_100AD0830);
    int v120 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v119, 1, v112);
    uint64_t v198 = v118;
    if (v120 == 1)
    {
      int v121 = v190;
      uint64_t v122 = v190;
      uint64_t v123 = v174;
      sub_10096B3B0();
      sub_10002B770(v119, &qword_100AD0830);
      uint64_t v124 = v173;
    }
    else
    {
      uint64_t v123 = v174;
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v174, v119, v112);
      uint64_t v124 = v173;
      int v121 = v190;
    }
    uint64_t v125 = v196;
    (*(void (**)(uint64_t, char *, uint64_t))(v110 + 16))(v196, v123, v112);
    *(void *)(v125 + *(int *)(v124 + 20)) = v121;
    uint64_t v126 = v125 + *(int *)(v124 + 24);
    *(void *)uint64_t v126 = "Coordination: Acquiring for Creation";
    *(void *)(v126 + 8) = 36;
    uint64_t v127 = v110;
    *(unsigned char *)(v126 + 16) = 2;
    unint64_t v128 = v121;
    uint64_t v129 = v112;
    swift_bridgeObjectRetain();
    sub_10096C770();
    sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
    uint64_t v130 = swift_allocObject();
    *(_OWORD *)(v130 + 16) = xmmword_100973BB0;
    *(void *)(v130 + 56) = &type metadata for String;
    *(void *)(v130 + 64) = sub_1000240A4();
    *(void *)(v130 + 32) = v198;
    *(void *)(v130 + 40) = v117;
    sub_10096B390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v123, v129);
    swift_bridgeObjectRelease();
    sub_10002B770((uint64_t)v191, &qword_100AD0830);
    uint64_t v131 = self;
    uint64_t v132 = v193;
    uint64_t v133 = (uint64_t)&v193[*(int *)(v202 + 48)];
    uint64_t v135 = v199;
    double v134 = v200;
    ((void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v170)(v193, v199, v200);
    uint64_t v198 = type metadata accessor for VFSItem;
    sub_1009381C4(v195, v133, type metadata accessor for VFSItem);
    sub_10096AD20(v136);
    uint64_t v138 = v137;
    v191 = type metadata accessor for VFSItem;
    sub_10092D018(v133, type metadata accessor for VFSItem);
    uint64_t v139 = (void (*)(char *, uint64_t (*)(uint64_t)))v194;
    ((void (*)(char *, uint64_t (*)(uint64_t)))v194)(v132, v134);
    unint64_t v190 = (uint64_t *)[v131 writingIntentWithURL:v138 options:8];

    uint64_t v141 = __chkstk_darwin(v140);
    __chkstk_darwin(v141);
    sub_10002B7CC((uint64_t *)&unk_100AD7510);
    sub_10096ADB0();
    char v142 = (char)v203;
    uint64_t v143 = (uint64_t)&v132[*(int *)(v202 + 48)];
    ((void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v170)(v132, v135, v134);
    sub_1009381C4(v195, v143, v198);
    LOBYTE(v138) = *(unsigned char *)(v143 + *(int *)(v168 + 28) + v197[20]);
    sub_10092D018(v143, v191);
    v139(v132, v134);
    if (v138)
    {
      v200 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
      uint64_t v144 = v176;
      uint64_t v145 = v175;
      uint64_t v146 = v190;
    }
    else
    {
      sub_10002B7CC(&qword_100ACAF70);
      uint64_t v147 = swift_allocObject();
      *(_OWORD *)(v147 + 16) = xmmword_100974D40;
      uint64_t v146 = v190;
      *(void *)(v147 + 32) = v190;
      v203 = (uint64_t (*)(uint64_t))v147;
      sub_10096C0C0();
      v200 = v203;
      uint64_t v148 = v146;
      uint64_t v144 = v176;
      uint64_t v145 = v175;
    }
    LODWORD(v202) = v142 & 1;
    uint64_t v149 = v180;
    sub_1009381C4(v196, v180, type metadata accessor for Signpost);
    unint64_t v150 = (*(unsigned __int8 *)(v145 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    unint64_t v151 = (v144 + v150 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v152 = (v151 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v153 = (void *)swift_allocObject();
    uint64_t v154 = v192;
    void v153[2] = v167;
    v153[3] = v154;
    int v155 = v184;
    v153[4] = sub_10093B9C4;
    v153[5] = v155;
    uint64_t v156 = v185;
    v153[6] = v146;
    v153[7] = v156;
    sub_10001158C(v149, (uint64_t)v153 + v150, type metadata accessor for Signpost);
    *(void *)((char *)v153 + v151) = v183;
    uint64_t v157 = v182;
    sub_10001AE98(v182, (uint64_t)v153 + v152, &qword_100AD0EA0);
    *(void *)((char *)v153 + ((v152 + 255) & 0xFFFFFFFFFFFFFFF8)) = v181;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v158 = v146;
    swift_retain();
    swift_retain();
    sub_100244374(v157);
    sub_1008E692C(0, 255, (unint64_t)v200, v202, (void (*)(void, void))sub_10093BBC8, (uint64_t)v153);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10092D018(v196, type metadata accessor for Signpost);
    sub_10002B770(v199, &qword_100AD0E00);
    swift_release();
    return swift_release();
  }
  sub_10002B770((uint64_t)v25, &qword_100AD0DF0);
  char v65 = *(unsigned char *)(v50 + 8);
  v203 = *(uint64_t (**)(uint64_t))v50;
  LOBYTE(v204) = v65;
  long long v205 = 0u;
  long long v206 = 0u;
  long long v207 = 0u;
  long long v208 = 0u;
  long long v209 = 0u;
  long long v210 = 0u;
  uint64_t v211 = 0;
  sub_1000D3768((uint64_t)&v203);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  uint64_t v66 = swift_allocError();
  sub_10001AE98((uint64_t)&v203, v67, (uint64_t *)&unk_100ACD9A0);
  uint64_t v68 = (uint64_t)v190;
  *unint64_t v190 = v66;
  swift_storeEnumTagMultiPayload();
  sub_1008EFF98(v68, a4, v183, (void (*)(void *))v47, v169, v198, v185);
  swift_release();
  swift_release();
  unint64_t v69 = (uint64_t *)&unk_100ACEC90;
  uint64_t v70 = v68;
LABEL_30:
  sub_10002B770(v70, v69);
  swift_release();
  return swift_release();
}

uint64_t sub_1008EFF98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v23 = a7;
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v10 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v27 = v19;
  int v28 = 1;
  uint64_t v29 = v20;
  swift_retain();
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
  *(unsigned char *)(v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  if (*(void *)(v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C7F0(1uLL);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  sub_10002B70C(a1, (uint64_t)v15, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v18 = *v15;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v23 + 16);
    sub_10001AE98((uint64_t)v15, (uint64_t)v12, &qword_100ACB910);
    sub_1008F0230((uint64_t)v12, v24, a2, v21, (uint64_t)v18);
    sub_10002B770((uint64_t)v12, &qword_100ACB910);
  }
  swift_storeEnumTagMultiPayload();
  v26(v18);
  return sub_10002B770((uint64_t)v18, &qword_100AD0E10);
}

uint64_t sub_1008F0230@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10001AE98((uint64_t)a2, (uint64_t)v22, (uint64_t *)&unk_100ACF710);
  if (v22[2] >> 60 != 11 && v22[0])
  {
    uint64_t v14 = *(void *)(a3 + 136);
    __chkstk_darwin(v13);
    *(void *)&v21[-32] = v14;
    *(_DWORD *)&v21[-24] = 0;
    *(void *)&v21[-16] = v15;
    sub_100245AD4(a2, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    *(unsigned char *)(v14 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v14 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
    sub_100245AD4(a2, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
  }
  sub_10002B70C(a1, (uint64_t)v12, &qword_100ACB910);
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for VFSItem(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v12, 1, v16) == 1)
  {
    sub_10002B770((uint64_t)v12, &qword_100ACB910);
    uint64_t v17 = sub_10002B7CC(&qword_100AD0E08);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  else
  {
    uint64_t v18 = *a4;
    sub_10001158C((uint64_t)v12, a5, type metadata accessor for VFSItem);
    uint64_t v19 = sub_10002B7CC(&qword_100AD0E08);
    *(void *)(a5 + *(int *)(v19 + 36)) = v18;
    *(unsigned char *)(a5 + *(int *)(v19 + 40)) = 0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a5, 0, 1, v19);
  }
  uint64_t result = sub_10002B7CC(&qword_100AD0E18);
  *(void *)(a5 + *(int *)(result + 48)) = 0;
  return result;
}

uint64_t sub_1008F0548(uint64_t a1, void (*a2)(char *, char *, uint64_t), char *a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, void (*a7)(char *, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v135 = a8;
  uint64_t v153 = a7;
  uint64_t v156 = a6;
  char v159 = a5;
  uint64_t v160 = a3;
  unint64_t v150 = a2;
  uint64_t v144 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v144);
  uint64_t v125 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096A7B0();
  uint64_t v128 = *(void *)(v12 - 8);
  uint64_t v129 = v12;
  __chkstk_darwin(v12);
  uint64_t v127 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for VFSItem(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v131 = v14;
  uint64_t v132 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v126 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v130 = (char *)&v117 - v18;
  uint64_t v19 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v133 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v139 = (uint64_t)&v117 - v22;
  uint64_t v23 = sub_10096B830();
  uint64_t v137 = *(void *)(v23 - 8);
  uint64_t v138 = v23;
  __chkstk_darwin(v23);
  int v136 = (id *)((char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v149 = sub_10096B3D0();
  uint64_t v143 = *(char **)(v149 - 8);
  __chkstk_darwin(v149);
  char v142 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v141 = (uint64_t)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v151 = (uint64_t)&v117 - v29;
  uint64_t v148 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v148);
  uint64_t v147 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10096AE50();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v154 = v31;
  uint64_t v155 = v32;
  __chkstk_darwin(v31);
  unint64_t v152 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v157);
  uint64_t v158 = (uint64_t *)((char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_10002B7CC(&qword_100AD0DF0);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10002B7CC(&qword_100AD0E00);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  double v134 = (char *)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v146 = (char *)&v117 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v140 = (char *)&v117 - v45;
  __chkstk_darwin(v44);
  char v47 = (char *)&v117 - v46;
  uint64_t v145 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v48 = swift_projectBox();
  swift_beginAccess();
  uint64_t v49 = *(void *)v48;
  uint64_t v50 = *(void *)(v48 + 16);
  uint64_t v51 = *(void *)(v48 + 24);
  char v52 = *(unsigned char *)(v48 + 8);
  swift_bridgeObjectRetain();
  VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v49, v52, v50, v51, 1, v37);
  uint64_t v53 = v38;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_10002B770((uint64_t)v37, &qword_100AD0DF0);
    swift_beginAccess();
    char v54 = *(unsigned char *)(v48 + 8);
    uint64_t v161 = *(void *)v48;
    char v162 = v54;
    long long v163 = 0u;
    long long v164 = 0u;
    long long v165 = 0u;
    long long v166 = 0u;
    long long v167 = 0u;
    long long v168 = 0u;
    uint64_t v169 = 0;
    sub_1000D3768((uint64_t)&v161);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v55 = swift_allocError();
    sub_10001AE98((uint64_t)&v161, v56, (uint64_t *)&unk_100ACD9A0);
    uint64_t v57 = v158;
    *uint64_t v158 = v55;
    swift_storeEnumTagMultiPayload();
    v159(v57);
    uint64_t v58 = (uint64_t *)&unk_100ACEC90;
    uint64_t v59 = (uint64_t)v57;
  }
  else
  {
    uint64_t v124 = (unsigned char *)v48;
    uint64_t v60 = *(int *)(v38 + 48);
    uint64_t v61 = (uint64_t)&v47[v60];
    uint64_t v62 = (uint64_t)&v37[v60];
    uint64_t v63 = v154;
    uint64_t v64 = v155;
    (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v47, v37, v154);
    sub_10001158C(v62, v61, type metadata accessor for VFSItem);
    id v65 = [v153 URL];
    uint64_t v66 = v152;
    sub_10096ADD0();

    sub_1000256AC((unint64_t *)&unk_100ACB670, (void (*)(uint64_t))&type metadata accessor for URL);
    LOBYTE(v65) = sub_10096BBE0();
    uint64_t v67 = *(void (**)(char *, uint64_t))(v64 + 8);
    v67(v66, v63);
    uint64_t v68 = v47;
    if (v65)
    {
      if (v150)
      {
        unint64_t v69 = v158;
        *uint64_t v158 = (uint64_t)v150;
        swift_storeEnumTagMultiPayload();
        swift_errorRetain();
        v159(v69);
        sub_10002B770((uint64_t)v69, (uint64_t *)&unk_100ACEC90);
      }
      else
      {
        uint64_t v75 = v64;
        unint64_t v152 = (char *)(v64 + 8);
        uint64_t v153 = v67;
        if (qword_100ACC1D0 != -1) {
          swift_once();
        }
        id v117 = (id)qword_100B0B650;
        uint64_t v76 = v143;
        uint64_t v77 = v149;
        (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v143 + 7))(v151, 1, 1, v149);
        uint64_t v78 = v140;
        uint64_t v79 = (uint64_t)&v140[*(int *)(v53 + 48)];
        unint64_t v150 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
        v150(v140, v68, v63);
        uint64_t v120 = v79;
        uint64_t v80 = v79;
        uint64_t v81 = v77;
        sub_1009381C4(v61, v80, type metadata accessor for VFSItem);
        uint64_t v118 = sub_10096AE10();
        uint64_t v119 = v82;
        v153(v78, v63);
        uint64_t v83 = v141;
        sub_10002B70C(v151, v141, &qword_100AD0830);
        int v84 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v76 + 6))(v83, 1, v81);
        uint64_t v122 = v53;
        uint64_t v123 = v68;
        uint64_t v155 = v75 + 16;
        uint64_t v121 = v61;
        if (v84 == 1)
        {
          id v85 = v117;
          id v86 = v117;
          uint64_t v87 = v142;
          sub_10096B3B0();
          sub_10002B770(v83, &qword_100AD0830);
          uint64_t v88 = v81;
          id v89 = v76;
        }
        else
        {
          uint64_t v87 = v142;
          (*((void (**)(char *, uint64_t, uint64_t))v76 + 4))(v142, v83, v81);
          uint64_t v88 = v81;
          id v89 = v76;
          id v85 = v117;
        }
        uint64_t v90 = v147;
        (*((void (**)(char *, char *, uint64_t))v89 + 2))(v147, v87, v88);
        uint64_t v91 = v148;
        char v142 = (char *)*(int *)(v148 + 20);
        *(void *)&v142[(void)v90] = v85;
        uint64_t v92 = &v90[*(int *)(v91 + 24)];
        *(void *)uint64_t v92 = "FS creation [under coordination]";
        *((void *)v92 + 1) = 32;
        uint64_t v143 = v92;
        v92[16] = 2;
        id v93 = v85;
        uint64_t v94 = v119;
        swift_bridgeObjectRetain();
        sub_10096C770();
        sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_100973BB0;
        *(void *)(v95 + 56) = &type metadata for String;
        *(void *)(v95 + 64) = sub_1000240A4();
        *(void *)(v95 + 32) = v118;
        *(void *)(v95 + 40) = v94;
        uint64_t v116 = v95;
        LOBYTE(v115) = 2;
        uint64_t v114 = 2;
        sub_10096B390();
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v89 + 1))(v87, v149);
        swift_bridgeObjectRelease();
        sub_10002B770(v151, &qword_100AD0830);
        sub_10092D018(v120, type metadata accessor for VFSItem);
        uint64_t v96 = v124;
        swift_beginAccess();
        uint64_t v97 = v144;
        char v98 = v123;
        long long v99 = v160;
        uint64_t v100 = (uint64_t)v146;
        if (v96[*(int *)(v145 + 40) + *(int *)(v144 + 84)])
        {
          int v101 = (void *)*((void *)v160 + 27);
          char v103 = v136;
          uint64_t v102 = v137;
          *int v136 = v101;
          uint64_t v104 = v138;
          (*(void (**)(void *, void, uint64_t))(v102 + 104))(v103, enum case for DispatchPredicate.onQueue(_:), v138);
          id v105 = v101;
          LOBYTE(v101) = sub_10096B860();
          (*(void (**)(void *, uint64_t))(v102 + 8))(v103, v104);
          if ((v101 & 1) == 0)
          {
            __break(1u);
            __break(1u);
            sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v99);
          }
          uint64_t v106 = &v99[qword_100ADE770];
          swift_beginAccess();
          uint64_t v100 = (uint64_t)v146;
          if (*(void *)(*(void *)v106 + 16))
          {
            char v107 = (void *)(v135 + 16);
            swift_beginAccess();
            if ((*v107 & 0x10000) == 0) {
              *v107 |= 0x10000uLL;
            }
            swift_beginAccess();
            v96[*(int *)(v145 + 40) + *(int *)(v97 + 84)] = 0;
          }
        }
        sub_10096C760();
        sub_10096B3A0();
        uint64_t v108 = v100 + *(int *)(v122 + 48);
        v150((char *)v100, v98, v154);
        uint64_t v109 = sub_1009381C4(v121, v108, type metadata accessor for VFSItem);
        __chkstk_darwin(v109);
        *(&v117 - 6) = v99;
        *(&v117 - 5) = v96;
        uint64_t v114 = a10;
        uint64_t v115 = v100;
        uint64_t v116 = a11;
        uint64_t v110 = v139;
        sub_1008DD474(a10, 0x200000, (void (*)(void, void, void, void))sub_10093BC9C, (uint64_t)(&v117 - 8), v139);
        sub_10002B770(v100, &qword_100AD0E00);
        uint64_t v111 = v158;
        sub_10002B70C(v110, (uint64_t)v158, &qword_100ACB910);
        swift_storeEnumTagMultiPayload();
        v159(v111);
        sub_10002B770((uint64_t)v111, (uint64_t *)&unk_100ACEC90);
        sub_10002B770(v110, &qword_100ACB910);
        uint64_t v68 = v123;
        sub_10096C760();
        uint64_t v112 = (uint64_t)v147;
        sub_10096B3A0();
        sub_10092D018(v112, type metadata accessor for Signpost);
      }
    }
    else
    {
      uint64_t v70 = v124;
      swift_beginAccess();
      char v71 = v70[8];
      uint64_t v161 = *(void *)v70;
      char v162 = v71;
      long long v163 = 0u;
      long long v164 = 0u;
      long long v165 = 0u;
      long long v166 = 0u;
      long long v167 = 0u;
      long long v168 = 0u;
      uint64_t v169 = 0;
      sub_1000D3768((uint64_t)&v161);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v72 = swift_allocError();
      sub_10001AE98((uint64_t)&v161, v73, (uint64_t *)&unk_100ACD9A0);
      uint64_t v74 = v158;
      *uint64_t v158 = v72;
      swift_storeEnumTagMultiPayload();
      v159(v74);
      sub_10002B770((uint64_t)v74, (uint64_t *)&unk_100ACEC90);
    }
    uint64_t v58 = &qword_100AD0E00;
    uint64_t v59 = (uint64_t)v68;
  }
  return sub_10002B770(v59, v58);
}

uint64_t sub_1008F1B28@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v101 = a7;
  uint64_t v99 = a6;
  uint64_t v100 = a5;
  LODWORD(v97) = a1;
  uint64_t v94 = sub_10002B7CC(&qword_100AD0E00);
  __chkstk_darwin(v94);
  uint64_t v95 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10096A7B0();
  uint64_t v90 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ItemMetadata();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v98 = (uint64_t)&v86 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v31 = (char *)&v86 - v30;
  if (!a3)
  {
    sub_100939ABC((uint64_t)v103);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)v103, v46, (uint64_t *)&unk_100ACD9A0);
    return swift_willThrow();
  }
  uint64_t v96 = v26;
  uint64_t v86 = v29;
  uint64_t v87 = v28;
  uint64_t v91 = v27;
  uint64_t v92 = v16;
  uint64_t v89 = a8;
  uint64_t v32 = v102;
  uint64_t v33 = a4[17];
  uint64_t v34 = a4;
  uint64_t v93 = a2;
  uint64_t v35 = *(void *)(a2 + 8);
  uint64_t v36 = v33 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  uint64_t v37 = *(void *)(v36 + 32);
  uint64_t v88 = v34;
  if (v35 != v37)
  {
    char v47 = (void *)swift_retain();
    if (objc_sync_enter(v47)) {
      goto LABEL_35;
    }
    uint64_t v48 = v34[20];
    swift_retain();
    if (objc_sync_exit(v34)) {
LABEL_36:
    }
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v34);
    uint64_t v44 = v32;
    swift_release();
    uint64_t v49 = *(void **)(v48 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v43 = v93;
    char v50 = DocumentWharf.isUnderSyncRoots(_:syncroots:)(v93, v49);
    swift_bridgeObjectRelease();
    if (v50) {
      goto LABEL_17;
    }
    v103[0] = 2;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v19, v17);
    return swift_willThrow();
  }
  uint64_t v38 = v100;
  swift_beginAccess();
  uint64_t v39 = v38 + *(int *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) + 40);
  if (*(unsigned char *)(v39 + *(int *)(v96 + 60))) {
    uint64_t v40 = 0x1FBF18F07;
  }
  else {
    uint64_t v40 = 0x1EBF18F07;
  }
  sub_1009381C4(v39, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v41 = (void *)swift_retain();
  if (objc_sync_enter(v41)) {
LABEL_35:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v34);
  uint64_t v42 = v34[20];
  swift_retain();
  if (objc_sync_exit(v34)) {
    goto LABEL_36;
  }
  swift_release();
  uint64_t v43 = v93;
  (*(void (**)(void *__return_ptr, uint64_t, void, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(*(void *)v33 + 408))(v104, v99, v97, v93, v101, v31, v40, v42, a9);
  uint64_t v44 = v32;
  if (v32)
  {
    sub_10092D018((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    return swift_release();
  }
  swift_release();
  sub_10021E550((uint64_t)v104);
  sub_10092D018((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
LABEL_17:
  uint64_t v51 = v100;
  swift_beginAccess();
  uint64_t v52 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v53 = v51 + *(int *)(v52 + 40);
  uint64_t v54 = v98;
  sub_1009381C4(v53, v98, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v55 = v96;
  uint64_t v56 = *(int *)(v96 + 108);
  if ((*(unsigned char *)(v53 + v56) & 1) != 0 || (int v57 = *(_DWORD *)(v43 + 40), v57 == 3))
  {
    *(unsigned char *)(v54 + v56) = 1;
    uint64_t v58 = v101;
  }
  else
  {
    swift_beginAccess();
    uint64_t v58 = v101;
    if (*(unsigned char *)(v51 + *(int *)(v52 + 40)))
    {
      *(unsigned char *)(v54 + *(int *)(v96 + 108)) = 0;
      goto LABEL_21;
    }
    uint64_t v55 = v96;
    *(unsigned char *)(v54 + *(int *)(v96 + 108)) = v57 == 2;
    if (v57 != 2) {
      goto LABEL_21;
    }
  }
  *(void *)(v54 + *(int *)(v55 + 100)) = *(void *)(v43 + 56);
  *(void *)(v54 + *(int *)(v55 + 104)) = *(void *)(v43 + 168);
LABEL_21:
  swift_beginAccess();
  int v59 = *(unsigned __int8 *)(v51 + *(int *)(v52 + 40));
  uint64_t v60 = v99;
  uint64_t v61 = *(void *)(v99 + 16);
  uint64_t v102 = v44;
  if ((v59 - 1) > 1)
  {
    Swift::UInt64 v62 = *(unsigned int *)(v99 + 32);
    LODWORD(v101) = *(_DWORD *)(v99 + 32) == 0;
    if (!v62) {
      Swift::UInt64 v62 = v61;
    }
    Swift::UInt64 v97 = v62;
  }
  else
  {
    LODWORD(v101) = 1;
    Swift::UInt64 v97 = v61;
  }
  swift_beginAccess();
  uint64_t v96 = *(void *)v51;
  LODWORD(v93) = *(unsigned __int8 *)(v51 + 8);
  uint64_t v63 = *(unsigned int *)(v60 + 36);
  uint64_t v64 = v87;
  sub_1009381C4(v54, v87, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v65 = v86;
  sub_1009381C4(v64, v86, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v99 = sub_100018CB0(v61, v63, v65);
  LODWORD(v90) = v66;
  uint64_t v86 = v67;
  char v69 = v68;
  sub_10092D018(v64, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  swift_beginAccess();
  uint64_t v70 = *(void *)(v51 + 16);
  uint64_t v71 = *(void *)(v51 + 24);
  sub_1009381C4(v54, v91, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v72 = v95;
  uint64_t v73 = *(int *)(v94 + 48);
  uint64_t v74 = (uint64_t)&v95[v73];
  uint64_t v75 = v58 + v73;
  uint64_t v76 = sub_10096AE50();
  uint64_t v77 = v58;
  uint64_t v78 = *(void *)(v76 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v72, v77, v76);
  sub_1009381C4(v75, v74, type metadata accessor for VFSItem);
  uint64_t v79 = (uint64_t)v92;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v92, v72, v76);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v76);
  uint64_t v80 = v88;
  swift_retain();
  swift_bridgeObjectRetain();
  if (objc_sync_enter(v80)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v80);
  }
  uint64_t v81 = v80[20];
  swift_retain();
  int v82 = objc_sync_exit(v80);
  uint64_t v83 = v89;
  if (v82) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v80);
  }
  swift_release();
  sub_10002C548((uint64_t)v103);
  sub_10001AE98((uint64_t)v103, (uint64_t)v105, &qword_100AD0EA0);
  v105[268] = 1;
  uint64_t v84 = v102;
  sub_1000182FC(v97, v101, v96, v93, v99, v90, v86, v69 & 1, v83, v70, v71, v91, 0x100000000uLL, 0, (uint64_t)v92, 0x100000000, v81, (uint64_t)v105);
  sub_10092D018(v98, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t result = sub_10092D018(v74, type metadata accessor for VFSItem);
  if (!v84)
  {
    uint64_t v85 = type metadata accessor for VFSItem(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v83, 0, 1, v85);
  }
  return result;
}

uint64_t sub_1008F2544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v37 = (void *)a1;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v6 + 216);
  uint64_t v35 = *(void *)(v6 + 224);
  id v36 = v17;
  uint64_t v18 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  sub_10002B70C(a2, (uint64_t)v13, (uint64_t *)&unk_100ADBFF0);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  sub_10001AE98((uint64_t)v13, v24 + v20, (uint64_t *)&unk_100ADBFF0);
  *(void *)(v24 + v21) = v6;
  uint64_t v25 = v24 + v22;
  uint64_t v26 = v37;
  sub_10001AE98((uint64_t)v37, v25, (uint64_t *)&unk_100ACF710);
  uint64_t v27 = v38;
  sub_10001AE98(v38, v24 + v23, &qword_100AD0EA0);
  uint64_t v28 = (void *)(v24 + ((v23 + 255) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v29 = v33;
  *uint64_t v28 = v34;
  v28[1] = v29;
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = sub_10021E33C;
  v30[3] = v19;
  v30[4] = v35;
  swift_retain_n();
  id v31 = v36;
  swift_retain();
  sub_100245AD4(v26, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_100244374(v27);
  swift_retain();
  swift_retain();
  sub_1003946CC(v31, (uint64_t)v16, (void (*)())sub_10093E158, v30, (uint64_t)sub_10093B530, v24);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008F2868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void), uint64_t a6)
{
  uint64_t v45 = a6;
  uint64_t v46 = a5;
  uint64_t v44 = a4;
  uint64_t v42 = a3;
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v38 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v39);
  uint64_t v43 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096B3D0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1D0 != -1) {
    swift_once();
  }
  unint64_t v22 = (void *)qword_100B0B650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  sub_10002B70C((uint64_t)v18, (uint64_t)v16, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    id v23 = v22;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v16, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v12, v9);
  uint64_t v37 = *(int *)(v19 + 20);
  *(void *)&v21[v37] = v22;
  uint64_t v24 = &v21[*(int *)(v19 + 24)];
  *(void *)uint64_t v24 = "FS stage creation";
  *((void *)v24 + 1) = 17;
  v24[16] = 2;
  id v25 = v22;
  sub_10096C770();
  sub_10096B3A0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10002B770((uint64_t)v18, &qword_100AD0830);
  uint64_t v26 = v38;
  uint64_t v27 = v41;
  uint64_t v28 = v41 + *(int *)(v38 + 40);
  uint64_t v29 = v43;
  sub_1009381C4(v28, v43, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v30 = v39;
  char v51 = *(unsigned char *)(v28 + *(int *)(v39 + 108));
  char v31 = v51;
  sub_10002B70C(v27, (uint64_t)v7, (uint64_t *)&unk_100ADBFF0);
  if (v31)
  {
    sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ADBFF0);
    char v32 = 1;
  }
  else
  {
    int v33 = v7[*(int *)(v26 + 40)];
    sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ADBFF0);
    if (v33 == 1)
    {
      uint64_t v34 = *(void *)(v27 + 24);
      uint64_t v52 = *(void *)(v27 + 16);
      uint64_t v53 = v34;
      uint64_t v49 = 47;
      unint64_t v50 = 0xE100000000000000;
      uint64_t v47 = 58;
      unint64_t v48 = 0xE100000000000000;
      sub_10001F9C0();
      sub_10096C910();
      sub_10096BCF0();
      swift_bridgeObjectRelease();
      fpfs_pkg_system_lookup();
      swift_release();
      char v32 = v51;
    }
    else
    {
      char v32 = 0;
    }
  }
  *(unsigned char *)(v29 + *(int *)(v30 + 112)) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t))(**(void **)(v40 + 136) + 360))(v42, v29, v44, *(void *)(v27 + 16), *(void *)(v27 + 24), 1);
  uint64_t v35 = swift_retain();
  v46(v35, 0);
  swift_release_n();
  sub_10092D018(v29, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_10096C760();
  sub_10096B3A0();
  return sub_10092D018((uint64_t)v21, type metadata accessor for Signpost);
}

uint64_t sub_1008F3004@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v111 = a5;
  uint64_t v90 = a4;
  int v95 = a2;
  uint64_t v94 = a1;
  uint64_t v112 = *(void *)a3;
  *(void *)&long long v100 = *(unsigned int *)(a3 + 8);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v99 = *(unsigned __int8 *)(a3 + 24);
  uint64_t v11 = *(void *)(a3 + 32);
  *((void *)&v100 + 1) = v10;
  uint64_t v101 = v11;
  uint64_t v12 = *(unsigned __int8 *)(a3 + 48);
  uint64_t v102 = *(void *)(a3 + 40);
  uint64_t v103 = v12;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v104 = *(void *)(a3 + 56);
  uint64_t v105 = v13;
  uint64_t v14 = *(void *)(a3 + 80);
  uint64_t v106 = *(void *)(a3 + 72);
  uint64_t v15 = *(void *)(a3 + 88);
  uint64_t v110 = type metadata accessor for VFSItem(0);
  uint64_t v16 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v89 = (uint64_t *)((char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10002B7CC(&qword_100AD0DF0);
  __chkstk_darwin(v18 - 8);
  uint64_t v108 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10002B7CC(&qword_100AD0DF8);
  __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10096AE50();
  uint64_t v92 = *(void *)(v21 - 8);
  uint64_t v93 = v21;
  __chkstk_darwin(v21);
  uint64_t v91 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v86 = (char *)&v78 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  char v107 = (char *)&v78 - v30;
  __chkstk_darwin(v29);
  uint64_t v113 = (uint64_t)&v78 - v31;
  char v32 = (void *)((char *)v7 + qword_100B0B640);
  swift_beginAccess();
  uint64_t v33 = *v32 + 1;
  if (*v32 == -1)
  {
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v85 = v32;
  *char v32 = v33;
  uint64_t v34 = (void *)swift_retain();
  if (objc_sync_enter(v34)) {
    goto LABEL_66;
  }
  uint64_t v96 = v26;
  uint64_t v97 = v14;
  uint64_t v98 = v15;
  uint64_t v82 = a6;
  uint64_t v35 = v7[20];
  swift_retain();
  if (objc_sync_exit(v7)) {
    goto LABEL_67;
  }
  swift_release();
  uint64_t v36 = type metadata accessor for VFSFileTree(0);
  uint64_t v83 = v7 + 34;
  swift_unknownObjectWeakLoadStrong();
  uint64_t v114 = v112;
  long long v115 = 0u;
  long long v116 = 0u;
  uint64_t v37 = fpfs_openfdbyhandle();
  uint64_t v84 = v36;
  if ((v37 & 0x80000000) != 0)
  {
    int v40 = sub_10096B4D0();
    sub_1005970E0(v40, 0, 0, 0xAu);
    swift_willThrow();
  }
  else
  {
    uint64_t v38 = v37;
    uint64_t v39 = v109;
    sub_100438EE8(v35, v113);
    if (!v39)
    {
      uint64_t v81 = 0;
      sub_100595FB8(v38);
      uint64_t v42 = v113;
      uint64_t v43 = v110;
      goto LABEL_12;
    }
    sub_100595FB8(v38);
  }
  swift_errorRetain();
  LODWORD(v114) = sub_10096A710();
  sub_100045CB4();
  char v41 = sub_10096AA60();
  swift_errorRelease();
  if ((v41 & 1) == 0)
  {
    swift_release();
    return swift_unknownObjectRelease();
  }
  uint64_t v81 = 0;
  uint64_t v42 = v113;
  uint64_t v43 = v110;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v113, 1, 1, v110);
  swift_errorRelease();
LABEL_12:
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v46 = v16 + 48;
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v47 = v45(v42, 1, v43);
  uint64_t v48 = v16;
  uint64_t v49 = v108;
  if (v47)
  {
LABEL_13:
    sub_10002B770(v42, &qword_100ACB910);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v42, 1, 1, v43);
    goto LABEL_14;
  }
  uint64_t v64 = *(void *)v42;
  if (*(unsigned char *)(v42 + 8))
  {
    if (*(unsigned char *)(v42 + 8) == 1)
    {
      if (v95 != 1 || v64 != v94) {
        goto LABEL_13;
      }
    }
    else if (v64)
    {
      if (v95 != 2 || v94 != 1) {
        goto LABEL_13;
      }
    }
    else if (v95 != 2 || v94)
    {
      goto LABEL_13;
    }
  }
  else if ((_BYTE)v95 || v64 != v94)
  {
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v80 = v48;
  uint64_t v50 = (uint64_t)v107;
  sub_10002B70C(v42, (uint64_t)v107, &qword_100ACB910);
  int v51 = v45(v50, 1, v43);
  sub_10002B770(v50, &qword_100ACB910);
  uint64_t v109 = v45;
  if (v51 != 1)
  {
    __int16 v52 = v111;
    goto LABEL_18;
  }
  __int16 v52 = v111;
  VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(*(void *)(a3 + 40), *(unsigned char *)(a3 + 48), *(void *)(a3 + 56), *(void *)(a3 + 64), v111, v49);
  uint64_t v53 = sub_10002B7CC(&qword_100AD0E00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v49, 1, v53) == 1)
  {
    sub_10002B770((uint64_t)v49, &qword_100AD0DF0);
LABEL_18:
    uint64_t v55 = v105;
    uint64_t v54 = v106;
    uint64_t v56 = v113;
    char v57 = v99;
    goto LABEL_19;
  }
  uint64_t v78 = v46;
  char v107 = &v49[*(int *)(v53 + 48)];
  int v66 = v87;
  uint64_t v65 = v88;
  uint64_t v79 = &v87[*(int *)(v88 + 48)];
  uint64_t v67 = v93;
  char v68 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  v68(v87, v49, v93);
  sub_10001158C((uint64_t)v107, (uint64_t)v79, type metadata accessor for VFSItem);
  uint64_t v69 = (uint64_t)&v66[*(int *)(v65 + 48)];
  v68(v91, v66, v67);
  sub_10092D018(v69, type metadata accessor for VFSItem);
  sub_10096AE10();
  if (*v85 == -1) {
LABEL_65:
  }
    __break(1u);
  ++*v85;
  uint64_t v70 = (void *)swift_retain();
  int v71 = objc_sync_enter(v70);
  uint64_t v72 = (uint64_t)v86;
  if (v71) {
LABEL_66:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v7);
  uint64_t v73 = v7[20];
  swift_retain();
  if (objc_sync_exit(v7)) {
LABEL_67:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v7);
  swift_release();
  swift_unknownObjectWeakLoadStrong();
  __int16 v74 = v111;
  uint64_t v75 = v81;
  static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v73, 0x208000u, v72);
  if (v75)
  {
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
    swift_bridgeObjectRelease();
    return sub_10002B770(v113, &qword_100ACB910);
  }
  uint64_t v81 = 0;
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  swift_bridgeObjectRelease();
  uint64_t v56 = v113;
  sub_1000148B8(v72, v113, &qword_100ACB910);
  int v76 = v109(v56, 1, v110);
  __int16 v52 = v74;
  uint64_t v55 = v105;
  uint64_t v54 = v106;
  char v57 = v99;
  if (!v76)
  {
    uint64_t v77 = *(void *)v56;
    if (*(unsigned char *)(v56 + 8))
    {
      if (*(unsigned char *)(v56 + 8) == 1)
      {
        if (v95 == 1 && v77 == v94) {
          goto LABEL_19;
        }
      }
      else if (v77)
      {
        if (v95 == 2 && v94 == 1) {
          goto LABEL_19;
        }
      }
      else if (v95 == 2 && !v94)
      {
        goto LABEL_19;
      }
    }
    else if (!(_BYTE)v95 && v77 == v94)
    {
      goto LABEL_19;
    }
  }
  sub_10002B770(v56, &qword_100ACB910);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v56, 1, 1, v110);
LABEL_19:
  uint64_t v58 = v57 & 1;
  uint64_t v59 = (uint64_t)v96;
  sub_10002B70C(v56, (uint64_t)v96, &qword_100ACB910);
  if (v109(v59, 1, v110) == 1)
  {
    sub_10002B770(v59, &qword_100ACB910);
    uint64_t v114 = v94;
    LOBYTE(v115) = v95;
    *((void *)&v115 + 1) = v112;
    long long v116 = v100;
    uint64_t v117 = v58;
    uint64_t v118 = v101;
    uint64_t v119 = v102;
    uint64_t v120 = v103;
    uint64_t v121 = v104;
    uint64_t v122 = v55;
    uint64_t v123 = v54;
    uint64_t v124 = v97;
    uint64_t v125 = v98;
    uint64_t v126 = 0;
    sub_1000D3768((uint64_t)&v114);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)&v114, v60, (uint64_t *)&unk_100ACD9A0);
    sub_100938D34(a3);
    swift_willThrow();
    uint64_t v61 = v56;
  }
  else
  {
    Swift::UInt64 v62 = v89;
    sub_10001158C(v59, (uint64_t)v89, type metadata accessor for VFSItem);
    uint64_t v127 = v112;
    long long v128 = v100;
    uint64_t v129 = v58;
    uint64_t v130 = v101;
    uint64_t v131 = v102;
    uint64_t v132 = v103;
    uint64_t v133 = v104;
    uint64_t v134 = v55;
    uint64_t v135 = v54;
    uint64_t v136 = v97;
    uint64_t v137 = v98;
    uint64_t v63 = v81;
    sub_10092E410(&v127, v62, v90, v52);
    if (v63) {
      sub_10092D018((uint64_t)v62, type metadata accessor for VFSItem);
    }
    else {
      sub_10001158C((uint64_t)v62, v82, type metadata accessor for VFSItem);
    }
    uint64_t v61 = v56;
  }
  return sub_10002B770(v61, &qword_100ACB910);
}

uint64_t sub_1008F3C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v63 = a6;
  uint64_t v61 = a4;
  sub_10001AE98(a3, (uint64_t)v67, &qword_100ACB048);
  unint64_t v52 = v67[2];
  uint64_t v53 = v67[0];
  uint64_t v10 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v73 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (int *)type metadata accessor for VFSItem(0);
  __chkstk_darwin(v12);
  uint64_t v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for ItemMetadata();
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v64 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v49[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v49[-v21];
  uint64_t v23 = (uint64_t *)(a1 + 16);
  uint64_t v24 = (unsigned __int8 *)(a1 + 24);
  if ((a5 & 2) != 0)
  {
    uint64_t v23 = (uint64_t *)a2;
    uint64_t v24 = (unsigned __int8 *)(a2 + 8);
  }
  int v60 = *v24;
  uint64_t v59 = *v23;
  sub_10001AE98(a3, (uint64_t)v70, &qword_100ACB048);
  uint64_t v54 = v71;
  uint64_t v57 = v70[4];
  uint64_t v58 = a5;
  if (*(unsigned char *)(a1 + v12[7]) == 2 && (a5 & 8) != 0)
  {
    sub_10001AE98(a3, (uint64_t)v68, &qword_100ACB048);
    if (v69 == 1)
    {
      Swift::UInt64 v56 = *(void *)a1;
      int v55 = *(unsigned __int8 *)(a1 + 8);
LABEL_8:
      sub_1009381C4(a1, (uint64_t)v14, type metadata accessor for VFSItem);
      uint64_t v25 = &v14[v12[9]];
      uint64_t v53 = *(void *)v25;
      LODWORD(v52) = *((_DWORD *)v25 + 2);
      uint64_t v51 = *((void *)v25 + 2);
      int v50 = v25[24];
      swift_bridgeObjectRetain();
      sub_10092D018((uint64_t)v14, type metadata accessor for VFSItem);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    }
    int v55 = 1;
    Swift::UInt64 v56 = v68[0];
  }
  else
  {
    Swift::UInt64 v56 = *(void *)a1;
    int v55 = *(unsigned __int8 *)(a1 + 8);
    sub_10001AE98(a3, (uint64_t)v68, &qword_100ACB048);
    if (v69 == 1) {
      goto LABEL_8;
    }
  }
  uint64_t v26 = HIDWORD(v52);
  uint64_t v27 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  sub_1009381C4(a2 + *(int *)(v27 + 40), (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_1009381C4((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v53 = sub_100018CB0(v53, v26, (uint64_t)v20);
  LODWORD(v52) = v28;
  uint64_t v51 = v29;
  char v31 = v30;
  sub_10092D018((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  int v50 = v31 & 1;
  sub_1009381C4(a1, (uint64_t)v14, type metadata accessor for VFSItem);
  sub_10092D018((uint64_t)v14, type metadata accessor for VFSItem);
LABEL_11:
  char v32 = (uint64_t *)(a2 + 16);
  uint64_t v33 = (uint64_t *)(a2 + 24);
  if ((v58 & 1) == 0)
  {
    uint64_t v33 = (uint64_t *)(a1 + 40);
    char v32 = (uint64_t *)(a1 + 32);
  }
  uint64_t v34 = *v33;
  uint64_t v35 = *v32;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  sub_1009381C4(a2 + *(int *)(v36 + 40), (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v37 = (unsigned int *)(a1 + v12[11]);
  uint64_t v38 = *v37;
  unsigned __int8 v39 = *((unsigned char *)v37 + 4);
  int v40 = *(_DWORD *)(a1 + v12[10]);
  sub_10002B70C(v61, (uint64_t)v73, &qword_100ACA8C0);
  char v41 = v62;
  uint64_t v42 = (void *)swift_retain();
  if (objc_sync_enter(v42)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v41);
  }
  uint64_t v61 = v34;
  uint64_t v43 = v41[20];
  swift_retain();
  if (objc_sync_exit(v41)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v41);
  }
  uint64_t v44 = v57;
  BOOL v46 = v54 == 1 || v57 == 0;
  swift_release();
  sub_10002C548((uint64_t)v66);
  sub_10001AE98((uint64_t)v66, (uint64_t)v72, &qword_100AD0EA0);
  BOOL v65 = v46;
  if (v46) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = v44;
  }
  return sub_1000182FC(v56, v55, v59, v60, v53, v52, v51, v50, v63, v35, v61, (uint64_t)v64, v38 | ((unint64_t)v39 << 32), v40, (uint64_t)v73, v47 | ((unint64_t)v46 << 32), v43, (uint64_t)v72);
}

uint64_t sub_1008F418C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, Swift::UInt64 a6, unsigned int a7, unint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13)
{
  unint64_t v484 = a8;
  unsigned int v486 = a7;
  Swift::UInt64 v485 = a6;
  unint64_t v481 = a4;
  uint64_t v473 = a3;
  v482 = a10;
  uint64_t v480 = a9;
  uint64_t v17 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v440 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v471 = (uint64_t)&v418 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v450 = (uint64_t)&v418 - v21;
  uint64_t v441 = v22;
  __chkstk_darwin(v20);
  v436 = (char *)&v418 - v23;
  uint64_t v456 = sub_10002B7CC(&qword_100AD0E00);
  uint64_t v446 = *(void *)(v456 - 8);
  uint64_t v24 = __chkstk_darwin(v456);
  v432 = (char *)&v418 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  v431 = (char *)&v418 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v434 = (uint64_t)&v418 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v430 = (uint64_t (*)(uint64_t))((char *)&v418 - v31);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v442 = (uint64_t)&v418 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v429 = (char *)&v418 - v35;
  __chkstk_darwin(v34);
  uint64_t v445 = (uint64_t)&v418 - v36;
  uint64_t v37 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v438 = *(void *)(v37 - 8);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v449 = (uint64_t)&v418 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v439 = v39;
  __chkstk_darwin(v38);
  uint64_t v459 = (uint64_t)&v418 - v40;
  uint64_t v41 = sub_10002B7CC(&qword_100AD0DF0);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  v443 = (char *)&v418 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v418 - v44;
  uint64_t v426 = sub_10002B7CC(&qword_100AD0DF8);
  __chkstk_darwin(v426);
  v425 = (char *)&v418 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v48 = __chkstk_darwin(v47 - 8);
  v428 = (char *)&v418 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v52 = (char *)&v418 - v51;
  __chkstk_darwin(v50);
  v435 = (char *)&v418 - v53;
  uint64_t v54 = sub_10096B480();
  uint64_t v453 = *(void *)(v54 - 8);
  uint64_t v454 = v54;
  uint64_t v55 = __chkstk_darwin(v54);
  v444 = (char *)&v418 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v457 = (void (*)(void))((char *)&v418 - v57);
  unint64_t v478 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v478);
  uint64_t v477 = (uint64_t)&v418 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v466 = type metadata accessor for VFSItem(0);
  uint64_t v468 = *(void *)(v466 - 8);
  uint64_t v59 = __chkstk_darwin(v466);
  unint64_t v470 = (unint64_t)&v418 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __chkstk_darwin(v59);
  v460 = (char *)&v418 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v448 = (uint64_t)&v418 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  *(void *)&long long v458 = (char *)&v418 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v472 = (uint64_t)&v418 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v71 = (char *)&v418 - v70;
  uint64_t v469 = v72;
  __chkstk_darwin(v69);
  uint64_t v483 = (uint64_t)&v418 - v73;
  uint64_t v465 = sub_10096AE50();
  uint64_t v462 = *(void *)(v465 - 8);
  uint64_t v74 = __chkstk_darwin(v465);
  v424 = (char *)&v418 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __chkstk_darwin(v74);
  v423 = (char *)&v418 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  v427 = (char *)&v418 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v455 = (char *)&v418 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  v447 = (char *)&v418 - v83;
  __chkstk_darwin(v82);
  v461 = (char *)&v418 - v84;
  uint64_t v85 = swift_allocObject();
  *(void *)&long long v467 = a1;
  *(void *)(v85 + 16) = a1;
  *(void *)(v85 + 24) = a2;
  uint64_t v86 = a2;
  uint64_t v463 = v17;
  uint64_t v87 = (unsigned char *)(a3 + *(int *)(v17 + 40));
  uint64_t v464 = type metadata accessor for ItemMetadata();
  uint64_t v88 = *(int *)(v464 + 108);
  v452 = v87;
  int v451 = v87[v88];
  type metadata accessor for VFSStagedContext();
  uint64_t v89 = swift_dynamicCastClass();
  v437 = v52;
  if (v89) {
    swift_retain();
  }
  v433 = v45;
  uint64_t v90 = (uint64_t *)(v480 + 16);
  uint64_t v91 = (_OWORD *)swift_allocObject();
  long long v92 = a5[3];
  v91[3] = a5[2];
  v91[4] = v92;
  long long v93 = a5[5];
  v91[5] = a5[4];
  v91[6] = v93;
  long long v94 = a5[1];
  v91[1] = *a5;
  v91[2] = v94;
  if ((v484 & 0x40) != 0)
  {
    swift_beginAccess();
    if ((*v90 & 0x1000) == 0) {
      *v90 |= 0x1000uLL;
    }
  }
  uint64_t v479 = a11;
  swift_beginAccess();
  uint64_t v95 = *v90;
  swift_retain();
  sub_100938D34((uint64_t)a5);
  uint64_t v96 = (uint64_t)v71;
  uint64_t v97 = v95;
  uint64_t v98 = (uint64_t)v71;
  uint64_t v99 = v482;
  sub_1008F3004(v485, v486, (uint64_t)a5, a11 & 0xFFFFFFFFFFFFFFEFLL, v97, v96);
  uint64_t v475 = 0;
  v419 = v90;
  v420 = v91 + 1;
  v421 = type metadata accessor for VFSItem;
  uint64_t v100 = v483;
  sub_10001158C(v98, v483, type metadata accessor for VFSItem);
  uint64_t v101 = v100;
  uint64_t v102 = v472;
  sub_1009381C4(v101, v472, type metadata accessor for VFSItem);
  uint64_t v103 = *(unsigned __int8 *)(v468 + 80);
  uint64_t v474 = v89;
  uint64_t v104 = (v103 + 96) & ~v103;
  uint64_t v418 = v103;
  uint64_t v422 = v85;
  unint64_t v105 = (v104 + v469 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v106 = (v104 + v469 + 23) & 0xFFFFFFFFFFFFFFF8;
  v476 = v91;
  char v107 = (void *)swift_allocObject();
  v107[2] = v474;
  v107[3] = v99;
  sub_10001AE98((uint64_t)a12, (uint64_t)(v107 + 4), (uint64_t *)&unk_100ACF710);
  v107[11] = v484;
  sub_10001158C(v102, (uint64_t)v107 + v104, v421);
  uint64_t v108 = (char *)v107 + v105;
  uint64_t v109 = v422;
  *(void *)uint64_t v108 = v485;
  v108[8] = v486;
  *(void *)((char *)v107 + v106) = v476;
  uint64_t v110 = (void *)((char *)v107 + ((v106 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v111 = v476;
  *uint64_t v110 = v467;
  v110[1] = v86;
  *(void *)(v109 + 16) = sub_10093A3CC;
  *(void *)(v109 + 24) = v107;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100245AD4(a12, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  swift_retain();
  swift_release();
  if (v479)
  {
    uint64_t v113 = v473;
    uint64_t v123 = v475;
    sub_100008D90(0x742D657461647075, (void *)0xED00007465677261, *(void *)(v473 + 16), *(void *)(v473 + 24));
    uint64_t v115 = v470;
    uint64_t v114 = v471;
    if (v123)
    {
      uint64_t v475 = v123;
      uint64_t v112 = v483;
LABEL_15:
      char v126 = v479;
      goto LABEL_16;
    }
    uint64_t v112 = v483;
    uint64_t v125 = *(void *)(v483 + 32);
    unint64_t v124 = *(void *)(v483 + 40);
    swift_bridgeObjectRetain();
    sub_100008D90(0x732D657461647075, (void *)0xED0000656372756FLL, v125, v124);
    uint64_t v475 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v112 = v483;
    uint64_t v113 = v473;
    uint64_t v115 = v470;
    uint64_t v114 = v471;
  }
  uint64_t v117 = *(void *)(v112 + 32);
  unint64_t v116 = *(void *)(v112 + 40);
  swift_bridgeObjectRetain();
  uint64_t v118 = v475;
  sub_100008D90(0x657461647075, (void *)0xE600000000000000, v117, v116);
  uint64_t v475 = v118;
  if (v118)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  uint64_t v119 = v458;
  sub_1009381C4(v112, v458, type metadata accessor for VFSItem);
  uint64_t v120 = v479;
  if ((v479 & 0x10) != 0)
  {
    uint64_t v121 = (uint64_t *)v112;
    int v148 = *(_DWORD *)(v119 + *(int *)(v466 + 36) + 8);
    swift_bridgeObjectRetain();
    sub_10092D018(v119, type metadata accessor for VFSItem);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v122 = v419;
    if (!v148)
    {
      swift_beginAccess();
      *((_DWORD *)v111 + 6) = 0;
      *((void *)v111 + 4) = 0;
      *((unsigned char *)v111 + 40) = 1;
    }
  }
  else
  {
    uint64_t v121 = (uint64_t *)v112;
    sub_10092D018(v119, type metadata accessor for VFSItem);
    uint64_t v122 = v419;
  }
  swift_beginAccess();
  uint64_t v149 = *((unsigned int *)v111 + 6);
  uint64_t v150 = *((void *)v111 + 4);
  uint64_t v151 = *((unsigned __int8 *)v111 + 40);
  uint64_t v152 = *((unsigned __int8 *)v111 + 64);
  uint64_t v153 = *((void *)v111 + 9);
  uint64_t v154 = *((void *)v111 + 10);
  uint64_t v155 = *((void *)v111 + 13);
  v499[0] = *((void *)v111 + 2);
  v499[1] = v149;
  v499[2] = v150;
  v499[3] = v151;
  long long v467 = v111[3];
  long long v500 = v467;
  uint64_t v501 = v152;
  uint64_t v502 = v153;
  uint64_t v503 = v154;
  long long v458 = *(_OWORD *)((char *)v111 + 88);
  long long v504 = v458;
  uint64_t v505 = v155;
  swift_beginAccess();
  uint64_t v156 = *v122;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v157 = v120;
  uint64_t v158 = v475;
  sub_10092E410(v499, v121, v157, v156);
  if (!v158)
  {
    unint64_t v470 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v143 = v476;
    uint64_t v146 = (uint64_t)v482;
    id v147 = (id)v486;
    uint64_t v142 = (uint64_t)v121;
    uint64_t v145 = v466;
    Swift::UInt64 v144 = v485;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v475 = v158;
  uint64_t v113 = v473;
  char v126 = v479;
  uint64_t v112 = (uint64_t)v121;
  uint64_t v115 = v470;
  uint64_t v114 = v471;
LABEL_16:
  sub_1009381C4(v112, v115, type metadata accessor for VFSItem);
  sub_10002B70C(v113, v114, (uint64_t *)&unk_100ADBFF0);
  if ((v126 & 0x10) != 0)
  {
    uint64_t v127 = v466;
    uint64_t v128 = v464;
    int v129 = *(unsigned __int8 *)(v115 + *(int *)(v466 + 28) + *(int *)(v464 + 80));
    sub_10092D018(v115, type metadata accessor for VFSItem);
    LODWORD(v128) = *(unsigned __int8 *)(v114 + *(int *)(v463 + 40) + *(int *)(v128 + 80));
    sub_10002B770(v114, (uint64_t *)&unk_100ADBFF0);
    if (v129 != v128) {
      goto LABEL_19;
    }
    unint64_t v470 = 0;
    swift_errorRelease();
    uint64_t v133 = v112 + *(int *)(v127 + 36);
    uint64_t v134 = *(void *)v133;
    int v135 = *(_DWORD *)(v133 + 8);
    uint64_t v136 = *(void *)(v133 + 16);
    char v137 = *(unsigned char *)(v133 + 24);
    uint64_t v138 = *(void *)(v483 + 16);
    char v139 = *(unsigned char *)(v483 + 24);
    uint64_t v140 = *(void *)(v483 + 32);
    uint64_t v141 = *(void *)(v483 + 40);
    swift_beginAccess();
    uint64_t v471 = *((void *)v476 + 6);
    uint64_t v475 = *((void *)v476 + 11);
    *((void *)v476 + 2) = v134;
    *((_DWORD *)v476 + 6) = v135;
    uint64_t v142 = v483;
    *((void *)v476 + 4) = v136;
    uint64_t v143 = v476;
    *((unsigned char *)v476 + 40) = v137;
    Swift::UInt64 v144 = v485;
    uint64_t v109 = v422;
    *((void *)v143 + 6) = 0;
    *((void *)v143 + 7) = v138;
    *((unsigned char *)v143 + 64) = v139;
    *((void *)v143 + 9) = v140;
    *((void *)v143 + 10) = v141;
    *((void *)v143 + 11) = 0;
    *((void *)v143 + 12) = 0;
    *((void *)v143 + 13) = 0;
    uint64_t v145 = v466;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v146 = (uint64_t)v482;
    id v147 = (id)v486;
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v159 = *(int *)(v145 + 28);
    uint64_t v160 = (uint64_t)v460;
    if ((v479 & 0x10000000000) == 0 || qword_100991598[*(char *)(v142 + v159)] == qword_100991598[(char)*v452])
    {
LABEL_30:
      uint64_t v161 = (uint64_t (*)(uint64_t))(v142 + v159);
      sub_10096B080();
      if ((~*(void *)&v162 & 0x7FF0000000000000) != 0)
      {
        if (v162 > -9.22337204e18)
        {
          if (v162 < 9.22337204e18)
          {
            if (fpfs_is_busy_date())
            {
              id v163 = (id)fpfs_current_or_default_log();
              long long v164 = v457;
              sub_10096B490();
              uint64_t v165 = v448;
              sub_1009381C4(v142, v448, type metadata accessor for VFSItem);
              long long v166 = sub_10096B470();
              os_log_type_t v167 = sub_10096C5A0();
              if (os_log_type_enabled(v166, v167))
              {
                long long v168 = (uint8_t *)swift_slowAlloc();
                uint64_t v488 = swift_slowAlloc();
                *(_DWORD *)long long v168 = 136446210;
                uint64_t v169 = sub_100262BFC();
                uint64_t v497 = sub_100719D44(v169, v170, &v488);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                sub_10092D018(v165, type metadata accessor for VFSItem);
                _os_log_impl((void *)&_mh_execute_header, v166, v167, "🏗 denying update on busy file %{public}s", v168, 0xCu);
                swift_arrayDestroy();
                uint64_t v109 = v422;
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(void (*)(void), uint64_t))(v453 + 8))(v457, v454);
              }
              else
              {
                sub_10092D018(v165, type metadata accessor for VFSItem);

                (*(void (**)(void (*)(void), uint64_t))(v453 + 8))(v164, v454);
              }
              uint64_t v185 = (void *)v477;
              uint64_t v186 = *(void (**)(void *))(v109 + 16);
              sub_10093AF70((uint64_t)&v488);
              sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
              sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
              uint64_t v187 = swift_allocError();
              sub_10001AE98((uint64_t)&v488, v188, (uint64_t *)&unk_100ACD9A0);
              *uint64_t v185 = v187;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v186(v185);
              swift_release();
              swift_release();
              uint64_t v189 = (uint64_t)v185;
              goto LABEL_64;
            }
            sub_1009381C4(v142, v160, type metadata accessor for VFSItem);
            long long v171 = (void *)swift_retain();
            int v172 = objc_sync_enter(v171);
            v421 = v161;
            if (v147 != 2 || v144)
            {
              if (v172) {
                goto LABEL_163;
              }
              swift_retain();
              if (objc_sync_exit((id)v146)) {
                goto LABEL_164;
              }
              swift_release();
              uint64_t v178 = v435;
              VFSItem.fetchURL()(v435);
              swift_release();
              uint64_t v173 = v462;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v462 + 48))(v178, 1, v465) == 1)
              {
                __break(1u);
                goto LABEL_160;
              }
              sub_10092D018(v160, type metadata accessor for VFSItem);
              uint64_t v176 = *(void (**)(void))(v173 + 32);
              uint64_t v177 = (v173 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
              uint64_t v175 = v447;
              v176();
            }
            else
            {
              uint64_t v173 = v462;
              if (v172) {
                goto LABEL_163;
              }
              uint64_t v174 = *(void *)(v146 + 160);
              swift_retain();
              if (objc_sync_exit((id)v146)) {
                goto LABEL_164;
              }
              swift_release();
              sub_10092D018(v160, type metadata accessor for VFSItem);
              uint64_t v175 = v447;
              (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v447, v174 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v465);
              swift_release();
              uint64_t v176 = *(void (**)(void))(v173 + 32);
              uint64_t v177 = (v173 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
            }
            v452 = (unsigned char *)v177;
            ((void (*)(char *, char *, uint64_t))v176)(v461, v175, v465);
            if (v474) {
              int v451 = *(unsigned __int8 *)(v474 + 56);
            }
            uint64_t v179 = v465;
            *(void *)&long long v458 = swift_allocBox();
            uint64_t v180 = *(void (**)(uint64_t, char *, uint64_t))(v173 + 16);
            uint64_t v448 = v181;
            uint64_t v471 = (uint64_t)v180;
            v180(v181, v461, v179);
            unint64_t v498 = (unint64_t)_swiftEmptyArrayStorage;
            *(void *)&long long v467 = swift_allocObject();
            *(void *)(v467 + 16) = 0;
            uint64_t v475 = swift_allocObject();
            *(void *)(v475 + 16) = 0;
            v457 = v176;
            v460 = (char *)(v173 + 16);
            if ((v484 & 0x10) == 0)
            {
              char v182 = v479;
              if ((sub_10093033C(v483, v473, v479) & 1) == 0)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v468 + 56))(v459, 1, 1, v466);
                LODWORD(v195) = 0;
                LODWORD(v447) = 0;
                uint64_t v196 = v473;
                uint64_t v197 = (uint64_t)v436;
                uint64_t v143 = (_OWORD *)v467;
                uint64_t v109 = v475;
                goto LABEL_125;
              }
              LODWORD(v447) = 1;
              uint64_t v183 = v473;
              uint64_t v184 = v483;
LABEL_79:
              v224 = (uint64_t *)(v184 + 16);
              v225 = (unsigned __int8 *)(v184 + 24);
              if ((v182 & 2) != 0)
              {
                v224 = (uint64_t *)v183;
                v225 = (unsigned __int8 *)(v183 + 8);
              }
              int v226 = *v225;
              uint64_t v227 = *v224;
              v228 = (uint64_t *)(v183 + 16);
              v229 = (unint64_t *)(v183 + 24);
              if ((v182 & 1) == 0)
              {
                v229 = (unint64_t *)(v184 + 40);
                v228 = (uint64_t *)(v184 + 32);
              }
              unint64_t v230 = *v229;
              uint64_t v231 = *v228;
              swift_bridgeObjectRetain();
              LODWORD(v435) = v226;
              if (v226 != 2 || v227) {
                goto LABEL_108;
              }
              v433 = 0;
              uint64_t v232 = qword_100ACC040;
              swift_bridgeObjectRetain();
              if (v232 != -1) {
                swift_once();
              }
              uint64_t v234 = static Filename.trashName;
              unint64_t v233 = unk_100B0B110;
              swift_bridgeObjectRetain();
              uint64_t v235 = sub_10002C020(v231, v230);
              uint64_t v236 = v230;
              uint64_t v238 = v237;
              unint64_t v481 = v236;
              swift_bridgeObjectRelease();
              if (v238)
              {
                if (v235 == 12565487 && v238 == 0xA300000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_92:
                  unint64_t v240 = v481;
                  swift_bridgeObjectRetain();
                  unint64_t v241 = sub_10096BD70();
                  sub_1000364D0(v241, v231, v240);
                  swift_bridgeObjectRelease();
                  uint64_t v426 = sub_10096BD10();
                  uint64_t v243 = v242;
                  swift_bridgeObjectRelease();
                  goto LABEL_94;
                }
                char v239 = sub_10096D2D0();
                swift_bridgeObjectRelease();
                if (v239) {
                  goto LABEL_92;
                }
              }
              uint64_t v243 = v481;
              swift_bridgeObjectRetain();
              uint64_t v426 = v231;
LABEL_94:
              swift_bridgeObjectRetain();
              uint64_t v244 = sub_10002C020(v234, v233);
              uint64_t v246 = v245;
              swift_bridgeObjectRelease();
              if (v246)
              {
                if (v244 == 12565487 && v246 == 0xA300000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_99:
                  swift_bridgeObjectRetain();
                  unint64_t v248 = sub_10096BD70();
                  sub_1000364D0(v248, v234, v233);
                  swift_bridgeObjectRelease();
                  uint64_t v234 = sub_10096BD10();
                  unint64_t v233 = v249;
                  swift_bridgeObjectRelease();
                  goto LABEL_101;
                }
                char v247 = sub_10096D2D0();
                swift_bridgeObjectRelease();
                if (v247) {
                  goto LABEL_99;
                }
              }
              swift_bridgeObjectRetain();
LABEL_101:
              uint64_t v176 = v457;
              unint64_t v230 = v481;
              if (v426 == v234 && v243 == v233)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v227 = (uint64_t)v433;
              }
              else
              {
                char v250 = sub_10096D2D0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v227 = (uint64_t)v433;
                if ((v250 & 1) == 0) {
                  goto LABEL_108;
                }
              }
              if (qword_100ACC048 != -1) {
                swift_once();
              }
              uint64_t v231 = qword_100B0B118;
              unint64_t v251 = unk_100B0B120;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              unint64_t v230 = v251;
LABEL_108:
              v252 = v419;
              swift_beginAccess();
              uint64_t v253 = *v252;
              v254 = v443;
              char v255 = (char)v435;
              VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v227, (char)v435, v231, v230, v253, v443);
              uint64_t v256 = v456;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v446 + 48))(v254, 1, v456) == 1)
              {
                swift_bridgeObjectRelease();
                sub_10002B770((uint64_t)v254, &qword_100AD0DF0);
                v257 = *(void (**)(uint64_t))(v109 + 16);
                uint64_t v488 = v227;
                char v489 = v255;
                long long v490 = 0u;
                long long v491 = 0u;
                long long v492 = 0u;
                long long v493 = 0u;
                long long v494 = 0u;
                long long v495 = 0u;
                uint64_t v496 = 0;
                sub_1000D3768((uint64_t)&v488);
                sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
                sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
                uint64_t v258 = swift_allocError();
                sub_10001AE98((uint64_t)&v488, v259, (uint64_t *)&unk_100ACD9A0);
                uint64_t v215 = v477;
                *(void *)uint64_t v477 = v258;
                swift_storeEnumTagMultiPayload();
                swift_retain();
                v257(v215);
                swift_bridgeObjectRelease();
                goto LABEL_110;
              }
              unint64_t v481 = v230;
              uint64_t v260 = *(int *)(v256 + 48);
              uint64_t v261 = v445;
              uint64_t v262 = v445 + v260;
              uint64_t v263 = v256;
              uint64_t v264 = (uint64_t)&v254[v260];
              uint64_t v265 = v465;
              ((void (*)(uint64_t, char *, uint64_t))v176)(v445, v254, v465);
              sub_10001158C(v264, v262, type metadata accessor for VFSItem);
              id v266 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              uint64_t v267 = (uint64_t)v429;
              uint64_t v268 = (uint64_t)&v429[*(int *)(v263 + 48)];
              v269 = (void (*)(char *, uint64_t, uint64_t))v471;
              ((void (*)(char *, uint64_t, uint64_t))v471)(v429, v261, v265);
              sub_1009381C4(v262, v268, type metadata accessor for VFSItem);
              sub_10001AE98(v267, v442, &qword_100AD0E00);
              uint64_t v270 = *(int *)(v263 + 48);
              uint64_t v271 = v265;
              v272 = v430;
              v273 = (char *)v430 + v270;
              uint64_t v274 = v261;
              v275 = v269;
              v269((char *)v430, v274, v271);
              v276 = v444;
              unint64_t v478 = v262;
              sub_1009381C4(v262, (uint64_t)v273, type metadata accessor for VFSItem);
              uint64_t v277 = v434;
              sub_10001AE98((uint64_t)v272, v434, &qword_100AD0E00);
              v278 = (char *)sub_10096B470();
              os_log_type_t v279 = sub_10096C5A0();
              int v280 = v279;
              if (os_log_type_enabled((os_log_t)v278, v279))
              {
                uint64_t v281 = swift_slowAlloc();
                uint64_t v477 = swift_slowAlloc();
                uint64_t v488 = v477;
                *(_DWORD *)uint64_t v281 = 136315394;
                v433 = (char *)(v281 + 4);
                uint64_t v282 = *(int *)(v456 + 48);
                v283 = v431;
                uint64_t v284 = v271;
                uint64_t v285 = (uint64_t)&v431[v282];
                LODWORD(v446) = v280;
                uint64_t v286 = v442;
                uint64_t v287 = v442 + v282;
                ((void (*)(char *, uint64_t, uint64_t))v471)(v431, v442, v284);
                v435 = (char *)type metadata accessor for VFSItem;
                sub_1009381C4(v287, v285, type metadata accessor for VFSItem);
                sub_10096AD20(v288);
                v290 = v289;
                id v291 = objc_msgSend(v289, "fp_shortDescription");
                v443 = v278;
                id v292 = v291;

                uint64_t v293 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                unint64_t v295 = v294;

                v296 = *(void (**)(char *, uint64_t))(v462 + 8);
                v296(v283, v284);
                v430 = type metadata accessor for VFSItem;
                sub_10092D018(v285, type metadata accessor for VFSItem);
                uint64_t v487 = sub_100719D44(v293, v295, &v488);
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                sub_10002B770(v286, &qword_100AD0E00);
                *(_WORD *)(v281 + 12) = 2080;
                uint64_t v442 = v281 + 14;
                uint64_t v297 = *(int *)(v456 + 48);
                uint64_t v298 = (uint64_t)&v283[v297];
                uint64_t v299 = v434;
                uint64_t v300 = v434 + v297;
                ((void (*)(char *, uint64_t, uint64_t))v471)(v283, v434, v284);
                sub_1009381C4(v300, v298, (uint64_t (*)(void))v435);
                uint64_t v301 = v298;
                uint64_t v302 = v472;
                sub_10001158C(v301, v472, type metadata accessor for VFSItem);
                v296(v283, v284);
                uint64_t v303 = sub_100262BFC();
                unint64_t v305 = v304;
                sub_10092D018(v302, v430);
                v306 = v283;
                uint64_t v487 = sub_100719D44(v303, v305, &v488);
                uint64_t v307 = v462;
                v308 = (void (*)(char *, uint64_t, uint64_t))v471;
                sub_10096C8C0();
                swift_bridgeObjectRelease();
                sub_10002B770(v299, &qword_100AD0E00);
                v309 = v443;
                _os_log_impl((void *)&_mh_execute_header, (os_log_t)v443, (os_log_type_t)v446, "FSTree update to new url %s new parent %s", (uint8_t *)v281, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v453 + 8))(v444, v454);
                uint64_t v310 = v456;
              }
              else
              {
                sub_10002B770(v442, &qword_100AD0E00);
                sub_10002B770(v277, &qword_100AD0E00);

                (*(void (**)(char *, uint64_t))(v453 + 8))(v276, v454);
                uint64_t v307 = v462;
                v306 = v431;
                uint64_t v310 = v456;
                v308 = v275;
              }
              uint64_t v311 = (uint64_t)&v306[*(int *)(v310 + 48)];
              v312 = v306;
              uint64_t v313 = v445;
              uint64_t v314 = v310;
              v315 = v306;
              uint64_t v316 = v465;
              v308(v312, v445, v465);
              uint64_t v317 = v478;
              sub_1009381C4(v478, v311, type metadata accessor for VFSItem);
              (*(void (**)(uint64_t, char *, uint64_t))(v307 + 40))(v448, v315, v316);
              sub_10092D018(v311, type metadata accessor for VFSItem);
              v318 = v432;
              uint64_t v319 = (uint64_t)&v432[*(int *)(v314 + 48)];
              ((void (*)(char *, uint64_t, uint64_t))v471)(v432, v313, v316);
              sub_1009381C4(v317, v319, type metadata accessor for VFSItem);
              unint64_t v478 = sub_10096AE10();
              v320 = *(void (**)(char *, uint64_t))(v307 + 8);
              v320(v318, v316);
              v321 = v482;
              v322 = (void *)swift_retain();
              if (objc_sync_enter(v322)) {
                sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v321);
              }
              uint64_t v323 = v321[20];
              swift_retain();
              if (objc_sync_exit(v321)) {
                sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v321);
              }
              swift_release();
              v324 = v455;
              uint64_t v325 = v465;
              ((void (*)(char *, uint64_t, uint64_t))v471)(v455, v323 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v465);
              swift_release();
              uint64_t v326 = sub_10096AE10();
              v328 = v327;
              v320(v324, v325);
              v506._countAndFlagsBits = v326;
              v506._object = v328;
              uint64_t v146 = sub_10096BE70(v506);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10092D018(v319, type metadata accessor for VFSItem);
              v329 = self;
              sub_10096AD20(v330);
              v332 = v331;
              if (v146)
              {
                id v333 = [v329 writingIntentWithURL:v331 options:3];

                uint64_t v143 = (_OWORD *)v467;
                v334 = *(void **)(v467 + 16);
                *(void *)(v467 + 16) = v333;

                uint64_t v197 = (uint64_t)v436;
                uint64_t v109 = v475;
                if (*(unsigned char *)v421)
                {
                  uint64_t v335 = 1;
                }
                else
                {
                  sub_1009381C4(v483, v459, type metadata accessor for VFSItem);
                  uint64_t v335 = 0;
                }
              }
              else
              {
                id v336 = [v329 writingIntentWithURL:v331 options:2];

                uint64_t v143 = (_OWORD *)v467;
                v337 = *(void **)(v467 + 16);
                *(void *)(v467 + 16) = v336;

                uint64_t v335 = 1;
                uint64_t v197 = (uint64_t)v436;
                uint64_t v109 = v475;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v468 + 56))(v459, v335, 1, v466);
              v338 = (void *)*((void *)v143 + 2);
              if (v338)
              {
                id v339 = v338;
                sub_10096C070();
                if (*(void *)((v498 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v498 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_10096C0F0();
                }
                sub_10096C150();
                sub_10096C0C0();
                swift_bridgeObjectRelease();

                sub_10002B770(v445, &qword_100AD0E00);
                LODWORD(v195) = 1;
                char v182 = v479;
                uint64_t v196 = v473;
LABEL_125:
                sub_10002B70C(v196, v197, (uint64_t *)&unk_100ADBFF0);
                if ((v182 & 0x10) != 0)
                {
                  char v340 = *(unsigned char *)(v197 + *(int *)(v463 + 40) + *(int *)(v464 + 80));
                  sub_10002B770(v197, (uint64_t *)&unk_100ADBFF0);
                  if ((v340 & 1) == 0)
                  {
LABEL_134:
                    v357 = self;
                    v358 = v455;
                    uint64_t v359 = v465;
                    ((void (*)(char *, uint64_t, uint64_t))v471)(v455, v448, v465);
                    sub_10096AD20(v360);
                    v362 = v361;
                    (*(void (**)(char *, uint64_t))(v462 + 8))(v358, v359);
                    id v363 = [v357 writingIntentWithURL:v362 options:0x80000000];

                    v364 = *(void **)(v109 + 16);
                    *(void *)(v109 + 16) = v363;

                    v348 = *(void **)(v109 + 16);
                    if (v348) {
                      goto LABEL_135;
                    }
                    goto LABEL_162;
                  }
                }
                else
                {
                  sub_10002B770(v197, (uint64_t *)&unk_100ADBFF0);
                }
                if (sub_100930968(v479, v196, (uint64_t)v421))
                {
                  v341 = self;
                  v342 = v455;
                  uint64_t v343 = v465;
                  ((void (*)(char *, uint64_t, uint64_t))v471)(v455, v448, v465);
                  sub_10096AD20(v344);
                  uint64_t v195 = v345;
                  (*(void (**)(char *, uint64_t))(v462 + 8))(v342, v343);
                  id v346 = [v341 writingIntentWithURL:v195 options:4];

                  v347 = *(void **)(v109 + 16);
                  *(void *)(v109 + 16) = v346;

                  v348 = *(void **)(v109 + 16);
                  if (v348) {
                    goto LABEL_135;
                  }
                  __break(1u);
                }
                if (!v195) {
                  goto LABEL_137;
                }
                v349 = self;
                v350 = v455;
                uint64_t v351 = v465;
                ((void (*)(char *, uint64_t, uint64_t))v471)(v455, v448, v465);
                sub_10096AD20(v352);
                v354 = v353;
                (*(void (**)(char *, uint64_t))(v462 + 8))(v350, v351);
                id v355 = [v349 writingIntentWithURL:v354 options:16];

                v356 = *(void **)(v109 + 16);
                *(void *)(v109 + 16) = v355;

                v348 = *(void **)(v109 + 16);
                if (v348)
                {
LABEL_135:
                  id v147 = v348;
                  sub_10096C070();
                  if (*(void *)((v498 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v498 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  {
LABEL_136:
                    sub_10096C150();
                    sub_10096C0C0();

LABEL_137:
                    v365 = v143;
                    unint64_t v481 = a13;
                    uint64_t v477 = ~v418;
                    unint64_t v478 = v484 & 0x10;
                    v366 = *(void **)(v109 + 16);
                    v367 = &selRef_setBarrierFolderURL_;
                    if (v366)
                    {
                      id v368 = [v366 URL];
                      v369 = v455;
                      sub_10096ADD0();

                      uint64_t v370 = (uint64_t)v437;
                      uint64_t v371 = v465;
                      v372 = v457;
                      ((void (*)(char *, char *, uint64_t))v457)(v437, v369, v465);
                      uint64_t v373 = v462;
                      v374 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v462 + 56);
                      v374(v370, 0, 1, v371);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v373 + 48))(v370, 1, v371) != 1)
                      {
                        v382 = v427;
                        uint64_t v383 = v465;
                        uint64_t v384 = ((uint64_t (*)(char *, uint64_t, uint64_t))v372)(v427, v370, v465);
                        uint64_t v385 = __chkstk_darwin(v384);
                        *((unsigned char *)&v418 - 16) = 1;
                        *(&v418 - 1) = (uint64_t)v382;
                        __chkstk_darwin(v385);
                        *(&v418 - 4) = (uint64_t)v482;
                        *(&v418 - 3) = (uint64_t)sub_10093E0A4;
                        *(&v418 - 2) = v386;
                        sub_10002B7CC((uint64_t *)&unk_100AD7510);
                        unint64_t v387 = v470;
                        sub_10096ADB0();
                        unint64_t v470 = v387;
                        uint64_t v373 = v462;
                        char v388 = v488;
                        v365 = (_OWORD *)v467;
                        (*(void (**)(char *, uint64_t))(v462 + 8))(v382, v383);
                        v375 = (void *)*((void *)v365 + 2);
                        if (v375)
                        {
                          if (v388)
                          {
                            uint64_t v471 = 1;
                            goto LABEL_147;
                          }
                          v367 = &selRef_setBarrierFolderURL_;
                          goto LABEL_142;
                        }
                        unsigned int v400 = v388 & 1;
LABEL_151:
                        v402 = *(void **)(v475 + 16);
                        *((void *)v365 + 2) = v402;
                        id v403 = v402;
                        goto LABEL_152;
                      }
                      v367 = &selRef_setBarrierFolderURL_;
                    }
                    else
                    {
                      uint64_t v373 = v462;
                      v374 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v462 + 56);
                      uint64_t v370 = (uint64_t)v437;
                      v374((uint64_t)v437, 1, 1, v465);
                    }
                    sub_10002B770(v370, &qword_100ACA8C0);
                    v375 = (void *)*((void *)v365 + 2);
                    if (v375)
                    {
LABEL_142:
                      id v376 = [v375 v367[3]];
                      v377 = v455;
                      sub_10096ADD0();

                      uint64_t v378 = (uint64_t)v428;
                      v379 = v377;
                      uint64_t v380 = v465;
                      v381 = v457;
                      ((void (*)(char *, char *, uint64_t))v457)(v428, v379, v465);
                      v374(v378, 0, 1, v380);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v373 + 48))(v378, 1, v380) == 1)
                      {
                        sub_10002B770(v378, &qword_100ACA8C0);
                        uint64_t v471 = (v484 >> 2) & 1;
LABEL_147:
                        uint64_t v390 = v440;
                        uint64_t v389 = v441;
                        uint64_t v392 = v438;
                        uint64_t v391 = v439;
                        uint64_t v393 = v483;
LABEL_153:
                        unint64_t v470 = v498;
                        sub_10002B70C(v459, v449, &qword_100ACB910);
                        sub_10002B70C(v473, v450, (uint64_t *)&unk_100ADBFF0);
                        sub_1009381C4(v393, v472, type metadata accessor for VFSItem);
                        unint64_t v404 = (*(unsigned __int8 *)(v392 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v392 + 80);
                        uint64_t v405 = v404 + v391;
                        unint64_t v406 = (v404 + v391 + 9) & 0xFFFFFFFFFFFFFFF8;
                        unint64_t v407 = (*(unsigned __int8 *)(v390 + 80) + v406 + 8) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80);
                        uint64_t v408 = v407 + v389;
                        unint64_t v409 = ((v408 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
                        uint64_t v410 = (v418 + v409 + 248) & v477;
                        uint64_t v411 = swift_allocObject();
                        uint64_t v477 = (v408 & 0xFFFFFFFFFFFFFFF8) + v411;
                        uint64_t v412 = v475;
                        *(void *)(v411 + 16) = v422;
                        *(void *)(v411 + 24) = v412;
                        unint64_t v413 = v484;
                        *(void *)(v411 + 32) = v458;
                        *(void *)(v411 + 40) = v413;
                        v414 = v482;
                        *(void *)(v411 + 48) = v480;
                        *(void *)(v411 + 56) = v414;
                        *(void *)(v411 + 64) = v485;
                        *(unsigned char *)(v411 + 72) = v486;
                        uint64_t v415 = v479;
                        *(void *)(v411 + 80) = v476;
                        *(void *)(v411 + 88) = v415;
                        sub_10001AE98(v449, v411 + v404, &qword_100ACB910);
                        v416 = (unsigned char *)(v411 + v405);
                        unsigned char *v416 = v447 & 1;
                        v416[1] = v478 >> 4;
                        *(void *)(v411 + v406) = v467;
                        sub_10001AE98(v450, v411 + v407, (uint64_t *)&unk_100ADBFF0);
                        *(unsigned char *)(v411 + v408) = v451;
                        *(void *)(v477 + 8) = v474;
                        uint64_t v417 = v481;
                        sub_10001AE98(v481, v411 + v409, &qword_100AD0EA0);
                        sub_10001158C(v472, v411 + v410, type metadata accessor for VFSItem);
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_100244374(v417);
                        sub_1008E692C(v485, v486, v470, v471, (void (*)(void, void))sub_10093ADA0, v411);
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        sub_10002B770(v459, &qword_100ACB910);
                        sub_10092D018(v483, type metadata accessor for VFSItem);
                        (*(void (**)(char *, uint64_t))(v462 + 8))(v461, v465);
                        swift_release();
                        swift_release();
                        swift_release();
                        goto LABEL_20;
                      }
                      v394 = v423;
                      uint64_t v395 = v465;
                      ((void (*)(char *, uint64_t, uint64_t))v381)(v423, v378, v465);
                      v396 = v424;
                      uint64_t v397 = ((uint64_t (*)(char *, char *, uint64_t))v471)(v424, v394, v395);
                      uint64_t v398 = __chkstk_darwin(v397);
                      *((unsigned char *)&v418 - 16) = 1;
                      *(&v418 - 1) = (uint64_t)v396;
                      __chkstk_darwin(v398);
                      *(&v418 - 4) = (uint64_t)v482;
                      *(&v418 - 3) = (uint64_t)sub_10093E0A4;
                      *(&v418 - 2) = v399;
                      sub_10002B7CC((uint64_t *)&unk_100AD7510);
                      sub_10096ADB0();
                      unsigned int v400 = v488 & 1;
                      v401 = *(void (**)(char *, uint64_t))(v373 + 8);
                      v401(v396, v395);
                      v401(v394, v395);
LABEL_152:
                      uint64_t v390 = v440;
                      uint64_t v389 = v441;
                      uint64_t v392 = v438;
                      uint64_t v391 = v439;
                      uint64_t v393 = v483;
                      uint64_t v471 = (v484 >> 2) & 1 | v400;
                      goto LABEL_153;
                    }
                    unsigned int v400 = 0;
                    goto LABEL_151;
                  }
LABEL_158:
                  sub_10096C0F0();
                  goto LABEL_136;
                }
                __break(1u);
                goto LABEL_134;
              }
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, v146);
            }
            sub_10002B7CC(&qword_100ADADE8);
            uint64_t v190 = swift_dynamicCastClass();
            if (!v190)
            {
LABEL_78:
              uint64_t v184 = v483;
              uint64_t v183 = v473;
              char v182 = v479;
              LODWORD(v447) = sub_10093033C(v483, v473, v479);
              goto LABEL_79;
            }
            uint64_t v191 = v190;
            swift_beginAccess();
            uint64_t v192 = *(void *)(v191 + 16);
            unsigned int v193 = *(unsigned __int8 *)(v191 + 24);
            if (v193 <= 1)
            {
              uint64_t v194 = v433;
              if (v193 != 1)
              {
                swift_retain_n();
                sub_100718E98((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 1848, v191);
              }
              swift_retain();
LABEL_74:
              long long v207 = v419;
              uint64_t v208 = *(void *)(v191 + 40);
              if (v208)
              {
                uint64_t v209 = *(void *)(v191 + 32);
                swift_beginAccess();
                uint64_t v210 = *v207;
                swift_bridgeObjectRetain();
                VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v192, 1, v209, v208, v210, v194);
                swift_bridgeObjectRelease();
                uint64_t v211 = v456;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v446 + 48))(v194, 1, v456) == 1)
                {
                  sub_10002B770((uint64_t)v194, &qword_100AD0DF0);
                  swift_bridgeObjectRelease();
                  Swift::String v212 = *(void (**)(uint64_t))(v109 + 16);
                  uint64_t v488 = v192;
                  char v489 = 1;
                  long long v490 = 0u;
                  long long v491 = 0u;
                  long long v492 = 0u;
                  long long v493 = 0u;
                  long long v494 = 0u;
                  long long v495 = 0u;
                  uint64_t v496 = 0;
                  sub_1000D3768((uint64_t)&v488);
                  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
                  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
                  uint64_t v213 = swift_allocError();
                  sub_10001AE98((uint64_t)&v488, v214, (uint64_t *)&unk_100ACD9A0);
                  uint64_t v215 = v477;
                  *(void *)uint64_t v477 = v213;
                  swift_storeEnumTagMultiPayload();
                  swift_retain();
                  v212(v215);
                  swift_release();
LABEL_110:
                  swift_release();
                  swift_release();
                  sub_10002B770(v215, &qword_100AD0E10);
                  sub_10092D018(v483, type metadata accessor for VFSItem);
                  (*(void (**)(char *, uint64_t))(v462 + 8))(v461, v465);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  return swift_release();
                }
                uint64_t v216 = (uint64_t)&v194[*(int *)(v211 + 48)];
                uint64_t v217 = v426;
                v218 = v194;
                v219 = v425;
                uint64_t v220 = (uint64_t)&v425[*(int *)(v426 + 48)];
                uint64_t v221 = v465;
                uint64_t v176 = v457;
                ((void (*)(char *, char *, uint64_t))v457)(v425, v218, v465);
                sub_10001158C(v216, v220, type metadata accessor for VFSItem);
                swift_release();
                v222 = v461;
                (*(void (**)(char *, uint64_t))(v462 + 8))(v461, v221);
                uint64_t v223 = (uint64_t)&v219[*(int *)(v217 + 48)];
                ((void (*)(char *, char *, uint64_t))v176)(v222, v219, v221);
                sub_10092D018(v223, type metadata accessor for VFSItem);
                goto LABEL_78;
              }
LABEL_160:
              __break(1u);
              goto LABEL_161;
            }
            uint64_t v194 = v433;
            if (v193 != 2)
            {
              swift_retain();
              sub_100718BC8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 1846);
            }
            swift_retain();
            uint64_t v202 = (void *)swift_retain();
            int v203 = objc_sync_enter(v202);
            if (v192)
            {
              if (v203) {
                goto LABEL_163;
              }
              uint64_t v204 = *(void *)(v146 + 160);
              swift_retain();
              if (objc_sync_exit((id)v146)) {
                goto LABEL_164;
              }
              swift_release();
              uint64_t v192 = *(void *)(v204 + 40);
              char v205 = *(unsigned char *)(v204 + 48);
              int v203 = swift_release();
              if ((v205 & 1) == 0) {
                goto LABEL_74;
              }
              __break(1u);
            }
            if (v203) {
              goto LABEL_163;
            }
            uint64_t v206 = *(void *)(v146 + 160);
            swift_retain();
            if (!objc_sync_exit((id)v146))
            {
              swift_release();
              uint64_t v192 = *(void *)(v206 + 24);
              swift_release();
              goto LABEL_74;
            }
LABEL_164:
            sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, v146);
          }
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_157;
    }
    if (*(unsigned char *)(v142 + v159) == 3)
    {
      if (!*v452) {
        goto LABEL_30;
      }
    }
    else if (!*(unsigned char *)(v142 + v159) && *v452 == 3)
    {
      goto LABEL_30;
    }
    uint64_t v198 = *(void (**)(uint64_t))(v109 + 16);
    sub_10058C37C((uint64_t)&v488);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v199 = swift_allocError();
    sub_10001AE98((uint64_t)&v488, v200, (uint64_t *)&unk_100ACD9A0);
    uint64_t v201 = v477;
    *(void *)uint64_t v477 = v199;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v198(v201);
    swift_release();
    swift_release();
    uint64_t v189 = v201;
LABEL_64:
    sub_10002B770(v189, &qword_100AD0E10);
    sub_10092D018(v142, type metadata accessor for VFSItem);
    swift_release();
    return swift_release();
  }
  sub_10002B770(v114, (uint64_t *)&unk_100ADBFF0);
  sub_10092D018(v115, type metadata accessor for VFSItem);
LABEL_19:
  uint64_t v130 = *(void (**)(uint64_t))(v109 + 16);
  uint64_t v131 = v477;
  *(void *)uint64_t v477 = v475;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_errorRetain();
  v130(v131);
  swift_release();
  swift_errorRelease();
  swift_release();
  sub_10002B770(v131, &qword_100AD0E10);
  sub_10092D018(v112, type metadata accessor for VFSItem);
LABEL_20:
  swift_release();
  return swift_release();
}

uint64_t sub_1008F72B8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t (*a10)(uint64_t), void *a11)
{
  int v73 = a8;
  uint64_t v72 = a7;
  uint64_t v77 = a4;
  uint64_t v78 = a1;
  uint64_t v15 = a10;
  uint64_t v16 = sub_10002B7CC(&qword_100AD0E10);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v71 = (uint64_t *)((char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v70 = (uint64_t)&v69 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v69 - v22;
  uint64_t v74 = a3;
  if (a2)
  {
    uint64_t v75 = a5;
    uint64_t v76 = a10;
    uint64_t v24 = a3[17];
    __chkstk_darwin(v21);
    *(&v69 - 4) = v24;
    *((_DWORD *)&v69 - 6) = 1;
    *(&v69 - 2) = v25;
    swift_retain_n();
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    *(unsigned char *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
    }
    sub_10002B70C(v78, (uint64_t)v23, &qword_100AD0E10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      sub_10002B770((uint64_t)v23, &qword_100AD0E10);
      uint64_t v15 = v76;
      if ((v75 & 0x40) == 0) {
        return v15(v78);
      }
      goto LABEL_11;
    }
    sub_10002B770((uint64_t)v23, &qword_100AD0E10);
    uint64_t v26 = v77;
    uint64_t v27 = sub_10001AE98((uint64_t)v77, (uint64_t)v92, (uint64_t *)&unk_100ACF710);
    if (v92[2] >> 60 != 11)
    {
      char v55 = (char)v75;
      if (v92[0])
      {
        uint64_t v69 = (uint64_t)&v69;
        __chkstk_darwin(v27);
        *(&v69 - 4) = v24;
        *((_DWORD *)&v69 - 6) = 0;
        *(&v69 - 2) = v56;
        sub_100245AD4(v26, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
        sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
        *(unsigned char *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(void *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_10096C7F0(1uLL);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
        sub_100245AD4(v77, (void (*)(void, void, void, void, void, void, void))sub_1000D35D8);
        uint64_t v15 = v76;
        if ((v55 & 0x40) == 0) {
          return v15(v78);
        }
      }
      else
      {
        swift_release();
        uint64_t v15 = v76;
        if ((v55 & 0x40) == 0) {
          return v15(v78);
        }
      }
      goto LABEL_11;
    }
    swift_release();
    LOBYTE(a5) = (_BYTE)v75;
    uint64_t v15 = v76;
  }
  if ((a5 & 0x40) == 0) {
    return v15(v78);
  }
LABEL_11:
  uint64_t v28 = a6 + *(int *)(type metadata accessor for VFSItem(0) + 28);
  uint64_t v29 = type metadata accessor for ItemMetadata();
  if (*(unsigned char *)(v28 + *(int *)(v29 + 92)) != 1 || *(unsigned char *)(v28 + *(int *)(v29 + 96)) != 1) {
    return v15(v78);
  }
  uint64_t v77 = a11;
  swift_beginAccess();
  uint64_t v30 = *(unsigned int *)(a9 + 24);
  uint64_t v31 = *(void *)(a9 + 32);
  uint64_t v32 = *(unsigned __int8 *)(a9 + 40);
  uint64_t v33 = *(unsigned __int8 *)(a9 + 64);
  uint64_t v34 = *(void *)(a9 + 72);
  uint64_t v35 = *(void *)(a9 + 80);
  uint64_t v36 = *(void *)(a9 + 104);
  v94[0] = *(void *)(a9 + 16);
  v94[1] = v30;
  v94[2] = v31;
  v94[3] = v32;
  long long v95 = *(_OWORD *)(a9 + 48);
  uint64_t v96 = v33;
  uint64_t v97 = v34;
  long long v99 = *(_OWORD *)(a9 + 88);
  uint64_t v98 = v35;
  uint64_t v100 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v74;
  sub_1008E3FC4(v72, v73, (uint64_t)v94, (uint64_t)&v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = (void *)swift_retain();
  if (objc_sync_enter(v38)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v37);
  }
  uint64_t v76 = (uint64_t (*)(uint64_t))v16;
  uint64_t v39 = v15;
  uint64_t v40 = v37[20];
  swift_retain();
  if (objc_sync_exit(v37)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v37);
  }
  swift_release();
  int v41 = *(_DWORD *)(v40 + 16);
  uint64_t v42 = swift_release();
  uint64_t v75 = &v69;
  __chkstk_darwin(v42);
  *((_DWORD *)&v69 - 4) = v41;
  *((_DWORD *)&v69 - 3) = 0x200000;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  long long v43 = v89;
  long long v85 = v89;
  unsigned int v44 = v90;
  unsigned int v45 = HIDWORD(v90);
  unint64_t v86 = v90;
  sub_10001AE98((uint64_t)&v91, (uint64_t)v93, &qword_100ADF5E0);
  uint64_t v46 = sub_10001AE98((uint64_t)v93, (uint64_t)v101, &qword_100ADF5E0);
  if (v101[1])
  {
    uint64_t v47 = __chkstk_darwin(v46);
    *(&v69 - 4) = (uint64_t)&v85;
    *(&v69 - 3) = (uint64_t)sub_10043F5DC;
    *(&v69 - 2) = (uint64_t)(&v69 - 4);
    if ((v49 & 0x1000000000000000) == 0 && v49 & 0x2000000000000000 | v48 & 0x1000000000000000)
    {
      __chkstk_darwin(v47);
      *(&v69 - 2) = (uint64_t)sub_10043F5F4;
      *(&v69 - 1) = v52;
      uint64_t v15 = v39;
      if ((v51 & 0x2000000000000000) != 0)
      {
        v79[0] = v50;
        v79[1] = v51 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v87 = v79;
        long long v81 = v85;
        unint64_t v82 = v86;
        uint64_t v83 = v79;
        uint64_t v84 = v88;
        uint64_t v58 = fpfs_openfdbyhandle();
        if ((v58 & 0x80000000) != 0)
        {
          int v66 = sub_10096B4D0();
          uint64_t v60 = sub_1005970E0(v66, 0, 0, 0xAu);
          swift_willThrow();
          sub_10021E550((uint64_t)&v89);
          goto LABEL_45;
        }
        uint64_t v61 = v58;
        sub_10021E550((uint64_t)&v89);
      }
      else
      {
        if ((v50 & 0x1000000000000000) != 0)
        {
          uint64_t v53 = (v51 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v54 = v50 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v53 = sub_10096CC90();
        }
        uint64_t v61 = (uint64_t)sub_100441D24(v53, v54, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
        sub_10021E550((uint64_t)&v89);
      }
      goto LABEL_34;
    }
    sub_10096CBC0();
    sub_10021E550((uint64_t)&v89);
    uint64_t v61 = v80;
  }
  else
  {
    long long v81 = v43;
    unint64_t v82 = __PAIR64__(v45, v44);
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v57 = fpfs_openfdbyhandle();
    if ((v57 & 0x80000000) != 0)
    {
      int v59 = sub_10096B4D0();
      uint64_t v60 = sub_1005970E0(v59, 0, 0, 0xAu);
      swift_willThrow();
      uint64_t v15 = v39;
      goto LABEL_45;
    }
    uint64_t v61 = v57;
  }
  uint64_t v15 = v39;
LABEL_34:
  if ((fpfs_funset_resuming_sync_with_drop_local_changes() & 0x80000000) != 0)
  {
    int v64 = sub_10096B4D0();
    uint64_t v65 = 12;
  }
  else
  {
    uint64_t v62 = v70;
    sub_10002B70C(v78, v70, &qword_100AD0E10);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_10002B770(v62, &qword_100AD0E10);
    if (EnumCaseMultiPayload == 1 || (fpfs_funset_pause_sync_bundleID() & 0x80000000) == 0)
    {
      sub_100595FB8(v61);
      return v15(v78);
    }
    int v64 = sub_10096B4D0();
    uint64_t v65 = 13;
  }
  uint64_t v60 = sub_1005970E0(v64, v65, 0, 0xAu);
  swift_willThrow();
  sub_100595FB8(v61);
LABEL_45:
  uint64_t v68 = (uint64_t)v71;
  uint64_t *v71 = v60;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  v15(v68);
  swift_errorRelease();
  return sub_10002B770(v68, &qword_100AD0E10);
}

uint64_t sub_1008F7C3C(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4, uint64_t (*a5)(void, void), NSURL *a6, uint64_t a7, void *a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, NSURL *a20,uint64_t a21)
{
  v739 = a8;
  uint64_t v735 = a7;
  v736 = a6;
  v741 = a5;
  v734 = a4;
  v742 = a2;
  v721 = (void *)a1;
  uint64_t v717 = sub_10096A650();
  uint64_t v716 = *(void *)(v717 - 8);
  __chkstk_darwin(v717);
  v715 = (char *)&v643 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v730 = sub_10096A630();
  uint64_t v737 = *(void *)(v730 - 8);
  __chkstk_darwin(v730);
  v732 = (char *)&v643 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v711 = sub_10096A7B0();
  uint64_t v704 = *(void *)(v711 - 8);
  __chkstk_darwin(v711);
  v703 = (char *)&v643 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v728 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v25 = __chkstk_darwin(v728);
  uint64_t v691 = (uint64_t)&v643 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v683 = (uint64_t)&v643 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v708 = (char *)&v643 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v707 = (unsigned __int8 *)&v643 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v702 = (uint64_t)&v643 - v34;
  __chkstk_darwin(v33);
  uint64_t v696 = (uint64_t)&v643 - v35;
  uint64_t v36 = sub_10002B7CC(&qword_100AD0F80);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  v685 = (char *)&v643 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v684 = (uint64_t)&v643 - v39;
  uint64_t v40 = sub_10096B480();
  uint64_t v672 = *(void *)(v40 - 8);
  uint64_t v673 = v40;
  uint64_t v41 = __chkstk_darwin(v40);
  v670 = (char *)&v643 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  v671 = (char *)&v643 - v44;
  __chkstk_darwin(v43);
  v676 = (char *)&v643 - v45;
  v690 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  uint64_t v46 = __chkstk_darwin(v690);
  v698 = (char *)&v643 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v693 = (uint64_t)&v643 - v48;
  uint64_t v49 = sub_10002B7CC(&qword_100AD0DF0);
  uint64_t v50 = __chkstk_darwin(v49 - 8);
  v679 = (char *)&v643 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v709 = (char *)&v643 - v52;
  uint64_t v724 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v53 = __chkstk_darwin(v724);
  v695 = (char *)&v643 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v53);
  v699 = (char *)&v643 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v701 = (uint64_t)&v643 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v713 = (uint64_t)&v643 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v689 = (uint64_t)&v643 - v62;
  __chkstk_darwin(v61);
  v712 = ((char *)&v643 - v63);
  uint64_t v723 = sub_10096B830();
  v719 = *(void **)(v723 - 8);
  __chkstk_darwin(v723);
  v718 = (NSURL *)((char *)&v643 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v66 = __chkstk_darwin(v65 - 8);
  uint64_t v726 = (uint64_t)&v643 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v722 = (char *)&v643 - v68;
  v731 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v725 = *((void *)v731 - 1);
  uint64_t v69 = __chkstk_darwin(v731);
  uint64_t v700 = (uint64_t)&v643 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __chkstk_darwin(v69);
  v706 = (char *)&v643 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v688 = (uint64_t)&v643 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v714 = (uint64_t)&v643 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v705 = (uint64_t)&v643 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  v682 = (char *)&v643 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v680 = (uint64_t)&v643 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  uint64_t v720 = (uint64_t)&v643 - v84;
  __chkstk_darwin(v83);
  uint64_t v738 = (uint64_t)&v643 - v85;
  uint64_t v86 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v686 = *(void *)(v86 - 8);
  uint64_t v687 = v86;
  uint64_t v87 = __chkstk_darwin(v86);
  v694 = (char *)&v643 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __chkstk_darwin(v87);
  v692 = (char *)&v643 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v681 = (char *)&v643 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v678 = (char *)&v643 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  v697 = (char *)&v643 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v710 = (uint64_t)&v643 - v98;
  __chkstk_darwin(v97);
  uint64_t v733 = (uint64_t)&v643 - v99;
  uint64_t v744 = sub_10096AE50();
  uint64_t v743 = *(void *)(v744 - 8);
  uint64_t v100 = __chkstk_darwin(v744);
  v729 = (char *)&v643 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __chkstk_darwin(v100);
  v675 = (char *)&v643 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  v674 = (char *)&v643 - v105;
  uint64_t v106 = __chkstk_darwin(v104);
  v677 = (char *)&v643 - v107;
  uint64_t v108 = __chkstk_darwin(v106);
  uint64_t v110 = (char *)&v643 - v109;
  uint64_t v111 = __chkstk_darwin(v108);
  uint64_t v113 = (char *)&v643 - v112;
  uint64_t v114 = __chkstk_darwin(v111);
  unint64_t v116 = (char *)&v643 - v115;
  uint64_t v117 = __chkstk_darwin(v114);
  uint64_t v119 = (char *)&v643 - v118;
  __chkstk_darwin(v117);
  uint64_t v121 = (char *)&v643 - v120;
  uint64_t v122 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v122);
  unint64_t v124 = (uint64_t *)((char *)&v643 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v740 = a3;
  uint64_t v125 = swift_projectBox();
  if (v742)
  {
    char v126 = v742;
    swift_beginAccess();
    uint64_t v127 = *(void (**)(uint64_t *))(v740 + 16);
    *unint64_t v124 = (uint64_t)v126;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    swift_retain();
    v127(v124);
    swift_release();
    return sub_10002B770((uint64_t)v124, &qword_100AD0E10);
  }
  v664 = v119;
  uint64_t v665 = a3 + 16;
  v660 = v110;
  v661 = v113;
  v662 = v116;
  v741 = (uint64_t (*)(void, void))v125;
  uint64_t v666 = v122;
  v667 = v124;
  v727 = v121;
  uint64_t v663 = a11;
  v668 = (_OWORD *)(a11 + 16);
  int v129 = v734;
  swift_beginAccess();
  uint64_t v130 = (void *)v129[2];
  if (v130)
  {
    id v131 = [v130 URL];
    uint64_t v132 = (uint64_t)v664;
    sub_10096ADD0();

    uint64_t v133 = v743;
    uint64_t v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v743 + 32);
    uint64_t v135 = v733;
    uint64_t v136 = v744;
    v134(v733, v132, v744);
    v734 = *(void **)(v133 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v135, 0, 1, v136);
    int v137 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v135, 1, v136);
    uint64_t v138 = v727;
    uint64_t v139 = v738;
    uint64_t v140 = v735;
    if (v137 != 1)
    {
      v134((uint64_t)v727, v135, v136);
      goto LABEL_9;
    }
    uint64_t v141 = v135;
  }
  else
  {
    uint64_t v133 = v743;
    uint64_t v141 = v733;
    uint64_t v136 = v744;
    v734 = *(void **)(v743 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734)(v733, 1, 1, v744);
    uint64_t v138 = v727;
    uint64_t v139 = v738;
    uint64_t v140 = v735;
  }
  uint64_t v142 = v741;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t (*)(void, void), uint64_t))(v133 + 16))(v138, v142, v136);
  sub_10002B770(v141, &qword_100ACA8C0);
LABEL_9:
  uint64_t v143 = (uint64_t *)(v140 + 16);
  if ((v736 & 0x40) != 0)
  {
    swift_beginAccess();
    if ((*v143 & 0x1000) == 0) {
      *v143 |= 0x1000uLL;
    }
  }
  uint64_t v735 = a17;
  Swift::UInt64 v144 = v668;
  swift_beginAccess();
  long long v145 = v144[3];
  v796[2] = v144[2];
  v796[3] = v145;
  long long v146 = v144[5];
  v796[4] = v144[4];
  v796[5] = v146;
  long long v147 = v144[1];
  v796[0] = *v144;
  v796[1] = v147;
  swift_beginAccess();
  uint64_t v148 = *v143;
  sub_100938D34((uint64_t)v796);
  uint64_t v669 = a12;
  sub_1008F3004(a9, a10, (uint64_t)v796, a12, v148, v139);
  v742 = 0;
  v658 = v143;
  uint64_t v733 = a9;
  int v659 = a10;
  sub_100938D88((uint64_t)v796);
  uint64_t v149 = v722;
  sub_10002B70C(a13, (uint64_t)v722, &qword_100ACB910);
  uint64_t v150 = v731;
  if ((*(unsigned int (**)(const char *, uint64_t, int *))(v725 + 48))(v149, 1, v731) == 1)
  {
    uint64_t v151 = sub_10002B770((uint64_t)v149, &qword_100ACB910);
    uint64_t v152 = v669;
    uint64_t v153 = v723;
LABEL_15:
    unint64_t v156 = (unint64_t)v739;
    uint64_t v157 = v727;
    if ((a14 & 1) == 0 && (a15 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  uint64_t v154 = v720;
  sub_10001158C((uint64_t)v149, v720, type metadata accessor for VFSItem);
  sub_10096B0E0();
  sub_1000256AC((unint64_t *)&unk_100AD0BE0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v150 = v731;
  char v155 = sub_10096BBE0();
  uint64_t v151 = sub_10092D018(v154, type metadata accessor for VFSItem);
  uint64_t v152 = v669;
  uint64_t v153 = v723;
  if (v155) {
    goto LABEL_15;
  }
  unint64_t v156 = (unint64_t)v739;
  uint64_t v157 = v727;
  if ((a15 & 1) == 0)
  {
LABEL_17:
    uint64_t v158 = v728;
    uint64_t v159 = v724;
    goto LABEL_50;
  }
LABEL_19:
  uint64_t v160 = (id *)(a16 + 16);
  uint64_t v161 = v743;
  double v162 = v721;
  uint64_t v163 = (uint64_t)v664;
  if (v721)
  {
    swift_beginAccess();
    if (!*v160)
    {
LABEL_292:
      __break(1u);
      goto LABEL_293;
    }
    id v164 = [*v160 URL];
    sub_10096ADD0();

    sub_10096AD20(v165);
    os_log_type_t v167 = v166;
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v163, v744);
    sub_10096AD20(v168);
    unint64_t v170 = v169;
    [v162 itemAtURL:v167 willMoveToURL:v169];
  }
  __chkstk_darwin(v151);
  v641 = (unint64_t *)(a16 + 16);
  unint64_t v642 = (unint64_t)v157;
  long long v171 = v742;
  uint64_t v172 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10093B134);
  v742 = v171;
  if (v171)
  {
    uint64_t v173 = v738;
LABEL_24:
    sub_10092D018(v173, type metadata accessor for VFSItem);
    uint64_t v174 = 0;
LABEL_25:
    uint64_t v175 = v737;
    goto LABEL_26;
  }
  uint64_t v220 = v728;
  if (v162)
  {
    swift_beginAccess();
    if (!*v160)
    {
LABEL_293:
      __break(1u);
      goto LABEL_294;
    }
    id v221 = [*v160 URL];
    sub_10096ADD0();

    sub_10096AD20(v222);
    v224 = v223;
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v163, v744);
    sub_10096AD20(v225);
    uint64_t v227 = v226;
    [v162 itemAtURL:v224 didMoveToURL:v226];
  }
  if ((v736 & 8) != 0)
  {
    unint64_t v233 = (NSURL *)(v735 + v220[14] + *(int *)(v724 + 40));
    urlString = v233->_urlString;
    if (!urlString)
    {
      __chkstk_darwin(v172);
      v641 = (unint64_t *)v735;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_10093B150, (uint64_t)&v639, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 1969);
    }
    Class isa = v233->super.isa;
    sub_10096AD20(v233);
    uint64_t v237 = v236;
    v722 = (const char *)[v236 fileSystemRepresentation];
    id v238 = v237;
    *(void *)&long long v760 = isa;
    *((void *)&v760 + 1) = urlString;
    *(void *)&long long v746 = 47;
    *((void *)&v746 + 1) = 0xE100000000000000;
    uint64_t v784 = 58;
    unint64_t v785 = 0xE100000000000000;
    unint64_t v239 = sub_10001F9C0();
    v721 = (void *)sub_10096C910();
    *(void *)&long long v760 = isa;
    *((void *)&v760 + 1) = urlString;
    *(void *)&long long v746 = 47;
    *((void *)&v746 + 1) = 0xE100000000000000;
    uint64_t v784 = 58;
    unint64_t v785 = 0xE100000000000000;
    v641 = (unint64_t *)v239;
    unint64_t v642 = v239;
    unint64_t v639 = (unint64_t)&type metadata for String;
    v640 = (NSURL *)v239;
    sub_10096C910();
    uint64_t v240 = sub_10096BCF0();
    swift_bridgeObjectRelease();
    size_t v241 = strlen((const char *)(v240 + 32));
    swift_release();
    BOOL v242 = __OFADD__(v241, 1);
    size_t v243 = v241 + 1;
    uint64_t v152 = v669;
    if (v242)
    {
      __break(1u);
      goto LABEL_287;
    }
    uint64_t v244 = sub_10096BCF0();
    swift_bridgeObjectRelease();
    setxattr(v722, "com.apple.fileprovider.before-bounce#P", (const void *)(v244 + 32), v243, 0, 3);
    swift_release();
    unint64_t v156 = (unint64_t)v739;
    uint64_t v150 = v731;
    uint64_t v158 = v728;
    uint64_t v232 = v724;
    uint64_t v153 = v723;
    uint64_t v157 = v727;
  }
  else
  {
    sub_10096AD20(v736);
    v229 = v228;
    unint64_t v230 = (const char *)[v228 fileSystemRepresentation];
    id v231 = v229;
    removexattr(v230, "com.apple.fileprovider.before-bounce#P", 1);
    uint64_t v150 = v731;
    uint64_t v232 = v724;
    uint64_t v152 = v669;
    uint64_t v153 = v723;
    uint64_t v158 = v220;
  }
  sub_100640C94();
  uint64_t v159 = v232;
LABEL_50:
  v752[0] = v152;
  uint64_t v245 = swift_allocObject();
  uint64_t v723 = v245;
  *(void *)(v245 + 16) = 0;
  uint64_t v246 = (void *)(v245 + 16);
  char v247 = (uint64_t *)(v738 + 16);
  unint64_t v248 = (unsigned __int8 *)(v738 + 24);
  if ((v152 & 2) != 0)
  {
    char v247 = (uint64_t *)v735;
    unint64_t v248 = (unsigned __int8 *)(v735 + 8);
  }
  LODWORD(v720) = *v248;
  v664 = (char *)*v247;
  uint64_t v249 = v158[21];
  v722 = (const char *)(v735 + *(int *)(v159 + 40));
  uint64_t v657 = v249;
  if (!sub_100943F10(v722[v249], (uint64_t)&off_100A6CDD0))
  {
    char v250 = *(objc_class **)(v156 + 216);
    unint64_t v251 = v718;
    v718->super.Class isa = v250;
    v252 = v719;
    ((void (*)(NSURL *, void, uint64_t))v719[13])(v251, enum case for DispatchPredicate.onQueue(_:), v153);
    uint64_t v253 = v250;
    LOBYTE(v250) = sub_10096B860();
    ((void (*)(NSURL *, uint64_t))v252[1])(v251, v153);
    if ((v250 & 1) == 0)
    {
      __break(1u);
      goto LABEL_277;
    }
    unint64_t v254 = v156 + qword_100ADE770;
    swift_beginAccess();
    uint64_t v158 = v728;
    uint64_t v159 = v724;
    if (*(void *)(*(void *)v254 + 16) || *(unsigned char *)(v738 + v150[7] + v728[16]) == 1)
    {
      char v255 = v752[0];
      uint64_t v256 = v712;
      sub_10002B70C(v735, (uint64_t)v712, (uint64_t *)&unk_100ADBFF0);
      if ((v255 & 0x10) != 0)
      {
        char v257 = *((unsigned char *)&v256->isa + *(int *)(v159 + 40) + v158[20]);
        sub_10002B770((uint64_t)v256, (uint64_t *)&unk_100ADBFF0);
        if ((v257 & 1) == 0)
        {
LABEL_62:
          if ((*v246 & 0x10000) == 0) {
            *v246 |= 0x10000uLL;
          }
          if ((v752[0] & 0x10000) != 0) {
            v752[0] &= ~0x10000uLL;
          }
          goto LABEL_66;
        }
      }
      else
      {
        sub_10002B770((uint64_t)v256, (uint64_t *)&unk_100ADBFF0);
      }
      if (v752[0] & 0x10000) == 0 && ((v752[0] & 8) == 0 || (*(unsigned char *)(v738 + v150[7] + v158[20]))) {
        goto LABEL_66;
      }
      goto LABEL_62;
    }
  }
LABEL_66:
  uint64_t v258 = v738 + v150[7];
  uint64_t v259 = v258 + v158[36];
  if (*(unsigned char *)(v259 + 4) == 1)
  {
    unint64_t v260 = v752[0];
  }
  else
  {
    unint64_t v260 = v752[0];
    if (*(_DWORD *)v259 >= 2u && (v752[0] & 0x10000) != 0 && v722[v657])
    {
      unint64_t v260 = v752[0] & 0xFFFFFFFFFFFEFFFFLL;
      v752[0] &= ~0x10000uLL;
    }
  }
  if (*(unsigned char *)(v258 + v158[18]) == 1)
  {
    if ((v260 & 3) == 0)
    {
      uint64_t v277 = v713;
LABEL_83:
      sub_10002B70C(v735, v277, (uint64_t *)&unk_100ADBFF0);
      if ((v152 & 0x100000000000) != 0)
      {
        uint64_t v285 = v246;
        uint64_t v286 = v258;
        char v287 = *(unsigned char *)(v277 + *(int *)(v159 + 40) + v158[15]);
        sub_10002B770(v277, (uint64_t *)&unk_100ADBFF0);
        unint64_t v260 = v752[0];
        if ((v287 & 1) == 0 && (v752[0] & 0x100000000000) != 0)
        {
          unint64_t v260 = v752[0] & 0xFFFFEFFFFFFFFFFFLL;
          v752[0] &= ~0x100000000000uLL;
        }
        uint64_t v258 = v286;
        uint64_t v246 = v285;
      }
      else
      {
        sub_10002B770(v277, (uint64_t *)&unk_100ADBFF0);
        unint64_t v260 = v752[0];
      }
      goto LABEL_89;
    }
    uint64_t v261 = (void *)swift_retain();
    if (objc_sync_enter(v261)) {
LABEL_294:
    }
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, v156);
    v719 = v246;
    v721 = (void *)v258;
    uint64_t v262 = *(void *)(v156 + 160);
    swift_retain();
    if (objc_sync_exit((id)v156)) {
LABEL_295:
    }
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, v156);
    swift_release();
    Swift::UInt64 v263 = *(void *)v738;
    uint64_t v264 = v735;
    uint64_t v265 = *(void *)(v735 + 16);
    uint64_t v266 = *(void *)(v735 + 24);
    char v267 = *(unsigned char *)(v738 + 8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v746 = *(void *)(v262 + 72);
    *(void *)(v262 + 72) = 0x8000000000000000;
    uint64_t v269 = (uint64_t)v664;
    Swift::UInt64 v270 = v263;
    LOBYTE(v263) = v720;
    sub_10038ACC8((uint64_t)v664, v720, v265, v266, v270, v267, isUniquelyReferenced_nonNull_native);
    *(void *)(v262 + 72) = v746;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    uint64_t v271 = v709;
    VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v269, v263, *(void *)(v264 + 16), *(void *)(v264 + 24), 1, v709);
    v272 = (int *)sub_10002B7CC(&qword_100AD0E00);
    uint64_t v273 = *((void *)v272 - 1);
    uint64_t v274 = *(unsigned int (**)(char *, uint64_t, int *))(v273 + 48);
    uint64_t v275 = v273 + 48;
    if (v274(v271, 1, v272) == 1)
    {
      sub_10002B770((uint64_t)v271, &qword_100AD0DF0);
      uint64_t v276 = v710;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734)(v710, 1, 1, v744);
      uint64_t v158 = v728;
      uint64_t v159 = v724;
      uint64_t v152 = v669;
      goto LABEL_80;
    }
    uint64_t v655 = v275;
    v656 = (unsigned int (*)(char *, uint64_t, NSObject *))v274;
    v712 = v272;
    uint64_t v278 = (uint64_t)&v271[v272[12]];
    os_log_type_t v279 = (void *)v743;
    uint64_t v281 = v743 + 32;
    int v280 = *(void (**)(uint64_t, char *, uint64_t))(v743 + 32);
    uint64_t v276 = v710;
    uint64_t v282 = v744;
    v280(v710, v271, v744);
    v718 = (NSURL *)(v279 + 7);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v276, 0, 1, v282);
    sub_10092D018(v278, type metadata accessor for VFSItem);
    v283 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v279[6];
    int v284 = v283(v276, 1, v282);
    uint64_t v158 = v728;
    uint64_t v159 = v724;
    uint64_t v152 = v669;
    if (v284 == 1)
    {
LABEL_80:
      sub_10002B770(v276, &qword_100ACA8C0);
      uint64_t v157 = v727;
      unint64_t v156 = (unint64_t)v739;
LABEL_81:
      uint64_t v277 = v713;
      uint64_t v258 = (uint64_t)v721;
      uint64_t v246 = v719;
      if ((v752[0] & 3) != 0) {
        v752[0] &= 0xFFFFFFFFFFFFFFFCLL;
      }
      goto LABEL_83;
    }
    v651 = v279 + 6;
    v652 = v283;
    uint64_t v364 = v744;
    uint64_t v653 = v281;
    v654 = v280;
    v280((uint64_t)v662, (char *)v276, v744);
    v365 = v661;
    sub_10096AD80();
    v366 = v279 + 2;
    v367 = v660;
    uint64_t v368 = v364;
    v369 = (void (*)(char *, char *, uint64_t))v279[2];
    v369(v660, v365, v368);
    uint64_t v371 = *(char **)(v735 + 16);
    uint64_t v370 = *(void *)(v735 + 24);
    uint64_t v372 = (uint64_t)v739;
    swift_retain();
    swift_bridgeObjectRetain();
    if (objc_sync_enter((id)v372)) {
      goto LABEL_297;
    }
    v709 = v371;
    uint64_t v710 = v370;
    uint64_t v373 = *(void *)(v372 + 160);
    swift_retain();
    int v374 = objc_sync_exit((id)v372);
    uint64_t v375 = (uint64_t)v697;
    uint64_t v376 = (uint64_t)v698;
    if (v374) {
      goto LABEL_298;
    }
    swift_release();
    uint64_t v377 = v744;
    v369((char *)v375, (char *)(v373 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL), v744);
    swift_release();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v375, 0, 1, v377);
    v369((char *)v376, v367, v377);
    uint64_t v378 = v742;
    uint64_t v379 = sub_10096AC70();
    v381 = v366;
    v382 = (char *)(v743 + 8);
    if (v378)
    {
      v742 = v378;
      swift_bridgeObjectRelease();
      sub_10002B770(v375, &qword_100ACA8C0);
      uint64_t v383 = *(char **)v382;
      (*(void (**)(char *, uint64_t))v382)(v367, v377);
      ((void (*)(uint64_t, uint64_t))v383)(v376, v377);
      ((void (*)(char *, uint64_t))v383)(v365, v377);
      ((void (*)(char *, uint64_t))v383)(v662, v377);
      swift_release();
      sub_10092D018(v738, type metadata accessor for VFSItem);
      uint64_t v174 = 0;
      uint64_t v161 = v743;
      unint64_t v156 = (unint64_t)v739;
      goto LABEL_25;
    }
    uint64_t v431 = v379;
    v432 = v369;
    uint64_t v433 = v380;
    v649 = v432;
    v650 = v381;
    sub_10002B770(v375, &qword_100ACA8C0);
    v697 = *(char **)v382;
    ((void (*)(char *, uint64_t))v697)(v367, v377);
    uint64_t v434 = v690;
    v435 = (uint64_t *)(v376 + v690[6]);
    uint64_t *v435 = v431;
    v435[1] = v433;
    v436 = (void *)(v376 + v434[5]);
    uint64_t v437 = v710;
    void *v436 = v709;
    v436[1] = v437;
    *(unsigned char *)(v376 + v434[7]) = 1;
    uint64_t v438 = v693;
    sub_10001158C(v376, v693, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
    uint64_t v439 = v434[6];
    uint64_t v440 = (uint64_t *)(v438 + v434[5]);
    uint64_t v441 = *v440;
    uint64_t v442 = v440[1];
    uint64_t v444 = *(void *)(v438 + v439);
    unint64_t v443 = *(void *)(v438 + v439 + 8);
    sub_10096AAD0();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_10001EBB0(v444, v443);
    sub_10096AAC0();
    sub_10096AAA0();
    *(void *)&long long v760 = v441;
    *((void *)&v760 + 1) = v442;
    uint64_t v761 = v444;
    unint64_t v762 = v443;
    sub_100258620();
    uint64_t v445 = sub_10096AAB0();
    v742 = 0;
    unint64_t v512 = v446;
    uint64_t v710 = v445;
    v709 = v382;
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001E9C0(v444, v443);
    uint64_t v513 = *(void *)v738;
    uint64_t v514 = v738 + v731[9];
    uint64_t v515 = *(void *)v514;
    unint64_t v516 = *(unsigned int *)(v514 + 8);
    uint64_t v517 = *(void *)(v514 + 16);
    uint64_t v518 = *(unsigned __int8 *)(v514 + 24);
    uint64_t v519 = *(void *)(v738 + 16);
    uint64_t v520 = *(unsigned __int8 *)(v738 + 24);
    uint64_t v521 = *(void *)(v738 + 32);
    uint64_t v522 = *(void *)(v738 + 40);
    uint64_t v784 = v515;
    unint64_t v785 = v516;
    uint64_t v786 = v517;
    uint64_t v787 = v518;
    uint64_t v788 = 0;
    uint64_t v789 = v519;
    uint64_t v790 = v520;
    uint64_t v791 = v521;
    char v523 = *(unsigned char *)(v738 + 8);
    uint64_t v792 = v522;
    uint64_t v793 = 0;
    uint64_t v794 = 0;
    uint64_t v795 = 0;
    swift_bridgeObjectRetain();
    uint64_t v524 = v513;
    uint64_t v351 = v739;
    sub_1008E3FC4(v524, v523, (uint64_t)&v784, (uint64_t)&v754);
    long long v525 = v754;
    uint64_t v646 = v756[0];
    uint64_t v647 = v755;
    uint64_t v645 = v756[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v526 = (void *)swift_retain();
    if (objc_sync_enter(v526)) {
      goto LABEL_300;
    }
    uint64_t v648 = *((void *)&v525 + 1);
    v660 = (char *)v525;
    uint64_t v527 = v351[20];
    swift_retain();
    int v528 = objc_sync_exit(v351);
    uint64_t v176 = v689;
    if (v528) {
LABEL_301:
    }
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v351);
    v690 = (int *)v756;
    swift_release();
    unsigned int v529 = *(_DWORD *)(v527 + 16);
    uint64_t v530 = swift_release();
    v698 = (char *)&v643;
    __chkstk_darwin(v530);
    v641 = (unint64_t *)(v529 | 0x10000000000000);
    *(void *)&long long v763 = 0;
    unint64_t v762 = 0;
    long long v531 = v754;
    long long v760 = v754;
    unsigned int v532 = v755;
    unsigned int v533 = HIDWORD(v755);
    uint64_t v761 = v755;
    sub_10001AE98((uint64_t)v690, (uint64_t)v770, &qword_100ADF5E0);
    uint64_t v534 = sub_10001AE98((uint64_t)v770, (uint64_t)v797, &qword_100ADF5E0);
    if (v797[1])
    {
      __chkstk_darwin(v534);
      unint64_t v639 = (unint64_t)&v760;
      v640 = (NSURL *)sub_10043F5DC;
      v641 = &v639;
      v535 = v742;
      uint64_t v538 = (uint64_t)sub_100440314((uint64_t)sub_10043F5F4, (uint64_t)(&v643 - 6), v536, v537);
      uint64_t v539 = (uint64_t)v685;
      if (v535)
      {
        swift_errorRelease();
        uint64_t v174 = 0;
        unint64_t v156 = v512;
        goto LABEL_256;
      }
      int v185 = v538;
      v742 = 0;
      unint64_t v156 = v512;
    }
    else
    {
      unint64_t v762 = 0;
      long long v746 = v531;
      long long v747 = __PAIR64__(v533, v532);
      *(void *)&long long v748 = 0;
      uint64_t v538 = fpfs_openfdbyhandle();
      unint64_t v156 = v512;
      if ((v538 & 0x80000000) != 0)
      {
        int v562 = sub_10096B4D0();
        sub_1005970E0(v562, 0, 0, 0xAu);
        swift_willThrow();
        swift_errorRelease();
        uint64_t v174 = 0;
        uint64_t v539 = (uint64_t)v685;
        goto LABEL_256;
      }
      int v185 = v538;
      uint64_t v539 = (uint64_t)v685;
    }
    __chkstk_darwin(v538);
    LODWORD(v639) = v185;
    v640 = v561;
    v641 = (unint64_t *)0x800000010099B580;
    LODWORD(v642) = 0;
    switch(v156 >> 62)
    {
      case 1uLL:
        uint64_t v566 = (int)v710;
        uint64_t v567 = v710 >> 32;
        if (v710 >> 32 >= (int)v710)
        {
          swift_retain();
          uint64_t v568 = v566;
          uint64_t v174 = v742;
          sub_1006B363C(v568, v567, (uint64_t (*)(uint64_t, uint64_t))sub_10093E070);
          sub_10001E9C0(v710, v156);
          if (v174)
          {
            swift_errorRelease();
            uint64_t v174 = 0;
          }
          uint64_t v539 = (uint64_t)v685;
          goto LABEL_254;
        }
        __break(1u);
        break;
      case 2uLL:
        v698 = (char *)&v643;
        uint64_t v563 = *(void *)(v710 + 16);
        uint64_t v564 = *(void *)(v710 + 24);
        swift_retain();
        swift_retain();
        uint64_t v565 = v563;
        uint64_t v174 = v742;
        sub_1006B363C(v565, v564, (uint64_t (*)(uint64_t, uint64_t))sub_10093E070);
        if (!v174) {
          goto LABEL_251;
        }
        swift_release();
        swift_release();
        swift_errorRelease();
        uint64_t v174 = 0;
        goto LABEL_252;
      case 3uLL:
        *(void *)((char *)&v760 + 6) = 0;
        *(void *)&long long v760 = 0;
        goto LABEL_248;
      default:
        *(void *)&long long v760 = v710;
        WORD4(v760) = v156;
        BYTE10(v760) = BYTE2(v156);
        BYTE11(v760) = BYTE3(v156);
        BYTE12(v760) = BYTE4(v156);
        BYTE13(v760) = BYTE5(v156);
LABEL_248:
        uint64_t v174 = v742;
        sub_1005964D4((uint64_t)&v760);
        if (v174)
        {
          swift_errorRelease();
          uint64_t v174 = 0;
        }
        goto LABEL_254;
    }
    goto LABEL_292;
  }
LABEL_89:
  if (!v260)
  {
    uint64_t v300 = v157;
    swift_beginAccess();
    uint64_t v301 = *(void (**)(uint64_t *))(v740 + 16);
    uint64_t v302 = *(int *)(sub_10002B7CC(&qword_100AD0E18) + 48);
    uint64_t v303 = v738;
    unint64_t v304 = v667;
    sub_1009381C4(v738, (uint64_t)v667, type metadata accessor for VFSItem);
    uint64_t v305 = *(void *)(v723 + 16);
    uint64_t v306 = sub_10002B7CC(&qword_100AD0E08);
    *(uint64_t *)((char *)v304 + *(int *)(v306 + 36)) = v305;
    *((unsigned char *)v304 + *(int *)(v306 + 40)) = 0;
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56))(v304, 0, 1, v306);
    *(uint64_t *)((char *)v304 + v302) = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v301(v304);
    swift_release();
    sub_10002B770((uint64_t)v304, &qword_100AD0E10);
    (*(void (**)(char *, uint64_t))(v743 + 8))(v300, v744);
    swift_release();
    return sub_10092D018(v303, type metadata accessor for VFSItem);
  }
  uint64_t v720 = a19;
  if ((v260 & 0x10) != 0)
  {
    v718 = a20;
    v719 = v246;
    swift_beginAccess();
    uint64_t v307 = *(void *)(v663 + 16);
    uint64_t v308 = *(unsigned int *)(v663 + 24);
    uint64_t v309 = *(void *)(v663 + 32);
    unint64_t v310 = *(unsigned __int8 *)(v663 + 40);
    uint64_t v311 = *(unsigned __int8 *)(v663 + 64);
    v721 = (void *)v258;
    uint64_t v312 = *(void *)(v663 + 72);
    uint64_t v313 = *(void *)(v663 + 80);
    uint64_t v314 = *(void *)(v663 + 104);
    *(void *)&long long v760 = v307;
    *((void *)&v760 + 1) = v308;
    uint64_t v761 = v309;
    unint64_t v762 = v310;
    long long v763 = *(_OWORD *)(v663 + 48);
    uint64_t v764 = v311;
    uint64_t v765 = v312;
    long long v767 = *(_OWORD *)(v663 + 88);
    uint64_t v766 = v313;
    uint64_t v768 = v314;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1008E3FC4(v733, v659, (uint64_t)&v760, (uint64_t)&v774);
    uint64_t v315 = (uint64_t)v721;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v315 + v158[27]) != (a18 & 1))
    {
      sub_10021E550((uint64_t)&v774);
      uint64_t v316 = v727;
      uint64_t v317 = v667;
      v318 = v719;
      uint64_t v319 = v720;
      if (!v720)
      {
        swift_beginAccess();
        uint64_t v410 = *(void (**)(uint64_t *))(v740 + 16);
        LODWORD(v771) = 22;
        swift_retain();
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        uint64_t v411 = v703;
        uint64_t v412 = v711;
        sub_10096ABD0();
        uint64_t v413 = sub_10096A790();
        (*(void (**)(char *, uint64_t))(v704 + 8))(v411, v412);
        *uint64_t v317 = v413;
        swift_storeEnumTagMultiPayload();
        v410(v317);
        swift_release();
        sub_10002B770((uint64_t)v317, &qword_100AD0E10);
        (*(void (**)(char *, uint64_t))(v743 + 8))(v316, v744);
        goto LABEL_229;
      }
      uint64_t v320 = v702;
      sub_1009381C4(v315, v702, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      swift_retain();
      sub_100152568((int *)v260, (uint64_t)v722);
      if ((fpfs_supports_parent_mtime_iopolicy() & 1) == 0)
      {
        uint64_t v321 = v728[8];
        v322 = &v722[v321];
        uint64_t v323 = v320 + v321;
        uint64_t v324 = sub_10096B0E0();
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)(v324 - 8) + 24))(v323, v322, v324);
      }
      unint64_t v325 = *v318;
      int v326 = v752[0];
      uint64_t v327 = v701;
      sub_10002B70C(v735, v701, (uint64_t *)&unk_100ADBFF0);
      unint64_t v156 = (unint64_t)v739;
      if ((v325 & 0x10000) != 0)
      {
        uint64_t v329 = sub_10002B770(v327, (uint64_t *)&unk_100ADBFF0);
      }
      else
      {
        int v328 = *(unsigned __int8 *)(v327 + *(int *)(v724 + 40) + v728[21]);
        uint64_t v329 = sub_10002B770(v327, (uint64_t *)&unk_100ADBFF0);
        if (v328)
        {
          if (v326 & 8) != 0 && (uint64_t v330 = v728[20], *((unsigned char *)v721 + v330) == 1) && (v722[v330])
          {
            char v331 = 0;
          }
          else if ((*(void *)&v326 & 0x10010) != 0)
          {
            char v331 = v722[v657];
          }
          else
          {
            char v331 = *((unsigned char *)v721 + v728[21]);
          }
          goto LABEL_143;
        }
      }
      char v331 = 0;
LABEL_143:
      *(unsigned char *)(v320 + v728[21]) = v331;
      __chkstk_darwin(v329);
      *(&v643 - 12) = v156;
      *(&v643 - 11) = v319;
      *(&v643 - 10) = (uint64_t)v316;
      *(&v643 - 9) = v320;
      *(&v643 - 8) = v417;
      *(&v643 - 7) = v418;
      uint64_t v419 = v738;
      *(&v643 - 6) = v735;
      *(&v643 - 5) = v419;
      unint64_t v639 = (unint64_t)v752;
      v640 = v420;
      v641 = v318;
      v421 = v742;
      sub_10094CAA0(v319, 0x200000, v422, (void (*)(uint64_t, void, void, void))sub_10093B030, (uint64_t)(&v643 - 14), (uint64_t)&v643);
      v742 = v421;
      if (!v421)
      {
        (*(void (**)(char *, uint64_t))(v743 + 8))(v316, v744);
        swift_release();
        sub_10092D018(v320, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        swift_release();
        return sub_10092D018(v419, type metadata accessor for VFSItem);
      }
      swift_release();
      sub_10092D018(v320, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      swift_release();
      uint64_t v299 = v419;
      goto LABEL_145;
    }
    v338 = v731;
    id v339 = v731[7];
    int v340 = *((unsigned __int8 *)&v339->isa + a21);
    uint64_t v341 = v705;
    sub_1009381C4(a21, v705, type metadata accessor for VFSItem);
    if (v340 == 1)
    {
      sub_10092D018(v341, type metadata accessor for VFSItem);
      int v342 = 0x100000;
    }
    else
    {
      uint64_t v384 = v341 + v338[7];
      uint64_t v385 = v696;
      sub_1009381C4(v384, v696, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      sub_10092D018(v341, type metadata accessor for VFSItem);
      int v386 = *(unsigned __int8 *)(v385 + v158[27]);
      sub_10092D018(v385, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      if (v386) {
        int v342 = 0x100000;
      }
      else {
        int v342 = 2097153;
      }
    }
    uint64_t v372 = (uint64_t)v739;
    unint64_t v387 = (void *)swift_retain();
    if (objc_sync_enter(v387)) {
LABEL_297:
    }
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, v372);
    v712 = v339;
    uint64_t v713 = a21;
    uint64_t v388 = *(void *)(v372 + 160);
    swift_retain();
    if (!objc_sync_exit((id)v372))
    {
      swift_release();
      unsigned int v389 = *(_DWORD *)(v388 + 16);
      uint64_t v390 = swift_release();
      __chkstk_darwin(v390);
      v641 = (unint64_t *)__PAIR64__(v342, v389);
      *(void *)&long long v748 = 0;
      long long v391 = v774;
      long long v746 = v774;
      unsigned int v392 = v775;
      unsigned int v393 = HIDWORD(v775);
      long long v747 = v775;
      sub_10001AE98((uint64_t)&v776, (uint64_t)v769, &qword_100ADF5E0);
      uint64_t v394 = sub_10001AE98((uint64_t)v769, (uint64_t)&v798, &qword_100ADF5E0);
      if (!v799)
      {
        *((void *)&v747 + 1) = 0;
        long long v771 = v391;
        long long v772 = __PAIR64__(v393, v392);
        uint64_t v773 = 0;
        uint64_t v414 = fpfs_openfdbyhandle();
        if ((v414 & 0x80000000) == 0)
        {
          uint64_t v415 = v414;
          v416 = v707;
          uint64_t v401 = v733;
          goto LABEL_169;
        }
        int v462 = sub_10096B4D0();
        v742 = (void (*)(void))sub_1005970E0(v462, 0, 0, 0xAu);
        swift_willThrow();
        swift_release();
        goto LABEL_166;
      }
      uint64_t v395 = __chkstk_darwin(v394);
      unint64_t v639 = (unint64_t)&v746;
      v640 = (NSURL *)sub_10043F5DC;
      v641 = &v639;
      if ((v397 & 0x1000000000000000) == 0 && v397 & 0x2000000000000000 | v396 & 0x1000000000000000)
      {
        __chkstk_darwin(v395);
        v641 = (unint64_t *)sub_10043F5F4;
        unint64_t v642 = v400;
        uint64_t v175 = v737;
        uint64_t v401 = v733;
        if ((v399 & 0x2000000000000000) != 0)
        {
          v753[0] = v398;
          v753[1] = v399 & 0xFFFFFFFFFFFFFFLL;
          *((void *)&v747 + 1) = v753;
          long long v771 = v746;
          *(void *)&long long v772 = v747;
          *((void *)&v772 + 1) = v753;
          uint64_t v773 = v748;
          unsigned int v405 = fpfs_openfdbyhandle();
          if ((v405 & 0x80000000) != 0)
          {
            int v492 = sub_10096B4D0();
            v742 = (void (*)(void))sub_1005970E0(v492, 0, 0, 0xAu);
            swift_willThrow();
            sub_10021E550((uint64_t)&v774);
            swift_release();
            goto LABEL_191;
          }
        }
        else
        {
          if ((v398 & 0x1000000000000000) != 0)
          {
            uint64_t v402 = (v399 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v403 = v398 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v402 = sub_10096CC90();
          }
          unint64_t v404 = v742;
          unsigned int v405 = sub_100441D24(v402, v403, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
          v742 = v404;
          if (v404)
          {
            sub_10021E550((uint64_t)&v774);
            swift_release();
LABEL_191:
            uint64_t v174 = 0;
            goto LABEL_192;
          }
        }
        unsigned int v745 = v405;
        sub_10021E550((uint64_t)&v774);
        goto LABEL_168;
      }
LABEL_287:
      v638 = v742;
      sub_10096CBC0();
      v742 = v638;
      if (!v638)
      {
        sub_10021E550((uint64_t)&v774);
        uint64_t v401 = v733;
LABEL_168:
        uint64_t v415 = v745;
        v416 = v707;
LABEL_169:
        uint64_t v463 = (uint64_t)v699;
        uint64_t v464 = v658;
        uint64_t v465 = (int *)v752[0];
        uint64_t v466 = v721;
        sub_1009381C4((uint64_t)v721, (uint64_t)v416, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        sub_100152568(v465, (uint64_t)v722);
        char v467 = (char)v736;
        if (*v466 == 1)
        {
          char v468 = v722[8];
          *((_DWORD *)v416 + 1) = *((_DWORD *)v722 + 1);
          v416[8] = v468;
        }
        char v469 = fpfs_supports_parent_mtime_iopolicy();
        uint64_t v470 = v720;
        if ((v469 & 1) == 0)
        {
          uint64_t v471 = v728[8];
          uint64_t v472 = &v722[v471];
          uint64_t v473 = &v416[v471];
          uint64_t v474 = sub_10096B0E0();
          (*(void (**)(unsigned __int8 *, const char *, uint64_t))(*(void *)(v474 - 8) + 24))(v473, v472, v474);
        }
        uint64_t v475 = *v719;
        int v476 = v752[0];
        sub_10002B70C(v735, v463, (uint64_t *)&unk_100ADBFF0);
        if ((v475 & 0x10000) != 0)
        {
          uint64_t v478 = sub_10002B770(v463, (uint64_t *)&unk_100ADBFF0);
        }
        else
        {
          int v477 = *(unsigned __int8 *)(v463 + *(int *)(v724 + 40) + v728[21]);
          uint64_t v478 = sub_10002B770(v463, (uint64_t *)&unk_100ADBFF0);
          if (v477)
          {
            if ((v476 & 8) == 0 || (uint64_t v479 = v728[20], *((unsigned char *)v721 + v479) != 1) || (v722[v479] & 1) == 0)
            {
              if ((*(void *)&v476 & 0x10010) != 0) {
                char v480 = v722[v657];
              }
              else {
                char v480 = *((unsigned char *)v721 + v728[21]);
              }
LABEL_182:
              unint64_t v481 = v728;
              v416[v728[21]] = v480;
              if (v722[v481[20]])
              {
                uint64_t v482 = 0;
                int v483 = *v416;
                if (v483 == 1)
                {
                  int v484 = 0;
                }
                else
                {
                  if (v483 != 2) {
                    uint64_t v482 = 0x1E9F38F07;
                  }
                  int v484 = 5;
                }
                if (v467 < 0) {
                  int v503 = 2;
                }
                else {
                  int v503 = v484;
                }
                swift_beginAccess();
                int v504 = *(_DWORD *)(v663 + 24);
                uint64_t v505 = (uint64_t)v692;
                long long v491 = v727;
                uint64_t v506 = v744;
                (*(void (**)(char *, char *, uint64_t))(v743 + 16))(v692, v727, v744);
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v505, 0, 1, v506);
                int v507 = v503;
                v508 = v742;
                sub_10090A198(v415, v707, v504, v482, v507, v505, (uint64_t)v718);
                v742 = v508;
                if (v508)
                {
                  uint64_t v174 = 0;
                  sub_10002B770(v505, &qword_100ACA8C0);
                  int v509 = *((unsigned __int8 *)&v712->isa + v713);
                  if (v509 == 2)
                  {
                    uint64_t v510 = v688;
                    sub_1009381C4(v713, v688, type metadata accessor for VFSItem);
                    uint64_t v161 = v743;
                    uint64_t v175 = v737;
LABEL_209:
                    sub_10092D018(v510, type metadata accessor for VFSItem);
                    goto LABEL_210;
                  }
                  uint64_t v510 = v688;
                  sub_1009381C4(v713, v688, type metadata accessor for VFSItem);
                  uint64_t v161 = v743;
                  uint64_t v175 = v737;
                  if (v509 == 1) {
                    goto LABEL_209;
                  }
                  char v540 = *(unsigned char *)(v510 + v731[7] + v728[20]);
                  sub_10092D018(v510, type metadata accessor for VFSItem);
                  if ((v540 & 1) == 0) {
                    goto LABEL_210;
                  }
                  swift_errorRelease();
LABEL_227:
                  uint64_t v464 = v658;
                  goto LABEL_228;
                }
                sub_10002B770(v505, &qword_100ACA8C0);
              }
              else
              {
                if (v470)
                {
                  uint64_t v485 = v739[17];
                  __chkstk_darwin(v478);
                  *((_DWORD *)&v643 - 20) = v415;
                  uint64_t v486 = v735;
                  *(&v643 - 9) = v470;
                  *(&v643 - 8) = v486;
                  *(&v643 - 7) = v738;
                  *(&v643 - 6) = v401;
                  *((unsigned char *)&v643 - 40) = v659;
                  unint64_t v639 = (unint64_t)v707;
                  v640 = v718;
                  v641 = v487;
                  uint64_t v488 = swift_retain();
                  char v489 = v742;
                  sub_10094CAA0(v488, 0x200000, v485, (void (*)(uint64_t, void, void, void))sub_10093B0EC, (uint64_t)(&v643 - 12), v490);
                  v742 = v489;
                  long long v491 = v727;
                  if (!v489)
                  {
                    swift_release();
                    uint64_t v161 = v743;
                    goto LABEL_228;
                  }
                  swift_release();
                  uint64_t v174 = 0;
                  uint64_t v161 = v743;
                  uint64_t v175 = v737;
LABEL_211:
                  swift_errorRetain();
                  LODWORD(v746) = sub_10096A780();
                  sub_100045CB4();
                  char v511 = sub_10096AA60();
                  swift_errorRelease();
                  if ((v511 & 1) == 0)
                  {
                    sub_10092D018((uint64_t)v707, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
                    sub_100595FB8(v415);
                    goto LABEL_214;
                  }
                  swift_errorRelease();
                  long long v491 = v727;
LABEL_228:
                  long long v750 = 0u;
                  long long v751 = 0u;
                  long long v748 = 0u;
                  long long v749 = 0u;
                  long long v746 = 0u;
                  long long v747 = 0u;
                  swift_beginAccess();
                  uint64_t v541 = *v464;
                  uint64_t v542 = swift_allocObject();
                  *(void *)(v542 + 16) = v740;
                  *(void *)(v542 + 24) = v401;
                  int v543 = v659;
                  *(unsigned char *)(v542 + 32) = v659;
                  *(void *)(v542 + 40) = v723;
                  swift_retain();
                  swift_retain();
                  sub_10043E018(v401, v543, (uint64_t)&v746, 0, v541, (uint64_t)sub_10093B0DC, v542);
                  swift_release();
                  (*(void (**)(char *, uint64_t))(v161 + 8))(v491, v744);
                  sub_10092D018((uint64_t)v707, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
                  sub_100595FB8(v415);
                  goto LABEL_229;
                }
                long long v494 = v739;
                long long v495 = (void *)swift_retain();
                int v496 = objc_sync_enter(v495);
                long long v491 = v727;
                if (v496) {
                  sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v494);
                }
                uint64_t v497 = v494[20];
                swift_retain();
                if (objc_sync_exit(v494)) {
                  sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v494);
                }
                swift_release();
                unint64_t v498 = *(void **)(v497 + 56);
                int v499 = *(_DWORD *)(v497 + 64);
                char v500 = *(unsigned char *)(v497 + 68);
                _Block_copy(v498);
                uint64_t v501 = swift_release();
                __chkstk_darwin(v501);
                *((_DWORD *)&v643 - 16) = v415;
                *(&v643 - 7) = 0x1E9F18F07;
                *((_DWORD *)&v643 - 12) = -1;
                *(&v643 - 5) = -1;
                unint64_t v639 = -1;
                LOBYTE(v640) = 0;
                v641 = (unint64_t *)v498;
                LODWORD(v642) = v499;
                BYTE4(v642) = v500;
                uint64_t v502 = v742;
                sub_100945050((uint64_t)v718, (unint64_t)sub_10093B070, (unint64_t)(&v643 - 10), (uint64_t)&v746);
                if (v502)
                {
                  v742 = v502;
                  _Block_release(v498);
                  uint64_t v174 = 0;
                  uint64_t v161 = v743;
                  uint64_t v175 = v737;
LABEL_210:
                  uint64_t v464 = v658;
                  goto LABEL_211;
                }
                _Block_release(v498);
              }
              uint64_t v161 = v743;
              goto LABEL_227;
            }
          }
        }
        char v480 = 0;
        goto LABEL_182;
      }
      sub_10021E550((uint64_t)&v774);
      swift_release();
LABEL_166:
      uint64_t v174 = 0;
      uint64_t v175 = v737;
LABEL_192:
      sub_10092D018(v738, type metadata accessor for VFSItem);
      uint64_t v161 = v743;
      unint64_t v156 = (unint64_t)v739;
      goto LABEL_26;
    }
LABEL_298:
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, v372);
  }
  uint64_t v288 = sub_100930968(v260, v735, v258);
  uint64_t v289 = v711;
  if (v288)
  {
    uint64_t v290 = v720;
    if (v720)
    {
      uint64_t v291 = *(void *)(v156 + 136);
      __chkstk_darwin(v288);
      uint64_t v292 = v735;
      *(&v643 - 12) = v290;
      *(&v643 - 11) = v292;
      uint64_t v293 = v738;
      uint64_t v294 = v733;
      *(&v643 - 10) = v738;
      *(&v643 - 9) = v294;
      *((unsigned char *)&v643 - 64) = v659;
      *(&v643 - 7) = (uint64_t)v752;
      *(&v643 - 6) = v156;
      unint64_t v295 = (unint64_t)v727;
      *(&v643 - 5) = (uint64_t)v246;
      unint64_t v639 = v295;
      v640 = (NSURL *)v668;
      v641 = (unint64_t *)a21;
      uint64_t v296 = swift_retain();
      uint64_t v297 = v700;
      uint64_t v298 = v742;
      sub_1008DDDD0(v296, 0x200000, (void (*)(void, void, void, void))sub_10093AFE8, (uint64_t)(&v643 - 14), v700);
      v742 = v298;
      if (v298)
      {
        swift_release();
        swift_release();
        uint64_t v299 = v293;
LABEL_145:
        sub_10092D018(v299, type metadata accessor for VFSItem);
        uint64_t v174 = 0;
        uint64_t v161 = v743;
        goto LABEL_25;
      }
      *(unsigned char *)(v291 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v291 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        swift_unknownObjectRelease();
      }
      swift_beginAccess();
      v425 = *(void (**)(uint64_t *))(v740 + 16);
      uint64_t v426 = *(int *)(sub_10002B7CC(&qword_100AD0E18) + 48);
      v427 = v667;
      sub_1009381C4(v297, (uint64_t)v667, type metadata accessor for VFSItem);
      uint64_t v428 = *(void *)(v723 + 16);
      uint64_t v429 = sub_10002B7CC(&qword_100AD0E08);
      *(uint64_t *)((char *)v427 + *(int *)(v429 + 36)) = v428;
      *((unsigned char *)v427 + *(int *)(v429 + 40)) = 0;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v429 - 8) + 56))(v427, 0, 1, v429);
      *(uint64_t *)((char *)v427 + v426) = 0;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v425(v427);
      swift_release();
      swift_release();
      sub_10002B770((uint64_t)v427, &qword_100AD0E10);
      sub_10092D018(v297, type metadata accessor for VFSItem);
      (*(void (**)(char *, uint64_t))(v743 + 8))(v727, v744);
      swift_release();
      uint64_t v430 = v738;
      return sub_10092D018(v430, type metadata accessor for VFSItem);
    }
    swift_beginAccess();
    unint64_t v406 = *(void (**)(uint64_t *))(v740 + 16);
    LODWORD(v746) = 22;
    swift_retain();
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    unint64_t v407 = v703;
    sub_10096ABD0();
    uint64_t v408 = sub_10096A790();
    (*(void (**)(char *, uint64_t))(v704 + 8))(v407, v289);
    unint64_t v409 = v667;
    uint64_t *v667 = v408;
    swift_storeEnumTagMultiPayload();
    v406(v409);
    swift_release();
    sub_10002B770((uint64_t)v409, &qword_100AD0E10);
    (*(void (**)(char *, uint64_t))(v743 + 8))(v727, v744);
LABEL_229:
    swift_release();
    return sub_10092D018(v738, type metadata accessor for VFSItem);
  }
  v718 = a20;
  uint64_t v332 = v258;
  id v333 = (char *)v258;
  v334 = v708;
  sub_1009381C4(v332, (uint64_t)v708, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_100152568((int *)v260, (uint64_t)v722);
  uint64_t v335 = v158[20];
  if ((v333[v335] & 1) != 0 && v334[v335] == 1) {
    v334[v158[22]] = v333[v158[22]];
  }
  BOOL v336 = _s9libfssync12ItemMetadataV23__derived_struct_equalsySbAC_ACtFZ_0(v334, v333);
  uint64_t v337 = (uint64_t)v706;
  if ((v260 & 0x10000) == 0 && v336)
  {
    sub_10001AE98((uint64_t)v718, (uint64_t)&v760, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)&v760) == 1)
    {
      unint64_t v156 = (unint64_t)v739;
LABEL_232:
      unint64_t v544 = *(void *)v735;
      char v545 = *(unsigned char *)(v735 + 8);
      uint64_t v547 = *(void *)(v735 + 16);
      uint64_t v546 = *(void *)(v735 + 24);
      uint64_t v548 = (uint64_t)v695;
      uint64_t v549 = (uint64_t)v708;
      sub_1009381C4((uint64_t)v708, (uint64_t)&v695[*(int *)(v724 + 40)], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      *(void *)uint64_t v548 = v544;
      *(unsigned char *)(v548 + 8) = v545;
      *(void *)(v548 + 16) = v547;
      *(void *)(v548 + 24) = v546;
      long long v771 = 0u;
      long long v772 = 0u;
      uint64_t v773 = 1;
      uint64_t v161 = v743;
      uint64_t v550 = (uint64_t)v694;
      uint64_t v551 = v744;
      (*(void (**)(char *, char *, uint64_t))(v743 + 16))(v694, v727, v744);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v550, 0, 1, v551);
      uint64_t v552 = v752[0];
      swift_bridgeObjectRetain();
      uint64_t v553 = v738;
      uint64_t v554 = v552;
      v555 = v742;
      sub_1008F3C04(v738, v548, (uint64_t)&v771, v550, v554, v337);
      v742 = v555;
      if (!v555)
      {
        sub_10002B770(v550, &qword_100ACA8C0);
        sub_10002B770(v548, (uint64_t *)&unk_100ADBFF0);
        swift_beginAccess();
        v742 = *(void (**)(void))(v740 + 16);
        uint64_t v556 = *(int *)(sub_10002B7CC(&qword_100AD0E18) + 48);
        v557 = v667;
        sub_1009381C4(v337, (uint64_t)v667, type metadata accessor for VFSItem);
        uint64_t v558 = v161;
        uint64_t v559 = *(void *)(v723 + 16);
        uint64_t v560 = sub_10002B7CC(&qword_100AD0E08);
        *(uint64_t *)((char *)v557 + *(int *)(v560 + 36)) = v559;
        *((unsigned char *)v557 + *(int *)(v560 + 40)) = 0;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v560 - 8) + 56))(v557, 0, 1, v560);
        *(uint64_t *)((char *)v557 + v556) = 0;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        v742(v557);
        swift_release();
        sub_10002B770((uint64_t)v557, &qword_100AD0E10);
        sub_10092D018(v337, type metadata accessor for VFSItem);
        sub_10092D018(v549, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        (*(void (**)(char *, uint64_t))(v558 + 8))(v727, v744);
        swift_release();
        uint64_t v430 = v553;
        return sub_10092D018(v430, type metadata accessor for VFSItem);
      }
      sub_10002B770(v550, &qword_100ACA8C0);
      sub_10002B770(v548, (uint64_t *)&unk_100ADBFF0);
      sub_10092D018(v549, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      swift_release();
      uint64_t v173 = v553;
      goto LABEL_24;
    }
  }
  v721 = v333;
  uint64_t v343 = (NSURL *)sub_10093022C(v260);
  swift_beginAccess();
  uint64_t v344 = *(unsigned int *)(v663 + 24);
  unint64_t v345 = *(void *)(v663 + 32);
  uint64_t v346 = *(unsigned __int8 *)(v663 + 40);
  uint64_t v347 = *(unsigned __int8 *)(v663 + 64);
  uint64_t v348 = *(void *)(v663 + 72);
  uint64_t v349 = *(void *)(v663 + 80);
  uint64_t v350 = *(void *)(v663 + 104);
  *(void *)&long long v774 = *(void *)(v663 + 16);
  *((void *)&v774 + 1) = v344;
  unint64_t v775 = v345;
  uint64_t v776 = v346;
  long long v777 = *(_OWORD *)(v663 + 48);
  uint64_t v778 = v347;
  uint64_t v779 = v348;
  uint64_t v780 = v349;
  long long v781 = *(_OWORD *)(v663 + 88);
  uint64_t v782 = v350;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v351 = v739;
  sub_1008E3FC4(v733, v659, (uint64_t)&v774, (uint64_t)&v757);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v352 = (void *)swift_retain();
  if (objc_sync_enter(v352)) {
LABEL_300:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v351);
  v736 = v343;
  uint64_t v353 = v351[20];
  swift_retain();
  if (objc_sync_exit(v351)) {
    goto LABEL_301;
  }
  swift_release();
  unsigned int v354 = *(_DWORD *)(v353 + 16);
  uint64_t v355 = swift_release();
  __chkstk_darwin(v355);
  v641 = (unint64_t *)(v354 | 0x20800000000000);
  *(void *)&long long v748 = 0;
  long long v356 = v757;
  long long v746 = v757;
  unsigned int v357 = v758;
  unsigned int v358 = HIDWORD(v758);
  long long v747 = v758;
  sub_10001AE98((uint64_t)&v759, (uint64_t)v769, &qword_100ADF5E0);
  uint64_t v359 = sub_10001AE98((uint64_t)v769, (uint64_t)&v798, &qword_100ADF5E0);
  if (!v799)
  {
    *((void *)&v747 + 1) = 0;
    long long v771 = v356;
    long long v772 = __PAIR64__(v358, v357);
    uint64_t v773 = 0;
    uint64_t v423 = fpfs_openfdbyhandle();
    uint64_t v175 = v737;
    if ((v423 & 0x80000000) != 0)
    {
      int v493 = sub_10096B4D0();
      v742 = (void (*)(void))sub_1005970E0(v493, 0, 0, 0xAu);
      swift_willThrow();
      uint64_t v174 = 0;
      uint64_t v161 = v743;
      goto LABEL_194;
    }
    uint64_t v424 = v423;
    uint64_t v161 = v743;
LABEL_156:
    uint64_t v447 = (uint64_t)v708;
    if ((*((unsigned char *)v721 + v335) & 1) != 0 && v708[v728[20]] == 1)
    {
      sub_10021E550((uint64_t)&v757);
      uint64_t v448 = v683;
      uint64_t v449 = sub_1009381C4(v447, v683, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      uint64_t v450 = *(unint64_t **)(v739[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
      __chkstk_darwin(v449);
      LODWORD(v639) = v424;
      v640 = v736;
      v641 = v450;
      LODWORD(v642) = v451;
      BYTE4(v642) = v452;
      _Block_copy(v450);
      uint64_t v453 = v742;
      sub_100943F70((uint64_t)v718, (unint64_t)sub_10093AFB0, (unint64_t)(&v643 - 6), v454);
      v742 = v453;
      if (v453)
      {
        _Block_release(v450);
LABEL_162:
        sub_10092D018(v448, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        sub_10092D018(v447, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        sub_100595FB8(v424);
        swift_release();
        sub_10092D018(v738, type metadata accessor for VFSItem);
        uint64_t v174 = 0;
        unint64_t v156 = (unint64_t)v739;
        goto LABEL_25;
      }
      sub_10092D018(v448, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      _Block_release(v450);
    }
    else
    {
      uint64_t v455 = v691;
      uint64_t v456 = sub_1009381C4((uint64_t)v708, v691, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      v457 = *(unint64_t **)(v739[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
      __chkstk_darwin(v456);
      unint64_t v639 = __PAIR64__(v358, v424);
      uint64_t v448 = v455;
      v640 = v736;
      v641 = v457;
      LODWORD(v642) = v458;
      BYTE4(v642) = v459;
      _Block_copy(v457);
      v460 = v742;
      sub_100943F70((uint64_t)v718, (unint64_t)sub_100938B7C, (unint64_t)(&v643 - 6), v461);
      v742 = v460;
      if (v460)
      {
        _Block_release(v457);
        sub_10021E550((uint64_t)&v757);
        goto LABEL_162;
      }
      _Block_release(v457);
      sub_10021E550((uint64_t)&v757);
      sub_10092D018(v448, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    }
    sub_100595FB8(v424);
    unint64_t v156 = (unint64_t)v739;
    uint64_t v337 = (uint64_t)v706;
    goto LABEL_232;
  }
  __chkstk_darwin(v359);
  unint64_t v639 = (unint64_t)&v746;
  v640 = (NSURL *)sub_10043F5DC;
  v641 = &v639;
  v360 = v742;
  id v363 = sub_100440314((uint64_t)sub_10043F5F4, (uint64_t)(&v643 - 6), v361, v362);
  uint64_t v161 = v743;
  v742 = v360;
  if (!v360)
  {
    uint64_t v424 = (uint64_t)v363;
    goto LABEL_156;
  }
  uint64_t v174 = 0;
  uint64_t v175 = v737;
LABEL_194:
  sub_10092D018((uint64_t)v708, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_10021E550((uint64_t)&v757);
LABEL_214:
  swift_release();
  sub_10092D018(v738, type metadata accessor for VFSItem);
  unint64_t v156 = (unint64_t)v739;
  while (1)
  {
LABEL_26:
    uint64_t v176 = (uint64_t)v742;
    swift_errorRetain();
    uint64_t v177 = v732;
    sub_10096A520();
    sub_1000256AC((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    uint64_t v178 = v730;
    char v179 = sub_10096AA60();
    (*(void (**)(char *, uint64_t))(v175 + 8))(v177, v178);
    if (v179)
    {
      swift_errorRelease();
      uint64_t v180 = v729;
    }
    else
    {
      LODWORD(v746) = sub_10096A6D0();
      sub_100045CB4();
      char v181 = sub_10096AA60();
      swift_errorRelease();
      uint64_t v180 = v729;
      if ((v181 & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v200 = *(void (**)(uint64_t *))(v740 + 16);
        uint64_t v201 = v667;
        uint64_t *v667 = v176;
        swift_storeEnumTagMultiPayload();
        swift_errorRetain();
        swift_retain();
        v200(v201);
        swift_release();
        swift_errorRelease();
        sub_10002B770((uint64_t)v201, &qword_100AD0E10);
        return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v727, v744);
      }
    }
    char v182 = v741;
    swift_beginAccess();
    uint64_t v183 = v744;
    (*(void (**)(char *, uint64_t (*)(void, void), uint64_t))(v161 + 16))(v180, v182, v744);
    sub_10096AE10();
    int v185 = v184;
    uint64_t v186 = *(void (**)(char *, uint64_t))(v161 + 8);
    uint64_t v743 = v161 + 8;
    v186(v180, v183);
    uint64_t v187 = (void *)(v156 + qword_100B0B640);
    swift_beginAccess();
    if (*v187 != -1) {
      break;
    }
    __break(1u);
LABEL_251:
    swift_release();
    swift_release();
LABEL_252:
    uint64_t v539 = (uint64_t)v685;
LABEL_254:
    if ((v185 & 0x80000000) == 0) {
      close(v185);
    }
LABEL_256:
    uint64_t v569 = *(void *)((char *)v739 + qword_100ADE788);
    unint64_t v644 = v156;
    if (!v569)
    {
      unint64_t v156 = (unint64_t)v739;
LABEL_260:
      uint64_t v577 = (uint64_t)v681;
      uint64_t v578 = (uint64_t)v682;
      goto LABEL_266;
    }
    uint64_t v570 = *(void *)(v738 + 16);
    uint64_t v571 = *(void *)(v738 + 32);
    uint64_t v572 = *(void *)(v738 + 40);
    char v573 = *(unsigned char *)(v738 + 24);
    swift_bridgeObjectRetain();
    v574 = v679;
    VFSFileTree.urlAndParent(forParent:filename:forCreation:options:)(v570, v573, v571, v572, 1, v679);
    swift_bridgeObjectRelease();
    v575 = v712;
    if (v656(v574, 1, v712) == 1)
    {
      sub_10002B770((uint64_t)v574, &qword_100AD0DF0);
      uint64_t v576 = (uint64_t)v678;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v734)(v678, 1, 1, v744);
      uint64_t v539 = (uint64_t)v685;
      uint64_t v577 = (uint64_t)v681;
      uint64_t v578 = (uint64_t)v682;
LABEL_262:
      sub_10002B770(v576, &qword_100ACA8C0);
      unint64_t v156 = (unint64_t)v739;
      uint64_t v176 = v689;
      goto LABEL_266;
    }
    uint64_t v579 = (uint64_t)&v574[SLODWORD(v575[6].isa)];
    uint64_t v576 = (uint64_t)v678;
    uint64_t v580 = v744;
    v581 = (void (*)(char *, uint64_t, uint64_t))v654;
    v654((uint64_t)v678, v574, v744);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v734)(v576, 0, 1, v580);
    sub_10092D018(v579, type metadata accessor for VFSItem);
    int v582 = v652(v576, 1, v580);
    uint64_t v539 = (uint64_t)v685;
    uint64_t v577 = (uint64_t)v681;
    uint64_t v578 = (uint64_t)v682;
    if (v582 == 1) {
      goto LABEL_262;
    }
    v581(v677, v576, v744);
    uint64_t v583 = sub_10096AE10();
    uint64_t v585 = v584;
    LOBYTE(v760) = 2;
    swift_bridgeObjectRetain();
    sub_10084CF94(4294967294, v583, v585, 0x200000, 0, 0, (uint64_t)&v760, (uint64_t)sub_10015E668, 0);
    v742 = 0;
    uint64_t v372 = v760;
    if (v760 == 2)
    {
      __break(1u);
      goto LABEL_297;
    }
    swift_bridgeObjectRelease();
    if (v372)
    {
      id v598 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v599 = v744;
      v600 = v649;
      v649(v674, v677, v744);
      v600(v675, v662, v599);
      v601 = sub_10096B470();
      os_log_type_t v602 = sub_10096C590();
      v712 = v601;
      LODWORD(v698) = v602;
      if (os_log_type_enabled(v601, v602))
      {
        uint64_t v603 = swift_slowAlloc();
        v690 = (int *)swift_slowAlloc();
        *(void *)&long long v760 = v690;
        *(_DWORD *)uint64_t v603 = 136315394;
        v604 = v674;
        sub_10096AD20((NSURL *)&unk_100975000);
        v606 = v605;
        id v607 = objc_msgSend(v605, "fp_shortDescription");

        uint64_t v608 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v610 = v609;

        *(void *)&long long v746 = sub_100719D44(v608, v610, (uint64_t *)&v760);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        v611 = v604;
        uint64_t v612 = v744;
        v613 = (void (*)(char *, uint64_t))v697;
        ((void (*)(char *, uint64_t))v697)(v611, v744);
        *(_WORD *)(v603 + 12) = 2080;
        v679 = (char *)(v603 + 14);
        v614 = v675;
        sub_10096AD20((NSURL *)(v603 + 14));
        v616 = v615;
        id v617 = objc_msgSend(v615, "fp_shortDescription");

        uint64_t v618 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v620 = v619;

        *(void *)&long long v746 = sub_100719D44(v618, v620, (uint64_t *)&v760);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        v613(v614, v612);
        v621 = v712;
        _os_log_impl((void *)&_mh_execute_header, v712, (os_log_type_t)v698, "attempting rename of relocation symlink from %s to %s", (uint8_t *)v603, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
LABEL_277:
        uint64_t v622 = v744;
        v623 = (void (*)(char *, uint64_t))v697;
        ((void (*)(char *, uint64_t))v697)(v674, v744);
        v623(v675, v622);
      }
      v624 = *(void (**)(char *, uint64_t))(v672 + 8);
      v624(v676, v673);
      sub_10096AE10();
      sub_10096AE10();
      uint64_t v625 = sub_10096BCF0();
      swift_bridgeObjectRelease();
      uint64_t v626 = sub_10096BCF0();
      swift_bridgeObjectRelease();
      int v627 = renameatx_np(-2, (const char *)(v625 + 32), -2, (const char *)(v626 + 32), 4u);
      swift_release();
      swift_release();
      if (v627 < 0)
      {
        id v628 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        v629 = sub_10096B470();
        os_log_type_t v630 = sub_10096C5B0();
        if (os_log_type_enabled(v629, v630))
        {
          v631 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v631 = 67109120;
          LODWORD(v760) = sub_10096B4D0();
          sub_10096C8C0();
          _os_log_impl((void *)&_mh_execute_header, v629, v630, "rename of relocation symlink failed with %{darwin.errno}d, attempting unlink", v631, 8u);
          swift_slowDealloc();
        }

        v624(v671, v673);
        sub_10096AE10();
        uint64_t v632 = sub_10096BCF0();
        swift_bridgeObjectRelease();
        int v633 = unlink((const char *)(v632 + 32));
        swift_release();
        if (v633 < 0)
        {
          id v634 = (id)fpfs_current_or_default_log();
          sub_10096B490();
          v635 = sub_10096B470();
          os_log_type_t v636 = sub_10096C5B0();
          if (os_log_type_enabled(v635, v636))
          {
            v637 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v637 = 67109120;
            LODWORD(v760) = sub_10096B4D0();
            sub_10096C8C0();
            _os_log_impl((void *)&_mh_execute_header, v635, v636, "unlink of relocation symlink failed with %{darwin.errno}d", v637, 8u);
            swift_slowDealloc();
          }

          v624(v670, v673);
        }
      }
      ((void (*)(char *, uint64_t))v697)(v677, v744);
      uint64_t v174 = v742;
      unint64_t v156 = (unint64_t)v739;
      uint64_t v539 = (uint64_t)v685;
      uint64_t v176 = v689;
      goto LABEL_260;
    }
    uint64_t v174 = v742;
    uint64_t v539 = (uint64_t)v685;
    uint64_t v176 = v689;
    uint64_t v577 = (uint64_t)v681;
    uint64_t v578 = (uint64_t)v682;
    ((void (*)(char *, uint64_t))v697)(v677, v744);
    unint64_t v156 = (unint64_t)v739;
LABEL_266:
    uint64_t v586 = v738;
    sub_1009381C4(v738, v578, type metadata accessor for VFSItem);
    uint64_t v588 = *(void *)(v735 + 16);
    uint64_t v587 = *(void *)(v735 + 24);
    sub_1009381C4((uint64_t)v721, v176 + *(int *)(v724 + 40), (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    *(void *)uint64_t v176 = v664;
    *(unsigned char *)(v176 + 8) = v720;
    *(void *)(v176 + 16) = v588;
    *(void *)(v176 + 24) = v587;
    sub_10002B70C(v586 + v731[12], v539, &qword_100AD0F80);
    v589 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v686 + 48);
    if (v589(v539, 1, v687) != 1) {
      sub_10001AE98(v539, v684, &qword_100ACA8C0);
    }
    uint64_t v590 = v687;
    uint64_t v591 = v684;
    (*(void (**)(void))(v686 + 56))();
    if (v589(v591, 1, v590) == 1)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734)(v577, 1, 1, v744);
      swift_bridgeObjectRetain();
      sub_10002B770(v591, &qword_100AD0F80);
    }
    else
    {
      sub_10001AE98(v591, v577, &qword_100ACA8C0);
      swift_bridgeObjectRetain();
    }
    uint64_t v161 = v743;
    uint64_t v175 = v737;
    uint64_t v592 = v689;
    v783[0] = v660;
    v783[1] = v648;
    v783[2] = v647;
    v783[3] = v646;
    v783[4] = v645;
    uint64_t v593 = v680;
    sub_1008F3C04(v578, v689, (uint64_t)v783, v577, 3, v680);
    v742 = v174;
    if (!v174)
    {
      sub_10001E9C0(v710, v644);
      sub_10021E550((uint64_t)&v754);
      sub_10002B770(v577, &qword_100ACA8C0);
      sub_10002B770(v592, (uint64_t *)&unk_100ADBFF0);
      sub_10092D018(v578, type metadata accessor for VFSItem);
      sub_10092D018(v693, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
      uint64_t v596 = v744;
      v597 = (void (*)(char *, uint64_t))v697;
      ((void (*)(char *, uint64_t))v697)(v661, v744);
      v597(v662, v596);
      sub_1004A5F58(v593, v738);
      uint64_t v158 = v728;
      uint64_t v159 = v724;
      uint64_t v157 = v727;
      uint64_t v152 = v669;
      goto LABEL_81;
    }
    sub_10001E9C0(v710, v644);
    sub_10021E550((uint64_t)&v754);
    sub_10002B770(v577, &qword_100ACA8C0);
    sub_10002B770(v592, (uint64_t *)&unk_100ADBFF0);
    sub_10092D018(v578, type metadata accessor for VFSItem);
    sub_10092D018(v693, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
    uint64_t v594 = v744;
    v595 = (void (*)(char *, uint64_t))v697;
    ((void (*)(char *, uint64_t))v697)(v661, v744);
    v595(v662, v594);
    swift_release();
    sub_10092D018(v738, type metadata accessor for VFSItem);
    uint64_t v174 = 0;
  }
  ++*v187;
  uint64_t v188 = (void *)swift_retain();
  int v189 = objc_sync_enter(v188);
  char v190 = v669;
  if (v189) {
    goto LABEL_294;
  }
  v741 = (uint64_t (*)(void, void))v186;
  uint64_t v191 = v744;
  uint64_t v192 = *(void *)(v156 + 160);
  swift_retain();
  if (objc_sync_exit((id)v156)) {
    goto LABEL_295;
  }
  swift_release();
  type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  uint64_t v193 = v726;
  static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v192, 0x208000u, v726);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v725 + 48))(v193, 1, v731) == 1)
  {
    sub_10002B770(v193, &qword_100ACB910);
    swift_beginAccess();
    uint64_t v194 = *(void (**)(uint64_t *))(v740 + 16);
    swift_retain();
    sub_10096A5E0();
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
    uint64_t v195 = v715;
    uint64_t v196 = v717;
    sub_10096ABD0();
    uint64_t v197 = sub_10096A4D0();
    (*(void (**)(char *, uint64_t))(v716 + 8))(v195, v196);
    uint64_t v198 = v667;
    uint64_t *v667 = v197;
    swift_storeEnumTagMultiPayload();
    v194(v198);
    swift_release();
    swift_errorRelease();
    uint64_t v199 = (uint64_t)v198;
  }
  else
  {
    uint64_t v202 = v714;
    sub_10001158C(v193, v714, type metadata accessor for VFSItem);
    uint64_t v203 = v735;
    uint64_t v204 = (uint64_t *)(v735 + 16);
    char v205 = (uint64_t *)(v735 + 24);
    if ((v190 & 1) == 0)
    {
      char v205 = (uint64_t *)(v202 + 40);
      uint64_t v204 = (uint64_t *)(v202 + 32);
    }
    uint64_t v206 = *v205;
    uint64_t v207 = *v204;
    swift_bridgeObjectRetain();
    uint64_t v208 = (uint64_t *)(v202 + 16);
    uint64_t v209 = (char *)(v202 + 24);
    if ((v190 & 2) != 0)
    {
      uint64_t v208 = (uint64_t *)v203;
      uint64_t v209 = (char *)(v203 + 8);
    }
    char v210 = *v209;
    uint64_t v211 = *v208;
    uint64_t v212 = *(void *)v202;
    char v213 = *(unsigned char *)(v202 + 8);
    uint64_t v214 = VFSItem.syncability.getter();
    *(void *)&long long v746 = v212;
    BYTE8(v746) = v213;
    uint64_t v191 = v744;
    *(void *)&long long v747 = v207;
    *((void *)&v747 + 1) = v206;
    *(void *)&long long v748 = v211;
    BYTE8(v748) = v210;
    *(void *)&long long v749 = v214;
    *((void *)&v749 + 1) = v215;
    *(void *)&long long v750 = v742;
    sub_10093AFA4((uint64_t)&v746);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v216 = swift_allocError();
    sub_10001AE98((uint64_t)&v746, v217, (uint64_t *)&unk_100ACD9A0);
    swift_errorRetain();
    swift_willThrow();
    sub_10092D018(v202, type metadata accessor for VFSItem);
    swift_beginAccess();
    v218 = *(void (**)(uint64_t *))(v740 + 16);
    v219 = v667;
    uint64_t *v667 = v216;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_errorRetain();
    v218(v219);
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v199 = (uint64_t)v219;
  }
  sub_10002B770(v199, &qword_100AD0E10);
  return v741(v727, v191);
}

void *sub_1008FCDC0@<X0>(void **a1@<X0>, int *a2@<X8>)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *a1;
  if (*a1)
  {
    id v9 = [result URL];
    sub_10096ADD0();

    sub_10096AE10();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10096AE10();
    uint64_t v10 = sub_10096BCF0();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_10096BCF0();
    swift_bridgeObjectRelease();
    int v12 = renameatx_np(-2, (const char *)(v10 + 32), -2, (const char *)(v11 + 32), 4u);
    swift_release();
    uint64_t result = (void *)swift_release();
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008FCF64()
{
  sub_10096CBD0(50);
  v1._object = (void *)0x80000001009BEAC0;
  v1._countAndFlagsBits = 0xD000000000000030;
  sub_10096BDC0(v1);
  v2._countAndFlagsBits = sub_1008D64C4();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_1008FCFF8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, void (**a14)(uint64_t), uint64_t *a15)
{
  uint64_t v91 = a6;
  uint64_t v94 = a8;
  uint64_t v95 = a7;
  uint64_t v93 = a2;
  LODWORD(v90) = a1;
  uint64_t v17 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v20 - 8);
  uint64_t v88 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for VFSItem(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v87 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v85 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v27 = __chkstk_darwin(v85);
  uint64_t v86 = (char *)&v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v83 = (uint64_t)&v75 - v29;
  uint64_t v84 = type metadata accessor for ItemMetadata();
  uint64_t v30 = __chkstk_darwin(v84);
  uint64_t v89 = (uint64_t)&v75 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v75 - v32;
  uint64_t v34 = sub_10096A7B0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    int v96 = 2;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return swift_willThrow();
  }
  uint64_t v82 = v26;
  uint64_t v80 = v17;
  uint64_t v38 = a5[17];
  sub_1009381C4(v94, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  swift_beginAccess();
  uint64_t v39 = *a9;
  uint64_t v40 = *((unsigned int *)a9 + 2);
  uint64_t v41 = a9[2];
  __int16 v42 = *((unsigned __int8 *)a9 + 24);
  uint64_t v43 = (void *)swift_retain();
  if (objc_sync_enter(v43)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a5);
  }
  uint64_t v81 = v19;
  uint64_t v44 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a5);
  }
  swift_release();
  __int16 v74 = v42;
  uint64_t v45 = v92;
  uint64_t v46 = v93;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, __int16, uint64_t, uint64_t))(*(void *)v38 + 416))(v97, v91, v90, v93, v95, v33, v39, v40, v41, v74, v44, a10);
  if (v45)
  {
    sub_10092D018((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    return swift_release();
  }
  uint64_t v91 = a13;
  uint64_t v92 = a5;
  uint64_t v76 = a12;
  uint64_t v48 = v97[0];
  uint64_t v90 = v97[1];
  uint64_t v79 = v97[2];
  uint64_t v78 = v97[3];
  uint64_t v77 = v97[4];
  sub_10092D018((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  swift_release();
  uint64_t v49 = v94;
  uint64_t v50 = v89;
  sub_1009381C4(v94, v89, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v51 = (int *)v84;
  if (*(unsigned char *)(v49 + *(int *)(v84 + 108)))
  {
    uint64_t v52 = v83;
    sub_10002B70C(a11, v83, (uint64_t *)&unk_100ADBFF0);
    uint64_t v53 = v85;
LABEL_10:
    sub_10002B770(v52, (uint64_t *)&unk_100ADBFF0);
    *(unsigned char *)(v50 + v51[27]) = 1;
    goto LABEL_11;
  }
  int v54 = *(_DWORD *)(v46 + 40);
  uint64_t v52 = v83;
  sub_10002B70C(a11, v83, (uint64_t *)&unk_100ADBFF0);
  uint64_t v53 = v85;
  if (v54 == 3) {
    goto LABEL_10;
  }
  if (*(unsigned char *)(v52 + *(int *)(v85 + 40)))
  {
    sub_10002B770(v52, (uint64_t *)&unk_100ADBFF0);
    *(unsigned char *)(v50 + v51[27]) = 0;
    goto LABEL_12;
  }
  int v73 = *(_DWORD *)(v46 + 40);
  sub_10002B770(v52, (uint64_t *)&unk_100ADBFF0);
  *(unsigned char *)(v50 + v51[27]) = v73 == 2;
  if (v73 != 2) {
    goto LABEL_12;
  }
LABEL_11:
  *(void *)(v50 + v51[25]) = *(void *)(v46 + 56);
  *(void *)(v50 + v51[26]) = *(void *)(v46 + 168);
LABEL_12:
  uint64_t v55 = v87;
  sub_1009381C4(v76, v87, type metadata accessor for VFSItem);
  uint64_t v56 = *(void *)a11;
  uint64_t v57 = v50;
  char v58 = *(unsigned char *)(a11 + 8);
  uint64_t v60 = *(void *)(a11 + 16);
  uint64_t v59 = *(void *)(a11 + 24);
  uint64_t v61 = *(int *)(v53 + 40);
  uint64_t v62 = (uint64_t)v86;
  sub_1009381C4(v57, (uint64_t)&v86[v61], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  *(void *)uint64_t v62 = v56;
  *(unsigned char *)(v62 + 8) = v58;
  *(void *)(v62 + 16) = v60;
  *(void *)(v62 + 24) = v59;
  v98[0] = v48;
  v98[1] = v90;
  v98[2] = v79;
  v98[3] = v78;
  v98[4] = v77;
  uint64_t v63 = sub_10096AE50();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v88, v95, v63);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
  uint64_t v66 = *v91;
  swift_bridgeObjectRetain();
  uint64_t v67 = (uint64_t)v82;
  sub_1008F3C04(v55, v62, (uint64_t)v98, v65, v66, (uint64_t)v82);
  sub_10021E550((uint64_t)v97);
  sub_10002B770(v65, &qword_100ACA8C0);
  sub_10002B770(v62, (uint64_t *)&unk_100ADBFF0);
  sub_10092D018(v55, type metadata accessor for VFSItem);
  swift_beginAccess();
  uint64_t v68 = *a14;
  uint64_t v69 = *(int *)(sub_10002B7CC(&qword_100AD0E18) + 48);
  uint64_t v70 = (uint64_t)v81;
  sub_1009381C4(v67, (uint64_t)v81, type metadata accessor for VFSItem);
  uint64_t v71 = *a15;
  uint64_t v72 = sub_10002B7CC(&qword_100AD0E08);
  *(void *)(v70 + *(int *)(v72 + 36)) = v71;
  *(unsigned char *)(v70 + *(int *)(v72 + 40)) = 0;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v70, 0, 1, v72);
  *(void *)(v70 + v69) = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v68(v70);
  swift_release();
  sub_10002B770(v70, &qword_100AD0E10);
  sub_10092D018(v67, type metadata accessor for VFSItem);
  return sub_10092D018(v89, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
}

void sub_1008FD944(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v59 = a8;
  uint64_t v60 = a7;
  int v63 = a5;
  LODWORD(v62) = a1;
  uint64_t v15 = type metadata accessor for VFSItem(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10096A7B0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ItemMetadata();
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v58 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v58 - v29;
  if (a4)
  {
    uint64_t v31 = *(void *)(a6 + 88);
    if (*(unsigned char *)(a6 + 80)) {
      uint64_t v32 = -1;
    }
    else {
      uint64_t v32 = *(void *)(a6 + 64);
    }
    if (*(unsigned char *)(a6 + 80)) {
      uint64_t v33 = -1;
    }
    else {
      uint64_t v33 = *(void *)(a6 + 72);
    }
    sub_1009381C4(a11, (uint64_t)&v58 - v29, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v34 = (void *)swift_retain();
    if (objc_sync_enter(v34)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a13);
    }
    char v35 = v31;
    uint64_t v36 = a13[20];
    swift_retain();
    if (objc_sync_exit(a13)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a13);
    }
    swift_release();
    uint64_t v37 = *(const void **)(v36 + 56);
    int v38 = *(_DWORD *)(v36 + 64);
    char v39 = *(unsigned char *)(v36 + 68);
    _Block_copy(v37);
    uint64_t v40 = swift_release();
    __chkstk_darwin(v40);
    *((_DWORD *)&v58 - 16) = v63;
    *(&v58 - 7) = 0x1E9F18F07;
    *((_DWORD *)&v58 - 12) = v62;
    *(&v58 - 5) = v32;
    *(&v58 - 4) = v33;
    *((unsigned char *)&v58 - 24) = v35 & 1;
    *(&v58 - 2) = (uint64_t)v37;
    *((_DWORD *)&v58 - 2) = v38;
    *((unsigned char *)&v58 - 4) = v39;
    sub_100945050(a12, (unint64_t)sub_10093B070, (unint64_t)(&v58 - 10), (uint64_t)&v64);
    sub_10092D018((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    _Block_release(v37);
  }
  else
  {
    uint64_t v62 = v17;
    uint64_t v41 = v60;
    LOBYTE(v64) = 0;
    if ((fpfs_is_dataless_fault() & 0x80000000) != 0)
    {
      int v57 = sub_10096B4D0();
      sub_1005970E0(v57, 19, 0, 0xAu);
    }
    else if (v64)
    {
      int v63 = a10;
      uint64_t v61 = a9;
      uint64_t v42 = *(void *)(a6 + 16);
      uint64_t v43 = *(unsigned int *)(a6 + 36);
      uint64_t v44 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
      sub_1009381C4(v41 + *(int *)(v44 + 40), (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      sub_1009381C4((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      uint64_t v45 = sub_100018CB0(v42, v43, (uint64_t)v25);
      LODWORD(v43) = v46;
      uint64_t v48 = v47;
      uint64_t v50 = v49 & 1;
      sub_10092D018((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      uint64_t v51 = (uint64_t)v62;
      sub_1009381C4(v59, (uint64_t)v62, type metadata accessor for VFSItem);
      uint64_t v52 = *(void *)(v51 + 16);
      uint64_t v53 = *(unsigned __int8 *)(v51 + 24);
      uint64_t v55 = *(void *)(v51 + 32);
      uint64_t v54 = *(void *)(v51 + 40);
      swift_bridgeObjectRetain();
      sub_10092D018(v51, type metadata accessor for VFSItem);
      swift_bridgeObjectRelease_n();
      uint64_t v64 = v61;
      char v65 = v63;
      uint64_t v66 = v45;
      uint64_t v67 = v43;
      uint64_t v68 = v48;
      uint64_t v69 = v50;
      uint64_t v70 = 0;
      uint64_t v71 = v52;
      uint64_t v72 = v53;
      uint64_t v73 = v55;
      uint64_t v74 = v54;
      long long v75 = 0u;
      long long v76 = 0u;
      sub_1000D3768((uint64_t)&v64);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)&v64, v56, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      LODWORD(v64) = 37;
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    swift_willThrow();
  }
}

uint64_t sub_1008FDF10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v21 = a4;
  uint64_t v20 = a3;
  uint64_t v8 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v17 = *(void (**)(uint64_t *))(a2 + 16);
  sub_10002B70C(a1, (uint64_t)v13, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v16 = *v13;
    swift_storeEnumTagMultiPayload();
    swift_retain();
  }
  else
  {
    sub_10001AE98((uint64_t)v13, (uint64_t)v10, &qword_100ACB910);
    swift_retain();
    sub_1008FE124((uint64_t)v10, v20, v21, (uint64_t *)(a5 + 16), v16);
    sub_10002B770((uint64_t)v10, &qword_100ACB910);
  }
  v17(v16);
  swift_release();
  return sub_10002B770((uint64_t)v16, &qword_100AD0E10);
}

uint64_t sub_1008FE124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VFSItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a1, (uint64_t)v12, &qword_100ACB910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10002B770((uint64_t)v12, &qword_100ACB910);
    uint64_t v23 = a2;
    char v24 = a3;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
    sub_1000D3768((uint64_t)&v23);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v17 = swift_allocError();
    sub_10001AE98((uint64_t)&v23, v18, (uint64_t *)&unk_100ACD9A0);
    *a5 = v17;
  }
  else
  {
    sub_10001158C((uint64_t)v12, (uint64_t)v16, type metadata accessor for VFSItem);
    uint64_t v19 = *(int *)(sub_10002B7CC(&qword_100AD0E18) + 48);
    sub_10001158C((uint64_t)v16, (uint64_t)a5, type metadata accessor for VFSItem);
    swift_beginAccess();
    uint64_t v20 = *a4;
    uint64_t v21 = sub_10002B7CC(&qword_100AD0E08);
    *(uint64_t *)((char *)a5 + *(int *)(v21 + 36)) = v20;
    *((unsigned char *)a5 + *(int *)(v21 + 40)) = 0;
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a5, 0, 1, v21);
    *(uint64_t *)((char *)a5 + v19) = 0;
  }
  sub_10002B7CC(&qword_100AD0E10);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1008FE3F4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, Swift::UInt64 a7@<X7>, uint64_t a8@<X8>, unsigned __int8 a9, int **a10, void *a11, int **a12, uint64_t a13, uint64_t *a14, uint64_t a15)
{
  Swift::UInt64 v144 = a3;
  Swift::UInt64 v140 = a7;
  uint64_t v148 = a2;
  uint64_t v149 = a6;
  uint64_t v147 = a5;
  unsigned int v138 = a1;
  uint64_t v137 = a8;
  int v139 = a9;
  uint64_t v16 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v136 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10096A7B0();
  uint64_t v129 = *(void *)(v18 - 8);
  uint64_t v130 = v18;
  __chkstk_darwin(v18);
  uint64_t v128 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v135 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v133 = (uint64_t)&v125 - v24;
  __chkstk_darwin(v23);
  uint64_t v142 = (uint64_t)&v125 - v25;
  uint64_t v26 = type metadata accessor for VFSItem(0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v134 = (uint64_t)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v125 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v125 - v32;
  uint64_t v145 = type metadata accessor for ItemMetadata();
  uint64_t v34 = __chkstk_darwin(v145);
  uint64_t v36 = (char *)&v125 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34);
  char v39 = (char *)&v125 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v125 - v40;
  if (!v144)
  {
    uint64_t v57 = *(void *)(a4 + 16);
    uint64_t v58 = *(unsigned int *)(a4 + 36);
    sub_1009381C4(v147 + *(int *)(v20 + 40), (uint64_t)&v125 - v40, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    sub_1009381C4((uint64_t)v41, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v148 = sub_100018CB0(v57, v58, (uint64_t)v39);
    LODWORD(v58) = v59;
    uint64_t v61 = v60;
    uint64_t v63 = v62 & 1;
    sub_10092D018((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    sub_1009381C4(v149, (uint64_t)v33, type metadata accessor for VFSItem);
    uint64_t v64 = *((void *)v33 + 2);
    uint64_t v65 = v33[24];
    uint64_t v66 = *((void *)v33 + 4);
    uint64_t v67 = *((void *)v33 + 5);
    swift_bridgeObjectRetain();
    sub_10092D018((uint64_t)v33, type metadata accessor for VFSItem);
    swift_bridgeObjectRelease_n();
    Swift::UInt64 v156 = v140;
    char v157 = v139;
    uint64_t v158 = v148;
    uint64_t v159 = v58;
    uint64_t v160 = v61;
    uint64_t v161 = v63;
    uint64_t v162 = 0;
    uint64_t v163 = v64;
    uint64_t v164 = v65;
    uint64_t v165 = v66;
    uint64_t v166 = v67;
    long long v167 = 0u;
    long long v168 = 0u;
    sub_1000D3768((uint64_t)&v156);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)&v156, v68, (uint64_t *)&unk_100ACD9A0);
    return swift_willThrow();
  }
  uint64_t v132 = a4;
  uint64_t v141 = a12;
  Swift::UInt64 v144 = a11;
  char v126 = (int *)v26;
  sub_1009381C4(v149 + *(int *)(v26 + 28), (uint64_t)&v125 - v40, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v42 = *a10;
  uint64_t v131 = v20;
  uint64_t v43 = *(int *)(v20 + 40);
  uint64_t v44 = v147;
  uint64_t v45 = v147 + v43;
  sub_1009381C4((uint64_t)v41, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v127 = (unsigned char *)v45;
  long long v146 = v36;
  sub_100152568(v42, v45);
  sub_10092D018((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  int v46 = v31;
  sub_1009381C4(v149, (uint64_t)v31, type metadata accessor for VFSItem);
  uint64_t v47 = (uint64_t)*v141;
  uint64_t v141 = a10;
  uint64_t v48 = *a10;
  uint64_t v49 = v142;
  sub_10002B70C(v44, v142, (uint64_t *)&unk_100ADBFF0);
  if ((v47 & 0x10000) != 0)
  {
    sub_10002B770(v49, (uint64_t *)&unk_100ADBFF0);
    char v56 = 0;
    uint64_t v50 = (int *)v145;
    uint64_t v53 = (uint64_t)v146;
    uint64_t v52 = v144;
LABEL_13:
    uint64_t v54 = (uint64_t)v46;
    goto LABEL_14;
  }
  uint64_t v50 = (int *)v145;
  int v51 = *(unsigned __int8 *)(v49 + *(int *)(v131 + 40) + *(int *)(v145 + 84));
  sub_10002B770(v49, (uint64_t *)&unk_100ADBFF0);
  uint64_t v52 = v144;
  if (!v51)
  {
    char v56 = 0;
    uint64_t v53 = (uint64_t)v146;
    goto LABEL_13;
  }
  uint64_t v53 = (uint64_t)v146;
  uint64_t v54 = (uint64_t)v46;
  if (v48 & 8) != 0 && (uint64_t v55 = v50[20], v46[v126[7] + v55] == 1) && (v127[v55])
  {
    char v56 = 0;
  }
  else if (((unint64_t)v48 & 0x10010) != 0)
  {
    char v56 = v127[v50[21]];
  }
  else
  {
    char v56 = v46[v126[7] + v50[21]];
  }
LABEL_14:
  uint64_t v142 = a13;
  sub_10092D018(v54, type metadata accessor for VFSItem);
  *(unsigned char *)(v53 + v50[21]) = v56;
  if ((*((unsigned char *)v141 + 5) & 1) != 0 && *v127 == 2) {
    *(unsigned char *)(v53 + v50[20]) = 0;
  }
  uint64_t v70 = v52[17];
  uint64_t v71 = *(void *)(v148 + 8);
  uint64_t v72 = v70 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v71 == *(void *)(v72 + 32))
  {
    swift_beginAccess();
    uint64_t v73 = *a14;
    uint64_t v74 = *((unsigned int *)a14 + 2);
    uint64_t v75 = a14[2];
    __int16 v76 = *((unsigned __int8 *)a14 + 24);
    uint64_t v77 = (void *)swift_retain();
    if (!objc_sync_enter(v77))
    {
      uint64_t v78 = v52[20];
      swift_retain();
      if (!objc_sync_exit(v52))
      {
        swift_release();
        sub_10002C548((uint64_t)&v156);
        sub_10001AE98((uint64_t)&v156, (uint64_t)v172, &qword_100AD0EA0);
        uint64_t v79 = v143;
        (*(void (**)(void *__return_ptr, uint64_t, void, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, __int16, uint64_t, unsigned char *))(*(void *)v70 + 416))(v169, v132, v138, v148, v142, v146, v73, v74, v75, v76, v78, v172);
        if (v79)
        {
          swift_release();
          swift_errorRetain();
          LODWORD(v150) = sub_10096A720();
          sub_100045CB4();
          char v80 = sub_10096AA60();
          swift_errorRelease();
          if ((v80 & 1) == 0)
          {
LABEL_40:
            uint64_t v99 = (uint64_t)v146;
            return sub_10092D018(v99, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
          }
          swift_errorRelease();
          uint64_t v81 = (uint64_t *)(a15 + v126[9]);
          uint64_t v82 = *v81;
          uint64_t v83 = (int *)(a15 + v126[14]);
          if (*((unsigned char *)v83 + 4)) {
            int v84 = 0;
          }
          else {
            int v84 = *v83;
          }
          int v85 = *((_DWORD *)v81 + 2);
          uint64_t v86 = v144;
          uint64_t v87 = (void *)swift_retain();
          if (objc_sync_enter(v87)) {
            sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v86);
          }
          swift_retain();
          int v88 = objc_sync_exit(v86);
          Swift::UInt64 v89 = v140;
          if (v88) {
            sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v86);
          }
          swift_release();
          swift_release();
          uint64_t v150 = v82;
          uint64_t v151 = 0;
          int v152 = v84;
          int v153 = v85;
          uint64_t v154 = 0;
          uint64_t v155 = 0;
          uint64_t v90 = fpfs_openfdbyhandle();
          if ((v90 & 0x80000000) != 0)
          {
            int v121 = sub_10096B4D0();
            sub_1005970E0(v121, 0, 0, 0xAu);
            swift_willThrow();
            goto LABEL_40;
          }
          uint64_t v91 = v90;
          sub_1008E43D0(v89, v139, v90);
          uint64_t v53 = (uint64_t)v146;
          uint64_t v143 = 0;
          sub_100595FB8(v91);
          uint64_t v123 = v147;
          uint64_t v50 = (int *)v145;
          uint64_t v124 = v149;
        }
        else
        {
          uint64_t v143 = 0;
          sub_10021E550((uint64_t)v169);
          swift_release();
          uint64_t v124 = v149;
          uint64_t v53 = (uint64_t)v146;
          uint64_t v123 = v147;
          uint64_t v50 = (int *)v145;
        }
LABEL_34:
        uint64_t v100 = v50[27];
        if (*(unsigned char *)(v53 + v100))
        {
          uint64_t v101 = v133;
          sub_10002B70C(v123, v133, (uint64_t *)&unk_100ADBFF0);
          uint64_t v102 = v131;
        }
        else
        {
          int v103 = *(_DWORD *)(v148 + 40);
          uint64_t v101 = v133;
          sub_10002B70C(v123, v133, (uint64_t *)&unk_100ADBFF0);
          uint64_t v102 = v131;
          if (v103 != 3)
          {
            if (*(unsigned char *)(v101 + *(int *)(v131 + 40)))
            {
              sub_10002B770(v101, (uint64_t *)&unk_100ADBFF0);
              *(unsigned char *)(v53 + v100) = 0;
              goto LABEL_39;
            }
            int v122 = *(_DWORD *)(v148 + 40);
            sub_10002B770(v101, (uint64_t *)&unk_100ADBFF0);
            *(unsigned char *)(v53 + v100) = v122 == 2;
            if (v122 != 2) {
              goto LABEL_39;
            }
LABEL_38:
            uint64_t v104 = v148;
            uint64_t v105 = v145;
            *(void *)(v53 + *(int *)(v145 + 100)) = *(void *)(v148 + 56);
            *(void *)(v53 + *(int *)(v105 + 104)) = *(void *)(v104 + 168);
LABEL_39:
            uint64_t v106 = v124;
            uint64_t v107 = v134;
            sub_1009381C4(v106, v134, type metadata accessor for VFSItem);
            uint64_t v108 = *(void *)v123;
            char v109 = *(unsigned char *)(v123 + 8);
            uint64_t v110 = v53;
            uint64_t v112 = *(void *)(v123 + 16);
            uint64_t v111 = *(void *)(v123 + 24);
            uint64_t v113 = *(int *)(v102 + 40);
            uint64_t v114 = (uint64_t)v135;
            sub_1009381C4(v110, (uint64_t)&v135[v113], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            *(void *)uint64_t v114 = v108;
            *(unsigned char *)(v114 + 8) = v109;
            *(void *)(v114 + 16) = v112;
            *(void *)(v114 + 24) = v111;
            uint64_t v115 = *(void *)(v132 + 48);
            long long v116 = *(_OWORD *)(v132 + 32);
            v170[0] = *(_OWORD *)(v132 + 16);
            v170[1] = v116;
            uint64_t v171 = v115;
            uint64_t v117 = sub_10096AE50();
            uint64_t v118 = *(void *)(v117 - 8);
            uint64_t v119 = (uint64_t)v136;
            (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v136, v142, v117);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v119, 0, 1, v117);
            uint64_t v120 = (uint64_t)*v141;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1008F3C04(v107, v114, (uint64_t)v170, v119, v120, v137);
            swift_bridgeObjectRelease();
            sub_10002B770(v119, &qword_100ACA8C0);
            sub_10002B770(v114, (uint64_t *)&unk_100ADBFF0);
            sub_10092D018(v107, type metadata accessor for VFSItem);
            goto LABEL_40;
          }
        }
        sub_10002B770(v101, (uint64_t *)&unk_100ADBFF0);
        *(unsigned char *)(v53 + v100) = 1;
        goto LABEL_38;
      }
LABEL_49:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v52);
    }
LABEL_48:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v52);
  }
  uint64_t v92 = (void *)swift_retain();
  if (objc_sync_enter(v92)) {
    goto LABEL_48;
  }
  uint64_t v93 = v52[20];
  swift_retain();
  int v94 = objc_sync_exit(v52);
  uint64_t v123 = v147;
  if (v94) {
    goto LABEL_49;
  }
  swift_release();
  uint64_t v95 = *(void **)(v93 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  char v96 = DocumentWharf.isUnderSyncRoots(_:syncroots:)(v148, v95);
  swift_bridgeObjectRelease();
  uint64_t v124 = v149;
  if (v96) {
    goto LABEL_34;
  }
  LODWORD(v156) = 2;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  uint64_t v97 = v128;
  uint64_t v98 = v130;
  sub_10096ABD0();
  sub_10096A790();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v97, v98);
  swift_willThrow();
  uint64_t v99 = v53;
  return sub_10092D018(v99, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
}

uint64_t sub_1008FF184(uint64_t (*a1)(uint64_t, void), uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  LODWORD(v91) = a7;
  uint64_t v90 = (uint64_t *)a6;
  uint64_t v93 = a2;
  uint64_t v94 = a4;
  uint64_t v92 = a1;
  unint64_t v14 = *(unsigned int *)(a8 + 8);
  uint64_t v70 = *(void *)a8;
  unint64_t v71 = v14;
  uint64_t v15 = *(void *)(a8 + 16);
  uint64_t v82 = *(unsigned __int8 *)(a8 + 24);
  uint64_t v79 = *(void *)(a8 + 32);
  uint64_t v80 = v15;
  uint64_t v16 = *(void *)(a8 + 40);
  uint64_t v72 = *(unsigned __int8 *)(a8 + 48);
  uint64_t v77 = *(void *)(a8 + 56);
  uint64_t v78 = v16;
  uint64_t v17 = *(void *)(a8 + 64);
  uint64_t v75 = *(void *)(a8 + 72);
  uint64_t v76 = v17;
  uint64_t v18 = *(void *)(a8 + 80);
  uint64_t v73 = *(void *)(a8 + 88);
  uint64_t v74 = v18;
  uint64_t v19 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  __chkstk_darwin(v19);
  uint64_t v84 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v83 = (uint64_t)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int v88 = (uint64_t *)((char *)&v64 - v24);
  uint64_t v86 = type metadata accessor for VFSItem(0);
  __chkstk_darwin(v86);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  uint64_t v81 = v19;
  uint64_t v28 = *(int *)(v19 + 40);
  uint64_t v87 = a3;
  uint64_t v29 = a3 + v28;
  int v85 = *(unsigned __int8 *)(v29 + v21[27]);
  LOWORD(v28) = a5 << 6;
  uint64_t v30 = (uint64_t)v26;
  uint64_t v31 = v28 & 0x1000;
  Swift::UInt64 v89 = (int *)a9;
  sub_1008F3004((uint64_t)v90, v91, a8, a9 & 0xFFFFFFFFFFFFFFEFLL, v31, v30);
  uint64_t v68 = v31;
  uint64_t v69 = v29;
  uint64_t v67 = a8;
  uint64_t v90 = (uint64_t *)(v27 + 16);
  uint64_t v91 = v27;
  uint64_t v32 = v87;
  uint64_t v33 = v30 + *(int *)(v86 + 28);
  uint64_t v34 = v89;
  uint64_t v35 = (uint64_t *)v30;
  if (sub_100930968((char)v89, v87, v33))
  {
    uint64_t v36 = (uint64_t *)v30;
    uint64_t v86 = a11;
    uint64_t v66 = a10;
    uint64_t v37 = v69;
    sub_1009381C4(v69, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    char v38 = v85;
    char v95 = v85;
    uint64_t v39 = v84;
    sub_10002B70C(v32, v84, (uint64_t *)&unk_100ADBFF0);
    uint64_t v65 = v33;
    if (v38)
    {
      sub_10002B770(v39, (uint64_t *)&unk_100ADBFF0);
      uint64_t v40 = v90;
      uint64_t v35 = v36;
    }
    else
    {
      int v42 = *(unsigned __int8 *)(v39 + *(int *)(v81 + 40));
      sub_10002B770(v39, (uint64_t *)&unk_100ADBFF0);
      BOOL v43 = v42 == 1;
      uint64_t v33 = v65;
      uint64_t v40 = v90;
      uint64_t v35 = v36;
      if (v43)
      {
        uint64_t v44 = *(void *)(v32 + 24);
        uint64_t v98 = *(void *)(v32 + 16);
        uint64_t v99 = v44;
        uint64_t v100 = 47;
        unint64_t v101 = 0xE100000000000000;
        uint64_t v96 = 58;
        unint64_t v97 = 0xE100000000000000;
        sub_10001F9C0();
        sub_10096C910();
        sub_10096BCF0();
        uint64_t v33 = v65;
        swift_bridgeObjectRelease();
        fpfs_pkg_system_lookup();
        swift_release();
      }
    }
    uint64_t v45 = v88;
    *((unsigned char *)v88 + v21[28]) = v95;
    uint64_t v46 = v21[20];
    if (*(unsigned char *)(v33 + v46) == 1 && *(unsigned char *)(v37 + v46) == 1) {
      *((unsigned char *)v45 + v21[22]) = *(unsigned char *)(v33 + v21[22]);
    }
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, void, void, void))(**(void **)(v94 + 136)
                                                                                         + 360))(v66, v45, v86, *(void *)(v32 + 16), *(void *)(v32 + 24), 0);
    sub_10092D018((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    swift_beginAccess();
    *uint64_t v40 = v41;
    swift_release();
    if ((v34 & 0x10) == 0) {
      goto LABEL_15;
    }
    int v47 = *(unsigned __int8 *)(v41 + 56);
    uint64_t v33 = v65;
  }
  else
  {
    uint64_t v37 = v69;
    if ((v34 & 0x10) == 0)
    {
      type metadata accessor for StagedContext();
      uint64_t v41 = swift_allocObject();
LABEL_15:
      swift_retain();
      v92(v41, 0);
      swift_release();
      uint64_t v48 = (uint64_t)v35;
LABEL_16:
      sub_10092D018(v48, type metadata accessor for VFSItem);
      return swift_release();
    }
    uint64_t v41 = 0;
    int v47 = v85;
  }
  uint64_t v50 = v21[20];
  int v51 = *(unsigned __int8 *)(v33 + v50);
  int v52 = *(unsigned __int8 *)(v37 + v50);
  if (v51 == v52)
  {
    type metadata accessor for StagedContext();
    uint64_t v54 = swift_allocObject();
    sub_1008FFCC4(v54, 0, v91, v94, v92);
    swift_release();
    sub_10092D018((uint64_t)v35, type metadata accessor for VFSItem);
    return swift_release();
  }
  uint64_t v87 = v82 & 1;
  int v88 = v35;
  int v53 = v47;
  sub_1009381C4(v33, v83, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_100152568(v34, v69);
  if (v53 != *(unsigned __int8 *)(v33 + v21[27]))
  {
    uint64_t v100 = v70;
    unint64_t v101 = v71;
    uint64_t v102 = v80;
    uint64_t v103 = v87;
    uint64_t v104 = v79;
    uint64_t v105 = v78;
    uint64_t v106 = v72;
    uint64_t v107 = v77;
    uint64_t v108 = v76;
    uint64_t v109 = v75;
    uint64_t v110 = v74;
    uint64_t v111 = v73;
    sub_10092E410(&v100, v88, (uint64_t)v89, v68);
    if (v41)
    {
      uint64_t v56 = v41;
    }
    else
    {
      type metadata accessor for StagedContext();
      uint64_t v56 = swift_allocObject();
    }
    char v62 = v88;
    uint64_t v63 = v92;
    swift_retain();
    v63(v56, 0);
    swift_release();
    sub_10092D018(v83, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    uint64_t v48 = (uint64_t)v62;
    goto LABEL_16;
  }
  if (v52)
  {
    if (v51)
    {
      uint64_t v100 = v70;
      unint64_t v101 = v71;
      uint64_t v102 = v80;
      uint64_t v103 = v87;
      uint64_t v104 = v79;
      uint64_t v105 = v78;
      uint64_t v106 = v72;
      uint64_t v107 = v77;
      uint64_t v108 = v76;
      uint64_t v109 = v75;
      uint64_t v110 = v74;
      uint64_t v111 = v73;
      sub_10092E410(&v100, v88, (uint64_t)v89, v68);
    }
    uint64_t v55 = v83;
    if ((*(unsigned char *)(v83 + 8) & 1) == 0)
    {
      char v57 = *(unsigned char *)(v69 + 8);
      *(_DWORD *)(v83 + 4) = *(_DWORD *)(v69 + 4);
      *(unsigned char *)(v55 + 8) = v57;
    }
  }
  else
  {
    uint64_t v55 = v83;
    if ((v51 & 1) == 0)
    {
      uint64_t v100 = v70;
      unint64_t v101 = v71;
      uint64_t v102 = v80;
      uint64_t v103 = v87;
      uint64_t v104 = v79;
      uint64_t v105 = v78;
      uint64_t v106 = v72;
      uint64_t v107 = v77;
      uint64_t v108 = v76;
      uint64_t v109 = v75;
      uint64_t v110 = v74;
      uint64_t v111 = v73;
      sub_10092E410(&v100, v88, (uint64_t)v89, v68);
      uint64_t v55 = v83;
    }
  }
  sub_10092D018(v55, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  uint64_t v58 = v90;
  swift_beginAccess();
  if (*v58)
  {
    uint64_t v59 = *v58;
  }
  else
  {
    type metadata accessor for StagedContext();
    uint64_t v59 = swift_allocObject();
  }
  uint64_t v60 = v88;
  uint64_t v61 = v92;
  swift_retain();
  v61(v59, 0);
  swift_release();
  sub_10092D018((uint64_t)v60, type metadata accessor for VFSItem);
  return swift_release();
}

uint64_t sub_1008FFCC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void))
{
  uint64_t v10 = swift_beginAccess();
  if (*(void *)(a3 + 16))
  {
    uint64_t v11 = *(void *)(a4 + 136);
    __chkstk_darwin(v10);
    swift_retain_n();
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    *(unsigned char *)(v11 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v11 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
    }
  }
  return a5(a1, a2 & 1);
}

uint64_t sub_1008FFE44(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VFSStagedContext();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9) {
    return a2();
  }
  uint64_t v10 = v9;
  uint64_t v11 = *(void **)(v3 + 216);
  uint64_t v12 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v3;
  v13[3] = v10;
  v13[4] = a2;
  v13[5] = a3;
  swift_retain_n();
  id v14 = v11;
  swift_retain();
  swift_retain();
  sub_1003946CC(v14, (uint64_t)v8, (void (*)())a2, a3, (uint64_t)sub_100245B18, (uint64_t)v13);
  swift_release();

  swift_release();
  return sub_10002B770((uint64_t)v8, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1008FFFE0(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = a1[17];
  uint64_t v7 = (void *)swift_retain();
  if (objc_sync_enter(v7)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v8 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 464))(a2, v8);
  swift_release();
  return a3(0);
}

uint64_t sub_100900134(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = a4;
  uint64_t v22 = a7;
  uint64_t v23 = a1;
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  memset(v24, 0, sizeof(v24));
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v21;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a2;
  *(unsigned char *)(v17 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  uint64_t v18 = (void *)(v17 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v18 = v22;
  v18[1] = a8;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10043E018(a2, a3, (uint64_t)v24, 0, 0, (uint64_t)sub_10093DC4C, v17);
  return swift_release();
}

uint64_t sub_1009002F0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a8;
  uint64_t v40 = a7;
  uint64_t v42 = a6;
  int v45 = a5;
  uint64_t v44 = a4;
  uint64_t v46 = a3;
  int v47 = a2;
  uint64_t v9 = sub_10096A7B0();
  uint64_t v43 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for VFSItem(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a1, (uint64_t)v14, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = *v14;
    uint64_t v48 = *v14;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
LABEL_3:
    swift_errorRetain();
    v47(v22);
    swift_errorRelease();
    return swift_errorRelease();
  }
  sub_10001AE98((uint64_t)v14, (uint64_t)v17, &qword_100ACB910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10002B770((uint64_t)v17, &qword_100ACB910);
    uint64_t v48 = v44;
    char v49 = v45;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v56 = 0;
    sub_1000D3768((uint64_t)&v48);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v24 = swift_allocError();
    sub_10001AE98((uint64_t)&v48, v25, (uint64_t *)&unk_100ACD9A0);
    v47(v24);
    return swift_errorRelease();
  }
  sub_10001158C((uint64_t)v17, (uint64_t)v21, type metadata accessor for VFSItem);
  if (v21[*(int *)(v18 + 28)] != 1)
  {
    sub_10096AE10();
    sub_10096BCF0();
    uint64_t v27 = fpfs_lp_openat();
    swift_release();
    if ((v27 & 0x80000000) != 0)
    {
      int v31 = sub_10096B4D0();
      uint64_t v22 = sub_1005970E0(v31, 1, 0, 0xAu);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_10092D018((uint64_t)v21, type metadata accessor for VFSItem);
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    LOBYTE(v48) = 0;
    if ((fpfs_get_is_sync_paused() & 0x80000000) != 0)
    {
      int v32 = sub_10096B4D0();
      uint64_t v33 = 10;
      uint64_t v34 = 0;
      unsigned __int8 v35 = 10;
    }
    else
    {
      if (v48 == 1)
      {
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        id v28 = objc_allocWithZone((Class)NSError);
        NSString v29 = sub_10096BC00();
        swift_bridgeObjectRelease();
        id v30 = [v28 initWithDomain:v29 code:17 userInfo:0];

        v47((uint64_t)v30);
        sub_10092D018((uint64_t)v21, type metadata accessor for VFSItem);
        return sub_100595FB8(v27);
      }
      uint64_t v36 = v40;
      uint64_t v37 = v41;
      sub_10096BCF0();
      int v38 = fpfs_fset_pause_sync_bundleID();
      swift_release();
      if ((v38 & 0x80000000) == 0)
      {
        close(v27);
        v47(0);
        return sub_10092D018((uint64_t)v21, type metadata accessor for VFSItem);
      }
      int v32 = sub_10096B4D0();
      uint64_t v33 = v36;
      uint64_t v34 = v37;
      unsigned __int8 v35 = 3;
    }
    uint64_t v22 = sub_1005970E0(v32, v33, v34, v35);
    swift_willThrow();
    sub_10092D018((uint64_t)v21, type metadata accessor for VFSItem);
    sub_100595FB8(v27);
    goto LABEL_3;
  }
  LODWORD(v48) = 21;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  sub_10096ABD0();
  uint64_t v26 = (void *)sub_10096A790();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v9);
  v47((uint64_t)v26);

  return sub_10092D018((uint64_t)v21, type metadata accessor for VFSItem);
}

uint64_t sub_100900980(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v18 = a4;
  uint64_t v11 = sub_10096AE50();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  memset(v19, 0, sizeof(v19));
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v18;
  *(void *)(v15 + 24) = a5;
  *(void *)(v15 + 32) = a2;
  *(unsigned char *)(v15 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  *(void *)(v15 + ((v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_retain();
  swift_retain();
  sub_10043E018(a2, a3, (uint64_t)v19, 0, 0, (uint64_t)sub_10093D4E8, v15);
  return swift_release();
}

uint64_t sub_100900B2C(uint64_t a1, void (*a2)(Swift::UInt64), uint64_t a3, Swift::UInt64 a4, int a5, uint64_t a6, void *a7)
{
  long long v55 = a7;
  uint64_t v60 = a6;
  LODWORD(v63) = a5;
  Swift::UInt64 v62 = a4;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v58 = sub_10096A7B0();
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v56 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10096AE50();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v9 = *(void *)(v53 + 64);
  __chkstk_darwin(v54);
  uint64_t v59 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v61 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v12);
  unint64_t v14 = (Swift::UInt64 *)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for VFSItem(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v64 = (uint64_t)&v52 - v23;
  sub_10002B70C(a1, (uint64_t)v14, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    Swift::UInt64 v67 = *v14;
    Swift::UInt64 v24 = v67;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
    swift_errorRetain();
    v65(v24);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v26 = (void (*)(uint64_t))v65;
  sub_10001AE98((uint64_t)v14, (uint64_t)v17, &qword_100ACB910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10002B770((uint64_t)v17, &qword_100ACB910);
    Swift::UInt64 v67 = v62;
    char v68 = v63;
    long long v69 = 0u;
    long long v70 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    uint64_t v75 = 0;
    sub_1000D3768((uint64_t)&v67);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v27 = swift_allocError();
    sub_10001AE98((uint64_t)&v67, v28, (uint64_t *)&unk_100ACD9A0);
    v26(v27);
    return swift_errorRelease();
  }
  uint64_t v63 = v19;
  uint64_t v29 = v64;
  sub_10001158C((uint64_t)v17, v64, type metadata accessor for VFSItem);
  id v30 = (unsigned char *)(v29 + *(int *)(v18 + 28));
  if (*v30 == 1)
  {
    LODWORD(v67) = 21;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    int v31 = v56;
    uint64_t v32 = v58;
    sub_10096ABD0();
    id v33 = (id)sub_10096A790();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v32);
  }
  else
  {
    if (v30[*(int *)(type metadata accessor for ItemMetadata() + 92)] == 1)
    {
      uint64_t v34 = v53;
      unsigned __int8 v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
      uint64_t v36 = v61;
      uint64_t v37 = v60;
      uint64_t v38 = v54;
      v35(v61, v60, v54);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v38);
      Swift::UInt64 v62 = *(void *)v29;
      LODWORD(v58) = *(unsigned __int8 *)(v29 + 8);
      v35((uint64_t)v59, v37, v38);
      sub_1009381C4(v29, (uint64_t)v22, type metadata accessor for VFSItem);
      unint64_t v39 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      unint64_t v40 = (v9 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v41 = (*(unsigned __int8 *)(v63 + 80) + v40 + 8) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v42 = swift_allocObject();
      uint64_t v43 = v66;
      *(void *)(v42 + 16) = v65;
      *(void *)(v42 + 24) = v43;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v42 + v39, v59, v38);
      uint64_t v44 = v55;
      *(void *)(v42 + v40) = v55;
      sub_10001158C((uint64_t)v22, v42 + v41, type metadata accessor for VFSItem);
      swift_retain();
      swift_retain();
      unint64_t v45 = (unint64_t)sub_100930A9C(v61);
      unint64_t v46 = v45;
      if (v45 >> 62) {
        uint64_t v47 = sub_10096CE70();
      }
      else {
        uint64_t v47 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v48 = v47 == 0;
      swift_retain();
      sub_10092DE94(v62, v58, v46, v48, v44, (void (*)(void))sub_10093D8AC, v42);
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_10002B770(v61, &qword_100ACA8C0);
      uint64_t v49 = v64;
      return sub_10092D018(v49, type metadata accessor for VFSItem);
    }
    sub_10096AD20((NSURL *)&v76);
    long long v51 = v50;
    id v33 = (id)FPFileNotPausedError();
  }
  v26((uint64_t)v33);

  uint64_t v49 = v29;
  return sub_10092D018(v49, type metadata accessor for VFSItem);
}

uint64_t sub_10090130C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    return a2(a1);
  }
  sub_10096AE10();
  sub_10096BCF0();
  uint64_t v14 = fpfs_lp_openat();
  swift_release();
  if ((v14 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_retain();
    if (!objc_sync_enter(v15))
    {
      uint64_t v16 = a5[20];
      swift_retain();
      if (objc_sync_exit(a5)) {
        goto LABEL_11;
      }
      swift_release();
      uint64_t v29 = *(void *)(v16 + 24);
      swift_release();
      uint64_t v17 = (void *)swift_retain();
      if (!objc_sync_enter(v17))
      {
        uint64_t v27 = a6;
        uint64_t v28 = a2;
        uint64_t v18 = a5[20];
        swift_retain();
        if (!objc_sync_exit(a5))
        {
          swift_release();
          uint64_t v19 = *(const void **)(v18 + 56);
          int v20 = *(_DWORD *)(v18 + 64);
          char v21 = *(unsigned char *)(v18 + 68);
          _Block_copy(v19);
          uint64_t v22 = swift_release();
          __chkstk_darwin(v22);
          *((unsigned char *)&v27 - 16) = 4;
          *((_DWORD *)&v27 - 3) = v14;
          id v30 = v19;
          int v31 = v20;
          char v32 = v21;
          sub_100949F90((uint64_t)&v30, v14, v29, (uint64_t)sub_10093D994, (uint64_t)(&v27 - 4));
          _Block_release(v19);
          uint64_t v25 = (unsigned __int8 *)(v27 + *(int *)(type metadata accessor for VFSItem(0) + 28));
          uint64_t v26 = sub_10096AE50();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
          sub_10002C548((uint64_t)v33);
          sub_10001AE98((uint64_t)v33, (uint64_t)v34, &qword_100AD0EA0);
          sub_10090A198(v14, v25, 0, 0, 4, (uint64_t)v12, (uint64_t)v34);
          sub_10002B770((uint64_t)v12, &qword_100ACA8C0);
          close(v14);
          return v28(0);
        }
LABEL_11:
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a5);
      }
    }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a5);
  }
  int v23 = sub_10096B4D0();
  uint64_t v24 = sub_1005970E0(v23, 1, 0, 0xAu);
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_errorRetain();
  a2(v24);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_1009016BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a7;
  v18[1] = a1;
  uint64_t v12 = sub_10096AE50();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  memset(v19, 0, sizeof(v19));
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(void *)(v16 + ((v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18[0];
  swift_retain();
  sub_10043E018(a2, a3, (uint64_t)v19, 0, 0, (uint64_t)sub_10093DA8C, v16);
  return swift_release();
}

uint64_t sub_100901864(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v37 = a6;
  int v39 = a5;
  uint64_t v38 = a4;
  uint64_t v40 = a3;
  unint64_t v41 = a2;
  uint64_t v8 = sub_10096A7B0();
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for VFSItem(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  int v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a1, (uint64_t)v13, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = *v13;
    uint64_t v42 = *v13;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
LABEL_3:
    swift_errorRetain();
    v41(v21);
    swift_errorRelease();
    return swift_errorRelease();
  }
  sub_10001AE98((uint64_t)v13, (uint64_t)v16, &qword_100ACB910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10002B770((uint64_t)v16, &qword_100ACB910);
    uint64_t v42 = v38;
    char v43 = v39;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    uint64_t v50 = 0;
    sub_1000D3768((uint64_t)&v42);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v23 = swift_allocError();
    sub_10001AE98((uint64_t)&v42, v24, (uint64_t *)&unk_100ACD9A0);
    v41(v23);
    return swift_errorRelease();
  }
  sub_10001158C((uint64_t)v16, (uint64_t)v20, type metadata accessor for VFSItem);
  uint64_t v25 = &v20[*(int *)(v17 + 28)];
  if (*v25 != 1)
  {
    if (v25[*(int *)(type metadata accessor for ItemMetadata() + 92)] != 1)
    {
      sub_10096AD20((NSURL *)&v51);
      int v31 = v30;
      id v32 = (id)FPFileNotPausedError();

      v41((uint64_t)v32);
      return sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
    }
    sub_10096AE10();
    sub_10096BCF0();
    uint64_t v27 = fpfs_lp_openat();
    swift_release();
    if ((v27 & 0x80000000) != 0)
    {
      int v33 = sub_10096B4D0();
      uint64_t v21 = sub_1005970E0(v33, 1, 0, 0xAu);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    if (v35 == 1)
    {
      if ((fpfs_fset_resuming_sync_with_drop_local_changes() & 0x80000000) != 0)
      {
        int v28 = sub_10096B4D0();
        uint64_t v29 = 11;
LABEL_20:
        uint64_t v21 = sub_1005970E0(v28, v29, 0, 0xAu);
        swift_willThrow();
        sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
        sub_100595FB8(v27);
        goto LABEL_3;
      }
    }
    else if ((fpfs_funset_pause_sync_bundleID() & 0x80000000) != 0)
    {
      int v28 = sub_10096B4D0();
      uint64_t v29 = 13;
      goto LABEL_20;
    }
    close(v27);
    v41(0);
    return sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
  }
  LODWORD(v42) = 21;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  sub_10096ABD0();
  uint64_t v26 = (void *)sub_10096A790();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  v41((uint64_t)v26);

  return sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
}

uint64_t sub_100901E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v104 = a6;
  uint64_t v117 = a5;
  int v118 = a3;
  uint64_t v119 = a2;
  uint64_t v103 = a7;
  uint64_t v114 = *(void *)a4;
  uint64_t v116 = *(unsigned int *)(a4 + 8);
  uint64_t v113 = *(void *)(a4 + 16);
  uint64_t v105 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v112 = *(void *)(a4 + 32);
  uint64_t v111 = *(void *)(a4 + 40);
  uint64_t v115 = *(unsigned __int8 *)(a4 + 48);
  uint64_t v110 = *(void *)(a4 + 56);
  uint64_t v109 = *(void *)(a4 + 64);
  uint64_t v108 = *(void *)(a4 + 72);
  uint64_t v107 = *(void *)(a4 + 80);
  uint64_t v106 = *(void *)(a4 + 88);
  uint64_t v9 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v92 - v13;
  uint64_t v15 = type metadata accessor for VFSItem(0);
  uint64_t v120 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v20 = (char *)&v92 - v19;
  uint64_t v121 = a1;
  v126[0] = sub_10096ACF0();
  v126[1] = v21;
  uint64_t v132 = 58;
  unint64_t v133 = 0xE100000000000000;
  uint64_t v124 = 47;
  unint64_t v125 = 0xE100000000000000;
  unint64_t v90 = sub_10001F9C0();
  unint64_t v91 = v90;
  int v88 = &type metadata for String;
  unint64_t v89 = v90;
  uint64_t v22 = sub_10096C910();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v123;
  sub_100008D90(0x6574656C6564, (void *)0xE600000000000000, v22, v24);
  if (v25) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v102 = v14;
  uint64_t v99 = v12;
  uint64_t v98 = v18;
  uint64_t v101 = v15;
  uint64_t v123 = 0;
  uint64_t v100 = v20;
  swift_bridgeObjectRelease();
  sub_10096AE10();
  uint64_t v27 = v122;
  int v28 = (void *)((char *)v122 + qword_100B0B640);
  swift_beginAccess();
  if (*v28 == -1)
  {
    __break(1u);
    goto LABEL_47;
  }
  ++*v28;
  uint64_t v29 = (void *)swift_retain();
  if (objc_sync_enter(v29)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v27);
  }
  unint64_t v97 = v28;
  uint64_t v30 = v27[20];
  swift_retain();
  if (objc_sync_exit(v27)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v27);
  }
  swift_release();
  uint64_t v31 = type metadata accessor for VFSFileTree(0);
  swift_unknownObjectWeakLoadStrong();
  uint64_t v32 = (uint64_t)v102;
  uint64_t v33 = v123;
  static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v30, 0x208000u, (uint64_t)v102);
  uint64_t v123 = v33;
  if (v33)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_unknownObjectRelease();
  }
  uint64_t v96 = v27 + 34;
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  uint64_t v35 = v101;
  if (v34(v32, 1, v101) == 1)
  {
    sub_10002B770(v32, &qword_100ACB910);
    v126[0] = v119;
    LOBYTE(v126[1]) = v118;
    memset(&v126[2], 0, 32);
    long long v127 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v130 = 0u;
    uint64_t v131 = 0;
    sub_1000D3768((uint64_t)v126);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)v126, v36, (uint64_t *)&unk_100ACD9A0);
    return swift_willThrow();
  }
  uint64_t v37 = (uint64_t)v100;
  sub_10001158C(v32, (uint64_t)v100, type metadata accessor for VFSItem);
  uint64_t v38 = (unsigned char *)(v37 + *(int *)(v35 + 28));
  uint64_t v39 = type metadata accessor for ItemMetadata();
  char v40 = v38[*(int *)(v39 + 80)];
  uint64_t v41 = v117;
  uint64_t v42 = v122;
  uint64_t v95 = v31;
  if ((v40 & 1) == 0)
  {
    uint64_t v94 = v39;
    uint64_t v102 = v38;
    uint64_t v44 = v37 + *(int *)(v35 + 36);
    uint64_t v45 = *(void *)v44;
    int v46 = *(_DWORD *)(v44 + 8);
    uint64_t v93 = *(void *)(v44 + 16);
    char v47 = *(unsigned char *)(v44 + 24);
    sub_100938D34(a4);
    swift_bridgeObjectRelease_n();
    if (v45 != *(void *)a4 || v46 != *(_DWORD *)(a4 + 8)) {
      goto LABEL_38;
    }
    if (v47)
    {
      if ((*(unsigned char *)(a4 + 24) & 1) == 0)
      {
LABEL_38:
        uint64_t v82 = (uint64_t)v100;
        char v83 = v100[8];
        v126[0] = *(void *)v100;
        LOBYTE(v126[1]) = v83;
        v126[2] = v114;
        v126[3] = v116;
        v126[4] = v113;
        v126[5] = v105 & 1;
        *(void *)&long long v127 = v112;
        *((void *)&v127 + 1) = v111;
        *(void *)&long long v128 = v115;
        *((void *)&v128 + 1) = v110;
        *(void *)&long long v129 = v109;
        *((void *)&v129 + 1) = v108;
        *(void *)&long long v130 = v107;
        *((void *)&v130 + 1) = v106;
        uint64_t v131 = 0;
        sub_1000D3768((uint64_t)v126);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        swift_allocError();
        sub_10001AE98((uint64_t)v126, v84, (uint64_t *)&unk_100ACD9A0);
        swift_willThrow();
        return sub_10092D018(v82, type metadata accessor for VFSItem);
      }
    }
    else if ((*(unsigned char *)(a4 + 24) & 1) != 0 || v93 != *(void *)(a4 + 16))
    {
      goto LABEL_38;
    }
    sub_100938D88(a4);
    uint64_t v37 = (uint64_t)v100;
    uint64_t v38 = v102;
    uint64_t v39 = v94;
  }
  if (*v38 == 1 && v38[*(int *)(v39 + 72)] == 1)
  {
    v126[0] = v119;
    LOBYTE(v126[1]) = v118;
    sub_10093CC2C((uint64_t)v126);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)v126, v43, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
    return sub_10092D018(v37, type metadata accessor for VFSItem);
  }
  uint64_t v48 = v39;
  uint64_t v49 = v41;
  uint64_t v50 = (uint64_t)v99;
  sub_10002B70C(v49, (uint64_t)v99, &qword_100ACB910);
  if (v34(v50, 1, v35) == 1)
  {
    uint64_t v51 = v38;
    sub_10002B770(v50, &qword_100ACB910);
    uint64_t v52 = v123;
  }
  else
  {
    uint64_t v53 = v50;
    uint64_t v54 = (uint64_t)v98;
    sub_10001158C(v53, (uint64_t)v98, type metadata accessor for VFSItem);
    uint64_t v51 = v38;
    sub_10096B0E0();
    sub_1000256AC((unint64_t *)&unk_100AD0BE0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v55 = sub_10096BBE0();
    sub_10092D018(v54, type metadata accessor for VFSItem);
    uint64_t v52 = v123;
    if ((v55 & 1) == 0)
    {
      uint64_t v85 = v103;
      sub_10001158C((uint64_t)v100, v103, type metadata accessor for VFSItem);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v85, 0, 1, v101);
    }
  }
  uint64_t v56 = v42[17];
  uint64_t v57 = sub_10096AE10();
  uint64_t v59 = v58;
  uint64_t v60 = (void *)swift_retain();
  if (objc_sync_enter(v60)) {
    goto LABEL_50;
  }
  uint64_t v61 = v42[20];
  swift_retain();
  if (objc_sync_exit(v42)) {
    goto LABEL_51;
  }
  swift_release();
  char v62 = v51[*(int *)(v48 + 108)] | v104;
  uint64_t v63 = *(void *)a4;
  uint64_t v64 = *(unsigned int *)(a4 + 8);
  uint64_t v65 = *(void *)(a4 + 16);
  uint64_t v66 = *(unsigned __int8 *)(a4 + 24);
  Swift::UInt64 v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t))(*(void *)v56 + 440);
  HIDWORD(v90) = 1;
  LOBYTE(v90) = 1;
  v67(v57, v59, v63, v64, v65, v66, v61, v62 & 1, v90);
  if (!v52)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_100640C94();
    long long v69 = &v51[*(int *)(v48 + 144)];
    if ((v69[4] & 1) != 0 || *(_DWORD *)v69 < 2u)
    {
      sub_10092D018((uint64_t)v100, type metadata accessor for VFSItem);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56))(v103, 1, 1, v101);
    }
    uint64_t v37 = (uint64_t)v100;
    uint64_t v70 = *(void *)&v100[*(int *)(v101 + 36)];
    swift_bridgeObjectRelease_n();
    if (*v97 != -1)
    {
      ++*v97;
      long long v71 = (void *)swift_retain();
      if (!objc_sync_enter(v71))
      {
        uint64_t v72 = v42[20];
        swift_retain();
        if (!objc_sync_exit(v42))
        {
          swift_release();
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          uint64_t v74 = v42[35];
          v126[0] = v70;
          memset(&v126[1], 0, 32);
          uint64_t v75 = fpfs_openfdbyhandle();
          if ((v75 & 0x80000000) != 0)
          {
            int v86 = sub_10096B4D0();
            sub_1005970E0(v86, 0, 0, 0xAu);
            swift_willThrow();
            swift_errorRetain();
            LODWORD(v126[0]) = sub_10096A710();
            sub_100045CB4();
            char v87 = sub_10096AA60();
            swift_errorRelease();
            if (v87)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56))(v103, 1, 1, v101);
              swift_errorRelease();
            }
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v76 = v75;
            int v77 = __chkstk_darwin(v75);
            *(&v92 - 10) = v95;
            *((_DWORD *)&v92 - 18) = v77;
            *(&v92 - 8) = v72;
            *(&v92 - 7) = Strong;
            *(&v92 - 6) = v74;
            *((unsigned char *)&v92 - 40) = 0;
            int v88 = 0;
            unint64_t v89 = 0;
            LOBYTE(v90) = -1;
            unint64_t v91 = 0;
            v126[0] = v78;
            LODWORD(v126[1]) = v79;
            BYTE4(v126[1]) = v80;
            sub_10094A1CC(v81, (uint64_t)sub_1009381AC, (uint64_t)(&v92 - 12), v103);
            sub_100595FB8(v76);
            swift_release();
            swift_unknownObjectRelease();
          }
          return sub_10092D018(v37, type metadata accessor for VFSItem);
        }
LABEL_51:
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v42);
      }
LABEL_50:
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v42);
    }
LABEL_47:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_errorRetain();
  LODWORD(v126[0]) = sub_10096A7A0();
  sub_100045CB4();
  if (sub_10096AA60())
  {
    swift_errorRelease();
    v126[0] = v119;
    LOBYTE(v126[1]) = v118;
    v126[2] = v52;
    sub_1009390D8((uint64_t)v126);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)v126, v68, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
    return sub_10092D018((uint64_t)v100, type metadata accessor for VFSItem);
  }
  else
  {
    sub_10092D018((uint64_t)v100, type metadata accessor for VFSItem);
    return swift_errorRelease();
  }
}

uint64_t sub_100902DB4(uint64_t a1, unint64_t a2, int a3, void *a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, int a8)
{
  int v65 = a8;
  int v86 = a5;
  uint64_t v87 = a6;
  unint64_t v88 = a2;
  uint64_t v75 = *(void *)a7;
  id v77 = (id)*(unsigned int *)(a7 + 8);
  uint64_t v74 = *(void *)(a7 + 16);
  uint64_t v66 = *(unsigned __int8 *)(a7 + 24);
  int v82 = a3;
  int v11 = a3;
  uint64_t v73 = *(void *)(a7 + 32);
  uint64_t v72 = *(void *)(a7 + 40);
  uint64_t v76 = *(unsigned __int8 *)(a7 + 48);
  uint64_t v71 = *(void *)(a7 + 56);
  uint64_t v70 = *(void *)(a7 + 64);
  uint64_t v69 = *(void *)(a7 + 72);
  uint64_t v68 = *(void *)(a7 + 80);
  uint64_t v67 = *(void *)(a7 + 88);
  uint64_t v12 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v63 + 64);
  uint64_t v14 = __chkstk_darwin(v12 - 8);
  uint64_t v64 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v83 = (uint64_t)&v63 - v15;
  uint64_t v16 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10096AE50();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  int v79 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v85 = type metadata accessor for VFSItem(0);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v78 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10002B7CC((uint64_t *)&unk_100ACEC60);
  __chkstk_darwin(v21);
  unint64_t v23 = (uint64_t *)((char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v11 == 2 && v88 == 1)
  {
    uint64_t v27 = (void *)swift_retain();
    if (objc_sync_enter(v27)) {
      goto LABEL_19;
    }
    uint64_t v28 = a4[20];
    swift_retain();
    if (objc_sync_exit(a4)) {
      goto LABEL_20;
    }
    swift_release();
    *(unsigned char *)(v28 + 49) = 1;
    swift_release();
  }
  sub_10002B70C(a1, (uint64_t)v26, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *unint64_t v23 = *v26;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v86(v23);
    swift_errorRelease();
    return sub_10002B770((uint64_t)v23, (uint64_t *)&unk_100ACEC60);
  }
  if ((*(unsigned int (**)(uint64_t *, uint64_t, unint64_t))(v84 + 48))(v26, 1, v85) == 1)
  {
    unint64_t v89 = v88;
    char v90 = v82;
    uint64_t v91 = v75;
    id v92 = v77;
    uint64_t v93 = v74;
    uint64_t v94 = v66 & 1;
    uint64_t v95 = v73;
    uint64_t v96 = v72;
    uint64_t v97 = v76;
    uint64_t v98 = v71;
    uint64_t v99 = v70;
    uint64_t v100 = v69;
    uint64_t v101 = v68;
    uint64_t v102 = v67;
    uint64_t v103 = 0;
    sub_1000D3768((uint64_t)&v89);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v29 = swift_allocError();
    sub_10001AE98((uint64_t)&v89, v30, (uint64_t *)&unk_100ACD9A0);
    *unint64_t v23 = v29;
    swift_storeEnumTagMultiPayload();
    sub_100938D34(a7);
    v86(v23);
    return sub_10002B770((uint64_t)v23, (uint64_t *)&unk_100ACEC60);
  }
  uint64_t v32 = (uint64_t)v26;
  uint64_t v33 = v78;
  sub_10001158C(v32, v78, type metadata accessor for VFSItem);
  uint64_t v34 = (void *)swift_retain();
  if (objc_sync_enter(v34)) {
LABEL_19:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a4);
  swift_retain();
  int v35 = objc_sync_exit(a4);
  uint64_t v36 = v79;
  if (v35) {
LABEL_20:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a4);
  swift_release();
  VFSItem.fetchURL()(v18);
  swift_release();
  uint64_t v37 = v80;
  uint64_t v38 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v18, 1, v81) == 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v18, v38);
  uint64_t v39 = self;
  sub_10096AD20(v40);
  uint64_t v42 = v41;
  id v77 = [v39 writingIntentWithURL:v41 options:1];

  uint64_t v44 = __chkstk_darwin(v43);
  *((unsigned char *)&v63 - 16) = 0;
  *(&v63 - 1) = (uint64_t)v36;
  __chkstk_darwin(v44);
  *(&v63 - 4) = (uint64_t)a4;
  *(&v63 - 3) = (uint64_t)sub_100939164;
  *(&v63 - 2) = v45;
  sub_10002B7CC((uint64_t *)&unk_100AD7510);
  sub_10096ADB0();
  uint64_t v46 = 1;
  char v47 = v89;
  unint64_t v48 = v85;
  if (!*(unsigned char *)(v33 + *(int *)(v85 + 28)))
  {
    sub_1009381C4(v33, v83, type metadata accessor for VFSItem);
    uint64_t v46 = 0;
  }
  LODWORD(v76) = v47 & 1;
  uint64_t v49 = v83;
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v84 + 56))(v83, v46, 1, v48);
  sub_10002B7CC(&qword_100ACAF70);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_100974D40;
  uint64_t v51 = v77;
  *(void *)(v50 + 32) = v77;
  unint64_t v89 = v50;
  sub_10096C0C0();
  unint64_t v85 = v89;
  uint64_t v52 = v64;
  sub_10002B70C(v49, v64, &qword_100ACB910);
  unint64_t v53 = (*(unsigned __int8 *)(v63 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v87;
  *(void *)(v54 + 16) = v86;
  *(void *)(v54 + 24) = v55;
  *(void *)(v54 + 32) = a4;
  *(void *)(v54 + 40) = v51;
  Swift::UInt64 v56 = v88;
  *(void *)(v54 + 48) = v88;
  char v57 = v82;
  *(unsigned char *)(v54 + 56) = v82;
  long long v58 = *(_OWORD *)(a7 + 48);
  *(_OWORD *)(v54 + 96) = *(_OWORD *)(a7 + 32);
  *(_OWORD *)(v54 + 112) = v58;
  long long v59 = *(_OWORD *)(a7 + 80);
  *(_OWORD *)(v54 + 128) = *(_OWORD *)(a7 + 64);
  *(_OWORD *)(v54 + 144) = v59;
  long long v60 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v54 + 64) = *(_OWORD *)a7;
  *(_OWORD *)(v54 + 80) = v60;
  sub_10001AE98(v52, v54 + v53, &qword_100ACB910);
  *(unsigned char *)(v54 + v53 + v13) = v65 & 1;
  id v61 = v51;
  swift_retain();
  sub_100938D34(a7);
  id v62 = v61;
  swift_retain();
  sub_1008E692C(v56, v57, v85, v76, (void (*)(void, void))sub_10093956C, v54);

  swift_bridgeObjectRelease();
  swift_release();
  sub_10002B770(v83, &qword_100ACB910);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  return sub_10092D018(v78, type metadata accessor for VFSItem);
}

uint64_t sub_1009037A0(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  int v33 = a8;
  uint64_t v32 = a7;
  uint64_t v34 = a5;
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACEC60);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10096AE50();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *uint64_t v17 = a2;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a3(v17);
    uint64_t v26 = (uint64_t *)&unk_100ACEC60;
    uint64_t v27 = (uint64_t)v17;
  }
  else
  {
    uint64_t v30 = a4;
    uint64_t v31 = a3;
    id v25 = objc_msgSend(a6, "URL", a4);
    sub_10096ADD0();

    sub_100901E38((uint64_t)v21, v32, v33, a9, a10, a11 & 1, (uint64_t)v24);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v29 = *(int *)(sub_10002B7CC(&qword_100ADF128) + 48);
    sub_10002B70C((uint64_t)v24, (uint64_t)v17, &qword_100ACB910);
    *(void *)((char *)v17 + v29) = 0;
    swift_storeEnumTagMultiPayload();
    v31(v17);
    sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACEC60);
    uint64_t v27 = (uint64_t)v24;
    uint64_t v26 = &qword_100ACB910;
  }
  return sub_10002B770(v27, v26);
}

uint64_t sub_100903A7C(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, void (*a5)(uint64_t), uint64_t a6)
{
  int v13 = a2;
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13 == 1)
  {
    if (a4 == 1)
    {
      uint64_t v17 = *(void *)(v6 + 224);
      id v27 = *(id *)(v6 + 216);
      uint64_t v18 = sub_10096B7D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a5;
      *(void *)(v19 + 24) = a6;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v6;
      *(void *)(v20 + 24) = a1;
      *(void *)(v20 + 32) = a5;
      *(void *)(v20 + 40) = a6;
      *(void *)(v20 + 48) = a1;
      *(unsigned char *)(v20 + 56) = 1;
      *(void *)(v20 + 64) = a3;
      *(void *)(v20 + 72) = a3;
      *(unsigned char *)(v20 + 80) = 1;
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = sub_1000DEB20;
      v21[3] = v19;
      v21[4] = v17;
      swift_retain_n();
      id v22 = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1003946CC(v22, (uint64_t)v16, (void (*)())sub_100248430, v21, (uint64_t)sub_100938EC0, v20);

      swift_release();
      swift_release();
      swift_release();
      return sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACF600);
    }
    uint64_t v28 = a3;
    unsigned __int8 v29 = a4;
  }
  else
  {
    uint64_t v28 = a1;
    unsigned __int8 v29 = a2;
  }
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v36 = 0;
  sub_1000D3768((uint64_t)&v28);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
  uint64_t v24 = swift_allocError();
  sub_10001AE98((uint64_t)&v28, v25, (uint64_t *)&unk_100ACD9A0);
  a5(v24);
  return swift_errorRelease();
}

uint64_t sub_100903D44(void *a1, unint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t), unint64_t a5, int a6, unint64_t a7, unint64_t a8, char a9)
{
  unint64_t v132 = a8;
  long long v146 = a3;
  uint64_t v15 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  long long v128 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v137 = (char *)&v123 - v18;
  uint64_t v139 = sub_10096AE50();
  uint64_t v138 = *(void *)(v139 - 8);
  uint64_t v19 = *(void *)(v138 + 64);
  uint64_t v20 = __chkstk_darwin(v139);
  long long v127 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  long long v129 = (char *)&v123 - v22;
  __chkstk_darwin(v21);
  uint64_t v136 = (char *)&v123 - v23;
  uint64_t v24 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v135 = (uint64_t)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v123 - v27;
  uint64_t v143 = (void *)type metadata accessor for VFSItem(0);
  unint64_t v144 = *(v143 - 1);
  uint64_t v29 = __chkstk_darwin(v143);
  long long v31 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v140 = (uint64_t)&v123 - v32;
  long long v33 = (void *)((char *)a1 + qword_100B0B640);
  swift_beginAccess();
  uint64_t v34 = *v33 + 1;
  if (*v33 == -1)
  {
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v145 = a4;
  uint64_t *v33 = v34;
  long long v35 = (void *)swift_retain();
  if (objc_sync_enter(v35)) {
    goto LABEL_41;
  }
  long long v130 = v31;
  uint64_t v36 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1)) {
    goto LABEL_42;
  }
  unint64_t v134 = a7;
  unint64_t v141 = a5;
  int v142 = a6;
  swift_release();
  uint64_t v37 = type metadata accessor for VFSFileTree(0);
  unint64_t v133 = a1 + 34;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v39 = a1[35];
  unint64_t v147 = a2;
  memset(v148, 0, 32);
  uint64_t v40 = fpfs_openfdbyhandle();
  uint64_t v131 = v37;
  if ((v40 & 0x80000000) != 0)
  {
    int v47 = sub_10096B4D0();
    uint64_t v48 = sub_1005970E0(v47, 0, 0, 0xAu);
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v147) = sub_10096A710();
    sub_100045CB4();
    char v51 = sub_10096AA60();
    swift_errorRelease();
    if ((v51 & 1) == 0)
    {
      swift_release();
      swift_unknownObjectRelease();
LABEL_16:
      swift_errorRetain();
      v146(v48);
      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t v126 = v19;
    unint64_t v50 = v144;
    uint64_t v49 = v143;
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v144 + 56))(v28, 1, 1, v143);
    swift_errorRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v41 = v40;
    int v42 = __chkstk_darwin(v40);
    *(&v123 - 10) = v37;
    *((_DWORD *)&v123 - 18) = v42;
    *(&v123 - 8) = v36;
    *(&v123 - 7) = Strong;
    *(&v123 - 6) = v39;
    *((unsigned char *)&v123 - 40) = 0;
    *(&v123 - 4) = 0;
    *(&v123 - 3) = 0;
    *((unsigned char *)&v123 - 16) = -1;
    *(&v123 - 1) = 0;
    unint64_t v147 = v43;
    *(_DWORD *)uint64_t v148 = v44;
    v148[4] = v45;
    sub_10094A1CC(v46, (uint64_t)sub_1009381AC, (uint64_t)(&v123 - 12), (uint64_t)v28);
    uint64_t v126 = v19;
    sub_100595FB8(v41);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v49 = v143;
    unint64_t v50 = v144;
  }
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, void *))(v50 + 48);
  if (v52(v28, 1, v49) == 1)
  {
    sub_10002B770((uint64_t)v28, &qword_100ACB910);
LABEL_18:
    unint64_t v147 = v141;
    v148[0] = v142;
    memset(&v148[8], 0, 32);
    long long v149 = 0u;
    long long v150 = 0u;
    long long v151 = 0u;
    long long v152 = 0u;
    uint64_t v153 = 0;
    sub_1000D3768((uint64_t)&v147);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v65 = swift_allocError();
    sub_10001AE98((uint64_t)&v147, v66, (uint64_t *)&unk_100ACD9A0);
    v146(v65);
    return swift_errorRelease();
  }
  uint64_t v53 = (uint64_t)v28;
  uint64_t v54 = v140;
  sub_10001158C(v53, v140, type metadata accessor for VFSItem);
  if (*(unsigned char *)(v54 + *((int *)v49 + 7)) != 1)
  {
    sub_10092D018(v54, type metadata accessor for VFSItem);
    goto LABEL_18;
  }
  uint64_t v55 = (void *)swift_retain();
  if (objc_sync_enter(v55)) {
    goto LABEL_41;
  }
  swift_retain();
  int v56 = objc_sync_exit(a1);
  uint64_t v57 = v126;
  long long v58 = v137;
  if (v56) {
    goto LABEL_42;
  }
  swift_release();
  VFSItem.fetchURL()(v58);
  swift_release();
  uint64_t v59 = v138;
  long long v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
  uint64_t v61 = v139;
  uint64_t v125 = v138 + 48;
  uint64_t v124 = v60;
  if (v60(v58, 1, v139) == 1)
  {
    sub_10002B770((uint64_t)v58, &qword_100ACA8C0);
    unint64_t v147 = v141;
    v148[0] = v142;
    memset(&v148[8], 0, 32);
    long long v149 = 0u;
    long long v150 = 0u;
    long long v151 = 0u;
    long long v152 = 0u;
    uint64_t v153 = 0;
    sub_1000D3768((uint64_t)&v147);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v62 = swift_allocError();
    sub_10001AE98((uint64_t)&v147, v63, (uint64_t *)&unk_100ACD9A0);
    v146(v62);
    swift_errorRelease();
    return sub_10092D018(v54, type metadata accessor for VFSItem);
  }
  uint64_t v68 = *(char **)(v59 + 32);
  uint64_t v67 = v59 + 32;
  uint64_t v69 = v136;
  uint64_t v137 = v68;
  ((void (*)(char *, char *, uint64_t))v68)(v136, v58, v61);
  if (*v33 == -1) {
LABEL_40:
  }
    __break(1u);
  ++*v33;
  uint64_t v70 = (void *)swift_retain();
  if (objc_sync_enter(v70)) {
    goto LABEL_41;
  }
  uint64_t v126 = v57;
  uint64_t v71 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1)) {
    goto LABEL_42;
  }
  swift_release();
  uint64_t v72 = swift_unknownObjectWeakLoadStrong();
  uint64_t v73 = a1[35];
  unint64_t v147 = v134;
  memset(v148, 0, 32);
  uint64_t v74 = fpfs_openfdbyhandle();
  uint64_t v123 = v67;
  if ((v74 & 0x80000000) == 0)
  {
    uint64_t v75 = v74;
    int v76 = __chkstk_darwin(v74);
    *(&v123 - 10) = v131;
    *((_DWORD *)&v123 - 18) = v76;
    *(&v123 - 8) = v71;
    *(&v123 - 7) = v72;
    *(&v123 - 6) = v73;
    *((unsigned char *)&v123 - 40) = 0;
    *(&v123 - 4) = 0;
    *(&v123 - 3) = 0;
    *((unsigned char *)&v123 - 16) = -1;
    *(&v123 - 1) = 0;
    unint64_t v147 = v77;
    *(_DWORD *)uint64_t v148 = v78;
    v148[4] = v79;
    sub_10094A1CC(v80, (uint64_t)sub_1009381AC, (uint64_t)(&v123 - 12), v135);
    sub_100595FB8(v75);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v82 = v135;
    uint64_t v83 = v143;
    goto LABEL_27;
  }
  int v81 = sub_10096B4D0();
  uint64_t v48 = sub_1005970E0(v81, 0, 0, 0xAu);
  swift_willThrow();
  unint64_t v84 = v144;
  swift_errorRetain();
  LODWORD(v147) = sub_10096A710();
  sub_100045CB4();
  char v85 = sub_10096AA60();
  swift_errorRelease();
  if ((v85 & 1) == 0)
  {
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v69, v139);
    sub_10092D018(v140, type metadata accessor for VFSItem);
    goto LABEL_16;
  }
  uint64_t v82 = v135;
  uint64_t v83 = v143;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v84 + 56))(v135, 1, 1, v143);
  swift_errorRelease();
  swift_release();
  swift_unknownObjectRelease();
LABEL_27:
  if (v52((char *)v82, 1, v83) == 1)
  {
    sub_10002B770(v82, &qword_100ACB910);
LABEL_36:
    uint64_t v96 = v136;
    unint64_t v147 = v132;
    v148[0] = a9;
    memset(&v148[8], 0, 32);
    long long v149 = 0u;
    long long v150 = 0u;
    long long v151 = 0u;
    long long v152 = 0u;
    uint64_t v153 = 0;
    sub_1000D3768((uint64_t)&v147);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v97 = swift_allocError();
    sub_10001AE98((uint64_t)&v147, v98, (uint64_t *)&unk_100ACD9A0);
    v146(v97);
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v96, v139);
    return sub_10092D018(v140, type metadata accessor for VFSItem);
  }
  uint64_t v86 = (uint64_t)v130;
  sub_10001158C(v82, (uint64_t)v130, type metadata accessor for VFSItem);
  if (*(unsigned char *)(v86 + *((int *)v83 + 7)) != 1)
  {
    sub_10092D018(v86, type metadata accessor for VFSItem);
    goto LABEL_36;
  }
  uint64_t v87 = (void *)swift_retain();
  int v88 = objc_sync_enter(v87);
  unint64_t v89 = v136;
  if (v88) {
LABEL_41:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  swift_retain();
  int v90 = objc_sync_exit(a1);
  uint64_t v91 = v128;
  uint64_t v92 = v126;
  if (v90) {
LABEL_42:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  swift_release();
  VFSItem.fetchURL()(v91);
  swift_release();
  uint64_t v93 = v139;
  if (v124(v91, 1, v139) == 1)
  {
    sub_10002B770((uint64_t)v91, &qword_100ACA8C0);
    unint64_t v147 = v132;
    v148[0] = a9;
    memset(&v148[8], 0, 32);
    long long v149 = 0u;
    long long v150 = 0u;
    long long v151 = 0u;
    long long v152 = 0u;
    uint64_t v153 = 0;
    sub_1000D3768((uint64_t)&v147);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v94 = swift_allocError();
    sub_10001AE98((uint64_t)&v147, v95, (uint64_t *)&unk_100ACD9A0);
    v146(v94);
    swift_errorRelease();
    sub_10092D018(v86, type metadata accessor for VFSItem);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v89, v93);
  }
  else
  {
    uint64_t v99 = v129;
    ((void (*)(char *, char *, uint64_t))v137)(v129, v91, v93);
    uint64_t v100 = self;
    sub_10096AD20(v101);
    uint64_t v103 = v102;
    int v104 = objc_msgSend(v100, "writingIntentWithURL:options:", v102, 4, v123);
    uint64_t v143 = v104;

    sub_10096AD20(v105);
    uint64_t v107 = v106;
    id v108 = [v100 writingIntentWithURL:v106 options:2];

    sub_10002B7CC(&qword_100ACAF70);
    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_100991130;
    *(void *)(v109 + 32) = v104;
    *(void *)(v109 + 40) = v108;
    unint64_t v147 = v109;
    sub_10096C0C0();
    unint64_t v144 = v147;
    uint64_t v110 = v138;
    uint64_t v111 = v127;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v127, v99, v93);
    unint64_t v112 = (*(unsigned __int8 *)(v110 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    unint64_t v113 = (v92 + v112 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v114 = (v113 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v115 = swift_allocObject();
    *(void *)(v115 + 16) = v108;
    ((void (*)(unint64_t, char *, uint64_t))v137)(v115 + v112, v111, v93);
    *(void *)(v115 + v113) = a1;
    uint64_t v116 = (void (**)(uint64_t))(v115 + v114);
    uint64_t v117 = v145;
    *uint64_t v116 = v146;
    v116[1] = v117;
    unint64_t v118 = v115 + ((v114 + 23) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v118 = v141;
    *(unsigned char *)(v118 + 8) = v142;
    id v119 = v108;
    swift_retain();
    id v120 = v119;
    uint64_t v121 = v143;
    swift_retain();
    sub_1008E692C(0, 255, v144, 0, sub_100939004, v115);

    swift_bridgeObjectRelease();
    swift_release();
    int v122 = *(void (**)(char *, uint64_t))(v110 + 8);
    v122(v129, v93);
    sub_10092D018((uint64_t)v130, type metadata accessor for VFSItem);
    v122(v136, v93);
  }
  return sub_10092D018(v140, type metadata accessor for VFSItem);
}

void sub_100904FD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v117 = a8;
  uint64_t v120 = a7;
  uint64_t v121 = a6;
  uint64_t v116 = a5;
  uint64_t v138 = a4;
  id v118 = a3;
  uint64_t v123 = sub_10096B180();
  uint64_t v125 = *(char **)(v123 - 8);
  __chkstk_darwin(v123);
  int v122 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v126 = *(void (***)(uint64_t, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  int v13 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096AC20();
  uint64_t v136 = *(uint8_t **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10096B480();
  uint64_t v131 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10096AE50();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v113 - v25;
  __chkstk_darwin(v24);
  if (a2)
  {
    swift_errorRetain();
    swift_willThrow();
LABEL_3:
    swift_errorRetain();
    LODWORD(v144) = sub_10096A7A0();
    sub_100045CB4();
    char v30 = sub_10096AA60();
    swift_errorRelease();
    if (v30)
    {
      *(void *)&long long v144 = v117;
      BYTE8(v144) = a9;
      uint64_t v145 = a2;
      sub_1009390D8((uint64_t)&v144);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v31 = swift_allocError();
      sub_10001AE98((uint64_t)&v144, v32, (uint64_t *)&unk_100ACD9A0);
      swift_errorRetain();
      v121(v31);
    }
    else
    {
      swift_errorRetain();
      v121(a2);
    }
    swift_errorRelease();
    swift_errorRelease();
    return;
  }
  long long v33 = v126;
  id v119 = (void (**)(char *, uint64_t))v17;
  long long v127 = v29;
  unint64_t v132 = v16;
  long long v128 = v13;
  uint64_t v130 = v14;
  uint64_t v129 = v11;
  unint64_t v114 = v28;
  uint64_t v34 = (char *)&v113 - v27;
  id v35 = [self defaultManager];
  uint64_t v135 = v20;
  id v36 = v35;
  id v37 = v118;
  id v38 = [v118 URL];
  sub_10096ADD0();

  uint64_t v39 = v37;
  id v137 = v36;
  uint64_t v40 = v135;
  uint64_t v41 = (void *)sub_10096C570();
  int v42 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v134 = v21 + 8;
  unint64_t v133 = v42;
  v42(v34, v40);
  id v115 = v41;
  if (v41)
  {
    id v43 = v41;
    int v44 = v132;
    id v113 = v43;
    sub_10096C540();
    sub_10096AC10();
    if (v146)
    {
      uint64_t v131 = 0;
      uint64_t v126 = v33 + 1;
      id v119 = (void (**)(char *, uint64_t))(v125 + 8);
      uint64_t v125 = (char *)&type metadata for Any + 8;
      uint64_t v124 = v26;
      do
      {
        sub_100042A48(&v144, &v143);
        sub_100011348(0, &qword_100ADF120);
        swift_dynamicCast();
        int v47 = (void *)v141;
        sub_10096ADD0();

        uint64_t v48 = sub_10096ACF0();
        uint64_t v50 = v49;
        *(void *)&long long v143 = v48;
        *((void *)&v143 + 1) = v49;
        uint64_t v141 = 58;
        unint64_t v142 = 0xE100000000000000;
        uint64_t v139 = 47;
        unint64_t v140 = 0xE100000000000000;
        unint64_t v51 = sub_10001F9C0();
        unint64_t v111 = v51;
        unint64_t v112 = v51;
        unint64_t v110 = v51;
        uint64_t v109 = &type metadata for String;
        *(void *)&long long v143 = sub_10096C910();
        *((void *)&v143 + 1) = v52;
        uint64_t v141 = 47;
        unint64_t v142 = 0xE100000000000000;
        uint64_t v139 = 58;
        unint64_t v140 = 0xE100000000000000;
        unint64_t v111 = v51;
        unint64_t v112 = v51;
        uint64_t v109 = &type metadata for String;
        unint64_t v110 = v51;
        sub_10096C910();
        uint64_t v53 = swift_bridgeObjectRelease();
        __chkstk_darwin(v53);
        unint64_t v111 = (unint64_t)v137;
        unint64_t v112 = v138;
        uint64_t v54 = (uint64_t)v128;
        sub_10096B0D0();
        uint64_t v55 = sub_100834190(v54, sub_1009390E4, (uint64_t)&v109);
        uint64_t v57 = v56;
        swift_bridgeObjectRelease();
        (*v126)(v54, v129);
        if (!v57)
        {
          *(void *)&long long v143 = v48;
          *((void *)&v143 + 1) = v50;
          swift_bridgeObjectRetain();
          v147._countAndFlagsBits = 32;
          v147._object = (void *)0xE100000000000000;
          sub_10096BDC0(v147);
          long long v58 = v122;
          sub_10096B170();
          uint64_t v59 = sub_10096B100();
          uint64_t v61 = v60;
          (*v119)(v58, v123);
          v148._countAndFlagsBits = v59;
          v148._object = v61;
          sub_10096BDC0(v148);
          swift_bridgeObjectRelease();
          uint64_t v57 = *((void *)&v143 + 1);
          uint64_t v55 = v143;
        }
        uint64_t v62 = v127;
        sub_10096AD60();
        uint64_t v40 = v135;
        uint64_t v63 = v124;
        if (v55 == v48 && v57 == v50)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v65 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if (v65)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10096AD20(v66);
            uint64_t v68 = v67;
            uint64_t v69 = (const char *)[v67 fileSystemRepresentation];
            id v70 = v68;
            uint64_t v71 = sub_10096BCF0();
            size_t v72 = strlen((const char *)(v71 + 32));
            swift_release();
            if (__OFADD__(v72, 1)) {
              __break(1u);
            }
            uint64_t v73 = sub_10096BCF0();
            swift_bridgeObjectRelease();
            setxattr(v69, "com.apple.fileprovider.before-bounce#P", (const void *)(v73 + 32), v72 + 1, 0, 3);
            swift_release();
          }
        }
        sub_10096AD20(v64);
        uint64_t v75 = v74;
        sub_10096AD20(v76);
        int v78 = v77;
        *(void *)&long long v143 = 0;
        unsigned int v79 = [v137 moveItemAtURL:v75 toURL:v77 error:&v143];

        uint64_t v80 = v130;
        int v81 = v136;
        if (v79)
        {
          id v45 = (id)v143;
        }
        else
        {
          id v82 = (id)v143;
          uint64_t v83 = sub_10096ABF0();

          swift_willThrow();
          swift_errorRelease();
          uint64_t v131 = v83;
        }
        uint64_t v46 = v133;
        v133(v62, v40);
        v46(v63, v40);
        int v44 = v132;
        sub_10096AC10();
      }
      while (v146);
    }
    else
    {
      uint64_t v131 = 0;
      uint64_t v80 = v130;
      int v81 = v136;
    }
    (*((void (**)(char *, uint64_t))v81 + 1))(v44, v80);
    id v98 = v113;

    a2 = v131;
    if (v131)
    {
      swift_willThrow();

      goto LABEL_3;
    }
  }
  else
  {
    id v84 = (id)fpfs_current_or_default_log();
    char v85 = v19;
    sub_10096B490();
    id v86 = v39;
    uint64_t v87 = sub_10096B470();
    os_log_type_t v88 = sub_10096C5B0();
    if (os_log_type_enabled(v87, v88))
    {
      unint64_t v89 = (uint8_t *)swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(void *)&long long v144 = v138;
      *(_DWORD *)unint64_t v89 = 136315138;
      uint64_t v136 = v89 + 4;
      id v90 = [v86 URL];
      sub_10096ADD0();

      sub_10096AD20(v91);
      uint64_t v93 = v92;
      id v94 = objc_msgSend(v92, "fp_shortDescription");

      uint64_t v95 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v97 = v96;

      v133(v34, v135);
      *(void *)&long long v143 = sub_100719D44(v95, v97, (uint64_t *)&v144);
      sub_10096C8C0();

      uint64_t v40 = v135;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "can't create enumerator at %s", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, void))(v131 + 8))(v85, v119);
  }
  uint64_t v99 = v116;
  uint64_t v100 = v116[17];
  id v101 = [v118 URL];
  uint64_t v102 = v114;
  sub_10096ADD0();

  uint64_t v103 = sub_10096AE10();
  uint64_t v105 = v104;
  v133(v102, v40);
  uint64_t v106 = (void *)swift_retain();
  if (objc_sync_enter(v106)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v99);
  }
  uint64_t v107 = v99[20];
  swift_retain();
  if (objc_sync_exit(v99)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v99);
  }
  swift_release();
  id v108 = *(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void, unint64_t))(*(void *)v100 + 440);
  HIDWORD(v111) = 1;
  LOBYTE(v111) = 1;
  v108(v103, v105, 0, 0, 0, 256, v107, 0, v111);
  swift_bridgeObjectRelease();
  swift_release();
  v121(0);
}

uint64_t sub_100905EC4(uint64_t a1)
{
  uint64_t v2 = sub_10096AE50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B480();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = sub_10096B470();
  os_log_type_t v12 = sub_10096C5B0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = v6;
    uint64_t v14 = v13;
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v25 = v14 + 4;
    sub_10096AD20((NSURL *)(v14 + 4));
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, "fp_shortDescription");
    os_log_t v26 = v11;
    id v18 = v17;

    uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v28 = v7;
    unint64_t v21 = v20;

    uint64_t v32 = sub_100719D44(v19, v21, &v33);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_WORD *)(v14 + 12) = 2112;
    swift_getErrorValue();
    id v22 = Error.prettyDescription.getter(v31);
    uint64_t v32 = (uint64_t)v22;
    sub_10096C8C0();
    *uint64_t v27 = v22;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v23 = v26;
    _os_log_impl((void *)&_mh_execute_header, v26, v12, "Can't enumerate: %s: %@", (uint8_t *)v14, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return 1;
}

uint64_t sub_1009062A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096AD60();
  sub_10096AE10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  NSString v8 = sub_10096BC00();
  swift_bridgeObjectRelease();
  LODWORD(a3) = [a3 fileExistsAtPath:v8];

  return a3 ^ 1;
}

uint64_t sub_1009063D8(uint64_t a1, int a2, _OWORD *a3, uint64_t a4, int a5, long long *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  int v34 = a5;
  uint64_t v33 = a4;
  HIDWORD(v31) = a2;
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v9 + 224);
  id v32 = *(id *)(v9 + 216);
  uint64_t v19 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  uint64_t v21 = swift_allocObject();
  long long v22 = a3[3];
  *(_OWORD *)(v21 + 72) = a3[2];
  *(_OWORD *)(v21 + 88) = v22;
  long long v23 = a3[5];
  *(_OWORD *)(v21 + 104) = a3[4];
  *(_OWORD *)(v21 + 120) = v23;
  long long v24 = a3[1];
  *(_OWORD *)(v21 + 40) = *a3;
  *(_OWORD *)(v21 + 56) = v24;
  long long v25 = *a6;
  *(_OWORD *)(v21 + 184) = a6[1];
  *(_OWORD *)(v21 + 168) = v25;
  long long v26 = a6[4];
  *(_OWORD *)(v21 + 248) = a6[5];
  *(_OWORD *)(v21 + 232) = v26;
  long long v27 = a6[2];
  *(_OWORD *)(v21 + 216) = a6[3];
  *(void *)(v21 + 16) = v9;
  *(void *)(v21 + 24) = a1;
  *(unsigned char *)(v21 + 32) = BYTE4(v31);
  *(void *)(v21 + 136) = a7;
  *(void *)(v21 + 144) = a8;
  *(void *)(v21 + 152) = v33;
  *(unsigned char *)(v21 + 160) = v34;
  *(_OWORD *)(v21 + 200) = v27;
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = sub_1000DEB20;
  v28[3] = v20;
  v28[4] = v18;
  swift_retain_n();
  id v29 = v32;
  swift_retain();
  sub_100938D34((uint64_t)a3);
  sub_100938D34((uint64_t)a6);
  swift_retain();
  swift_retain();
  sub_1003946CC(v29, (uint64_t)v17, (void (*)())sub_100248430, v28, (uint64_t)sub_100938CF0, v21);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_100906648(char *a1, void *a2, int a3, uint64_t a4, NSString *a5, NSURL *a6, void *a7, int a8, uint64_t a9)
{
  int v105 = a8;
  uint64_t v104 = a7;
  v107._urlString = a5;
  v107._baseURL = a6;
  uint64_t v86 = *(void *)a9;
  unint64_t v89 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*(unsigned int *)(a9 + 8);
  uint64_t v85 = *(void *)(a9 + 16);
  uint64_t v77 = *(unsigned __int8 *)(a9 + 24);
  uint64_t v84 = *(void *)(a9 + 32);
  uint64_t v83 = *(void *)(a9 + 40);
  uint64_t v87 = (void (*)(char *, uint64_t, uint64_t))*(unsigned __int8 *)(a9 + 48);
  uint64_t v82 = *(void *)(a9 + 56);
  uint64_t v81 = *(void *)(a9 + 64);
  uint64_t v80 = *(void *)(a9 + 72);
  uint64_t v79 = *(void *)(a9 + 80);
  uint64_t v78 = *(void *)(a9 + 88);
  uint64_t v99 = *(void *)a4;
  id v101 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*(unsigned int *)(a4 + 8);
  uint64_t v98 = *(void *)(a4 + 16);
  uint64_t v90 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v97 = *(void *)(a4 + 32);
  uint64_t v96 = *(void *)(a4 + 40);
  uint64_t v100 = (void (*)(char *, uint64_t, uint64_t))*(unsigned __int8 *)(a4 + 48);
  uint64_t v95 = *(void *)(a4 + 56);
  uint64_t v94 = *(void *)(a4 + 64);
  uint64_t v93 = *(void *)(a4 + 72);
  uint64_t v92 = *(void *)(a4 + 80);
  uint64_t v91 = *(void *)(a4 + 88);
  uint64_t v13 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  os_log_type_t v88 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v106 = (char *)&v72 - v16;
  uint64_t v17 = sub_10096AE50();
  v107.super.Class isa = *(Class *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v22 = (char *)&v72 - v21;
  uint64_t v23 = type metadata accessor for VFSItem(0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  long long v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v72 - v27;
  uint64_t v102 = a2;
  int v103 = a3;
  sub_1008F3004((uint64_t)a2, a3, a4, 8, 0, (uint64_t)&v72 - v27);
  size_t v72 = v20;
  uint64_t v73 = v26;
  uint64_t v75 = v22;
  uint64_t v76 = v17;
  id v29 = a1;
  uint64_t v30 = (void *)swift_retain();
  if (objc_sync_enter(v30)) {
    goto LABEL_12;
  }
  swift_retain();
  int v31 = objc_sync_exit(a1);
  Class isa = v107.super.isa;
  uint64_t v33 = v75;
  if (v31) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  int v34 = v106;
  VFSItem.fetchURL()(v106);
  swift_release();
  uint64_t v74 = v28;
  uint64_t v35 = (uint64_t)v34;
  id v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)isa + 6);
  uint64_t v37 = v76;
  if (v36(v35, 1, v76) == 1)
  {
    uint64_t v38 = v90 & 1;
    sub_10002B770(v35, &qword_100ACA8C0);
    v107._clients = v102;
    LOBYTE(v107._reserved) = v103;
    uint64_t v108 = v99;
    uint64_t v109 = v101;
    uint64_t v110 = v98;
    uint64_t v111 = v38;
    uint64_t v112 = v97;
    uint64_t v113 = v96;
    unint64_t v114 = v100;
    uint64_t v115 = v95;
    uint64_t v116 = v94;
    uint64_t v117 = v93;
    uint64_t v118 = v92;
    uint64_t v119 = v91;
    uint64_t v120 = 0;
    sub_1000D3768((uint64_t)&v107._clients);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v39 = swift_allocError();
    sub_10001AE98((uint64_t)&v107._clients, v40, (uint64_t *)&unk_100ACD9A0);
    sub_100938D34(a4);
    ((void (*)(uint64_t))v107._urlString)(v39);
    swift_errorRelease();
    uint64_t v41 = (uint64_t)v74;
    return sub_10092D018(v41, type metadata accessor for VFSItem);
  }
  id v101 = v36;
  int v42 = (void (*)(char *, uint64_t, uint64_t))*((void *)isa + 4);
  v42(v33, v35, v37);
  uint64_t v106 = v29;
  sub_1008F3004((uint64_t)v104, v105, a9, 0, 0, (uint64_t)v73);
  uint64_t v100 = v42;
  id v29 = v106;
  id v43 = (void *)swift_retain();
  if (objc_sync_enter(v43)) {
LABEL_12:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v29);
  swift_retain();
  int v44 = objc_sync_exit(v29);
  id v45 = v72;
  uint64_t v46 = v89;
  if (v44) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v106);
  }
  swift_release();
  int v47 = v88;
  VFSItem.fetchURL()(v88);
  swift_release();
  uint64_t v48 = v76;
  if (v101((uint64_t)v47, 1, v76) == 1)
  {
    uint64_t v49 = v48;
    uint64_t v50 = v77 & 1;
    sub_10002B770((uint64_t)v47, &qword_100ACA8C0);
    v107._clients = v104;
    LOBYTE(v107._reserved) = v105;
    uint64_t v108 = v86;
    uint64_t v109 = v46;
    uint64_t v110 = v85;
    uint64_t v111 = v50;
    uint64_t v112 = v84;
    uint64_t v113 = v83;
    unint64_t v114 = v87;
    uint64_t v115 = v82;
    uint64_t v116 = v81;
    uint64_t v117 = v80;
    uint64_t v118 = v79;
    uint64_t v119 = v78;
    uint64_t v120 = 0;
    sub_1000D3768((uint64_t)&v107._clients);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v51 = swift_allocError();
    sub_10001AE98((uint64_t)&v107._clients, v52, (uint64_t *)&unk_100ACD9A0);
    sub_100938D34(a9);
    ((void (*)(uint64_t))v107._urlString)(v51);
    swift_errorRelease();
    sub_10092D018((uint64_t)v73, type metadata accessor for VFSItem);
    (*((void (**)(char *, uint64_t))v107.super.isa + 1))(v75, v49);
  }
  else
  {
    v100(v45, (uint64_t)v47, v48);
    uint64_t v53 = self;
    uint64_t v54 = v48;
    sub_10096AD20(v55);
    uint64_t v57 = v56;
    long long v58 = v45;
    id v59 = [v53 writingIntentWithURL:v56 options:4];

    long long v60 = v75;
    sub_10096AD20(&v107);
    uint64_t v62 = v61;
    id v63 = [v53 writingIntentWithURL:v61 options:2];

    sub_10002B7CC(&qword_100ACAF70);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_100991130;
    *(void *)(v64 + 32) = v59;
    *(void *)(v64 + 40) = v63;
    v107._clients = (void *)v64;
    sub_10096C0C0();
    clients = v107._clients;
    uint64_t v66 = v106;
    swift_retain();
    sub_100938D34(a4);
    sub_100938D34(a9);
    id v67 = v63;
    baseURL = v107._baseURL;
    swift_retain();
    id v69 = v59;
    sub_10092EF78(0, 255, (unint64_t)clients, 0, (uint64_t)v66, (uint64_t)v66, (uint64_t)v104, v105, (_OWORD *)a9, v67, (uint64_t)v102, v103, a4, (void (*)(uint64_t))v107._urlString, (uint64_t)baseURL);
    swift_release();
    sub_100938D88(a4);
    sub_100938D88(a9);

    swift_bridgeObjectRelease();
    swift_release();
    id v70 = (void (*)(char *, uint64_t))*((void *)v107.super.isa + 1);
    v70(v58, v54);
    sub_10092D018((uint64_t)v73, type metadata accessor for VFSItem);
    v70(v60, v54);
  }
  uint64_t v41 = (uint64_t)v74;
  return sub_10092D018(v41, type metadata accessor for VFSItem);
}

uint64_t sub_1009070C4(uint64_t a1, uint64_t a2, int a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  int v37 = a3;
  uint64_t v36 = a2;
  uint64_t v40 = (char *)a1;
  uint64_t v5 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096AE50();
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for VFSItem(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C((uint64_t)v40, (uint64_t)v13, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = *v13;
    uint64_t v41 = *v13;
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
    goto LABEL_12;
  }
  uint64_t v22 = v36;
  char v23 = v37;
  uint64_t v40 = v10;
  uint64_t v24 = v35;
  sub_10001AE98((uint64_t)v13, (uint64_t)v16, &qword_100ACB910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10002B770((uint64_t)v16, &qword_100ACB910);
    uint64_t v41 = v22;
    char v42 = v23;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v49 = 0;
    sub_1000D3768((uint64_t)&v41);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v21 = swift_allocError();
    sub_10001AE98((uint64_t)&v41, v25, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
    goto LABEL_12;
  }
  sub_10001158C((uint64_t)v16, (uint64_t)v20, type metadata accessor for VFSItem);
  VFSItem.fetchURL()(v7);
  uint64_t v26 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v8) == 1)
  {
    sub_10002B770((uint64_t)v7, &qword_100ACA8C0);
    uint64_t v41 = v22;
    char v42 = v23;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v49 = 0;
    sub_1000D3768((uint64_t)&v41);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v21 = swift_allocError();
    sub_10001AE98((uint64_t)&v41, v27, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
LABEL_11:
    sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
    goto LABEL_12;
  }
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v29 = (uint64_t)v40;
  v28(v40, v7, v8);
  sub_10096AE10();
  sub_10096BCF0();
  uint64_t v30 = fpfs_lp_openat();
  swift_release();
  if ((v30 & 0x80000000) != 0)
  {
    int v32 = sub_10096B4D0();
    uint64_t v21 = sub_1005970E0(v32, 1, 0, 0xAu);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v8);
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  if ((fpfs_remove_resurrected() & 0x80000000) == 0)
  {
    close(v30);
    v39(0);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v8);
    return sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
  }
  int v34 = sub_10096B4D0();
  uint64_t v21 = sub_1005970E0(v34, 18, 0, 0xAu);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v8);
  sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
  sub_100595FB8(v30);
LABEL_12:
  uint64_t v33 = v39;
  swift_errorRetain();
  v33(v21);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_1009076E8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v94 = a6;
  int v97 = a5;
  uint64_t v96 = a4;
  id v101 = a2;
  uint64_t v102 = a3;
  uint64_t v100 = a1;
  uint64_t v6 = sub_10096B480();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  __chkstk_darwin(v6);
  uint64_t v95 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v89 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v90 = (uint64_t)&v85 - v11;
  uint64_t v99 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v99);
  uint64_t v93 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VFSItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v88 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v85 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v85 - v21;
  __chkstk_darwin(v20);
  uint64_t v98 = (uint64_t)&v85 - v23;
  uint64_t v24 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(v100, (uint64_t)v29, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v26 = *v29;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v101(v26);
    swift_errorRelease();
    return sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
  }
  uint64_t v100 = v24;
  uint64_t v30 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  if (v30(v29, 1, v13) == 1)
  {
    uint64_t v118 = v96;
    char v119 = v97;
    long long v120 = 0u;
    long long v121 = 0u;
    long long v122 = 0u;
    long long v123 = 0u;
    long long v124 = 0u;
    long long v125 = 0u;
    uint64_t v126 = 0;
    sub_1000D3768((uint64_t)&v118);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v31 = swift_allocError();
    sub_10001AE98((uint64_t)&v118, v32, (uint64_t *)&unk_100ACD9A0);
    *uint64_t v26 = v31;
    swift_storeEnumTagMultiPayload();
    v101(v26);
    return sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
  }
  int v34 = (int *)v13;
  uint64_t v87 = v14;
  uint64_t v35 = v98;
  sub_10001158C((uint64_t)v29, v98, type metadata accessor for VFSItem);
  uint64_t v36 = v35 + v34[7];
  int v37 = *(unsigned __int8 *)(v36 + *(int *)(v99 + 80));
  sub_1009381C4(v35, (uint64_t)v22, type metadata accessor for VFSItem);
  if (v37 == 1)
  {
    sub_10092D018((uint64_t)v22, type metadata accessor for VFSItem);
    sub_1009381C4(v35, (uint64_t)v19, type metadata accessor for VFSItem);
LABEL_17:
    sub_10092D018((uint64_t)v19, type metadata accessor for VFSItem);
    goto LABEL_18;
  }
  int v38 = v22[v34[7]];
  sub_10092D018((uint64_t)v22, type metadata accessor for VFSItem);
  sub_1009381C4(v35, (uint64_t)v19, type metadata accessor for VFSItem);
  if (v38 != 1) {
    goto LABEL_17;
  }
  char v39 = v19[v34[7] + *(int *)(v99 + 64)];
  sub_10092D018((uint64_t)v19, type metadata accessor for VFSItem);
  if (v39)
  {
LABEL_18:
    sub_1009381C4(v35, (uint64_t)v26, type metadata accessor for VFSItem);
    swift_storeEnumTagMultiPayload();
    v101(v26);
    sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
    uint64_t v52 = v35;
    return sub_10092D018(v52, type metadata accessor for VFSItem);
  }
  uint64_t v40 = v35 + v34[9];
  uint64_t v41 = *(void *)v40;
  uint64_t v86 = v34;
  uint64_t v42 = v35 + v34[14];
  if (*(unsigned char *)(v42 + 4)) {
    int v43 = 0;
  }
  else {
    int v43 = *(_DWORD *)v42;
  }
  int v44 = *(_DWORD *)(v40 + 8);
  long long v45 = v94;
  long long v46 = (void *)swift_retain();
  if (objc_sync_enter(v46)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v45);
  }
  swift_retain();
  if (objc_sync_exit(v45)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v45);
  }
  swift_release();
  swift_release();
  v113[31] = v41;
  v113[32] = 0;
  int v114 = v43;
  int v115 = v44;
  uint64_t v117 = 0;
  uint64_t v116 = 0;
  int v47 = fpfs_openfdbyhandle();
  if (v47 < 0)
  {
    int v53 = sub_10096B4D0();
    uint64_t v54 = sub_1005970E0(v53, 0, 0, 0xAu);
    swift_willThrow();
    uint64_t v55 = v95;
    id v56 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v57 = sub_10096B470();
    os_log_type_t v58 = sub_10096C5B0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      long long v60 = (void *)swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v113[0] = v99;
      *(_DWORD *)uint64_t v59 = 136446466;
      uint64_t v61 = VFSItemID.parseableString.getter(v96, v97);
      uint64_t v103 = sub_100719D44(v61, v62, v113);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2112;
      swift_errorRetain();
      uint64_t v63 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v103 = v63;
      sub_10096C8C0();
      *long long v60 = v63;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "failed to open directory at %{public}s, error: %@", (uint8_t *)v59, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v91 + 8))(v95, v92);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v91 + 8))(v55, v92);
    }
    uint64_t v64 = v101;
    *uint64_t v26 = v54;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v64(v26);
    swift_errorRelease();
    sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
  }
  else
  {
    int v48 = v47;
    uint64_t v49 = v36;
    uint64_t v50 = v93;
    sub_1009381C4(v49, v93, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    *(unsigned char *)(v50 + *(int *)(v99 + 80)) = 1;
    sub_10002C548((uint64_t)v113);
    uint64_t v51 = sub_10001AE98((uint64_t)v113, (uint64_t)&v118, &qword_100AD0EA0);
    __chkstk_darwin(v51);
    *((_DWORD *)&v85 - 4) = v48;
    sub_100943F70((uint64_t)&v118, (unint64_t)sub_100597314, (unint64_t)(&v85 - 4), (uint64_t)&v85);
    LODWORD(v99) = v48;
    char v65 = v94;
    uint64_t v66 = (void *)swift_retain();
    if (objc_sync_enter(v66)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v65);
    }
    uint64_t v67 = v65[20];
    swift_retain();
    if (objc_sync_exit(v65)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v65);
    }
    swift_release();
    uint64_t v68 = type metadata accessor for VFSFileTree(0);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v70 = __chkstk_darwin(Strong);
    *(&v85 - 10) = v68;
    *((_DWORD *)&v85 - 18) = v99;
    *(&v85 - 8) = v67;
    *(&v85 - 7) = v70;
    *(&v85 - 6) = v71;
    *((unsigned char *)&v85 - 40) = 2;
    uint64_t v72 = v96;
    *(&v85 - 4) = 0;
    *(&v85 - 3) = v72;
    *((unsigned char *)&v85 - 16) = v97;
    *(&v85 - 1) = 0;
    uint64_t v103 = v73;
    int v104 = v74;
    char v105 = v75;
    uint64_t v76 = v90;
    sub_10094A1CC(v77, (uint64_t)sub_1009381AC, (uint64_t)(&v85 - 12), v90);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v78 = v86;
    uint64_t v79 = v93;
    close(v99);
    uint64_t v80 = v89;
    sub_10002B70C(v76, v89, &qword_100ACB910);
    if (v30((uint64_t *)v80, 1, (uint64_t)v78) != 1)
    {
      uint64_t v83 = v80;
      uint64_t v84 = v88;
      sub_10001158C(v83, v88, type metadata accessor for VFSItem);
      sub_1009381C4(v84, (uint64_t)v26, type metadata accessor for VFSItem);
      swift_storeEnumTagMultiPayload();
      v101(v26);
      sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
      sub_10092D018(v84, type metadata accessor for VFSItem);
      sub_10002B770(v76, &qword_100ACB910);
      sub_10092D018(v79, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      uint64_t v52 = v98;
      return sub_10092D018(v52, type metadata accessor for VFSItem);
    }
    sub_10002B770(v80, &qword_100ACB910);
    uint64_t v103 = v96;
    LOBYTE(v104) = v97;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    uint64_t v112 = 0;
    sub_1000D3768((uint64_t)&v103);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v81 = swift_allocError();
    sub_10001AE98((uint64_t)&v103, v82, (uint64_t *)&unk_100ACD9A0);
    *uint64_t v26 = v81;
    swift_storeEnumTagMultiPayload();
    v101(v26);
    sub_10002B770((uint64_t)v26, (uint64_t *)&unk_100ACEC50);
    sub_10002B770(v76, &qword_100ACB910);
    sub_10092D018(v79, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  }
  uint64_t v52 = v98;
  return sub_10092D018(v52, type metadata accessor for VFSItem);
}

uint64_t sub_100908590(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v93 = a6;
  uint64_t v94 = a4;
  int v95 = a5;
  uint64_t v98 = a2;
  uint64_t v99 = a3;
  uint64_t v7 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v89 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v82 - v10;
  uint64_t v96 = type metadata accessor for ItemMetadata();
  uint64_t v11 = __chkstk_darwin(v96);
  uint64_t v91 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v92 = (uint64_t)&v82 - v13;
  uint64_t v14 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v88 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v82 - v19;
  __chkstk_darwin(v18);
  uint64_t v97 = (uint64_t)&v82 - v21;
  uint64_t v22 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(a1, (uint64_t)v27, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v24 = *v27;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v98(v24);
    swift_errorRelease();
    return sub_10002B770((uint64_t)v24, (uint64_t *)&unk_100ACEC50);
  }
  uint64_t v86 = v24;
  uint64_t v87 = v22;
  uint64_t v29 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v15 + 48);
  if (v29(v27, 1, v14) == 1)
  {
    uint64_t v115 = v94;
    char v116 = v95;
    long long v117 = 0u;
    long long v118 = 0u;
    long long v119 = 0u;
    long long v120 = 0u;
    long long v121 = 0u;
    long long v122 = 0u;
    uint64_t v123 = 0;
    sub_1000D3768((uint64_t)&v115);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v30 = swift_allocError();
    sub_10001AE98((uint64_t)&v115, v31, (uint64_t *)&unk_100ACD9A0);
    uint64_t v32 = v86;
    *uint64_t v86 = v30;
    swift_storeEnumTagMultiPayload();
    v98(v32);
    return sub_10002B770((uint64_t)v32, (uint64_t *)&unk_100ACEC50);
  }
  uint64_t v33 = v15;
  uint64_t v34 = v97;
  sub_10001158C((uint64_t)v27, v97, type metadata accessor for VFSItem);
  uint64_t v35 = v34 + v14[7];
  char v36 = *(unsigned char *)(v35 + *(int *)(v96 + 80));
  sub_1009381C4(v34, (uint64_t)v20, type metadata accessor for VFSItem);
  if (v36)
  {
    int v37 = v20[v14[7]];
    sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
    if (v37 == 1)
    {
      uint64_t v82 = v33;
      uint64_t v83 = v14;
      uint64_t v38 = v34 + v14[9];
      uint64_t v39 = *(void *)v38;
      uint64_t v40 = v34 + v14[14];
      if (*(unsigned char *)(v40 + 4)) {
        int v41 = 0;
      }
      else {
        int v41 = *(_DWORD *)v40;
      }
      int v42 = *(_DWORD *)(v38 + 8);
      int v43 = v93;
      int v44 = (void *)swift_retain();
      if (objc_sync_enter(v44)) {
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v43);
      }
      swift_retain();
      if (objc_sync_exit(v43)) {
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v43);
      }
      swift_release();
      swift_release();
      v110[31] = v39;
      v110[32] = 0;
      int v111 = v41;
      int v112 = v42;
      uint64_t v114 = 0;
      uint64_t v113 = 0;
      int v45 = fpfs_openfdbyhandle();
      if (v45 < 0)
      {
        int v56 = sub_10096B4D0();
        uint64_t v57 = sub_1005970E0(v56, 0, 0, 0xAu);
        swift_willThrow();
      }
      else
      {
        uint64_t v46 = v92;
        int v47 = v45;
        sub_1009381C4(v35, v92, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        *(unsigned char *)(v46 + *(int *)(v96 + 80)) = 0;
        uint64_t v48 = v91;
        sub_1009381C4(v46, v91, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        sub_10002C548((uint64_t)v110);
        uint64_t v49 = sub_10001AE98((uint64_t)v110, (uint64_t)&v115, &qword_100AD0EA0);
        uint64_t v84 = &v82;
        uint64_t v50 = *(const void **)(v43[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
        __chkstk_darwin(v49);
        LODWORD(v96) = v47;
        *((_DWORD *)&v82 - 8) = v47;
        *((_DWORD *)&v82 - 7) = 0;
        *(&v82 - 3) = 0x20000;
        *(&v82 - 2) = (uint64_t)v50;
        *((_DWORD *)&v82 - 2) = v51;
        *((unsigned char *)&v82 - 4) = v52;
        _Block_copy(v50);
        sub_100943F70((uint64_t)&v115, (unint64_t)sub_100938B7C, (unint64_t)(&v82 - 6), v53);
        uint64_t v85 = 0;
        sub_10092D018(v48, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        _Block_release(v50);
        long long v60 = (void *)swift_retain();
        if (objc_sync_enter(v60)) {
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v43);
        }
        uint64_t v61 = v43[20];
        swift_retain();
        int v62 = objc_sync_exit(v43);
        uint64_t v63 = (uint64_t)v90;
        if (v62) {
          sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v43);
        }
        swift_release();
        uint64_t v64 = type metadata accessor for VFSFileTree(0);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v66 = __chkstk_darwin(Strong);
        *(&v82 - 10) = v64;
        *((_DWORD *)&v82 - 18) = v96;
        *(&v82 - 8) = v61;
        *(&v82 - 7) = v66;
        *(&v82 - 6) = v67;
        *((unsigned char *)&v82 - 40) = 2;
        uint64_t v68 = v94;
        *(&v82 - 4) = 0;
        *(&v82 - 3) = v68;
        *((unsigned char *)&v82 - 16) = v95;
        *(&v82 - 1) = 0;
        uint64_t v100 = v69;
        int v101 = v70;
        char v102 = v71;
        uint64_t v72 = v85;
        sub_10094A1CC(v73, (uint64_t)sub_1009381AC, (uint64_t)(&v82 - 12), v63);
        if (!v72)
        {
          swift_release();
          swift_unknownObjectRelease();
          char v75 = v83;
          goto LABEL_27;
        }
        swift_errorRetain();
        LODWORD(v100) = sub_10096A690();
        sub_100045CB4();
        char v74 = sub_10096AA60();
        swift_errorRelease();
        uint64_t v57 = v72;
        if (v74)
        {
          swift_errorRelease();
          char v75 = v83;
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v82 + 56))(v63, 1, 1, v83);
          swift_release();
          swift_unknownObjectRelease();
LABEL_27:
          close(v96);
          uint64_t v76 = v89;
          sub_10002B70C(v63, v89, &qword_100ACB910);
          if (v29((uint64_t *)v76, 1, v75) != 1)
          {
            uint64_t v80 = v88;
            sub_10001158C(v76, v88, type metadata accessor for VFSItem);
            uint64_t v81 = v86;
            sub_1009381C4(v80, (uint64_t)v86, type metadata accessor for VFSItem);
            swift_storeEnumTagMultiPayload();
            v98(v81);
            sub_10002B770((uint64_t)v81, (uint64_t *)&unk_100ACEC50);
            sub_10092D018(v80, type metadata accessor for VFSItem);
            sub_10002B770(v63, &qword_100ACB910);
            sub_10092D018(v92, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
            uint64_t v55 = v97;
            return sub_10092D018(v55, type metadata accessor for VFSItem);
          }
          sub_10002B770(v76, &qword_100ACB910);
          uint64_t v100 = v94;
          LOBYTE(v101) = v95;
          long long v103 = 0u;
          long long v104 = 0u;
          long long v105 = 0u;
          long long v106 = 0u;
          long long v107 = 0u;
          long long v108 = 0u;
          uint64_t v109 = 0;
          sub_1000D3768((uint64_t)&v100);
          sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
          sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
          uint64_t v77 = swift_allocError();
          sub_10001AE98((uint64_t)&v100, v78, (uint64_t *)&unk_100ACD9A0);
          uint64_t v79 = v86;
          *uint64_t v86 = v77;
          swift_storeEnumTagMultiPayload();
          v98(v79);
          sub_10002B770((uint64_t)v79, (uint64_t *)&unk_100ACEC50);
          sub_10002B770(v63, &qword_100ACB910);
          sub_10092D018(v92, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
          goto LABEL_18;
        }
        sub_10092D018(v92, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        swift_release();
        swift_unknownObjectRelease();
        sub_100595FB8(v96);
      }
      os_log_type_t v58 = v98;
      uint64_t v59 = v86;
      *uint64_t v86 = v57;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v58(v59);
      swift_errorRelease();
      sub_10002B770((uint64_t)v59, (uint64_t *)&unk_100ACEC50);
LABEL_18:
      uint64_t v55 = v97;
      return sub_10092D018(v55, type metadata accessor for VFSItem);
    }
  }
  else
  {
    sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
  }
  uint64_t v54 = v86;
  sub_1009381C4(v34, (uint64_t)v86, type metadata accessor for VFSItem);
  swift_storeEnumTagMultiPayload();
  v98(v54);
  sub_10002B770((uint64_t)v54, (uint64_t *)&unk_100ACEC50);
  uint64_t v55 = v34;
  return sub_10092D018(v55, type metadata accessor for VFSItem);
}

uint64_t sub_1009091D8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, int a5, int a6, void *a7)
{
  long long v60 = a7;
  int v63 = a6;
  LODWORD(v65) = a5;
  uint64_t v64 = a4;
  uint64_t v66 = a2;
  uint64_t v62 = type metadata accessor for ItemMetadata();
  uint64_t v9 = __chkstk_darwin(v62);
  uint64_t v58 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v57 - v11;
  uint64_t v12 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v13 = *((void *)v12 - 1);
  __chkstk_darwin(v12);
  uint64_t v61 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(a1, (uint64_t)v23, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    swift_errorRetain();
    v66(v24);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v57 = a3;
  uint64_t v25 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48);
  if (v25(v23, 1, v12) == 1)
  {
    uint64_t v72 = v64;
    char v73 = (char)v65;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    long long v79 = 0u;
    uint64_t v80 = 0;
    sub_1000D3768((uint64_t)&v72);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v26 = swift_allocError();
    sub_10001AE98((uint64_t)&v72, v27, (uint64_t *)&unk_100ACD9A0);
    v66(v26);
    return swift_errorRelease();
  }
  uint64_t v29 = (uint64_t)v23;
  uint64_t v30 = v20;
  sub_10001AE98(v29, (uint64_t)v20, &qword_100ACB910);
  sub_10002B70C((uint64_t)v20, (uint64_t)v18, &qword_100ACB910);
  if (v25((uint64_t *)v18, 1, v12) == 1)
  {
    sub_10002B770((uint64_t)v18, &qword_100ACB910);
    uint64_t v72 = v64;
    char v73 = (char)v65;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    long long v79 = 0u;
    uint64_t v80 = 0;
    sub_1000D3768((uint64_t)&v72);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v31 = swift_allocError();
    sub_10001AE98((uint64_t)&v72, v32, (uint64_t *)&unk_100ACD9A0);
    v66(v31);
    swift_errorRelease();
    uint64_t v33 = (uint64_t)v20;
  }
  else
  {
    uint64_t v34 = (uint64_t)v18;
    uint64_t v35 = v61;
    sub_10001158C(v34, v61, type metadata accessor for VFSItem);
    uint64_t v36 = v35 + v12[7];
    if (*(unsigned __int8 *)(v36 + *(int *)(v62 + 88)) == v63)
    {
      v66(0);
    }
    else
    {
      uint64_t v37 = v35 + v12[9];
      uint64_t v38 = *(void *)v37;
      uint64_t v39 = v35 + v12[14];
      if (*(unsigned char *)(v39 + 4)) {
        int v40 = 0;
      }
      else {
        int v40 = *(_DWORD *)v39;
      }
      int v41 = *(_DWORD *)(v37 + 8);
      int v42 = v60;
      int v43 = (void *)swift_retain();
      if (objc_sync_enter(v43)) {
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v42);
      }
      swift_retain();
      int v44 = objc_sync_exit(v42);
      uint64_t v45 = (uint64_t)v59;
      if (v44) {
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v42);
      }
      swift_release();
      swift_release();
      v67[31] = v38;
      v67[32] = 0;
      int v68 = v40;
      int v69 = v41;
      uint64_t v70 = 0;
      uint64_t v71 = 0;
      int v46 = fpfs_openfdbyhandle();
      if (v46 < 0)
      {
        int v54 = sub_10096B4D0();
        uint64_t v55 = sub_1005970E0(v54, 0, 0, 0xAu);
        swift_willThrow();
        int v56 = v66;
        swift_errorRetain();
        v56(v55);
        swift_errorRelease();
        swift_errorRelease();
      }
      else
      {
        int v47 = v46;
        sub_1009381C4(v36, v45, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        *(unsigned char *)(v45 + *(int *)(v62 + 88)) = v63;
        uint64_t v48 = v58;
        sub_1009381C4(v45, v58, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        sub_10002C548((uint64_t)v67);
        uint64_t v49 = sub_10001AE98((uint64_t)v67, (uint64_t)&v72, &qword_100AD0EA0);
        char v65 = &v57;
        uint64_t v50 = *(const void **)(v60[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
        __chkstk_darwin(v49);
        *((_DWORD *)&v57 - 8) = v47;
        *((_DWORD *)&v57 - 7) = 0;
        *(&v57 - 3) = 0x20000;
        *(&v57 - 2) = (uint64_t)v50;
        *((_DWORD *)&v57 - 2) = v51;
        *((unsigned char *)&v57 - 4) = v52;
        _Block_copy(v50);
        sub_100943F70((uint64_t)&v72, (unint64_t)sub_100938B7C, (unint64_t)(&v57 - 6), v53);
        sub_10092D018(v48, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        _Block_release(v50);
        close(v47);
        v66(0);
        sub_10092D018(v45, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      }
    }
    sub_10092D018(v35, type metadata accessor for VFSItem);
    uint64_t v33 = (uint64_t)v30;
  }
  return sub_10002B770(v33, &qword_100ACB910);
}

uint64_t sub_10090999C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v64 = a7;
  uint64_t v63 = a6;
  int v68 = a5;
  uint64_t v67 = a4;
  int v69 = a2;
  uint64_t v8 = type metadata accessor for VFSItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v65 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v66 = (uint64_t)&v61 - v15;
  uint64_t v16 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v62 = (uint64_t *)((char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v61 - v19);
  uint64_t v21 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(a1, (uint64_t)v23, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v61 = v16;
    uint64_t v24 = v69;
    uint64_t v25 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
    if (v25(v23, 1, v8) == 1)
    {
      uint64_t v70 = v67;
      LOBYTE(v71) = v68;
      long long v72 = 0u;
      long long v73 = 0u;
      long long v74 = 0u;
      long long v75 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      uint64_t v78 = 0;
      sub_1000D3768((uint64_t)&v70);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v26 = swift_allocError();
      sub_10001AE98((uint64_t)&v70, v27, (uint64_t *)&unk_100ACD9A0);
      uint64_t *v20 = v26;
      swift_storeEnumTagMultiPayload();
      v24(v20);
      goto LABEL_5;
    }
    uint64_t v31 = v8;
    uint64_t v32 = v66;
    sub_10001AE98((uint64_t)v23, v66, &qword_100ACB910);
    sub_10002B70C(v32, (uint64_t)v14, &qword_100ACB910);
    if (v25((uint64_t *)v14, 1, v31) == 1)
    {
      sub_10002B770((uint64_t)v14, &qword_100ACB910);
      uint64_t v70 = v67;
      LOBYTE(v71) = v68;
      long long v72 = 0u;
      long long v73 = 0u;
      long long v74 = 0u;
      long long v75 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      uint64_t v78 = 0;
      sub_1000D3768((uint64_t)&v70);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      uint64_t v33 = swift_allocError();
      sub_10001AE98((uint64_t)&v70, v34, (uint64_t *)&unk_100ACD9A0);
      uint64_t *v20 = v33;
      swift_storeEnumTagMultiPayload();
      v24(v20);
      sub_10002B770((uint64_t)v20, (uint64_t *)&unk_100ACEC50);
      uint64_t v29 = v32;
      uint64_t v28 = &qword_100ACB910;
      return sub_10002B770(v29, v28);
    }
    uint64_t v35 = v31;
    uint64_t v36 = v65;
    sub_10001158C((uint64_t)v14, v65, type metadata accessor for VFSItem);
    uint64_t v37 = *(void *)v36;
    uint64_t v38 = *(void *)(v36 + 16);
    int v39 = *(unsigned __int8 *)(v36 + 24);
    if (*(unsigned char *)(v36 + 8))
    {
      int v40 = v64;
      if (*(unsigned char *)(v36 + 8) == 1)
      {
        if (v39 != 1 || v37 != v38)
        {
LABEL_25:
          uint64_t v44 = v35;
          uint64_t v45 = v36 + *(int *)(v35 + 28);
          uint64_t v46 = *(int *)(type metadata accessor for ItemMetadata() + 44);
          if (*(unsigned char *)(v45 + v46) == (v63 & 1))
          {
LABEL_34:
            sub_1009381C4(v36, (uint64_t)v20, type metadata accessor for VFSItem);
            swift_storeEnumTagMultiPayload();
            v24(v20);
LABEL_38:
            uint64_t v43 = (uint64_t)v20;
            goto LABEL_39;
          }
          uint64_t v47 = v36 + *(int *)(v44 + 36);
          uint64_t v48 = *(void *)v47;
          uint64_t v49 = v36 + *(int *)(v44 + 56);
          if (*(unsigned char *)(v49 + 4)) {
            unsigned int v50 = 0;
          }
          else {
            unsigned int v50 = *(_DWORD *)v49;
          }
          unsigned int v51 = *(_DWORD *)(v47 + 8);
          char v52 = (void *)swift_retain();
          if (!objc_sync_enter(v52))
          {
            swift_retain();
            if (objc_sync_exit(v40)) {
              sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v40);
            }
            swift_release();
            swift_release();
            uint64_t v70 = v48;
            uint64_t v71 = 0;
            long long v72 = __PAIR64__(v51, v50);
            *(void *)&long long v73 = 0;
            uint64_t v53 = fpfs_openfdbyhandle();
            if ((v53 & 0x80000000) != 0)
            {
              int v58 = sub_10096B4D0();
              uint64_t v59 = sub_1005970E0(v58, 0, 0, 0xAu);
              swift_willThrow();
              uint64_t v32 = v66;
              uint64_t v36 = v65;
            }
            else
            {
              uint64_t v54 = v53;
              char v55 = v63;
              char v56 = v63 & 1;
              int is_pinned = fpfs_set_is_pinned();
              uint64_t v32 = v66;
              uint64_t v36 = v65;
              if ((is_pinned & 0x80000000) == 0)
              {
                sub_100595FB8(v54);
                *(unsigned char *)(v45 + v46) = v56;
                goto LABEL_34;
              }
              int v60 = sub_10096B4D0();
              uint64_t v59 = sub_1005970E0(v60, v55 & 1, 0, 6u);
              swift_willThrow();
              sub_100595FB8(v54);
            }
            uint64_t *v20 = v59;
            swift_storeEnumTagMultiPayload();
            swift_errorRetain();
            v24(v20);
            swift_errorRelease();
            goto LABEL_38;
          }
LABEL_41:
          sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v40);
        }
      }
      else if (v37)
      {
        if (v39 != 2 || v38 != 1) {
          goto LABEL_25;
        }
      }
      else if (v39 != 2 || v38)
      {
        goto LABEL_25;
      }
    }
    else
    {
      int v40 = v64;
      if (*(unsigned char *)(v36 + 24) || v37 != v38) {
        goto LABEL_25;
      }
    }
    id v41 = (id)FPNotSupportedError();
    if (v41)
    {
      int v42 = v62;
      uint64_t *v62 = (uint64_t)v41;
      swift_storeEnumTagMultiPayload();
      v24(v42);
      uint64_t v43 = (uint64_t)v42;
LABEL_39:
      sub_10002B770(v43, (uint64_t *)&unk_100ACEC50);
      sub_10092D018(v36, type metadata accessor for VFSItem);
      uint64_t v28 = &qword_100ACB910;
      uint64_t v29 = v32;
      return sub_10002B770(v29, v28);
    }
    __break(1u);
    goto LABEL_41;
  }
  uint64_t *v20 = *v23;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  v69(v20);
  swift_errorRelease();
LABEL_5:
  uint64_t v28 = (uint64_t *)&unk_100ACEC50;
  uint64_t v29 = (uint64_t)v20;
  return sub_10002B770(v29, v28);
}

uint64_t sub_10090A198(uint64_t a1, unsigned __int8 *a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v143 = a7;
  LODWORD(v139) = a5;
  uint64_t v141 = a4;
  int v142 = a3;
  long long v149 = a2;
  uint64_t v138 = sub_10096A7B0();
  uint64_t v137 = *(void *)(v138 - 8);
  uint64_t v10 = __chkstk_darwin(v138);
  uint64_t v136 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v135 = (char *)&v123 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v123 - v14;
  long long v150 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v16 = __chkstk_darwin(v150);
  uint64_t v132 = (uint64_t)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v140 = (uint64_t)&v123 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v123 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v148 = (uint64_t)&v123 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v123 - v25;
  uint64_t v27 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v30 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v130 = (uint64_t)&v123 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v131 = (uint64_t)&v123 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v133 = (uint64_t)&v123 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v123 - v37;
  uint64_t v146 = sub_10096AE50();
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v39 = __chkstk_darwin(v146);
  long long v125 = (char *)&v123 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  long long v127 = (char *)&v123 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  long long v128 = (char *)&v123 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v129 = (char *)&v123 - v46;
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v123 - v47;
  uint64_t v49 = (void *)swift_retain();
  if (objc_sync_enter(v49)) {
    goto LABEL_70;
  }
  uint64_t v126 = v30;
  uint64_t v145 = a6;
  uint64_t v50 = a1;
  uint64_t v134 = v15;
  uint64_t v51 = *((void *)v7 + 20);
  swift_retain();
  if (objc_sync_exit(v7)) {
    goto LABEL_71;
  }
  swift_release();
  uint64_t v52 = *(void *)(v51 + 40);
  int v53 = *(unsigned __int8 *)(v51 + 48);
  swift_release();
  uint64_t v54 = v150;
  if (v53) {
    uint64_t v52 = 0;
  }
  if (v149[v150[18]])
  {
    sub_10002B70C(v145, (uint64_t)v38, &qword_100ACA8C0);
    uint64_t v55 = v147;
    uint64_t v56 = v146;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v38, 1, v146) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v48, v38, v56);
      type metadata accessor for NSFileProviderError(0);
      uint64_t v152 = -2008;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100973BB0;
      *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(inited + 40) = v79;
      *(void *)(inited + 72) = v56;
      uint64_t v80 = sub_10009C958((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 16))(v80, v48, v56);
      sub_10004621C(inited);
      sub_1000256AC((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
      sub_10096ABD0();
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v48, v56);
    }
    sub_10002B770((uint64_t)v38, &qword_100ACA8C0);
    type metadata accessor for NSFileProviderError(0);
    uint64_t v152 = -2008;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
    sub_10096ABD0();
    return swift_willThrow();
  }
  sub_1009381C4((uint64_t)v149, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  char v57 = v139 == 6 ? 0 : v139;
  v26[v54[22]] = v57;
  sub_1009381C4((uint64_t)v26, v148, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  int v58 = (void *)swift_retain();
  if (objc_sync_enter(v58)) {
LABEL_70:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v7);
  long long v124 = v26;
  uint64_t v139 = v52;
  uint64_t v59 = *((void *)v7 + 20);
  swift_retain();
  if (objc_sync_exit(v7)) {
LABEL_71:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v7);
  swift_release();
  int v60 = *(const void **)(v59 + 56);
  int v61 = *(_DWORD *)(v59 + 64);
  char v62 = *(unsigned char *)(v59 + 68);
  _Block_copy(v60);
  swift_release();
  uint64_t v63 = v148;
  sub_1009381C4(v148, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  v22[v150[20]] = 1;
  uint64_t v64 = v140;
  uint64_t v65 = sub_1009381C4((uint64_t)v22, v140, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  __chkstk_darwin(v65);
  *((_DWORD *)&v123 - 12) = v50;
  uint64_t v66 = v141;
  *(&v123 - 5) = v139;
  *(&v123 - 4) = v66;
  *((_DWORD *)&v123 - 6) = v142;
  *(&v123 - 2) = (uint64_t)v60;
  *((_DWORD *)&v123 - 2) = v61;
  *((unsigned char *)&v123 - 4) = v62;
  uint64_t v67 = v144;
  sub_100943F70(v143, (unint64_t)sub_10093CBEC, (unint64_t)(&v123 - 8), (uint64_t)&v153.st_blocks);
  if (!v67)
  {
    sub_10092D018(v64, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    sub_10092D018((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    _Block_release(v60);
    sub_10092D018(v63, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    return sub_10092D018((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  }
  sub_10092D018(v64, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_10092D018((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  _Block_release(v60);
  sub_10092D018(v63, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_10092D018((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  swift_errorRetain();
  v153.st_dev = sub_10096A6E0();
  sub_100045CB4();
  char v68 = sub_10096AA60();
  swift_errorRelease();
  if ((v68 & 1) == 0 || *v149 - 1 < 2)
  {
    uint64_t v69 = v50;
    swift_errorRetain();
    v153.st_dev = sub_10096A680();
    char v70 = sub_10096AA60();
    swift_errorRelease();
    uint64_t v71 = v138;
    uint64_t v72 = v147;
    uint64_t v73 = v146;
    if ((v70 & 1) != 0 && *v149 - 1 >= 2)
    {
      swift_errorRelease();
      uint64_t v88 = v131;
      sub_10002B70C(v145, v131, &qword_100ACA8C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v88, 1, v73) != 1)
      {
        uint64_t v7 = v128;
        (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v128, v88, v73);
        sub_10096AD20(v107);
        uint64_t v109 = v108;
        id v110 = (id)FPEvictionOnBusyItemError();

        if (!v110)
        {
          __break(1u);
          goto LABEL_59;
        }
        goto LABEL_50;
      }
      sub_10002B770(v88, &qword_100ACA8C0);
      dev_t v89 = 16;
LABEL_64:
      v153.st_dev = v89;
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      long long v118 = v134;
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v118, v71);
      return swift_willThrow();
    }
    swift_errorRetain();
    v153.st_dev = sub_10096A700();
    char v74 = sub_10096AA60();
    swift_errorRelease();
    if ((v74 & 1) == 0 || *v149 - 1 < 2)
    {
      swift_errorRetain();
      v153.st_dev = sub_10096A710();
      char v75 = sub_10096AA60();
      swift_errorRelease();
      uint64_t v7 = v136;
      if ((v75 & 1) == 0) {
        goto LABEL_35;
      }
      int v76 = *v149;
      if (v76 == 2)
      {
        uint64_t v77 = v132;
        sub_1009381C4((uint64_t)v149, v132, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
LABEL_34:
        sub_10092D018(v77, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        goto LABEL_35;
      }
      uint64_t v77 = v132;
      sub_1009381C4((uint64_t)v149, v132, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      if (v76 == 1) {
        goto LABEL_34;
      }
      char v115 = *(unsigned char *)(v77 + v150[27]);
      sub_10092D018(v77, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
      if (v115)
      {
LABEL_35:
        uint64_t v152 = v67;
        swift_errorRetain();
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        int v95 = v135;
        if (!swift_dynamicCast()) {
          return swift_errorRelease();
        }
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v7, v95, v71);
        sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10096ABA0();
        int v96 = sub_10096B4B0();
        if (v96 != sub_10096B4B0())
        {
          int v97 = sub_10096B4B0();
          if (v97 != sub_10096B4B0())
          {
            int v98 = sub_10096B4B0();
            if (v98 != sub_10096B4B0())
            {
              int v99 = sub_10096B4B0();
              if (v99 != sub_10096B4B0())
              {
LABEL_60:
                (*(void (**)(char *, uint64_t))(v137 + 8))(v7, v71);
                return swift_errorRelease();
              }
            }
          }
        }
        swift_errorRelease();
        int v100 = *v149;
        int v101 = (void *)sub_10096A790();
        if (v100 == 1)
        {
          char v102 = (void *)sub_10096ABE0();

          id v103 = [v102 underlyingErrors];
          uint64_t v104 = sub_10096C0A0();

          if (*(void *)(v104 + 16))
          {
            uint64_t v105 = *(void *)(v104 + 32);
            swift_errorRetain();
            swift_bridgeObjectRelease();
            uint64_t v151 = v105;
            if (swift_dynamicCast())
            {
              if (LOBYTE(v153.st_uid) == 8)
              {
                if ((v153.st_ino & 1) == 0)
                {
                  id v106 = objc_msgSend(self, "fp_nonEvictableChildrenErrorWithFD:trashIno:busyIno:", v69, v139, *(void *)&v153.st_dev);
                  goto LABEL_59;
                }
              }
              else
              {
                sub_100597384(*(uint64_t *)&v153.st_dev, v153.st_ino, v153.st_uid);
              }
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_10096A790();
        }
LABEL_59:
        swift_willThrow();
        goto LABEL_60;
      }
      swift_errorRelease();
      memset(&v153, 0, 28);
      memset(&v153.st_atimespec, 0, 112);
      if (fstat(v69, &v153) < 0)
      {
        int v117 = sub_10096B4D0();
        sub_1005970E0(v117, 4, 0, 0xAu);
        swift_willThrow();
        swift_errorRelease();
        goto LABEL_63;
      }
      if (v153.st_nlink < 2u)
      {
LABEL_63:
        dev_t v89 = 2;
        goto LABEL_64;
      }
      uint64_t v116 = (uint64_t)v126;
      sub_10002B70C(v145, (uint64_t)v126, &qword_100ACA8C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v116, 1, v73) == 1)
      {
        sub_10002B770(v116, &qword_100ACA8C0);
        goto LABEL_63;
      }
      uint64_t v7 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v125, v116, v73);
      sub_10096AD20(v119);
      long long v121 = v120;
      id v122 = (id)FPEvictionOnItemWithHardlinkError();

      if (!v122) {
        __break(1u);
      }
LABEL_50:
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v7, v73);
    }
    swift_errorRelease();
    uint64_t v90 = v130;
    sub_10002B70C(v145, v130, &qword_100ACA8C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v90, 1, v73) == 1)
    {
      sub_10002B770(v90, &qword_100ACA8C0);
      dev_t v89 = 31;
      goto LABEL_64;
    }
    uint64_t v7 = v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v127, v90, v73);
    sub_10096AD20(v111);
    uint64_t v113 = v112;
    id v114 = (id)FPEvictionOnItemWithHardlinkError();

    if (v114) {
      goto LABEL_50;
    }
    goto LABEL_69;
  }
  swift_errorRelease();
  uint64_t v82 = v133;
  sub_10002B70C(v145, v133, &qword_100ACA8C0);
  uint64_t v83 = v147;
  uint64_t v84 = v146;
  int v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v82, 1, v146);
  uint64_t v86 = v138;
  if (v85 != 1)
  {
    uint64_t v7 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v129, v82, v84);
    sub_10096AD20(v91);
    uint64_t v93 = v92;
    id v94 = (id)FPMissingAllowsEvictingCapabilitiesError();

    if (v94)
    {
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v7, v84);
    }
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  sub_10002B770(v82, &qword_100ACA8C0);
  v153.st_dev = 22;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  uint64_t v87 = v134;
  sub_10096ABD0();
  sub_10096A790();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v87, v86);
  return swift_willThrow();
}

uint64_t sub_10090B430(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  int v37 = a2;
  uint64_t v5 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v32 + 64);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for VFSItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11 - 8);
  uint64_t v15 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - v16;
  sub_1009381C4(a1, (uint64_t)&v31 - v16, type metadata accessor for VFSItem);
  VFSItem.fetchURL()(v10);
  Swift::UInt64 v34 = *(void *)a1;
  int v33 = *(unsigned __int8 *)(a1 + 8);
  sub_1009381C4(a1, (uint64_t)v15, type metadata accessor for VFSItem);
  sub_10002B70C((uint64_t)v10, (uint64_t)v8, &qword_100ACA8C0);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (*(unsigned __int8 *)(v32 + 80) + v19 + 9) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v36;
  *(void *)(v21 + 16) = v35;
  *(void *)(v21 + 24) = v22;
  sub_10001158C((uint64_t)v15, v21 + v18, type metadata accessor for VFSItem);
  unint64_t v23 = v21 + v19;
  uint64_t v24 = v38;
  *(void *)unint64_t v23 = v38;
  *(unsigned char *)(v23 + 8) = v37;
  uint64_t v25 = v24;
  sub_10001AE98((uint64_t)v8, v21 + v20, &qword_100ACA8C0);
  swift_retain();
  swift_retain();
  unint64_t v26 = (unint64_t)sub_100930A9C((uint64_t)v10);
  unint64_t v27 = v26;
  if (v26 >> 62) {
    uint64_t v28 = sub_10096CE70();
  }
  else {
    uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v29 = v28 == 0;
  swift_retain();
  sub_10092DE94(v34, v33, v27, v29, v25, (void (*)(void))sub_10093C4D0, v21);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_10002B770((uint64_t)v10, &qword_100ACA8C0);
  return sub_10092D018((uint64_t)v17, type metadata accessor for VFSItem);
}

uint64_t sub_10090B760(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t a7)
{
  if (a1) {
    return a2();
  }
  uint64_t v13 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v14 = (uint64_t *)(a4 + v13[9]);
  uint64_t v15 = *v14;
  uint64_t v16 = (int *)(a4 + v13[14]);
  if (*((unsigned char *)v16 + 4)) {
    int v17 = 0;
  }
  else {
    int v17 = *v16;
  }
  int v18 = *((_DWORD *)v14 + 2);
  unint64_t v19 = (void *)swift_retain();
  if (objc_sync_enter(v19)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a5);
  }
  uint64_t v25 = a7;
  swift_retain();
  if (objc_sync_exit(a5)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a5);
  }
  swift_release();
  swift_release();
  uint64_t v27 = v15;
  uint64_t v28 = 0;
  int v29 = v17;
  int v30 = v18;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v20 = fpfs_openfdbyhandle();
  if ((v20 & 0x80000000) == 0)
  {
    uint64_t v21 = v20;
    uint64_t v22 = (unsigned __int8 *)(a4 + v13[7]);
    sub_10002C548((uint64_t)v26);
    sub_10001AE98((uint64_t)v26, (uint64_t)v33, &qword_100AD0EA0);
    sub_10090A198(v21, v22, 0, 0, a6, v25, (uint64_t)v33);
    sub_100595FB8(v21);
    return a2();
  }
  int v23 = sub_10096B4D0();
  uint64_t v24 = sub_1005970E0(v23, 0, 0, 0xAu);
  swift_willThrow();
  swift_errorRetain();
  ((void (*)(uint64_t))a2)(v24);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10090B988(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28)) == 1)
  {
    dispatch_group_t v9 = dispatch_group_create();
    uint64_t v23 = a3;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v4;
    *(unsigned char *)(v10 + 32) = a2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    uint64_t v12 = v9;
    swift_retain();
    dispatch_group_enter(v12);
    uint64_t v13 = *(void *)a1;
    char v14 = *(unsigned char *)(a1 + 8);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v11;
    *(void *)(v15 + 24) = v12;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_10093C4B4;
    *(void *)(v16 + 24) = v15;
    *(void *)(v16 + 32) = v4;
    *(void *)(v16 + 40) = v13;
    *(unsigned char *)(v16 + 48) = v14;
    *(void *)(v16 + 56) = 0;
    *(void *)(v16 + 64) = 0;
    uint64_t v17 = a4;
    *(void *)(v16 + 72) = sub_10093C46C;
    *(void *)(v16 + 80) = v10;
    int v18 = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10092A65C(v13, v14, 0, (uint64_t)sub_10093C46C, v10, (uint64_t)sub_10093C4C0, v16);
    swift_release();
    swift_release();
    unint64_t v19 = *(void **)(v4 + 216);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v23;
    v20[3] = v17;
    v20[4] = v11;
    swift_retain();
    id v21 = v19;
    swift_retain();
    sub_1006B791C((uint64_t)"_evict(_:evictionReason:completion:)", 36, 2, 0, v21, (uint64_t)sub_100351028, (uint64_t)v20);

    swift_release();
    swift_release();

    return swift_release();
  }
  else
  {
    return sub_10090B430(a1, a2, a3, a4);
  }
}

uint64_t sub_10090BC18(uint64_t a1, NSObject *a2, void *a3, int a4)
{
  int v164 = a4;
  uint64_t v172 = a2;
  uint64_t v132 = sub_10096A7B0();
  uint64_t v6 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v131 = (char *)v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100AD0F80);
  __chkstk_darwin(v8 - 8);
  uint64_t v166 = (char *)v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10096AE50();
  uint64_t v173 = *(void *)(v168 - 8);
  uint64_t v10 = __chkstk_darwin(v168);
  uint64_t v130 = (char *)v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v136 = (char *)v124 - v13;
  __chkstk_darwin(v12);
  uint64_t v133 = (char *)v124 - v14;
  uint64_t v154 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v15 = *(void *)(v154 - 8);
  uint64_t v16 = __chkstk_darwin(v154);
  uint64_t v139 = (uint64_t)v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v152 = (uint64_t)v124 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v151 = (uint64_t)v124 - v21;
  uint64_t v153 = v22;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v124 - v23;
  uint64_t v25 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v25 - 8);
  uint64_t v163 = (uint64_t)v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v28 = *((void *)v27 - 1);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v150 = (uint64_t)v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v167 = (uint64_t)v124 - v32;
  __chkstk_darwin(v31);
  uint64_t v165 = (char *)v124 - v33;
  if (*(void *)(a1 + 16))
  {
    uint64_t v171 = *(void *)(a1 + 16);
    uint64_t v148 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v34 = (v148 + 32) & ~v148;
    uint64_t v35 = a1 + v34;
    uint64_t v170 = v6;
    uint64_t v36 = (char *)a3 + qword_100B0B640;
    v124[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v146 = v36;
    swift_beginAccess();
    uint64_t v155 = 0;
    uint64_t v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    uint64_t v161 = *(void *)(v28 + 72);
    char v157 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48);
    uint64_t v140 = (void (**)(char *, uint64_t, uint64_t))(v173 + 32);
    uint64_t v141 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56);
    uint64_t v138 = &v183;
    uint64_t v137 = &v179;
    uint64_t v129 = (void (**)(uint64_t, char *, uint64_t))(v173 + 16);
    uint64_t v149 = v15;
    long long v128 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
    NSErrorUserInfoKey v127 = NSUnderlyingErrorKey;
    uint64_t v126 = (void (**)(char *, uint64_t))(v170 + 8);
    uint64_t v147 = v34;
    unint64_t v37 = (v29 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v143 = v37 + 8;
    unint64_t v144 = v37;
    unint64_t v142 = v37 + 9;
    uint64_t v135 = (void (**)(char *, uint64_t))(v173 + 8);
    long long v125 = xmmword_100973BB0;
    long long v134 = xmmword_100974D40;
    uint64_t v38 = (uint64_t)v166;
    uint64_t v39 = v168;
    Swift::UInt64 v156 = v24;
    uint64_t v162 = v27;
    uint64_t v40 = (uint64_t)v165;
    uint64_t v169 = a3;
    while (1)
    {
      sub_1009381C4(v35, v40, type metadata accessor for VFSItem);
      uint64_t v44 = v172;
      dispatch_group_enter(v172);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v44;
      BOOL v43 = *(unsigned char *)(v40 + v27[7]) == 1;
      uint64_t v170 = v35;
      uint64_t v173 = v45;
      if (v43)
      {
        uint64_t v46 = v172;
        dispatch_group_t v47 = dispatch_group_create();
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v47;
        *(void *)(v48 + 24) = a3;
        *(unsigned char *)(v48 + 32) = v164;
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = 0;
        uint64_t v50 = v47;
        swift_retain();
        dispatch_group_enter(v50);
        Swift::UInt64 v51 = *(void *)v40;
        char v52 = *(unsigned char *)(v40 + 8);
        uint64_t v53 = swift_allocObject();
        uint64_t v160 = v49;
        *(void *)(v53 + 16) = v49;
        *(void *)(v53 + 24) = v50;
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = sub_10093E170;
        *(void *)(v54 + 24) = v53;
        *(void *)(v54 + 32) = a3;
        *(void *)(v54 + 40) = v51;
        *(unsigned char *)(v54 + 48) = v52;
        *(void *)(v54 + 56) = 0;
        *(void *)(v54 + 64) = 0;
        *(void *)(v54 + 72) = sub_10093E0BC;
        *(void *)(v54 + 80) = v48;
        uint64_t v55 = *((void *)v146 + 1);
        BOOL v56 = __CFADD__(v55, 1);
        uint64_t v57 = v55 + 1;
        if (v56) {
          __break(1u);
        }
        uint64_t v58 = v54;
        *((void *)v146 + 1) = v57;
        uint64_t v59 = a3[28];
        id v158 = (id)a3[27];
        uint64_t v60 = sub_10096B7D0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v163, 1, 1, v60);
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = sub_10093C4C0;
        *(void *)(v61 + 24) = v58;
        uint64_t v62 = swift_allocObject();
        *(void *)(v62 + 16) = v169;
        *(void *)(v62 + 24) = v51;
        *(unsigned char *)(v62 + 32) = v52;
        *(void *)(v62 + 40) = sub_10093C4C0;
        *(void *)(v62 + 48) = v58;
        *(void *)(v62 + 56) = 0;
        *(void *)(v62 + 64) = sub_10093E0BC;
        *(void *)(v62 + 72) = v48;
        uint64_t v63 = (void *)swift_allocObject();
        v63[2] = sub_10021E33C;
        v63[3] = v61;
        v63[4] = v59;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        uint64_t v159 = v50;
        Swift::UInt64 v64 = v160;
        swift_retain();
        swift_retain();
        id v65 = v158;
        swift_retain();
        swift_retain();
        uint64_t v66 = v163;
        sub_1003946CC(v65, v163, (void (*)())sub_10093C5C8, v63, (uint64_t)sub_10093C5C0, v62);

        uint64_t v67 = v156;
        swift_release();
        a3 = v169;
        swift_release();
        swift_release();
        sub_10002B770(v66, (uint64_t *)&unk_100ACF600);
        swift_release();
        uint64_t v24 = v67;
        swift_release();
        char v68 = (void *)a3[27];
        uint64_t v69 = (void *)swift_allocObject();
        uint64_t v70 = v173;
        v69[2] = sub_100353E20;
        v69[3] = v70;
        v69[4] = v64;
        swift_retain();
        id v71 = v68;
        swift_retain();
        uint64_t v72 = v159;
        sub_1006B791C((uint64_t)"_evict(_:evictionReason:completion:)", 36, 2, 0, v71, (uint64_t)sub_10093E164, (uint64_t)v69);
        swift_release();

        swift_release();
        swift_release();

        swift_release();
        uint64_t v38 = (uint64_t)v166;
        uint64_t v39 = v168;
        uint64_t v40 = (uint64_t)v165;
        goto LABEL_7;
      }
      uint64_t v73 = v167;
      sub_1009381C4(v40, v167, type metadata accessor for VFSItem);
      uint64_t v74 = v73 + v27[12];
      char v75 = &qword_100AD0F80;
      sub_10002B70C(v74, v38, &qword_100AD0F80);
      if ((*v145)(v38, 1, v154) == 1) {
        break;
      }
      char v75 = &qword_100ACA8C0;
      if ((*v157)(v38, 1, v39) == 1) {
        break;
      }
      int v100 = *v140;
      int v101 = v133;
      (*v140)(v133, v38, v39);
      v100(v24, (uint64_t)v101, v39);
      (*v141)((uint64_t)v24, 0, 1, v39);
      char v102 = v172;
LABEL_30:
      uint64_t v160 = *(void *)v40;
      int v108 = *(unsigned __int8 *)(v40 + 8);
      uint64_t v109 = v40;
      uint64_t v110 = v150;
      sub_1009381C4(v109, v150, type metadata accessor for VFSItem);
      uint64_t v111 = v151;
      sub_10002B70C((uint64_t)v24, v151, &qword_100ACA8C0);
      unint64_t v112 = (v142 + *(unsigned __int8 *)(v149 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
      uint64_t v113 = swift_allocObject();
      uint64_t v114 = v173;
      *(void *)(v113 + 16) = sub_100353E20;
      *(void *)(v113 + 24) = v114;
      sub_10001158C(v110, v113 + v147, type metadata accessor for VFSItem);
      *(void *)(v113 + v144) = a3;
      *(unsigned char *)(v113 + v143) = v164;
      sub_10001AE98(v111, v113 + v112, &qword_100ACA8C0);
      uint64_t v115 = v152;
      sub_10002B70C((uint64_t)v24, v152, &qword_100ACA8C0);
      if ((*v157)(v115, 1, v39) == 1)
      {
        swift_retain();
        swift_retain();
        sub_10002B770(v115, &qword_100ACA8C0);
        unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v116 = v136;
        (*v140)(v136, v115, v39);
        sub_10002B7CC(&qword_100ACAF70);
        uint64_t v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = v134;
        long long v118 = self;
        swift_retain();
        swift_retain();
        sub_10096AD20(v119);
        long long v121 = v120;
        id v122 = [v118 writingIntentWithURL:v120 options:0x100000];

        *(void *)(v117 + 32) = v122;
        uint64_t v39 = v168;
        unint64_t v175 = v117;
        sub_10096C0C0();
        unint64_t v41 = v175;
        uint64_t v24 = v156;
        (*v135)(v116, v39);
      }
      uint64_t v40 = (uint64_t)v165;
      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_retain();
      sub_10092DE94(v160, v108, v41, v42 == 0, a3, (void (*)(void))sub_10093C4D0, v113);
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_10002B770((uint64_t)v24, &qword_100ACA8C0);
      sub_10092D018(v167, type metadata accessor for VFSItem);
      swift_release();
      uint64_t v38 = (uint64_t)v166;
LABEL_7:
      sub_10092D018(v40, type metadata accessor for VFSItem);
      uint64_t v35 = v170 + v161;
      BOOL v43 = v171-- == 1;
      uint64_t v27 = v162;
      if (v43)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    int v76 = v172;
    sub_10002B770(v38, v75);
    uint64_t v77 = v167;
    uint64_t v78 = v167 + v27[9];
    uint64_t v79 = *(void *)v78;
    uint64_t v80 = v27[13];
    uint64_t v81 = (int *)(v167 + v27[14]);
    if (*((unsigned char *)v81 + 4)) {
      int v82 = 0;
    }
    else {
      int v82 = *v81;
    }
    int v83 = *(_DWORD *)(v78 + 8);
    v180[0] = v79;
    v180[1] = 0;
    int v181 = v82;
    int v182 = v83;
    uint64_t v84 = v138;
    *(void *)uint64_t v138 = 0;
    *((void *)v84 + 1) = 0;
    int v85 = *(unsigned __int8 *)(v77 + v27[7]);
    int v86 = *(_DWORD *)(v77 + v80);
    unint64_t v175 = v79;
    uint64_t v176 = 0;
    int v177 = v82;
    int v178 = v83;
    uint64_t v87 = v137;
    *(void *)uint64_t v137 = 0;
    *((void *)v87 + 1) = 0;
    uint64_t v88 = fpfs_openfdbyhandle();
    if ((v88 & 0x80000000) != 0)
    {
      if (!sub_10096B4D0() || (uint64_t v95 = sub_10096B4A0(), (v95 & 0x100000000) != 0))
      {
        sub_100358858();
        swift_allocError();
        *(void *)uint64_t v103 = 0;
        *(void *)(v103 + 8) = 0;
        *(unsigned char *)(v103 + 16) = 10;
      }
      else
      {
        int v174 = v95;
        sub_10002B7CC(&qword_100ACE1E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v125;
        *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        *(void *)(inited + 40) = v97;
        *(void *)(inited + 72) = &type metadata for VFSFileError;
        *(void *)(inited + 48) = 0;
        *(void *)(inited + 56) = 0;
        *(unsigned char *)(inited + 64) = 10;
        sub_10004621C(inited);
        sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        int v98 = v131;
        uint64_t v99 = v132;
        sub_10096ABD0();
        sub_10096A790();
        (*v126)(v98, v99);
      }
      uint64_t v104 = v141;
      swift_willThrow();
      swift_errorRetain();
      LODWORD(v175) = sub_10096A6F0();
      sub_100045CB4();
      sub_10096AA60();
      swift_errorRelease();
      swift_errorRelease();
      id v94 = *v104;
      uint64_t v91 = v139;
      uint64_t v39 = v168;
      (*v104)(v139, 1, 1, v168);
    }
    else
    {
      uint64_t v89 = v88;
      BOOL v90 = v85 == 1;
      uint64_t v91 = v139;
      int v92 = v86;
      uint64_t v93 = v155;
      sub_10044120C(v88, v180, v92, v90, v139);
      if (!v93)
      {
        uint64_t v155 = 0;
        sub_100595FB8(v89);
        id v94 = *v141;
        uint64_t v39 = v168;
        (*v141)(v91, 0, 1, v168);
        if ((*v157)(v91, 1, v39) != 1)
        {
          uint64_t v105 = *v140;
          uint64_t v106 = v91;
          long long v107 = v130;
          (*v140)(v130, v106, v168);
          sub_10002B770(v74, &qword_100AD0F80);
          (*v129)(v74, v107, v168);
          v94(v74, 0, 1, v168);
          (*v128)(v74, 0, 1, v154);
          v105(v24, (uint64_t)v107, v168);
          uint64_t v39 = v168;
          v94((uint64_t)v24, 0, 1, v168);
          goto LABEL_30;
        }
        goto LABEL_27;
      }
      sub_100595FB8(v89);
      swift_errorRelease();
      id v94 = *v141;
      uint64_t v39 = v168;
      (*v141)(v91, 1, 1, v168);
    }
    uint64_t v155 = 0;
LABEL_27:
    sub_10002B770(v91, &qword_100ACA8C0);
    v94((uint64_t)v24, 1, 1, v39);
    goto LABEL_30;
  }
  return 0;
}

void sub_10090CFA4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(void *)(a2 + 16) = a1;
  swift_errorRetain();
  swift_errorRelease();
  dispatch_group_leave(a3);
}

id sub_10090D010(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v31 = a2;
  uint64_t v8 = type metadata accessor for VFSItem(0);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v30 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v13;
  id v32 = [self discreteProgressWithTotalUnitCount:1];
  [v32 setCancellable:0];
  uint64_t v14 = *(void *)(v4 + 224);
  id v28 = *(id *)(v4 + 216);
  uint64_t v15 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = a3;
  sub_1009381C4(a1, (uint64_t)v10, type metadata accessor for VFSItem);
  unint64_t v18 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v19 = v18 + v9;
  unint64_t v20 = (v18 + v9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  unint64_t v22 = v20 + v21;
  *(void *)(v21 + 16) = v4;
  sub_10001158C((uint64_t)v10, v21 + v18, type metadata accessor for VFSItem);
  *(unsigned char *)(v21 + v19) = v31;
  *(void *)(v22 + 8) = v17;
  *(void *)(v22 + 16) = a4;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = sub_1000DEB20;
  v23[3] = v16;
  v23[4] = v14;
  swift_retain_n();
  id v24 = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = (uint64_t)v29;
  sub_1003946CC(v24, (uint64_t)v29, (void (*)())sub_100248430, v23, (uint64_t)sub_100938698, v21);

  swift_release();
  swift_release();
  swift_release();
  sub_10002B770(v25, (uint64_t *)&unk_100ACF600);
  return v32;
}

uint64_t sub_10090D318(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for VFSItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  sub_1009381C4(a2, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VFSItem);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  sub_10001158C((uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for VFSItem);
  uint64_t v14 = (void *)(v13 + ((v11 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v14 = a4;
  v14[1] = a5;
  swift_retain();
  sub_10090B988(a2, a3, (uint64_t)sub_100938AA4, v13);
  return swift_release();
}

uint64_t sub_10090D488(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for VFSItem(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B480();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    id v15 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_1009381C4(a2, (uint64_t)v10, type metadata accessor for VFSItem);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = sub_10096B470();
    os_log_type_t v17 = sub_10096C5B0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v28 = a4;
      uint64_t v19 = v18;
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v20 = VFSItemID.parseableString.getter(*(void *)v10, v10[8]);
      uint64_t v27 = v11;
      uint64_t v31 = sub_100719D44(v20, v21, &v32);
      uint64_t v29 = a3;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10092D018((uint64_t)v10, type metadata accessor for VFSItem);
      *(_WORD *)(v19 + 12) = 2112;
      swift_getErrorValue();
      id v22 = Error.prettyDescription.getter(v30);
      uint64_t v31 = (uint64_t)v22;
      a3 = v29;
      sub_10096C8C0();
      *uint64_t v25 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Eviction of %{public}s failed with %@", (uint8_t *)v19, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
    }
    else
    {
      swift_errorRelease();
      sub_10092D018((uint64_t)v10, type metadata accessor for VFSItem);
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return a3(a1);
}

uint64_t sub_10090D828(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, void *a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    swift_errorRetain();
    a3(a1);
    return sub_10093CDB8(a1, 1, (uint64_t (*)(void))&_swift_release);
  }
  else if (a1)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a3;
    *(void *)(v18 + 24) = a4;
    *(void *)(v18 + 32) = a5;
    *(void *)(v18 + 40) = a6;
    *(unsigned char *)(v18 + 48) = a7;
    *(void *)(v18 + 56) = a8;
    *(void *)(v18 + 64) = a9;
    *(void *)(v18 + 72) = a10;
    *(void *)(v18 + 80) = a11;
    sub_1000D5B30(a1, 0);
    sub_1000D5B30(a1, 0);
    id v19 = a9;
    swift_retain();
    swift_retain();
    swift_retain();
    id v20 = a8;
    sub_10092A65C(a6, a7, a1, a10, a11, (uint64_t)sub_10093C4C0, v18);
    swift_release();
    sub_10093CDB8(a1, 0, (uint64_t (*)(void))&_swift_release);
    return sub_10093CDB8(a1, 0, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    return ((uint64_t (*)(void))a3)(0);
  }
}

Swift::Void __swiftcall VFSFileTree.killTombstone()()
{
}

uint64_t sub_10090D9E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = (void *)swift_retain();
  sub_1008458A4(v6, (uint64_t)v6, a1, a2);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v7;
  *(void *)(result + 24) = a1;
  *(unsigned char *)(result + 32) = a2;
  *a3 = sub_10093DD14;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_10090DA90(uint64_t a1, Swift::UInt64 a2, char a3)
{
  uint64_t v5 = (uint64_t *)(a1 + qword_100ADE770);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (v8)
  {
    uint64_t result = sub_10031F858(a2, a3);
    if (v9) {
      uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * result);
    }
    else {
      uint64_t v8 = 0;
    }
  }
  uint64_t v10 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v5;
    uint64_t *v5 = 0x8000000000000000;
    sub_10038D184(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v5 = v12;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10090DB88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_10096B730();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096B7D0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v21 = v10;
    id v15 = *(void **)(result + 216);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = a2;
    *(unsigned char *)(v16 + 32) = a3;
    aBlock[4] = sub_10093DD20;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100020480;
    aBlock[3] = &unk_100AA5D38;
    os_log_type_t v17 = _Block_copy(aBlock);
    uint64_t v20 = v9;
    uint64_t v18 = v17;
    id v19 = v15;
    swift_retain();
    sub_10096B780();
    id v22 = _swiftEmptyArrayStorage;
    sub_1000256AC((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
    sub_100025500((unint64_t *)&qword_100ACAF00, (uint64_t *)&unk_100ACB5C0);
    sub_10096CA60();
    sub_10096C6B0();
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_10090DE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_retain();
  sub_1008458D0(v6, (uint64_t)v6, a2, a3);
  uint64_t v7 = a1 + qword_100ADE770;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v7 + 16))
  {
    uint64_t v9 = *(void (**)(uint64_t))(a1 + 64);
    if (v9)
    {
      uint64_t v10 = swift_retain();
      v9(v10);
      return sub_1000705CC((uint64_t)v9);
    }
  }
  return result;
}

uint64_t sub_10090DF38(uint64_t a1, Swift::UInt64 a2, unint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + qword_100ADE770);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(*v5 + 16) || (unint64_t v7 = sub_10031F858(a2, a3), (v8 & 1) == 0)) {
    sub_100719218((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 128, 2, 3359, a2, a3);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  uint64_t v10 = v9 - 1;
  if (v9 != 1)
  {
    if (!__OFSUB__(v9, 1))
    {
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v5;
      uint64_t *v5 = 0x8000000000000000;
      sub_10038D184(v10, a2, a3, isUniquelyReferenced_nonNull_native);
      uint64_t *v5 = v18;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  unint64_t v11 = sub_10031F858(a2, a3);
  if (v12)
  {
    a3 = v11;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v5;
    uint64_t v17 = *v5;
    uint64_t *v5 = 0x8000000000000000;
    if (v13)
    {
LABEL_6:
      sub_10091AA80(a3, v14);
      uint64_t *v5 = v14;
LABEL_9:
      swift_bridgeObjectRelease();
      return swift_endAccess();
    }
LABEL_12:
    sub_100920DA0();
    uint64_t v14 = v17;
    goto LABEL_6;
  }
  return swift_endAccess();
}

BOOL sub_10090E0C0()
{
  Swift::String v1 = (void *)swift_retain();
  if (objc_sync_enter(v1)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v0);
  }
  uint64_t v2 = &v0[qword_100ADE770];
  swift_beginAccess();
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (objc_sync_exit(v0)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v0);
  }
  swift_release();
  return v3 != 0;
}

uint64_t sub_10090E178(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, unsigned int a4, void *a5, uint64_t a6, int a7)
{
  int v85 = a7;
  uint64_t v84 = a6;
  uint64_t v91 = a5;
  unsigned int v92 = a4;
  id v94 = a2;
  uint64_t v9 = sub_10096B480();
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v88 = v9;
  __chkstk_darwin(v9);
  BOOL v90 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VFSItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v89 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v83 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v83 - v19;
  __chkstk_darwin(v18);
  uint64_t v93 = (uint64_t)&v83 - v21;
  uint64_t v22 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(a1, (uint64_t)v24, (uint64_t *)&unk_100ACEC90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *v24;
    swift_errorRetain();
    v94(v25);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v86 = a3;
  uint64_t v27 = (uint64_t (*)(uint64_t))v94;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v24, 1, v11) == 1) {
    return v27(0);
  }
  uint64_t v28 = v11;
  uint64_t v29 = v93;
  sub_10001158C((uint64_t)v24, v93, type metadata accessor for VFSItem);
  uint64_t v30 = v29 + *(int *)(v11 + 28);
  uint64_t v31 = type metadata accessor for ItemMetadata();
  LODWORD(v30) = *(unsigned __int8 *)(v30 + *(int *)(v31 + 84));
  sub_1009381C4(v29, (uint64_t)v20, type metadata accessor for VFSItem);
  if (v30)
  {
    sub_10092D018((uint64_t)v20, type metadata accessor for VFSItem);
    goto LABEL_7;
  }
  sub_10001158C((uint64_t)v20, (uint64_t)v17, type metadata accessor for VFSItem);
  if (v92)
  {
    char v60 = v17[*(int *)(v11 + 28) + *(int *)(v31 + 60)];
    sub_10092D018((uint64_t)v17, type metadata accessor for VFSItem);
    if ((v60 & 1) == 0)
    {
LABEL_7:
      uint64_t v32 = *(void *)v29;
      uint64_t v33 = v29 + *(int *)(v11 + 36);
      uint64_t v34 = *(void *)v33;
      uint64_t v35 = *(unsigned int *)(v33 + 8);
      uint64_t v36 = *(void *)(v33 + 16);
      uint64_t v37 = *(unsigned __int8 *)(v33 + 24);
      uint64_t v38 = *(void *)(v29 + 16);
      uint64_t v39 = *(unsigned __int8 *)(v29 + 24);
      uint64_t v40 = *(void *)(v29 + 32);
      uint64_t v41 = *(void *)(v29 + 40);
      v109[0] = v34;
      v109[1] = v35;
      v109[2] = v36;
      v109[3] = v37;
      v109[4] = 0;
      v109[5] = v38;
      v109[6] = v39;
      v109[7] = v40;
      char v42 = *(unsigned char *)(v29 + 8);
      v109[8] = v41;
      memset(&v109[9], 0, 24);
      swift_bridgeObjectRetain();
      BOOL v43 = v91;
      sub_1008E3FC4(v32, v42, (uint64_t)v109, (uint64_t)&v105);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v44 = (void *)swift_retain();
      if (objc_sync_enter(v44)) {
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v43);
      }
      uint64_t v83 = v28;
      uint64_t v45 = v43[20];
      swift_retain();
      if (objc_sync_exit(v43)) {
        sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v43);
      }
      swift_release();
      int v46 = *(_DWORD *)(v45 + 16);
      uint64_t v47 = swift_release();
      __chkstk_darwin(v47);
      *((_DWORD *)&v83 - 4) = v46;
      *((_DWORD *)&v83 - 3) = 0x200000;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      long long v48 = v105;
      long long v101 = v105;
      unsigned int v49 = v106;
      unsigned int v50 = HIDWORD(v106);
      unint64_t v102 = v106;
      sub_10001AE98((uint64_t)&v107, (uint64_t)v108, &qword_100ADF5E0);
      uint64_t v51 = sub_10001AE98((uint64_t)v108, (uint64_t)v110, &qword_100ADF5E0);
      if (v110[1])
      {
        uint64_t v52 = __chkstk_darwin(v51);
        *(&v83 - 4) = (uint64_t)&v101;
        *(&v83 - 3) = (uint64_t)sub_10021E510;
        *(&v83 - 2) = (uint64_t)(&v83 - 4);
        if ((v54 & 0x1000000000000000) != 0 || !(v54 & 0x2000000000000000 | v53 & 0x1000000000000000))
        {
          sub_10096CBC0();
          sub_10021E550((uint64_t)&v105);
          uint64_t v66 = v96;
          goto LABEL_26;
        }
        __chkstk_darwin(v52);
        *(&v83 - 2) = (uint64_t)sub_10021E964;
        *(&v83 - 1) = v57;
        if ((v56 & 0x2000000000000000) == 0)
        {
          if ((v55 & 0x1000000000000000) != 0)
          {
            uint64_t v58 = (v56 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v59 = v55 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v58 = sub_10096CC90();
          }
          uint64_t v66 = (uint64_t)sub_100441D24(v58, v59, (void *(*)(uint64_t *__return_ptr))sub_10021E984);
          sub_10021E550((uint64_t)&v105);
LABEL_26:
          uint64_t v67 = v93;
          uint64_t v68 = v89;
          sub_1009381C4(v93, v89, type metadata accessor for VFSItem);
          uint64_t v69 = v90;
          if (v92)
          {
            int v70 = *(unsigned __int8 *)(v68 + *(int *)(v83 + 28));
            sub_10092D018(v68, type metadata accessor for VFSItem);
            if (v70 == 1)
            {
              id v71 = (id)fpfs_current_or_default_log();
              sub_10096B490();
              uint64_t v72 = sub_10096B470();
              os_log_type_t v73 = sub_10096C590();
              if (os_log_type_enabled(v72, v73))
              {
                uint64_t v74 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long v101 = swift_slowAlloc();
                *(_DWORD *)uint64_t v74 = 136446210;
                uint64_t v75 = VFSItemID.parseableString.getter(v84, v85);
                unsigned int v92 = v66;
                *(void *)&long long v97 = sub_100719D44(v75, v76, (uint64_t *)&v101);
                uint64_t v67 = v93;
                sub_10096C8C0();
                uint64_t v66 = v92;
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v72, v73, "marking sync root bit for folder %{public}s", v74, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v88);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v87 + 8))(v69, v88);
              }
              if ((fpfs_fset_syncroot() & 0x80000000) != 0)
              {
                int v77 = sub_10096B4D0();
                uint64_t v78 = 1;
                unsigned __int8 v79 = 4;
                goto LABEL_36;
              }
              if ((fpfs_make_fsevent() & 0x80000000) != 0)
              {
                int v77 = sub_10096B4D0();
                uint64_t v78 = 17;
LABEL_35:
                unsigned __int8 v79 = 10;
LABEL_36:
                uint64_t v65 = sub_1005970E0(v77, v78, 0, v79);
                swift_willThrow();
                sub_100595FB8(v66);
                goto LABEL_39;
              }
            }
          }
          else
          {
            sub_10092D018(v68, type metadata accessor for VFSItem);
          }
          if ((fpfs_unset_evictable() & 0x80000000) == 0)
          {
            if ((v66 & 0x80000000) == 0) {
              close(v66);
            }
            goto LABEL_42;
          }
          int v77 = sub_10096B4D0();
          uint64_t v78 = 22;
          goto LABEL_35;
        }
        v95[0] = v55;
        v95[1] = v56 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v103 = v95;
        long long v97 = v101;
        unint64_t v98 = v102;
        uint64_t v99 = v95;
        uint64_t v100 = v104;
        uint64_t v62 = fpfs_openfdbyhandle();
        if ((v62 & 0x80000000) == 0)
        {
          uint64_t v66 = v62;
          sub_10021E550((uint64_t)&v105);
          goto LABEL_26;
        }
        int v80 = sub_10096B4D0();
        uint64_t v65 = sub_1005970E0(v80, 0, 0, 0xAu);
        swift_willThrow();
        sub_10021E550((uint64_t)&v105);
      }
      else
      {
        uint64_t v103 = 0;
        long long v97 = v48;
        unint64_t v98 = __PAIR64__(v50, v49);
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        uint64_t v61 = fpfs_openfdbyhandle();
        if ((v61 & 0x80000000) == 0)
        {
          uint64_t v66 = v61;
          goto LABEL_26;
        }
        int v64 = sub_10096B4D0();
        uint64_t v65 = sub_1005970E0(v64, 0, 0, 0xAu);
        swift_willThrow();
      }
      uint64_t v67 = v93;
LABEL_39:
      swift_errorRetain();
      LODWORD(v101) = sub_10096A710();
      sub_100045CB4();
      char v81 = sub_10096AA60();
      swift_errorRelease();
      if ((v81 & 1) == 0)
      {
        swift_errorRetain();
        LODWORD(v101) = sub_10096A760();
        char v82 = sub_10096AA60();
        swift_errorRelease();
        if ((v82 & 1) == 0)
        {
          swift_errorRetain();
          v27(v65);
          swift_errorRelease();
          swift_errorRelease();
          goto LABEL_43;
        }
      }
      swift_errorRelease();
LABEL_42:
      v27(0);
LABEL_43:
      uint64_t v63 = v67;
      return sub_10092D018(v63, type metadata accessor for VFSItem);
    }
  }
  else
  {
    sub_10092D018((uint64_t)v17, type metadata accessor for VFSItem);
  }
  v27(0);
  uint64_t v63 = v29;
  return sub_10092D018(v63, type metadata accessor for VFSItem);
}

uint64_t sub_10090EC48(Swift::UInt64 a1, unsigned __int8 a2, void (*a3)(uint64_t *), uint64_t a4, void *a5)
{
  Swift::UInt64 v122 = a1;
  int v8 = a2;
  uint64_t v9 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v102 - v13;
  uint64_t v113 = sub_10096AE50();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v15 = __chkstk_darwin(v113);
  uint64_t v110 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v111 = (char *)&v102 - v17;
  uint64_t v120 = type metadata accessor for VFSItem(0);
  uint64_t v119 = *(void *)(v120 - 8);
  uint64_t v18 = __chkstk_darwin(v120);
  uint64_t v114 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v116 = (uint64_t)&v102 - v20;
  uint64_t v21 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v117 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v102 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v121 = (uint64_t)&v102 - v31;
  __chkstk_darwin(v30);
  uint64_t v118 = (uint64_t)&v102 - v32;
  uint64_t v123 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  uint64_t v33 = __chkstk_darwin(v123);
  uint64_t v35 = (uint64_t *)((char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33);
  uint64_t v37 = (uint64_t *)((char *)&v102 - v36);
  if (v8 != 1)
  {
    id v50 = (id)FPNotSupportedError();
    if (v50)
    {
      *uint64_t v37 = (uint64_t)v50;
      swift_storeEnumTagMultiPayload();
      a3(v37);
      uint64_t v51 = (uint64_t *)&unk_100ACEC50;
      uint64_t v52 = (uint64_t)v37;
      return sub_10002B770(v52, v51);
    }
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v38 = (void *)swift_retain();
  if (objc_sync_enter(v38)) {
    goto LABEL_39;
  }
  swift_retain();
  if (objc_sync_exit(a5)) {
    goto LABEL_40;
  }
  swift_release();
  swift_release();
  v125[0] = v122;
  memset(&v125[1], 0, 32);
  Swift::Int32 v39 = fpfs_openfdbyhandle();
  uint64_t v115 = a4;
  if (v39 < 0)
  {
    int v53 = sub_10096B4D0();
    uint64_t v54 = sub_1005970E0(v53, 0, 0, 0xAu);
    swift_willThrow();
LABEL_23:
    *uint64_t v35 = v54;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a3(v35);
    swift_errorRelease();
    uint64_t v51 = (uint64_t *)&unk_100ACEC50;
    uint64_t v52 = (uint64_t)v35;
    return sub_10002B770(v52, v51);
  }
  Swift::Int32 v40 = v39;
  int v108 = a3;
  uint64_t v41 = (void *)swift_retain();
  if (objc_sync_enter(v41)) {
LABEL_39:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a5);
  Swift::Int32 v109 = v40;
  uint64_t v42 = a5[20];
  swift_retain();
  int v43 = objc_sync_exit(a5);
  uint64_t v44 = v121;
  if (v43) {
    goto LABEL_40;
  }
  swift_release();
  uint64_t v45 = type metadata accessor for VFSFileTree(0);
  uint64_t v107 = __chkstk_darwin(v45);
  *(&v102 - 10) = (unsigned int (*)(void, void, void))v107;
  *((_DWORD *)&v102 - 18) = v109;
  *(&v102 - 7) = 0;
  *(&v102 - 6) = 0;
  *(&v102 - 8) = (unsigned int (*)(void, void, void))v42;
  *((unsigned char *)&v102 - 40) = 2;
  uint64_t v46 = v122;
  *(&v102 - 4) = (unsigned int (*)(void, void, void))1;
  *(&v102 - 3) = (unsigned int (*)(void, void, void))v46;
  *((unsigned char *)&v102 - 16) = 1;
  *(&v102 - 1) = 0;
  v125[0] = v47;
  LODWORD(v125[1]) = v48;
  BYTE4(v125[1]) = v49;
  sub_10094A1CC(0, (uint64_t)sub_1009381AC, (uint64_t)(&v102 - 12), v44);
  unint64_t v106 = v26;
  swift_release();
  uint64_t v55 = v121;
  uint64_t v56 = v120;
  uint64_t v57 = v119;
  sub_10002B70C(v121, (uint64_t)v29, &qword_100ACB910);
  uint64_t v58 = *(unsigned int (**)(void, void, void))(v57 + 48);
  if (v58(v29, 1, v56) != 1)
  {
    uint64_t v59 = (uint64_t)v29;
    uint64_t v60 = v116;
    sub_10001158C(v59, v116, type metadata accessor for VFSItem);
    uint64_t v61 = *(void *)v60;
    int v62 = *(unsigned __int8 *)(v60 + 8);
    if (v62 == 2 && !v61
      || v62 == 2 && v61 == 1
      || (uint64_t v63 = v60 + *(int *)(v56 + 28),
          (*(unsigned char *)(v63 + *(int *)(type metadata accessor for ItemMetadata() + 72)) & 1) != 0))
    {
      sub_10092D018(v60, type metadata accessor for VFSItem);
      goto LABEL_19;
    }
    uint64_t v69 = (void *)swift_retain();
    if (!objc_sync_enter(v69))
    {
      swift_retain();
      if (objc_sync_exit(a5)) {
        goto LABEL_40;
      }
      swift_release();
      VFSItem.fetchURL()(v12);
      swift_release();
      uint64_t v70 = v112;
      uint64_t v71 = v113;
      long long v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
      if (v105(v12, 1, v113) == 1)
      {
        sub_10002B770((uint64_t)v12, &qword_100ACA8C0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v14, 1, 1, v71);
LABEL_30:
        sub_10092D018(v116, type metadata accessor for VFSItem);
        sub_10002B770((uint64_t)v14, &qword_100ACA8C0);
        uint64_t v55 = v121;
        goto LABEL_19;
      }
      sub_10096AD80();
      uint64_t v72 = v113;
      os_log_type_t v73 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      uint64_t v104 = v70 + 8;
      uint64_t v103 = v73;
      v73((uint64_t)v12, v113);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v14, 0, 1, v72);
      if (v105(v14, 1, v72) == 1) {
        goto LABEL_30;
      }
      uint64_t v74 = (uint64_t)v111;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v111, v14, v72);
      uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 40);
      unint64_t v102 = *(unsigned int (**)(void, void, void))(v116 + 32);
      swift_retain();
      long long v105 = v75;
      swift_bridgeObjectRetain();
      if (!objc_sync_enter(a5))
      {
        uint64_t v76 = a5[20];
        swift_retain();
        int v77 = objc_sync_exit(a5);
        uint64_t v78 = (uint64_t)v110;
        if (v77) {
          goto LABEL_40;
        }
        swift_release();
        unsigned __int8 v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
        uint64_t v80 = v113;
        v79(v78, v76 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v113);
        swift_release();
        uint64_t v81 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10092B068(v109, v74, (uint64_t)v102, (uint64_t)v105, v78, v81, v82);
        unint64_t v102 = v58;
        v103(v78, v80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v83 = (void *)swift_retain();
        if (!objc_sync_enter(v83))
        {
          uint64_t v84 = a5[20];
          swift_retain();
          int v85 = objc_sync_exit(a5);
          uint64_t v86 = v116;
          if (v85) {
            goto LABEL_40;
          }
          swift_release();
          uint64_t v112 = *(void *)(v86 + 16);
          uint64_t v87 = *(void *)(v86 + 32);
          uint64_t v88 = *(void *)(v86 + 40);
          char v89 = *(unsigned char *)(v86 + 24);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v124 = *(void *)(v84 + 72);
          *(void *)(v84 + 72) = 0x8000000000000000;
          sub_10038ACC8(v112, v89, v87, v88, v122, 1, isUniquelyReferenced_nonNull_native);
          *(void *)(v84 + 72) = v124;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_release();
          uint64_t v91 = (void *)swift_retain();
          if (!objc_sync_enter(v91))
          {
            uint64_t v92 = a5[20];
            swift_retain();
            int v93 = objc_sync_exit(a5);
            id v94 = v111;
            if (!v93)
            {
              uint64_t v95 = swift_release();
              __chkstk_darwin(v95);
              *(&v102 - 10) = (unsigned int (*)(void, void, void))v107;
              *((_DWORD *)&v102 - 18) = v109;
              *(&v102 - 7) = 0;
              *(&v102 - 6) = 0;
              *(&v102 - 8) = (unsigned int (*)(void, void, void))v92;
              *((unsigned char *)&v102 - 40) = 2;
              uint64_t v96 = v122;
              *(&v102 - 4) = 0;
              *(&v102 - 3) = (unsigned int (*)(void, void, void))v96;
              *((unsigned char *)&v102 - 16) = 1;
              *(&v102 - 1) = 0;
              v125[0] = v97;
              LODWORD(v125[1]) = v98;
              BYTE4(v125[1]) = v99;
              sub_10094A1CC(v100, (uint64_t)sub_1009381AC, (uint64_t)(&v102 - 12), (uint64_t)v106);
              swift_release();
              uint64_t v64 = v118;
              uint64_t v101 = (uint64_t)v106;
              v103((uint64_t)v94, v113);
              sub_10092D018(v86, type metadata accessor for VFSItem);
              sub_10001AE98(v101, v64, &qword_100ACB910);
              uint64_t v65 = (uint64_t)v117;
              uint64_t v58 = v102;
              goto LABEL_20;
            }
LABEL_40:
            sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a5);
          }
        }
      }
    }
    goto LABEL_39;
  }
  sub_10002B770((uint64_t)v29, &qword_100ACB910);
LABEL_19:
  uint64_t v64 = v118;
  sub_10002B70C(v55, v118, &qword_100ACB910);
  uint64_t v65 = (uint64_t)v117;
LABEL_20:
  close(v109);
  sub_10002B70C(v64, v65, &qword_100ACB910);
  if (v58(v65, 1, v120) == 1)
  {
    sub_10002B770(v65, &qword_100ACB910);
    v125[0] = v122;
    LOBYTE(v125[1]) = 1;
    memset(&v125[2], 0, 32);
    long long v126 = 0u;
    long long v127 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    uint64_t v130 = 0;
    sub_1000D3768((uint64_t)v125);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v54 = swift_allocError();
    sub_10001AE98((uint64_t)v125, v66, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
    sub_10002B770(v121, &qword_100ACB910);
    sub_10002B770(v64, &qword_100ACB910);
    a3 = v108;
    goto LABEL_23;
  }
  uint64_t v67 = v114;
  sub_10001158C(v65, v114, type metadata accessor for VFSItem);
  sub_1009381C4(v67, (uint64_t)v35, type metadata accessor for VFSItem);
  swift_storeEnumTagMultiPayload();
  v108(v35);
  sub_10002B770((uint64_t)v35, (uint64_t *)&unk_100ACEC50);
  sub_10092D018(v67, type metadata accessor for VFSItem);
  sub_10002B770(v121, &qword_100ACB910);
  uint64_t v52 = v64;
  uint64_t v51 = &qword_100ACB910;
  return sub_10002B770(v52, v51);
}

uint64_t sub_10090FC90(Swift::UInt64 a1, unsigned __int8 a2, void (*a3)(uint64_t *), uint64_t a4, void *a5)
{
  int v9 = a2;
  uint64_t v10 = type metadata accessor for VFSItem(0);
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v88 = (uint64_t)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v84 - v16;
  uint64_t v18 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (void *)((char *)v84 - v22);
  if (v9 != 1)
  {
    id v71 = (id)FPNotSupportedError();
    if (v71)
    {
      *uint64_t v23 = (uint64_t)v71;
      swift_storeEnumTagMultiPayload();
      a3(v23);
      uint64_t v72 = (uint64_t *)&unk_100ACEC50;
      uint64_t v73 = (uint64_t)v23;
      return sub_10002B770(v73, v72);
    }
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v24 = (void *)swift_retain();
  if (objc_sync_enter(v24)) {
    goto LABEL_38;
  }
  uint64_t v86 = v12;
  swift_retain();
  if (objc_sync_exit(a5)) {
    goto LABEL_39;
  }
  swift_release();
  swift_release();
  Swift::UInt64 v87 = a1;
  v92[0] = a1;
  memset(&v92[1], 0, 32);
  uint64_t v25 = fpfs_openfdbyhandle();
  if ((v25 & 0x80000000) != 0)
  {
    int v74 = sub_10096B4D0();
    uint64_t v34 = sub_1005970E0(v74, 0, 0, 0xAu);
    swift_willThrow();
LABEL_35:
    *uint64_t v21 = v34;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a3(v21);
    swift_errorRelease();
    uint64_t v72 = (uint64_t *)&unk_100ACEC50;
    uint64_t v73 = (uint64_t)v21;
    return sub_10002B770(v73, v72);
  }
  uint64_t v26 = v25;
  if ((fpfs_clear_acl() & 0x80000000) != 0)
  {
    int v75 = sub_10096B4D0();
    uint64_t v34 = sub_1005970E0(v75, 9, 0, 0xAu);
    swift_willThrow();
    sub_100595FB8(v26);
    goto LABEL_35;
  }
  int v27 = fpfs_fremovexattr();
  int v85 = a3;
  v84[1] = a4;
  v84[0] = v17;
  if (v27 < 0)
  {
    int v28 = sub_10096B4D0();
    NSString v29 = sub_10096BC00();
    id v30 = objc_msgSend(v29, "fp_obfuscatedExtendedAttributeName");

    uint64_t v31 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v33 = v32;

    uint64_t v34 = sub_1005970E0(v28, v31, v33, 1u);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v92[0]) = sub_10096A750();
    sub_100045CB4();
    LOBYTE(v31) = sub_10096AA60();
    swift_errorRelease();
    if ((v31 & 1) == 0) {
      goto LABEL_31;
    }
    swift_errorRelease();
  }
  if ((fpfs_fremovexattr() & 0x80000000) != 0)
  {
    int v35 = sub_10096B4D0();
    NSString v36 = sub_10096BC00();
    id v37 = objc_msgSend(v36, "fp_obfuscatedExtendedAttributeName");

    uint64_t v38 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v40 = v39;

    uint64_t v34 = sub_1005970E0(v35, v38, v40, 1u);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v92[0]) = sub_10096A750();
    sub_100045CB4();
    LOBYTE(v38) = sub_10096AA60();
    swift_errorRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_31;
    }
    swift_errorRelease();
  }
  if ((fpfs_fremovexattr() & 0x80000000) == 0) {
    goto LABEL_15;
  }
  int v41 = sub_10096B4D0();
  NSString v42 = sub_10096BC00();
  id v43 = objc_msgSend(v42, "fp_obfuscatedExtendedAttributeName");

  uint64_t v44 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v46 = v45;

  uint64_t v34 = sub_1005970E0(v41, v44, v46, 1u);
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_errorRetain();
  LODWORD(v92[0]) = sub_10096A750();
  sub_100045CB4();
  LOBYTE(v44) = sub_10096AA60();
  swift_errorRelease();
  if ((v44 & 1) == 0)
  {
LABEL_31:
    sub_100595FB8(v26);
    a3 = v85;
    goto LABEL_35;
  }
  swift_errorRelease();
LABEL_15:
  if ((fpfs_fremovexattr() & 0x80000000) != 0)
  {
    int v47 = sub_10096B4D0();
    NSString v48 = sub_10096BC00();
    id v49 = objc_msgSend(v48, "fp_obfuscatedExtendedAttributeName");

    uint64_t v50 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v52 = v51;

    uint64_t v34 = sub_1005970E0(v47, v50, v52, 1u);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v92[0]) = sub_10096A750();
    sub_100045CB4();
    LOBYTE(v50) = sub_10096AA60();
    swift_errorRelease();
    if (v50)
    {
      swift_errorRelease();
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_18:
  int v53 = (void *)swift_retain();
  if (objc_sync_enter(v53)) {
    goto LABEL_38;
  }
  uint64_t v54 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5)) {
    goto LABEL_39;
  }
  swift_release();
  uint64_t v55 = (uint64_t *)(v54 + 72);
  swift_beginAccess();
  unint64_t v56 = sub_10031F858(v87, 1);
  if (v57)
  {
    unint64_t v58 = v56;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v60 = *v55;
    uint64_t v91 = *v55;
    *uint64_t v55 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10091CCA4();
      uint64_t v60 = v91;
    }
    sub_100918708(v58, v60);
    *uint64_t v55 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_release();
  uint64_t v61 = (void *)swift_retain();
  if (objc_sync_enter(v61)) {
LABEL_38:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a5);
  uint64_t v62 = a5[20];
  swift_retain();
  int v63 = objc_sync_exit(a5);
  uint64_t v64 = v84[0];
  if (v63) {
LABEL_39:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a5);
  swift_release();
  uint64_t v65 = type metadata accessor for VFSFileTree(0);
  v84[-10] = __chkstk_darwin(v65);
  LODWORD(v84[-9]) = v26;
  v84[-7] = 0;
  v84[-6] = 0;
  v84[-8] = v62;
  LOBYTE(v84[-5]) = 2;
  Swift::UInt64 v66 = v87;
  v84[-4] = 0;
  v84[-3] = v66;
  LOBYTE(v84[-2]) = 1;
  v84[-1] = 0;
  v92[0] = v67;
  LODWORD(v92[1]) = v68;
  BYTE4(v92[1]) = v69;
  sub_10094A1CC(v70, (uint64_t)sub_1009381AC, (uint64_t)&v84[-12], v64);
  swift_release();
  uint64_t v76 = v84[0];
  uint64_t v78 = v89;
  uint64_t v77 = v90;
  close(v26);
  uint64_t v79 = v88;
  sub_10002B70C(v76, v88, &qword_100ACB910);
  int v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77);
  a3 = v85;
  if (v80 == 1)
  {
    sub_10002B770(v79, &qword_100ACB910);
    v92[0] = v87;
    LOBYTE(v92[1]) = 1;
    memset(&v92[2], 0, 32);
    long long v93 = 0u;
    long long v94 = 0u;
    long long v95 = 0u;
    long long v96 = 0u;
    uint64_t v97 = 0;
    sub_1000D3768((uint64_t)v92);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v34 = swift_allocError();
    sub_10001AE98((uint64_t)v92, v81, (uint64_t *)&unk_100ACD9A0);
    swift_willThrow();
    sub_10002B770(v76, &qword_100ACB910);
    goto LABEL_35;
  }
  uint64_t v82 = (uint64_t)v86;
  sub_10001158C(v79, (uint64_t)v86, type metadata accessor for VFSItem);
  sub_1009381C4(v82, (uint64_t)v21, type metadata accessor for VFSItem);
  swift_storeEnumTagMultiPayload();
  a3(v21);
  sub_10002B770((uint64_t)v21, (uint64_t *)&unk_100ACEC50);
  sub_10092D018(v82, type metadata accessor for VFSItem);
  uint64_t v72 = &qword_100ACB910;
  uint64_t v73 = v76;
  return sub_10002B770(v73, v72);
}

uint64_t sub_1009107DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(void **)(v3 + 216);
  int v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v3;
  v8[4] = a2;
  v8[5] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v9 = v7;
  sub_1006B8108(0, (uint64_t)"removeStuckConflictsFromTheWharf(conflictsToRemove:completion:)", 63, 2, (uint64_t)sub_100938184, (uint64_t)v8);

  return swift_release();
}

uint64_t sub_1009108A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v32 = a2;
  uint64_t v7 = sub_10096AE50();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v15 = *(void *)(a1 + 16);
    v24[2] = a4;
    uint64_t v25 = a3;
    v24[1] = a1;
    if (v15)
    {
      uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v16 = v8 + 16;
      uint64_t v31 = v17;
      uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
      uint64_t v28 = *(void *)(v16 + 56);
      NSString v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
      uint64_t v26 = (void (**)(char *, uint64_t))(v16 - 8);
      int v27 = (void (**)(char *, char *, uint64_t))(v16 + 16);
      swift_bridgeObjectRetain();
      id v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
      v24[0] = (v16 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v31(v14, v18, v7);
        uint64_t v19 = *v30;
        (*v30)(v14, 0, 1, v7);
        if ((*v29)(v14, 1, v7) == 1) {
          break;
        }
        (*v27)(v10, v14, v7);
        uint64_t v20 = *(void *)(v32 + 136);
        sub_10096AE10();
        uint64_t v21 = v20 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
        swift_beginAccess();
        uint64_t v22 = sub_10096BCF0();
        sub_10008AD84(v21, -2, (const char *)(v22 + 32));
        swift_endAccess();
        swift_bridgeObjectRelease();
        (*v26)(v10, v7);
        swift_release();
        v18 += v28;
        if (!--v15) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v19(v14, 1, 1, v7);
    }
    uint64_t v12 = swift_bridgeObjectRelease();
    a3 = v25;
  }
  return a3(v12);
}

uint64_t sub_100910B80(uint64_t a1, uint64_t a2)
{
  return sub_100911EA0(a1, a2, (uint64_t)&unk_100AA4B78, (uint64_t)"removeStuckWharfPropagationItems(completion:)", 45, (uint64_t)sub_100938160);
}

uint64_t sub_100910BAC(uint64_t a1, void (*a2)(BOOL), uint64_t a3)
{
  v45[1] = a3;
  uint64_t v46 = a2;
  uint64_t v59 = sub_10096B480();
  uint64_t v3 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10096AE50();
  uint64_t v5 = *(void *)(v63 - 8);
  uint64_t v6 = __chkstk_darwin(v63);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v45 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v45 - v12;
  sub_10096AD50();
  id v14 = [objc_allocWithZone((Class)NSFileManager) init];
  sub_10096AE10();
  NSString v15 = sub_10096BC00();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)[v14 enumeratorAtPath:v15];

  id v62 = (id)v16;
  if (v16)
  {
    uint64_t v16 = 0;
    unint64_t v58 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v60 = (void (**)(char *, uint64_t))(v5 + 8);
    char v57 = (void (**)(char *, uint64_t))(v3 + 8);
    id v49 = (char *)v66 + 8;
    uint64_t v18 = &selRef_doubleForKey_;
    uint64_t v61 = (char *)&type metadata for Any + 8;
    *(void *)&long long v17 = 136446466;
    long long v48 = v17;
    uint64_t v19 = v55;
    uint64_t v51 = v5;
    uint64_t v50 = v13;
    unint64_t v56 = v11;
    int v47 = v8;
    while (1)
    {
      if ([v62 v18[86]])
      {
        sub_10096C9D0();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v66, 0, sizeof(v66));
      }
      sub_10001AE98((uint64_t)v66, (uint64_t)&v67, (uint64_t *)&unk_100ACE0F0);
      if (!v68._urlString)
      {

        sub_10002B770((uint64_t)&v67, (uint64_t *)&unk_100ACE0F0);
        goto LABEL_18;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {

        goto LABEL_18;
      }
      if (v16 == 10000) {
        break;
      }
      uint64_t v64 = v16;
      sub_10096AD60();
      swift_bridgeObjectRelease();
      id v22 = [self defaultManager];
      sub_10096AD20(v23);
      uint64_t v25 = v24;
      id v67 = 0;
      unsigned int v26 = [v22 removeItemAtURL:v24 error:&v67];

      if (v26)
      {
        uint64_t v20 = *v60;
        id v21 = v67;
        v20(v11, v63);
      }
      else
      {
        id v27 = v67;
        sub_10096ABF0();

        swift_willThrow();
        id v28 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        (*v58)(v8, v11, v63);
        swift_errorRetain();
        swift_errorRetain();
        NSString v29 = sub_10096B470();
        id v30 = v8;
        os_log_type_t v31 = sub_10096C5A0();
        if (os_log_type_enabled(v29, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          uint64_t v52 = (void *)swift_slowAlloc();
          uint64_t v54 = (void *)swift_slowAlloc();
          id v67 = v54;
          *(_DWORD *)uint64_t v32 = v48;
          sub_10096AD20(&v68);
          uint64_t v34 = v33;
          id v35 = objc_msgSend(v33, "fp_shortDescription");

          uint64_t v36 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          unint64_t v38 = v37;

          *(void *)&v66[0] = sub_100719D44(v36, v38, (uint64_t *)&v67);
          sub_10096C8C0();
          uint64_t v39 = v63;
          swift_bridgeObjectRelease();
          int v53 = *v60;
          v53(v30, v39);
          *(_WORD *)(v32 + 12) = 2112;
          swift_getErrorValue();
          id v40 = Error.prettyDescription.getter(v65);
          *(void *)&v66[0] = v40;
          uint64_t v5 = v51;
          sub_10096C8C0();
          void *v52 = v40;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v29, v31, "failed to remove %{public}s: %@", (uint8_t *)v32, 0x16u);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v19 = v55;
          swift_slowDealloc();

          swift_errorRelease();
          (*v57)(v19, v59);
          uint64_t v11 = v56;
          uint64_t v41 = v39;
          uint64_t v18 = &selRef_doubleForKey_;
          v53(v56, v41);
          uint64_t v13 = v50;
          uint64_t v8 = v47;
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          uint64_t v8 = v30;
          NSString v42 = *v60;
          uint64_t v43 = v63;
          (*v60)(v8, v63);
          swift_errorRelease();
          (*v57)(v19, v59);
          uint64_t v11 = v56;
          v42(v56, v43);
        }
      }
      uint64_t v16 = v64 + 1;
    }
    swift_bridgeObjectRelease();

    uint64_t v16 = 10000;
  }
LABEL_18:
  v46(v16 == 10000);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v63);
}

uint64_t sub_1009113A0(uint64_t a1, uint64_t a2)
{
  return sub_100911EA0(a1, a2, (uint64_t)&unk_100AA4B28, (uint64_t)"eventBarrier(_:)", 16, (uint64_t)sub_10034C5AC);
}

void sub_1009113CC(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_10096B480();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v55 - v18;
  unint64_t v20 = a1[30];
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v54 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))a2)(v54);
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_10096CE70()) {
    goto LABEL_22;
  }
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v22 = (id)sub_10096CC30();
  }
  else
  {
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v22 = *(id *)(v20 + 32);
  }
  id v58 = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)a1[29];
  id v24 = [v23 barrierFolderURL];
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  if (v24)
  {
    uint64_t v25 = v24;
    sub_10096ADD0();

    unsigned int v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v26(v12, v17, v13);
    char v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v57(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v26(v19, v12, v13);
      goto LABEL_13;
    }
  }
  else
  {
    char v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v57(v12, 1, 1, v13);
  }
  id v28 = (void *)swift_retain();
  if (objc_sync_enter(v28)) {
    goto LABEL_28;
  }
  uint64_t v29 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v29 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v13);
  swift_release();
  sub_10002B770((uint64_t)v12, &qword_100ACA8C0);
LABEL_13:
  sub_10096AD20(v27);
  os_log_type_t v31 = v30;
  unint64_t v56 = *(void (**)(char *, uint64_t))(v14 + 8);
  v56(v19, v13);
  [v23 setBarrierFolderURL:v31];

  id v32 = (id)fpfs_current_or_default_log();
  uint64_t v33 = v64;
  sub_10096B490();
  swift_retain_n();
  uint64_t v34 = sub_10096B470();
  os_log_type_t v35 = sub_10096C5A0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v66 = v55;
    *(_DWORD *)uint64_t v36 = 136315138;
    id v37 = objc_msgSend(v23, "barrierFolderURL", v55);
    if (v37)
    {
      unint64_t v38 = v37;
      sub_10096ADD0();

      uint64_t v39 = v61;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v61, v17, v13);
      v57(v39, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v39, 1, v13) != 1)
      {
        char v57 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v36 + 4);
        sub_10096AD20((NSURL *)(v36 + 4));
        uint64_t v41 = v40;
        id v42 = objc_msgSend(v40, "fp_shortDescription");

        uint64_t v43 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        unint64_t v45 = v44;

        v56(v39, v13);
        uint64_t v65 = sub_100719D44(v43, v45, &v66);
        sub_10096C8C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "🚧  FS: waiting for barrier on %s", (uint8_t *)v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
        goto LABEL_18;
      }
      goto LABEL_27;
    }
LABEL_26:
    swift_release();
    v57(v61, 1, 1, v13);
    __break(1u);
LABEL_27:
    swift_release();
    __break(1u);
LABEL_28:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
LABEL_18:
  id v46 = v58;
  id v47 = [v58 waitableBarrier];
  id v49 = v59;
  uint64_t v48 = v60;
  if (v47)
  {
    uint64_t v50 = v47;
    uint64_t v51 = (void *)a1[27];
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v49;
    *(void *)(v52 + 24) = v48;
    id v53 = v51;
    swift_retain();
    sub_1006B791C((uint64_t)"eventBarrier(_:)", 16, 2, 0, v53, (uint64_t)sub_10093E06C, v52);

    swift_release();
  }
  else
  {
    v59();
  }
}

uint64_t sub_100911B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B480();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v11 = sub_10096B470();
  os_log_type_t v12 = sub_10096C5A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "🚧  FS: barrier observed, waiting for flocks to be released", v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = *(void **)(a1 + 216);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  id v16 = v14;
  swift_retain();
  sub_1006B791C((uint64_t)"fullBarrier(_:)", 15, 2, 0, v16, (uint64_t)sub_10093DCF8, v15);

  return swift_release();
}

uint64_t sub_100911D18(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v7 = sub_10096B470();
  os_log_type_t v8 = sub_10096C5A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🚧 FS: barrier wait completed", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1(v10);
}

uint64_t sub_100911E74(uint64_t a1, uint64_t a2)
{
  return sub_100911EA0(a1, a2, (uint64_t)&unk_100AA4B00, (uint64_t)"notifyRescan(_:)", 16, (uint64_t)sub_10093814C);
}

uint64_t sub_100911EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void **)(v6 + 216);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v6;
  v13[3] = a1;
  v13[4] = a2;
  id v14 = v12;
  swift_retain();
  swift_retain();
  sub_1006B8108(0, a4, a5, 2, a6, (uint64_t)v13);

  return swift_release();
}

uint64_t sub_100911F58(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  [*(id *)(a1 + 232) setPlannedRescan:0];
  unint64_t v4 = *(void *)(a1 + 240);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = swift_bridgeObjectRelease();
    return a2(v10);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_10096CE70();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_10096CC30();
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      [v8 didProcessBarrierEventUUID:0];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10091205C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 224);
  uint64_t v12 = *(void **)(v4 + 216);
  uint64_t v13 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 40) = v16;
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a1 + 32);
  *(void *)(v15 + 72) = *(void *)(a1 + 48);
  *(void *)(v15 + 80) = a2;
  *(void *)(v15 + 88) = a3;
  long long v17 = (void *)swift_allocObject();
  v17[2] = sub_1000B6658;
  v17[3] = v14;
  v17[4] = v11;
  swift_retain_n();
  id v18 = v12;
  swift_retain();
  sub_100243DB8(a1);
  swift_retain();
  swift_retain();
  sub_1003946CC(v18, (uint64_t)v10, (void (*)())sub_100243CEC, v17, (uint64_t)sub_100938134, v15);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_100912260(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  if (*a2)
  {
    uint64_t v4 = *(void *)(a1 + 136);
    __chkstk_darwin(a1);
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100243DE8);
    *(unsigned char *)(v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
  }
  return a3(0);
}

uint64_t sub_1009123D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v3 + 216);
  uint64_t v10 = *(void *)(v3 + 224);
  uint64_t v12 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_10093802C;
  v15[3] = v13;
  v15[4] = v10;
  swift_retain_n();
  id v16 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1003946CC(v16, (uint64_t)v9, (void (*)())sub_1009380D0, v15, (uint64_t)sub_100938078, (uint64_t)v14);

  swift_release();
  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v9, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_1009125B0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100913CB4(a1, a2, a3, (void (*)(uint64_t))_s9libfssync11VFSFileTreeC35subscriptionWillHandleBatchOfEventsyySo20FSChangeSubscriptionCF_0);
}

uint64_t sub_1009125CC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100913CB4(a1, a2, a3, (void (*)(uint64_t))_s9libfssync11VFSFileTreeC34subscriptionDidHandleBatchOfEventsyySo20FSChangeSubscriptionCF_0);
}

uint64_t sub_1009125E4(int a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t))
{
  long long v134 = a4;
  int v123 = a1;
  uint64_t v109 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t v110 = *(void *)(v109 - 8);
  uint64_t v6 = __chkstk_darwin(v109);
  uint64_t v112 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v111 = (char *)&v109 - v8;
  uint64_t v116 = type metadata accessor for VFSItem(0);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v113 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v114 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v119 = (uint64_t)&v109 - v13;
  uint64_t v122 = sub_10096AE50();
  uint64_t v124 = *(void *)(v122 - 8);
  uint64_t v14 = __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v121 = (char *)&v109 - v16;
  uint64_t v126 = sub_10096B480();
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v17 = __chkstk_darwin(v126);
  uint64_t v117 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v118 = (char *)&v109 - v20;
  __chkstk_darwin(v19);
  long long v129 = (char *)&v109 - v21;
  uint64_t v22 = sub_10096B3D0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v132 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  id v28 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v30 = (char *)&v109 - v29;
  uint64_t v31 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v31);
  uint64_t v136 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v33 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v30, 1, 1, v22);
  uint64_t v139 = 0;
  unint64_t v140 = 0xE000000000000000;
  sub_10096CBD0(34);
  swift_bridgeObjectRelease();
  uint64_t v139 = 0xD000000000000020;
  unint64_t v140 = 0x80000001009BECB0;
  uint64_t v125 = a2;
  uint64_t v128 = a3;
  NSString v34 = sub_10096BC00();
  id v35 = objc_msgSend(v34, "fp_prettyPath", v109);

  uint64_t v36 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v38 = v37;

  v141._countAndFlagsBits = v36;
  v141._object = v38;
  sub_10096BDC0(v141);
  swift_bridgeObjectRelease();
  uint64_t v39 = v139;
  unint64_t v40 = v140;
  uint64_t v133 = v30;
  sub_10002B70C((uint64_t)v30, (uint64_t)v28, &qword_100AD0830);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22);
  uint64_t v131 = v39;
  if (v41 == 1)
  {
    id v42 = v33;
    uint64_t v43 = v132;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v28, &qword_100AD0830);
  }
  else
  {
    uint64_t v43 = v132;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v132, v28, v22);
  }
  unint64_t v44 = v136;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v136, v43, v22);
  uint64_t v132 = (char *)*(int *)(v31 + 20);
  *(void *)&v132[(void)v44] = v33;
  unint64_t v45 = &v44[*(int *)(v31 + 24)];
  *(void *)unint64_t v45 = "FS: handle event";
  *((void *)v45 + 1) = 16;
  uint64_t v130 = v45;
  v45[16] = 2;
  id v46 = v33;
  uint64_t v47 = (uint64_t)v43;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_100973BB0;
  *(void *)(v48 + 56) = &type metadata for String;
  *(void *)(v48 + 64) = sub_1000240A4();
  *(void *)(v48 + 32) = v131;
  *(void *)(v48 + 40) = v40;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v22);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v133, &qword_100AD0830);
  id v49 = v135;
  uint64_t v50 = (void *)swift_retain();
  if (objc_sync_enter(v50)) {
    goto LABEL_51;
  }
  uint64_t v51 = *((void *)v49 + 20);
  swift_retain();
  if (objc_sync_exit(v49)) {
    goto LABEL_52;
  }
  swift_release();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v51 + 24);
  swift_release();
  if (v52 == v134)
  {
    id v53 = (id)fpfs_current_or_default_log();
    uint64_t v54 = v129;
    sub_10096B490();
    swift_bridgeObjectRetain_n();
    uint64_t v55 = sub_10096B470();
    os_log_type_t v56 = sub_10096C5A0();
    if (os_log_type_enabled(v55, v56))
    {
      char v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)char v57 = 136446210;
      NSString v58 = sub_10096BC00();
      id v59 = objc_msgSend(v58, "fp_prettyPath");

      uint64_t v60 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v62 = v61;

      Swift::Int v138 = sub_100719D44(v60, v62, &v139);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "If the item is the domain root %{public}s, no need to handle parent mtime", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v126);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v54, v126);
    }
    goto LABEL_19;
  }
  if (fpfs_supports_parent_mtime_iopolicy() && (v123 & 0xB00) != 0 && (v123 & 0x80000) == 0)
  {
    sub_10096ACD0();
    uint64_t v63 = v120;
    sub_10096AD80();
    uint64_t v64 = sub_10096AE10();
    uint64_t v66 = v65;
    uint64_t v67 = *(void *)(v124 + 8);
    v124 += 8;
    ((void (*)(char *, uint64_t))v67)(v63, v122);
    NSURL v68 = &v139;
    char v69 = sub_1008DF6F0();
    if (*(void *)(v70 + 8))
    {
      swift_bridgeObjectRetain();
      char v71 = sub_100494FA0(&v138, v64, v66);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, void))v69)(&v139, 0);
      if ((v71 & 1) == 0)
      {
        id v72 = (id)fpfs_current_or_default_log();
        uint64_t v73 = v118;
        sub_10096B490();
        swift_bridgeObjectRetain();
        int v74 = sub_10096B470();
        os_log_type_t v75 = sub_10096C5A0();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          uint64_t v139 = swift_slowAlloc();
          *(_DWORD *)uint64_t v76 = 136446210;
          uint64_t v135 = v76 + 4;
          NSString v77 = sub_10096BC00();
          uint64_t v78 = (void (*)(char *, uint64_t))v67;
          id v79 = objc_msgSend(v77, "fp_prettyPath");

          uint64_t v80 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          unint64_t v82 = v81;

          Swift::Int v138 = sub_100719D44(v80, v82, &v139);
          sub_10096C8C0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "deduplicating FSEvent parent lookup for %{public}s", v76, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v127 + 8))(v118, v126);
          v78(v121, v122);
          goto LABEL_19;
        }
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v127 + 8))(v73, v126);
LABEL_27:
        ((void (*)(char *, uint64_t))v67)(v121, v122);
        goto LABEL_19;
      }
    }
    else
    {
      ((void (*)(uint64_t *, void))v69)(&v139, 0);
    }
    int v85 = (uint64_t (*)())&v49[qword_100B0B640];
    swift_beginAccess();
    if (*(void *)v85 == -1)
    {
      __break(1u);
      goto LABEL_47;
    }
    ++*(void *)v85;
    uint64_t v86 = (void *)swift_retain();
    int v87 = objc_sync_enter(v86);
    uint64_t v88 = v119;
    if (!v87)
    {
      uint64_t v89 = *((void *)v49 + 20);
      swift_retain();
      if (!objc_sync_exit(v49))
      {
        swift_release();
        type metadata accessor for VFSFileTree(0);
        swift_unknownObjectWeakLoadStrong();
        static VFSFileTree.lookupItem(at:lookupScope:lookupCache:pkgItemsLookupPolicy:options:openOptions:)(v89, 0x208000u, v88);
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v90 = v114;
        sub_10002B70C(v88, v114, &qword_100ACB910);
        uint64_t v47 = v116;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v90, 1, v116) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10002B770(v88, &qword_100ACB910);
          ((void (*)(char *, uint64_t))v67)(v121, v122);
          sub_10002B770(v90, &qword_100ACB910);
          goto LABEL_19;
        }
        uint64_t v22 = v113;
        sub_10001158C(v90, v113, type metadata accessor for VFSItem);
        NSURL v68 = &v139;
        uint64_t v91 = sub_1008DF6F0();
        if (*(void *)(v92 + 8))
        {
          Swift::UInt64 v93 = *(void *)(v22 + *(int *)(v47 + 36));
          swift_bridgeObjectRelease_n();
          sub_100496ED4((uint64_t)v137, v93, v64, v66);
          ((void (*)(uint64_t *, void))v91)(&v139, 0);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v91)(&v139, 0);
        }
        uint64_t v94 = *(int *)(v47 + 28);
        int v85 = (uint64_t (*)())(v22 + v94 + *(int *)(type metadata accessor for ItemMetadata() + 28));
        sub_10096B080();
        uint64_t v96 = v119;
        if ((~*(void *)&v95 & 0x7FF0000000000000) != 0)
        {
          if (v95 > -9.22337204e18)
          {
            if (v95 < 9.22337204e18)
            {
              if (fpfs_is_busy_date())
              {
                sub_10092D018(v22, type metadata accessor for VFSItem);
                sub_10002B770(v96, &qword_100ACB910);
                goto LABEL_27;
              }
              long long v134 = (void (*)(char *, uint64_t))v67;
              uint64_t v97 = (uint64_t *)&v49[qword_100ADE750];
              swift_beginAccess();
              uint64_t v98 = v97[1];
              if (v98)
              {
                uint64_t v99 = *v97;
                sub_10093C3E8(*v97, v98);
                uint64_t v100 = swift_retain();
                uint64_t v22 = v113;
                sub_100929F70(v100, v98);
              }
              else
              {
                uint64_t v99 = 0;
              }
              uint64_t v47 = (uint64_t)v112;
              uint64_t v67 = (uint64_t)v111;
              int v85 = sub_1008DF6F0();
              if (!v101[1])
              {
                ((void (*)(uint64_t *, void))v85)(&v139, 0);
LABEL_45:
                swift_release();
                sub_10092D018(v22, type metadata accessor for VFSItem);
                sub_10002B770(v119, &qword_100ACB910);
                v134(v121, v122);
                goto LABEL_19;
              }
              NSURL v68 = v101;
              uint64_t v102 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
              uint64_t v103 = v67 + *(int *)(v102 + 48);
              uint64_t v104 = *(int *)(v102 + 64);
              char v105 = *(unsigned char *)(v22 + 8);
              *(void *)uint64_t v67 = *(void *)v22;
              *(unsigned char *)(v67 + 8) = v105;
              sub_1009381C4(v22, v103, type metadata accessor for VFSItem);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(v103, 0, 1, v116);
              *(void *)(v67 + v104) = v99;
              swift_storeEnumTagMultiPayload();
              sub_10002B70C(v67, v47, (uint64_t *)&unk_100AD0D50);
              uint64_t v66 = v68[1];
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v68[1] = v66;
              if (isUniquelyReferenced_nonNull_native)
              {
LABEL_41:
                unint64_t v108 = *(void *)(v66 + 16);
                unint64_t v107 = *(void *)(v66 + 24);
                if (v108 >= v107 >> 1)
                {
                  uint64_t v66 = sub_1006A4784(v107 > 1, v108 + 1, 1, v66);
                  v68[1] = v66;
                }
                *(void *)(v66 + 16) = v108 + 1;
                sub_10001AE98(v47, v66+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v108, (uint64_t *)&unk_100AD0D50);
                sub_10002B770(v67, (uint64_t *)&unk_100AD0D50);
                ((void (*)(uint64_t *, void))v85)(&v139, 0);
                goto LABEL_45;
              }
LABEL_50:
              uint64_t v66 = sub_1006A4784(0, *(void *)(v66 + 16) + 1, 1, v66);
              v68[1] = v66;
              goto LABEL_41;
            }
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
LABEL_52:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v49);
    }
LABEL_51:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v49);
  }
LABEL_19:
  sub_10096C760();
  uint64_t v83 = (uint64_t)v136;
  sub_10096B3A0();
  return sub_10092D018(v83, type metadata accessor for Signpost);
}

uint64_t sub_100913A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v10 = 0;
  uint64_t v9 = 0;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = &v10;
  uint64_t v14 = &v9;
  uint64_t v15 = a3;
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10093CE3C);
  if (!v4)
  {
    char v7 = v10;
    uint64_t v8 = v9;
    if (!v10) {
      uint64_t v8 = 0;
    }
    *(void *)a4 = v8;
    *(unsigned char *)(a4 + 8) = v7 ^ 1;
  }
  return result;
}

uint64_t sub_100913AB0@<X0>(void *a1@<X4>, _DWORD *a2@<X8>)
{
  sub_10096AE10();
  uint64_t v4 = (void *)swift_retain();
  if (objc_sync_enter(v4)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_retain();
  if (objc_sync_exit(a1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  swift_release();
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  int v5 = fpfs_pkg_relative_path_lookup();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

Swift::Void __swiftcall VFSFileTree.subscription(_:handleEventAtPath:targetItemID:eventID:flags:)(FSChangeSubscription *_, Swift::String handleEventAtPath, Swift::UInt64 targetItemID, Swift::UInt64 eventID, Swift::UInt32 flags)
{
}

uint64_t sub_100913BF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, int a7)
{
  uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v13 = v12;
  id v14 = a3;
  swift_retain();
  sub_100935058(v11, v13, a5, a6, a7);

  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100913C9C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100913CB4(a1, a2, a3, (void (*)(uint64_t))_s9libfssync11VFSFileTreeC30subscriptionHandleDroppedEventyySo20FSChangeSubscriptionCF_0);
}

uint64_t sub_100913CB4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  id v5 = a3;
  uint64_t v6 = swift_retain();
  a4(v6);

  return swift_release();
}

uint64_t VFSFileTree.subscription(_:handleResetWith:)(uint64_t a1, unint64_t a2)
{
  return sub_10093731C(a2);
}

uint64_t sub_100913D18(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  id v5 = a3;
  swift_retain();
  sub_10093731C(a4);

  return swift_release();
}

uint64_t sub_100913D78(void *a1)
{
  uint64_t v70 = a1;
  uint64_t v2 = sub_10096AE50();
  uint64_t v69 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (void *)swift_retain();
  if (objc_sync_enter(v5)) {
    goto LABEL_28;
  }
  uint64_t v6 = *(void **)(v1 + 160);
  swift_retain();
  if (objc_sync_exit((id)v1)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, v1);
  }
  swift_release();
  char v7 = v70;
  uint64_t v8 = v70[3];
  uint64_t v9 = v70[4];
  sub_10002689C(v70, v8);
  sub_10059A0E8(0x6F6F72205346202BLL, (void *)0xEA00000000007374, v8, v9);
  uint64_t v11 = v7[3];
  uint64_t v10 = v7[4];
  uint64_t v12 = sub_10002689C(v7, v11);
  uint64_t v76 = 8224;
  NSString v77 = (void *)0xE200000000000000;
  sub_10096AD20((NSURL *)OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL);
  id v14 = v13;
  id v15 = objc_msgSend(v13, "fp_shortDescription");

  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v18 = v17;

  v78._countAndFlagsBits = v16;
  v78._object = v18;
  sub_10096BDC0(v78);
  swift_bridgeObjectRelease();
  v79._countAndFlagsBits = 0x3A6F6E695B20;
  v79._object = (void *)0xE600000000000000;
  sub_10096BDC0(v79);
  uint64_t v74 = v6[3];
  v80._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v80);
  swift_bridgeObjectRelease();
  v81._countAndFlagsBits = 93;
  v81._object = (void *)0xE100000000000000;
  sub_10096BDC0(v81);
  unint64_t v1 = (unint64_t)v12;
  sub_10059A0E8(v76, v77, v11, v10);
  swift_bridgeObjectRelease();
  uint64_t v68 = OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs;
  uint64_t v19 = *(void *)(*(void *)((char *)v6 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs) + 16);
  uint64_t v67 = v19 - 1;
  if (v19 != 1)
  {
    if (!v19) {
      goto LABEL_27;
    }
    uint64_t v63 = v6 + 9;
    swift_beginAccess();
    uint64_t v20 = 0;
    uint64_t v65 = v2;
    uint64_t v66 = v69 + 16;
    unint64_t v62 = (void (**)(char *, uint64_t))(v69 + 8);
    uint64_t v64 = v6;
    v59[0] = v4;
    while (1)
    {
      unint64_t v1 = v20 + 1;
      uint64_t v30 = *(void *)((char *)v6 + v68);
      if ((unint64_t)(v20 + 1) >= *(void *)(v30 + 16))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, v1);
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v4, v30+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v1, v2);
      uint64_t v31 = v6[4];
      if (v1 >= *(void *)(v31 + 16)) {
        goto LABEL_26;
      }
      Swift::UInt64 v32 = *(void *)(v31 + 8 * v20 + 40);
      uint64_t v33 = *v63;
      if (*(void *)(*v63 + 16))
      {
        unint64_t v34 = sub_10031F858(v32, 1);
        if (v35) {
          break;
        }
      }
      uint64_t v21 = v70[3];
      uint64_t v22 = v70[4];
      sub_10002689C(v70, v21);
      uint64_t v74 = 8224;
      os_log_type_t v75 = (void *)0xE200000000000000;
      sub_10096AD20((NSURL *)0xE200000000000000);
      uint64_t v24 = v23;
      uint64_t v25 = v4;
      id v26 = objc_msgSend(v23, "fp_shortDescription");

      uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v29 = v28;

      v82._countAndFlagsBits = v27;
      v82._object = v29;
      sub_10096BDC0(v82);
      swift_bridgeObjectRelease();
      v83._countAndFlagsBits = 0x3A6F6E695B20;
      v83._object = (void *)0xE600000000000000;
      sub_10096BDC0(v83);
      uint64_t v72 = v32;
      v84._countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v84);
      swift_bridgeObjectRelease();
      v85._countAndFlagsBits = 93;
      v85._object = (void *)0xE100000000000000;
      sub_10096BDC0(v85);
      sub_10059A0E8(v74, v75, v21, v22);
      uint64_t v2 = v65;
LABEL_7:
      uint64_t v6 = v64;
      swift_bridgeObjectRelease();
      (*v62)(v25, v2);
      ++v20;
      uint64_t v4 = v25;
      if (v67 == v20) {
        return swift_release();
      }
    }
    uint64_t v36 = *(void *)(v33 + 56) + 32 * v34;
    uint64_t v37 = *(void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + 8);
    uint64_t v39 = *(void *)(v36 + 16);
    uint64_t v40 = v70[3];
    uint64_t v41 = v70[4];
    v59[1] = v39;
    uint64_t v60 = v41;
    uint64_t v42 = v40;
    unint64_t v61 = sub_10002689C(v70, v40);
    uint64_t v74 = 0;
    os_log_type_t v75 = (void *)0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_10096CBD0(38);
    swift_bridgeObjectRelease();
    uint64_t v74 = 8224;
    os_log_type_t v75 = (void *)0xE200000000000000;
    sub_10096AD20((NSURL *)0xE200000000000000);
    unint64_t v44 = v43;
    id v45 = objc_msgSend(v43, "fp_shortDescription");

    uint64_t v46 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v48 = v47;

    v86._countAndFlagsBits = v46;
    v86._object = v48;
    sub_10096BDC0(v86);
    swift_bridgeObjectRelease();
    v87._countAndFlagsBits = 0x3A6F6E695B20;
    v87._object = (void *)0xE600000000000000;
    sub_10096BDC0(v87);
    uint64_t v72 = v32;
    v88._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v88);
    swift_bridgeObjectRelease();
    v89._countAndFlagsBits = 0x746E65726170202CLL;
    v89._object = (void *)0xE90000000000003ALL;
    sub_10096BDC0(v89);
    if (v38)
    {
      if (v38 != 1)
      {
        uint64_t v2 = v65;
        uint64_t v51 = v42;
        if (v37) {
          v49._countAndFlagsBits = 0x6873617274;
        }
        else {
          v49._countAndFlagsBits = 1953460082;
        }
        if (v37) {
          uint64_t v50 = (void *)0xE500000000000000;
        }
        else {
          uint64_t v50 = (void *)0xE400000000000000;
        }
        goto LABEL_23;
      }
      uint64_t v71 = v37;
      uint64_t v72 = 0x284449656C6966;
      unint64_t v73 = 0xE700000000000000;
    }
    else
    {
      uint64_t v72 = 0x284449636F64;
      unint64_t v73 = 0xE600000000000000;
      LODWORD(v71) = v37;
    }
    v90._countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v90);
    swift_bridgeObjectRelease();
    v91._countAndFlagsBits = 41;
    v91._object = (void *)0xE100000000000000;
    sub_10096BDC0(v91);
    v49._countAndFlagsBits = v72;
    uint64_t v50 = (void *)v73;
    uint64_t v2 = v65;
    uint64_t v51 = v42;
LABEL_23:
    uint64_t v52 = v60;
    v49._object = v50;
    sub_10096BDC0(v49);
    swift_bridgeObjectRelease();
    v92._countAndFlagsBits = 0x616E656C6966202CLL;
    v92._object = (void *)0xEC000000203A656DLL;
    sub_10096BDC0(v92);
    NSString v53 = sub_10096BC00();
    id v54 = objc_msgSend(v53, "fp_obfuscatedFilename");

    uint64_t v55 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    char v57 = v56;

    v93._countAndFlagsBits = v55;
    v93._object = v57;
    sub_10096BDC0(v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v94._countAndFlagsBits = 93;
    v94._object = (void *)0xE100000000000000;
    sub_10096BDC0(v94);
    sub_10059A0E8(v74, v75, v51, v52);
    uint64_t v25 = (char *)v59[0];
    goto LABEL_7;
  }
  return swift_release();
}

uint64_t sub_1009144AC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_10000A63C((uint64_t)(v0 + 34));
  unint64_t v1 = (char *)v0 + qword_100ADE778;
  uint64_t v2 = sub_10002B7CC(&qword_100ACDA28);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + qword_100ADE780;
  uint64_t v4 = sub_10002B7CC(&qword_100AD74A0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  sub_100929F70(*(uint64_t *)((char *)v0 + qword_100ADE750), *(uint64_t *)((char *)v0 + qword_100ADE750 + 8));
  sub_1000705CC(*(uint64_t *)((char *)v0 + qword_100ADE790));

  sub_10092D018((uint64_t)v0 + qword_100B0B640, type metadata accessor for VFSCounters);
  sub_10002D240(*(id *)((char *)v0 + qword_100ADE768));

  return swift_bridgeObjectRelease();
}

id *VFSFileTree.deinit()
{
  uint64_t v0 = (id *)sub_1008D4CF8((void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_1000705CC, (void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_10035A21C);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_10000A63C((uint64_t)(v0 + 34));
  unint64_t v1 = (char *)v0 + qword_100ADE778;
  uint64_t v2 = sub_10002B7CC(&qword_100ACDA28);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + qword_100ADE780;
  uint64_t v4 = sub_10002B7CC(&qword_100AD74A0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  sub_100929F70(*(uint64_t *)((char *)v0 + qword_100ADE750), *(uint64_t *)((char *)v0 + qword_100ADE750 + 8));
  sub_1000705CC(*(uint64_t *)((char *)v0 + qword_100ADE790));

  sub_10092D018((uint64_t)v0 + qword_100B0B640, type metadata accessor for VFSCounters);
  sub_10002D240(*(id *)((char *)v0 + qword_100ADE768));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VFSFileTree.__deallocating_deinit()
{
  VFSFileTree.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1009148F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)a1;
  int v10 = *(unsigned __int8 *)(a1 + 8);
  sub_10001AE98(a2, (uint64_t)v12, (uint64_t *)&unk_100AD6BC0);
  return sub_10043E018(v9, v10, (uint64_t)v12, 0, a4, a5, a6);
}

uint64_t sub_100914978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10092A65C(*(void *)a1, *(unsigned char *)(a1 + 8), a2, a5, a6, a7, a8);
}

uint64_t sub_10091499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)a1;
  char v12 = *(unsigned char *)(a1 + 8);
  sub_10001AE98(a2, (uint64_t)v14, (uint64_t *)&unk_100AD6BC0);
  return sub_10092B86C(v11, v12, v14, a4, a5, a6, a7);
}

uint64_t sub_100914A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_10092A05C(a1, a2, a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6;
  return result;
}

void sub_100914A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  id v6 = (id)FPNotSupportedError();
  a5();
}

id sub_100914AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *))
{
  uint64_t v8 = sub_10002B7CC(&qword_100ACF770);
  __chkstk_darwin(v8);
  int v10 = (uint64_t *)((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id result = (id)FPNotSupportedError();
  if (result)
  {
    *int v10 = result;
    swift_storeEnumTagMultiPayload();
    a7(v10);
    return (id)sub_10002B770((uint64_t)v10, &qword_100ACF770);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100914B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008EAE34(*(void *)a1, *(unsigned char *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_100914B8C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1008EB914(*(void *)a1, *(unsigned char *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_100914BA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008EBC08(*(void *)a1, *(unsigned char *)(a1 + 8), a2, a3, a4, a5);
}

uint64_t sub_100914BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)a1;
  int v12 = *(unsigned __int8 *)(a1 + 8);
  sub_10001AE98(a4, (uint64_t)v14, (uint64_t *)&unk_100AD6BC0);
  return sub_10092C9A4(v11, v12, (uint64_t)v14, a7, a8, a9);
}

uint64_t sub_100914C40(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void, void), uint64_t a10)
{
  uint64_t v10 = *(void *)a1;
  long long v11 = a5[3];
  v15[2] = a5[2];
  v15[3] = v11;
  long long v12 = a5[5];
  v15[4] = a5[4];
  v15[5] = v12;
  long long v13 = a5[1];
  v15[0] = *a5;
  v15[1] = v13;
  return sub_10092C26C(v10, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, v15, a7, a8, a9, a10);
}

uint64_t sub_100914CA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_10092BED0(a1, a2, a3, a7, a8, a9, a10);
}

uint64_t sub_100914CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, char *a12)
{
  uint64_t v12 = *(void *)a1;
  long long v13 = a6[3];
  v17[2] = a6[2];
  v17[3] = v13;
  long long v14 = a6[5];
  v17[4] = a6[4];
  v17[5] = v14;
  long long v15 = a6[1];
  v17[0] = *a6;
  v17[1] = v15;
  return sub_10092D078(v12, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, a5, v17, a8, a9, a11, a12);
}

uint64_t sub_100914D1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v11 = *(_OWORD *)(a3 + 48);
  v36[2] = *(_OWORD *)(a3 + 32);
  v36[3] = v11;
  long long v12 = *(_OWORD *)(a3 + 80);
  v36[4] = *(_OWORD *)(a3 + 64);
  v36[5] = v12;
  long long v13 = *(_OWORD *)(a3 + 16);
  long long v14 = *(_OWORD *)(a3 + 32);
  v36[0] = *(_OWORD *)a3;
  v36[1] = v13;
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(unsigned int *)(a3 + 8);
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = *(unsigned __int8 *)(a3 + 24);
  uint64_t v19 = *(unsigned __int8 *)(a3 + 48);
  uint64_t v20 = *(void *)(a3 + 56);
  uint64_t v21 = *(void *)(a3 + 64);
  uint64_t v22 = *(void *)(a3 + 88);
  int v23 = *(unsigned __int8 *)(a1 + 8);
  v29[0] = *(void *)a3;
  v29[1] = v16;
  v29[2] = v17;
  v29[3] = v18;
  long long v30 = v14;
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  uint64_t v33 = v21;
  long long v34 = *(_OWORD *)(a3 + 72);
  uint64_t v35 = v22;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v24 + 88) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v24 + 104) = v25;
  long long v26 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v24 + 136) = v26;
  long long v27 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)a3;
  *(void *)(v24 + 16) = v15;
  *(unsigned char *)(v24 + 24) = v23;
  *(void *)(v24 + 32) = v6;
  *(void *)(v24 + 40) = a5;
  *(void *)(v24 + 48) = a6;
  *(_OWORD *)(v24 + 72) = v27;
  *(unsigned char *)(v24 + 152) = a2;
  sub_100938D34((uint64_t)v36);
  sub_100938D34((uint64_t)v36);
  swift_retain();
  swift_retain();
  sub_10043E018(v15, v23, (uint64_t)v29, 0, 0, (uint64_t)sub_10021CAF0, v24);
  swift_release();
  return sub_100938D88((uint64_t)v36);
}

uint64_t sub_100914E78(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_100903A7C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8), a3, a4);
}

uint64_t sub_100914E98(uint64_t a1, _OWORD *a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)a1;
  long long v8 = a2[3];
  v19[2] = a2[2];
  v19[3] = v8;
  long long v9 = a2[5];
  v19[4] = a2[4];
  v19[5] = v9;
  long long v10 = a2[1];
  v19[0] = *a2;
  v19[1] = v10;
  uint64_t v11 = *(void *)a3;
  long long v12 = a4[1];
  int v13 = *(unsigned __int8 *)(a1 + 8);
  int v14 = *(unsigned __int8 *)(a3 + 8);
  v20[0] = *a4;
  v20[1] = v12;
  long long v15 = a4[2];
  long long v16 = a4[3];
  long long v17 = a4[5];
  v20[4] = a4[4];
  v20[5] = v17;
  v20[2] = v15;
  v20[3] = v16;
  return sub_1009063D8(v7, v13, v19, v11, v14, v20, a5, a6);
}

uint64_t sub_100914F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a1;
  memset(v9, 0, sizeof(v9));
  int v6 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  swift_retain();
  sub_10043E018(v5, v6, (uint64_t)v9, 0, 0, (uint64_t)sub_100938C60, v7);

  return swift_release();
}

uint64_t sub_100914FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  memset(v10, 0, sizeof(v10));
  int v7 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = v6;
  *(unsigned char *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = v3;
  swift_retain();
  swift_retain();
  sub_10043E018(v6, v7, (uint64_t)v10, 0, 0, (uint64_t)sub_100938BF4, v8);

  return swift_release();
}

uint64_t sub_1009150A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  memset(v10, 0, sizeof(v10));
  int v7 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = v6;
  *(unsigned char *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = v3;
  swift_retain();
  swift_retain();
  sub_10043E018(v6, v7, (uint64_t)v10, 0, 0, (uint64_t)sub_100938B98, v8);

  return swift_release();
}

uint64_t sub_100915174(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  memset(v12, 0, sizeof(v12));
  int v9 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  *(void *)(v10 + 32) = v8;
  *(unsigned char *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 41) = a2;
  *(void *)(v10 + 48) = v4;
  swift_retain();
  swift_retain();
  sub_10043E018(v8, v9, (uint64_t)v12, 0, 2048, (uint64_t)sub_100938B64, v10);

  return swift_release();
}

uint64_t sub_100915254(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  memset(v12, 0, sizeof(v12));
  int v9 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  *(void *)(v10 + 32) = v8;
  *(unsigned char *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 41) = a2;
  *(void *)(v10 + 48) = v4;
  swift_retain();
  swift_retain();
  sub_10043E018(v8, v9, (uint64_t)v12, 0, 2048, (uint64_t)sub_100938B48, v10);

  return swift_release();
}

uint64_t sub_100915334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008E7A2C(*(void *)a1, *(unsigned char *)(a1 + 8), a2, a3);
}

uint64_t sub_10091534C(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)a1;
  long long v7 = a2[3];
  v11[2] = a2[2];
  v11[3] = v7;
  long long v8 = a2[5];
  v11[4] = a2[4];
  v11[5] = v8;
  long long v9 = a2[1];
  v11[0] = *a2;
  v11[1] = v9;
  return sub_1008EDEB4(v6, *(unsigned char *)(a1 + 8), v11, a3, a4, a5, a6);
}

uint64_t sub_1009153A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  memset(v12, 0, sizeof(v12));
  int v9 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  *(unsigned char *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = v4;
  *(void *)(v10 + 48) = v8;
  *(unsigned char *)(v10 + 56) = v9;
  swift_retain();
  swift_retain();
  sub_10043E018(v8, v9, (uint64_t)v12, 0, 1, (uint64_t)sub_100938308, v10);

  return swift_release();
}

uint64_t sub_100915480(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1009154D0(a1, a2, a3, (uint64_t)&unk_100AA4BF0, (uint64_t)"detachFolder(_:completion:)", (uint64_t)sub_100938270);
}

uint64_t sub_1009154A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1009154D0(a1, a2, a3, (uint64_t)&unk_100AA4BC8, (uint64_t)"attachFolder(_:completion:)", (uint64_t)sub_100938194);
}

uint64_t sub_1009154D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a1;
  char v12 = *((unsigned char *)a1 + 8);
  int v13 = *(void **)(v6 + 216);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  *(unsigned char *)(v14 + 24) = v12;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  *(void *)(v14 + 48) = v6;
  id v15 = v13;
  swift_retain();
  swift_retain();
  sub_1006B8108(0, a5, 27, 2, a6, v14);

  return swift_release();
}

uint64_t sub_10091559C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int v9 = v7;
  if (a3 == 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  if (a3 == 2)
  {
    swift_bridgeObjectRetain();
    id v15 = (void *)swift_retain();
    int v16 = objc_sync_enter(v15);
    if (a2)
    {
      if (v16) {
        goto LABEL_30;
      }
      uint64_t v17 = v7[20];
      swift_retain();
      if (objc_sync_exit(v7)) {
        goto LABEL_31;
      }
      swift_release();
      a2 = *(void *)(v17 + 40);
      char v18 = *(unsigned char *)(v17 + 48);
      swift_release();
      if (v18)
      {
        swift_bridgeObjectRelease();
        *(void *)&long long v40 = 1;
        BYTE8(v40) = 2;
        long long v41 = 0u;
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        long long v45 = 0u;
        long long v46 = 0u;
        uint64_t v47 = 0;
        sub_1000D3768((uint64_t)&v40);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        swift_allocError();
        sub_10001AE98((uint64_t)&v40, v19, (uint64_t *)&unk_100ACD9A0);
        return swift_willThrow();
      }
    }
    else
    {
      if (v16) {
        goto LABEL_30;
      }
      uint64_t v21 = v7[20];
      swift_retain();
      if (objc_sync_exit(v7)) {
        goto LABEL_31;
      }
      swift_release();
      a2 = *(void *)(v21 + 24);
      swift_release();
    }
LABEL_12:
    v48[0] = a1;
    v48[1] = a2;
    v48[2] = 0;
    v48[3] = a4;
    v48[4] = a5;
    uint64_t v22 = (void *)swift_retain();
    if (!objc_sync_enter(v22))
    {
      uint64_t v23 = v9[20];
      swift_retain();
      if (!objc_sync_exit(v9))
      {
        swift_release();
        int v24 = *(_DWORD *)(v23 + 16);
        uint64_t v25 = swift_release();
        uint64_t v26 = __chkstk_darwin(v25);
        *(void *)&long long v42 = 0;
        *(void *)&long long v40 = a1;
        *((void *)&v40 + 1) = a2;
        long long v41 = 0uLL;
        uint64_t v27 = __chkstk_darwin(v26);
        if ((a5 & 0x1000000000000000) != 0 || !(a5 & 0x2000000000000000 | a4 & 0x1000000000000000))
        {
          sub_10096CBC0();
          if (!v8)
          {
            uint64_t v31 = v35;
            goto LABEL_23;
          }
        }
        else
        {
          __chkstk_darwin(v27);
          if ((a5 & 0x2000000000000000) != 0)
          {
            v34[0] = a4;
            v34[1] = a5 & 0xFFFFFFFFFFFFFFLL;
            *((void *)&v41 + 1) = v34;
            long long v36 = v40;
            uint64_t v37 = v41;
            int v38 = v34;
            uint64_t v39 = v42;
            uint64_t v30 = fpfs_openfdbyhandle();
            if ((v30 & 0x80000000) == 0)
            {
LABEL_22:
              uint64_t v31 = v30;
LABEL_23:
              sub_10044120C(v31, v48, v24, a6 & 1, a7);
              sub_100595FB8(v31);
              return swift_bridgeObjectRelease();
            }
            int v32 = sub_10096B4D0();
            sub_10059615C(v32, 0, 0, 0xAu);
            swift_willThrow();
          }
          else
          {
            if ((a4 & 0x1000000000000000) != 0)
            {
              uint64_t v28 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
              uint64_t v29 = a4 & 0xFFFFFFFFFFFFLL;
            }
            else
            {
              uint64_t v28 = sub_10096CC90();
            }
            uint64_t v30 = (uint64_t)sub_100441D24(v28, v29, (void *(*)(uint64_t *__return_ptr))sub_10043F5C4);
            if (!v8) {
              goto LABEL_22;
            }
          }
        }
        swift_errorRetain();
        LODWORD(v40) = sub_10096A6F0();
        sub_100045CB4();
        sub_10096AA60();
        swift_errorRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_31:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v9);
    }
LABEL_30:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v9);
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_100915AD8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)swift_retain();
  uint64_t v3 = sub_100852230(v2, v1);
  swift_release();
  return v3;
}

uint64_t sub_100915B2C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10096B600();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100915BA8()
{
  return sub_10096B610();
}

uint64_t sub_100915C18(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_100915C50(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1009160F4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    int v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  int v13 = &_swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_10096BEC0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_10096BD70();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_10096BD70();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_10096BEE0();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v13 = sub_1006A27A0(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    int v13 = sub_1006A27A0((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_10096BD70();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_10096BEE0();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v13 = sub_1006A27A0(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      int v13 = sub_1006A27A0((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    long long v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    _OWORD v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_10096CE10();
  __break(1u);
LABEL_42:
  uint64_t result = sub_10096CE10();
  __break(1u);
  return result;
}

uint64_t sub_1009160F4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_10096BEE0();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1006A27A0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1006A27A0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_10096CE10();
  __break(1u);
  return result;
}

uint64_t sub_100916250@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100916280@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

double sub_1009162B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091AE6C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100042A48((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_100917890(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1009163B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091B8CC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(_OWORD *)(*(void *)(v11 + 56) + 16 * v8);
    sub_100917C60(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = xmmword_100973BC0;
  }
  return result;
}

uint64_t sub_10091649C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091BA94();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_100917C60(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100916584(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031F918(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091BFF0();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_100917E38(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10091664C(uint64_t a1)
{
  return sub_1009166B4(a1, sub_10031F918, (uint64_t)&qword_100ACCD18, (void (*)(uint64_t))sub_10091C51C);
}

uint64_t sub_100916680(uint64_t a1)
{
  return sub_1009166B4(a1, sub_10031F918, (uint64_t)&unk_100AD20D8, (void (*)(uint64_t))sub_10091C51C);
}

uint64_t sub_1009166B4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v8 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = a2(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v8;
  uint64_t v16 = *v8;
  *uint64_t v8 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4(a3);
    uint64_t v13 = v16;
  }

  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  sub_100917E38(v10, v13);
  *uint64_t v8 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10091679C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031FCF8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091C6BC();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  sub_10092D018(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_100918030(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100916890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009170D4(a1, a2, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date, &qword_100ACCAE0, a3);
}

uint64_t sub_1009168B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10031FC28(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091C964();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
    sub_10092D018(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_10096B0E0();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_100918374(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_10096B0E0();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_100916A80(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031F918(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091D3FC();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 24 * v4);
  sub_100918B5C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100916B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10031FDC4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091D5C0();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for SyncState();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_10001158C(v10 + *(void *)(v18 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for SyncState);
    sub_100918D5C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for SyncState();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_100916D04(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031F918(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091D9F0();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 24 * v4);
  sub_100918B5C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100916DEC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031F918(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091DD98();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_100917E38(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100916EC0(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10031FDF0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091DF54();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_10002B7CC(&qword_100AD65C0);
  sub_10002B770(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, &qword_100AD65C0);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10091973C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100916FB4(void *a1, void *a2, void *a3, char a4)
{
  char v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_100320230(a1, a2, a3, a4);
  char v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v5;
  uint64_t v17 = *v5;
  uint64_t *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091E3AC();
    uint64_t v14 = v17;
  }
  sub_1001FAB20(*(void **)(*(void *)(v14 + 48) + 32 * v10), *(void **)(*(void *)(v14 + 48) + 32 * v10 + 8), *(void **)(*(void *)(v14 + 48) + 32 * v10 + 16), *(unsigned char *)(*(void *)(v14 + 48) + 32 * v10 + 24));
  uint64_t v15 = *(void *)(*(void *)(v14 + 56) + 16 * v10);
  sub_100919B7C(v10, v14);
  uint64_t *v5 = v14;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1009170B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009170D4(a1, a2, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL, &qword_100ACCC48, a3);
}

uint64_t sub_1009170D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v10 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v10;
    uint64_t v27 = *v10;
    *unint64_t v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091ECB8(a4, a5);
      uint64_t v17 = v27;
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v17 + 56);
    uint64_t v19 = a3(0);
    uint64_t v26 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 32))(a6, v18 + *(void *)(v26 + 72) * v14, v19);
    sub_10091A184(v14, v17, a4);
    *unint64_t v10 = v17;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    uint64_t v21 = a6;
    uint64_t v22 = 0;
    uint64_t v23 = v19;
  }
  else
  {
    uint64_t v24 = a3(0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v23 = v24;
    uint64_t v21 = a6;
    uint64_t v22 = 1;
  }

  return v20(v21, v22, 1, v23);
}

uint64_t sub_1009172A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10007F204(&qword_100ACCAF0);
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10007EB00(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10091737C(uint64_t a1)
{
  return sub_1009166B4(a1, sub_10031F918, (uint64_t)&qword_100ACCC70, (void (*)(uint64_t))sub_10091F81C);
}

uint64_t sub_1009173B0(uint64_t a1)
{
  return sub_1009166B4(a1, sub_10031F918, (uint64_t)&qword_100ACCC80, (void (*)(uint64_t))sub_10091F81C);
}

double sub_1009173E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10000DDD0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091FB98(&qword_100AD20F0, (void (*)(unsigned char *, uint64_t))sub_1001E9E64);
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1001E9E64((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_10091A3A4(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_10091750C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000DDD0(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10091FDA4(qword_100AD2100);
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10007EB00(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1009175F4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10031F918(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10091FF70(&qword_100AD20D0);
      uint64_t v9 = v11;
    }

    sub_100042A48((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_10091A594(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1009176F4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100320688(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100920798();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_10096AE50();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10091A788(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1009177F8(Swift::UInt64 a1, char a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = sub_10031F858(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  unint64_t v6 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v2;
  uint64_t v11 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100920A2C();
    uint64_t v8 = v11;
  }
  uint64_t v9 = *(void *)(*(void *)(v8 + 56) + 8 * v6);
  sub_10091AA80(v6, v8);
  *uint64_t v3 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_100917890(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10096D4B0();
        swift_bridgeObjectRetain();
        sub_10096BD50();
        Swift::Int v10 = sub_10096D500();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100917A68(unint64_t a1, uint64_t a2)
{
  return sub_1009194DC(a1, a2, &qword_100ACCB10);
}

unint64_t sub_100917A74(unint64_t a1, uint64_t a2)
{
  return sub_1009194DC(a1, a2, &qword_100ACCA78);
}

unint64_t sub_100917A80(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        Swift::Int v10 = (void *)(v9 + 8 * v6);
        double result = sub_10096D4A0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        unint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *unint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_10002B7CC((uint64_t *)&unk_100ACC9B0) - 8) + 72);
        int64_t v17 = v16 * v3;
        double result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100917C60(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10096D4B0();
        swift_bridgeObjectRetain();
        sub_10096BD50();
        Swift::Int v9 = sub_10096D500();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100917E38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::Int v9 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10096D4B0();
        id v10 = v9;
        sub_10096BD50();
        Swift::Int v11 = sub_10096D500();

        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          int64_t v17 = (void *)(v16 + 8 * v3);
          uint64_t v18 = (void *)(v16 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *int64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100918030(int64_t a1, uint64_t a2)
{
  uint64_t v31 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v4 = *(void *)(v31 - 8);
  unint64_t result = __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v30 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_1009381C4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        sub_10096D4B0();
        sub_10096AE50();
        sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
        sub_10096BAD0();
        sub_10096C840();
        Swift::Int v17 = sub_10096D500();
        unint64_t result = sub_10092D018((uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        uint64_t v13 = v16;
        Swift::Int v18 = v17 & v16;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 < v30)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v30 || a1 >= v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(a2 + 48);
            unint64_t result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (void *)(v20 + 8 * a1);
            uint64_t v22 = (void *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *BOOL v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100918374(int64_t a1, uint64_t a2)
{
  uint64_t v34 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  uint64_t v4 = *(void *)(v34 - 8);
  unint64_t result = __chkstk_darwin(v34);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_1009381C4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        sub_10096D4B0();
        sub_10096AE50();
        sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
        sub_10096BAD0();
        sub_10096BD50();
        Swift::Int v17 = sub_10096D500();
        unint64_t result = sub_10092D018((uint64_t)v7, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        uint64_t v13 = v16;
        Swift::Int v18 = v17 & v16;
        if (a1 >= (uint64_t)v33)
        {
          if (v18 < v33)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v33 || a1 >= v18)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(void *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = *(void *)(*(void *)(sub_10096B0E0() - 8) + 72);
            int64_t v21 = v20 * a1;
            unint64_t result = v19 + v20 * a1;
            int64_t v22 = v20 * v10;
            unint64_t v23 = v19 + v20 * v10 + v20;
            if (v21 < v22 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
            }
            else
            {
              a1 = v10;
              BOOL v25 = v21 == v22;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
              if (!v25)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v13 = v16;
                a1 = v10;
              }
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *uint64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100918708(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt64 v12 = *(void *)v11;
        int v13 = *(unsigned __int8 *)(v11 + 8);
        sub_10096D4B0();
        if (v13)
        {
          if (v13 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v12);
          }
          else
          {
            if (v12) {
              Swift::UInt v14 = 3;
            }
            else {
              Swift::UInt v14 = 2;
            }
            sub_10096D4C0(v14);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v12);
        }
        unint64_t result = sub_10096D500();
        unint64_t v15 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v8)
        {
          goto LABEL_19;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_19:
          uint64_t v16 = *(void *)(a2 + 48);
          Swift::Int v17 = (_OWORD *)(v16 + 16 * v3);
          Swift::Int v18 = (_OWORD *)(v16 + v10);
          if (16 * v3 != v10 || v17 >= v18 + 1) {
            *Swift::Int v17 = *v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
          int64_t v21 = (_OWORD *)(v19 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
          {
            long long v9 = v21[1];
            _OWORD *v20 = *v21;
            v20[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *int64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091892C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt64 v12 = *(void *)v11;
        int v13 = *(unsigned __int8 *)(v11 + 8);
        sub_10096D4B0();
        if (v13)
        {
          if (v13 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v12);
          }
          else
          {
            if (v12) {
              Swift::UInt v14 = 3;
            }
            else {
              Swift::UInt v14 = 2;
            }
            sub_10096D4C0(v14);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v12);
        }
        unint64_t result = sub_10096D500();
        unint64_t v15 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v8)
        {
          goto LABEL_19;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_19:
          uint64_t v16 = *(void *)(a2 + 48);
          Swift::Int v17 = (_OWORD *)(v16 + 16 * v3);
          Swift::Int v18 = (_OWORD *)(v16 + v10);
          if (16 * v3 != v10 || v17 >= v18 + 1) {
            *Swift::Int v17 = *v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          unint64_t v20 = v19 + 24 * v3;
          int64_t v21 = (long long *)(v19 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= (unint64_t)v21 + 24))
          {
            long long v9 = *v21;
            *(void *)(v20 + 16) = *((void *)v21 + 2);
            *(_OWORD *)unint64_t v20 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *int64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100918B5C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10096D4B0();
        id v11 = v10;
        sub_10096BD50();
        Swift::Int v12 = sub_10096D500();

        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *unint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = v17 + 24 * v3;
          uint64_t v19 = (long long *)(v17 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 24))
          {
            long long v9 = *v19;
            *(void *)(v18 + 16) = *((void *)v19 + 2);
            *(_OWORD *)unint64_t v18 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100918D5C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_10096D4B0();
        sub_10096BD50();
        swift_bridgeObjectRelease();
        unint64_t result = sub_10096D500();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        id v11 = (unsigned char *)(v10 + v3);
        Swift::Int v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          unsigned char *v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for SyncState() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0x10091908CLL);
  }
  *(void *)(a2 + 16) = v24;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1009190B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v9 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10096D4B0();
        id v10 = v9;
        sub_10096BD50();
        Swift::Int v11 = sub_10096D500();

        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          int64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = (_OWORD *)(v16 + 16 * v3);
          unint64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (16 * v3 != 16 * v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *unint64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1009192AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt64 v11 = *(void *)v10;
        int v12 = *(unsigned __int8 *)(v10 + 8);
        sub_10096D4B0();
        if (v12)
        {
          if (v12 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v11);
          }
          else
          {
            if (v11) {
              Swift::UInt v13 = 3;
            }
            else {
              Swift::UInt v13 = 2;
            }
            sub_10096D4C0(v13);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v11);
        }
        unint64_t result = sub_10096D500();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v8)
        {
          goto LABEL_19;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_19:
          uint64_t v15 = *(void *)(a2 + 48);
          uint64_t v16 = 16 * v3;
          unint64_t v17 = (_OWORD *)(v15 + 16 * v3);
          unint64_t v18 = (_OWORD *)(v15 + v9);
          if (16 * v3 != v9 || v17 >= v18 + 1) {
            *unint64_t v17 = *v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          uint64_t v20 = (_OWORD *)(v19 + v16);
          uint64_t v21 = (_OWORD *)(v19 + v9);
          if (v16 != v9 || (int64_t v3 = v6, v20 >= v21 + 1))
          {
            _OWORD *v20 = *v21;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1009194D0(unint64_t a1, uint64_t a2)
{
  return sub_1009194DC(a1, a2, &qword_100ACCA30);
}

unint64_t sub_1009194DC(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        uint64_t v11 = 16 * v7;
        uint64_t v12 = *(void *)(a2 + 48) + 16 * v7;
        Swift::UInt64 v13 = *(void *)v12;
        int v14 = *(unsigned __int8 *)(v12 + 8);
        sub_10096D4B0();
        if (v14)
        {
          if (v14 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v13);
          }
          else
          {
            Swift::UInt v15 = v13 ? 3 : 2;
            sub_10096D4C0(v15);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v13);
        }
        unint64_t result = sub_10096D500();
        unint64_t v16 = result & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v16 < v10) {
          goto LABEL_19;
        }
LABEL_20:
        uint64_t v17 = *(void *)(a2 + 48);
        unint64_t v18 = (_OWORD *)(v17 + 16 * v4);
        uint64_t v19 = (_OWORD *)(v17 + v11);
        if (16 * v4 != v11 || v18 >= v19 + 1) {
          *unint64_t v18 = *v19;
        }
        uint64_t v20 = *(void *)(a2 + 56);
        uint64_t v21 = *(void *)(*(void *)(sub_10002B7CC(a3) - 8) + 72);
        int64_t v22 = v21 * v4;
        unint64_t result = v20 + v21 * v4;
        int64_t v23 = v21 * v7;
        unint64_t v24 = v20 + v21 * v7 + v21;
        if (v22 < v23 || result >= v24)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v22 == v23) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_29;
        }
      }
      if (v16 < v10) {
        goto LABEL_6;
      }
LABEL_19:
      if (v4 < (uint64_t)v16) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_29:
    BOOL v26 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << v4) - 1;
  }
  else
  {
    BOOL v26 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << result) - 1;
  }
  *BOOL v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091973C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  __chkstk_darwin(v6 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v8 = *(void *)(v47 - 8);
  uint64_t v9 = __chkstk_darwin(v47);
  uint64_t v45 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = __chkstk_darwin(v9);
  Swift::UInt64 v13 = (char *)&v41 - v12;
  uint64_t v14 = a2 + 64;
  uint64_t v46 = a2;
  uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(void *)(a2 + 64 + 8 * (v16 >> 6))) != 0)
  {
    uint64_t v17 = ~v15;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      unint64_t v18 = (result + 1) & v17;
      uint64_t v19 = *(void *)(v8 + 72);
      uint64_t v20 = v46;
      uint64_t v44 = v14;
      while (1)
      {
        uint64_t v21 = v19;
        int64_t v22 = v19 * v16;
        sub_10002B70C(*(void *)(v20 + 48) + v19 * v16, (uint64_t)v13, &qword_100AD65C0);
        sub_10096D4B0();
        uint64_t v23 = v45;
        sub_10002B70C((uint64_t)v13, v45, &qword_100AD65C0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v24 = v43;
          sub_10001AE98(v23, v43, (uint64_t *)&unk_100AD65B0);
          sub_10096D4C0(1uLL);
          sub_1008D6D84();
          uint64_t v25 = v24;
          BOOL v26 = (uint64_t *)&unk_100AD65B0;
        }
        else
        {
          uint64_t v27 = v42;
          sub_10001AE98(v23, v42, (uint64_t *)&unk_100AD0A90);
          sub_10096D4C0(0);
          sub_1008D68E4();
          uint64_t v25 = v27;
          BOOL v26 = (uint64_t *)&unk_100AD0A90;
        }
        sub_10002B770(v25, v26);
        Swift::Int v28 = sub_10096D500();
        unint64_t result = sub_10002B770((uint64_t)v13, &qword_100AD65C0);
        Swift::Int v29 = v28 & v17;
        if (a1 >= (uint64_t)v18)
        {
          uint64_t v20 = v46;
          uint64_t v19 = v21;
          if (v29 >= v18 && a1 >= v29)
          {
LABEL_15:
            uint64_t v30 = *(void *)(v20 + 48);
            unint64_t result = v30 + v19 * a1;
            if (v19 * a1 < v22 || result >= v30 + v22 + v19)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v19 = v21;
              uint64_t v14 = v44;
            }
            else
            {
              BOOL v31 = v19 * a1 == v22;
              uint64_t v14 = v44;
              if (!v31)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v19 = v21;
              }
            }
            uint64_t v32 = *(void *)(v20 + 56);
            unint64_t v33 = (void *)(v32 + 8 * a1);
            uint64_t v34 = (void *)(v32 + 8 * v16);
            if (a1 != v16 || (a1 = v16, v33 >= v34 + 1))
            {
              void *v33 = *v34;
              a1 = v16;
            }
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v20 = v46;
          uint64_t v19 = v21;
          if (v29 >= v18 || a1 >= v29) {
            goto LABEL_15;
          }
        }
        uint64_t v14 = v44;
LABEL_5:
        unint64_t v16 = (v16 + 1) & v17;
        if (((*(void *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v20 = v46;
LABEL_25:
    uint64_t v35 = (uint64_t *)(v14 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v37 = *v35;
    uint64_t v36 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v35 = (uint64_t *)(v14 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v36 = *v35;
    uint64_t v37 = (-1 << a1) - 1;
    uint64_t v20 = v46;
  }
  *uint64_t v35 = v36 & v37;
  uint64_t v38 = *(void *)(v20 + 16);
  BOOL v39 = __OFSUB__(v38, 1);
  uint64_t v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v40;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

void sub_100919B7C(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v35 = v2;
      uint64_t v36 = v4;
      do
      {
        uint64_t v10 = 32 * v6;
        uint64_t v11 = *(void *)(v2 + 48) + 32 * v6;
        uint64_t v12 = v7;
        Swift::UInt64 v13 = *(void **)v11;
        uint64_t v14 = *(void **)(v11 + 8);
        uint64_t v15 = *(void **)(v11 + 16);
        char v16 = *(unsigned char *)(v11 + 24);
        int64_t v17 = v3;
        unint64_t v18 = v9;
        sub_10096D4B0();
        sub_10009C004(v13, v14, v15, v16);
        sub_100273638((uint64_t)v37, v13, v14, v15, v16);
        Swift::Int v19 = sub_10096D500();
        uint64_t v20 = v13;
        uint64_t v7 = v12;
        sub_1001FAB20(v20, v14, v15, v16);
        unint64_t v9 = v18;
        unint64_t v3 = v17;
        Swift::Int v21 = v19 & v12;
        if (v17 >= (uint64_t)v9)
        {
          if (v21 < v9)
          {
            uint64_t v2 = v35;
            uint64_t v4 = v36;
            goto LABEL_5;
          }
          uint64_t v2 = v35;
          if (v17 >= v21) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v2 = v35;
          if (v21 >= v9 || v17 >= v21)
          {
LABEL_12:
            uint64_t v22 = *(void *)(v2 + 48);
            uint64_t v23 = (_OWORD *)(v22 + 32 * v17);
            uint64_t v24 = (_OWORD *)(v22 + v10);
            if (32 * v17 != v10 || v23 >= v24 + 2)
            {
              long long v25 = v24[1];
              *uint64_t v23 = *v24;
              v23[1] = v25;
            }
            uint64_t v26 = *(void *)(v2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 16 * v17);
            Swift::Int v28 = (_OWORD *)(v26 + 16 * v6);
            uint64_t v4 = v36;
            if (v17 != v6 || (unint64_t v3 = v6, v27 >= v28 + 1))
            {
              *uint64_t v27 = *v28;
              unint64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        uint64_t v4 = v36;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    Swift::Int v29 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << v3) - 1;
  }
  else
  {
    Swift::Int v29 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *Swift::Int v29 = v31 & v30;
  uint64_t v32 = *(void *)(v2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
}

unint64_t sub_100919DC8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 48 * v6;
        sub_10001AE98(*(void *)(a2 + 48) + 48 * v6, (uint64_t)v25, &qword_100ACC9E0);
        sub_10096D4B0();
        sub_1002739A4();
        unint64_t result = sub_10096D500();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (long long *)(v11 + 48 * v3);
          Swift::UInt64 v13 = (long long *)(v11 + v9);
          if (48 * v3 < v9 || v12 >= v13 + 3 || v3 != v6)
          {
            long long v14 = *v13;
            long long v15 = v13[2];
            v12[1] = v13[1];
            v12[2] = v15;
            long long *v12 = v14;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          int64_t v17 = (_OWORD *)(v16 + 16 * v3);
          unint64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *int64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    Swift::Int v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    Swift::Int v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100919FC4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_10096D4A0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        long long v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *long long v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        unint64_t result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v16 = v3 == v6;
          int64_t v3 = v6;
          if (v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091A184(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_10096D4B0();
        swift_bridgeObjectRetain();
        sub_10096BD50();
        Swift::Int v11 = sub_10096D500();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        long long v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *long long v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091A3A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10096D4B0();
        swift_bridgeObjectRetain();
        sub_10096BD50();
        Swift::Int v11 = sub_10096D500();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          long long v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *long long v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          int64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091A594(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        long long v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10096D4B0();
        id v11 = v10;
        sub_10096BD50();
        Swift::Int v12 = sub_10096D500();

        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          int64_t v18 = (_OWORD *)(v17 + 32 * v3);
          int64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *int64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091A788(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_10096CA70();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v17 = sub_10096BAC0();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            BOOL v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10091AA80(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt64 v11 = *(void *)v10;
        int v12 = *(unsigned __int8 *)(v10 + 8);
        sub_10096D4B0();
        if (v12)
        {
          if (v12 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v11);
          }
          else
          {
            if (v11) {
              Swift::UInt v13 = 3;
            }
            else {
              Swift::UInt v13 = 2;
            }
            sub_10096D4C0(v13);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v11);
        }
        unint64_t result = sub_10096D500();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v8)
        {
          goto LABEL_19;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_19:
          uint64_t v15 = *(void *)(a2 + 48);
          int64_t v16 = (_OWORD *)(v15 + 16 * v3);
          uint64_t v17 = (_OWORD *)(v15 + v9);
          if (16 * v3 != v9 || v16 >= v17 + 1) {
            *int64_t v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          int64_t v19 = (void *)(v18 + 8 * v3);
          uint64_t v20 = (void *)(v18 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
          {
            void *v19 = *v20;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_10091ACA4()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100AD20B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    if (!v29) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)(v17 + 8);
    __int16 v19 = *(_WORD *)(v17 + 32);
    uint64_t v20 = 24 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    long long v26 = *(_OWORD *)(v17 + 16);
    *(void *)uint64_t v25 = *(void *)v17;
    *(void *)(v25 + 8) = v18;
    *(_OWORD *)(v25 + 16) = v26;
    *(_WORD *)(v25 + 32) = v19;
    uint64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_10091AE6C()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100ACB000);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1001FAC78(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_100042A48(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10091B054()
{
  return sub_10091E1F4(&qword_100AD2078);
}

void *sub_10091B060()
{
  return sub_10091E1F4(&qword_100AD2090);
}

void *sub_10091B06C()
{
  return sub_10091B3F4(&qword_100ACCB10, (uint64_t *)&unk_100ACDA00);
}

id sub_10091B080()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    swift_bridgeObjectRetain();
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091B228()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCBA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091B3E0()
{
  return sub_10091B3F4(&qword_100ACCA78, &qword_100ACCA70);
}

void *sub_10091B3F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = sub_10002B7CC(a1);
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(a2);
  unint64_t v29 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = sub_10096CE80();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *unint64_t v29 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v30 = v8 + 64;
  int64_t v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      int64_t v14 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v14);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    uint64_t v21 = *(void *)(v8 + 48) + 16 * v19;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    unint64_t v24 = *(void *)(v32 + 72) * v19;
    sub_10002B70C(*(void *)(v8 + 56) + v24, (uint64_t)v7, a1);
    uint64_t v25 = *(void *)(v10 + 48) + v20;
    *(void *)uint64_t v25 = v22;
    *(unsigned char *)(v25 + 8) = v23;
    id result = (void *)sub_10001AE98((uint64_t)v7, *(void *)(v10 + 56) + v24, a1);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v14);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091B65C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACC9B0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACC9A8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_10002B70C(*(void *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t *)&unk_100ACC9B0);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    id result = (void *)sub_10001AE98((uint64_t)v4, *(void *)(v7 + 56) + v19, (uint64_t *)&unk_100ACC9B0);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10091B8CC()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100ACB940);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    void *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_10001EBB0(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091BA94()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACC980);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    long long v24 = (void *)(*(void *)(v4 + 56) + v16);
    *long long v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091BC50()
{
  return sub_10091E1F4(&qword_100AD2060);
}

void *sub_10091BC5C()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACC990);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_100017368(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1001FAC78(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_100042A48(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091BE44()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCB88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091BFF0()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCA60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091C19C()
{
  return sub_100920BF0(&qword_100ACCA58);
}

id sub_10091C1A8()
{
  return sub_10091C51C(&qword_100ACCD18);
}

void *sub_10091C1B4()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCB98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_errorRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091C360()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACC978);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091C510()
{
  return sub_10091C51C(&qword_100AD20D8);
}

id sub_10091C51C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091C6BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACCD38);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_1009381C4(*(void *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_10001158C((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10091C944()
{
  return sub_10091ECB8((uint64_t (*)(void))&type metadata accessor for Date, &qword_100ACCAE0);
}

void *sub_10091C964()
{
  uint64_t v1 = sub_10096B0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACCD28);
  unint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_10096CE80();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v29 + 72) * v18;
    sub_1009381C4(*(void *)(v8 + 48) + v19, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    unint64_t v20 = *(void *)(v2 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v8 + 56) + v20, v1);
    sub_10001158C((uint64_t)v7, *(void *)(v10 + 48) + v19, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v10 + 56) + v20, v4, v1);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10091CCA4()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCC38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 32 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    char v22 = *(unsigned char *)(v20 + 8);
    uint64_t v24 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v25 = v18;
    *(unsigned char *)(v25 + 8) = v17;
    uint64_t v26 = *(void *)(v4 + 56) + v19;
    *(void *)uint64_t v26 = v21;
    *(unsigned char *)(v26 + 8) = v22;
    *(void *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091CE74()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = v16 - v17;
    unint64_t v19 = *(void *)(v2 + 48) + v18;
    uint64_t v20 = *(void **)v19;
    char v21 = *(unsigned char *)(v19 + 9);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    __int16 v24 = *(_WORD *)(v19 + 48);
    uint64_t v25 = *(void *)(*(void *)(v2 + 56) + v17);
    unint64_t v26 = *(void *)(v4 + 48) + v18;
    long long v27 = *(_OWORD *)(v19 + 32);
    uint64_t v28 = *(unsigned __int8 *)(v19 + 8);
    *(void *)unint64_t v26 = *(void *)v19;
    *(unsigned char *)(v26 + 8) = v28;
    *(unsigned char *)(v26 + 9) = v21;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    *(_OWORD *)(v26 + 32) = v27;
    *(_WORD *)(v26 + 48) = v24;
    *(void *)(*(void *)(v4 + 56) + v17) = v25;
    sub_10009C394(v20, v28, v21);
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091D068()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACC8F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = v16 - v17;
    unint64_t v19 = *(void *)(v2 + 48) + v18;
    uint64_t v20 = *(void *)(v19 + 8);
    __int16 v21 = *(_WORD *)(v19 + 32);
    uint64_t v22 = *(void *)(v19 + 40);
    uint64_t v23 = *(void *)(v19 + 48);
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v17);
    unint64_t v25 = *(void *)(v4 + 48) + v18;
    long long v26 = *(_OWORD *)(v19 + 16);
    *(void *)unint64_t v25 = *(void *)v19;
    *(void *)(v25 + 8) = v20;
    *(_OWORD *)(v25 + 16) = v26;
    *(_WORD *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v22;
    *(void *)(v25 + 48) = v23;
    *(void *)(*(void *)(v4 + 56) + v17) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_10091D23C()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (char *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (char *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v29 = __clz(__rbit64(v27));
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = v29 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 24 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    char v22 = *(unsigned char *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    id result = *(char **)(v4 + 48);
    uint64_t v24 = &result[v16];
    *(void *)uint64_t v24 = v18;
    v24[8] = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v19;
    *(void *)uint64_t v25 = v21;
    *(unsigned char *)(v25 + 8) = v22;
    *(void *)(v25 + 16) = v23;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091D3FC()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(unsigned char *)(v23 + 8) = v21;
    *(void *)(v23 + 16) = v22;
    id result = v17;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091D5C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SyncState();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACCA18);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v23 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v19 = *(void *)(v24 + 72) * v17;
    sub_1009381C4(*(void *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SyncState);
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v18;
    id result = (void *)sub_10001158C((uint64_t)v4, *(void *)(v7 + 56) + v19, (uint64_t (*)(void))type metadata accessor for SyncState);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_10091D838()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACC9F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v19) = *(unsigned char *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v21 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v21 = v20;
    *(unsigned char *)(v21 + 8) = v19;
    id result = v17;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091D9F0()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCA00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void **)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    unint64_t v23 = (void *)v21;
    swift_retain();
    id v24 = v17;
    id v25 = v20;
    id result = v23;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091DBC8()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCA08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = *(void *)(v2 + 56) + v16;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v19) = *(unsigned char *)(v19 + 8);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v22 = v20;
    *(unsigned char *)(v22 + 8) = v19;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091DD78()
{
  return sub_10091B3F4(&qword_100ACCA30, &qword_100ACCA28);
}

void *sub_10091DD8C()
{
  return sub_10091E1F4(&qword_100AD2058);
}

id sub_10091DD98()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091DF3C()
{
  return sub_10091E1F4(&qword_100AD2068);
}

void *sub_10091DF48()
{
  return sub_10091E1F4(&qword_100AD2070);
}

void *sub_10091DF54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC((uint64_t *)&unk_100ACCA40);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_10002B70C(*(void *)(v5 + 48) + v17, (uint64_t)v4, &qword_100AD65C0);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    sub_10001AE98((uint64_t)v4, *(void *)(v7 + 48) + v17, &qword_100AD65C0);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10091E1D0()
{
  return sub_100920BF0(&qword_100ACCA50);
}

void *sub_10091E1DC()
{
  return sub_10091E1F4(&qword_100AD2080);
}

void *sub_10091E1E8()
{
  return sub_10091E1F4(&qword_100AD2088);
}

void *sub_10091E1F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    sub_1001FAC78(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = v17;
    id result = sub_100042A48(v21, (_OWORD *)(*(void *)(v5 + 56) + 32 * v16));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091E3AC()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCA88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    int64_t v18 = *(void **)v17;
    unint64_t v19 = *(void **)(v17 + 8);
    int64_t v20 = *(void **)(v17 + 16);
    uint64_t v21 = 16 * v15;
    int64_t v22 = (uint64_t *)(*(void *)(v2 + 56) + v21);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    char v26 = *(unsigned char *)(v17 + 24);
    *(void *)uint64_t v25 = *(void *)v17;
    *(void *)(v25 + 8) = v19;
    *(void *)(v25 + 16) = v20;
    *(unsigned char *)(v25 + 24) = v26;
    unint64_t v27 = (void *)(*(void *)(v4 + 56) + v21);
    *unint64_t v27 = v24;
    v27[1] = v23;
    sub_10009C004(v18, v19, v20, v26);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091E57C()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCA90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 48 * v15;
    uint64_t v18 = *(void *)(v17 + 32);
    __int16 v19 = *(_WORD *)(v17 + 40);
    uint64_t v20 = 16 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    long long v25 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v17;
    *(_OWORD *)(v24 + 16) = v25;
    *(void *)(v24 + 32) = v18;
    *(_WORD *)(v24 + 40) = v19;
    char v26 = (void *)(*(void *)(v4 + 56) + v20);
    *char v26 = v22;
    v26[1] = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091E748()
{
  return sub_10091FB98(&qword_100AD7420, (void (*)(unsigned char *, uint64_t))sub_1001E9E64);
}

void *sub_10091E768()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCB80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091E914()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCB78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    int64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091EABC()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCD40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    sub_100347A00(*(void *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_10009CB44((uint64_t)v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091EC80()
{
  return sub_10091FF70(&qword_100ACCCF8);
}

id sub_10091EC8C()
{
  return sub_10091FF70(&qword_100ACB228);
}

void *sub_10091EC98()
{
  return sub_10091ECB8((uint64_t (*)(void))&type metadata accessor for URL, &qword_100ACCC48);
}

void *sub_10091ECB8(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v39 = a1(0);
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v33 - v5;
  sub_10002B7CC(a2);
  uint64_t v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = sub_10096CE80();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    id result = (void *)swift_release();
    uint64_t v32 = v40;
    int64_t v31 = v34;
LABEL_28:
    *int64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  id result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    int64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    int64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *int64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    id result = (void *)swift_release();
    int64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10091EF7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACCCF0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_10002B70C(*(void *)(v5 + 48) + v17, (uint64_t)v4, &qword_100AD65C0);
    uint64_t v18 = 8 * v16;
    unint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    sub_10001AE98((uint64_t)v4, *(void *)(v7 + 48) + v17, &qword_100AD65C0);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10091F1F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACCCD8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_10002B70C(*(void *)(v5 + 48) + v17, (uint64_t)v4, &qword_100AD65C0);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    sub_10001AE98((uint64_t)v4, *(void *)(v7 + 48) + v17, &qword_100AD65C0);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_errorRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10091F470()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCCE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_errorRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091F61C()
{
  return sub_10007F204(&qword_100ACCAF0);
}

void *sub_10091F628()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCC60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_errorRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10091F7E0()
{
  return sub_10007F204(&qword_100ACCAF8);
}

void *sub_10091F7EC()
{
  return sub_10091F81C(&qword_100ACCC68);
}

void *sub_10091F7F8()
{
  return sub_10091F81C(&qword_100ACCC70);
}

void *sub_10091F804()
{
  return sub_10091F81C(&qword_100ACCC78);
}

void *sub_10091F810()
{
  return sub_10091F81C(&qword_100ACCC80);
}

void *sub_10091F81C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091F9C0()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100AD20C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091FB78()
{
  return sub_10091FB98(&qword_100AD20F0, (void (*)(unsigned char *, uint64_t))sub_1001E9E64);
}

void *sub_10091FB98(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  sub_10002B7CC(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  int64_t v27 = v4;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 40 * v17;
    sub_10009CA78(*(void *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    unint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10091FD8C()
{
  return sub_10091FDA4(&qword_100AD20E8);
}

void *sub_10091FD98()
{
  return sub_10091FDA4(qword_100AD2100);
}

void *sub_10091FDA4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10091FF4C()
{
  return sub_1009203F4(&qword_100ACCCA0);
}

void *sub_10091FF58()
{
  return sub_1009203F4(&qword_100ACCCA8);
}

id sub_10091FF64()
{
  return sub_10091FF70(&qword_100AD20D0);
}

id sub_10091FF70(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_1001FAC78(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_100042A48(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100920130()
{
  return sub_1009203F4(&qword_100ACCC90);
}

void *sub_10092013C()
{
  return sub_10091E1F4(&qword_100AD2098);
}

void *sub_100920148()
{
  return sub_1009203F4(&qword_100ACCC98);
}

void *sub_100920154()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VFSItem(0);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100AD20E0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v5 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1009381C4(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for VFSItem);
    uint64_t v22 = *(void *)(v7 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(unsigned char *)(v22 + 8) = v20;
    id result = (void *)sub_10001158C((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for VFSItem);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1009203E8()
{
  return sub_1009203F4(&qword_100ACCC88);
}

void *sub_1009203F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = v22 + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10092057C()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCAB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v26 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      int64_t v8 = v22 + 1;
      if (v22 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v8);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v17 = *(void **)v16;
    char v18 = *(unsigned char *)(v16 + 9);
    uint64_t v19 = 848 * v14;
    uint64_t v20 = *(unsigned __int8 *)(v16 + 8);
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 848 * v14), 0x350uLL);
    uint64_t v21 = *(void *)(v4 + 48) + v15;
    *(void *)uint64_t v21 = v17;
    *(unsigned char *)(v21 + 8) = v20;
    *(unsigned char *)(v21 + 9) = v18;
    memcpy((void *)(*(void *)(v4 + 56) + v19), __dst, 0x350uLL);
    sub_10009C394(v17, v20, v18);
    id result = (void *)sub_10038ED74((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v8);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100920798()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100AD20A0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10096CE80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100920A2C()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCC08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100920BE4()
{
  return sub_100920BF0(&qword_100ACCC18);
}

void *sub_100920BF0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CE80();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v3 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    LOBYTE(v18) = *(unsigned char *)(v18 + 8);
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = *(void *)(v5 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(unsigned char *)(v22 + 8) = v18;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100920DA0()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100ACCC10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_100920F44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10002B7CC((uint64_t *)&unk_100AD62A0);
    uint64_t v2 = sub_10096CB90();
    uint64_t v14 = v2;
    sub_10096CAA0();
    for (; sub_10096CAD0(); ++*(void *)(v2 + 16))
    {
      sub_10002B7CC(&qword_100AD0BF8);
      swift_dynamicCast();
      uint64_t v2 = v14;
      if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
      {
        sub_100922A98();
        uint64_t v2 = v14;
      }
      sub_10096D4B0();
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_10096D500();
      uint64_t v4 = v2 + 56;
      uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v9 = 0;
        unint64_t v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v11 = v7 == v10;
          if (v7 == v10) {
            unint64_t v7 = 0;
          }
          v9 |= v11;
          uint64_t v12 = *(void *)(v4 + 8 * v7);
        }
        while (v12 == -1);
        unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_100921164(uint64_t a1, uint64_t a2)
{
  return sub_10092119C(a1, a2, &qword_100AD62F8, &qword_100AD62F0);
}

Swift::Int sub_100921180(uint64_t a1, uint64_t a2)
{
  return sub_10092119C(a1, a2, (uint64_t *)&unk_100ACCC20, (unint64_t *)&unk_100AD6280);
}

Swift::Int sub_10092119C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_10002B7CC(a3);
    uint64_t v6 = sub_10096CB90();
    uint64_t v19 = v6;
    sub_10096CAA0();
    if (sub_10096CAD0())
    {
      sub_100011348(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_1009232B0(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_10096C820(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_10096CAD0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_1009213A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC(&qword_100AD62B0);
  uint64_t result = sub_10096CB80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        if (v15 >= v30) {
          goto LABEL_41;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v30) {
            goto LABEL_41;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v30) {
              goto LABEL_41;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v30)
              {
LABEL_41:
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v29;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_47;
                  }
                  if (v5 >= v30) {
                    goto LABEL_41;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      Swift::UInt64 v19 = *(void *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 8);
      sub_10096D4B0();
      if (v20)
      {
        if (v20 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v19);
        }
        else
        {
          if (v19) {
            Swift::UInt v21 = 3;
          }
          else {
            Swift::UInt v21 = 2;
          }
          sub_10096D4C0(v21);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v19);
      }
      uint64_t result = sub_10096D500();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v10 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1009216BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100ACCCB0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      Swift::UInt64 v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_10096D4B0();
      sub_10096BD50();
      uint64_t result = sub_10096D500();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10092199C(uint64_t a1)
{
  return sub_1009219C0(a1, &qword_100ACCC30);
}

uint64_t sub_1009219A8(uint64_t a1)
{
  return sub_100922030(a1, &qword_100AD6390);
}

uint64_t sub_1009219B4(uint64_t a1)
{
  return sub_1009219C0(a1, (uint64_t *)&unk_100ACC9C0);
}

uint64_t sub_1009219C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t v5 = sub_10096CB80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v29 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v31 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v30) {
              goto LABEL_33;
            }
            unint64_t v17 = v31[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v31 = -1 << v28;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v31[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v15);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096D4B0();
      sub_10096BD50();
      Swift::Int v20 = sub_10096D500();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = v20 & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_100921CD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6400);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_36;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_36;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_36;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v31) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      Swift::UInt v21 = *(void *)(v19 + 8);
      int v22 = *(unsigned __int8 *)(v19 + 16);
      sub_10096D4B0();
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      if (v22 == 1)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(v21);
      }
      uint64_t result = sub_10096D500();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_100922024(uint64_t a1)
{
  return sub_100922030(a1, (uint64_t *)&unk_100AD63D0);
}

uint64_t sub_100922030(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t result = sub_10096CB80();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (uint64_t *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v28 = -1 << v9;
    uint64_t v29 = v3;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                if (v30 >= 64) {
                  bzero((void *)(v4 + 56), 8 * v12);
                }
                else {
                  *uint64_t v8 = v28;
                }
                uint64_t v3 = v29;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
      uint64_t result = sub_10096D4A0();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1009222B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC(&qword_100AD62B8);
  uint64_t v3 = sub_10096CB80();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_100923868(*(void **)(*(void *)(v2 + 48) + 16 * v12), *(unsigned __int8 *)(*(void *)(v2 + 48) + 16 * v12 + 8) | (*(unsigned __int8 *)(*(void *)(v2 + 48)+ 16 * v12+ 9) << 8), v3);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_100922494()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62D0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 32 * v14;
      uint64_t v20 = *(void **)v19;
      uint64_t v21 = *(void **)(v19 + 8);
      unint64_t v22 = *(void **)(v19 + 16);
      char v23 = *(unsigned char *)(v19 + 24);
      sub_10096D4B0();
      sub_100273638((uint64_t)v34, v20, v21, v22, v23);
      uint64_t result = sub_10096D500();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(void *)(v12 + 16) = v22;
      *(unsigned char *)(v12 + 24) = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1009227B0()
{
  uint64_t v1 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62E0);
  uint64_t result = sub_10096CB80();
  uint64_t v3 = result;
  if (*(void *)(v1 + 16))
  {
    int64_t v4 = 0;
    uint64_t v24 = (void *)(v1 + 56);
    uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v1 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v4 << 6);
      }
      else
      {
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_33;
        }
        unint64_t v14 = v24[v13];
        ++v4;
        if (!v14)
        {
          int64_t v4 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v14 = v24[v4];
          if (!v14)
          {
            int64_t v4 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v14 = v24[v4];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_33:
                uint64_t v23 = 1 << *(unsigned char *)(v1 + 32);
                if (v23 > 63) {
                  bzero(v24, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v24 = -1 << v23;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v14 = v24[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v4 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_39;
                  }
                  if (v4 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = v24[v4];
                  ++v15;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v4 = v15;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
      }
      sub_10001AE98(*(void *)(v1 + 48) + 48 * v12, (uint64_t)v25, &qword_100ACC9E0);
      sub_10096D4B0();
      sub_1002739A4();
      uint64_t result = sub_10096D500();
      uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v9 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v17) & ~*(void *)(v9 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v19 = 0;
        unint64_t v20 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v21 = v18 == v20;
          if (v18 == v20) {
            unint64_t v18 = 0;
          }
          v19 |= v21;
          uint64_t v22 = *(void *)(v9 + 8 * v18);
        }
        while (v22 == -1);
        unint64_t v10 = __clz(__rbit64(~v22)) + (v18 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t result = sub_10001AE98((uint64_t)v25, *(void *)(v3 + 48) + 48 * v10, &qword_100ACC9E0);
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_100922A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62A0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_10096D4B0();
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      uint64_t result = sub_10096D500();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_100922D70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD65A0);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      unint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_10096D4B0();
      sub_1008D7138((uint64_t)v28, v19);
      uint64_t result = sub_10096D500();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10092302C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002B7CC(&qword_100AD65C8);
  uint64_t v7 = sub_10096CB80();
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
    int64_t v9 = (void *)(v6 + 56);
    uint64_t v10 = -1;
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_22;
          }
          unint64_t v18 = v9[v14];
          if (!v18)
          {
            int64_t v14 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_22;
            }
            unint64_t v18 = v9[v14];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_22:
                swift_release();
                uint64_t v20 = 1 << *(unsigned char *)(v6 + 32);
                if (v20 > 63) {
                  bzero((void *)(v6 + 56), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v9 = -1 << v20;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v18 = v9[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_28;
                  }
                  if (v14 >= v12) {
                    goto LABEL_22;
                  }
                  unint64_t v18 = v9[v14];
                  ++v19;
                  if (v18) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      sub_10001AE98(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, &qword_100AD65C0);
      uint64_t result = sub_1009239CC((uint64_t)v5, v7);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_100923298(uint64_t a1)
{
  return sub_1009232B0(a1, &qword_100AD62F8);
}

uint64_t sub_1009232A4(uint64_t a1)
{
  return sub_1009232B0(a1, (uint64_t *)&unk_100ACCC20);
}

uint64_t sub_1009232B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10002B7CC(a2);
  uint64_t v5 = sub_10096CB80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_10096C820(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_10092354C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6290);
  uint64_t v3 = sub_10096CB80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      unint64_t v19 = (Swift::UInt64 *)(*(void *)(v2 + 48) + 24 * v14);
      Swift::UInt64 v20 = *v19;
      Swift::UInt64 v21 = v19[1];
      Swift::UInt64 v22 = v19[2];
      sub_10096D4B0();
      sub_10096D4F0(v20);
      sub_10096BD50();
      uint64_t result = sub_10096D500();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (Swift::UInt64 *)(*(void *)(v4 + 48) + 24 * v11);
      Swift::UInt64 *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_100923868(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10096D4B0();
  if ((a2 & 0x100) != 0)
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    id v6 = a1;
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(a1, a2, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if ((_BYTE)a2)
    {
      if (a2 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)a1);
      }
      else
      {
        if (a1) {
          Swift::UInt v7 = 3;
        }
        else {
          Swift::UInt v7 = 2;
        }
        sub_10096D4C0(v7);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)a1);
    }
  }
  sub_10096D500();
  unint64_t result = sub_10096CA90();
  *(void *)(a3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  uint64_t v9 = *(void *)(a3 + 48) + 16 * result;
  *(void *)uint64_t v9 = a1;
  *(unsigned char *)(v9 + 8) = a2;
  *(unsigned char *)(v9 + 9) = BYTE1(a2) & 1;
  ++*(void *)(a3 + 16);
  return result;
}

uint64_t sub_1009239CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096D4B0();
  sub_10002B70C(a1, (uint64_t)v13, &qword_100AD65C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10001AE98((uint64_t)v13, (uint64_t)v6, (uint64_t *)&unk_100AD65B0);
    sub_10096D4C0(1uLL);
    sub_1008D6D84();
    uint64_t v14 = (uint64_t)v6;
    int64_t v15 = (uint64_t *)&unk_100AD65B0;
  }
  else
  {
    sub_10001AE98((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_100AD0A90);
    sub_10096D4C0(0);
    sub_1008D68E4();
    uint64_t v14 = (uint64_t)v9;
    int64_t v15 = (uint64_t *)&unk_100AD0A90;
  }
  sub_10002B770(v14, v15);
  sub_10096D500();
  unint64_t v16 = sub_10096CA90();
  *(void *)(a2 + 56 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
  uint64_t result = sub_10001AE98(a1, *(void *)(a2 + 48) + *(void *)(v11 + 72) * v16, &qword_100AD65C0);
  ++*(void *)(a2 + 16);
  return result;
}

void *sub_100923C38()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100AD62B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = v17;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100923DE0()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100ACCCB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100923F94()
{
  return sub_100923FB8(&qword_100ACCC30);
}

void *sub_100923FA0()
{
  return sub_100924328(&qword_100AD6390);
}

id sub_100923FAC()
{
  return sub_100923FB8((uint64_t *)&unk_100ACC9C0);
}

id sub_100923FB8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CB70();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10092415C()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6400);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v18;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v17;
    id result = v18;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10092431C()
{
  return sub_100924328((uint64_t *)&unk_100AD63D0);
}

void *sub_100924328(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002B7CC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10096CB70();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1009244B8()
{
  uint64_t v1 = v0;
  sub_10002B7CC(&qword_100AD62B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    char v19 = *(unsigned char *)(v17 + 9);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    uint64_t v21 = *(unsigned __int8 *)(v17 + 8);
    *(void *)uint64_t v20 = *(void *)v17;
    *(unsigned char *)(v20 + 8) = v21;
    *(unsigned char *)(v20 + 9) = v19;
    id result = sub_10009C394(v18, v21, v19);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10092467C()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    char v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(void **)(v17 + 16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    char v22 = *(unsigned char *)(v17 + 24);
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v19;
    *(void *)(v21 + 16) = v20;
    *(unsigned char *)(v21 + 24) = v22;
    id result = sub_10009C004(v18, v19, v20, v22);
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100924840()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 32);
    __int16 v19 = *(_WORD *)(v17 + 40);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    long long v21 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v17;
    *(_OWORD *)(v20 + 16) = v21;
    *(void *)(v20 + 32) = v18;
    *(_WORD *)(v20 + 40) = v19;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1009249F4()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD62A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100924BA0()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD65A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_1000CE628(v17);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100924D4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100AD65C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_10096CB70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_10002B70C(*(void *)(v6 + 48) + v19, (uint64_t)v5, &qword_100AD65C0);
    id result = (void *)sub_10001AE98((uint64_t)v5, *(void *)(v8 + 48) + v19, &qword_100AD65C0);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16)
  {
LABEL_25:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_100924FB4()
{
  return sub_100923FB8(&qword_100AD62F8);
}

id sub_100924FC0()
{
  return sub_100923FB8((uint64_t *)&unk_100ACCC20);
}

void *sub_100924FCC()
{
  uint64_t v1 = v0;
  sub_10002B7CC((uint64_t *)&unk_100AD6290);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10096CB70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v17;
    *(void *)(v19 + 16) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t (*sub_10092518C(void *a1, Swift::UInt64 a2, char a3))()
{
  uint64_t v6 = malloc(0x50uLL);
  *a1 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_100926300(v6);
  v6[9] = sub_1009256D8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10092522C;
}

void (*sub_100925230(void *a1, void *a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v6 = a2;
  v4[9] = sub_100926300(v4);
  v4[10] = sub_10092597C(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_1009252CC;
}

void sub_1009252CC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();

  v2(v1, 0);

  free(v1);
}

uint64_t (*sub_10092533C(void *a1, Swift::UInt64 a2, char a3))()
{
  id v6 = malloc(0x50uLL);
  *a1 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_100926300(v6);
  v6[9] = sub_100925BE0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10092522C;
}

uint64_t (*sub_1009253DC(void *a1, Swift::UInt64 a2, char a3))()
{
  id v6 = malloc(0x50uLL);
  *a1 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_100926300(v6);
  v6[9] = sub_100925E24(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10092522C;
}

void (*sub_10092547C(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = sub_10002B7CC(&qword_100AD65C0);
  id v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10002B70C(a2, (uint64_t)v6, &qword_100AD65C0);
  v4[9] = sub_100926330(v4);
  v4[10] = sub_100925F8C(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100925554;
}

void sub_100925554(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_10002B770((uint64_t)v3, &qword_100AD65C0);
  v2(v1, 0);
  free(v3);

  free(v1);
}

uint64_t (*sub_1009255D8(void *a1, Swift::UInt64 a2, char a3))()
{
  id v6 = malloc(0x50uLL);
  *a1 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_100926300(v6);
  v6[9] = sub_100926110(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10092522C;
}

void sub_100925678(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_1009256D8(void *a1, Swift::UInt64 a2, char a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *(void *)uint64_t v10 = a2;
  *((void *)v10 + 1) = v4;
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100AD6EB0);
  unint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  *((void *)v10 + 2) = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_10031F858(a2, a3);
  v10[33] = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 3) = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = sub_10002B7CC(&qword_100ACCA78);
        uint64_t v23 = *(void *)(v22 - 8);
        sub_10001AE98(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, &qword_100ACCA78);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_100925918;
      }
LABEL_11:
      uint64_t v22 = sub_10002B7CC(&qword_100ACCA78);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_10091B3F4(&qword_100ACCA78, &qword_100ACCA70);
      goto LABEL_7;
    }
    sub_100371590(v18, a4 & 1);
    unint64_t v25 = sub_10031F858(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      *((void *)v10 + 3) = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100925918(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_10092636C((uint64_t)v2, *((unsigned char *)*a1 + 33), (uint64_t *)(*a1)[1], (*a1)[3], **a1, *((unsigned __int8 *)*a1 + 32));
  sub_10002B770((uint64_t)v2, (uint64_t *)&unk_100AD6EB0);
  free(v2);

  free(v1);
}

void (*sub_10092597C(void *a1, uint64_t a2, char a3))(uint64_t **a1, char a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[4] = a2;
  v8[5] = v3;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_10031F918(a2);
  *((unsigned char *)v8 + 25) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = v10 ^ 1;
  uint64_t v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[6] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 24 * v11;
        uint64_t v18 = *(void *)v17;
        uint64_t v19 = *(unsigned __int8 *)(v17 + 8);
        uint64_t v20 = *(void *)(v17 + 16);
LABEL_12:
        *uint64_t v8 = v18;
        v8[1] = v19;
        v8[2] = v20;
        *((unsigned char *)v8 + 24) = v13 & 1;
        return sub_100925AD8;
      }
LABEL_11:
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_10091D3FC();
      goto LABEL_7;
    }
    sub_100374E8C(v14, a3 & 1);
    uint64_t v21 = sub_10031F918(a2);
    if ((v15 & 1) == (v22 & 1))
    {
      uint64_t v11 = v21;
      v8[6] = v21;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  id result = (void (*)(uint64_t **, char))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100925AD8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[2];
  char v5 = *((unsigned char *)*a1 + 25);
  if (a2)
  {
    if (((*a1)[3] & 1) == 0)
    {
      uint64_t v6 = v2[1];
      unint64_t v7 = v2[6];
      uint64_t v8 = *(void **)v2[5];
      if ((v5 & 1) == 0)
      {
        uint64_t v9 = (void *)v2[4];
        char v10 = v6 & 1;
LABEL_11:
        sub_10038E1A4(v7, (uint64_t)v9, v3, v10, v4, v8);
        id v14 = v9;
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if (((*a1)[3] & 1) == 0)
  {
    uint64_t v6 = v2[1];
    unint64_t v7 = v2[6];
    uint64_t v8 = *(void **)v2[5];
    if ((v5 & 1) == 0)
    {
      uint64_t v9 = (void *)v2[4];
      char v10 = v6 & 1;
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v13 = v8[7] + 24 * v7;
    *(void *)uint64_t v13 = v3;
    *(unsigned char *)(v13 + 8) = v6 & 1;
    *(void *)(v13 + 16) = v4;
    goto LABEL_12;
  }
  if (*((unsigned char *)*a1 + 25))
  {
    unint64_t v11 = v2[6];
    uint64_t v12 = *(void *)v2[5];
    type metadata accessor for NSFileProviderItemIdentifier(0);
    swift_arrayDestroy();
    sub_100918B5C(v11, v12);
  }
LABEL_12:

  free(v2);
}

void (*sub_100925BE0(void *a1, Swift::UInt64 a2, char a3, char a4))(uint64_t **a1, char a2)
{
  char v5 = v4;
  char v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[25] = a3;
  *((void *)v10 + 4) = a2;
  *((void *)v10 + 5) = v4;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_10031F858(a2, a3);
  v10[26] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  char v15 = v12 ^ 1;
  uint64_t v16 = v14 + ((v12 ^ 1) & 1);
  if (__OFADD__(v14, (v12 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 6) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 24 * v13;
        uint64_t v20 = *(void *)v19;
        uint64_t v21 = *(unsigned __int8 *)(v19 + 8);
        uint64_t v22 = *(void *)(v19 + 16);
LABEL_12:
        *(void *)char v10 = v20;
        *((void *)v10 + 1) = v21;
        *((void *)v10 + 2) = v22;
        v10[24] = v15 & 1;
        return sub_100925D4C;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_10091D23C();
      goto LABEL_7;
    }
    sub_100374B40(v16, a4 & 1);
    unint64_t v23 = sub_10031F858(a2, a3);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      *((void *)v10 + 6) = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **, char))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100925D4C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[2];
  char v5 = *((unsigned char *)*a1 + 26);
  if (a2)
  {
    if (((*a1)[3] & 1) == 0)
    {
      uint64_t v6 = v2[1];
      unint64_t v7 = v2[6];
      uint64_t v8 = *(void **)v2[5];
      if ((v5 & 1) == 0)
      {
        uint64_t v9 = v2[4];
        char v10 = *((unsigned char *)v2 + 25);
        char v11 = v6 & 1;
LABEL_11:
        sub_10038E144(v7, v9, v10, v3, v11, v4, v8);
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if (((*a1)[3] & 1) == 0)
  {
    uint64_t v6 = v2[1];
    unint64_t v7 = v2[6];
    uint64_t v8 = *(void **)v2[5];
    if ((v5 & 1) == 0)
    {
      uint64_t v9 = v2[4];
      char v10 = *((unsigned char *)v2 + 25);
      char v11 = v6 & 1;
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v12 = v8[7] + 24 * v7;
    *(void *)uint64_t v12 = v3;
    *(unsigned char *)(v12 + 8) = v6 & 1;
    *(void *)(v12 + 16) = v4;
    goto LABEL_12;
  }
  if (*((unsigned char *)*a1 + 26)) {
    sub_10091892C(v2[6], *(void *)v2[5]);
  }
LABEL_12:

  free(v2);
}

void (*sub_100925E24(void *a1, Swift::UInt64 a2, char a3, char a4))(uint64_t **a1, uint64_t a2)
{
  char v5 = v4;
  char v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *((void *)v10 + 1) = a2;
  *((void *)v10 + 2) = v4;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_10031F858(a2, a3);
  v10[33] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 3) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *(void *)char v10 = v19;
        return sub_100925F74;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_100920BF0(&qword_100ACCA50);
      goto LABEL_7;
    }
    sub_1003771B0(v16, a4 & 1);
    unint64_t v20 = sub_10031F858(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      *((void *)v10 + 3) = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **, uint64_t))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100925F74(uint64_t **a1, uint64_t a2)
{
}

void (*sub_100925F8C(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_10031FDF0(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_1009260C0;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_10091DF54();
      goto LABEL_7;
    }
    sub_100376F10(v14, a3 & 1);
    unint64_t v18 = sub_10031FDF0(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_10002B7CC(&qword_100AD65C0);
  id result = (void (*)(uint64_t **))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_1009260C0(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100926628(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_100926110(void *a1, Swift::UInt64 a2, char a3, char a4))(uint64_t **a1, uint64_t a2)
{
  char v5 = v4;
  char v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *((void *)v10 + 1) = a2;
  *((void *)v10 + 2) = v4;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_10031F858(a2, a3);
  v10[33] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 3) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *(void *)char v10 = v19;
        return sub_100925F74;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_100920BF0(&qword_100ACCC18);
      goto LABEL_7;
    }
    sub_10037B970(v16, a4 & 1);
    unint64_t v20 = sub_10031F858(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      *((void *)v10 + 3) = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **, uint64_t))sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_100926260(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  char v5 = *((unsigned char *)*a1 + 33);
  if (v4)
  {
    uint64_t v6 = v3[3];
    uint64_t v7 = *(void *)v3[2];
    if (v5) {
      *(void *)(*(void *)(v7 + 56) + 8 * v6) = v4;
    }
    else {
      a3(v6, v3[1], *((unsigned __int8 *)v3 + 32), v4, v7);
    }
  }
  else if (*((unsigned char *)*a1 + 33))
  {
    sub_10091AA80(v3[3], *(void *)v3[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_100926300(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_10093E0A0;
}

uint64_t (*sub_100926330(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100926360;
}

uint64_t sub_100926360(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_10092636C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, int a6)
{
  int v23 = a6;
  uint64_t v22 = a5;
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD6EB0);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100ACCA78);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v22 - v18;
  sub_10002B70C(a1, (uint64_t)v12, (uint64_t *)&unk_100AD6EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_10002B770((uint64_t)v12, (uint64_t *)&unk_100AD6EB0);
    if (a2) {
      return sub_1009194DC(a4, *a3, &qword_100ACCA78);
    }
  }
  else
  {
    sub_10001AE98((uint64_t)v12, (uint64_t)v19, &qword_100ACCA78);
    char v21 = (void *)*a3;
    if (a2)
    {
      return sub_10001AE98((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, &qword_100ACCA78);
    }
    else
    {
      sub_10001AE98((uint64_t)v19, (uint64_t)v17, &qword_100ACCA78);
      return sub_10038DD7C(a4, v22, v23, (uint64_t)v17, v21);
    }
  }
  return result;
}

uint64_t sub_10092657C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_10038DF58(a4, (uint64_t)a5, v7, v8);
      id v10 = a5;
    }
  }
  else if (a2)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    swift_arrayDestroy();
    sub_100917E38(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100926628(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10002B7CC(&qword_100AD65C0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (v13)
  {
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      *(void *)(v14[7] + 8 * a4) = v13;
    }
    else
    {
      sub_10002B70C(a5, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100AD65C0);
      sub_10038E4A8(a4, (uint64_t)v12, v13, v14);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_10091973C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100926760(Swift::UInt64 a1, char a2)
{
  uint64_t v5 = *v2;
  sub_10096D4B0();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(a1);
    }
    else
    {
      if (a1) {
        Swift::UInt v6 = 3;
      }
      else {
        Swift::UInt v6 = 2;
      }
      sub_10096D4C0(v6);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(a1);
  }
  Swift::Int v7 = sub_10096D500();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  BOOL v11 = a2 == 2;
  BOOL v12 = a1 == 1 && a2 == 2;
  if (a1) {
    BOOL v11 = 0;
  }
  while (1)
  {
    uint64_t v13 = *(void *)(v5 + 48) + 16 * v9;
    uint64_t v14 = *(void *)v13;
    int v15 = *(unsigned __int8 *)(v13 + 8);
    if (!v15) {
      break;
    }
    if (v15 == 1)
    {
      if (a2 == 1 && v14 == a1) {
        goto LABEL_28;
      }
    }
    else if (v14)
    {
      if (v12) {
        goto LABEL_28;
      }
    }
    else if (v11)
    {
      goto LABEL_28;
    }
LABEL_17:
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  if (a2 || v14 != a1) {
    goto LABEL_17;
  }
LABEL_28:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100923C38();
    uint64_t v17 = v20;
  }
  uint64_t v18 = *(void *)(*(void *)(v17 + 48) + 16 * v9);
  sub_100927B48(v9);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_10092693C(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_10096D4B0();
  if ((a2 & 0x100) != 0)
  {
    sub_10096D4C0(1uLL);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    swift_bridgeObjectRetain();
    sub_10009C394(a1, a2, 1);
    sub_10096BD50();
    swift_bridgeObjectRelease();
    sub_1000D30C4(a1, a2, 1);
  }
  else
  {
    sub_10096D4C0(0);
    if ((_BYTE)a2)
    {
      if (a2 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0((Swift::UInt64)a1);
      }
      else
      {
        if (a1) {
          Swift::UInt v6 = 3;
        }
        else {
          Swift::UInt v6 = 2;
        }
        sub_10096D4C0(v6);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0((Swift::UInt32)a1);
    }
    swift_bridgeObjectRetain();
  }
  Swift::Int v7 = sub_10096D500();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v29 = v2;
  uint64_t v11 = ~v8;
  BOOL v12 = a2 == 2;
  BOOL v13 = a1 == (void *)1 && a2 == 2;
  uint64_t v32 = v5;
  uint64_t v33 = a1;
  if (a1) {
    BOOL v12 = 0;
  }
  BOOL v30 = v12;
  BOOL v31 = v13;
  uint64_t v14 = a1;
  while (1)
  {
    uint64_t v15 = 16 * v9;
    uint64_t v16 = *(void *)(v5 + 48) + 16 * v9;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 8);
    if (*(unsigned char *)(v16 + 9)) {
      break;
    }
    if ((a2 & 0x100) == 0)
    {
      if (*(unsigned char *)(v16 + 8))
      {
        if (v18 == 1)
        {
          if (a2 == 1 && v17 == v33) {
            goto LABEL_43;
          }
        }
        else if (v17)
        {
          if (v31) {
            goto LABEL_43;
          }
        }
        else if (v30)
        {
          goto LABEL_43;
        }
      }
      else if (!(_BYTE)a2 && v17 == v33)
      {
        goto LABEL_43;
      }
    }
LABEL_20:
    unint64_t v9 = (v9 + 1) & v11;
    if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_41;
    }
  }
  if ((a2 & 0x100) == 0) {
    goto LABEL_20;
  }
  uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v21 = v20;
  if (v19 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v21 != v22)
  {
    char v24 = sub_10096D2D0();
    sub_10009C394(v17, v18, 1);
    sub_10009C394(v17, v18, 1);
    sub_10009C394(v14, a2, 1);
    sub_10009C394(v17, v18, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D30C4(v14, a2, 1);

    sub_1000D30C4(v17, v18, 1);
    sub_1000D30C4(v17, v18, 1);
    uint64_t v5 = v32;
    uint64_t v15 = 16 * v9;
    if (v24) {
      goto LABEL_43;
    }
    goto LABEL_20;
  }
  sub_10009C394(v17, v18, 1);
  sub_10009C394(v17, v18, 1);
  sub_10009C394(v14, a2, 1);
  sub_10009C394(v17, v18, 1);
  swift_bridgeObjectRelease_n();
  sub_1000D30C4(v14, a2, 1);

  sub_1000D30C4(v17, v18, 1);
  sub_1000D30C4(v17, v18, 1);
  uint64_t v15 = 16 * v9;
LABEL_43:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v29;
  uint64_t v34 = *v29;
  *uint64_t v29 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1009244B8();
    uint64_t v27 = v34;
  }
  uint64_t v25 = *(void *)(*(void *)(v27 + 48) + v15);
  sub_100927D5C(v9);
  *uint64_t v29 = v34;
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_100926D60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v3 = sub_10096CAE0();
    swift_release();
    if (v3)
    {
      uint64_t v4 = sub_100927714();
LABEL_23:
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else
  {
    sub_10096D4B0();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    swift_bridgeObjectRetain();
    sub_10096BD50();
    swift_bridgeObjectRelease();
    Swift::Int v5 = sub_10096D500();
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(v2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v10 = v9;
      if (v8 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v10 == v11)
      {
LABEL_19:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          uint64_t v14 = ~v6;
          do
          {
            unint64_t v7 = (v7 + 1) & v14;
            if (((*(void *)(v2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
              goto LABEL_18;
            }
            uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            uint64_t v17 = v16;
            if (v15 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v17 == v18) {
              goto LABEL_19;
            }
            char v20 = sub_10096D2D0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          while ((v20 & 1) == 0);
        }
      }
      swift_bridgeObjectRelease();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *v1;
      uint64_t v24 = *v1;
      *uint64_t v1 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1009249F4();
        uint64_t v22 = v24;
      }
      uint64_t v4 = *(void *)(*(void *)(v22 + 48) + 8 * v7);
      sub_100928018(v7);
      *uint64_t v1 = v24;
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100926FD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_10096BD50();
  Swift::Int v3 = sub_10096D500();
  swift_bridgeObjectRelease();
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = v3 & ~v4;
  if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v8 = v7;
  if (v6 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v12;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v15 = v14;
        if (v13 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v15 == v16) {
          goto LABEL_16;
        }
        char v18 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  uint64_t v23 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100923FB8((uint64_t *)&unk_100ACC9C0);
    uint64_t v21 = v23;
  }
  uint64_t v19 = *(void *)(*(void *)(v21 + 48) + 8 * v5);
  sub_1009281FC(v5);
  *uint64_t v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1009271F0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_10096D4B0();
  swift_bridgeObjectRetain();
  sub_1008D7138((uint64_t)v17, a1);
  Swift::Int v5 = sub_10096D500();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0xF000000000000007;
  }
  unint64_t v8 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
  sub_1000CE628(v8);
  char v9 = sub_1008D8F64(v8, a1);
  sub_10021E0B4(v8);
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v10;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_9;
      }
      unint64_t v11 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1000CE628(v11);
      char v12 = sub_1008D8F64(v11, a1);
      sub_10021E0B4(v11);
    }
    while ((v12 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  v17[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100924BA0();
    uint64_t v14 = v17[0];
  }
  uint64_t v15 = *(void *)(*(void *)(v14 + 48) + 8 * v7);
  sub_1009283E0(v7);
  *uint64_t v2 = v17[0];
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10092736C(void *a1)
{
  return sub_100927388(a1, &qword_100AD62F0, (uint64_t)NSProgress_ptr, &qword_100AD62F8);
}

uint64_t sub_100927388(void *a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v7 = v4;
  uint64_t v9 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v9 < 0) {
      uint64_t v10 = *v4;
    }
    else {
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v11 = a1;
    char v12 = sub_10096CAE0();

    if (v12)
    {
      uint64_t v13 = sub_10092799C(v10, (uint64_t)v11, a4, a2);
      swift_bridgeObjectRelease();
      return v13;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v14 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v15 = sub_10096C820(v14);
  uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
    goto LABEL_15;
  }
  sub_100011348(0, a2);
  id v18 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
  char v19 = sub_10096C830();

  if ((v19 & 1) == 0)
  {
    uint64_t v20 = ~v16;
    do
    {
      unint64_t v17 = (v17 + 1) & v20;
      if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_15;
      }
      id v21 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
      char v22 = sub_10096C830();
    }
    while ((v22 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v7;
  uint64_t v26 = *v7;
  uint64_t *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100923FB8(a4);
    uint64_t v24 = v26;
  }
  uint64_t v13 = *(void *)(*(void *)(v24 + 48) + 8 * v17);
  sub_10002BD84(v17);
  uint64_t *v7 = v26;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100927574(Swift::UInt64 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_10096D4B0();
  sub_10096D4F0(a1);
  swift_bridgeObjectRetain();
  sub_10096BD50();
  Swift::Int v8 = sub_10096D500();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v7 + 48);
    while (1)
    {
      uint64_t v13 = (void *)(v12 + 24 * v10);
      if (*v13 == a1)
      {
        BOOL v14 = v13[1] == a2 && v13[2] == a3;
        if (v14 || (sub_10096D2D0() & 1) != 0) {
          break;
        }
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    uint64_t v19 = *v3;
    *Swift::Int v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100924FCC();
      uint64_t v16 = v19;
    }
    uint64_t v17 = *(void *)(*(void *)(v16 + 48) + 24 * v10);
    sub_1009285A0(v10);
    *Swift::Int v3 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

uint64_t sub_100927714()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_10096CAB0();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100920F44(v3, v2);
  Swift::Int v29 = v4;
  sub_10096D4B0();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  swift_retain();
  sub_10096BD50();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_10096D500();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v10 = v9;
    if (v8 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v10 == v11)
    {
LABEL_15:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = ~v6;
        while (1)
        {
          unint64_t v7 = (v7 + 1) & v14;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            break;
          }
          uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v17 = v16;
          if (v15 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v17 == v18) {
            goto LABEL_15;
          }
          char v20 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v20) {
            goto LABEL_16;
          }
        }
        swift_release();
        __break(1u);
        goto LABEL_25;
      }
    }
LABEL_16:
    swift_release();
    uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
    sub_100928018(v7);
    uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v24 = v23;
    if (v22 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v24 != v25)
    {
      char v27 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_23:
        *uint64_t v1 = v29;
        return v21;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_25:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10092799C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  unint64_t v7 = v4;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10096CAB0();
  uint64_t v9 = swift_unknownObjectRetain();
  Swift::Int v10 = sub_10092119C(v9, v8, a3, a4);
  Swift::Int v22 = v10;
  Swift::Int v11 = *(void *)(v10 + 40);
  swift_retain();
  Swift::Int v12 = sub_10096C820(v11);
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    sub_100011348(0, a4);
    id v15 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
    char v16 = sub_10096C830();

    if (v16)
    {
LABEL_6:
      swift_release();
      uint64_t v20 = *(void *)(*(void *)(v10 + 48) + 8 * v14);
      sub_10002BD84(v14);
      if (sub_10096C830())
      {
        Swift::Int *v7 = v22;
        return v20;
      }
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
        char v19 = sub_10096C830();

        if (v19) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100927B48(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(v3 + 48) + 16 * v6;
        Swift::UInt64 v12 = *(void *)v11;
        int v13 = *(unsigned __int8 *)(v11 + 8);
        sub_10096D4B0();
        if (v13)
        {
          if (v13 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v12);
          }
          else
          {
            if (v12) {
              Swift::UInt v14 = 3;
            }
            else {
              Swift::UInt v14 = 2;
            }
            sub_10096D4C0(v14);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v12);
        }
        unint64_t v15 = sub_10096D500() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v9)
        {
          goto LABEL_19;
        }
        if (v2 >= (uint64_t)v15)
        {
LABEL_19:
          uint64_t v16 = *(void *)(v3 + 48);
          uint64_t v17 = (_OWORD *)(v16 + 16 * v2);
          id v18 = (_OWORD *)(v16 + v10);
          if (16 * v2 != v10 || (int64_t v2 = v6, v17 >= v18 + 1))
          {
            *uint64_t v17 = *v18;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100927D5C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v25 = v4;
      do
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(v3 + 48) + 16 * v6;
        Swift::UInt64 v12 = *(void **)v11;
        uint64_t v13 = *(unsigned __int8 *)(v11 + 8);
        char v14 = *(unsigned char *)(v11 + 9);
        sub_10096D4B0();
        if (v14)
        {
          sub_10096D4C0(1uLL);
          _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          id v15 = v12;
          sub_10096BD50();
          uint64_t v10 = 16 * v6;
          swift_bridgeObjectRelease();
          sub_1000D30C4(v12, v13, 1);
        }
        else
        {
          sub_10096D4C0(0);
          if (v13)
          {
            if (v13 == 1)
            {
              sub_10096D4C0(1uLL);
              sub_10096D4F0((Swift::UInt64)v12);
            }
            else
            {
              if (v12) {
                Swift::UInt v16 = 3;
              }
              else {
                Swift::UInt v16 = 2;
              }
              sub_10096D4C0(v16);
            }
          }
          else
          {
            sub_10096D4C0(0);
            sub_10096D4E0((Swift::UInt32)v12);
          }
        }
        Swift::Int v17 = sub_10096D500();
        sub_1000D30C4(v12, v13, v14);
        unint64_t v18 = v17 & v7;
        if (v2 >= (uint64_t)v9)
        {
          uint64_t v4 = v25;
          if (v18 < v9) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v25;
          if (v18 >= v9) {
            goto LABEL_21;
          }
        }
        if (v2 >= (uint64_t)v18)
        {
LABEL_21:
          uint64_t v19 = *(void *)(v3 + 48);
          BOOL v20 = (_OWORD *)(v19 + 16 * v2);
          uint64_t v21 = (_OWORD *)(v19 + v10);
          if (16 * v2 != v10 || (int64_t v2 = v6, v20 >= v21 + 1))
          {
            _OWORD *v20 = *v21;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v22 = *(void *)(v3 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v24;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100928018(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_10096D4B0();
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        swift_retain();
        sub_10096BD50();
        swift_bridgeObjectRelease();
        Swift::Int v10 = sub_10096D500();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          char v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1009281FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10096D4B0();
        id v11 = v10;
        sub_10096BD50();
        Swift::Int v12 = sub_10096D500();

        swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v2);
          BOOL v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1009283E0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        sub_10096D4B0();
        sub_1000CE628(v10);
        sub_1008D7138((uint64_t)v19, v10);
        Swift::Int v11 = sub_10096D500();
        sub_10021E0B4(v10);
        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(v3 + 48);
          uint64_t v14 = (void *)(v13 + 8 * v2);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1009285A0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10096CA70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = v4;
        Swift::UInt64 v12 = *(void *)(*(void *)(v3 + 48) + 24 * v6);
        sub_10096D4B0();
        sub_10096D4F0(v12);
        swift_bridgeObjectRetain();
        sub_10096BD50();
        Swift::Int v13 = sub_10096D500();
        swift_bridgeObjectRelease();
        Swift::Int v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
          {
            uint64_t v4 = v11;
          }
          else
          {
            uint64_t v4 = v11;
            if (v2 >= v14) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v11;
          if (v14 >= v9 || v2 >= v14)
          {
LABEL_12:
            uint64_t v15 = *(void *)(v3 + 48);
            unint64_t v16 = v15 + 24 * v2;
            BOOL v17 = (long long *)(v15 + 24 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= (unint64_t)v17 + 24))
            {
              long long v10 = *v17;
              *(void *)(v16 + 16) = *((void *)v17 + 2);
              *(_OWORD *)unint64_t v16 = v10;
              int64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1009287AC(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = sub_10096B0E0();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v49 = (char *)&v42 - v10;
  uint64_t v11 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v54 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v46 = (uint64_t)&v42 - v14;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_10002B7CC(&qword_100ACCD28);
  uint64_t result = sub_10096CEA0();
  uint64_t v16 = result;
  uint64_t v42 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *v43;
  }
  uint64_t v18 = 0;
  uint64_t v44 = a4;
  uint64_t v45 = v50 + 16;
  uint64_t v53 = v50 + 32;
  uint64_t v19 = result + 64;
  while (1)
  {
    if (v17)
    {
      uint64_t v51 = (v17 - 1) & v17;
      uint64_t v52 = v18;
      unint64_t v20 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      uint64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v42) {
        return v16;
      }
      unint64_t v22 = v43[v21];
      uint64_t v23 = v18 + 1;
      if (!v22)
      {
        uint64_t v23 = v18 + 2;
        if (v18 + 2 >= v42) {
          return v16;
        }
        unint64_t v22 = v43[v23];
        if (!v22)
        {
          uint64_t v23 = v18 + 3;
          if (v18 + 3 >= v42) {
            return v16;
          }
          unint64_t v22 = v43[v23];
          if (!v22)
          {
            uint64_t v24 = v18 + 4;
            if (v18 + 4 >= v42) {
              return v16;
            }
            unint64_t v22 = v43[v24];
            if (!v22)
            {
              while (1)
              {
                uint64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v23 >= v42) {
                  return v16;
                }
                unint64_t v22 = v43[v23];
                ++v24;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v23 = v18 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v51 = (v22 - 1) & v22;
      uint64_t v52 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = v46;
    uint64_t v26 = *(void *)(v47 + 72);
    sub_1009381C4(a4[6] + v26 * v20, v46, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t v27 = a4[7];
    uint64_t v28 = v50;
    uint64_t v29 = *(void *)(v50 + 72);
    uint64_t v30 = v27 + v29 * v20;
    BOOL v31 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v30, v7);
    sub_10001158C(v25, v54, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v32(v55, v31, v7);
    sub_10096D4B0();
    sub_10096AE50();
    sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10096BAD0();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v33 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v39 = v35 == v38;
        if (v35 == v38) {
          unint64_t v35 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v35);
      }
      while (v40 == -1);
      unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(void *)(v19 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    sub_10001158C(v54, *(void *)(v16 + 48) + v36 * v26, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(void *)(v16 + 56) + v36 * v29, v55, v7);
    ++*(void *)(v16 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v44;
    unint64_t v17 = v51;
    uint64_t v18 = v52;
    if (!a3) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100928CF8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_10096B0E0();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v52 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v49 = (char *)&v43 - v12;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v48 = v11;
  sub_10002B7CC(&qword_100ACCAE0);
  uint64_t result = sub_10096CEA0();
  uint64_t v14 = result;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  if (a2 < 1) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = *a1;
  }
  uint64_t v16 = 0;
  uint64_t v46 = v50 + 32;
  uint64_t v47 = v50 + 16;
  uint64_t v17 = result + 64;
  uint64_t v18 = v48;
  uint64_t v45 = a4;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      uint64_t v51 = v16;
      unint64_t v20 = v19 | (v16 << 6);
    }
    else
    {
      uint64_t v21 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v44) {
        return v14;
      }
      unint64_t v22 = v43[v21];
      uint64_t v23 = v16 + 1;
      if (!v22)
      {
        uint64_t v23 = v16 + 2;
        if (v16 + 2 >= v44) {
          return v14;
        }
        unint64_t v22 = v43[v23];
        if (!v22)
        {
          uint64_t v23 = v16 + 3;
          if (v16 + 3 >= v44) {
            return v14;
          }
          unint64_t v22 = v43[v23];
          if (!v22)
          {
            uint64_t v24 = v16 + 4;
            if (v16 + 4 >= v44) {
              return v14;
            }
            unint64_t v22 = v43[v24];
            if (!v22)
            {
              while (1)
              {
                uint64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v23 >= v44) {
                  return v14;
                }
                unint64_t v22 = v43[v23];
                ++v24;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v23 = v16 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v15 = (v22 - 1) & v22;
      uint64_t v51 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = a4[7];
    uint64_t v26 = (uint64_t *)(a4[6] + 16 * v20);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = v49;
    uint64_t v30 = v50;
    uint64_t v31 = *(void *)(v50 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v49, v25 + v31 * v20, v18);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v52, v29, v18);
    sub_10096D4B0();
    swift_bridgeObjectRetain();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v18 = v48;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v33) >> 6;
      uint64_t v18 = v48;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v39 = v35 == v38;
        if (v35 == v38) {
          unint64_t v35 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(void *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    uint64_t v41 = (void *)(*(void *)(v14 + 48) + 16 * v36);
    *uint64_t v41 = v27;
    v41[1] = v28;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(void *)(v14 + 56) + v36 * v31, v52, v18);
    ++*(void *)(v14 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v45;
    uint64_t v16 = v51;
    if (!a3) {
      return v14;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1009290B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10002B7CC(&qword_100ACCD40);
  uint64_t result = sub_10096CEA0();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_100347A00(*(void *)(v4 + 56) + 16 * v14, (uint64_t)v29);
    sub_10009CB44((uint64_t)v29, (uint64_t)v28);
    uint64_t result = sub_10096D4A0();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    uint64_t result = sub_10009CB44((uint64_t)v28, *(void *)(v9 + 56) + 16 * v22);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100929330(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10002B7CC(&qword_100AD20E8);
  uint64_t result = sub_10096CEA0();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_10096D4B0();
    swift_bridgeObjectRetain();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = (void *)(*(void *)(v8 + 48) + 16 * v24);
    *uint64_t v29 = v19;
    v29[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v24) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1009295D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10002B7CC(&qword_100ACC980);
  uint64_t result = sub_10096CEA0();
  uint64_t v9 = result;
  BOOL v39 = a1;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v40) {
        return v9;
      }
      unint64_t v16 = v39[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v40) {
          return v9;
        }
        unint64_t v16 = v39[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v40) {
            return v9;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v40) {
              return v9;
            }
            unint64_t v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v40) {
                  return v9;
                }
                unint64_t v16 = v39[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = 16 * v14;
    uint64_t v20 = v4;
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    unint64_t v24 = (uint64_t *)(*(void *)(v4 + 56) + v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_10096D4B0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10096BD50();
    uint64_t result = sub_10096D500();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = 16 * v30;
    unint64_t v36 = (void *)(*(void *)(v9 + 48) + v35);
    *unint64_t v36 = v23;
    v36[1] = v22;
    char v37 = (void *)(*(void *)(v9 + 56) + v35);
    *char v37 = v25;
    v37[1] = v26;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v20;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100929898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t, uint64_t))
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_10003DB70();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10096BED0();
  unint64_t v10 = v8;
  if ((v8 & 0x1000000000000000) == 0)
  {
    if ((v8 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v12 = HIBYTE(v10) & 0xF;
    uint64_t v17 = v9;
    uint64_t v18 = v10 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = &v17;
    goto LABEL_7;
  }
  uint64_t v9 = sub_10003C9C8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  unint64_t v10 = v14;
  if ((v14 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v9 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)sub_10096CC90();
  }
LABEL_7:
  unint64_t v15 = a6(v11, v12, a5);
  swift_bridgeObjectRelease();
  return v15 | ((HIDWORD(v15) & 1) << 32);
}

unsigned __int8 *sub_10092999C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100929C1C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    char v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    char v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    char v11 = (void *)sub_10096CC90();
  }
  uint64_t result = sub_10092BAA8((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_100929CF4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_100929D98(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100929E7C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_100929ECC(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_10096D2D0() & 1;
  }
}

uint64_t sub_100929F24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void (*a3)(uint64_t *__return_ptr, unsigned char *, char *)@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t result = sub_1008E7128(a1, a2, a3, a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t type metadata accessor for VFSCounters(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADF0C8);
}

uint64_t sub_100929F70(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for VFSFileTree(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADE860);
}

uint64_t sub_10092A014()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10092A04C(uint64_t *a1)
{
  return sub_1008E0C70(a1);
}

uint64_t sub_10092A054(uint64_t *a1)
{
  return sub_1008E0EB0(a1);
}

uint64_t sub_10092A05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 64))(&v7, a2, a3);
  if (v8) {
    return 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 112))(&v7, a2, a3);
  uint64_t v5 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_10092A11C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)sub_10096CC30();
LABEL_9:
        char v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
        id v10 = objc_msgSend(v7, "fp_etag");
        if (v10)
        {
          unint64_t v11 = v10;
          uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            sub_10096CCB0();
            sub_10096CCF0();
            sub_10096CD00();
            sub_10096CCC0();
            goto LABEL_5;
          }
          char v16 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_18;
          }
        }

LABEL_5:
        ++v6;
        if (v9 == v5) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v5 = sub_10096CE70();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10092A2D8(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  char v30 = (long long *)((char *)a2 + 24);
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v29 = (uint64_t)(a2 + 3);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    int64_t v38 = v7;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    unsigned __int8 v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    long long v36 = *a2;
    long long v35 = *v30;
    sub_10001AE98(v29, (uint64_t)v34, &qword_100ACF700);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100243F20((uint64_t)&v36);
    sub_100243F20((uint64_t)&v35);
    sub_1000A6F50((uint64_t)v34);
    v18.super.Class isa = sub_10096AF20().super.isa;
    v19.super.Class isa = sub_10096AF20().super.isa;
    sub_10001AE98((uint64_t)v34, (uint64_t)v37, &qword_100ACF700);
    if (v37[1])
    {
      NSString v20 = sub_10096BC00();
      sub_1001FACD4((uint64_t)v34);
    }
    else
    {
      NSString v20 = 0;
    }
    unsigned int v21 = self;
    id v22 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v18.super.isa metadataVersion:v19.super.isa lastEditorDeviceName:v20];
    sub_100243F50((uint64_t)&v35);
    sub_100243F50((uint64_t)&v36);

    id v23 = [v21 etagForVersion:v22 providerDomainID:a3];
    uint64_t v24 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v26 = v25;

    if (v17 == v24 && v16 == v26)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v8 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v7 = v38;
    if (v8)
    {
      swift_release();
      return 1;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v28) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v11);
  int64_t v13 = v7 + 1;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v7 + 2;
  if (v7 + 2 >= v28) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v7 + 3;
  if (v7 + 3 >= v28) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v7 + 4;
  if (v7 + 4 >= v28) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  uint64_t v14 = v7 + 5;
  if (v7 + 5 >= v28)
  {
LABEL_29:
    swift_release();
    return 0;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  int64_t v13 = v7 + 5;
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    int64_t v38 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10092A65C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v7 + qword_100B0B640;
  uint64_t result = swift_beginAccess();
  uint64_t v20 = *(void *)(v18 + 8);
  BOOL v21 = __CFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v18 + 8) = v22;
    uint64_t v23 = *(void *)(v7 + 224);
    id v36 = *(id *)(v7 + 216);
    uint64_t v24 = sub_10096B7D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
    uint64_t v25 = swift_allocObject();
    long long v35 = v17;
    uint64_t v26 = a4;
    uint64_t v27 = v25;
    *(void *)(v25 + 16) = a6;
    *(void *)(v25 + 24) = a7;
    uint64_t v28 = swift_allocObject();
    char v29 = a2;
    uint64_t v30 = v28;
    *(void *)(v28 + 16) = v7;
    *(void *)(v28 + 24) = a1;
    *(unsigned char *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = a6;
    *(void *)(v28 + 48) = a7;
    *(void *)(v28 + 56) = a3;
    *(void *)(v28 + 64) = v26;
    *(void *)(v28 + 72) = a5;
    uint64_t v31 = (void *)swift_allocObject();
    v31[2] = sub_10021E33C;
    v31[3] = v27;
    v31[4] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain_n();
    id v32 = v36;
    swift_retain();
    uint64_t v33 = (uint64_t)v35;
    sub_1003946CC(v32, (uint64_t)v35, (void (*)())sub_10093E158, v31, (uint64_t)sub_10093C5C0, v30);

    swift_release();
    swift_release();
    swift_release();
    return sub_10002B770(v33, (uint64_t *)&unk_100ACF600);
  }
  return result;
}

uint64_t sub_10092A8B4(Swift::Int32 a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10096A7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096BCB0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096BC90();
  uint64_t v12 = sub_10096BC40();
  unint64_t v14 = v13;
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v14 >> 60 == 15)
  {
    LODWORD(v44[0]) = 22;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_willThrow();
  }
  __chkstk_darwin(v15);
  *((_DWORD *)&v39 - 8) = a1;
  *(&v39 - 3) = v17;
  *(&v39 - 2) = 0x800000010099DD70;
  *((_DWORD *)&v39 - 2) = 0;
  uint64_t v18 = v12;
  switch(v14 >> 62)
  {
    case 1uLL:
      if (v12 >> 32 < (int)v12) {
        __break(1u);
      }
      swift_retain();
      uint64_t v20 = v43;
      sub_1006B363C((int)v12, v12 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_10093E070);
      sub_10001E9AC(v12, v14);
      if (v20) {
        return sub_10001E9AC(v18, v14);
      }
      goto LABEL_14;
    case 2uLL:
      uint64_t v21 = *(void *)(v12 + 16);
      uint64_t v22 = *(void *)(v12 + 24);
      swift_retain();
      swift_retain();
      uint64_t v23 = v43;
      sub_1006B363C(v21, v22, (uint64_t (*)(uint64_t, uint64_t))sub_10093E070);
      if (v23)
      {
        swift_release();
        swift_release();
        return sub_10001E9AC(v18, v14);
      }
      swift_release();
      swift_release();
LABEL_14:
      if ((sub_10096B4F0(a1, 64, 3) & 0x80000000) == 0) {
        return sub_10001E9AC(v18, v14);
      }
      int v25 = sub_10096B4D0();
      sub_1005970E0(v25, 3, 0, 7u);
      swift_willThrow();
      id v26 = (id)fpfs_current_or_default_log();
      uint64_t v27 = v42;
      sub_10096B490();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = sub_10096B470();
      os_log_type_t v29 = sub_10096C5B0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 138412290;
        uint64_t v43 = v30 + 4;
        swift_getErrorValue();
        id v32 = Error.prettyDescription.getter(v44[3]);
        v44[0] = v32;
        uint64_t v27 = v42;
        sub_10096C8C0();
        *uint64_t v31 = v32;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Could not set protection class: %@", v30, 0xCu);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_10001E9AC(v18, v14);

        swift_errorRelease();
      }
      else
      {
        sub_10001E9AC(v12, v14);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v27, v41);
    case 3uLL:
      memset(v44, 0, 14);
      sub_10096BCF0();
      int v24 = fpfs_fsetxattr();
      swift_release();
      if ((v24 & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_18;
    default:
      v44[0] = v12;
      LOWORD(v44[1]) = v14;
      BYTE2(v44[1]) = BYTE2(v14);
      BYTE3(v44[1]) = BYTE3(v14);
      BYTE4(v44[1]) = BYTE4(v14);
      BYTE5(v44[1]) = BYTE5(v14);
      sub_10096BCF0();
      int v19 = fpfs_fsetxattr();
      swift_release();
      if ((v19 & 0x80000000) == 0) {
        goto LABEL_14;
      }
LABEL_18:
      int v33 = sub_10096B4D0();
      NSString v34 = sub_10096BC00();
      id v35 = objc_msgSend(v34, "fp_obfuscatedExtendedAttributeName");

      uint64_t v36 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v38 = v37;

      sub_1005970E0(v33, v36, v38, 0);
      swift_bridgeObjectRelease();
      swift_willThrow();
      return sub_10001E9AC(v18, v14);
  }
}

uint64_t sub_10092B068(Swift::Int32 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a5;
  v60[1] = a6;
  v60[2] = a7;
  uint64_t v62 = a3;
  uint64_t v64 = a2;
  Swift::Int32 v61 = a1;
  uint64_t v8 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096AE50();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v63 = (uint64_t)v60 - v19;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20(v14, v64, v11);
  v20(v10, v65, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v20(v18, (uint64_t)v14, v11);
  swift_bridgeObjectRetain();
  uint64_t v21 = v66;
  uint64_t v22 = sub_10096AC70();
  int v24 = (void (**)(char *, uint64_t))(v12 + 8);
  if (v21)
  {
    swift_bridgeObjectRelease();
    sub_10002B770((uint64_t)v10, &qword_100ACA8C0);
    int v25 = *v24;
    (*v24)(v14, v11);
    return ((uint64_t (*)(char *, uint64_t))v25)(v18, v11);
  }
  uint64_t v27 = v22;
  uint64_t v66 = 0;
  uint64_t v28 = v23;
  sub_10002B770((uint64_t)v10, &qword_100ACA8C0);
  (*v24)(v14, v11);
  os_log_type_t v29 = &v18[v15[6]];
  *(void *)os_log_type_t v29 = v27;
  *((void *)v29 + 1) = v28;
  uint64_t v30 = &v18[v15[5]];
  *(void *)uint64_t v30 = v62;
  *((void *)v30 + 1) = a4;
  v18[v15[7]] = 1;
  uint64_t v31 = (uint64_t)v18;
  uint64_t v32 = v63;
  sub_10001158C(v31, v63, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
  uint64_t v33 = v15[6];
  NSString v34 = (uint64_t *)(v32 + v15[5]);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  uint64_t v38 = *(void *)(v32 + v33);
  unint64_t v37 = *(void *)(v32 + v33 + 8);
  sub_10096AAD0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_10001EBB0(v38, v37);
  sub_10096AAC0();
  sub_10096AAA0();
  *(void *)&long long v67 = v36;
  *((void *)&v67 + 1) = v35;
  uint64_t v68 = v38;
  unint64_t v69 = v37;
  sub_100258620();
  uint64_t v39 = v66;
  uint64_t v40 = sub_10096AAB0();
  if (v39)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001E9C0(v38, v37);
    return sub_10092D018(v32, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
  }
  uint64_t v42 = v40;
  unint64_t v43 = v41;
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001E9C0(v38, v37);
  Swift::Int32 v44 = v61;
  if ((fpfs_clear_acl() & 0x80000000) != 0)
  {
    int v46 = sub_10096B4D0();
    uint64_t v47 = 9;
    unsigned __int8 v48 = 10;
    goto LABEL_14;
  }
  if ((fpfs_fset_acl() & 0x80000000) != 0)
  {
    int v46 = sub_10096B4D0();
    uint64_t v47 = 16;
LABEL_12:
    unsigned __int8 v48 = 2;
    goto LABEL_14;
  }
  if ((fpfs_fset_syncroot() & 0x80000000) == 0)
  {
    uint64_t v45 = sub_10092A8B4(v44);
    __chkstk_darwin(v45);
    LODWORD(v60[-4]) = v44;
    v60[-3] = v49;
    v60[-2] = 0x800000010099B580;
    LODWORD(v60[-1]) = 0;
    switch(v43 >> 62)
    {
      case 1uLL:
        if (v42 >> 32 < (int)v42) {
          __break(1u);
        }
        swift_retain();
        sub_1006B363C((int)v42, v42 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_1009382A4);
        sub_10001E9C0(v42, v43);
        goto LABEL_24;
      case 2uLL:
        uint64_t v51 = *(void *)(v42 + 16);
        uint64_t v52 = *(void *)(v42 + 24);
        swift_retain();
        swift_retain();
        sub_1006B363C(v51, v52, (uint64_t (*)(uint64_t, uint64_t))sub_1009382A4);
        swift_release();
        swift_release();
        goto LABEL_24;
      case 3uLL:
        *(void *)((char *)&v67 + 6) = 0;
        *(void *)&long long v67 = 0;
        sub_10096BCF0();
        int v53 = fpfs_fsetxattr();
        swift_release();
        if (v53 < 0) {
          goto LABEL_23;
        }
        goto LABEL_24;
      default:
        *(void *)&long long v67 = v42;
        WORD4(v67) = v43;
        BYTE10(v67) = BYTE2(v43);
        BYTE11(v67) = BYTE3(v43);
        BYTE12(v67) = BYTE4(v43);
        BYTE13(v67) = BYTE5(v43);
        sub_10096BCF0();
        int v50 = fpfs_fsetxattr();
        swift_release();
        if (v50 < 0)
        {
LABEL_23:
          int v54 = sub_10096B4D0();
          NSString v55 = sub_10096BC00();
          id v56 = objc_msgSend(v55, "fp_obfuscatedExtendedAttributeName");

          uint64_t v57 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v59 = v58;

          sub_1005970E0(v54, v57, v59, 0);
          swift_bridgeObjectRelease();
          swift_willThrow();
          goto LABEL_15;
        }
LABEL_24:
        if ((fpfs_fset_acl() & 0x80000000) == 0) {
          goto LABEL_15;
        }
        int v46 = sub_10096B4D0();
        uint64_t v47 = 1024;
        break;
    }
    goto LABEL_12;
  }
  int v46 = sub_10096B4D0();
  uint64_t v47 = 2;
  unsigned __int8 v48 = 4;
LABEL_14:
  sub_1005970E0(v46, v47, 0, v48);
  swift_willThrow();
LABEL_15:
  sub_10092D018(v32, (uint64_t (*)(void))type metadata accessor for VFSDetachedRootBookmark);
  return sub_10001E9C0(v42, v43);
}

uint64_t sub_10092B86C(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(v7 + qword_100B0B640);
  uint64_t result = swift_beginAccess();
  if (*v18 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v18;
    uint64_t v20 = *(void *)(v7 + 224);
    id v28 = *(id *)(v7 + 216);
    uint64_t v21 = sub_10096B7D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
    uint64_t v22 = swift_allocObject();
    char v23 = a2;
    uint64_t v24 = a5;
    int v25 = (void *)v22;
    *(void *)(v22 + 16) = a4;
    *(void *)(v22 + 24) = v7;
    *(void *)(v22 + 32) = a1;
    *(unsigned char *)(v22 + 40) = v23;
    sub_10001AE98((uint64_t)a3, v22 + 48, (uint64_t *)&unk_100AD6BC0);
    v25[18] = a6;
    v25[19] = a7;
    v25[20] = v24;
    id v26 = (void *)swift_allocObject();
    _OWORD v26[2] = a6;
    v26[3] = a7;
    v26[4] = v20;
    swift_retain();
    swift_retain();
    swift_retain_n();
    id v27 = v28;
    sub_100939AF0(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C58C);
    swift_retain();
    sub_1003946CC(v27, (uint64_t)v17, (void (*)())sub_10093C228, v26, (uint64_t)sub_10043F4FC, (uint64_t)v25);

    swift_release();
    swift_release();
    return sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACF600);
  }
  return result;
}

uint64_t sub_10092BAA8(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_10003CF1C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = sub_10096BE40();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_10003CF1C(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_10003CF1C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = sub_10096BE40();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          unsigned int v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned int v29 = 0;
                unsigned __int8 v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | ((unint64_t)v30 << 32);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            uint64_t v40 = (int)v24 * (uint64_t)(int)a6;
            if (v40 != (int)v40) {
              goto LABEL_96;
            }
            unsigned __int8 v41 = v38 + v39;
            unsigned int v24 = v40 + v41;
            if (__OFADD__(v40, v41)) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          unsigned __int8 v30 = 0;
          unsigned int v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v45 < 0x61 || v45 >= v42) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          uint64_t v47 = (int)v24 * (uint64_t)(int)a6;
          if (v47 != (int)v47) {
            goto LABEL_96;
          }
          unsigned __int8 v48 = v45 + v46;
          unsigned int v24 = v47 + v48;
          if (__OFADD__(v47, v48)) {
            goto LABEL_96;
          }
          ++v19;
          if (!--result) {
            goto LABEL_94;
          }
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        int v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v31 = (int)v24 * (uint64_t)(int)a6;
          if (v31 != (int)v31) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (__OFSUB__(v31, v32)) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }
LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_10092BED0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = a3;
  uint64_t v37 = a6;
  uint64_t v34 = a2;
  uint64_t v35 = a5;
  uint64_t v33 = a4;
  uint64_t v10 = sub_10002B7CC(&qword_100AD0E10);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008D90(0x657461657263, (void *)0xE600000000000000, *(void *)(a1 + 16), *(void *)(a1 + 24));
  int64_t v18 = *(void **)(v7 + 216);
  uint64_t v31 = *(void *)(v7 + 224);
  id v32 = v18;
  uint64_t v19 = sub_10096B7D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_10002B70C(a1, (uint64_t)v14, (uint64_t *)&unk_100ADBFF0);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unsigned __int8 v22 = (void *)swift_allocObject();
  uint64_t v23 = v7;
  uint64_t v30 = v7;
  uint64_t v24 = v37;
  v22[2] = v34;
  v22[3] = v24;
  v22[4] = a7;
  v22[5] = v23;
  sub_10001AE98((uint64_t)v36, (uint64_t)(v22 + 6), (uint64_t *)&unk_100ACF710);
  sub_10001AE98((uint64_t)v14, (uint64_t)v22 + v20, (uint64_t *)&unk_100ADBFF0);
  uint64_t v25 = v35;
  sub_10001AE98(v35, (uint64_t)v22 + v21, &qword_100AD0EA0);
  *(void *)((char *)v22 + ((v21 + 255) & 0xFFFFFFFFFFFFFFF8)) = v33;
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = v24;
  v26[3] = a7;
  v26[4] = v31;
  swift_retain_n();
  id v27 = v32;
  swift_retain();
  swift_retain();
  sub_100245AD4(v36, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_100244374(v25);
  swift_retain();
  sub_1003946CC(v27, (uint64_t)v17, (void (*)())sub_10093E15C, v26, (uint64_t)sub_10093B8A4, (uint64_t)v22);

  swift_release();
  swift_release();
  return sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_10092C26C(uint64_t a1, int a2, void *a3, unint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, void (*a9)(void, void), uint64_t a10)
{
  unint64_t v82 = a4;
  uint64_t v75 = a8;
  Swift::String v78 = a3;
  uint64_t v79 = a7;
  NSString v77 = a6;
  int v74 = a2;
  uint64_t v73 = a1;
  uint64_t v84 = a10;
  Swift::String v81 = a9;
  uint64_t v68 = (int *)sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v70 = *((void *)v68 - 1);
  __chkstk_darwin(v68);
  unint64_t v71 = v11;
  uint64_t v72 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10096B760();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v69 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v67 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v67 - v22;
  uint64_t v24 = sub_10096B7D0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  char v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v67 - v29;
  uint64_t v31 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = a5;
  if ((a5 & 0x18) != 0)
  {
    Swift::String v80 = v33;
    uint64_t v67 = *(void *)(v83 + 224);
    int v34 = *(unsigned __int8 *)(v82 + v68[10]);
    uint64_t v68 = (int *)*(id *)(v83 + 216);
    if (v34 == 1) {
      sub_10096B790();
    }
    else {
      sub_10096B7A0();
    }
    qos_class_self();
    sub_10096B740();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v23, enum case for DispatchQoS.QoSClass.utility(_:), v15);
      sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACD990);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v14, v15);
    }
    sub_10096B7B0();
    sub_10096B7C0();
    unsigned int v37 = sub_10096B750();
    unsigned int v38 = *(void (**)(char *, uint64_t))(v16 + 8);
    v38(v21, v15);
    char v39 = v69;
    sub_10096B7C0();
    unsigned int v40 = sub_10096B750();
    v38(v39, v15);
    if (v37 >= v40) {
      unsigned __int8 v41 = v30;
    }
    else {
      unsigned __int8 v41 = v28;
    }
    uint64_t v42 = (uint64_t)v80;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v80, v41, v24);
    unsigned __int8 v43 = *(void (**)(char *, uint64_t))(v25 + 8);
    v43(v28, v24);
    v43(v30, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
    uint64_t v44 = swift_allocObject();
    unint64_t v69 = (char *)v44;
    unsigned int v45 = v81;
    uint64_t v46 = v84;
    *(void *)(v44 + 16) = v81;
    *(void *)(v44 + 24) = v46;
    uint64_t v47 = v72;
    sub_10002B70C(v82, v72, (uint64_t *)&unk_100ADBFF0);
    unint64_t v48 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    unint64_t v49 = (v71 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = (v50 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v51 + 103) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v82 = (v53 + 63) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = v45;
    *(void *)(v54 + 24) = v46;
    sub_10001AE98(v47, v54 + v48, (uint64_t *)&unk_100ADBFF0);
    *(void *)(v54 + v49) = v83;
    *(void *)(v54 + v50) = v75;
    unint64_t v55 = v54 + v71;
    *(void *)unint64_t v55 = v73;
    *(unsigned char *)(v55 + 8) = v74;
    id v56 = (_OWORD *)(v54 + v51);
    uint64_t v58 = v77;
    uint64_t v57 = v78;
    long long v59 = v77[1];
    *id v56 = *v77;
    v56[1] = v59;
    long long v60 = v58[5];
    v56[4] = v58[4];
    v56[5] = v60;
    long long v61 = v58[3];
    v56[2] = v58[2];
    v56[3] = v61;
    *(void *)(v54 + v52) = v76;
    sub_10001AE98((uint64_t)v57, v54 + v53, (uint64_t *)&unk_100ACF710);
    uint64_t v62 = v79;
    sub_10001AE98(v79, v54 + v82, &qword_100AD0EA0);
    uint64_t v63 = (void *)swift_allocObject();
    uint64_t v64 = v69;
    v63[2] = sub_10021E33C;
    v63[3] = v64;
    v63[4] = v67;
    swift_retain_n();
    swift_retain();
    sub_100938D34((uint64_t)v58);
    sub_100245AD4(v57, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
    sub_100244374(v62);
    swift_retain();
    swift_retain();
    uint64_t v65 = v68;
    uint64_t v66 = (uint64_t)v80;
    sub_1003946CC(v68, (uint64_t)v80, (void (*)())sub_10093E158, v63, (uint64_t)sub_100939998, v54);

    swift_release();
    swift_release();
    swift_release();
    return sub_10002B770(v66, (uint64_t *)&unk_100ACF600);
  }
  else
  {
    type metadata accessor for StagedContext();
    uint64_t v35 = swift_allocObject();
    v81(v35, 0);
    return swift_release();
  }
}

uint64_t sub_10092C9A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v50 = a4;
  unint64_t v53 = (void *)a3;
  int v49 = a2;
  uint64_t v48 = a1;
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096B760();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = sub_10096B7D0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v26 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v26 - 8);
  uint64_t v47 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(v6 + 224);
  uint64_t v54 = v6;
  id v45 = *(id *)(v6 + 216);
  sub_10096B7A0();
  qos_class_self();
  sub_10096B740();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v18, enum case for DispatchQoS.QoSClass.utility(_:), v10);
    sub_10002B770((uint64_t)v9, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
  }
  sub_10096B7B0();
  sub_10096B7C0();
  unsigned int v28 = sub_10096B750();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v16, v10);
  uint64_t v30 = v44;
  sub_10096B7C0();
  unsigned int v31 = sub_10096B750();
  v29(v30, v10);
  if (v28 >= v31) {
    uint64_t v32 = v25;
  }
  else {
    uint64_t v32 = v23;
  }
  uint64_t v33 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v47, v32, v19);
  int v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  v34(v23, v19);
  v34(v25, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v53;
  sub_10001AE98((uint64_t)v53, v35 + 16, (uint64_t *)&unk_100AD6BC0);
  uint64_t v38 = v51;
  uint64_t v37 = v52;
  *(void *)(v35 + 112) = v51;
  *(void *)(v35 + 120) = v37;
  *(void *)(v35 + 128) = v48;
  *(unsigned char *)(v35 + 136) = v49;
  uint64_t v39 = v50;
  *(void *)(v35 + 144) = v54;
  *(void *)(v35 + 152) = v39;
  unsigned int v40 = (void *)swift_allocObject();
  v40[2] = v38;
  v40[3] = v37;
  v40[4] = v46;
  swift_retain_n();
  sub_100939AF0(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C58C);
  swift_retain();
  swift_retain();
  unsigned __int8 v41 = v45;
  sub_1003946CC(v45, v33, (void (*)())sub_10093CEEC, v40, (uint64_t)sub_10093CED0, v35);

  swift_release();
  swift_release();
  return sub_10002B770(v33, (uint64_t *)&unk_100ACF600);
}

uint64_t sub_10092CE94(uint64_t a1)
{
  if (qword_100ACC0D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_100AD9D70);
  swift_endAccess();
  if (qword_100ACC0D8 != -1) {
    swift_once();
  }
  sub_10002B7CC(qword_100AD9D98);
  uint64_t v2 = sub_10096BCC0();
  uint64_t v4 = v3;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = off_100AD9D78;
  off_100AD9D78 = (_UNKNOWN *)0x8000000000000000;
  sub_10038A668(a1, v2, v4, isUniquelyReferenced_nonNull_native);
  off_100AD9D78 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_100AD9D70);
  return swift_endAccess();
}

uint64_t sub_10092D018(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10092D078(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t a8, uint64_t a9, char *a10, char *a11)
{
  uint64_t v89 = a5;
  uint64_t v83 = a8;
  uint64_t v84 = a7;
  Swift::String v85 = (void *)a6;
  uint64_t v91 = a4;
  int v82 = a2;
  uint64_t v81 = a1;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACD990);
  __chkstk_darwin(v12 - 8);
  uint64_t v73 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10096B760();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  NSString v77 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  Swift::String v87 = (char *)&v71 - v19;
  __chkstk_darwin(v18);
  unint64_t v71 = (char *)&v71 - v20;
  uint64_t v21 = sub_10096B7D0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = sub_10002B7CC((uint64_t *)&unk_100ACF600);
  __chkstk_darwin(v28 - 8);
  uint64_t v88 = (uint64_t)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  unint64_t v74 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  unint64_t v75 = v32;
  uint64_t v76 = (uint64_t)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  int v34 = (char *)&v71 - v33;
  uint64_t v86 = swift_allocObject();
  *(void *)(v86 + 16) = 0;
  sub_10002B70C(a3, (uint64_t)v34, (uint64_t *)&unk_100ADBFF0);
  if ((v91 & 0x10) != 0)
  {
    uint64_t v35 = &v34[*(int *)(v30 + 40)];
    LOBYTE(v35) = v35[*(int *)(type metadata accessor for ItemMetadata() + 80)];
    sub_10002B770((uint64_t)v34, (uint64_t *)&unk_100ADBFF0);
    if ((v35 & 1) == 0) {
      *(void *)(v86 + 16) = 1;
    }
  }
  else
  {
    sub_10002B770((uint64_t)v34, (uint64_t *)&unk_100ADBFF0);
  }
  uint64_t v78 = a9;
  uint64_t v36 = *(void **)(v90 + 216);
  uint64_t v80 = *(void *)(v90 + 224);
  int v37 = *(unsigned __int8 *)(a3 + *(int *)(v30 + 40));
  id v79 = v36;
  uint64_t v72 = a3;
  if (v37 == 1 || (v91 & 0x18) == 0) {
    sub_10096B790();
  }
  else {
    sub_10096B7A0();
  }
  uint64_t v38 = v87;
  uint64_t v39 = (uint64_t)v73;
  unsigned int v40 = v71;
  uint64_t v73 = a11;
  Swift::String v87 = a10;
  qos_class_self();
  sub_10096B740();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v39, 1, v14) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v40, enum case for DispatchQoS.QoSClass.utility(_:), v14);
    sub_10002B770(v39, (uint64_t *)&unk_100ACD990);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v40, v39, v14);
  }
  sub_10096B7B0();
  sub_10096B7C0();
  unsigned int v41 = sub_10096B750();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
  v42(v38, v14);
  uint64_t v43 = v77;
  sub_10096B7C0();
  unsigned int v44 = sub_10096B750();
  v42(v43, v14);
  if (v41 >= v44) {
    id v45 = v27;
  }
  else {
    id v45 = v25;
  }
  uint64_t v46 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v88, v45, v21);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v22 + 8);
  v47(v25, v21);
  v47(v27, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v46, 0, 1, v21);
  uint64_t v48 = v76;
  sub_10002B70C(v72, v76, (uint64_t *)&unk_100ADBFF0);
  unint64_t v49 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  unint64_t v50 = (v75 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v51 + 119) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v51 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  NSString v77 = (char *)((v55 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v56 = swift_allocObject();
  uint64_t v57 = v73;
  *(void *)(v56 + 16) = v87;
  *(void *)(v56 + 24) = v57;
  sub_10001AE98(v48, v56 + v49, (uint64_t *)&unk_100ADBFF0);
  *(void *)(v56 + v50) = v89;
  uint64_t v58 = (_OWORD *)(v56 + v51);
  long long v59 = v84;
  long long v60 = v84[1];
  *uint64_t v58 = *v84;
  v58[1] = v60;
  long long v61 = v59[5];
  v58[4] = v59[4];
  v58[5] = v61;
  long long v62 = v59[3];
  void v58[2] = v59[2];
  v58[3] = v62;
  unint64_t v63 = v56 + v74;
  *(void *)unint64_t v63 = v81;
  *(unsigned char *)(v63 + 8) = v82;
  *(void *)(v56 + v52) = v83;
  *(void *)(v56 + v53) = v86;
  uint64_t v64 = v56 + v55;
  *(void *)(v56 + v75) = v90;
  *(void *)(v56 + v54) = v91;
  uint64_t v65 = v85;
  sub_10001AE98((uint64_t)v85, v64, (uint64_t *)&unk_100ACF710);
  uint64_t v66 = v78;
  sub_10001AE98(v78, (uint64_t)&v77[v56], &qword_100AD0EA0);
  uint64_t v67 = (void *)swift_allocObject();
  v67[2] = v87;
  v67[3] = v57;
  v67[4] = v80;
  swift_retain_n();
  swift_retain();
  sub_100938D34((uint64_t)v59);
  swift_retain();
  swift_retain();
  sub_100245AD4(v65, (void (*)(void, void, void, void, void, void, void))sub_10009C650);
  sub_100244374(v66);
  swift_retain();
  uint64_t v68 = v79;
  uint64_t v69 = v88;
  sub_1003946CC(v79, v88, (void (*)())sub_100939F98, v67, (uint64_t)sub_100939E90, v56);

  swift_release();
  swift_release();
  sub_10002B770(v69, (uint64_t *)&unk_100ACF600);
  return swift_release();
}

uint64_t sub_10092D814(uint64_t a1)
{
  uint64_t v2 = sub_10096A7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  LODWORD(v28) = sub_10096A6A0();
  uint64_t v6 = (void *)sub_10096A790();
  sub_100045CB4();
  char v7 = sub_10096AA60();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v8 = (void *)sub_10096A790();
  uint64_t v9 = (void *)sub_10096ABE0();

  id v10 = [v9 userInfo];
  uint64_t v11 = sub_10096B9C0();

  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_10000DDD0(0xD000000000000013, 0x800000010099AFB0), (v13 & 1) != 0))
  {
    sub_1001FAC78(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
    sub_10002B770((uint64_t)&v28, (uint64_t *)&unk_100ACE0F0);
    goto LABEL_13;
  }
  type metadata accessor for URLFileProtection(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:

    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v15 = (void *)v27[1];
  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v18 = v17;
  if (v16 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:

    char v14 = 1;
    return v14 & 1;
  }
  char v20 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_15;
  }
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v23 = v22;
  if (v21 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v23 == v24) {
    char v14 = 1;
  }
  else {
    char v14 = sub_10096D2D0();
  }
  id v25 = v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_10092DB3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4370756B6F6F6CLL && a2 == 0xEB00000000746E75;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E756F436E616373 && a2 == 0xE900000000000074 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001009BEDE0 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10092DD18(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = sub_10096A630();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return a2(0);
  }
  swift_errorRetain();
  sub_10096A550();
  sub_1000256AC((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
  char v8 = sub_10096AA60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_errorRelease();
    return a2(0);
  }
  swift_errorRetain();
  a2(a1);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_10092DE94(Swift::UInt64 a1, int a2, unint64_t a3, char a4, void *a5, void (*a6)(void), uint64_t a7)
{
  HIDWORD(v47) = a2;
  Swift::UInt64 v48 = a1;
  uint64_t v12 = sub_10096B830();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  *(void *)(v16 + 24) = a7;
  uint64_t v17 = (void *)a5[27];
  *uint64_t v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  swift_retain();
  id v18 = v17;
  LOBYTE(v17) = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_19;
    }
    goto LABEL_4;
  }
  if (a3 >> 62) {
    goto LABEL_18;
  }
  if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    a6(0);
    swift_release();
    return;
  }
LABEL_4:
  if (a4) {
    goto LABEL_19;
  }
  id v19 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  if (a5[23])
  {
    NSString v20 = sub_10096BC00();
    [v19 setPurposeIdentifier:v20];
  }
  swift_beginAccess();
  id v21 = v19;
  sub_100496C34(v49, v21);
  swift_endAccess();

  char v22 = BYTE4(v47);
  if (BYTE4(v47) == 0xFF) {
    goto LABEL_23;
  }
  uint64_t v23 = (id *)(a5 + 25);
  swift_beginAccess();
  if (*(void *)(a5[25] + 16))
  {
    sub_10031F858(v48, v22);
    if (v24)
    {
      id v25 = sub_1008DF56C();
      uint64_t v26 = sub_1008D4900(v49, v48, v22);
      if (*v27)
      {
        sub_100496C34(&v50, v21);
        ((void (*)(id *, void))v26)(v49, 0);
        ((void (*)(void *, void))v25)(aBlock, 0);
      }
      else
      {
        ((void (*)(id *, void))v26)(v49, 0);
        ((void (*)(void *, void))v25)(aBlock, 0);
      }
      char v22 = BYTE4(v47);
      goto LABEL_23;
    }
  }
  sub_10002B7CC(&qword_100ACAF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100974D40;
  *(void *)(inited + 32) = v21;
  aBlock[0] = inited;
  sub_10096C0C0();
  unint64_t v29 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    id v35 = v21;
    swift_bridgeObjectRetain();
    char v22 = BYTE4(v47);
    uint64_t v36 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_15;
    }
LABEL_21:
    uint64_t v33 = &_swiftEmptySetSingleton;
    goto LABEL_22;
  }
  uint64_t v30 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v31 = v21;
  if (!v30) {
    goto LABEL_21;
  }
LABEL_15:
  sub_10009A4F8(v29);
  uint64_t v33 = v32;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49[0] = *v23;
  *uint64_t v23 = (id)0x8000000000000000;
  sub_10038D164((uint64_t)v33, v48, v22, isUniquelyReferenced_nonNull_native);
  *uint64_t v23 = v49[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_23:
  id v38 = (id)fpfs_current_log();
  sub_100011348(0, &qword_100AD88E0);
  Class isa = sub_10096C080().super.isa;
  unsigned int v40 = (void *)a5[26];
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v38;
  *(void *)(v41 + 24) = a5;
  Swift::UInt64 v42 = v48;
  *(void *)(v41 + 32) = v21;
  *(void *)(v41 + 40) = v42;
  *(unsigned char *)(v41 + 48) = v22;
  *(void *)(v41 + 56) = sub_10093C6A8;
  *(void *)(v41 + 64) = v16;
  aBlock[4] = sub_100938EB4;
  aBlock[5] = v41;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000072D0;
  aBlock[3] = &unk_100AA59A0;
  uint64_t v43 = _Block_copy(aBlock);
  id v44 = v21;
  id v45 = v40;
  id v46 = v38;
  swift_retain();
  swift_retain();
  swift_release();
  [v44 coordinateAccessWithIntents:isa queue:v45 byAccessor:v43];
  _Block_release(v43);
  swift_release();
}

void *sub_10092E410(void *a1, uint64_t *a2, uint64_t a3, __int16 a4)
{
  uint64_t result = (void *)sub_10001AE98((uint64_t)a1, (uint64_t)&v62, (uint64_t *)&unk_100AD6BC0);
  unint64_t v9 = v70;
  if (!v70) {
    return result;
  }
  uint64_t v73 = v62;
  uint64_t v47 = v63;
  uint64_t v45 = v65;
  uint64_t v41 = v66;
  uint64_t v43 = v64;
  uint64_t v44 = v67;
  uint64_t v46 = v68;
  uint64_t v10 = v69;
  long long v42 = v71;
  uint64_t v11 = v72;
  if ((a3 & 0x10000) != 0)
  {
    uint64_t v12 = (uint64_t)a2 + *(int *)(type metadata accessor for VFSItem(0) + 28);
    uint64_t result = (void *)type metadata accessor for ItemMetadata();
    if (*(unsigned char *)(v12 + *((int *)result + 21))) {
      a3 &= ~0x10000uLL;
    }
  }
  if ((a4 & 0x1000) != 0) {
    return result;
  }
  uint64_t v13 = type metadata accessor for VFSItem(0);
  uint64_t v14 = a2[2];
  unint64_t v15 = a2[5];
  if ((a3 & 0x10018) != 0)
  {
    uint64_t v16 = (uint64_t)a2 + *(int *)(v13 + 36);
    if (*(void *)v16 != v73 || *(_DWORD *)(v16 + 8) != v47) {
      goto LABEL_11;
    }
    if (*(unsigned char *)(v16 + 24))
    {
      if ((v45 & 1) == 0)
      {
LABEL_11:
        swift_bridgeObjectRetain();
        sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C58C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v18 = v10;
LABEL_12:
        char v19 = *((unsigned char *)a2 + 8);
        uint64_t v48 = *a2;
        char v49 = v19;
        uint64_t v50 = v73;
        uint64_t v51 = v47;
        uint64_t v52 = v43;
        uint64_t v53 = v45;
        uint64_t v54 = v41;
        uint64_t v55 = v44;
        uint64_t v56 = v46;
        uint64_t v57 = v18;
        unint64_t v58 = v9;
        long long v59 = v42;
        uint64_t v60 = v11;
        uint64_t v61 = 0;
        sub_1000D3768((uint64_t)&v48);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        swift_allocError();
        sub_10001AE98((uint64_t)&v48, v20, (uint64_t *)&unk_100ACD9A0);
        return (void *)swift_willThrow();
      }
    }
    else if ((v45 & 1) != 0 || *(void *)(v16 + 16) != v43)
    {
      goto LABEL_11;
    }
  }
  if ((a3 & 0xFFFFFFFFFFFFFFE7) == 0) {
    return (void *)swift_bridgeObjectRelease_n();
  }
  if (*((unsigned char *)a2 + 24))
  {
    if (*((unsigned char *)a2 + 24) == 1)
    {
      if (v46 != 1 || v14 != v44) {
        goto LABEL_11;
      }
    }
    else if (v14)
    {
      if (v46 != 2 || v44 != 1) {
        goto LABEL_11;
      }
    }
    else if (v46 != 2 || v44)
    {
      goto LABEL_11;
    }
  }
  else if (v46 || v14 != v44)
  {
    goto LABEL_11;
  }
  uint64_t v21 = a2[4];
  swift_bridgeObjectRetain_n();
  sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C58C);
  swift_bridgeObjectRetain();
  sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C58C);
  uint64_t v40 = v21;
  uint64_t v22 = sub_10002C020(v21, v15);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v38 = v11;
  if (v24)
  {
    if (v22 == 12565487 && v24 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_39:
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_10096BD70();
      sub_1000364D0(v26, v40, v15);
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_10096BD10();
      unint64_t v39 = v28;
      uint64_t v40 = v27;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    char v25 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v39 = v15;
LABEL_41:
  swift_bridgeObjectRetain();
  uint64_t v18 = v10;
  uint64_t v29 = sub_10002C020(v10, v9);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  if (v31)
  {
    if (v29 == 12565487 && v31 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_10096BD70();
      sub_1000364D0(v33, v10, v9);
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_10096BD10();
      unint64_t v36 = v35;
      uint64_t v18 = v10;
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    char v32 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = v10;
  unint64_t v36 = v9;
LABEL_48:
  if (v40 == v34 && v39 == v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1000D32B4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v37 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1000D32B4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v11 = v38;
    if ((v37 & 1) == 0) {
      goto LABEL_12;
    }
  }
  return sub_100939AF0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1000D32B4);
}

uint64_t sub_10092E9FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, uint64_t a7, int a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11)
{
  int v56 = a8;
  uint64_t v57 = a7;
  id v55 = a6;
  uint64_t v60 = a5;
  int v59 = a4;
  uint64_t v58 = a3;
  uint64_t v61 = a2;
  uint64_t v62 = a11;
  unsigned int v63 = a10;
  uint64_t v52 = *(void *)a9;
  uint64_t v54 = *(unsigned int *)(a9 + 8);
  uint64_t v51 = *(void *)(a9 + 16);
  uint64_t v44 = *(unsigned __int8 *)(a9 + 24);
  uint64_t v50 = *(void *)(a9 + 32);
  uint64_t v49 = *(void *)(a9 + 40);
  uint64_t v53 = *(unsigned __int8 *)(a9 + 48);
  uint64_t v48 = *(void *)(a9 + 56);
  uint64_t v47 = *(void *)(a9 + 64);
  uint64_t v46 = *(void *)(a9 + 72);
  uint64_t v12 = *(void *)(a9 + 88);
  uint64_t v45 = *(void *)(a9 + 80);
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = type metadata accessor for VFSItem(0);
  __chkstk_darwin(v23);
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v27 = (char *)&v38 - v26;
  if (a1)
  {
    swift_errorRetain();
LABEL_3:
    swift_willThrow();
    unint64_t v33 = v63;
    swift_errorRetain();
    v33(a1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v41 = v24;
  uint64_t v43 = v22;
  long long v42 = v16;
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  uint64_t v38 = v12;
  uint64_t v28 = v57;
  sub_1008F3004(v58, v59, v60, 0, 0, (uint64_t)&v38 - v26);
  sub_10092D018((uint64_t)v27, type metadata accessor for VFSItem);
  id v29 = [v55 URL];
  uint64_t v30 = (uint64_t)v42;
  sub_10096ADD0();

  uint64_t v31 = v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v20, 1, 1, v23);
  char v32 = v56;
  sub_100901E38(v30, v28, v56, a9, (uint64_t)v20, 1, (uint64_t)v43);
  sub_10002B770((uint64_t)v20, &qword_100ACB910);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v40);
  uint64_t v35 = (uint64_t)v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v43, 1, v23) != 1)
  {
    uint64_t v36 = v44 & 1;
    sub_10002B770(v35, &qword_100ACB910);
    uint64_t v64 = v28;
    char v65 = v32;
    uint64_t v66 = v52;
    uint64_t v67 = v54;
    uint64_t v68 = v51;
    uint64_t v69 = v36;
    uint64_t v70 = v50;
    uint64_t v71 = v49;
    uint64_t v72 = v53;
    uint64_t v73 = v48;
    uint64_t v74 = v47;
    uint64_t v75 = v46;
    uint64_t v76 = v45;
    uint64_t v77 = v38;
    uint64_t v78 = 0;
    sub_1000D3768((uint64_t)&v64);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    a1 = swift_allocError();
    sub_10001AE98((uint64_t)&v64, v37, (uint64_t *)&unk_100ACD9A0);
    sub_100938D34(a9);
    goto LABEL_3;
  }
  sub_10002B770(v35, &qword_100ACB910);
  return ((uint64_t (*)(void))v63)(0);
}

void sub_10092EF78(Swift::UInt64 a1, int a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, _OWORD *a9, void *a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, void (*a14)(uint64_t), uint64_t a15)
{
  uint64_t v115 = a5;
  int v105 = a4;
  unint64_t v106 = a3;
  int v109 = a2;
  Swift::UInt64 v108 = a1;
  uint64_t v114 = a15;
  uint64_t v113 = a14;
  int v112 = a12;
  uint64_t v111 = a11;
  Swift::String v92 = *(void (**)(uint64_t, void *))a13;
  Swift::String v94 = (void *)*(unsigned int *)(a13 + 8);
  uint64_t v91 = *(uint64_t (**)())(a13 + 16);
  uint64_t v83 = *(unsigned __int8 *)(a13 + 24);
  uint64_t v90 = *(void *)(a13 + 32);
  uint64_t v89 = *(void *)(a13 + 40);
  uint64_t v93 = *(unsigned __int8 *)(a13 + 48);
  uint64_t v88 = *(void *)(a13 + 56);
  uint64_t v87 = *(void *)(a13 + 64);
  uint64_t v86 = *(void *)(a13 + 72);
  uint64_t v85 = *(void *)(a13 + 80);
  uint64_t v84 = *(void *)(a13 + 88);
  uint64_t v97 = sub_10096AE50();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v99 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  unint64_t v107 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v100 = (uint64_t)&v83 - v22;
  uint64_t v110 = type metadata accessor for VFSItem(0);
  uint64_t v98 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v101 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10096B830();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (uint64_t *)((char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a6;
  *(void *)(v28 + 24) = a7;
  uint64_t v102 = a7;
  int v103 = a8;
  *(unsigned char *)(v28 + 32) = a8;
  long long v29 = a9[3];
  *(_OWORD *)(v28 + 72) = a9[2];
  *(_OWORD *)(v28 + 88) = v29;
  long long v30 = a9[5];
  *(_OWORD *)(v28 + 104) = a9[4];
  *(_OWORD *)(v28 + 120) = v30;
  long long v31 = a9[1];
  *(_OWORD *)(v28 + 40) = *a9;
  *(_OWORD *)(v28 + 56) = v31;
  uint64_t v32 = v111;
  *(void *)(v28 + 136) = a10;
  *(void *)(v28 + 144) = v32;
  *(unsigned char *)(v28 + 152) = v112;
  long long v33 = *(_OWORD *)(a13 + 48);
  *(_OWORD *)(v28 + 192) = *(_OWORD *)(a13 + 32);
  *(_OWORD *)(v28 + 208) = v33;
  long long v34 = *(_OWORD *)(a13 + 80);
  *(_OWORD *)(v28 + 224) = *(_OWORD *)(a13 + 64);
  *(_OWORD *)(v28 + 240) = v34;
  long long v35 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v28 + 160) = *(_OWORD *)a13;
  *(_OWORD *)(v28 + 176) = v35;
  uint64_t v36 = v114;
  *(void *)(v28 + 256) = v113;
  *(void *)(v28 + 264) = v36;
  uint64_t v37 = *(void **)(v115 + 216);
  *uint64_t v27 = v37;
  (*(void (**)(void *, void, uint64_t))(v25 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v24);
  uint64_t v104 = a6;
  swift_retain();
  sub_100938D34((uint64_t)a9);
  id v38 = a10;
  sub_100938D34(a13);
  swift_retain();
  id v39 = v37;
  char v40 = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v25 + 8))(v27, v24);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v95 = v38;
  if (v106 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_10096CE70();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v41 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  char v42 = v109;
  Swift::UInt64 v43 = v108;
  uint64_t v44 = (uint64_t)v107;
  uint64_t v45 = v110;
  if (v41 && (v105 & 1) == 0)
  {
    id v46 = [objc_allocWithZone((Class)NSFileCoordinator) init];
    uint64_t v47 = v115;
    if (*(void *)(v115 + 184))
    {
      NSString v48 = sub_10096BC00();
      [v46 setPurposeIdentifier:v48];
    }
    swift_beginAccess();
    id v49 = v46;
    sub_100496C34(&v131, v49);
    swift_endAccess();

    if (v42 == -1) {
      goto LABEL_28;
    }
    uint64_t v50 = (id *)(v47 + 200);
    swift_beginAccess();
    if (*(void *)(*(void *)(v47 + 200) + 16))
    {
      sub_10031F858(v43, v42);
      if (v51)
      {
        uint64_t v52 = sub_1008DF56C();
        uint64_t v53 = sub_1008D4900(&v131, v43, v42);
        if (*v54)
        {
          sub_100496C34(&v132, v49);
          ((void (*)(id *, void))v53)(&v131, 0);
          ((void (*)(unint64_t *, void))v52)(&aBlock, 0);
        }
        else
        {
          ((void (*)(id *, void))v53)(&v131, 0);
          ((void (*)(unint64_t *, void))v52)(&aBlock, 0);
        }
        uint64_t v47 = v115;
        goto LABEL_28;
      }
    }
    sub_10002B7CC(&qword_100ACAF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100974D40;
    *(void *)(inited + 32) = v49;
    unint64_t aBlock = inited;
    sub_10096C0C0();
    unint64_t v62 = aBlock;
    if (aBlock >> 62)
    {
      id v72 = v49;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10096CE70();
      swift_bridgeObjectRelease();
      if (v73) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v63 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v64 = v49;
      if (v63)
      {
LABEL_16:
        sub_10009A4F8(v62);
        uint64_t v66 = v65;
LABEL_27:
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v131 = *v50;
        *uint64_t v50 = (id)0x8000000000000000;
        sub_10038D164((uint64_t)v66, v43, v42, isUniquelyReferenced_nonNull_native);
        *uint64_t v50 = v131;
        swift_bridgeObjectRelease();
        swift_endAccess();
LABEL_28:
        id v75 = (id)fpfs_current_log();
        sub_100011348(0, &qword_100AD88E0);
        Class isa = sub_10096C080().super.isa;
        uint64_t v77 = *(void **)(v47 + 208);
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = v75;
        *(void *)(v78 + 24) = v47;
        *(void *)(v78 + 32) = v49;
        *(void *)(v78 + 40) = v43;
        *(unsigned char *)(v78 + 48) = v42;
        *(void *)(v78 + 56) = sub_100938E68;
        *(void *)(v78 + 64) = v28;
        uint64_t v120 = sub_100938EB4;
        uint64_t v121 = v78;
        unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
        uint64_t v117 = 1107296256;
        uint64_t v118 = sub_1000072D0;
        uint64_t v119 = &unk_100AA4E60;
        id v79 = _Block_copy(&aBlock);
        id v80 = v49;
        id v81 = v77;
        id v82 = v75;
        swift_retain();
        swift_retain();
        swift_release();
        [v80 coordinateAccessWithIntents:isa queue:v81 byAccessor:v79];
        _Block_release(v79);
        swift_release();

        return;
      }
    }
    uint64_t v66 = &_swiftEmptySetSingleton;
    goto LABEL_27;
  }
  uint64_t v55 = v101;
  sub_1008F3004(v102, v103, (uint64_t)a9, 0, 0, v101);
  sub_10092D018(v55, type metadata accessor for VFSItem);
  id v56 = [v95 URL];
  uint64_t v57 = (uint64_t)v99;
  sub_10096ADD0();

  uint64_t v58 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v44, 1, 1, v45);
  uint64_t v59 = v111;
  char v60 = v112;
  sub_100901E38(v57, v111, v112, a13, v44, 1, v100);
  sub_10002B770(v44, &qword_100ACB910);
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v57, v97);
  uint64_t v67 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v100, 1, v110) == 1)
  {
    sub_10002B770(v67, &qword_100ACB910);
    v113(0);
  }
  else
  {
    uint64_t v68 = v83 & 1;
    sub_10002B770(v67, &qword_100ACB910);
    unint64_t aBlock = v59;
    LOBYTE(v117) = v60;
    uint64_t v118 = v92;
    uint64_t v119 = v94;
    uint64_t v120 = v91;
    uint64_t v121 = v68;
    uint64_t v122 = v90;
    uint64_t v123 = v89;
    uint64_t v124 = v93;
    uint64_t v125 = v88;
    uint64_t v126 = v87;
    uint64_t v127 = v86;
    uint64_t v128 = v85;
    uint64_t v129 = v84;
    uint64_t v130 = 0;
    sub_1000D3768((uint64_t)&aBlock);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    uint64_t v69 = swift_allocError();
    sub_10001AE98((uint64_t)&aBlock, v70, (uint64_t *)&unk_100ACD9A0);
    sub_100938D34(a13);
    swift_willThrow();
    uint64_t v71 = v113;
    swift_errorRetain();
    v71(v69);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_release();
}

uint64_t sub_10092FBA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a2;
  uint64_t v5 = a4;
  int64_t v6 = 0;
  long long v33 = (unint64_t *)result;
  uint64_t v34 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v35 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v36 = 0;
  id v38 = (void *)(a4 + 48);
  while (2)
  {
    while (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      uint64_t v12 = *(void *)(v5 + 16);
      if (v12) {
        goto LABEL_23;
      }
LABEL_31:
      *(unint64_t *)((char *)v33 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v36++, 1)) {
        goto LABEL_37;
      }
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
    }
    else
    {
      if (v13 >= v35) {
        return sub_1009295D8(v33, v32, v36, a3);
      }
      unint64_t v14 = *(void *)(v34 + 8 * v13);
      ++v6;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v6 = v13 + 1;
      if (v13 + 1 >= v35) {
        return sub_1009295D8(v33, v32, v36, a3);
      }
      unint64_t v14 = *(void *)(v34 + 8 * v6);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v6 = v13 + 2;
      if (v13 + 2 >= v35) {
        return sub_1009295D8(v33, v32, v36, a3);
      }
      unint64_t v14 = *(void *)(v34 + 8 * v6);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v15 = v13 + 3;
      if (v15 >= v35) {
        return sub_1009295D8(v33, v32, v36, a3);
      }
      unint64_t v14 = *(void *)(v34 + 8 * v15);
      if (v14)
      {
        int64_t v6 = v15;
LABEL_22:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v11 = __clz(__rbit64(v14)) + (v6 << 6);
        uint64_t v12 = *(void *)(v5 + 16);
        if (!v12) {
          goto LABEL_31;
        }
LABEL_23:
        unint64_t v41 = v9;
        int64_t v42 = v6;
        unint64_t v40 = v11;
        uint64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
        uint64_t v45 = *v16;
        uint64_t v46 = v16[1];
        uint64_t v44 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = v38;
        while (1)
        {
          uint64_t v18 = *(v17 - 2);
          unint64_t v19 = *(v17 - 1);
          NSString v20 = (NSString)v17[5];
          unint64_t v21 = v17[2];
          uint64_t v22 = v17[1];
          sub_10001EBB0(v18, v19);
          swift_bridgeObjectRetain();
          sub_10001EBB0(v22, v21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10001EBB0(v18, v19);
          sub_10001EBB0(v22, v21);
          swift_bridgeObjectRetain();
          v23.super.Class isa = sub_10096AF20().super.isa;
          v24.super.Class isa = sub_10096AF20().super.isa;
          uint64_t v47 = v12;
          if (v20)
          {
            NSString v20 = sub_10096BC00();
            swift_bridgeObjectRelease();
          }
          id v25 = objc_msgSend(objc_allocWithZone((Class)NSFileProviderItemVersion), "initWithContentVersion:metadataVersion:lastEditorDeviceName:", v23.super.isa, v24.super.isa, v20, v32);
          sub_10001E9C0(v22, v21);
          sub_10001E9C0(v18, v19);

          id v26 = [v44 etagForVersion:v25 providerDomainID:a5];
          uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v29 = v28;

          if (v27 == v45 && v29 == v46) {
            break;
          }
          char v30 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          sub_10001E9C0(v18, v19);
          swift_bridgeObjectRelease();
          sub_10001E9C0(v22, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = a4;
            goto LABEL_5;
          }
          v17 += 8;
          uint64_t v12 = v47 - 1;
          if (v47 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v5 = a4;
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v9 = v41;
            int64_t v6 = v42;
            unint64_t v11 = v40;
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease();
        sub_10001E9C0(v18, v19);
        swift_bridgeObjectRelease();
        sub_10001E9C0(v22, v21);
        swift_bridgeObjectRelease();
        uint64_t v5 = a4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_5:
        swift_bridgeObjectRelease();
        unint64_t v9 = v41;
        int64_t v6 = v42;
        uint64_t result = swift_bridgeObjectRelease();
        continue;
      }
      while (1)
      {
        int64_t v6 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v6 >= v35) {
          return sub_1009295D8(v33, v32, v36, a3);
        }
        unint64_t v14 = *(void *)(v34 + 8 * v6);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_10093000C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t)a3;
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  id v10 = a3;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = (uint64_t)v10;
  uint64_t v12 = (void *)isStackAllocationSafe;
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    int64_t v13 = (char *)&v18 - ((8 * v9 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v13, 8 * v9);
    swift_bridgeObjectRetain();
    id v14 = v12;
    uint64_t v4 = sub_10092FBA0((uint64_t)v13, v9, a1, a2, v4);
    swift_bridgeObjectRelease();

    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, 8 * v9);
    swift_bridgeObjectRetain();
    id v14 = v12;
    uint64_t v16 = sub_10092FBA0((uint64_t)v15, v9, a1, a2, v4);
    if (!v3) {
      uint64_t v4 = v16;
    }
    swift_bridgeObjectRelease();

    swift_slowDealloc();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10093022C(uint64_t a1)
{
  if ((a1 & 0x10000000000) != 0)
  {
    if ((a1 & 4) != 0)
    {
      uint64_t v1 = 260;
      if ((a1 & 0x800) != 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v1 = 256;
      if ((a1 & 0x800) != 0) {
        goto LABEL_4;
      }
    }
  }
  else
  {
    if ((a1 & 4) == 0)
    {
      uint64_t v1 = 0;
      if ((a1 & 0x800) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    uint64_t v1 = 4;
    if ((a1 & 0x800) != 0) {
LABEL_4:
    }
      v1 |= 3uLL;
  }
LABEL_5:
  if ((a1 & 0x400) != 0)
  {
    v1 |= 1uLL;
    if ((a1 & 0x1000) == 0)
    {
LABEL_7:
      if ((a1 & 0x200) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
  }
  else if ((a1 & 0x1000) == 0)
  {
    goto LABEL_7;
  }
  v1 |= 0x8000uLL;
  if ((a1 & 0x200) == 0)
  {
LABEL_8:
    if ((a1 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  v1 |= 0x10000uLL;
  if ((a1 & 0x2000) == 0)
  {
LABEL_9:
    if ((a1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  v1 |= 0x400uLL;
  if ((a1 & 0x20) == 0)
  {
LABEL_10:
    if ((a1 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  v1 |= 0x200000uLL;
  if ((a1 & 0x40) == 0)
  {
LABEL_11:
    if ((a1 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  v1 |= 0x100000uLL;
  if ((a1 & 0x80) == 0)
  {
LABEL_12:
    if ((a1 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  v1 |= 0x400000uLL;
  if ((a1 & 0x100) == 0)
  {
LABEL_13:
    if ((a1 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  v1 |= 0x2000000uLL;
  if ((a1 & 0x20000) == 0)
  {
LABEL_14:
    if ((a1 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  v1 |= 0x800000uLL;
  if ((a1 & 1) == 0)
  {
LABEL_15:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  v1 |= 0x1000000uLL;
  if ((a1 & 0x10000) == 0)
  {
LABEL_16:
    if ((a1 & 0x100000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  v1 |= 0x8000000uLL;
  if ((a1 & 0x100000000000) == 0)
  {
LABEL_17:
    if ((a1 & 0x400000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  v1 |= 0x10000000uLL;
  if ((a1 & 0x400000000000) == 0)
  {
LABEL_18:
    if ((a1 & 0x1000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  v1 |= 0x800uLL;
  if ((a1 & 0x1000000000000) == 0)
  {
LABEL_19:
    if ((a1 & 0x4000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  v1 |= 0x20000000uLL;
  if ((a1 & 0x4000000) == 0)
  {
LABEL_20:
    if ((a1 & 0x1000000) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    v1 |= 0x40000000uLL;
    if ((a1 & 0x8000000) == 0) {
      return v1;
    }
    return v1 | 0x80000000;
  }
LABEL_41:
  v1 |= (unint64_t)&_mh_execute_header;
  if ((a1 & 0x1000000) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((a1 & 0x8000000) != 0) {
    return v1 | 0x80000000;
  }
  return v1;
}

uint64_t sub_10093033C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for VFSItem(0);
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v57 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v57 - v13;
  uint64_t v15 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v57 - v20;
  __chkstk_darwin(v19);
  NSData v23 = (char *)&v57 - v22;
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
  {
    uint64_t v58 = v9;
    uint64_t v24 = a1 + *(int *)(v6 + 28);
    if ((*(unsigned char *)(v24 + *(int *)(type metadata accessor for ItemMetadata() + 72)) & 1) == 0)
    {
      sub_10002B70C(a2, (uint64_t)v23, (uint64_t *)&unk_100ADBFF0);
      sub_1009381C4(a1, (uint64_t)v14, type metadata accessor for VFSItem);
      if ((a3 & 2) == 0)
      {
        sub_10092D018((uint64_t)v14, type metadata accessor for VFSItem);
        sub_10002B770((uint64_t)v23, (uint64_t *)&unk_100ADBFF0);
        sub_10002B70C(a2, (uint64_t)v21, (uint64_t *)&unk_100ADBFF0);
        sub_1009381C4(a1, (uint64_t)v12, type metadata accessor for VFSItem);
        uint64_t v27 = (uint64_t)v58;
        goto LABEL_32;
      }
      uint64_t v57 = v12;
      uint64_t v28 = *(void *)v23;
      int v29 = v23[8];
      sub_10002B770((uint64_t)v23, (uint64_t *)&unk_100ADBFF0);
      uint64_t v30 = *((void *)v14 + 2);
      int v31 = v14[24];
      sub_10092D018((uint64_t)v14, type metadata accessor for VFSItem);
      if (v29)
      {
        BOOL v33 = v31 == 1 && v28 == v30;
        BOOL v35 = v31 == 2 && v30 == 0;
        BOOL v37 = v31 == 2 && v30 == 1;
        if (v28) {
          BOOL v35 = v37;
        }
        if (v29 == 1) {
          BOOL v38 = v33;
        }
        else {
          BOOL v38 = v35;
        }
      }
      else
      {
        if (v31)
        {
          sub_10002B70C(a2, (uint64_t)v21, (uint64_t *)&unk_100ADBFF0);
          uint64_t v12 = v57;
          sub_1009381C4(a1, (uint64_t)v57, type metadata accessor for VFSItem);
          goto LABEL_43;
        }
        BOOL v38 = v28 == v30;
      }
      sub_10002B70C(a2, (uint64_t)v21, (uint64_t *)&unk_100ADBFF0);
      uint64_t v12 = v57;
      sub_1009381C4(a1, (uint64_t)v57, type metadata accessor for VFSItem);
      uint64_t v27 = (uint64_t)v58;
      if (v38)
      {
LABEL_32:
        sub_10002B70C((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_100ADBFF0);
        sub_1009381C4((uint64_t)v12, v27, type metadata accessor for VFSItem);
        if ((a3 & 1) == 0)
        {
          char v25 = 0;
LABEL_57:
          sub_10092D018((uint64_t)v12, type metadata accessor for VFSItem);
          sub_10002B770((uint64_t)v21, (uint64_t *)&unk_100ADBFF0);
          sub_10002B770((uint64_t)v18, (uint64_t *)&unk_100ADBFF0);
          sub_10092D018(v27, type metadata accessor for VFSItem);
          return v25 & 1;
        }
        uint64_t v40 = *((void *)v18 + 2);
        unint64_t v39 = *((void *)v18 + 3);
        unint64_t v41 = *(void *)(v27 + 40);
        uint64_t v58 = *(char **)(v27 + 32);
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_10002C020(v40, v39);
        uint64_t v44 = v43;
        swift_bridgeObjectRelease();
        if (!v44) {
          goto LABEL_40;
        }
        if (v42 == 12565487 && v44 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v46 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
          {
LABEL_40:
            uint64_t v57 = (char *)v40;
            swift_bridgeObjectRetain();
            goto LABEL_46;
          }
        }
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_10096BD70();
        sub_1000364D0(v47, v40, v39);
        swift_bridgeObjectRelease();
        uint64_t v57 = (char *)sub_10096BD10();
        unint64_t v39 = v48;
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v49 = (uint64_t)v58;
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_10002C020(v49, v41);
        uint64_t v52 = v51;
        swift_bridgeObjectRelease();
        if (v52)
        {
          if (v50 == 12565487 && v52 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_51:
            swift_bridgeObjectRetain();
            unint64_t v54 = sub_10096BD70();
            sub_1000364D0(v54, v49, v41);
            swift_bridgeObjectRelease();
            uint64_t v49 = sub_10096BD10();
            unint64_t v41 = v55;
            swift_bridgeObjectRelease();
LABEL_53:
            if (v57 == (char *)v49 && v39 == v41)
            {
              swift_bridgeObjectRelease_n();
              char v25 = 0;
            }
            else
            {
              char v56 = sub_10096D2D0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v25 = v56 ^ 1;
            }
            goto LABEL_57;
          }
          char v53 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if (v53) {
            goto LABEL_51;
          }
        }
        swift_bridgeObjectRetain();
        goto LABEL_53;
      }
LABEL_43:
      sub_10092D018((uint64_t)v12, type metadata accessor for VFSItem);
      sub_10002B770((uint64_t)v21, (uint64_t *)&unk_100ADBFF0);
      char v25 = 1;
      return v25 & 1;
    }
  }
  char v25 = 0;
  return v25 & 1;
}

uint64_t sub_100930968(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 8) != 0)
  {
    char v9 = *(unsigned char *)(a2 + *(int *)(v6 + 40)) != 1;
  }
  else if ((a1 & 0x10) != 0)
  {
    uint64_t v11 = (unsigned __int8 *)(a2 + *(int *)(v6 + 40));
    uint64_t v12 = type metadata accessor for ItemMetadata();
    if (v11[*(int *)(v12 + 108)] == *(unsigned __int8 *)(a3 + *(int *)(v12 + 108)))
    {
      uint64_t v13 = v12;
      int v14 = *v11;
      sub_10002B70C(a2, (uint64_t)v8, (uint64_t *)&unk_100ADBFF0);
      if (v14 == 1) {
        char v9 = 0;
      }
      else {
        char v9 = v8[*(int *)(v6 + 40) + (uint64_t)*(int *)(v13 + 80)] ^ 1;
      }
      sub_10002B770((uint64_t)v8, (uint64_t *)&unk_100ADBFF0);
    }
    else
    {
      char v9 = 1;
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

void *sub_100930A9C(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a1, (uint64_t)v4, &qword_100ACA8C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10002B770((uint64_t)v4, &qword_100ACA8C0);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_10002B7CC(&qword_100ACAF70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100974D40;
    uint64_t v11 = self;
    sub_10096AD20(v12);
    int v14 = v13;
    id v15 = [v11 writingIntentWithURL:v13 options:0x100000];

    *(void *)(v10 + 32) = v15;
    uint64_t v18 = v10;
    sub_10096C0C0();
    uint64_t v9 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (void *)v9;
}

uint64_t _s9libfssync11VFSFileTreeC35subscriptionWillHandleBatchOfEventsyySo20FSChangeSubscriptionCF_0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    uint64_t v3 = v1(v2);
    sub_1000705CC((uint64_t)v1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  unint64_t v4 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = v0 + qword_100ADE750;
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  *(void *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = _swiftEmptyArrayStorage;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v5 + 32) = &_swiftEmptySetSingleton;
  *(void *)(v5 + 40) = &_swiftEmptySetSingleton;
  *(void *)(v5 + 48) = 0;
  *(unsigned char *)(v5 + 56) = 1;
  return sub_100929F70(v6, v7);
}

uint64_t _s9libfssync11VFSFileTreeC34subscriptionDidHandleBatchOfEventsyySo20FSChangeSubscriptionCF_0()
{
  uint64_t v1 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v55 = v1;
  uint64_t v56 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v53 = (uint64_t)&v53 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v59 = (uint64_t)&v53 - v8;
  __chkstk_darwin(v7);
  uint64_t v58 = (uint64_t)&v53 - v9;
  uint64_t v10 = v0;
  uint64_t v11 = (uint64_t)v0 + qword_100ADE750;
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void **)(v11 + 8);
  unint64_t v14 = *(void *)(v11 + 16);
  id v15 = *(void **)(v11 + 24);
  uint64_t v17 = *(void **)(v11 + 32);
  uint64_t v16 = *(void **)(v11 + 40);
  if (v13)
  {
    char v18 = *(unsigned char *)(v11 + 56) & 1;
    uint64_t v57 = *(void *)(v11 + 48);
    uint64_t v63 = v17;
    id v64 = v16;
    unint64_t v61 = v14;
    unint64_t v62 = v15;
    char v65 = v13;
    unint64_t v60 = v12;
  }
  else
  {
    uint64_t v19 = *(void *)v11;
    unint64_t v20 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v60 = 0;
    unint64_t v61 = v20;
    uint64_t v12 = v19;
    uint64_t v57 = 0;
    char v18 = 1;
    uint64_t v63 = &_swiftEmptySetSingleton;
    id v64 = &_swiftEmptySetSingleton;
    unint64_t v62 = _swiftEmptyArrayStorage;
    char v65 = _swiftEmptyArrayStorage;
  }
  char v67 = v18;
  unint64_t v21 = (void *)v0[29];
  sub_10093C3E8(v12, (uint64_t)v13);
  if (([v21 hasBufferedEvents] & 1) == 0)
  {
    uint64_t v24 = (void *)((char *)v0 + qword_100ADE758);
    uint64_t v25 = *(void *)((char *)v0 + qword_100ADE758);
    char v26 = *((unsigned char *)v0 + qword_100ADE758 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10096B600();
    swift_release();
    swift_release();
    uint64_t v23 = v61;
    uint64_t v22 = v62;
    if ((v26 & 1) == 0 && v25 == v66[0])
    {
      uint64_t v27 = v58;
      swift_storeEnumTagMultiPayload();
      sub_10002B70C(v27, v59, (uint64_t *)&unk_100AD0D50);
      unint64_t v28 = (unint64_t)v65;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
    goto LABEL_12;
  }
  uint64_t v23 = v61;
  uint64_t v22 = v62;
  while (1)
  {
    unint64_t v28 = v60;
    if (!v65[2])
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_10057BAA8(v23);
      swift_bridgeObjectRelease();
      uint64_t v41 = v40[2];
      swift_release();
      if (v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        uint64_t v42 = v22[2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (!v42) {
          goto LABEL_33;
        }
      }
    }
    uint64_t v43 = (void (*)(void *, void *, uint64_t (*)(uint64_t), uint64_t))v10[2];
    if (v43)
    {
      unint64_t v62 = v10;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100031400((uint64_t)v43);
      swift_bridgeObjectRetain();
      uint64_t v44 = swift_bridgeObjectRetain();
      uint64_t v45 = sub_10057BAA8(v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      if (v22[2])
      {
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = v22;
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_10093CE60;
      }
      else
      {
        unint64_t v47 = 0;
        uint64_t v46 = 0;
      }
      v43(v65, v45, v47, v46);
      sub_1000705CC((uint64_t)v43);
      sub_1000705CC((uint64_t)v47);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v62;
    }
    if ((v67 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v66[0] = v57;
      swift_retain();
      sub_10096B610();
    }
LABEL_33:
    uint64_t v48 = *(void *)v11;
    uint64_t v49 = *(void *)(v11 + 8);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(_OWORD *)(v11 + 41) = 0u;
    sub_100929F70(v48, v49);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v24 = v66;
    uint64_t v50 = (void (*)(void *, void))sub_10096B5F0();
    if (!__OFADD__(*v51, 1)) {
      break;
    }
    __break(1u);
LABEL_36:
    unint64_t v28 = sub_1006A4784(0, *(void *)(v28 + 16) + 1, 1, v28);
LABEL_9:
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    if (v30 >= v29 >> 1) {
      unint64_t v28 = sub_1006A4784(v29 > 1, v30 + 1, 1, v28);
    }
    *(void *)(v28 + 16) = v30 + 1;
    unint64_t v31 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    char v65 = (void *)v28;
    sub_10001AE98(v59, v28 + v31 + *(void *)(v56 + 72) * v30, (uint64_t *)&unk_100AD0D50);
    sub_10002B770(v58, (uint64_t *)&unk_100AD0D50);
LABEL_12:
    uint64_t v32 = (char *)v10 + qword_100ADE760;
    if ((*((unsigned char *)v10 + qword_100ADE760 + 16) & 1) == 0)
    {
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *((void *)v32 + 1);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10096B600();
      swift_release();
      swift_release();
      uint64_t v35 = v66[0];
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10096B600();
      swift_release();
      swift_release();
      if (v34 == v35)
      {
        uint64_t v23 = v61;
        uint64_t v22 = v62;
        if (v33 == v66[0])
        {
          uint64_t v36 = v53;
          swift_storeEnumTagMultiPayload();
          sub_10002B70C(v36, v54, (uint64_t *)&unk_100AD0D50);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v65 = (void *)sub_1006A4784(0, v65[2] + 1, 1, (unint64_t)v65);
          }
          unint64_t v38 = v65[2];
          unint64_t v37 = v65[3];
          if (v38 >= v37 >> 1) {
            char v65 = (void *)sub_1006A4784(v37 > 1, v38 + 1, 1, (unint64_t)v65);
          }
          unint64_t v39 = v65;
          v65[2] = v38 + 1;
          sub_10001AE98(v54, (uint64_t)v39+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v38, (uint64_t *)&unk_100AD0D50);
          sub_10002B770(v53, (uint64_t *)&unk_100AD0D50);
        }
      }
      else
      {
        uint64_t v23 = v61;
        uint64_t v22 = v62;
      }
    }
    *uint64_t v24 = 0;
    *((unsigned char *)v24 + 8) = 1;
    *(void *)uint64_t v32 = 0;
    *((void *)v32 + 1) = 0;
    v32[16] = 1;
  }
  ++*v51;
  v50(v66, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1009315A8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, int a5, uint64_t a6, int a7, void (*a8)(char *, uint64_t))
{
  uint64_t v397 = a8;
  LODWORD(v411) = a7;
  uint64_t v401 = a6;
  int v379 = a5;
  uint64_t v378 = a4;
  unint64_t v406 = a3;
  uint64_t v408 = a2;
  uint64_t v407 = a1;
  uint64_t v9 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v384 = (char *)&v354 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v385 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t v386 = *(void *)(v385 - 8);
  uint64_t v11 = __chkstk_darwin(v385);
  uint64_t v375 = (uint64_t)&v354 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  int v374 = (uint64_t *)((char *)&v354 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v357 = (uint64_t)&v354 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unsigned int v358 = (uint64_t *)((char *)&v354 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v360 = (uint64_t)&v354 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v359 = (uint64_t *)((char *)&v354 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v362 = (uint64_t)&v354 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v361 = (uint64_t *)((char *)&v354 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v373 = (uint64_t)&v354 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v372 = (uint64_t *)((char *)&v354 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v388 = (uint64_t)&v354 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v387 = (uint64_t *)((char *)&v354 - v34);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v368 = (uint64_t)&v354 - v36;
  __chkstk_darwin(v35);
  v367 = (uint64_t *)((char *)&v354 - v37);
  uint64_t v405 = sub_10096B480();
  uint64_t v404 = *(void *)(v405 - 8);
  uint64_t v38 = __chkstk_darwin(v405);
  uint64_t v390 = (uint64_t (*)())((char *)&v354 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v377 = (char *)&v354 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  unsigned int v389 = (char *)&v354 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v371 = (char *)&v354 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v370 = (char *)&v354 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v365 = (char *)&v354 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v382 = (char *)&v354 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  unsigned int v392 = (char *)&v354 - v53;
  __chkstk_darwin(v52);
  uint64_t v395 = (char *)&v354 - v54;
  uint64_t v55 = sub_10002B7CC(&qword_100AD0830);
  __chkstk_darwin(v55 - 8);
  uint64_t v57 = (uint64_t (*)())((char *)&v354 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v394 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v394);
  uint64_t v396 = (uint64_t)&v354 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v60 = __chkstk_darwin(v59 - 8);
  uint64_t v366 = (uint64_t)&v354 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v63 = (char *)&v354 - v62;
  uint64_t v409 = type metadata accessor for VFSItem(0);
  uint64_t v399 = *(void *)(v409 - 8);
  uint64_t v64 = __chkstk_darwin(v409);
  id v363 = (char *)&v354 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v380 = (uint64_t)&v354 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v364 = (char *)&v354 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v383 = (uint64_t)&v354 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v381 = (uint64_t)&v354 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v391 = (uint64_t)&v354 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v78 = (char *)&v354 - v77;
  __chkstk_darwin(v76);
  uint64_t v398 = (uint64_t *)((char *)&v354 - v79);
  uint64_t v80 = sub_10002B7CC(&qword_100AD20B8);
  __chkstk_darwin(v80 - 8);
  id v82 = (char *)&v354 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v400 = sub_10096AE50();
  uint64_t v402 = *(uint64_t (***)(char *, uint64_t))(v400 - 8);
  uint64_t v83 = __chkstk_darwin(v400);
  unsigned int v393 = (char *)&v354 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v376 = (char *)&v354 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v369 = (char *)&v354 - v88;
  __chkstk_darwin(v87);
  uint64_t v90 = (uint64_t (**)(char *, uint64_t))((char *)&v354 - v89);
  uint64_t v91 = sub_10096B830();
  uint64_t v92 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  Swift::String v94 = (uint64_t *)((char *)&v354 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v410 = (void *)v8;
  void *v94 = [*(id *)(v8 + 232) delegationQueue];
  (*(void (**)(void *, void, uint64_t))(v92 + 104))(v94, enum case for DispatchPredicate.onQueue(_:), v91);
  uint64_t v95 = sub_10096B860();
  (*(void (**)(void *, uint64_t))(v92 + 8))(v94, v91);
  if ((v95 & 1) == 0)
  {
    __break(1u);
    goto LABEL_194;
  }
  uint64_t v403 = (char *)v90;
  sub_10096ACC0();
  uint64_t v96 = v401;
  if (v401)
  {
    uint64_t v98 = sub_1008DF6F0();
    if (*(void *)(v97 + 8))
    {
      uint64_t v99 = v97;
      *(void *)id v82 = v96;
      v82[8] = 0;
      uint64_t v100 = type metadata accessor for SyncState();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v82, 0, 1, v100);
      sub_100360C44((uint64_t)v82, 3);
      *(void *)(v99 + 48) = v96;
      *(unsigned char *)(v99 + 56) = 0;
    }
    ((void (*)(unsigned char *, void))v98)(v413, 0);
  }
  sub_10002B70C((uint64_t)v397, (uint64_t)v63, &qword_100ACB910);
  uint64_t v101 = v399 + 48;
  uint64_t v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v399 + 48);
  if (v102((uint64_t)v63, 1, v409) != 1)
  {
    uint64_t v112 = (uint64_t)v398;
    sub_10001158C((uint64_t)v63, (uint64_t)v398, type metadata accessor for VFSItem);
    if (qword_100ACC1C8 != -1) {
      swift_once();
    }
    uint64_t v113 = (void *)qword_100B0B648;
    uint64_t v114 = sub_10096B3D0();
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v57, 1, 1, v114);
    *(void *)uint64_t v413 = 0;
    *(void *)&v413[8] = 0xE000000000000000;
    sub_10096CBD0(16);
    swift_bridgeObjectRelease();
    strcpy(v413, "resolved item ");
    v413[15] = -18;
    v417._countAndFlagsBits = sub_100262BFC();
    sub_10096BDC0(v417);
    swift_bridgeObjectRelease();
    sub_1009400AC((uint64_t)"FS: handle event", 16, 2, (uint64_t)v57, *(uint64_t *)v413, *(uint64_t *)&v413[8], v113, v396);
    swift_bridgeObjectRelease();
    sub_10002B770((uint64_t)v57, &qword_100AD0830);
    id v115 = (id)fpfs_current_or_default_log();
    uint64_t v116 = v395;
    sub_10096B490();
    sub_1009381C4(v112, (uint64_t)v78, type metadata accessor for VFSItem);
    uint64_t v117 = sub_10096B470();
    os_log_type_t v118 = sub_10096C5A0();
    BOOL v119 = os_log_type_enabled(v117, v118);
    uint64_t v356 = v101;
    uint64_t v355 = v102;
    if (v119)
    {
      uint64_t v120 = v116;
      uint64_t v121 = (uint8_t *)swift_slowAlloc();
      *(void *)uint64_t v413 = swift_slowAlloc();
      *(_DWORD *)uint64_t v121 = 136446210;
      uint64_t v122 = sub_100262BFC();
      uint64_t v416 = sub_100719D44(v122, v123, (uint64_t *)v413);
      uint64_t v112 = (uint64_t)v398;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10092D018((uint64_t)v78, type metadata accessor for VFSItem);
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Handling FSEvent for %{public}s", v121, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v124 = *(void (**)(char *, uint64_t))(v404 + 8);
      v124(v120, v405);
    }
    else
    {
      sub_10092D018((uint64_t)v78, type metadata accessor for VFSItem);

      uint64_t v124 = *(void (**)(char *, uint64_t))(v404 + 8);
      v124(v116, v405);
    }
    uint64_t v125 = v410;
    uint64_t v126 = v409;
    uint64_t v127 = v112 + *(int *)(v409 + 28);
    uint64_t v128 = type metadata accessor for ItemMetadata();
    unint64_t v129 = v411;
    BOOL v130 = *(unsigned char *)(v127 + *(int *)(v128 + 108)) == 1;
    uint64_t v395 = (char *)*(int *)(v128 + 108);
    if (!v130
      || ((unsigned __int16)v411 & 0x800) == 0
      || *(void (**)(char *, uint64_t))(v112 + *(int *)(v126 + 36)) == v406
      || !swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v133 = 0;
      goto LABEL_22;
    }
    unsigned int v393 = (char *)v129;
    uint64_t v397 = v124;
    uint64_t v131 = v125[35];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v133 = 0;
    uint64_t v210 = (*(uint64_t (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v131 + 8))(v406, ObjectType, v131);
    char v212 = v211;
    swift_unknownObjectRelease();
    unint64_t v129 = (unint64_t)v393;
    if (v212 != -1)
    {
      uint64_t v213 = *(void *)v112;
      int v214 = *(unsigned __int8 *)(v112 + 8);
      if (v212)
      {
        if (v212 == 1)
        {
          if (v214 != 1 || v210 != v213)
          {
LABEL_154:
            uint64_t v302 = sub_1008DF6F0();
            if (*(void *)(v303 + 8))
            {
              uint64_t v304 = v303;
              uint64_t v390 = v302;
              uint64_t v305 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
              uint64_t v306 = v367;
              uint64_t v307 = (char *)v367 + *(int *)(v305 + 48);
              uint64_t v308 = *(int *)(v305 + 64);
              uint64_t *v367 = v210;
              *((unsigned char *)v306 + 8) = v212;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v307, 1, 1, v409);
              *(uint64_t *)((char *)v306 + v308) = 0;
              swift_storeEnumTagMultiPayload();
              sub_10002B70C((uint64_t)v306, v368, (uint64_t *)&unk_100AD0D50);
              unint64_t v309 = *(void *)(v304 + 8);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v304 + 8) = v309;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v309 = sub_1006A4784(0, *(void *)(v309 + 16) + 1, 1, v309);
                *(void *)(v304 + 8) = v309;
              }
              unint64_t v312 = *(void *)(v309 + 16);
              unint64_t v311 = *(void *)(v309 + 24);
              if (v312 >= v311 >> 1)
              {
                unint64_t v309 = sub_1006A4784(v311 > 1, v312 + 1, 1, v309);
                *(void *)(v304 + 8) = v309;
              }
              *(void *)(v309 + 16) = v312 + 1;
              sub_10001AE98(v368, v309+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v312, (uint64_t *)&unk_100AD0D50);
              sub_10002B770((uint64_t)v367, (uint64_t *)&unk_100AD0D50);
              ((void (*)(unsigned char *, void))v390)(v413, 0);
            }
            else
            {
              ((void (*)(unsigned char *, void))v302)(v413, 0);
            }
            uint64_t v126 = v409;
            uint64_t v124 = v397;
            unint64_t v129 = (unint64_t)v393;
LABEL_22:
            long long v134 = (unsigned char *)(v127 + *(int *)(v128 + 28));
            sub_10096B080();
            if ((~*(void *)&v135 & 0x7FF0000000000000) != 0)
            {
              if (v135 > -9.22337204e18)
              {
                if (v135 < 9.22337204e18)
                {
                  if (fpfs_is_busy_date())
                  {
                    id v136 = (id)fpfs_current_or_default_log();
                    uint64_t v137 = v392;
                    sub_10096B490();
                    uint64_t v138 = v391;
                    sub_1009381C4(v112, v391, type metadata accessor for VFSItem);
                    uint64_t v139 = sub_10096B470();
                    os_log_type_t v140 = sub_10096C5A0();
                    if (os_log_type_enabled(v139, v140))
                    {
                      Swift::String v141 = (uint8_t *)swift_slowAlloc();
                      uint64_t v142 = swift_slowAlloc();
                      uint64_t v397 = v124;
                      *(void *)uint64_t v413 = v142;
                      *(_DWORD *)Swift::String v141 = 136446210;
                      uint64_t v143 = sub_100262BFC();
                      uint64_t v416 = sub_100719D44(v143, v144, (uint64_t *)v413);
                      sub_10096C8C0();
                      swift_bridgeObjectRelease();
                      sub_10092D018(v138, type metadata accessor for VFSItem);
                      uint64_t v145 = "🏗 ignoring event for busy file %{public}s";
LABEL_31:
                      _os_log_impl((void *)&_mh_execute_header, v139, v140, v145, v141, 0xCu);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      v397(v137, v405);
LABEL_36:
                      uint64_t v161 = v402;
                      uint64_t v162 = v400;
                      uint64_t v163 = v403;
                      sub_1009125E4((int)v411, v407, v408, v406);
                      sub_10096C760();
                      uint64_t v164 = v396;
                      sub_10096B3A0();
                      sub_10092D018(v164, type metadata accessor for Signpost);
                      sub_10092D018(v112, type metadata accessor for VFSItem);
                      return v161[1](v163, v162);
                    }
                    goto LABEL_35;
                  }
                  uint64_t v146 = VFSItem.syncability.getter();
                  unint64_t v148 = v147;
                  sub_1000CF144(v146, v147);
                  if (!(v148 >> 62))
                  {
                    id v149 = (id)fpfs_current_or_default_log();
                    uint64_t v137 = v382;
                    sub_10096B490();
                    uint64_t v138 = v381;
                    sub_1009381C4(v112, v381, type metadata accessor for VFSItem);
                    uint64_t v139 = sub_10096B470();
                    os_log_type_t v140 = sub_10096C5A0();
                    if (os_log_type_enabled(v139, v140))
                    {
                      Swift::String v141 = (uint8_t *)swift_slowAlloc();
                      uint64_t v150 = swift_slowAlloc();
                      uint64_t v397 = v124;
                      *(void *)uint64_t v413 = v150;
                      *(_DWORD *)Swift::String v141 = 136446210;
                      uint64_t v151 = sub_100262BFC();
                      uint64_t v416 = sub_100719D44(v151, v152, (uint64_t *)v413);
                      sub_10096C8C0();
                      swift_bridgeObjectRelease();
                      sub_10092D018(v138, type metadata accessor for VFSItem);
                      uint64_t v145 = "🏗 ignoring event for temporary file %{public}s";
                      goto LABEL_31;
                    }
LABEL_35:
                    sub_10092D018(v138, type metadata accessor for VFSItem);

                    v124(v137, v405);
                    goto LABEL_36;
                  }
                  uint64_t v397 = v124;
                  uint64_t v165 = (void *)((char *)v125 + qword_100ADE750);
                  swift_beginAccess();
                  uint64_t v166 = v165[1];
                  uint64_t v391 = 0;
                  if (v166)
                  {
                    uint64_t v167 = *v165;
                    sub_10093C3E8(*v165, v166);
                    uint64_t v168 = swift_retain();
                    unsigned int v392 = (char *)v167;
                    uint64_t v112 = (uint64_t)v398;
                    uint64_t v125 = v410;
                    uint64_t v126 = v409;
                    uint64_t v133 = v391;
                    sub_100929F70(v168, v166);
                  }
                  else
                  {
                    unsigned int v392 = 0;
                  }
                  uint64_t v128 = (uint64_t)sub_1008DF6F0();
                  uint64_t v189 = *(void *)(v188 + 8);
                  unsigned int v393 = (char *)v129;
                  if (!v189)
                  {
                    ((void (*)(unsigned char *, void))v128)(v413, 0);
                    goto LABEL_60;
                  }
                  long long v134 = (unsigned char *)v188;
                  uint64_t v190 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
                  uint64_t v191 = v387;
                  uint64_t v192 = (uint64_t)v387 + *(int *)(v190 + 48);
                  uint64_t v193 = *(int *)(v190 + 64);
                  char v194 = *(unsigned char *)(v112 + 8);
                  *unint64_t v387 = *(void *)v112;
                  *((unsigned char *)v191 + 8) = v194;
                  sub_1009381C4(v112, v192, type metadata accessor for VFSItem);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v399 + 56))(v192, 0, 1, v126);
                  *(void *)((char *)v191 + v193) = v392;
                  swift_storeEnumTagMultiPayload();
                  sub_10002B70C((uint64_t)v191, v388, (uint64_t *)&unk_100AD0D50);
                  unint64_t v129 = *((void *)v134 + 1);
                  swift_retain();
                  char v195 = swift_isUniquelyReferenced_nonNull_native();
                  *((void *)v134 + 1) = v129;
                  if (v195)
                  {
LABEL_56:
                    unint64_t v197 = *(void *)(v129 + 16);
                    unint64_t v196 = *(void *)(v129 + 24);
                    if (v197 >= v196 >> 1)
                    {
                      unint64_t v129 = sub_1006A4784(v196 > 1, v197 + 1, 1, v129);
                      *((void *)v134 + 1) = v129;
                    }
                    *(void *)(v129 + 16) = v197 + 1;
                    sub_10001AE98(v388, v129+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v197, (uint64_t *)&unk_100AD0D50);
                    sub_10002B770((uint64_t)v387, (uint64_t *)&unk_100AD0D50);
                    ((void (*)(unsigned char *, void))v128)(v413, 0);
                    LODWORD(v129) = v393;
                    uint64_t v133 = v391;
LABEL_60:
                    sub_1009125E4((int)v411, v407, v408, v406);
                    if (*(unsigned __int8 *)(v112 + 8) >= 2u && *(void *)v112)
                    {
                      uint64_t v199 = sub_1008DF6F0();
                      if (*(void *)(v198 + 8))
                      {
                        uint64_t v200 = v198;
                        int v201 = v129;
                        uint64_t v202 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
                        uint64_t v203 = v372;
                        uint64_t v204 = (char *)v372 + *(int *)(v202 + 48);
                        uint64_t v205 = *(int *)(v202 + 64);
                        *uint64_t v372 = *(void *)(v112 + *(int *)(v126 + 36));
                        *((unsigned char *)v203 + 8) = 1;
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v204, 1, 1, v126);
                        *(void *)((char *)v203 + v205) = 0;
                        swift_storeEnumTagMultiPayload();
                        sub_10002B70C((uint64_t)v203, v373, (uint64_t *)&unk_100AD0D50);
                        unint64_t v129 = *(void *)(v200 + 8);
                        char v206 = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)(v200 + 8) = v129;
                        if ((v206 & 1) == 0)
                        {
                          unint64_t v129 = sub_1006A4784(0, *(void *)(v129 + 16) + 1, 1, v129);
                          *(void *)(v200 + 8) = v129;
                        }
                        unint64_t v208 = *(void *)(v129 + 16);
                        unint64_t v207 = *(void *)(v129 + 24);
                        if (v208 >= v207 >> 1)
                        {
                          unint64_t v129 = sub_1006A4784(v207 > 1, v208 + 1, 1, v129);
                          *(void *)(v200 + 8) = v129;
                        }
                        *(void *)(v129 + 16) = v208 + 1;
                        sub_10001AE98(v373, v129+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v208, (uint64_t *)&unk_100AD0D50);
                        sub_10002B770((uint64_t)v372, (uint64_t *)&unk_100AD0D50);
                        ((void (*)(unsigned char *, void))v199)(v413, 0);
                        LODWORD(v129) = v201;
                        uint64_t v133 = v391;
                      }
                      else
                      {
                        ((void (*)(unsigned char *, void))v199)(v413, 0);
                      }
                    }
                    else
                    {
                      uint64_t v209 = *(void *)(v112 + *(int *)(v126 + 36));
                      swift_bridgeObjectRelease_n();
                      if ((v379 & 1) == 0 && v209 == v378 && (v129 & 0x80000) == 0)
                      {
                        sub_1008E3D94(1);
                        if (v133)
                        {
                          swift_errorRelease();
                          uint64_t v133 = 0;
                        }
                      }
                    }
                    if (*(unsigned char *)v127 == 1)
                    {
                      uint64_t v220 = v112 + *(int *)(v126 + 56);
                      if ((*(unsigned char *)(v220 + 4) & 1) == 0)
                      {
                        int v221 = *(_DWORD *)v220;
                        uint64_t v222 = v112 + *(int *)(v126 + 36);
                        uint64_t v223 = *(void *)v222;
                        int v224 = *(_DWORD *)(v222 + 8);
                        v225 = (void *)swift_retain();
                        if (objc_sync_enter(v225)) {
                          goto LABEL_201;
                        }
                        swift_retain();
                        if (objc_sync_exit(v125)) {
                          goto LABEL_202;
                        }
                        swift_release();
                        swift_release();
                        *(void *)uint64_t v413 = v223;
                        *(void *)&v413[8] = 0;
                        *(_DWORD *)&v413[16] = v221;
                        *(_DWORD *)&v413[20] = v224;
                        long long v414 = 0uLL;
                        uint64_t v226 = fpfs_openfdbyhandle();
                        if ((v226 & 0x80000000) != 0)
                        {
                          int v230 = sub_10096B4D0();
                          sub_1005970E0(v230, 0, 0, 0xAu);
                          swift_willThrow();
                          swift_errorRelease();
                          uint64_t v133 = 0;
                          LODWORD(v129) = v393;
                        }
                        else
                        {
                          uint64_t v227 = v226;
                          int v228 = fpfs_untrack_document();
                          LODWORD(v129) = v393;
                          if (v228 < 0)
                          {
                            int v229 = sub_10096B4D0();
                            sub_1005970E0(v229, 15, 0, 0xAu);
                            swift_willThrow();
                            swift_errorRelease();
                            uint64_t v133 = 0;
                          }
                          if ((fpfs_make_fsevent() & 0x80000000) != 0)
                          {
                            int v231 = sub_10096B4D0();
                            sub_1005970E0(v231, 17, 0, 0xAu);
                            swift_willThrow();
                            swift_errorRelease();
                            sub_100595FB8(v227);
                            uint64_t v133 = 0;
                          }
                          else
                          {
                            sub_100595FB8(v227);
                          }
                        }
                      }
                    }
                    uint64_t v232 = v133;
                    int v233 = v395[v127];
                    uint64_t v234 = v383;
                    sub_1009381C4(v112, v383, type metadata accessor for VFSItem);
                    if (v233 == 1)
                    {
                      uint64_t v235 = *(void (**)(char *, uint64_t))(v234 + *(int *)(v126 + 36));
                      swift_bridgeObjectRetain();
                      sub_10092D018(v234, type metadata accessor for VFSItem);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                      uint64_t v236 = v406;
                      uint64_t v90 = v402;
                      uint64_t v95 = (uint64_t)v403;
                      uint64_t v237 = v384;
                      if (v235 != v406)
                      {
                        if (!swift_unknownObjectWeakLoadStrong()) {
                          goto LABEL_117;
                        }
                        uint64_t v238 = v125[35];
                        uint64_t v239 = swift_getObjectType();
                        uint64_t v240 = (*(uint64_t (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v238 + 8))(v236, v239, v238);
                        if (!v232)
                        {
                          uint64_t v242 = v240;
                          char v243 = v241;
                          uint64_t v232 = 0;
                          swift_unknownObjectRelease();
                          if (v243 != -1)
                          {
                            uint64_t v244 = *v398;
                            int v245 = *((unsigned __int8 *)v398 + 8);
                            if (v243)
                            {
                              uint64_t v246 = v365;
                              uint64_t v247 = (uint64_t)v364;
                              if (v243 == 1)
                              {
                                if (v245 == 1 && v242 == v244) {
                                  goto LABEL_116;
                                }
                              }
                              else if (v242)
                              {
                                if (v245 == 2 && v244 == 1) {
                                  goto LABEL_116;
                                }
                              }
                              else if (v245 == 2 && !v244)
                              {
                                goto LABEL_116;
                              }
                            }
                            else
                            {
                              uint64_t v246 = v365;
                              uint64_t v247 = (uint64_t)v364;
                              if (!*((unsigned char *)v398 + 8) && v242 == v244) {
                                goto LABEL_116;
                              }
                            }
                            id v331 = (id)fpfs_current_or_default_log();
                            sub_10096B490();
                            sub_1009381C4((uint64_t)v398, v247, type metadata accessor for VFSItem);
                            uint64_t v332 = sub_10096B470();
                            os_log_type_t v333 = sub_10096C590();
                            uint64_t v411 = v332;
                            LODWORD(v408) = v333;
                            if (os_log_type_enabled(v332, v333))
                            {
                              uint64_t v334 = swift_slowAlloc();
                              *(void *)uint64_t v413 = swift_slowAlloc();
                              *(_DWORD *)uint64_t v334 = 136446466;
                              uint64_t v335 = VFSItemID.parseableString.getter(v242, v243);
                              uint64_t v415 = sub_100719D44(v335, v336, (uint64_t *)v413);
                              sub_10096C8C0();
                              swift_bridgeObjectRelease();
                              *(_WORD *)(v334 + 12) = 2082;
                              uint64_t v337 = VFSItemID.parseableString.getter(*(void *)v247, *(unsigned char *)(v247 + 8));
                              uint64_t v415 = sub_100719D44(v337, v338, (uint64_t *)v413);
                              uint64_t v90 = v402;
                              sub_10096C8C0();
                              uint64_t v237 = v384;
                              uint64_t v95 = (uint64_t)v403;
                              swift_bridgeObjectRelease();
                              sub_10092D018(v247, type metadata accessor for VFSItem);
                              id v339 = v411;
                              _os_log_impl((void *)&_mh_execute_header, v411, (os_log_type_t)v408, "%{public}s was moved inside package %{public}s", (uint8_t *)v334, 0x16u);
                              swift_arrayDestroy();
                              swift_slowDealloc();
                              swift_slowDealloc();
                            }
                            else
                            {
                              sub_10092D018(v247, type metadata accessor for VFSItem);
                            }
                            v397(v246, v405);
                            uint64_t v340 = v409;
                            uint64_t v341 = sub_1008DF6F0();
                            uint64_t v290 = v341;
                            if (*(void *)(v342 + 8))
                            {
                              uint64_t v343 = v342;
                              uint64_t v411 = v341;
                              uint64_t v344 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
                              uint64_t v345 = (uint64_t)v361;
                              uint64_t v346 = (char *)v361 + *(int *)(v344 + 48);
                              uint64_t v347 = *(int *)(v344 + 64);
                              uint64_t *v361 = v242;
                              *(unsigned char *)(v345 + 8) = v243;
                              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v346, 1, 1, v340);
                              *(void *)(v345 + v347) = 0;
                              swift_storeEnumTagMultiPayload();
                              uint64_t v348 = v362;
                              sub_10002B70C(v345, v362, (uint64_t *)&unk_100AD0D50);
                              unint64_t v349 = *(void *)(v343 + 8);
                              char v350 = swift_isUniquelyReferenced_nonNull_native();
                              *(void *)(v343 + 8) = v349;
                              if ((v350 & 1) == 0)
                              {
                                unint64_t v349 = sub_1006A4784(0, *(void *)(v349 + 16) + 1, 1, v349);
                                *(void *)(v343 + 8) = v349;
                              }
                              unint64_t v352 = *(void *)(v349 + 16);
                              unint64_t v351 = *(void *)(v349 + 24);
                              if (v352 >= v351 >> 1)
                              {
                                unint64_t v349 = sub_1006A4784(v351 > 1, v352 + 1, 1, v349);
                                *(void *)(v343 + 8) = v349;
                              }
                              *(void *)(v349 + 16) = v352 + 1;
                              sub_10001AE98(v348, v349+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v352, (uint64_t *)&unk_100AD0D50);
                              uint64_t v301 = v345;
LABEL_191:
                              sub_10002B770(v301, (uint64_t *)&unk_100AD0D50);
                              ((void (*)(unsigned char *, void))v411)(v413, 0);
                              goto LABEL_116;
                            }
                            goto LABEL_192;
                          }
LABEL_116:
                          LOWORD(v129) = (_WORD)v393;
                          goto LABEL_117;
                        }
LABEL_115:
                        swift_errorRelease();
                        swift_unknownObjectRelease();
                        uint64_t v232 = 0;
                        goto LABEL_116;
                      }
                    }
                    else
                    {
                      sub_10092D018(v234, type metadata accessor for VFSItem);
                      uint64_t v90 = v402;
                      uint64_t v95 = (uint64_t)v403;
                      uint64_t v237 = v384;
                    }
                    if ((v129 & 0x80000) != 0
                      || (v129 & 0x500) != 0x400 && (v129 & 0x70000 & ((v129 & 0x70000) - 1)) == 0
                      || *((unsigned char *)v398 + 8)
                      || (uint64_t v248 = *v398, !swift_unknownObjectWeakLoadStrong()))
                    {
LABEL_117:
                      if ((v129 & 0x800) != 0)
                      {
                        sub_1009381C4((uint64_t)v398, v380, type metadata accessor for VFSItem);
                        VFSItem.fetchURL()(v237);
                        if (((unsigned int (*)(char *, uint64_t, uint64_t))v90[6])(v237, 1, v400) != 1)
                        {
                          sub_10096AD20(v253);
                          char v255 = v254;
                          uint64_t v256 = (void (*)(char *, uint64_t))v90[1];
                          v256(v237, v400);
                          sub_10096AD20(v257);
                          uint64_t v259 = v258;
                          id v260 = objc_msgSend(v255, "fp_relationshipToItemAtURL:", v258);

                          if (v260 == (id)2)
                          {
                            __chkstk_darwin(v261);
                            uint64_t v262 = v410;
                            *(&v354 - 4) = (uint64_t)v410;
                            *(&v354 - 3) = (uint64_t)sub_10093CDC8;
                            uint64_t v353 = v262;
                            sub_10002B7CC(&qword_100ADF158);
                            sub_10096ADB0();
                            if (v232)
                            {
                              id v263 = (id)fpfs_current_or_default_log();
                              uint64_t v264 = v370;
                              sub_10096B490();
                              uint64_t v265 = v369;
                              uint64_t v266 = v400;
                              ((void (*)(char *, uint64_t, uint64_t))v90[2])(v369, v95, v400);
                              swift_errorRetain();
                              swift_errorRetain();
                              char v267 = sub_10096B470();
                              os_log_type_t v268 = sub_10096C5B0();
                              int v269 = v268;
                              if (os_log_type_enabled(v267, v268))
                              {
                                uint64_t v270 = swift_slowAlloc();
                                uint64_t v410 = (void *)swift_slowAlloc();
                                uint64_t v411 = swift_slowAlloc();
                                *(void *)uint64_t v413 = v411;
                                *(_DWORD *)uint64_t v270 = 134218498;
                                uint64_t v415 = v401;
                                sub_10096C8C0();
                                *(_WORD *)(v270 + 12) = 2080;
                                uint64_t v408 = v270 + 14;
                                sub_10096AD20((NSURL *)(v270 + 14));
                                v272 = v271;
                                id v273 = objc_msgSend(v271, "fp_shortDescription");

                                uint64_t v274 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
                                LODWORD(v409) = v269;
                                unint64_t v276 = v275;

                                uint64_t v90 = v402;
                                uint64_t v415 = sub_100719D44(v274, v276, (uint64_t *)v413);
                                sub_10096C8C0();
                                swift_bridgeObjectRelease();
                                v256(v369, v266);
                                *(_WORD *)(v270 + 22) = 2112;
                                swift_getErrorValue();
                                id v277 = Error.prettyDescription.getter(v412);
                                uint64_t v415 = (uint64_t)v277;
                                sub_10096C8C0();
                                *uint64_t v410 = v277;
                                swift_errorRelease();
                                swift_errorRelease();
                                _os_log_impl((void *)&_mh_execute_header, v267, (os_log_type_t)v409, "Failed to identify root of rename event #%llu against package at %s: %@", (uint8_t *)v270, 0x20u);
                                sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
                                swift_arrayDestroy();
                                swift_slowDealloc();
                                swift_arrayDestroy();
                                swift_slowDealloc();
                                swift_slowDealloc();

                                swift_release();
                                swift_errorRelease();
                                uint64_t v278 = v370;
                              }
                              else
                              {

                                swift_release();
                                swift_errorRelease();
                                swift_errorRelease();
                                v256(v265, v266);
                                swift_errorRelease();
                                uint64_t v278 = v264;
                              }
                              v397(v278, v405);
                              sub_10092D018(v380, type metadata accessor for VFSItem);
                              uint64_t v95 = (uint64_t)v403;
                              goto LABEL_139;
                            }
                            if ((v413[9] & 1) == 0 && (v413[8] & 1) == 0)
                            {
                              uint64_t v279 = *(void *)v413;
                              uint64_t v125 = v410;
                              int v280 = (void *)((char *)v410 + qword_100B0B640);
                              swift_beginAccess();
                              if (*v280 == -1) {
                                __break(1u);
                              }
                              ++*v280;
                              uint64_t v281 = (void *)swift_retain();
                              if (!objc_sync_enter(v281))
                              {
                                uint64_t v282 = v125[20];
                                swift_retain();
                                if (!objc_sync_exit(v125))
                                {
                                  swift_release();
                                  type metadata accessor for VFSFileTree(0);
                                  swift_unknownObjectWeakLoadStrong();
                                  *(void *)uint64_t v413 = v279;
                                  *(_OWORD *)&v413[8] = 0u;
                                  long long v414 = 0u;
                                  uint64_t v283 = fpfs_openfdbyhandle();
                                  if ((v283 & 0x80000000) != 0)
                                  {
                                    int v313 = sub_10096B4D0();
                                    sub_1005970E0(v313, 0, 0, 0xAu);
                                    swift_willThrow();
                                    uint64_t v316 = v366;
                                    swift_errorRetain();
                                    *(_DWORD *)uint64_t v413 = sub_10096A710();
                                    sub_100045CB4();
                                    char v314 = sub_10096AA60();
                                    swift_errorRelease();
                                    if ((v314 & 1) == 0)
                                    {
                                      swift_release();
                                      swift_unknownObjectRelease();
                                      swift_errorRelease();
                                      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v399 + 56))(v316, 1, 1, v409);
LABEL_173:
                                      swift_release();
                                      sub_10092D018(v380, type metadata accessor for VFSItem);
                                      sub_10002B770(v316, &qword_100ACB910);
                                      goto LABEL_139;
                                    }
                                    uint64_t v315 = v409;
                                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v399 + 56))(v316, 1, 1, v409);
                                    swift_errorRelease();
                                  }
                                  else
                                  {
                                    uint64_t v284 = v283;
                                    uint64_t v353 = 0;
                                    sub_100438EE8(v282, v366);
                                    sub_100595FB8(v284);
                                    uint64_t v315 = v409;
                                    uint64_t v316 = v366;
                                  }
                                  swift_release();
                                  swift_unknownObjectRelease();
                                  int v317 = v355(v316, 1, v315);
                                  uint64_t v78 = v363;
                                  if (v317 == 1) {
                                    goto LABEL_173;
                                  }
                                  sub_10001158C(v316, (uint64_t)v363, type metadata accessor for VFSItem);
                                  uint64_t v57 = sub_1008DF6F0();
                                  if (*(void *)(v318 + 8))
                                  {
                                    uint64_t v319 = v318;
                                    uint64_t v320 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
                                    uint64_t v321 = v358;
                                    v322 = (char *)v358 + *(int *)(v320 + 48);
                                    uint64_t v323 = *(int *)(v320 + 64);
                                    char v324 = v78[8];
                                    void *v358 = *(void *)v78;
                                    *((unsigned char *)v321 + 8) = v324;
                                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v322, 1, 1, v409);
                                    *(void *)((char *)v321 + v323) = 0;
                                    swift_storeEnumTagMultiPayload();
                                    uint64_t v325 = v357;
                                    sub_10002B70C((uint64_t)v321, v357, (uint64_t *)&unk_100AD0D50);
                                    unint64_t v326 = *(void *)(v319 + 8);
                                    char v327 = swift_isUniquelyReferenced_nonNull_native();
                                    *(void *)(v319 + 8) = v326;
                                    if ((v327 & 1) == 0)
                                    {
                                      unint64_t v326 = sub_1006A4784(0, *(void *)(v326 + 16) + 1, 1, v326);
                                      *(void *)(v319 + 8) = v326;
                                    }
                                    unint64_t v329 = *(void *)(v326 + 16);
                                    unint64_t v328 = *(void *)(v326 + 24);
                                    if (v329 >= v328 >> 1)
                                    {
                                      unint64_t v326 = sub_1006A4784(v328 > 1, v329 + 1, 1, v326);
                                      *(void *)(v319 + 8) = v326;
                                    }
                                    *(void *)(v326 + 16) = v329 + 1;
                                    sub_10001AE98(v325, v326+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v329, (uint64_t *)&unk_100AD0D50);
                                    sub_10002B770((uint64_t)v358, (uint64_t *)&unk_100AD0D50);
                                    ((void (*)(unsigned char *, void))v57)(v413, 0);
                                    swift_release();
                                    uint64_t v330 = (uint64_t)v363;
                                    goto LABEL_195;
                                  }
LABEL_194:
                                  ((void (*)(unsigned char *, void))v57)(v413, 0);
                                  swift_release();
                                  uint64_t v330 = (uint64_t)v78;
LABEL_195:
                                  sub_10092D018(v330, type metadata accessor for VFSItem);
                                  sub_10092D018(v380, type metadata accessor for VFSItem);
                                  goto LABEL_139;
                                }
LABEL_202:
                                sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v125);
                              }
LABEL_201:
                              sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v125);
                            }
                          }
                        }
                        sub_10092D018(v380, type metadata accessor for VFSItem);
                      }
                      swift_release();
LABEL_139:
                      sub_10096C760();
                      uint64_t v285 = v396;
                      sub_10096B3A0();
                      sub_10092D018(v285, type metadata accessor for Signpost);
                      sub_10092D018((uint64_t)v398, type metadata accessor for VFSItem);
                      return v90[1]((char *)v95, v400);
                    }
                    uint64_t v249 = v125[35];
                    uint64_t v250 = swift_getObjectType();
                    uint64_t v251 = (*(uint64_t (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v249 + 8))(v406, v250, v249);
                    if (!v232)
                    {
                      uint64_t v286 = v251;
                      unsigned __int8 v287 = v252;
                      uint64_t v232 = 0;
                      swift_unknownObjectRelease();
                      if (v287 - 1 >= 2 && (v287 || v286 == v248)) {
                        goto LABEL_116;
                      }
                      uint64_t v288 = sub_1008DF6F0();
                      uint64_t v290 = v288;
                      if (*(void *)(v289 + 8))
                      {
                        uint64_t v291 = v289;
                        uint64_t v411 = v288;
                        uint64_t v292 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
                        uint64_t v293 = (uint64_t)v359;
                        uint64_t v294 = (char *)v359 + *(int *)(v292 + 48);
                        uint64_t v295 = *(int *)(v292 + 64);
                        *uint64_t v359 = v286;
                        *(unsigned char *)(v293 + 8) = v287;
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v294, 1, 1, v409);
                        *(void *)(v293 + v295) = 0;
                        swift_storeEnumTagMultiPayload();
                        uint64_t v296 = v360;
                        sub_10002B70C(v293, v360, (uint64_t *)&unk_100AD0D50);
                        unint64_t v297 = *(void *)(v291 + 8);
                        char v298 = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)(v291 + 8) = v297;
                        if ((v298 & 1) == 0)
                        {
                          unint64_t v297 = sub_1006A4784(0, *(void *)(v297 + 16) + 1, 1, v297);
                          *(void *)(v291 + 8) = v297;
                        }
                        unint64_t v300 = *(void *)(v297 + 16);
                        unint64_t v299 = *(void *)(v297 + 24);
                        if (v300 >= v299 >> 1)
                        {
                          unint64_t v297 = sub_1006A4784(v299 > 1, v300 + 1, 1, v297);
                          *(void *)(v291 + 8) = v297;
                        }
                        *(void *)(v297 + 16) = v300 + 1;
                        sub_10001AE98(v296, v297+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v300, (uint64_t *)&unk_100AD0D50);
                        uint64_t v301 = v293;
                        goto LABEL_191;
                      }
LABEL_192:
                      ((void (*)(unsigned char *, void))v290)(v413, 0);
                      goto LABEL_116;
                    }
                    goto LABEL_115;
                  }
LABEL_199:
                  unint64_t v129 = sub_1006A4784(0, *(void *)(v129 + 16) + 1, 1, v129);
                  *((void *)v134 + 1) = v129;
                  goto LABEL_56;
                }
LABEL_198:
                __break(1u);
                goto LABEL_199;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_198;
          }
        }
        else if (v210)
        {
          if (v214 != 2 || v213 != 1) {
            goto LABEL_154;
          }
        }
        else if (v214 != 2 || v213)
        {
          goto LABEL_154;
        }
      }
      else if (*(unsigned char *)(v112 + 8) || v210 != v213)
      {
        goto LABEL_154;
      }
    }
    uint64_t v126 = v409;
    uint64_t v124 = v397;
    goto LABEL_22;
  }
  sub_10002B770((uint64_t)v63, &qword_100ACB910);
  int v103 = v403;
  uint64_t v104 = v406;
  if (v406)
  {
    int v105 = v410;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v107 = v105[35];
      uint64_t v108 = swift_getObjectType();
      uint64_t v109 = (*(uint64_t (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v107 + 8))(v104, v108, v107);
      uint64_t v110 = v402;
      uint64_t v111 = v400;
      uint64_t v169 = v109;
      char v171 = v170;
      uint64_t Strong = swift_unknownObjectRelease();
      if (v171 != -1) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v110 = v402;
      uint64_t v111 = v400;
    }
    __chkstk_darwin(Strong);
    *(&v354 - 4) = (uint64_t)v105;
    *(&v354 - 3) = (uint64_t)sub_10093CDC8;
    uint64_t v353 = v105;
    sub_10002B7CC(&qword_100ADF158);
    sub_10096ADB0();
    if (v413[9] & 1) != 0 || (v413[8])
    {
      sub_1009125E4((int)v411, v407, v408, v406);
    }
    else
    {
      uint64_t v184 = *(void *)v413;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v185 = v105[35];
        uint64_t v186 = swift_getObjectType();
        uint64_t v169 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 8))(v184, v186, v185);
        char v171 = v187;
        swift_unknownObjectRelease();
        if (v171 != -1)
        {
LABEL_42:
          uint64_t v173 = sub_1008DF6F0();
          if (*(void *)(v172 + 8))
          {
            uint64_t v174 = v172;
            uint64_t v175 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
            uint64_t v176 = v374;
            int v177 = (char *)v374 + *(int *)(v175 + 48);
            uint64_t v178 = *(int *)(v175 + 64);
            *int v374 = v169;
            *((unsigned char *)v176 + 8) = v171;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v177, 1, 1, v409);
            *(uint64_t *)((char *)v176 + v178) = 0;
            swift_storeEnumTagMultiPayload();
            sub_10002B70C((uint64_t)v176, v375, (uint64_t *)&unk_100AD0D50);
            unint64_t v179 = *(void *)(v174 + 8);
            char v180 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v174 + 8) = v179;
            if ((v180 & 1) == 0)
            {
              unint64_t v179 = sub_1006A4784(0, *(void *)(v179 + 16) + 1, 1, v179);
              *(void *)(v174 + 8) = v179;
            }
            unint64_t v182 = *(void *)(v179 + 16);
            unint64_t v181 = *(void *)(v179 + 24);
            char v183 = v406;
            if (v182 >= v181 >> 1)
            {
              unint64_t v179 = sub_1006A4784(v181 > 1, v182 + 1, 1, v179);
              *(void *)(v174 + 8) = v179;
            }
            *(void *)(v179 + 16) = v182 + 1;
            sub_10001AE98(v375, v179+ ((*(unsigned __int8 *)(v386 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v386 + 80))+ *(void *)(v386 + 72) * v182, (uint64_t *)&unk_100AD0D50);
            sub_10002B770((uint64_t)v374, (uint64_t *)&unk_100AD0D50);
            ((void (*)(unsigned char *, void))v173)(v413, 0);
          }
          else
          {
            ((void (*)(unsigned char *, void))v173)(v413, 0);
            char v183 = v406;
          }
          sub_1009125E4((int)v411, v407, v408, v183);
          return v110[1](v103, v111);
        }
      }
    }
    id v215 = (id)fpfs_current_or_default_log();
    uint64_t v216 = v371;
    sub_10096B490();
    uint64_t v217 = sub_10096B470();
    os_log_type_t v218 = sub_10096C5A0();
    if (os_log_type_enabled(v217, v218))
    {
      uint64_t v219 = swift_slowAlloc();
      *(_DWORD *)uint64_t v219 = 134349568;
      *(void *)uint64_t v413 = v406;
      sub_10096C8C0();
      *(_WORD *)(v219 + 12) = 2048;
      *(void *)uint64_t v413 = v401;
      sub_10096C8C0();
      *(_WORD *)(v219 + 22) = 1024;
      *(_DWORD *)uint64_t v413 = v411;
      sub_10096C8C0();
      _os_log_impl((void *)&_mh_execute_header, v217, v218, "Dropping fsevent for %{public}llu (event#%llu, flags:%x)", (uint8_t *)v219, 0x1Cu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v404 + 8))(v216, v405);
    return v110[1](v103, v111);
  }
  id v153 = (id)fpfs_current_or_default_log();
  uint64_t v154 = v389;
  sub_10096B490();
  uint64_t v155 = sub_10096B470();
  os_log_type_t v156 = sub_10096C5A0();
  if (os_log_type_enabled(v155, v156))
  {
    char v157 = (_DWORD *)swift_slowAlloc();
    uint64_t v158 = v96;
    uint64_t v159 = v157;
    *char v157 = 134218240;
    *(void *)uint64_t v413 = v158;
    sub_10096C8C0();
    *((_WORD *)v159 + 6) = 1024;
    *(_DWORD *)uint64_t v413 = v411;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v155, v156, "dropping fsevent without file ID (event#%llu, flags:%x)", (uint8_t *)v159, 0x12u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v404 + 8))(v154, v405);
  return v402[1](v103, v400);
}

uint64_t sub_100935058(uint64_t a1, void *a2, void (*a3)(char *, uint64_t), uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v244 = a5;
  uint64_t v243 = a4;
  v252._char object = a2;
  uint64_t v253 = a3;
  v252._uint64_t countAndFlagsBits = a1;
  uint64_t v221 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t v7 = *(void *)(v221 - 8);
  uint64_t v8 = __chkstk_darwin(v221);
  uint64_t v217 = (uint64_t)&v214 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v216 = (uint64_t *)((char *)&v214 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v214 - v13;
  __chkstk_darwin(v12);
  uint64_t v220 = (uint64_t *)((char *)&v214 - v15);
  uint64_t v250 = type metadata accessor for VFSItem(0);
  uint64_t v248 = *(void *)(v250 - 8);
  uint64_t v16 = __chkstk_darwin(v250);
  uint64_t v18 = (char *)&v214 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v236 = (char *)&v214 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v214 - v21;
  uint64_t v23 = sub_10096B3D0();
  uint64_t v239 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v238 = (char *)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v28 = (char *)&v214 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v249 = (uint64_t)&v214 - v29;
  uint64_t v237 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v237);
  uint64_t v251 = (uint64_t)&v214 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  int v231 = (void (*)(char *, uint64_t))((char *)&v214 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v235 = (char *)&v214 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v240 = (char *)&v214 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v214 - v38;
  uint64_t v40 = sub_10002B7CC(&qword_100AD20B8);
  __chkstk_darwin(v40 - 8);
  uint64_t v223 = (uint64_t *)((char *)&v214 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_10096B480();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v245 = v42;
  uint64_t v246 = v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v227 = (char *)&v214 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v222 = (char *)&v214 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v225 = (char *)&v214 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  int v224 = (char *)&v214 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v219 = (char *)&v214 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  char v241 = (char *)&v214 - v55;
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v214 - v56;
  uint64_t v58 = (void *)swift_retain();
  if (objc_sync_enter(v58)) {
    goto LABEL_92;
  }
  id v215 = v14;
  uint64_t v218 = v7;
  uint64_t v59 = v6[20];
  swift_retain();
  if (objc_sync_exit(v6)) {
    goto LABEL_93;
  }
  uint64_t v226 = v18;
  uint64_t v242 = v22;
  swift_release();
  uint64_t v229 = *(void *)(v59 + 40);
  int v230 = *(unsigned __int8 *)(v59 + 48);
  swift_release();
  uint64_t v60 = sub_1008DF6F0();
  if (!*(void *)(v61 + 8))
  {
    ((void (*)(uint64_t *, void))v60)(v260, 0);
    uint64_t v64 = v23;
LABEL_8:
    uint64_t v232 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56);
    uint64_t v233 = v248 + 56;
    v232(v39, 1, 1, v250);
    if (qword_100ACC1C8 != -1) {
      swift_once();
    }
    uint64_t v70 = (void *)qword_100B0B648;
    uint64_t v71 = v239;
    uint64_t v72 = v249;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v239 + 56))(v249, 1, 1, v64);
    v260[0] = 0;
    v260[1] = 0xE000000000000000;
    sub_10096CBD0(24);
    swift_bridgeObjectRelease();
    strcpy((char *)v260, "lookup path ");
    BYTE5(v260[1]) = 0;
    HIWORD(v260[1]) = -5120;
    sub_10096BDC0(v252);
    v262._uint64_t countAndFlagsBits = 0x2044496D65746920;
    v262._char object = (void *)0xE800000000000000;
    sub_10096BDC0(v262);
    v259[0] = (Swift::Int)v253;
    v263._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v263);
    swift_bridgeObjectRelease();
    uint64_t v73 = v260[1];
    uint64_t v228 = v260[0];
    sub_10002B70C(v72, (uint64_t)v28, &qword_100AD0830);
    int v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48))(v28, 1, v64);
    uint64_t v234 = v6;
    uint64_t v247 = v39;
    if (v74 == 1)
    {
      id v75 = v70;
      uint64_t v76 = v238;
      sub_10096B3B0();
      sub_10002B770((uint64_t)v28, &qword_100AD0830);
    }
    else
    {
      uint64_t v76 = v238;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v238, v28, v64);
    }
    uint64_t v77 = v237;
    uint64_t v78 = v251;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v251, v76, v64);
    uint64_t v237 = *(int *)(v77 + 20);
    *(void *)(v78 + v237) = v70;
    uint64_t v79 = (char *)(v78 + *(int *)(v77 + 24));
    *(void *)uint64_t v79 = "FS: handle event";
    *((void *)v79 + 1) = 16;
    uint64_t v238 = v79;
    v79[16] = 2;
    id v80 = v70;
    swift_bridgeObjectRetain();
    sub_10096C770();
    sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_100973BB0;
    *(void *)(v81 + 56) = &type metadata for String;
    *(void *)(v81 + 64) = sub_1000240A4();
    *(void *)(v81 + 32) = v228;
    *(void *)(v81 + 40) = v73;
    uint64_t v212 = v81;
    BYTE8(v211) = 2;
    *(void *)&long long v211 = 2;
    sub_10096B390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v64);
    swift_bridgeObjectRelease();
    sub_10002B770(v249, &qword_100AD0830);
    uint64_t v6 = v234;
    id v82 = (void *)swift_retain();
    if (!objc_sync_enter(v82))
    {
      uint64_t v83 = v6[20];
      swift_retain();
      int v84 = objc_sync_exit(v6);
      uint64_t v85 = (uint64_t)v240;
      if (!v84)
      {
        swift_release();
        uint64_t v86 = type metadata accessor for VFSFileTree(0);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v88 = v6[35];
        v260[0] = (uint64_t)v253;
        *(_OWORD *)&v260[1] = 0u;
        long long v261 = 0u;
        uint64_t v89 = fpfs_openfdbyhandle();
        if ((v89 & 0x80000000) == 0)
        {
          uint64_t v90 = v89;
          int v91 = __chkstk_darwin(v89);
          *(&v214 - 10) = v86;
          *((_DWORD *)&v214 - 18) = v91;
          *(&v214 - 8) = v83;
          *(&v214 - 7) = Strong;
          *(&v214 - 6) = v88;
          *((unsigned char *)&v214 - 40) = 0;
          long long v211 = xmmword_100984A70;
          LOBYTE(v212) = -1;
          uint64_t v213 = 0;
          v260[0] = v92;
          LODWORD(v260[1]) = v93;
          BYTE4(v260[1]) = v94;
          sub_10094A1CC(v95, (uint64_t)sub_1009381AC, (uint64_t)(&v214 - 12), v85);
          sub_100595FB8(v90);
          uint64_t v98 = (uint64_t)v247;
          uint64_t v99 = v250;
LABEL_26:
          sub_10002B770(v98, &qword_100ACB910);
          swift_release();
          swift_unknownObjectRelease();
          sub_10001AE98(v85, v98, &qword_100ACB910);
          uint64_t v108 = v241;
          uint64_t v109 = (uint64_t)v242;
          uint64_t v110 = (uint64_t)v235;
          uint64_t v111 = (uint64_t)v236;
          goto LABEL_37;
        }
        int v96 = sub_10096B4D0();
        uint64_t v97 = sub_1005970E0(v96, 0, 0, 0xAu);
        swift_willThrow();
        uint64_t v98 = (uint64_t)v247;
        uint64_t v99 = v250;
        swift_errorRetain();
        LODWORD(v260[0]) = sub_10096A710();
        sub_100045CB4();
        char v107 = sub_10096AA60();
        swift_errorRelease();
        if (v107)
        {
          v232((char *)v85, 1, 1, v99);
          swift_errorRelease();
          goto LABEL_26;
        }
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v256 = v97;
        swift_errorRetain();
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        if (swift_dynamicCast())
        {
          sub_10001AE98((uint64_t)v260, (uint64_t)v258, (uint64_t *)&unk_100ACD9A0);
          sub_10001AE98((uint64_t)v258, (uint64_t)v259, (uint64_t *)&unk_100ACD9A0);
          if (sub_10021FECC((uint64_t)v259) == 4)
          {
            uint64_t v113 = v259;
            uint64_t countAndFlagsBits = Filename.init(rawValue:)(*(Swift::String *)(&v112 - 1)).rawValue._countAndFlagsBits;
            uint64_t v253 = *(void (**)(char *, uint64_t))countAndFlagsBits;
            int v115 = *(unsigned __int8 *)(countAndFlagsBits + 8);
            uint64_t v116 = *(void *)(countAndFlagsBits + 16);
            char v117 = *(unsigned char *)(countAndFlagsBits + 24);
            swift_errorRelease();
            id v118 = (id)fpfs_current_or_default_log();
            BOOL v119 = v222;
            sub_10096B490();
            uint64_t v120 = sub_10096B470();
            os_log_type_t v121 = sub_10096C5A0();
            BOOL v122 = os_log_type_enabled(v120, v121);
            LODWORD(v252._object) = v115;
            if (v122)
            {
              uint64_t v123 = swift_slowAlloc();
              uint64_t v6 = (void *)swift_slowAlloc();
              v257[0] = (uint64_t)v6;
              *(_DWORD *)uint64_t v123 = 136315394;
              v252._uint64_t countAndFlagsBits = v116;
              uint64_t v124 = VFSItemID.parseableString.getter(v116, v117);
              uint64_t v254 = sub_100719D44(v124, v125, v257);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v123 + 12) = 2080;
              if (v115 == 255)
              {
LABEL_91:
                __break(1u);
                goto LABEL_92;
              }
              uint64_t v126 = VFSItemID.parseableString.getter((uint64_t)v253, v115);
              uint64_t v254 = sub_100719D44(v126, v127, v257);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v120, v121, "Item mismatch when resolving FSEvent: got %s when expecting %s", (uint8_t *)v123, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v246 + 8))(v222, v245);
              uint64_t v6 = v234;
              uint64_t v116 = v252._countAndFlagsBits;
            }
            else
            {

              (*(void (**)(char *, uint64_t))(v246 + 8))(v119, v245);
            }
            if (v243)
            {
              uint64_t v172 = sub_1008DF6F0();
              if (*(void *)(v171 + 8))
              {
                uint64_t v173 = v171;
                uint64_t v174 = v243;
                char v175 = v117;
                uint64_t v176 = v223;
                *uint64_t v223 = v243;
                *((unsigned char *)v176 + 8) = 0;
                uint64_t v177 = type metadata accessor for SyncState();
                swift_storeEnumTagMultiPayload();
                (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v176, 0, 1, v177);
                uint64_t v178 = (uint64_t)v176;
                char v117 = v175;
                sub_100360C44(v178, 3);
                *(void *)(v173 + 48) = v174;
                *(unsigned char *)(v173 + 56) = 0;
              }
              ((void (*)(uint64_t *, void))v172)(v257, 0);
            }
            char v180 = sub_1008DF6F0();
            if (*(void *)(v179 + 8))
            {
              uint64_t v181 = v179;
              uint64_t v182 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
              char v183 = v220;
              uint64_t v184 = (char *)v220 + *(int *)(v182 + 48);
              uint64_t v185 = *(int *)(v182 + 64);
              *uint64_t v220 = v116;
              *((unsigned char *)v183 + 8) = v117;
              v232(v184, 1, 1, v250);
              *(uint64_t *)((char *)v183 + v185) = 0;
              swift_storeEnumTagMultiPayload();
              uint64_t v186 = (uint64_t)v215;
              sub_10002B70C((uint64_t)v183, (uint64_t)v215, (uint64_t *)&unk_100AD0D50);
              unint64_t v187 = *(void *)(v181 + 8);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v181 + 8) = v187;
              uint64_t v189 = v218;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v187 = sub_1006A4784(0, *(void *)(v187 + 16) + 1, 1, v187);
                *(void *)(v181 + 8) = v187;
              }
              unint64_t v191 = *(void *)(v187 + 16);
              unint64_t v190 = *(void *)(v187 + 24);
              if (v191 >= v190 >> 1)
              {
                unint64_t v187 = sub_1006A4784(v190 > 1, v191 + 1, 1, v187);
                *(void *)(v181 + 8) = v187;
              }
              *(void *)(v187 + 16) = v191 + 1;
              sub_10001AE98(v186, v187+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v191, (uint64_t *)&unk_100AD0D50);
              sub_10002B770((uint64_t)v220, (uint64_t *)&unk_100AD0D50);
              ((void (*)(uint64_t *, void))v180)(v257, 0);
            }
            else
            {
              ((void (*)(uint64_t *, void))v180)(v257, 0);
              uint64_t v189 = v218;
            }
            uint64_t v193 = sub_1008DF6F0();
            if (!*(void *)(v192 + 8))
            {
              ((void (*)(uint64_t *, void))v193)(v257, 0);
LABEL_85:
              sub_10096C760();
              uint64_t v205 = v251;
              sub_10096B3A0();
              sub_10092D018(v205, type metadata accessor for Signpost);
              sub_10002B770((uint64_t)v247, &qword_100ACB910);
              return swift_errorRelease();
            }
            char object = (char)v252._object;
            if (LODWORD(v252._object) != 255)
            {
              uint64_t v195 = v192;
              uint64_t v196 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
              uint64_t v197 = (uint64_t)v216;
              uint64_t v198 = (char *)v216 + *(int *)(v196 + 48);
              uint64_t v199 = *(int *)(v196 + 64);
              *uint64_t v216 = v253;
              *(unsigned char *)(v197 + 8) = object;
              v232(v198, 1, 1, v250);
              *(void *)(v197 + v199) = 0;
              swift_storeEnumTagMultiPayload();
              uint64_t v200 = v217;
              sub_10002B70C(v197, v217, (uint64_t *)&unk_100AD0D50);
              unint64_t v201 = *(void *)(v195 + 8);
              char v202 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v195 + 8) = v201;
              if ((v202 & 1) == 0)
              {
                unint64_t v201 = sub_1006A4784(0, *(void *)(v201 + 16) + 1, 1, v201);
                *(void *)(v195 + 8) = v201;
              }
              unint64_t v204 = *(void *)(v201 + 16);
              unint64_t v203 = *(void *)(v201 + 24);
              if (v204 >= v203 >> 1)
              {
                unint64_t v201 = sub_1006A4784(v203 > 1, v204 + 1, 1, v201);
                *(void *)(v195 + 8) = v201;
              }
              *(void *)(v201 + 16) = v204 + 1;
              sub_10001AE98(v200, v201+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v204, (uint64_t *)&unk_100AD0D50);
              sub_10002B770(v197, (uint64_t *)&unk_100AD0D50);
              ((void (*)(uint64_t *, void))v193)(v257, 0);
              goto LABEL_85;
            }
            __break(1u);
            goto LABEL_91;
          }
          sub_10021FD38((uint64_t)v258);
        }
        swift_errorRelease();
        id v128 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        swift_errorRetain();
        unint64_t v129 = sub_10096B470();
        os_log_type_t v130 = sub_10096C5A0();
        if (os_log_type_enabled(v129, v130))
        {
          uint64_t v131 = (uint8_t *)swift_slowAlloc();
          id v132 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v131 = 138412290;
          swift_getErrorValue();
          id v133 = Error.prettyDescription.getter(v255);
          v260[0] = (uint64_t)v133;
          sub_10096C8C0();
          void *v132 = v133;
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v129, v130, "error when resolving item: %@", v131, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v109 = (uint64_t)v242;
        uint64_t v110 = (uint64_t)v235;
        (*(void (**)(char *, uint64_t))(v246 + 8))(v227, v245);
        uint64_t v98 = (uint64_t)v247;
        uint64_t v111 = (uint64_t)v236;
        uint64_t v108 = v241;
LABEL_37:
        sub_10096C760();
        sub_10096B3A0();
        sub_10002B70C(v98, v110, &qword_100ACB910);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v110, 1, v99) == 1)
        {
          sub_10002B770(v110, &qword_100ACB910);
          if ((v244 & 0x80A00) == 0x80000)
          {
            long long v134 = sub_1008DF6F0();
            if (*(void *)(v135 + 8))
            {
              id v136 = v252._object;
              swift_bridgeObjectRetain();
              sub_100927574((Swift::UInt64)v253, v252._countAndFlagsBits, (uint64_t)v136);
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t *, void))v134)(v260, 0);
              swift_bridgeObjectRelease();
            }
            else
            {
              ((void (*)(uint64_t *, void))v134)(v260, 0);
            }
            uint64_t v159 = v224;
            id v160 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            uint64_t v161 = sub_10096B470();
            os_log_type_t v162 = sub_10096C5A0();
            if (os_log_type_enabled(v161, v162))
            {
              uint64_t v163 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v163 = 134349056;
              v260[0] = (uint64_t)v253;
              sub_10096C8C0();
              _os_log_impl((void *)&_mh_execute_header, v161, v162, "Ignoring unresolved own-event on fileID(%{public}llu)", v163, 0xCu);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v246 + 8))(v159, v245);
            sub_10092D018(v251, type metadata accessor for Signpost);
            uint64_t v164 = (uint64_t)v247;
            return sub_10002B770(v164, &qword_100ACB910);
          }
          os_log_type_t v140 = sub_1008DF6F0();
          if (*(void *)(v141 + 8))
          {
            uint64_t v142 = v252._object;
            swift_bridgeObjectRetain();
            sub_100494FA0(v259, v252._countAndFlagsBits, (Swift::Int)v142);
            ((void (*)(uint64_t *, void))v140)(v260, 0);
            swift_bridgeObjectRelease();
          }
          else
          {
            ((void (*)(uint64_t *, void))v140)(v260, 0);
          }
          uint64_t v165 = v225;
          id v166 = (id)fpfs_current_or_default_log();
          sub_10096B490();
          uint64_t v167 = sub_10096B470();
          os_log_type_t v168 = sub_10096C5A0();
          if (os_log_type_enabled(v167, v168))
          {
            uint64_t v169 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v169 = 134349056;
            v260[0] = (uint64_t)v253;
            sub_10096C8C0();
            _os_log_impl((void *)&_mh_execute_header, v167, v168, "Unable to resolve FSEvent item attributes for event on fileID(%{public}llu)", v169, 0xCu);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v246 + 8))(v165, v245);
          char v170 = v231;
          v232((char *)v231, 1, 1, v250);
          sub_1009315A8(v252._countAndFlagsBits, (uint64_t)v252._object, v253, v229, v230, v243, v244, v170);
          sub_10002B770((uint64_t)v170, &qword_100ACB910);
LABEL_63:
          sub_10092D018(v251, type metadata accessor for Signpost);
          uint64_t v164 = (uint64_t)v247;
          return sub_10002B770(v164, &qword_100ACB910);
        }
        sub_10001158C(v110, v109, type metadata accessor for VFSItem);
        uint64_t v137 = v109 + *(int *)(v99 + 28);
        uint64_t v138 = type metadata accessor for ItemMetadata();
        int v139 = *(unsigned __int8 *)(v137 + *(int *)(v138 + 68));
        if (v139 == 2)
        {
          sub_1009381C4(v109, v111, type metadata accessor for VFSItem);
        }
        else
        {
          uint64_t v143 = v138;
          sub_1009381C4(v109, v111, type metadata accessor for VFSItem);
          if (v139)
          {
            int v155 = *(unsigned __int8 *)(v111 + *(int *)(v99 + 28) + *(int *)(v143 + 80));
            sub_10092D018(v111, type metadata accessor for VFSItem);
            if (v155 != 1)
            {
              os_log_type_t v156 = sub_1008DF6F0();
              if (*(void *)(v157 + 8))
              {
                uint64_t v158 = v252._object;
                swift_bridgeObjectRetain();
                sub_100494FA0(v259, v252._countAndFlagsBits, (Swift::Int)v158);
                ((void (*)(uint64_t *, void))v156)(v260, 0);
                swift_bridgeObjectRelease();
              }
              else
              {
                ((void (*)(uint64_t *, void))v156)(v260, 0);
              }
              id v206 = (id)fpfs_current_or_default_log();
              unint64_t v207 = v219;
              sub_10096B490();
              unint64_t v208 = sub_10096B470();
              os_log_type_t v209 = sub_10096C5A0();
              if (os_log_type_enabled(v208, v209))
              {
                uint64_t v210 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v210 = 134349056;
                unint64_t v207 = v219;
                v260[0] = (uint64_t)v253;
                sub_10096C8C0();
                _os_log_impl((void *)&_mh_execute_header, v208, v209, "Ignoring event for item in an ignored folder fileID(%{public}llu)", v210, 0xCu);
                swift_slowDealloc();
              }

              (*(void (**)(char *, uint64_t))(v246 + 8))(v207, v245);
              uint64_t v151 = v231;
              uint64_t v152 = (uint64_t)v231;
              uint64_t v153 = 1;
              uint64_t v154 = v250;
              goto LABEL_51;
            }
LABEL_47:
            id v144 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            uint64_t v145 = (uint64_t)v226;
            sub_1009381C4(v109, (uint64_t)v226, type metadata accessor for VFSItem);
            uint64_t v146 = sub_10096B470();
            os_log_type_t v147 = sub_10096C5A0();
            if (os_log_type_enabled(v146, v147))
            {
              unint64_t v148 = (uint8_t *)swift_slowAlloc();
              v260[0] = swift_slowAlloc();
              *(_DWORD *)unint64_t v148 = 136315138;
              uint64_t v149 = sub_100262BFC();
              v259[0] = sub_100719D44(v149, v150, v260);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              sub_10092D018(v145, type metadata accessor for VFSItem);
              _os_log_impl((void *)&_mh_execute_header, v146, v147, "Delivering FSEvent notification for change on %s", v148, 0xCu);
              swift_arrayDestroy();
              uint64_t v109 = (uint64_t)v242;
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v246 + 8))(v241, v245);
            }
            else
            {
              sub_10092D018(v145, type metadata accessor for VFSItem);

              (*(void (**)(char *, uint64_t))(v246 + 8))(v108, v245);
            }
            uint64_t v151 = v231;
            sub_1009381C4(v109, (uint64_t)v231, type metadata accessor for VFSItem);
            uint64_t v152 = (uint64_t)v151;
            uint64_t v153 = 0;
            uint64_t v154 = v99;
LABEL_51:
            v232((char *)v152, v153, 1, v154);
            sub_1009315A8(v252._countAndFlagsBits, (uint64_t)v252._object, v253, v229, v230, v243, v244, v151);
            sub_10002B770((uint64_t)v151, &qword_100ACB910);
            sub_10092D018(v109, type metadata accessor for VFSItem);
            goto LABEL_63;
          }
        }
        sub_10092D018(v111, type metadata accessor for VFSItem);
        goto LABEL_47;
      }
LABEL_93:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v6);
    }
LABEL_92:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v6);
  }
  uint64_t v62 = v252._object;
  swift_bridgeObjectRetain();
  char v63 = sub_100496ED4((uint64_t)v259, (Swift::UInt64)v253, v252._countAndFlagsBits, (Swift::UInt64)v62);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, void))v60)(v260, 0);
  uint64_t v64 = v23;
  if (v63) {
    goto LABEL_8;
  }
  id v65 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v66 = v252._object;
  swift_bridgeObjectRetain_n();
  uint64_t v67 = sub_10096B470();
  os_log_type_t v68 = sub_10096C5A0();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    v260[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 134218242;
    v259[0] = (Swift::Int)v253;
    sub_10096C8C0();
    *(_WORD *)(v69 + 12) = 2080;
    swift_bridgeObjectRetain();
    v259[0] = sub_100719D44(v252._countAndFlagsBits, (unint64_t)v66, v260);
    sub_10096C8C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "deduplicating FSEvent lookup for %llu at %s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v246 + 8))(v57, v245);
  if (v243)
  {
    uint64_t v101 = sub_1008DF6F0();
    if (*(void *)(v100 + 8))
    {
      uint64_t v102 = v100;
      uint64_t v103 = v243;
      uint64_t v104 = (uint64_t)v223;
      *uint64_t v223 = v243;
      *(unsigned char *)(v104 + 8) = 0;
      uint64_t v105 = type metadata accessor for SyncState();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v104, 0, 1, v105);
      sub_100360C44(v104, 3);
      *(void *)(v102 + 48) = v103;
      *(unsigned char *)(v102 + 56) = 0;
    }
    ((void (*)(uint64_t *, void))v101)(v260, 0);
    uint64_t v66 = v252._object;
  }
  return sub_1009125E4(v244, v252._countAndFlagsBits, (uint64_t)v66, v253);
}

uint64_t _s9libfssync11VFSFileTreeC30subscriptionHandleDroppedEventyySo20FSChangeSubscriptionCF_0()
{
  uint64_t v1 = sub_10096B3D0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  if (qword_100ACC1D0 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_100B0B650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
  sub_10002B70C((uint64_t)v10, (uint64_t)v8, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    id v12 = v11;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v8, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  }
  sub_10096C780();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v13 = swift_allocObject();
  long long v24 = xmmword_100973BB0;
  *(_OWORD *)(v13 + 16) = xmmword_100973BB0;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000240A4();
  *(void *)(v13 + 32) = 0x20646570706F7244;
  *(void *)(v13 + 40) = 0xEF746E6576455346;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10002B770((uint64_t)v10, &qword_100AD0830);
  uint64_t v14 = v0 + qword_100B0B640;
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __CFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v14 + 16) = v18;
    uint64_t v19 = *(void (**)(uint64_t, void *, void, void))(v0 + 16);
    if (v19)
    {
      sub_10002B7CC(&qword_100AD0D48);
      uint64_t v20 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100AD0D50) - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v24;
      unint64_t v23 = v22 + v21;
      *(unsigned char *)unint64_t v23 = 1;
      *(void *)(v23 + 8) = 3;
      *(unsigned char *)(v23 + 16) = 1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v19(v22, _swiftEmptyArrayStorage, 0, 0);
      sub_1000705CC((uint64_t)v19);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10093731C(unint64_t a1)
{
  uint64_t v3 = sub_10096B3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v41 - v11;
  if (qword_100ACC1D0 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100B0B650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  unint64_t v42 = a1;
  id v14 = sub_10093C344(a1);
  uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v17 = v16;

  sub_10002B70C((uint64_t)v12, (uint64_t)v10, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    id v18 = v13;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v10, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  swift_bridgeObjectRetain();
  sub_10096C780();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v19 = swift_allocObject();
  long long v41 = xmmword_100973BB0;
  *(_OWORD *)(v19 + 16) = xmmword_100973BB0;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_1000240A4();
  *(void *)(v19 + 32) = v15;
  *(void *)(v19 + 40) = v17;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v12, &qword_100AD0830);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v43 = 0;
  swift_retain();
  uint64_t result = sub_10096B610();
  unint64_t v21 = (void (*)(uint64_t, uint64_t, void, void))v1[2];
  if (v21)
  {
    sub_10002B7CC(&qword_100AD0D48);
    uint64_t v22 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100AD0D50) - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v41;
    unint64_t v25 = v24 + v23;
    unint64_t v26 = v42;
    *(unsigned char *)unint64_t v25 = (v42 & 0xFFFFFFFFFFFFFFFELL) == 8;
    *(void *)(v25 + 8) = v26;
    *(unsigned char *)(v25 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    sub_10002B7CC(&qword_100ACF628);
    uint64_t v27 = *(void *)(type metadata accessor for SyncState() - 8);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100973BA0;
    unint64_t v31 = v30 + v29;
    swift_retain();
    *(void *)unint64_t v31 = FSEventsGetCurrentEventId();
    *(unsigned char *)(v31 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (void *)swift_retain();
    if (objc_sync_enter(v32)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v1);
    }
    uint64_t v33 = v1[20];
    swift_retain();
    if (objc_sync_exit(v1)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v1);
    }
    swift_release();
    uint64_t v34 = v31 + v28;
    uint64_t v35 = self;
    uint64_t v36 = *(unsigned int *)(v33 + 16);
    swift_release();
    id v37 = [v35 eventStreamUUIDForDevice:v36];
    if (v37)
    {
      uint64_t v38 = v37;
      sub_10096B140();

      uint64_t v39 = sub_10096B180();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v34, 0, 1, v39);
    }
    else
    {
      uint64_t v40 = sub_10096B180();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v34, 1, 1, v40);
    }
    swift_storeEnumTagMultiPayload();
    v21(v24, v30, 0, 0);
    sub_1000705CC((uint64_t)v21);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100937948()
{
  return sub_1000256AC((unint64_t *)&unk_100AD6EA0, (void (*)(uint64_t))type metadata accessor for VFSItem);
}

void sub_100937990()
{
  sub_100937B54(319, (unint64_t *)&qword_100ACD948);
  if (v0 <= 0x3F)
  {
    sub_100937B54(319, (unint64_t *)&qword_100AD0958);
    if (v1 <= 0x3F)
    {
      type metadata accessor for VFSCounters(319);
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

void sub_100937B54(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_10096B620();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t destroy for VFSEventAggregator()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  return a1;
}

__n128 initializeWithTake for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSEventAggregator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSEventAggregator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSEventAggregator()
{
  return &type metadata for VFSEventAggregator;
}

uint64_t sub_100937E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100937EA8);
}

uint64_t sub_100937EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100937F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100937F2C);
}

uint64_t sub_100937F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

unint64_t sub_100937FA0()
{
  unint64_t result = qword_100ADF110;
  if (!qword_100ADF110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF110);
  }
  return result;
}

uint64_t sub_100937FF4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093802C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 17) << 8));
}

uint64_t sub_100938070()
{
  return sub_10093B090();
}

uint64_t sub_100938078()
{
  uint64_t v1 = *(uint64_t (**)(Swift::Int, Swift::Int))(v0 + 32);
  Swift::tuple_purgedIngest_Int_purgedPropagate_Int_optional v3 = DocumentWharf.vacuum(upperBound:)(*(void *)(v0 + 24));
  if (v3.is_nil)
  {
    v3.value.purgedIngest = 0;
    v3.value.purgedPropagate = 0;
  }
  return v1(v3.value.purgedIngest, v3.value.purgedPropagate);
}

uint64_t sub_1009380D0()
{
  return sub_1008D541C(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_1009380DC()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + 32), v1);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938134()
{
  return sub_100912260(*(void *)(v0 + 16), (void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 80));
}

uint64_t sub_10093814C()
{
  return sub_100911F58(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_100938160()
{
  return sub_100910BAC(*(void *)(v0 + 16), *(void (**)(BOOL))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10093816C()
{
  return sub_100939644((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100938184()
{
  return sub_1009108A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100938194()
{
  return sub_100938288((uint64_t (*)(void, void, void, void, void))sub_10090FC90);
}

uint64_t sub_1009381AC@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100703B68(a1, a2, a3, a4);
}

uint64_t sub_1009381C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100938230()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938270()
{
  return sub_100938288((uint64_t (*)(void, void, void, void, void))sub_10090EC48);
}

uint64_t sub_100938288(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1009382A4(uint64_t a1)
{
  return sub_1005964D4(a1);
}

uint64_t sub_1009382C8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938308(uint64_t a1)
{
  return sub_10090E178(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_10093831C()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v18 + 24) & ~v18);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938698()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + v0;
  uint64_t v5 = *(void *)(v0 + 16);
  int v6 = *(unsigned __int8 *)(v0 + v3);
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);

  return sub_10090D318(v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_100938730()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938AA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(uint64_t (**)(void))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_10090D488(a1, v5, v7, v8);
}

uint64_t sub_100938B48(uint64_t a1)
{
  return sub_10090999C(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 41), *(void **)(v1 + 48));
}

uint64_t sub_100938B64(uint64_t a1)
{
  return sub_1009091D8(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 41), *(void **)(v1 + 48));
}

uint64_t sub_100938B7C(uint64_t a1)
{
  return sub_100244E84(a1);
}

uint64_t sub_100938B98(uint64_t a1)
{
  return sub_100938C0C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100908590);
}

uint64_t sub_100938BB4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938BF4(uint64_t a1)
{
  return sub_100938C0C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1009076E8);
}

uint64_t sub_100938C0C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_100938C28()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938C60(uint64_t a1)
{
  return sub_1009070C4(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100938C70()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100938CF0()
{
  return sub_100906648(*(char **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + 40, *(NSString **)(v0 + 136), *(NSURL **)(v0 + 144), *(void **)(v0 + 152), *(unsigned __int8 *)(v0 + 160), v0 + 168);
}

uint64_t sub_100938D34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100938D88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100938DE0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100938E68(uint64_t a1, uint64_t a2)
{
  return sub_10092E9FC(a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + 40, *(void **)(v2 + 136), *(void *)(v2 + 144), *(unsigned __int8 *)(v2 + 152), v2 + 160, *(void (**)(uint64_t))(v2 + 256), *(void *)(v2 + 264));
}

uint64_t sub_100938EB8()
{
  return sub_10093B090();
}

uint64_t sub_100938EC0()
{
  return sub_100903D44(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
}

uint64_t sub_100938F00()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100939004(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_10096AE50() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100904FD4(a1, a2, *(void **)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(void (**)(uint64_t))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1009390D8(uint64_t result)
{
  *(unsigned char *)(result + 120) = 3;
  return result;
}

uint64_t sub_1009390E4(uint64_t a1, uint64_t a2)
{
  return sub_1009062A0(a1, a2, *(void **)(v2 + 16)) & 1;
}

uint64_t sub_100939104()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100939164@<X0>(unsigned char *a1@<X8>)
{
  return sub_1008E793C(a1);
}

uint64_t sub_100939184@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10093B9D8(a1, a2);
}

uint64_t sub_10093919C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_10002B7CC(&qword_100ACB910) - 8) + 80);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + ((v1 + 160) & ~v1);
  unint64_t v3 = (int *)type metadata accessor for VFSItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v3 - 1) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v2 + v3[7];
    uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v6 = v4 + v5[7];
    uint64_t v7 = sub_10096B0E0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v4 + v5[8], v7);
    swift_bridgeObjectRelease();
    uint64_t v10 = v4 + v5[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
      v9(v10, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = (uint64_t *)(v4 + v5[33]);
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_10001E9C0(*v11, v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v2 + v3[8];
    if (*(void *)(v13 + 16) != 1)
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v13 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = v2 + v3[12];
    uint64_t v15 = sub_10002B7CC(&qword_100ACA8C0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      uint64_t v16 = sub_10096AE50();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
      }
    }
  }

  return swift_deallocObject();
}

uint64_t sub_10093956C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_10002B7CC(&qword_100ACB910) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1009037A0(a1, a2, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), v2 + 64, v2 + v6, *(unsigned char *)(v2 + v6 + *(void *)(v5 + 64)));
}

uint64_t sub_10093962C()
{
  return sub_100939644((void (*)(void))&_swift_release);
}

uint64_t sub_100939644(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100939694()
{
  uint64_t v1 = (int *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((((((((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 103) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[12];
  uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  unint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_10001E9C0(*v11, v12);
  }
  unint64_t v13 = (v3 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v0 + v3 + 16);
  if (v14 >> 60 != 11 && v14 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + v3 + 8), v14);
  }
  uint64_t v16 = v0 + v13;
  if (*(void *)(v0 + v13 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_100939998()
{
  uint64_t v1 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008FF184(*(uint64_t (**)(uint64_t, void))(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v4), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v0 + v5, *(void *)(v0 + ((v5 + 103) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((v5 + 103) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v0 + ((((((v5 + 103) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100939A84()
{
  swift_release();

  return swift_deallocObject();
}

double sub_100939ABC(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

void *sub_100939AF0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100939B4C()
{
  return swift_deallocObject();
}

uint64_t sub_100939B5C()
{
  uint64_t v1 = (int *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((((((((((((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 119) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[12];
  unint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  unint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_10001E9C0(*v11, v12);
  }
  unint64_t v13 = (v3 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  unint64_t v14 = *(void *)(v0 + v3 + 16);
  if (v14 >> 60 != 11 && v14 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + v3 + 8), v14);
  }
  uint64_t v16 = v0 + v13;
  if (*(void *)(v0 + v13 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_100939E90()
{
  uint64_t v1 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 119) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008F418C(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(void *)(v0 + v3), (_OWORD *)(v0 + v4), *(void *)(v0 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + v5), *(void *)(v0 + v6), *(void **)(v0 + v7), *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), (void *)(v0 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100939F98()
{
  return sub_1008D50EC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_100AD0E10);
}

uint64_t sub_100939FC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10093A010()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v21 + 96) & ~v21;
  swift_release();
  swift_release();
  unint64_t v3 = *(void *)(v0 + 48);
  if (v3 >> 60 != 15 && (v3 & 0xF000000000000000) != 0xB000000000000000) {
    sub_10001E9C0(*(void *)(v0 + 40), v3);
  }
  uint64_t v5 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v2 + v1[7];
  unint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v8 = v6 + v7[7];
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t *)(v6 + v7[33]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_10001E9C0(*v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v5 + v1[8];
  if (*(void *)(v15 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v5 + v1[12];
  uint64_t v17 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    uint64_t v18 = sub_10096AE50();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
    }
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093A3CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  return sub_1008F72B8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (void *)(v1 + 32), *(uint64_t **)(v1 + 88), v1 + v4, *(void *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t))(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10093A49C()
{
  return swift_deallocObject();
}

uint64_t sub_10093A4D4()
{
  uint64_t v1 = *(void *)(sub_10002B7CC(&qword_100ACB910) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  uint64_t v51 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v3 + v51 + 8) & ~v51;
  unint64_t v6 = (v5 + *(void *)(*(void *)(v4 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = type metadata accessor for VFSItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v9 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v0 + v2;
  unint64_t v52 = v7;
  uint64_t v53 = (int *)v8;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v2, 1, v8))
  {
    uint64_t v48 = (v3 + v51 + 8) & ~v51;
    uint64_t v49 = v4;
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + *(int *)(v8 + 28);
    uint64_t v12 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v13 = v11 + v12[7];
    uint64_t v14 = sub_10096B0E0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v16(v13, v14);
    v16(v11 + v12[8], v14);
    swift_bridgeObjectRelease();
    uint64_t v17 = v11 + v12[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14)) {
      v16(v17, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t *)(v11 + v12[33]);
    unint64_t v19 = v18[1];
    if (v19 >> 60 != 15) {
      sub_10001E9C0(*v18, v19);
    }
    swift_bridgeObjectRelease();
    unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = v10 + v53[8];
    uint64_t v4 = v49;
    uint64_t v5 = v48;
    if (*(void *)(v20 + 16) != 1)
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v20 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = v10 + v53[12];
    uint64_t v22 = sub_10002B7CC(&qword_100ACA8C0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
    {
      uint64_t v23 = sub_10096AE50();
      uint64_t v24 = *(void *)(v23 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
      }
    }
  }
  uint64_t v25 = v7 + v54;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = v0 + v5 + *(int *)(v4 + 40);
  uint64_t v27 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v28 = v26 + v27[7];
  uint64_t v29 = sub_10096B0E0();
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v31(v28, v29);
  v31(v26 + v27[8], v29);
  swift_bridgeObjectRelease();
  uint64_t v32 = v26 + v27[29];
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v50(v32, 1, v29)) {
    v31(v32, v29);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t *)(v26 + v27[33]);
  unint64_t v34 = v33[1];
  if (v34 >> 60 != 15) {
    sub_10001E9C0(*v33, v34);
  }
  uint64_t v35 = (v25 + 248) & ~v54;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v36 = v0 + v52;
  if (*(void *)(v0 + v52 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v36 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = v0 + v35;
  swift_bridgeObjectRelease();
  uint64_t v38 = v0 + v35 + v53[7];
  v31(v38 + v27[7], v29);
  v31(v38 + v27[8], v29);
  swift_bridgeObjectRelease();
  uint64_t v39 = v38 + v27[29];
  if (!v50(v39, 1, v29)) {
    v31(v39, v29);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t *)(v38 + v27[33]);
  unint64_t v41 = v40[1];
  if (v41 >> 60 != 15) {
    sub_10001E9C0(*v40, v41);
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = v37 + v53[8];
  if (*(void *)(v42 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v42 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = v37 + v53[12];
  uint64_t v44 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44))
  {
    uint64_t v45 = sub_10096AE50();
    uint64_t v46 = *(void *)(v45 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v43, 1, v45)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v43, v45);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_10093ADA0(uint64_t a1, void (*a2)(void))
{
  uint64_t v5 = *(void *)(sub_10002B7CC(&qword_100ACB910) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  unint64_t v8 = (v7 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = v10 + *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  return sub_1008F7C3C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(uint64_t (**)(void, void))(v2 + 32), *(NSURL **)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), *(unsigned char *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), v2 + v6, *(unsigned char *)(v2 + v7), *(unsigned char *)(v2 + v7 + 1), *(void *)(v2 + v8), v2 + v10, *(unsigned char *)(v2 + v11), *(void *)((v11 & 0xFFFFFFFFFFFFFFF8) + v2 + 8),
           (NSURL *)(v2 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)),
           v2
         + (((((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v12 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
}

double sub_10093AF70(uint64_t a1)
{
  *(void *)a1 = 6;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_10093AFA4(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_10093AFB0(uint64_t a1)
{
  return sub_100596794(a1, *(unsigned int *)(v1 + 16), *(void *)(v1 + 24), *(const void **)(v1 + 32));
}

uint64_t sub_10093AFE8@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1008FE3F4(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a4, *(unsigned char *)(v4 + 48), *(int ***)(v4 + 56), *(void **)(v4 + 64), *(int ***)(v4 + 72), *(void *)(v4 + 80), *(uint64_t **)(v4 + 88), *(void *)(v4 + 96));
}

uint64_t sub_10093B030(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008FCFF8(a1, a2, a3, a4, *(void **)(v4 + 16), *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(uint64_t **)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(uint64_t **)(v4 + 80), *(void (***)(uint64_t))(v4 + 88), *(uint64_t **)(v4 + 96));
}

uint64_t sub_10093B070@<X0>(uint64_t a1@<X8>)
{
  return sub_10093B158(a1);
}

uint64_t sub_10093B088()
{
  return sub_10093B090();
}

uint64_t sub_10093B090()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093B0DC(uint64_t a1)
{
  return sub_1008FDF10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_10093B0EC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1008FD944(a1, a2, a3, a4, *(_DWORD *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(unsigned char *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void **)(v4 + 80));
}

void *sub_10093B134@<X0>(int *a1@<X8>)
{
  return sub_1008FCDC0(*(void ***)(v1 + 16), a1);
}

uint64_t sub_10093B150()
{
  return sub_1008FCF64();
}

uint64_t sub_10093B158@<X0>(uint64_t a1@<X8>)
{
  return sub_100596C78(*(const void **)(v1 + 64), a1);
}

uint64_t sub_10093B1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100950BD4(a1, a2, a3, *(unsigned int **)(v3 + 16), *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_10093B1CC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_10096D2D0() & 1;
  }
}

uint64_t sub_10093B224()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10093B25C()
{
  uint64_t v1 = (int *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + v1[12];
  unint64_t v6 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v7 = v5 + v6[7];
  uint64_t v8 = sub_10096B0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(v5 + v6[33]);
  unint64_t v13 = v12[1];
  if (v13 >> 60 != 15) {
    sub_10001E9C0(*v12, v13);
  }
  unint64_t v14 = (v3 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v15 = *(void *)(v0 + v3 + 16);
  if (v15 >> 60 != 11 && v15 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v0 + v3 + 8), v15);
  }
  uint64_t v17 = v0 + v14;
  if (*(void *)(v0 + v14 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093B530()
{
  uint64_t v1 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = v0 + ((v5 + 255) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(uint64_t, void))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_1008F2868(v7, v6, v0 + v4, v0 + v5, v9, v10);
}

uint64_t sub_10093B5EC()
{
  uint64_t v1 = sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64) + v2;
  swift_release();
  swift_release();
  swift_release();
  unint64_t v4 = *(void *)(v0 + 64);
  if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000) {
    sub_10001E9C0(*(void *)(v0 + 56), v4);
  }
  unint64_t v6 = v3 + 7;
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + *(int *)(v1 + 40);
  uint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = (uint64_t *)(v7 + v8[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_10001E9C0(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v0 + v14;
  if (*(void *)(v0 + v14 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10093B8A4()
{
  uint64_t v1 = *(void *)(sub_10002B7CC((uint64_t *)&unk_100ADBFF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + ((v3 + 255) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008EE770(v4, v5, v6, v7, (uint64_t (*)(uint64_t))(v0 + 48), v0 + v2, v0 + v3, v8);
}

uint64_t sub_10093B950()
{
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000) {
    sub_10001E9C0(*(void *)(v0 + 56), v1);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093B9C4(uint64_t a1)
{
  return sub_1008EFF98(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48), *(void *)(v1 + 104));
}

uint64_t sub_10093B9D8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1008E7128(a1, *(void **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, unsigned char *, char *))(v2 + 24), *(void *)(v2 + 32));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10093BA0C()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  uint64_t v6 = v0 + v3;
  if (*(void *)(v0 + v3 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v6 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_10093BBC8(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008F0548(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t *))(v2 + 32), *(void *)(v2 + 40), *(void (**)(char *, uint64_t))(v2 + 48), *(void *)(v2 + 56), v2 + v6, *(void *)(v2 + v7), v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10093BC9C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1008F1B28(a1, a2, a3, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a4, *(void *)(v4 + 48));
}

uint64_t sub_10093BCCC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093BD2C()
{
  return sub_1008EE0E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), v0 + 40, *(void *)(v0 + 136), *(void *)(v0 + 144), *(void (**)(uint64_t, uint64_t))(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_10093BD48()
{
  return sub_1008D51BC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10093BD7C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093BDC4()
{
  return sub_1008EBE14(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned int *)(v0 + 28), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void, void))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10093BDE0()
{
  return sub_1008EBAF8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned int *)(v0 + 28), *(uint64_t (**)(void))(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10093BDF8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10093BE40()
{
  return sub_1008EAFF0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10093BE58()
{
  return sub_1008D50EC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_100ADE618);
}

uint64_t sub_10093BE80()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093BEC8(uint64_t a1)
{
  return sub_1008EB11C(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_10093BEDC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093BF14(uint64_t a1)
{
  return sub_1008EA0C0(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_10093BF24()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10093BFF0(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_10096AE50() - 8);
  unint64_t v6 = *(void (**)(void *))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1008EACEC(a1, v4, v6, v7, v8);
}

uint64_t sub_10093C074()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C160()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10093C1A0()
{
  sub_1008E7C10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t sub_10093C1B4()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C228()
{
  return sub_1008D50EC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_100AD5650);
}

uint64_t sub_10093C250()
{
  return sub_1008E270C(v0);
}

uint64_t sub_10093C26C()
{
  return sub_1008E2630(v0);
}

uint64_t sub_10093C288()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C2C0()
{
  return sub_1008E14B0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10093C2D0@<X0>(void *a1@<X8>)
{
  return sub_100915B2C(a1);
}

uint64_t sub_10093C2F8()
{
  return sub_100915BA8();
}

void sub_10093C320(void *a1@<X8>)
{
  sub_10070371C(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

id sub_10093C344(unint64_t a1)
{
  if (a1 <= 0xA)
  {
    uint64_t v1 = (void *)*((void *)&off_100AA5EC8 + a1);
    id v2 = *((id *)&off_100AA5E70 + a1);
  }

  return v1;
}

uint64_t sub_10093C398@<X0>(void *a1@<X8>)
{
  return sub_100915B2C(a1);
}

uint64_t sub_10093C3C0()
{
  return sub_100915BA8();
}

uint64_t sub_10093C3E8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10093C46C(uint64_t a1)
{
  return sub_10090BC18(a1, *(NSObject **)(v1 + 16), *(void **)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_10093C478()
{
  swift_errorRelease();

  return swift_deallocObject();
}

void sub_10093C4B4(uint64_t a1)
{
  sub_10090CFA4(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_10093C4D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C520()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C578(uint64_t a1, char a2)
{
  return sub_10090D828(a1, a2 & 1, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_10093C5C8()
{
  return sub_1008D51BC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t (*)(void))&_swift_release);
}

double sub_10093C600(uint64_t a1)
{
  *(void *)a1 = 3;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

void sub_10093C634(uint64_t a1)
{
  sub_1008E96E4(a1, *(unsigned char **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10093C654()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093C68C(uint64_t a1)
{
  return sub_1008D5CDC(a1, *(void *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10093C698()
{
  return swift_deallocObject();
}

uint64_t sub_10093C6A8(uint64_t a1, uint64_t a2)
{
  return sub_10092DD18(a2, *(uint64_t (**)(uint64_t))(v2 + 16));
}

uint64_t sub_10093C6BC()
{
  uint64_t v1 = type metadata accessor for VFSItem(0);
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v27 + 32) & ~v27;
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  uint64_t v5 = *(unsigned __int8 *)(v24 + 80);
  swift_release();
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v26 = v1;
  uint64_t v7 = v0 + v2 + *(int *)(v1 + 28);
  uint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v6 + *(int *)(v26 + 32);
  if (*(void *)(v16 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (v3 + v5 + 9) & ~v5;
  uint64_t v18 = v6 + *(int *)(v26 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v18, 1, v25))
  {
    uint64_t v19 = sub_10096AE50();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
  }
  swift_release();
  uint64_t v21 = sub_10096AE50();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v0 + v17, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0 + v17, v21);
  }

  return swift_deallocObject();
}

uint64_t sub_10093CAF8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_10002B7CC(&qword_100ACA8C0) - 8);
  uint64_t v7 = *(uint64_t (**)(void))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void **)(v1 + v5);
  uint64_t v10 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  int v11 = *(unsigned __int8 *)(v1 + v5 + 8);

  return sub_10090B760(a1, v7, v8, v1 + v4, v9, v11, v10);
}

uint64_t sub_10093CBEC(uint64_t a1)
{
  return sub_100596A4C(a1, *(unsigned int *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned int *)(v1 + 40), *(const void **)(v1 + 48));
}

uint64_t sub_10093CC2C(uint64_t result)
{
  *(unsigned char *)(result + 120) = 9;
  return result;
}

uint64_t sub_10093CC3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10093CC8C(uint64_t a1)
{
  sub_1008E6E68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void (**)(void *, uint64_t))(v1 + 56));
}

uint64_t sub_10093CCA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093CCD8()
{
  return sub_1008E46EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

double sub_10093CCE4(uint64_t a1)
{
  *(void *)a1 = 5;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

void sub_10093CD18(int a1, uint64_t a2, void *a3)
{
  sub_1008E12B8(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_10093CD20(void *a1, void *a2, char a3)
{
  if (a3)
  {
    swift_errorRelease();
  }
  else
  {
  }
}

void sub_10093CD6C(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  if (a5)
  {
    swift_errorRelease();
  }
  else
  {
  }
}

uint64_t sub_10093CDB8(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return a3();
  }
}

uint64_t sub_10093CDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100913A04(a1, a2, v3, a3);
}

uint64_t sub_10093CDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10093CDFC(a1, a2);
}

uint64_t sub_10093CDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1008E74E8(a1, *(void **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, unsigned char *, char *))(v2 + 24), *(void *)(v2 + 32));
  if (!v3)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v6;
    *(unsigned char *)(a2 + 9) = HIBYTE(v6) & 1;
  }
  return result;
}

uint64_t sub_10093CE3C@<X0>(_DWORD *a1@<X8>)
{
  return sub_100913AB0(*(void **)(v1 + 48), a1);
}

uint64_t sub_10093CE60(uint64_t a1)
{
  return sub_1008DEF78(a1, *(void *)(v1 + 16));
}

uint64_t sub_10093CE68()
{
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093CED0()
{
  return sub_1008EC5A8(v0 + 16, *(void (**)(uint64_t *))(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(unsigned __int8 *)(v0 + 136), *(void **)(v0 + 144), *(void *)(v0 + 152));
}

uint64_t sub_10093CEEC()
{
  return sub_1008D50EC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_100ADF160);
}

uint64_t sub_10093CF14()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v18 + 41) & ~v18);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_10001E9C0(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  if (*(void *)(v12 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + v1[12];
  uint64_t v14 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_10096AE50();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093D298(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008ED058(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), v2 + v6, *(void **)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

double sub_10093D35C(uint64_t a1)
{
  *(void *)a1 = 12;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_10093D394()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093D3E4()
{
  return sub_1008E7F40(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void (**)(void, void))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(uint64_t **)(v0 + 64), *(uint64_t **)(v0 + 72));
}

uint64_t sub_10093D400()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10093D4E8(uint64_t a1)
{
  return sub_10093DAA4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_100900B2C);
}

uint64_t sub_10093D500()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  swift_release();
  uint64_t v21 = v2;
  uint64_t v22 = v1;
  uint64_t v20 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v20(v0 + v3, v1);
  swift_release();
  uint64_t v6 = v0 + ((v4 + v23 + 8) & ~v23);
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v5[7];
  uint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v6 + v5[8];
  if (*(void *)(v16 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v17 = v6 + v5[12];
  uint64_t v18 = sub_10002B7CC(&qword_100ACA8C0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18)&& !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v22))
  {
    v20(v17, v22);
  }

  return swift_deallocObject();
}

uint64_t sub_10093D8AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void **)(v1 + v5);
  uint64_t v10 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10090130C(a1, v7, v8, v1 + v4, v9, v10);
}

uint64_t sub_10093D994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100596974(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_10093D9B4()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10093DA8C(uint64_t a1)
{
  return sub_10093DAA4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_100901864);
}

uint64_t sub_10093DAA4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_10096AE50() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *(unsigned __int8 *)(v2 + 40);

  return a2(a1, v6, v7, v8, v10, v2 + v5, v9);
}

uint64_t sub_10093DB60()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10093DC4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  int v12 = *(unsigned __int8 *)(v1 + 40);

  return sub_1009002F0(a1, v5, v6, v7, v12, v8, v10, v11);
}

uint64_t sub_10093DCF8()
{
  return sub_100911D18(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_10093DD14()
{
  return sub_10090DB88(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_10093DD20()
{
  return sub_10090DE94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

unsigned char *storeEnumTagSinglePayload for VFSCounters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10093DDF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSCounters.CodingKeys()
{
  return &type metadata for VFSCounters.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for VFSEventAggregator.FileIDAndPath(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VFSEventAggregator.FileIDAndPath()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for VFSEventAggregator.FileIDAndPath(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VFSEventAggregator.FileIDAndPath(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VFSEventAggregator.FileIDAndPath()
{
  return &type metadata for VFSEventAggregator.FileIDAndPath;
}

unint64_t sub_10093DF0C()
{
  unint64_t result = qword_100ADF180;
  if (!qword_100ADF180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF180);
  }
  return result;
}

unint64_t sub_10093DF64()
{
  unint64_t result = qword_100ADF188;
  if (!qword_100ADF188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF188);
  }
  return result;
}

unint64_t sub_10093DFBC()
{
  unint64_t result = qword_100ADF190;
  if (!qword_100ADF190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF190);
  }
  return result;
}

unint64_t sub_10093E014()
{
  unint64_t result = qword_100ADF198;
  if (!qword_100ADF198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF198);
  }
  return result;
}

uint64_t sub_10093E070(uint64_t a1)
{
  return sub_1009382A4(a1);
}

void sub_10093E088(void *a1@<X8>)
{
}

uint64_t sub_10093E0A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100939164(a1);
}

void *sub_10093E174(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_10096B400();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_10093E26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_10096B400();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_10093E2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10093E37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10093E42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10093E4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10093E57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10093E590);
}

uint64_t sub_10093E590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B400();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10093E664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10093E678);
}

uint64_t sub_10093E678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10096B400();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for TelemetrySignposter(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADF1F8);
}

uint64_t sub_10093E758()
{
  uint64_t result = sub_10096B400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10093E804(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10096B3D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (char *)a1 + v9;
    unsigned int v12 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    id v13 = v10;
  }
  return a1;
}

void sub_10093E8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_10093E960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  id v12 = v9;
  return a1;
}

uint64_t sub_10093E9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  return a1;
}

uint64_t sub_10093EAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_10093EB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  return a1;
}

uint64_t sub_10093EBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10093EBEC);
}

uint64_t sub_10093EBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100942314(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for OSSignpostID);
}

uint64_t sub_10093EC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10093EC18);
}

uint64_t sub_10093EC18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100942404(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for OSSignpostID);
}

uint64_t type metadata accessor for Signpost(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADF290);
}

uint64_t sub_10093EC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1009424F4(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for OSSignpostID);
}

uint64_t sub_10093EC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v61 = sub_10096B3D0();
  uint64_t v65 = *(void *)(v61 - 8);
  uint64_t v6 = __chkstk_darwin(v61);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v54 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v54 - v11;
  uint64_t v13 = sub_10096B400();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v54 - v18;
  id v20 = objc_msgSend(self, "fp_coordinatorReadingOptions:", a1);
  uint64_t v59 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v22 = v21;

  uint64_t v23 = type metadata accessor for TelemetrySignposter(0);
  int v24 = *(unsigned __int8 *)(v3 + *(int *)(v23 + 28));
  uint64_t v25 = v3 + *(int *)(v23 + 24);
  uint64_t v62 = v14;
  uint64_t v63 = v13;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  if (v24 == 1)
  {
    v26(v19, v25, v13);
    uint64_t v27 = *(const char **)v3;
    char v28 = *(unsigned char *)(v3 + 16);
    sub_10096B3E0();
    sub_10096B3B0();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10096B3E0();
    int v30 = sub_10096C770();
    uint64_t v31 = v3;
    if (sub_10096C870())
    {
      os_log_t v57 = v29;
      uint64_t v58 = a2;
      uint64_t v60 = v3;
      int v56 = v30;
      if ((v28 & 1) == 0)
      {
        uint64_t v32 = v64;
        if (v27)
        {
          uint64_t v33 = v65;
          uint64_t v54 = v27;
LABEL_16:
          uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
          uint64_t v41 = v61;
          v55(v32, v12, v61);
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          uint64_t v67 = swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v66 = sub_100719D44(v59, v22, &v67);
          sub_10096C8C0();
          uint64_t v40 = v41;
          uint64_t v43 = v64;
          swift_bridgeObjectRelease_n();
          os_signpost_id_t v44 = sub_10096B3C0();
          os_log_t v45 = v57;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, (os_signpost_type_t)v56, v44, v54, "  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s\n  enableTelemetry=YES\")", v42, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v39 = v65;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v40);
          a2 = v58;
          uint64_t v31 = v60;
          v55(v43, v12, v40);
          goto LABEL_24;
        }
        goto LABEL_31;
      }
      if (!((unint64_t)v27 >> 32))
      {
        uint64_t v32 = v64;
        if (v27 >> 11 == 27)
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v27 >> 16 <= 0x10)
        {
          uint64_t v54 = &v68;
          uint64_t v33 = v65;
          goto LABEL_16;
        }
        goto LABEL_27;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRelease_n();

    uint64_t v39 = v65;
    uint64_t v40 = v61;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v64, v12, v61);
LABEL_24:
    sub_10096B450();
    swift_allocObject();
    uint64_t v51 = sub_10096B440();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v63);
    sub_100941B18(v31, a2, type metadata accessor for TelemetrySignposter);
    uint64_t v52 = *(void *)(v31 + 24);
    uint64_t result = type metadata accessor for TelemetrySignpost(0);
    *(void *)(a2 + *(int *)(result + 20)) = v51;
    *(void *)(a2 + *(int *)(result + 24)) = v52;
    return result;
  }
  v26(v17, v25, v13);
  unint64_t v34 = *(const char **)v3;
  uint64_t v60 = v3;
  char v35 = *(unsigned char *)(v3 + 16);
  sub_10096B3E0();
  sub_10096B3B0();
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_10096B3E0();
  int v37 = sub_10096C770();
  if ((sub_10096C870() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    uint64_t v39 = v65;
    uint64_t v40 = v61;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v64, v8, v61);
LABEL_23:
    uint64_t v12 = v8;
    uint64_t v19 = v17;
    uint64_t v31 = v60;
    goto LABEL_24;
  }
  os_log_t v57 = v36;
  uint64_t v58 = a2;
  int v56 = v37;
  if (v35)
  {
    if ((unint64_t)v34 >> 32) {
      goto LABEL_26;
    }
    if (v34 >> 11 == 27)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_32;
    }
    if (v34 >> 16 > 0x10) {
      goto LABEL_28;
    }
    uint64_t v54 = &v69;
    uint64_t v38 = v65;
    goto LABEL_22;
  }
  if (v34)
  {
    uint64_t v38 = v65;
    uint64_t v54 = v34;
LABEL_22:
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    uint64_t v46 = v64;
    uint64_t v47 = v61;
    v55(v64, v8, v61);
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_100719D44(v59, v22, &v67);
    sub_10096C8C0();
    uint64_t v40 = v47;
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v49 = sub_10096B3C0();
    os_log_t v50 = v57;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, (os_signpost_type_t)v56, v49, v54, "  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s\n  enableTelemetry=NO\")", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v39 = v65;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v47);
    a2 = v58;
    v55(v46, v8, v47);
    goto LABEL_23;
  }
LABEL_32:
  uint64_t result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t sub_10093F3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  char v10 = FileItem.kind.getter(a1, a2);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(a2 + 104);
  if (v10 == 1)
  {
    v11(a1, a2);
    uint64_t v12 = *((unsigned int *)v9 + 1);
    int v13 = v9[8];
    sub_100941BD4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    if (v13) {
      return 0;
    }
  }
  else
  {
    v11(a1, a2);
    uint64_t v12 = *(void *)&v7[*(int *)(v4 + 100)];
    sub_100941BD4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  }
  return v12;
}

uint64_t sub_10093F510(const char *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v86 = a1;
  uint64_t v5 = (const char *)sub_10096B410();
  uint64_t v83 = *((void *)v5 - 1);
  int v84 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v80 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v82 = (char *)&v79 - v8;
  uint64_t v9 = sub_10096B3D0();
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v79 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v85 = (char *)&v79 - v16;
  __chkstk_darwin(v15);
  int v91 = (char *)&v79 - v17;
  uint64_t v18 = type metadata accessor for TelemetrySignpost(0);
  uint64_t v19 = __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v79 - v22;
  uint64_t v23 = sub_10096B400();
  uint64_t v95 = *(char **)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v87 = (char *)&v79 - v27;
  uint64_t v28 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v79 - v32;
  int v81 = a2;
  uint64_t v94 = v18;
  if ((a2 & 0x80) == 0)
  {
    uint64_t v90 = v23;
    id v34 = objc_allocWithZone((Class)NSNumber);
    id v35 = [v34 initWithInteger:v86];
    sub_100845F00(2);
    int v37 = v36;

    if (v37)
    {
      uint64_t v89 = (char *)[v37 integerValue];
    }
    else
    {
      uint64_t v89 = 0;
    }
    uint64_t v47 = v90;
    uint64_t v48 = v91;
    os_signpost_id_t v49 = v95;
    unint64_t v21 = v88;
    sub_100941B18(v3, (uint64_t)v33, type metadata accessor for TelemetrySignposter);
    os_log_t v50 = v87;
    (*((void (**)(const char *, char *, uint64_t))v49 + 4))(v87, &v33[*(int *)(v28 + 24)], v47);
    uint64_t v51 = *(const char **)v3;
    char v52 = *(unsigned char *)(v3 + 16);
    sub_100941B18(v3, (uint64_t)v21, type metadata accessor for TelemetrySignpost);
    sub_100941B80();
    sub_100941A88();
    sub_1000705CC(v53);
    sub_1000326E8();
    sub_100941A88();
    sub_1000705CC(v54);
    uint64_t v55 = sub_10096B3E0();
    sub_10096B430();
    LODWORD(v88) = sub_10096C760();
    if ((sub_10096C870() & 1) == 0) {
      goto LABEL_13;
    }
    if ((v52 & 1) == 0)
    {
      os_signpost_id_t v49 = v82;
      if (!v51)
      {
        sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);
        __break(1u);
LABEL_13:
        sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);

        (*(void (**)(char *, uint64_t))(v92 + 8))(v48, v93);
        return (*((uint64_t (**)(const char *, uint64_t))v49 + 1))(v50, v47);
      }
      goto LABEL_19;
    }
    os_signpost_id_t v49 = v82;
    if ((unint64_t)v51 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v51 >> 11 == 27)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v51 >> 16 <= 0x10)
      {
        uint64_t v51 = &v98;
LABEL_19:
        uint64_t v86 = v51;
        unsigned int v57 = v81;
        swift_retain();
        sub_10096B460();
        swift_release();
        uint64_t v59 = v83;
        uint64_t v58 = v84;
        if ((*(unsigned int (**)(char *, const char *))(v83 + 88))(v49, v84) == enum case for OSSignpostError.doubleEnd(_:))
        {
          char v60 = 0;
          char v61 = 0;
          int v84 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v59 + 8))(v49, v58);
          int v84 = "  state=%{public, signpost.telemetry:string2, name=state,public}s\n"
                "  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu\n"
                "  size=%{public, signpost.telemetry:number2, name=size,public}ld";
          char v61 = 2;
          char v60 = 3;
        }
        uint64_t v62 = v92;
        uint64_t v63 = v48;
        uint64_t v64 = v93;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v85, v63, v93);
        uint64_t v65 = swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        *(unsigned char *)uint64_t v65 = v61;
        *(unsigned char *)(v65 + 1) = v60;
        *(_WORD *)(v65 + 2) = 2082;
        if (v57) {
          unint64_t v66 = 0xEB00000000726964;
        }
        else {
          unint64_t v66 = 0xEB00000000636F64;
        }
        if (v57 >= 0x40) {
          uint64_t v67 = 0x5F73736563637573;
        }
        else {
          uint64_t v67 = 0x5F79646165726C61;
        }
        uint64_t v96 = sub_100719D44(v67, v66, &v97);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 12) = 2050;
        uint64_t v96 = *(void *)&v21[*(int *)(v94 + 24)];
        sub_10096C8C0();
        sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);
        *(_WORD *)(v65 + 22) = 2050;
        uint64_t v96 = (uint64_t)v89;
        sub_10096C8C0();
        char v68 = v85;
        os_signpost_id_t v69 = sub_10096B3C0();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v55, (os_signpost_type_t)v88, v69, v86, v84, (uint8_t *)v65, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v70 = *(void (**)(char *, uint64_t))(v62 + 8);
        v70(v91, v64);
        (*((void (**)(const char *, uint64_t))v95 + 1))(v50, v90);
        return ((uint64_t (*)(char *, uint64_t))v70)(v68, v64);
      }
    }
    __break(1u);
    goto LABEL_40;
  }
  int v91 = v12;
  sub_100941B18(v3, (uint64_t)v31, type metadata accessor for TelemetrySignposter);
  (*((void (**)(char *, char *, uint64_t))v95 + 4))(v26, &v31[*(int *)(v28 + 24)], v23);
  uint64_t v38 = *(const char **)v3;
  char v39 = *(unsigned char *)(v3 + 16);
  sub_100941B18(v3, (uint64_t)v21, type metadata accessor for TelemetrySignpost);
  sub_100941B80();
  sub_100941A88();
  sub_1000705CC(v40);
  uint64_t v41 = sub_10096B3E0();
  uint64_t v42 = v89;
  sub_10096B430();
  int v43 = sub_10096C760();
  if ((sub_10096C870() & 1) == 0)
  {
    sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v42, v93);
    return (*((uint64_t (**)(char *, uint64_t))v95 + 1))(v26, v23);
  }
  uint64_t v90 = v23;
  LODWORD(v88) = v43;
  if (v39)
  {
    uint64_t v45 = v83;
    os_signpost_id_t v44 = v84;
    if ((unint64_t)v38 >> 32)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v46 = v80;
    if (v38 >> 11 == 27)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v38 >> 16 > 0x10) {
      goto LABEL_41;
    }
    uint64_t v38 = &v99;
  }
  else
  {
    uint64_t v45 = v83;
    os_signpost_id_t v44 = v84;
    if (!v38)
    {
LABEL_44:
      uint64_t result = sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);
      __break(1u);
      return result;
    }
    uint64_t v46 = v80;
  }
  swift_retain();
  sub_10096B460();
  swift_release();
  int v71 = (*(uint64_t (**)(char *, const char *))(v45 + 88))(v46, v44);
  uint64_t v79 = v26;
  if (v71 == enum case for OSSignpostError.doubleEnd(_:))
  {
    char v72 = 0;
    uint64_t v87 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, const char *))(v45 + 8))(v46, v44);
    uint64_t v87 = "  state=%{public, signpost.telemetry:string2, name=state,public}s\n"
          "  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu";
    char v72 = 2;
  }
  uint64_t v73 = v91;
  uint64_t v74 = v92;
  uint64_t v75 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v91, v89, v93);
  uint64_t v76 = swift_slowAlloc();
  uint64_t v97 = swift_slowAlloc();
  *(unsigned char *)uint64_t v76 = v72;
  *(unsigned char *)(v76 + 1) = v72;
  *(_WORD *)(v76 + 2) = 2082;
  uint64_t v96 = sub_100719D44(1818845542, 0xE400000000000000, &v97);
  sub_10096C8C0();
  *(_WORD *)(v76 + 12) = 2050;
  uint64_t v96 = *(void *)&v21[*(int *)(v94 + 24)];
  sub_10096C8C0();
  sub_100941BD4((uint64_t)v21, type metadata accessor for TelemetrySignpost);
  os_signpost_id_t v77 = sub_10096B3C0();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v41, (os_signpost_type_t)v88, v77, v38, v87, (uint8_t *)v76, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v78 = *(void (**)(char *, uint64_t))(v74 + 8);
  v78(v89, v75);
  (*((void (**)(char *, uint64_t))v95 + 1))(v79, v90);
  return ((uint64_t (*)(char *, uint64_t))v78)(v73, v75);
}

uint64_t sub_1009400AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v30 = a1;
  LODWORD(v31) = a3;
  uint64_t v13 = sub_10002B7CC(&qword_100AD0830);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10096B3D0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(a4, (uint64_t)v15, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    id v20 = a7;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v15, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  char v21 = (char)v31;
  uint64_t v22 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(a8, v19, v16);
  uint64_t v23 = type metadata accessor for Signpost(0);
  *(void *)(a8 + *(int *)(v23 + 20)) = a7;
  uint64_t v24 = a8 + *(int *)(v23 + 24);
  *(void *)uint64_t v24 = v22;
  *(void *)(v24 + 8) = a2;
  *(unsigned char *)(v24 + 16) = v21;
  if (a6)
  {
    id v31 = a7;
    swift_bridgeObjectRetain();
    sub_10096C770();
    sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100973BB0;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_1000240A4();
    *(void *)(v25 + 32) = v29;
    *(void *)(v25 + 40) = a6;
    sub_10096B390();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = a7;
    sub_10096C770();
    sub_10096B3A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_100940388()
{
  sub_100940438();
  uint64_t result = sub_10096C880();
  qword_100B0B648 = result;
  return result;
}

uint64_t sub_1009403E4()
{
  sub_100940438();
  uint64_t result = sub_10096C880();
  qword_100B0B650 = result;
  return result;
}

unint64_t sub_100940438()
{
  unint64_t result = qword_100ACBE40;
  if (!qword_100ACBE40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100ACBE40);
  }
  return result;
}

unint64_t sub_100940478()
{
  uint64_t v35 = sub_10002B7CC(&qword_100ADF2D8);
  __chkstk_darwin(v35);
  unint64_t v1 = (char *)&v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10096B950();
  uint64_t v34 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096BCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096B8A0();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v33 - v13;
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BC90();
  uint64_t v14 = sub_10096BC40();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v16 >> 60 == 15) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v14;
  }
  if (v16 >> 60 == 15) {
    unint64_t v18 = 0xC000000000000000;
  }
  else {
    unint64_t v18 = v16;
  }
  sub_100941D4C((unint64_t *)&qword_100AD9EE0, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_10096B890();
  switch(v18 >> 62)
  {
    case 1uLL:
      if (v17 >> 32 < (int)v17) {
        goto LABEL_34;
      }
      sub_10001EBB0(v17, v18);
      sub_100941C6C((int)v17, v17 >> 32);
      break;
    case 2uLL:
      uint64_t v19 = *(void *)(v17 + 16);
      uint64_t v20 = *(void *)(v17 + 24);
      sub_10001EBB0(v17, v18);
      swift_retain();
      swift_retain();
      sub_100941C6C(v19, v20);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v39 + 6) = 0;
      *(void *)&long long v39 = 0;
      goto LABEL_13;
    default:
      *(void *)&long long v39 = v17;
      WORD4(v39) = v18;
      BYTE10(v39) = BYTE2(v18);
      BYTE11(v39) = BYTE3(v18);
      BYTE12(v39) = BYTE4(v18);
      BYTE13(v39) = BYTE5(v18);
LABEL_13:
      sub_10096B870();
      break;
  }
  sub_10001E9C0(v17, v18);
  char v21 = v38;
  sub_10096B880();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v2);
  sub_10001E9C0(v17, v18);
  uint64_t v22 = v36;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  uint64_t v24 = v21;
  uint64_t v25 = v37;
  v23(v1, v24, v37);
  *(void *)&v1[*(int *)(v35 + 36)] = 8;
  v23(v12, v1, v25);
  sub_100941D4C(&qword_100ADF2E0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  sub_10096BEF0();
  sub_10002B770((uint64_t)v1, &qword_100ADF2D8);
  unint64_t v26 = *(void *)(v39 + 16);
  if (*((void *)&v39 + 1) == v26)
  {
    swift_bridgeObjectRelease();
    unint64_t v27 = 0;
  }
  else
  {
    unint64_t v28 = v26 - *((void *)&v39 + 1);
    if (v26 < *((void *)&v39 + 1)) {
      unint64_t v28 = 0;
    }
    unint64_t v29 = v26 + ~*((void *)&v39 + 1);
    if (v29 >= v28) {
      unint64_t v29 = v28;
    }
    if (v29 >= 7) {
      unint64_t v29 = 7;
    }
    if (v28 == v29)
    {
      __break(1u);
LABEL_34:
      __break(1u);
    }
    uint64_t v30 = v39 + 32;
    unint64_t v27 = (unint64_t)*(unsigned __int8 *)(v39 + 32 + *((void *)&v39 + 1)) << 8;
    if (*((void *)&v39 + 1) + 1 == v26
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 1)) << 8, *((void *)&v39 + 1) + 2 == v26)
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 2)) << 8, *((void *)&v39 + 1) + 3 == v26)
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 3)) << 8, *((void *)&v39 + 1) + 4 == v26)
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 4)) << 8, *((void *)&v39 + 1) + 5 == v26)
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 5)) << 8, *((void *)&v39 + 1) + 6 == v26)
      || (unint64_t v27 = (v27 | *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 6)) << 8, *((void *)&v39 + 1) + 7 == v26))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(unsigned __int8 *)(v30 + *((void *)&v39 + 1) + 7);
      swift_bridgeObjectRelease();
      unint64_t v27 = (v27 | v32) << 8;
    }
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v25);
  return v27;
}

id sub_100940AF4()
{
  uint64_t v0 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  sub_100941D94(v0, qword_100B0B658);
  uint64_t v1 = sub_100941C34(v0, (uint64_t)qword_100B0B658);
  return sub_100940B44(v1);
}

id sub_100940B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096B180();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - v10;
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v13 = result;
    id v14 = [result deviceIdentifierForVendor];

    if (!v14)
    {
      unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16(v4, 1, 1, v5);
LABEL_6:
      sub_10002B770((uint64_t)v4, (uint64_t *)&unk_100ACAF10);
      return (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(a1, 1, 1, v5);
    }
    sub_10096B140();

    unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v15(v4, v9, v5);
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v16(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
      goto LABEL_6;
    }
    v15(v11, v4, v5);
    sub_10096B160();
    sub_10096B150();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return (id)((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v16)(a1, 0, 1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_100940E44(uint64_t a1)
{
  uint64_t v80 = a1;
  uint64_t v76 = sub_10002B7CC(&qword_100ADF2D8);
  __chkstk_darwin(v76);
  os_signpost_id_t v77 = (char *)&v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10096B8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v75 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v69 - v6;
  uint64_t v8 = sub_10096BCB0();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B950();
  uint64_t v81 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100ACAF10);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10096B180();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v82 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1D8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100941C34(v14, (uint64_t)qword_100B0B658);
  sub_10002B70C(v20, (uint64_t)v16, (uint64_t *)&unk_100ACAF10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACAF10);
    return 0;
  }
  uint64_t v22 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v82, v16, v17);
  time_t v84 = time(0);
  memset(&v85, 0, 36);
  v85.tm_gmtoff = 0;
  v85.tm_zone = 0;
  localtime_r(&v84, &v85);
  uint64_t v23 = 366 * v85.tm_year;
  if (v23 != (int)v23)
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v74 = v11;
  int v24 = v23 + v85.tm_yday;
  if (__OFADD__(v23, v85.tm_yday))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  int v71 = v7;
  uint64_t v72 = v3;
  uint64_t v73 = v2;
  if (v24 < 0)
  {
    sub_10096CE10();
    __break(1u);
    JUMPOUT(0x100941A68);
  }
  uint64_t v25 = v13;
  sub_10096B940();
  *(void *)&long long __src = sub_10096B160();
  WORD4(__src) = v26;
  BYTE10(__src) = v27;
  BYTE11(__src) = v28;
  BYTE12(__src) = v29;
  BYTE13(__src) = v30;
  BYTE14(__src) = v31;
  HIBYTE(__src) = v32;
  uint64_t v33 = sub_10075D3DC((uint64_t)&__src, (uint64_t)&v84);
  uint64_t v35 = v33;
  unint64_t v36 = v34;
  uint64_t v69 = v17;
  switch(v34 >> 62)
  {
    case 1uLL:
      if (v33 >> 32 < (int)v33) {
        goto LABEL_47;
      }
      sub_10001EBB0(v33, v34);
      sub_100941C6C((int)v35, v35 >> 32);
LABEL_15:
      sub_10001E9C0(v35, v36);
      sub_10001E9C0(v35, v36);
      break;
    case 2uLL:
      uint64_t v38 = *(void *)(v33 + 16);
      uint64_t v37 = *(void *)(v33 + 24);
      sub_10001EBB0(v33, v34);
      swift_retain();
      swift_retain();
      sub_100941C6C(v38, v37);
      swift_release();
      swift_release();
      goto LABEL_15;
    case 3uLL:
      sub_100941D4C((unint64_t *)&qword_100AD9EE0, (void (*)(uint64_t))&type metadata accessor for SHA256);
      *(void *)&long long __src = 0;
      *(void *)((char *)&__src + 6) = 0;
      goto LABEL_12;
    default:
      *(void *)&long long __src = v33;
      WORD4(__src) = v34;
      BYTE10(__src) = BYTE2(v34);
      BYTE11(__src) = BYTE3(v34);
      BYTE12(__src) = BYTE4(v34);
      BYTE13(__src) = BYTE5(v34);
      sub_100941D4C((unint64_t *)&qword_100AD9EE0, (void (*)(uint64_t))&type metadata accessor for SHA256);
LABEL_12:
      sub_10096B870();
      sub_10001E9C0(v35, v36);
      sub_10001E9C0(v35, v36);
      break;
  }
  LODWORD(__src) = v24;
  *(void *)&long long __src = sub_100078C44(&__src, (unsigned char *)&__src + 4);
  WORD4(__src) = v39;
  BYTE10(__src) = v40;
  BYTE11(__src) = v41;
  BYTE12(__src) = v42;
  BYTE13(__src) = v43;
  sub_100941D4C((unint64_t *)&qword_100AD9EE0, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_10096B870();
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_10096BC90();
  uint64_t v44 = sub_10096BC40();
  unint64_t v46 = v45;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v79);
  if (v46 >> 60 == 15) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = v44;
  }
  if (v46 >> 60 == 15) {
    unint64_t v48 = 0xC000000000000000;
  }
  else {
    unint64_t v48 = v46;
  }
  uint64_t v49 = v81;
  uint64_t v70 = v22;
  switch(v48 >> 62)
  {
    case 1uLL:
      uint64_t v52 = v74;
      if (v47 >> 32 < (int)v47) {
        goto LABEL_48;
      }
      sub_10001EBB0(v47, v48);
      sub_100941C6C((int)v47, v47 >> 32);
      break;
    case 2uLL:
      uint64_t v50 = *(void *)(v47 + 16);
      uint64_t v51 = *(void *)(v47 + 24);
      sub_10001EBB0(v47, v48);
      swift_retain();
      swift_retain();
      sub_100941C6C(v50, v51);
      swift_release();
      swift_release();
      sub_10001E9C0(v47, v48);
      sub_10001E9C0(v47, v48);
      uint64_t v52 = v74;
      goto LABEL_30;
    case 3uLL:
      *(void *)((char *)&__src + 6) = 0;
      *(void *)&long long __src = 0;
      goto LABEL_26;
    default:
      *(void *)&long long __src = v47;
      WORD4(__src) = v48;
      BYTE10(__src) = BYTE2(v48);
      BYTE11(__src) = BYTE3(v48);
      BYTE12(__src) = BYTE4(v48);
      BYTE13(__src) = BYTE5(v48);
LABEL_26:
      uint64_t v52 = v74;
      sub_10096B870();
      break;
  }
  sub_10001E9C0(v47, v48);
  sub_10001E9C0(v47, v48);
LABEL_30:
  uint64_t v53 = v71;
  sub_10096B930();
  uint64_t v54 = v72;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v56 = (uint64_t)v77;
  uint64_t v57 = v73;
  v55(v77, v53, v73);
  uint64_t v58 = v75;
  *(void *)(v56 + *(int *)(v76 + 36)) = 2;
  v55(v58, (char *)v56, v57);
  sub_100941D4C(&qword_100ADF2E0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  sub_10096BEF0();
  sub_10002B770(v56, &qword_100ADF2D8);
  unint64_t v59 = *(void *)(__src + 16);
  if (*((void *)&__src + 1) == v59)
  {
    swift_bridgeObjectRelease();
    __int16 v60 = 0;
    uint64_t v61 = v70;
  }
  else
  {
    unint64_t v62 = v59 - *((void *)&__src + 1);
    if (v59 < *((void *)&__src + 1)) {
      unint64_t v62 = 0;
    }
    unint64_t v63 = v59 + ~*((void *)&__src + 1);
    if (v63 >= v62) {
      unint64_t v63 = v62;
    }
    uint64_t v61 = v70;
    if (v62 == (v63 != 0)) {
      goto LABEL_46;
    }
    uint64_t v64 = __src + 32;
    if (*((void *)&__src + 1) + 1 == v59) {
      __int16 v65 = *(unsigned __int8 *)(v64 + *((void *)&__src + 1));
    }
    else {
      __int16 v65 = *(unsigned __int8 *)(v64 + *((void *)&__src + 1) + 1);
    }
    swift_bridgeObjectRelease();
    __int16 v60 = v65 << 8;
  }
  id v66 = [self defaultStore];
  signed int v67 = [v66 perfTelemetrySubSamplingPercentage];

  (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v57);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v52);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v82, v69);
  uint64_t v68 = 0xFFFFLL * v67;
  if (v68 != (int)v68)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
  return (int)v68 / 100 >= (unsigned __int16)(v60 & 0xFF00);
}

uint64_t sub_100941A88()
{
  return sub_10096B420();
}

uint64_t type metadata accessor for TelemetrySignpost(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADF340);
}

uint64_t sub_100941B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100941B80()
{
  unint64_t result = qword_100ADF2D0;
  if (!qword_100ADF2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF2D0);
  }
  return result;
}

uint64_t sub_100941BD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100941C34(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100941C6C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10096A880();
  if (!result || (uint64_t result = sub_10096A8A0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_10096A890();
      sub_10096B950();
      sub_100941D4C((unint64_t *)&qword_100AD9EE0, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return sub_10096B870();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100941D4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100941D94(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *sub_100941DF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = type metadata accessor for TelemetrySignposter(0);
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_10096B400();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
    uint64_t v12 = *(int *)(a3 + 24);
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
  }
  swift_retain();
  return v4;
}

uint64_t sub_100941F10(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
  uint64_t v2 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_release();
}

uint64_t sub_100941F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 28)) = *(unsigned char *)(a2 + *(int *)(v6 + 28));
  uint64_t v11 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_retain();
  return a1;
}

uint64_t sub_100942068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 28)) = *(unsigned char *)(a2 + *(int *)(v6 + 28));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10094214C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 28)) = *(unsigned char *)(a2 + *(int *)(v6 + 28));
  uint64_t v11 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_100942214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10096B400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 28)) = *(unsigned char *)(a2 + *(int *)(v6 + 28));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1009422E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009422FC);
}

uint64_t sub_1009422FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100942314(a1, a2, a3, type metadata accessor for TelemetrySignposter);
}

uint64_t sub_100942314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1009423D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009423EC);
}

uint64_t sub_1009423EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100942404(a1, a2, a3, a4, type metadata accessor for TelemetrySignposter);
}

uint64_t sub_100942404(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1009424C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1009424F4(a1, a2, a3, type metadata accessor for TelemetrySignposter);
}

uint64_t sub_1009424F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100942598(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_10096D2D0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_10096D2D0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100942660(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1009426C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  BOOL v6 = a2 == 2;
  BOOL v7 = a1 == (void *)1 && a2 == 2;
  BOOL v26 = v7;
  if (a1) {
    BOOL v6 = 0;
  }
  BOOL v25 = v6;
  uint64_t v27 = SBYTE2(a2);
  uint64_t v8 = (char *)(swift_bridgeObjectRetain() + 42);
  do
  {
    uint64_t v9 = *(void **)(v8 - 10);
    uint64_t v10 = *(v8 - 2);
    char v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    if (v11)
    {
      if ((a2 & 0x100) == 0)
      {
        sub_10014E450(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_10014E450(a1, a2, 0);
        uint64_t v19 = a1;
        uint64_t v20 = a2;
LABEL_27:
        sub_10017E788(v19, v20, 0);
        goto LABEL_9;
      }
      if (*(v8 - 2))
      {
        if (v10 == 1)
        {
          if (a2 != 1 || v9 != a1) {
            goto LABEL_35;
          }
        }
        else if (v9)
        {
          if (!v26) {
            goto LABEL_35;
          }
        }
        else if (!v25)
        {
          goto LABEL_35;
        }
      }
      else if ((_BYTE)a2 || v9 != a1)
      {
LABEL_35:
        sub_10014E450(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_10014E450(a1, a2, 1);
        goto LABEL_9;
      }
      sub_10014E450(*(id *)(v8 - 10), *(v8 - 2), 1);
      sub_10014E450(v9, v10, 1);
      sub_10014E450(a1, a2, 1);
    }
    else
    {
      if ((a2 & 0x100) != 0)
      {
        sub_10014E450(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_10014E450(a1, a2, 1);

        goto LABEL_9;
      }
      uint64_t v28 = *v8;
      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v15 = v14;
      if (v13 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v15 == v16) {
        char v18 = 1;
      }
      else {
        char v18 = sub_10096D2D0();
      }
      sub_10014E450(v9, v10, 0);
      sub_10014E450(v9, v10, 0);
      sub_10014E450(v9, v10, 0);
      sub_10014E450(v9, v10, 0);
      sub_10014E450(a1, a2, 0);
      sub_10014E450(a1, a2, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10017E788(a1, a2, 0);

      sub_10017E788(v9, v10, 0);
      uint64_t v12 = v28;
      if ((v18 & 1) == 0)
      {
        sub_10017E788(a1, a2, 0);
        sub_10017E788(v9, v10, 0);
        uint64_t v19 = v9;
        uint64_t v20 = v10;
        goto LABEL_27;
      }
    }
    uint64_t v21 = qword_100991738[v12];
    uint64_t v22 = qword_100991738[v27];
    sub_10017E788(a1, a2, BYTE1(a2) & 1);
    sub_10017E788(v9, v10, v11);
    sub_10017E788(v9, v10, v11);
    if (v21 == v22)
    {
      uint64_t v23 = 1;
      goto LABEL_40;
    }
LABEL_9:
    v8 += 16;
    --v3;
  }
  while (v3);
  uint64_t v23 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100942A0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  BOOL v6 = a2 == 2;
  BOOL v7 = a1 == (void *)1 && a2 == 2;
  BOOL v26 = v7;
  if (a1) {
    BOOL v6 = 0;
  }
  BOOL v25 = v6;
  uint64_t v27 = SBYTE2(a2);
  uint64_t v8 = (char *)(swift_bridgeObjectRetain() + 42);
  do
  {
    uint64_t v9 = *(void **)(v8 - 10);
    uint64_t v10 = *(v8 - 2);
    char v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    if (v11)
    {
      if ((a2 & 0x100) == 0)
      {
        sub_10009C394(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_10009C394(a1, a2, 0);

        goto LABEL_9;
      }
      uint64_t v28 = *v8;
      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v15 = v14;
      if (v13 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v15 == v16) {
        char v18 = 1;
      }
      else {
        char v18 = sub_10096D2D0();
      }
      sub_10009C394(v9, v10, 1);
      sub_10009C394(v9, v10, 1);
      sub_10009C394(v9, v10, 1);
      sub_10009C394(a1, a2, 1);
      sub_10009C394(v9, v10, 1);
      sub_10009C394(a1, a2, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000D30C4(a1, a2, 1);

      sub_1000D30C4(v9, v10, 1);
      uint64_t v12 = v28;
      if ((v18 & 1) == 0)
      {
        sub_1000D30C4(a1, a2, 1);
        sub_1000D30C4(v9, v10, 1);
        uint64_t v19 = v9;
        uint64_t v20 = v10;
        goto LABEL_27;
      }
    }
    else
    {
      if ((a2 & 0x100) != 0)
      {
        sub_10009C394(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_10009C394(a1, a2, 1);
        uint64_t v19 = a1;
        uint64_t v20 = a2;
LABEL_27:
        sub_1000D30C4(v19, v20, 1);
        goto LABEL_9;
      }
      if (*(v8 - 2))
      {
        if (v10 == 1)
        {
          if (a2 != 1 || v9 != a1) {
            goto LABEL_35;
          }
        }
        else if (v9)
        {
          if (!v26) {
            goto LABEL_35;
          }
        }
        else if (!v25)
        {
          goto LABEL_35;
        }
      }
      else if ((_BYTE)a2 || v9 != a1)
      {
LABEL_35:
        sub_10009C394(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_10009C394(a1, a2, 0);
        goto LABEL_9;
      }
      sub_10009C394(*(id *)(v8 - 10), *(v8 - 2), 0);
      sub_10009C394(v9, v10, 0);
      sub_10009C394(a1, a2, 0);
    }
    uint64_t v21 = qword_100991738[v12];
    uint64_t v22 = qword_100991738[v27];
    sub_1000D30C4(a1, a2, BYTE1(a2) & 1);
    sub_1000D30C4(v9, v10, v11);
    sub_1000D30C4(v9, v10, v11);
    if (v21 == v22)
    {
      uint64_t v23 = 1;
      goto LABEL_40;
    }
LABEL_9:
    v8 += 16;
    --v3;
  }
  while (v3);
  uint64_t v23 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100942D54(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  unint64_t v5 = a2;
  BOOL v7 = (char *)(a2 >> 62);
  unint64_t v75 = HIDWORD(a1);
  BOOL v8 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v78 = v8;
  size_t __n = BYTE6(a2);
  uint64_t v76 = (int)a1;
  size_t v77 = HIDWORD(a1) - (int)a1;
  uint64_t v74 = a1 >> 32;
  uint64_t v70 = (a1 >> 32) - (int)a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = (unint64_t *)(a3 + 40);
  unint64_t v72 = HIDWORD(v5);
  unint64_t v73 = v5 >> 40;
  uint64_t v80 = v7;
  unint64_t v71 = v5;
  int v79 = (int)v7;
  while (2)
  {
    uint64_t v11 = *(v9 - 1);
    unint64_t v10 = *v9;
    unint64_t v12 = *v9 >> 62;
    v9 += 2;
    uint64_t v13 = 0;
    switch(v12)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v11), v11))
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
        }
        uint64_t v13 = HIDWORD(v11) - (int)v11;
LABEL_14:
        sub_10001EBB0(v11, v10);
        break;
      case 2uLL:
        uint64_t v15 = *(void *)(v11 + 16);
        uint64_t v14 = *(void *)(v11 + 24);
        uint64_t v13 = v14 - v15;
        if (!__OFSUB__(v14, v15)) {
          goto LABEL_14;
        }
        goto LABEL_121;
      case 3uLL:
        break;
      default:
        uint64_t v13 = BYTE6(v10);
        break;
    }
    size_t v16 = __n;
    switch(v80)
    {
      case 1:
        size_t v16 = v77;
        if (v78) {
          goto LABEL_122;
        }
        goto LABEL_19;
      case 2:
        uint64_t v18 = *(void *)(a1 + 16);
        uint64_t v17 = *(void *)(a1 + 24);
        BOOL v19 = __OFSUB__(v17, v18);
        size_t v16 = v17 - v18;
        if (!v19) {
          goto LABEL_19;
        }
        goto LABEL_123;
      case 3:
        if (v13) {
          goto LABEL_7;
        }
        goto LABEL_118;
      default:
LABEL_19:
        if (v13 != v16)
        {
LABEL_7:
          sub_10001E9C0(v11, v10);
LABEL_8:
          if (!--v3)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        if (v13 >= 1)
        {
          switch((int)v12)
          {
            case 1:
              if ((int)v11 > v11 >> 32) {
                goto LABEL_124;
              }
              uint64_t v24 = sub_10096A880();
              if (v24)
              {
                uint64_t v25 = v24;
                uint64_t v26 = sub_10096A8A0();
                if (__OFSUB__((int)v11, v26)) {
                  goto LABEL_126;
                }
                uint64_t v27 = (const void *)(v25 + (int)v11 - v26);
              }
              else
              {
                uint64_t v27 = 0;
              }
              sub_10096A890();
              LODWORD(v7) = v79;
              if (!v79)
              {
                LOWORD(__s1[0]) = a1;
                BYTE2(__s1[0]) = BYTE2(a1);
                BYTE3(__s1[0]) = BYTE3(a1);
                BYTE4(__s1[0]) = v75;
                BYTE5(__s1[0]) = BYTE5(a1);
                BYTE6(__s1[0]) = BYTE6(a1);
                HIBYTE(__s1[0]) = HIBYTE(a1);
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = v72;
                BYTE5(__s1[1]) = v73;
                if (!v27) {
                  goto LABEL_154;
                }
                int v34 = memcmp(v27, __s1, __n);
                goto LABEL_101;
              }
              if (v79 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_135;
                }
                swift_retain();
                char v41 = (char *)sub_10096A880();
                if (v41)
                {
                  uint64_t v42 = sub_10096A8A0();
                  if (__OFSUB__(v76, v42)) {
                    goto LABEL_142;
                  }
                  v41 += v76 - v42;
                }
                uint64_t v43 = sub_10096A890();
                size_t v44 = v70;
                if (v43 < v70) {
                  size_t v44 = v43;
                }
                if (!v27) {
                  goto LABEL_147;
                }
                if (!v41) {
                  goto LABEL_148;
                }
                int v34 = memcmp(v27, v41, v44);
                sub_10001E9C0(a1, v5);
LABEL_101:
                sub_10001E9C0(v11, v10);
LABEL_102:
                if (!v34) {
                  goto LABEL_119;
                }
                goto LABEL_8;
              }
              uint64_t v61 = *(void *)(a1 + 16);
              uint64_t v62 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              unint64_t v63 = (char *)sub_10096A880();
              if (v63)
              {
                uint64_t v64 = sub_10096A8A0();
                if (__OFSUB__(v61, v64)) {
                  goto LABEL_141;
                }
                v63 += v61 - v64;
              }
              BOOL v19 = __OFSUB__(v62, v61);
              int64_t v65 = v62 - v61;
              if (v19) {
                goto LABEL_136;
              }
              uint64_t v66 = sub_10096A890();
              if (v66 >= v65) {
                size_t v67 = v65;
              }
              else {
                size_t v67 = v66;
              }
              if (!v27) {
                goto LABEL_155;
              }
              unint64_t v5 = v71;
              LODWORD(v7) = v79;
              if (!v63) {
                goto LABEL_156;
              }
              int v40 = memcmp(v27, v63, v67);
              swift_release();
              swift_release();
LABEL_114:
              sub_10001E9C0(v11, v10);
              if (!v40) {
                goto LABEL_119;
              }
              break;
            case 2:
              uint64_t v28 = *(void *)(v11 + 16);
              swift_retain();
              swift_retain();
              char v29 = (char *)sub_10096A880();
              if (!v29) {
                goto LABEL_36;
              }
              uint64_t v30 = sub_10096A8A0();
              if (__OFSUB__(v28, v30)) {
                goto LABEL_125;
              }
              v29 += v28 - v30;
LABEL_36:
              sub_10096A890();
              LODWORD(v7) = v79;
              if (!v79)
              {
                LOWORD(__s1[0]) = a1;
                BYTE2(__s1[0]) = BYTE2(a1);
                BYTE3(__s1[0]) = BYTE3(a1);
                BYTE4(__s1[0]) = v75;
                BYTE5(__s1[0]) = BYTE5(a1);
                BYTE6(__s1[0]) = BYTE6(a1);
                HIBYTE(__s1[0]) = HIBYTE(a1);
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = v72;
                BYTE5(__s1[1]) = v73;
                if (!v29) {
                  goto LABEL_151;
                }
                int v34 = memcmp(v29, __s1, __n);
                swift_release();
                swift_release();
                goto LABEL_101;
              }
              if (v79 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_129;
                }
                swift_retain();
                BOOL v7 = (char *)sub_10096A880();
                if (v7)
                {
                  uint64_t v31 = sub_10096A8A0();
                  if (__OFSUB__(v76, v31)) {
                    goto LABEL_140;
                  }
                  v7 += v76 - v31;
                }
                uint64_t v32 = sub_10096A890();
                size_t v33 = v70;
                if (v32 < v70) {
                  size_t v33 = v32;
                }
                if (!v29) {
                  goto LABEL_144;
                }
                if (!v7) {
                  goto LABEL_145;
                }
                int v34 = memcmp(v29, v7, v33);
                sub_10001E9C0(a1, v5);
                swift_release();
                swift_release();
                sub_10001E9C0(v11, v10);
                LODWORD(v7) = v79;
                goto LABEL_102;
              }
              uint64_t v55 = *(void *)(a1 + 16);
              uint64_t v69 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v56 = (char *)sub_10096A880();
              if (v56)
              {
                uint64_t v57 = sub_10096A8A0();
                if (__OFSUB__(v55, v57)) {
                  goto LABEL_139;
                }
                v56 += v55 - v57;
              }
              BOOL v19 = __OFSUB__(v69, v55);
              int64_t v58 = v69 - v55;
              if (v19) {
                goto LABEL_134;
              }
              uint64_t v59 = sub_10096A890();
              if (v59 >= v58) {
                size_t v60 = v58;
              }
              else {
                size_t v60 = v59;
              }
              if (!v29) {
                goto LABEL_152;
              }
              unint64_t v5 = v71;
              if (!v56) {
                goto LABEL_153;
              }
              int v39 = memcmp(v29, v56, v60);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
LABEL_96:
              sub_10001E9C0(v11, v10);
LABEL_97:
              LODWORD(v7) = v79;
              if (!v39) {
                goto LABEL_119;
              }
              goto LABEL_8;
            case 3:
              memset(__s1, 0, 14);
              if (!v7) {
                goto LABEL_56;
              }
              if (v7 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_128;
                }
                sub_10001EBB0(a1, v5);
                uint64_t v35 = sub_10096A880();
                if (!v35) {
                  goto LABEL_146;
                }
                uint64_t v21 = v35;
                uint64_t v36 = sub_10096A8A0();
                uint64_t v23 = v76 - v36;
                if (__OFSUB__(v76, v36)) {
                  goto LABEL_133;
                }
LABEL_52:
                uint64_t v37 = sub_10096A890();
                if (v37 >= v70) {
                  size_t v38 = v70;
                }
                else {
                  size_t v38 = v37;
                }
                int v39 = memcmp(__s1, (const void *)(v21 + v23), v38);
                sub_10001E9C0(a1, v5);
                goto LABEL_96;
              }
              uint64_t v51 = *(void *)(a1 + 16);
              uint64_t v52 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v47 = (char *)sub_10096A880();
              if (v47)
              {
                uint64_t v53 = sub_10096A8A0();
                if (__OFSUB__(v51, v53)) {
                  goto LABEL_138;
                }
                v47 += v51 - v53;
              }
              BOOL v19 = __OFSUB__(v52, v51);
              int64_t v49 = v52 - v51;
              if (v19) {
                goto LABEL_131;
              }
              uint64_t v50 = sub_10096A890();
              if (!v47) {
                goto LABEL_150;
              }
LABEL_80:
              if (v50 >= v49) {
                size_t v54 = v49;
              }
              else {
                size_t v54 = v50;
              }
              int v39 = memcmp(__s1, v47, v54);
              swift_release();
              swift_release();
              sub_10001E9C0(v11, v10);
              unint64_t v5 = v71;
              goto LABEL_97;
            default:
              __s1[0] = v11;
              LOWORD(__s1[1]) = v10;
              BYTE2(__s1[1]) = BYTE2(v10);
              BYTE3(__s1[1]) = BYTE3(v10);
              BYTE4(__s1[1]) = BYTE4(v10);
              BYTE5(__s1[1]) = BYTE5(v10);
              if (!v7)
              {
LABEL_56:
                __int16 __s2 = a1;
                char v83 = BYTE2(a1);
                char v84 = BYTE3(a1);
                char v85 = v75;
                char v86 = BYTE5(a1);
                char v87 = BYTE6(a1);
                char v88 = HIBYTE(a1);
                __int16 v89 = v5;
                char v90 = BYTE2(v5);
                char v91 = BYTE3(v5);
                char v92 = v72;
                char v93 = v73;
                int v40 = memcmp(__s1, &__s2, __n);
                goto LABEL_114;
              }
              if (v7 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_127;
                }
                sub_10001EBB0(a1, v5);
                uint64_t v20 = sub_10096A880();
                if (!v20)
                {
                  sub_10096A890();
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  sub_10096A890();
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
                  JUMPOUT(0x1009436A4);
                }
                uint64_t v21 = v20;
                uint64_t v22 = sub_10096A8A0();
                uint64_t v23 = v76 - v22;
                if (__OFSUB__(v76, v22)) {
                  goto LABEL_132;
                }
                goto LABEL_52;
              }
              uint64_t v45 = *(void *)(a1 + 16);
              uint64_t v46 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v47 = (char *)sub_10096A880();
              if (v47)
              {
                uint64_t v48 = sub_10096A8A0();
                if (__OFSUB__(v45, v48)) {
                  goto LABEL_137;
                }
                v47 += v45 - v48;
              }
              BOOL v19 = __OFSUB__(v46, v45);
              int64_t v49 = v46 - v45;
              if (v19) {
                goto LABEL_130;
              }
              uint64_t v50 = sub_10096A890();
              if (!v47) {
                goto LABEL_149;
              }
              goto LABEL_80;
          }
          goto LABEL_8;
        }
LABEL_118:
        sub_10001E9C0(v11, v10);
LABEL_119:
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_1009436D4(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (v5)
  {
    BOOL v6 = (unsigned char *)(a5 + 56);
    do
    {
      if (*((void *)v6 - 3) == a1 && *((_DWORD *)v6 - 4) == a2)
      {
        if (*v6)
        {
          if (a4) {
            return 1;
          }
        }
        else if ((a4 & 1) == 0 && *((void *)v6 - 1) == a3)
        {
          return 1;
        }
      }
      v6 += 32;
      --v5;
    }
    while (v5);
  }
  return 0;
}

unint64_t sub_100943730(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (!v5) {
    return 0;
  }
  char v9 = a2;
  uint64_t v10 = a1;
  BOOL v11 = a2 == 2;
  BOOL v12 = a1 == 1 && a2 == 2;
  if (a1) {
    BOOL v11 = 0;
  }
  BOOL v36 = v11;
  BOOL v37 = v12;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v13 = a3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v41 = v13;
  unint64_t v38 = 4 * v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = (unint64_t *)(a5 + 56);
  char v40 = v9;
  uint64_t v39 = v10;
  uint64_t v42 = a3;
  while (1)
  {
    uint64_t v17 = *(v14 - 3);
    uint64_t v19 = *(v14 - 1);
    unint64_t v18 = *v14;
    if (!*((unsigned char *)v14 - 16)) {
      break;
    }
    if (*((unsigned char *)v14 - 16) == 1)
    {
      if (v9 == 1 && v17 == v10) {
        goto LABEL_27;
      }
    }
    else if (v17)
    {
      if (v37) {
        goto LABEL_27;
      }
    }
    else if (v36)
    {
      goto LABEL_27;
    }
LABEL_14:
    v14 += 4;
    if (!--v5)
    {
      uint64_t v35 = 0;
LABEL_50:
      swift_bridgeObjectRelease();
      return v35;
    }
  }
  if (v9 || v17 != v10) {
    goto LABEL_14;
  }
LABEL_27:
  if ((v18 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(v18) & 0xF;
  }
  else {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10096BEC0();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 == 12565487 && v23 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  char v24 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRetain();
    unint64_t v27 = v18;
    uint64_t v28 = v42;
    if (!v41) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  unint64_t result = sub_10096BD70();
  if (4 * v20 >= result >> 14)
  {
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_10096BD10();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = v42;
    if (!v41)
    {
LABEL_11:
      swift_bridgeObjectRetain();
      unint64_t v15 = a4;
      if (v19 == v28) {
        goto LABEL_12;
      }
      goto LABEL_13;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10096BEC0();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    if (v29 == 12565487 && v31 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_10096BD70();
    if (v38 < result >> 14) {
      goto LABEL_53;
    }
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_10096BD10();
    unint64_t v15 = v34;
    swift_bridgeObjectRelease();
    if (v19 == v33)
    {
LABEL_12:
      if (v27 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = 1;
        goto LABEL_50;
      }
    }
LABEL_13:
    char v16 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v40;
    uint64_t v10 = v39;
    if (v16)
    {
      uint64_t v35 = 1;
      goto LABEL_50;
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_100943B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v5 = v4;
  if (v3 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_10096D2D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v14 = v13;
    if (v12 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100943CB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1 + 3;
  BOOL v7 = (char *)(a2 + 65);
  while (2)
  {
    uint64_t v8 = *(void *)(v7 - 17);
    uint64_t v9 = *(void *)(v7 - 9);
    int v10 = *(v7 - 1);
    uint64_t v11 = *v7;
    BOOL v12 = *(void *)(v7 - 33) == v4 && *(void *)(v7 - 25) == v5;
    if (!v12 && (sub_10096D2D0() & 1) == 0 || v8 != a1[2]) {
      goto LABEL_4;
    }
    sub_100345414(v6, (uint64_t)v15);
    switch(v10)
    {
      case 250:
        sub_100345414(v15, (uint64_t)v16);
        if (v16[8] != 250) {
          goto LABEL_4;
        }
        goto LABEL_25;
      case 251:
        sub_100345414(v15, (uint64_t)v17);
        if (v17[8] != 251) {
          goto LABEL_4;
        }
        goto LABEL_25;
      case 252:
        sub_100345414(v15, (uint64_t)v20);
        if (v20[8] != 252) {
          goto LABEL_4;
        }
        goto LABEL_25;
      case 253:
        sub_100345414(v15, (uint64_t)v21);
        if (v21[8] != 253) {
          goto LABEL_4;
        }
        goto LABEL_25;
      case 254:
        sub_100345414(v15, (uint64_t)v22);
        if (v22[8] != 254) {
          goto LABEL_4;
        }
        goto LABEL_25;
      default:
        sub_100345414(v15, (uint64_t)&v18);
        if ((v19 + 6) < 5u) {
          goto LABEL_4;
        }
        if (v10 == 255)
        {
          if (v19 != 255) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v19 == 255) {
            goto LABEL_4;
          }
          if (v10)
          {
            if (v10 == 1)
            {
              if (v19 != 1 || v9 != v18) {
                goto LABEL_4;
              }
            }
            else if (v9)
            {
              if (v19 != 2 || v18 != 1) {
                goto LABEL_4;
              }
            }
            else if (v19 != 2 || v18)
            {
              goto LABEL_4;
            }
          }
          else if (v19 || v9 != v18)
          {
            goto LABEL_4;
          }
        }
LABEL_25:
        uint64_t v13 = *((char *)a1 + 33);
        if (v11 == 70)
        {
          if (v13 == 70) {
            return 1;
          }
          goto LABEL_4;
        }
        if (v13 == 70 || qword_100991738[v11] != qword_100991738[v13])
        {
LABEL_4:
          v7 += 40;
          if (!--v2) {
            return 0;
          }
          continue;
        }
        return 1;
    }
  }
}

BOOL sub_100943F10(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100943F70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = v4;
  unint64_t v68 = a3;
  unint64_t v69 = a2;
  uint64_t v71 = a1;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  v65[0] = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v65 - v14;
  char v16 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v17 = __chkstk_darwin(v16);
  unsigned __int8 v19 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v78 = 0;
  char v80 = 0;
  __int16 v79 = 0;
  __int16 v81 = 0;
  char v87 = 0;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v82 = 0u;
  int v88 = 0;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  memset(v92, 0, 26);
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v93 = 0;
  int v96 = 0;
  sub_1003DF120(v6[*(int *)(v17 + 40)], (uint64_t)&v78);
  sub_1003DF140(v6[v16[13]], (uint64_t)&v78);
  uint64_t v20 = *v6;
  v65[1] = a4;
  uint64_t v66 = v5;
  size_t v67 = v10;
  switch(v20)
  {
    case 1:
      int v21 = 2;
      goto LABEL_9;
    case 2:
      int v78 = 4;
      uint64_t v22 = 0;
      goto LABEL_7;
    case 3:
      int v78 = 1;
      uint64_t v22 = 1;
LABEL_7:
      sub_1003DF160(v22, (uint64_t)&v78);
      break;
    default:
      if (v6[v16[27]]) {
        int v21 = 3;
      }
      else {
        int v21 = 1;
      }
LABEL_9:
      int v78 = v21;
      break;
  }
  uint64_t v23 = v16[20];
  sub_1003DF180(v6[v23], (uint64_t)&v78);
  sub_1003DF194(v6[v16[9]], (uint64_t)&v78);
  uint64_t v24 = v16[21];
  int v25 = v6[v24];
  sub_10010DA98((uint64_t)v6, (uint64_t)v19);
  if (v25) {
    LOBYTE(v25) = v19[v16[12]] ^ 1;
  }
  sub_10010DAFC((uint64_t)v19);
  sub_1003DFF38(v25 & 1, (uint64_t)&v78);
  uint64_t v94 = qword_100991968[(char)v6[v24]];
  *((void *)&v89 + 1) = *(void *)&v6[v16[19]];
  sub_1003DFF58(v6[v16[11]], (uint64_t)&v78);
  sub_1003DFF78(v6[v16[15]], (uint64_t)&v78);
  sub_1003DFF98(v6[v16[16]], (uint64_t)&v78);
  sub_1003DFFB8(v6[v16[28]], (uint64_t)&v78);
  sub_1003DFFD8(v6[v16[35]], (uint64_t)&v78);
  sub_1003DFFF8(v6[v16[18]], (uint64_t)&v78);
  sub_1003E0018(v6[v16[23]], (uint64_t)&v78);
  sub_1003E0038(v6[v16[24]], (uint64_t)&v78);
  sub_10001AE98(v71, (uint64_t)v98, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v98) != 1)
  {
    LOBYTE(v92[3]) = v98[32];
    BYTE1(v92[3]) = v98[34];
  }
  uint64_t v26 = v70;
  uint64_t v27 = v11;
  if (v6[v23] == 1) {
    LODWORD(v95) = v6[v16[22]];
  }
  uint64_t v28 = (uint64_t)v15;
  if (*v6 != 1)
  {
    uint64_t v29 = *(void *)&v6[v16[26]];
    *(void *)&long long v82 = *(void *)&v6[v16[25]];
    *(void *)&long long v90 = v29;
  }
  __int16 v81 = *((_WORD *)v6 + 5);
  uint64_t v30 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v70 + 16);
  v30(v15, &v6[v16[7]], v27);
  *((void *)&v82 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v83 = v31;
  v30(v15, &v6[v16[8]], v27);
  *((void *)&v83 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v84 = v32;
  uint64_t v33 = v27;
  uint64_t v34 = (uint64_t)v67;
  sub_10002B70C((uint64_t)&v6[v16[29]], (uint64_t)v67, (uint64_t *)&unk_100ACB5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v34, 1, v33) == 1)
  {
    sub_10002B770(v34, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    uint64_t v35 = *(void (**)(void, uint64_t, uint64_t))(v26 + 32);
    BOOL v36 = (unsigned __int8 *)v65[0];
    v35(v65[0], v34, v33);
    v30((char *)v28, v36, v33);
    *((void *)&v84 + 1) = sub_1003E0058(v28);
    *(void *)&long long v85 = v37;
    sub_1003E0188((uint64_t)&v78);
    (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v36, v33);
  }
  unint64_t v39 = v68;
  unint64_t v38 = v69;
  char v40 = &v6[v16[31]];
  if (v40[8]) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = *(void *)v40;
  }
  *((void *)&v85 + 1) = v41;
  if (v6[8])
  {
    uint64_t v42 = &v6[v16[36]];
    if (v42[4])
    {
      int v43 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v42 = v6 + 4;
  }
  int v43 = *(_DWORD *)v42;
LABEL_29:
  int v88 = v43;
  size_t v44 = &v6[v16[34]];
  if (v44[8]) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = __ROR8__(*(void *)v44, 32);
  }
  *(void *)&long long v89 = v45;
  uint64_t v46 = __chkstk_darwin(*(void *)&v6[v16[37]]);
  uint64_t v48 = v71;
  v65[-6] = &v78;
  v65[-5] = v48;
  uint64_t v61 = (int *)v6;
  uint64_t v62 = (unsigned __int8 *)v38;
  unint64_t v63 = v39;
  if (v47)
  {
    sub_100946234(v46, v47, (uint64_t (*)(void *))sub_1009537A4);
  }
  else
  {
    v92[2] = 0;
    sub_10001AE98(v48, (uint64_t)v97, &qword_100AD0EA0);
    sub_1000DBD64((uint64_t)v97);
    uint64_t v49 = __chkstk_darwin(v97[5]);
    uint64_t v61 = &v78;
    uint64_t v62 = v6;
    unint64_t v63 = v38;
    unint64_t v64 = v39;
    if (v51 == 1 || !v50)
    {
      uint64_t v93 = 0;
      uint64_t v52 = &v6[v16[14]];
      uint64_t v53 = *((void *)v52 + 1);
      if (v53)
      {
        uint64_t v76 = *(void *)v52;
        uint64_t v77 = v53;
        uint64_t v74 = 47;
        unint64_t v75 = 0xE100000000000000;
        uint64_t v72 = 58;
        unint64_t v73 = 0xE100000000000000;
        unint64_t v63 = sub_10001F9C0();
        unint64_t v64 = v63;
        uint64_t v61 = (int *)&type metadata for String;
        uint64_t v62 = (unsigned __int8 *)v63;
        uint64_t v54 = sub_10096C910();
        uint64_t v56 = v55;
      }
      else
      {
        uint64_t v54 = 0;
        uint64_t v56 = 0;
      }
      uint64_t v57 = __chkstk_darwin(v54);
      uint64_t v61 = &v78;
      uint64_t v62 = v6;
      unint64_t v63 = v69;
      unint64_t v64 = v39;
      if (v56)
      {
        sub_100946234(v57, v56, (uint64_t (*)(void *))sub_1009537E8);
        swift_bridgeObjectRelease();
      }
      else
      {
        *((void *)&v90 + 1) = 0;
        __chkstk_darwin(v57);
        uint64_t v61 = (int *)v6;
        uint64_t v62 = v58;
        unint64_t v63 = v59;
        unint64_t v64 = v39;
        sub_100947A08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953800);
      }
    }
    else
    {
      sub_100946234(v49, v50, (uint64_t (*)(void *))sub_1009537C8);
    }
  }
  return fpfs_free_metadata_tag_data();
}

void *sub_100944770(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v78 = a2;
  uint64_t v82 = a1;
  uint64_t v7 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096B0E0();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v75 - v13;
  uint64_t v15 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v89 = 0;
  char v91 = 0;
  __int16 v90 = 0;
  __int16 v92 = 0;
  char v98 = 0;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v93 = 0u;
  int v99 = 0;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  memset(v103, 0, 26);
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  uint64_t v104 = 0;
  int v107 = 0;
  sub_1003DF120(v5[*(int *)(v16 + 40)], (uint64_t)&v89);
  sub_1003DF140(v5[v15[13]], (uint64_t)&v89);
  uint64_t v19 = *v5;
  unint64_t v79 = a3;
  char v80 = v4;
  uint64_t v77 = v9;
  switch(v19)
  {
    case 1:
      int v20 = 2;
      goto LABEL_9;
    case 2:
      int v89 = 4;
      uint64_t v21 = 0;
      goto LABEL_7;
    case 3:
      int v89 = 1;
      uint64_t v21 = 1;
LABEL_7:
      sub_1003DF160(v21, (uint64_t)&v89);
      break;
    default:
      if (v5[v15[27]]) {
        int v20 = 3;
      }
      else {
        int v20 = 1;
      }
LABEL_9:
      int v89 = v20;
      break;
  }
  uint64_t v22 = v15[20];
  sub_1003DF180(v5[v22], (uint64_t)&v89);
  sub_1003DF194(v5[v15[9]], (uint64_t)&v89);
  uint64_t v23 = v15[21];
  int v24 = v5[v23];
  sub_10010DA98((uint64_t)v5, (uint64_t)v18);
  if (v24) {
    LOBYTE(v24) = v18[v15[12]] ^ 1;
  }
  sub_10010DAFC((uint64_t)v18);
  sub_1003DFF38(v24 & 1, (uint64_t)&v89);
  uint64_t v105 = qword_100991968[(char)v5[v23]];
  *((void *)&v100 + 1) = *(void *)&v5[v15[19]];
  sub_1003DFF58(v5[v15[11]], (uint64_t)&v89);
  sub_1003DFF78(v5[v15[15]], (uint64_t)&v89);
  sub_1003DFF98(v5[v15[16]], (uint64_t)&v89);
  sub_1003DFFB8(v5[v15[28]], (uint64_t)&v89);
  sub_1003DFFD8(v5[v15[35]], (uint64_t)&v89);
  sub_1003DFFF8(v5[v15[18]], (uint64_t)&v89);
  sub_1003E0018(v5[v15[23]], (uint64_t)&v89);
  sub_1003E0038(v5[v15[24]], (uint64_t)&v89);
  sub_10001AE98(v82, (uint64_t)v109, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v109) != 1)
  {
    LOBYTE(v103[3]) = v109[32];
    BYTE1(v103[3]) = v109[34];
  }
  uint64_t v25 = v81;
  uint64_t v26 = v10;
  if (v5[v22] == 1) {
    LODWORD(v106) = v5[v15[22]];
  }
  uint64_t v27 = (uint64_t)v14;
  if (*v5 != 1)
  {
    uint64_t v28 = *(void *)&v5[v15[26]];
    *(void *)&long long v93 = *(void *)&v5[v15[25]];
    *(void *)&long long v101 = v28;
  }
  __int16 v92 = *((_WORD *)v5 + 5);
  uint64_t v29 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v81 + 16);
  v29(v14, &v5[v15[7]], v26);
  *((void *)&v93 + 1) = sub_1003E0058((uint64_t)v14);
  *(void *)&long long v94 = v30;
  v29(v14, &v5[v15[8]], v26);
  *((void *)&v94 + 1) = sub_1003E0058((uint64_t)v14);
  *(void *)&long long v95 = v31;
  uint64_t v32 = v26;
  uint64_t v33 = (uint64_t)v77;
  sub_10002B70C((uint64_t)&v5[v15[29]], (uint64_t)v77, (uint64_t *)&unk_100ACB5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v33, 1, v32) == 1)
  {
    sub_10002B770(v33, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v35 = v76;
    v34(v76, v33, v32);
    v29((char *)v27, (unsigned __int8 *)v35, v32);
    *((void *)&v95 + 1) = sub_1003E0058(v27);
    *(void *)&long long v96 = v36;
    sub_1003E0188((uint64_t)&v89);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v35, v32);
  }
  unint64_t v38 = v79;
  uint64_t v37 = v80;
  unint64_t v39 = v78;
  char v40 = &v5[v15[31]];
  if (v40[8]) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = *(void *)v40;
  }
  *((void *)&v96 + 1) = v41;
  if (v5[8])
  {
    uint64_t v42 = &v5[v15[36]];
    if (v42[4])
    {
      int v43 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v42 = v5 + 4;
  }
  int v43 = *(_DWORD *)v42;
LABEL_29:
  int v99 = v43;
  size_t v44 = &v5[v15[34]];
  if (v44[8]) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = __ROR8__(*(void *)v44, 32);
  }
  *(void *)&long long v100 = v45;
  uint64_t v46 = __chkstk_darwin(v82);
  *(&v75 - 6) = (uint64_t)&v89;
  *(&v75 - 5) = v46;
  uint64_t v71 = (int *)v5;
  uint64_t v72 = (unsigned __int8 *)v39;
  unint64_t v73 = (unsigned __int8 *)v38;
  if (v47)
  {
    __chkstk_darwin(v46);
    unint64_t v73 = (unsigned __int8 *)sub_1009544FC;
    unint64_t v74 = v48;
    int v51 = sub_100440314((uint64_t)sub_100954534, (uint64_t)&v71, v49, v50);
    if (!v37) {
      uint64_t v37 = v51;
    }
  }
  else
  {
    v103[2] = 0;
    sub_10001AE98(v46, (uint64_t)v108, &qword_100AD0EA0);
    uint64_t v52 = sub_1000DBD64((uint64_t)v108);
    uint64_t v53 = __chkstk_darwin(v52);
    uint64_t v71 = &v89;
    uint64_t v72 = v5;
    unint64_t v73 = (unsigned __int8 *)v39;
    unint64_t v74 = v38;
    if (v53 == 1 || !v54)
    {
      uint64_t v104 = 0;
      unint64_t v59 = &v5[v15[14]];
      uint64_t v60 = *((void *)v59 + 1);
      if (v60)
      {
        uint64_t v87 = *(void *)v59;
        uint64_t v88 = v60;
        uint64_t v85 = 47;
        unint64_t v86 = 0xE100000000000000;
        uint64_t v83 = 58;
        unint64_t v84 = 0xE100000000000000;
        unint64_t v73 = (unsigned __int8 *)sub_10001F9C0();
        unint64_t v74 = (unint64_t)v73;
        uint64_t v71 = (int *)&type metadata for String;
        uint64_t v72 = v73;
        uint64_t v53 = sub_10096C910();
        uint64_t v62 = v61;
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v63 = __chkstk_darwin(v53);
      uint64_t v71 = &v89;
      uint64_t v72 = v5;
      unint64_t v73 = (unsigned __int8 *)v39;
      unint64_t v74 = v38;
      if (v62)
      {
        __chkstk_darwin(v63);
        unint64_t v73 = (unsigned __int8 *)sub_100954578;
        unint64_t v74 = v64;
        uint64_t v66 = sub_100440314((uint64_t)sub_100954534, (uint64_t)&v71, v65, v62);
        if (!v37) {
          uint64_t v37 = v66;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        *((void *)&v101 + 1) = 0;
        __chkstk_darwin(v63);
        uint64_t v71 = (int *)v5;
        uint64_t v72 = v67;
        unint64_t v73 = (unsigned __int8 *)v68;
        unint64_t v74 = v38;
        unint64_t v69 = sub_100947C64((void *(*)(uint64_t *__return_ptr, void *, char *, uint64_t))sub_100954590);
        if (!v37) {
          uint64_t v37 = (void *)v69;
        }
      }
    }
    else
    {
      __chkstk_darwin(v53);
      unint64_t v73 = (unsigned __int8 *)sub_10095454C;
      unint64_t v74 = v55;
      int64_t v58 = sub_100440314((uint64_t)sub_100954534, (uint64_t)&v71, v56, v57);
      if (!v37) {
        uint64_t v37 = v58;
      }
    }
  }
  fpfs_free_metadata_tag_data();
  return v37;
}

uint64_t sub_100945050@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = v4;
  unint64_t v68 = a3;
  unint64_t v69 = a2;
  uint64_t v71 = a1;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  v65[0] = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v65 - v14;
  uint64_t v16 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v78 = 0;
  char v80 = 0;
  __int16 v79 = 0;
  __int16 v81 = 0;
  char v87 = 0;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v82 = 0u;
  int v88 = 0;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  memset(v92, 0, 26);
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v93 = 0;
  int v96 = 0;
  sub_1003DF120(v6[*(int *)(v17 + 40)], (uint64_t)&v78);
  sub_1003DF140(v6[v16[13]], (uint64_t)&v78);
  uint64_t v20 = *v6;
  v65[1] = a4;
  uint64_t v66 = v5;
  size_t v67 = v10;
  switch(v20)
  {
    case 1:
      int v21 = 2;
      goto LABEL_9;
    case 2:
      int v78 = 4;
      uint64_t v22 = 0;
      goto LABEL_7;
    case 3:
      int v78 = 1;
      uint64_t v22 = 1;
LABEL_7:
      sub_1003DF160(v22, (uint64_t)&v78);
      break;
    default:
      if (v6[v16[27]]) {
        int v21 = 3;
      }
      else {
        int v21 = 1;
      }
LABEL_9:
      int v78 = v21;
      break;
  }
  uint64_t v23 = v16[20];
  sub_1003DF180(v6[v23], (uint64_t)&v78);
  sub_1003DF194(v6[v16[9]], (uint64_t)&v78);
  uint64_t v24 = v16[21];
  int v25 = v6[v24];
  sub_10010DA98((uint64_t)v6, (uint64_t)v19);
  if (v25) {
    LOBYTE(v25) = v19[v16[12]] ^ 1;
  }
  sub_10010DAFC((uint64_t)v19);
  sub_1003DFF38(v25 & 1, (uint64_t)&v78);
  uint64_t v94 = qword_100991968[(char)v6[v24]];
  *((void *)&v89 + 1) = *(void *)&v6[v16[19]];
  sub_1003DFF58(v6[v16[11]], (uint64_t)&v78);
  sub_1003DFF78(v6[v16[15]], (uint64_t)&v78);
  sub_1003DFF98(v6[v16[16]], (uint64_t)&v78);
  sub_1003DFFB8(v6[v16[28]], (uint64_t)&v78);
  sub_1003DFFD8(v6[v16[35]], (uint64_t)&v78);
  sub_1003DFFF8(v6[v16[18]], (uint64_t)&v78);
  sub_1003E0018(v6[v16[23]], (uint64_t)&v78);
  sub_1003E0038(v6[v16[24]], (uint64_t)&v78);
  sub_10001AE98(v71, (uint64_t)v98, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v98) != 1)
  {
    LOBYTE(v92[3]) = v98[32];
    BYTE1(v92[3]) = v98[34];
  }
  uint64_t v26 = v70;
  uint64_t v27 = v11;
  if (v6[v23] == 1) {
    LODWORD(v95) = v6[v16[22]];
  }
  uint64_t v28 = (uint64_t)v15;
  if (*v6 != 1)
  {
    uint64_t v29 = *(void *)&v6[v16[26]];
    *(void *)&long long v82 = *(void *)&v6[v16[25]];
    *(void *)&long long v90 = v29;
  }
  __int16 v81 = *((_WORD *)v6 + 5);
  uint64_t v30 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v70 + 16);
  v30(v15, &v6[v16[7]], v27);
  *((void *)&v82 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v83 = v31;
  v30(v15, &v6[v16[8]], v27);
  *((void *)&v83 + 1) = sub_1003E0058((uint64_t)v15);
  *(void *)&long long v84 = v32;
  uint64_t v33 = v27;
  uint64_t v34 = (uint64_t)v67;
  sub_10002B70C((uint64_t)&v6[v16[29]], (uint64_t)v67, (uint64_t *)&unk_100ACB5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v34, 1, v33) == 1)
  {
    sub_10002B770(v34, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    uint64_t v35 = *(void (**)(void, uint64_t, uint64_t))(v26 + 32);
    uint64_t v36 = (unsigned __int8 *)v65[0];
    v35(v65[0], v34, v33);
    v30((char *)v28, v36, v33);
    *((void *)&v84 + 1) = sub_1003E0058(v28);
    *(void *)&long long v85 = v37;
    sub_1003E0188((uint64_t)&v78);
    (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v36, v33);
  }
  unint64_t v39 = v68;
  unint64_t v38 = v69;
  char v40 = &v6[v16[31]];
  if (v40[8]) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = *(void *)v40;
  }
  *((void *)&v85 + 1) = v41;
  if (v6[8])
  {
    uint64_t v42 = &v6[v16[36]];
    if (v42[4])
    {
      int v43 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v42 = v6 + 4;
  }
  int v43 = *(_DWORD *)v42;
LABEL_29:
  int v88 = v43;
  size_t v44 = &v6[v16[34]];
  if (v44[8]) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = __ROR8__(*(void *)v44, 32);
  }
  *(void *)&long long v89 = v45;
  uint64_t v46 = __chkstk_darwin(*(void *)&v6[v16[37]]);
  uint64_t v48 = v71;
  v65[-6] = &v78;
  v65[-5] = v48;
  uint64_t v61 = (int *)v6;
  uint64_t v62 = (unsigned __int8 *)v38;
  unint64_t v63 = v39;
  if (v47)
  {
    sub_10094643C(v46, v47, (uint64_t (*)(void *))sub_100953E5C);
  }
  else
  {
    v92[2] = 0;
    sub_10001AE98(v48, (uint64_t)v97, &qword_100AD0EA0);
    sub_1000DBD64((uint64_t)v97);
    uint64_t v49 = __chkstk_darwin(v97[5]);
    uint64_t v61 = &v78;
    uint64_t v62 = v6;
    unint64_t v63 = v38;
    unint64_t v64 = v39;
    if (v51 == 1 || !v50)
    {
      uint64_t v93 = 0;
      uint64_t v52 = &v6[v16[14]];
      uint64_t v53 = *((void *)v52 + 1);
      if (v53)
      {
        uint64_t v76 = *(void *)v52;
        uint64_t v77 = v53;
        uint64_t v74 = 47;
        unint64_t v75 = 0xE100000000000000;
        uint64_t v72 = 58;
        unint64_t v73 = 0xE100000000000000;
        unint64_t v63 = sub_10001F9C0();
        unint64_t v64 = v63;
        uint64_t v61 = (int *)&type metadata for String;
        uint64_t v62 = (unsigned __int8 *)v63;
        uint64_t v54 = sub_10096C910();
        uint64_t v56 = v55;
      }
      else
      {
        uint64_t v54 = 0;
        uint64_t v56 = 0;
      }
      uint64_t v57 = __chkstk_darwin(v54);
      uint64_t v61 = &v78;
      uint64_t v62 = v6;
      unint64_t v63 = v69;
      unint64_t v64 = v39;
      if (v56)
      {
        sub_10094643C(v57, v56, (uint64_t (*)(void *))sub_100953EA0);
        swift_bridgeObjectRelease();
      }
      else
      {
        *((void *)&v90 + 1) = 0;
        __chkstk_darwin(v57);
        uint64_t v61 = (int *)v6;
        uint64_t v62 = v58;
        unint64_t v63 = v59;
        unint64_t v64 = v39;
        sub_100947EE4((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953EB8);
      }
    }
    else
    {
      sub_10094643C(v49, v50, (uint64_t (*)(void *))sub_100953E80);
    }
  }
  return fpfs_free_metadata_tag_data();
}

uint64_t sub_100945850@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  int v6 = v4;
  unint64_t v80 = a2;
  unint64_t v81 = a3;
  *(void *)&long long v83 = a1;
  uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v79 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096B0E0();
  *(void *)&long long v82 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v76 - v13;
  uint64_t v15 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v90 = 0;
  char v92 = 0;
  __int16 v91 = 0;
  __int16 v93 = 0;
  char v99 = 0;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v94 = 0u;
  int v100 = 0;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  memset(v104, 0, 26);
  uint64_t v106 = 0;
  uint64_t v107 = 0;
  uint64_t v105 = 0;
  int v108 = 0;
  sub_1003DF120(v6[*(int *)(v16 + 40)], (uint64_t)&v90);
  sub_1003DF140(v6[v15[13]], (uint64_t)&v90);
  uint64_t v19 = *v6;
  uint64_t v76 = a4;
  uint64_t v78 = v5;
  switch(v19)
  {
    case 1:
      int v20 = 2;
      goto LABEL_9;
    case 2:
      int v90 = 4;
      uint64_t v21 = 0;
      goto LABEL_7;
    case 3:
      int v90 = 1;
      uint64_t v21 = 1;
LABEL_7:
      sub_1003DF160(v21, (uint64_t)&v90);
      break;
    default:
      if (v6[v15[27]]) {
        int v20 = 3;
      }
      else {
        int v20 = 1;
      }
LABEL_9:
      int v90 = v20;
      break;
  }
  uint64_t v22 = v15[20];
  sub_1003DF180(v6[v22], (uint64_t)&v90);
  sub_1003DF194(v6[v15[9]], (uint64_t)&v90);
  uint64_t v23 = v15[21];
  int v24 = v6[v23];
  sub_10010DA98((uint64_t)v6, (uint64_t)v18);
  if (v24) {
    LOBYTE(v24) = v18[v15[12]] ^ 1;
  }
  sub_10010DAFC((uint64_t)v18);
  sub_1003DFF38(v24 & 1, (uint64_t)&v90);
  uint64_t v106 = qword_100991968[(char)v6[v23]];
  *((void *)&v101 + 1) = *(void *)&v6[v15[19]];
  sub_1003DFF58(v6[v15[11]], (uint64_t)&v90);
  sub_1003DFF78(v6[v15[15]], (uint64_t)&v90);
  sub_1003DFF98(v6[v15[16]], (uint64_t)&v90);
  sub_1003DFFB8(v6[v15[28]], (uint64_t)&v90);
  sub_1003DFFD8(v6[v15[35]], (uint64_t)&v90);
  sub_1003DFFF8(v6[v15[18]], (uint64_t)&v90);
  sub_1003E0018(v6[v15[23]], (uint64_t)&v90);
  sub_1003E0038(v6[v15[24]], (uint64_t)&v90);
  sub_10001AE98(v83, (uint64_t)v122, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v122) != 1)
  {
    LOBYTE(v104[3]) = v122[32];
    BYTE1(v104[3]) = v122[34];
  }
  uint64_t v25 = v82;
  uint64_t v26 = v10;
  if (v6[v22] == 1) {
    LODWORD(v107) = v6[v15[22]];
  }
  uint64_t v27 = (uint64_t)v14;
  if (*v6 != 1)
  {
    uint64_t v28 = *(void *)&v6[v15[26]];
    *(void *)&long long v94 = *(void *)&v6[v15[25]];
    *(void *)&long long v102 = v28;
  }
  __int16 v93 = *((_WORD *)v6 + 5);
  uint64_t v29 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v82 + 16);
  v29(v14, &v6[v15[7]], v26);
  *((void *)&v94 + 1) = sub_1003E0058((uint64_t)v14);
  *(void *)&long long v95 = v30;
  v29(v14, &v6[v15[8]], v26);
  *((void *)&v95 + 1) = sub_1003E0058((uint64_t)v14);
  *(void *)&long long v96 = v31;
  uint64_t v32 = v26;
  uint64_t v33 = v79;
  sub_10002B70C((uint64_t)&v6[v15[29]], v79, (uint64_t *)&unk_100ACB5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v33, 1, v32) == 1)
  {
    sub_10002B770(v33, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v35 = v77;
    v34(v77, v33, v32);
    v29((char *)v27, (unsigned __int8 *)v35, v32);
    *((void *)&v96 + 1) = sub_1003E0058(v27);
    *(void *)&long long v97 = v36;
    sub_1003E0188((uint64_t)&v90);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v35, v32);
  }
  unint64_t v37 = v80;
  unint64_t v38 = v81;
  unint64_t v39 = &v6[v15[31]];
  if (v39[8]) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = *(void *)v39;
  }
  *((void *)&v97 + 1) = v40;
  if (v6[8])
  {
    uint64_t v41 = &v6[v15[36]];
    if (v41[4])
    {
      int v42 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v41 = v6 + 4;
  }
  int v42 = *(_DWORD *)v41;
LABEL_29:
  int v100 = v42;
  int v43 = &v6[v15[34]];
  if (v43[8]) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = __ROR8__(*(void *)v43, 32);
  }
  *(void *)&long long v101 = v44;
  uint64_t v45 = __chkstk_darwin(v83);
  *(&v76 - 6) = &v90;
  *(&v76 - 5) = (_OWORD *)v45;
  uint64_t v72 = (int *)v6;
  unint64_t v73 = (unsigned __int8 *)v37;
  uint64_t v74 = (unsigned __int8 *)v38;
  if (!v46)
  {
    v104[2] = 0;
    sub_10001AE98(v45, (uint64_t)v121, &qword_100AD0EA0);
    uint64_t v52 = sub_1000DBD64((uint64_t)v121);
    uint64_t v53 = __chkstk_darwin(v52);
    uint64_t v72 = &v90;
    unint64_t v73 = v6;
    uint64_t v74 = (unsigned __int8 *)v37;
    unint64_t v75 = v38;
    if (v53 == 1 || !v54)
    {
      uint64_t v105 = 0;
      unint64_t v59 = &v6[v15[14]];
      uint64_t v60 = *((void *)v59 + 1);
      if (v60)
      {
        uint64_t v88 = *(void *)v59;
        uint64_t v89 = v60;
        uint64_t v86 = 47;
        unint64_t v87 = 0xE100000000000000;
        uint64_t v84 = 58;
        unint64_t v85 = 0xE100000000000000;
        uint64_t v74 = (unsigned __int8 *)sub_10001F9C0();
        unint64_t v75 = (unint64_t)v74;
        uint64_t v72 = (int *)&type metadata for String;
        unint64_t v73 = v74;
        uint64_t v53 = sub_10096C910();
        uint64_t v62 = v61;
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v63 = __chkstk_darwin(v53);
      uint64_t v72 = &v90;
      unint64_t v73 = v6;
      uint64_t v74 = (unsigned __int8 *)v37;
      unint64_t v75 = v38;
      if (v62)
      {
        __chkstk_darwin(v63);
        uint64_t v74 = (unsigned __int8 *)sub_100954274;
        unint64_t v75 = v64;
        uint64_t v65 = v78;
        sub_100440428((uint64_t)sub_100954230, v66, v62, (uint64_t)&v115);
        if (!v65)
        {
          uint64_t v51 = v116;
          long long v82 = v117;
          long long v83 = v115;
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        *((void *)&v102 + 1) = 0;
        __chkstk_darwin(v63);
        uint64_t v72 = (int *)v6;
        unint64_t v73 = v67;
        uint64_t v74 = (unsigned __int8 *)v68;
        unint64_t v75 = v38;
        uint64_t v69 = v78;
        sub_100948140((void *(*)(long long *__return_ptr, void *, char *, uint64_t))sub_100954294, (uint64_t)&v112);
        if (!v69)
        {
          uint64_t v51 = v113;
          long long v82 = v114;
          long long v83 = v112;
          goto LABEL_50;
        }
      }
    }
    else
    {
      __chkstk_darwin(v53);
      uint64_t v74 = (unsigned __int8 *)sub_100954248;
      unint64_t v75 = v55;
      uint64_t v56 = v78;
      sub_100440428((uint64_t)sub_100954230, v57, v58, (uint64_t)&v109);
      if (!v56)
      {
        uint64_t v51 = v110;
        long long v82 = v111;
        long long v83 = v109;
        goto LABEL_50;
      }
    }
    return fpfs_free_metadata_tag_data();
  }
  __chkstk_darwin(v45);
  uint64_t v74 = (unsigned __int8 *)sub_1009541DC;
  unint64_t v75 = v47;
  uint64_t v48 = v78;
  sub_100440428((uint64_t)sub_100954230, v49, v50, (uint64_t)&v118);
  if (v48) {
    return fpfs_free_metadata_tag_data();
  }
  uint64_t v51 = v119;
  long long v82 = v120;
  long long v83 = v118;
LABEL_50:
  uint64_t result = fpfs_free_metadata_tag_data();
  uint64_t v71 = v76;
  *uint64_t v76 = v83;
  *((void *)v71 + 2) = v51;
  *(_OWORD *)((char *)v71 + 24) = v82;
  return result;
}

uint64_t DocumentWharf.__allocating_init(label:at:ioContext:targetQueue:reporter:)(void *a1, unint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  DocumentWharf.init(label:at:ioContext:targetQueue:reporter:)(a1, a2, a3, a4, a5 & 0x1FFFFFFFFLL, a6, a7);
  return v14;
}

uint64_t sub_100946234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return sub_10096CBC0();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v4[0] = a1;
    v4[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    return a3(v4);
  }
  else
  {
    if ((a1 & 0x1000000000000000) == 0) {
      sub_10096CC90();
    }
    return sub_100953878();
  }
}

uint64_t sub_100946320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_10002B7CC((uint64_t *)&unk_100ADF5E8);
    return sub_10096CBC0();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      *(void *)(a3 + 24) = v8;
    }
    else if ((a1 & 0x1000000000000000) != 0)
    {
      *(void *)(a3 + 24) = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else
    {
      uint64_t v7 = sub_10096CC90();
      if (v7) {
        *(void *)(a3 + 24) = v7;
      }
      else {
        *(void *)(a3 + 24) = 0;
      }
    }
    return a4(a3);
  }
}

uint64_t sub_10094643C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    type metadata accessor for fpfs_item_handle(0);
    return sub_10096CBC0();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v4[0] = a1;
    v4[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    return a3(v4);
  }
  else
  {
    if ((a1 & 0x1000000000000000) == 0) {
      sub_10096CC90();
    }
    return sub_100953878();
  }
}

uint64_t sub_100946534@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v55 = a4;
  uint64_t v54 = sub_10096BCB0();
  __chkstk_darwin(v54);
  unint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v61 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v62 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v60 = "collaborationIdentifier";
  unint64_t v65 = 0x8000000100996D80;
  while (v11)
  {
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_21:
    uint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    if (*v22 != 0xD000000000000015 || v23 != v65)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v18);
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      if ((sub_10096D2D0() & 1) == 0)
      {
        uint64_t v63 = v24;
        uint64_t v64 = v23;
        uint64_t v51 = a2;
        uint64_t v52 = (unsigned char *)(v15 >> 62);
        swift_bridgeObjectRetain();
        sub_10001EBB0(v16, v15);
        sub_10096BC90();
        sub_10001F9C0();
        uint64_t v25 = sub_10096C8F0();
        (*v53)(v59, v54);
        uint64_t v26 = 0;
        switch((unint64_t)v52)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16)) {
              goto LABEL_55;
            }
            uint64_t v26 = (int)v26;
LABEL_29:
            BOOL v29 = __OFADD__(v26, 24);
            uint64_t v30 = v26 + 24;
            if (v29) {
              goto LABEL_51;
            }
            BOOL v29 = __OFADD__(v30, v25);
            uint64_t v31 = v30 + v25;
            if (v29) {
              goto LABEL_52;
            }
            if (__OFADD__(v31, 1)) {
              goto LABEL_53;
            }
            size_t v50 = v25;
            int v32 = (int)v52;
            uint64_t v58 = (void *)swift_slowAlloc();
            uint64_t v33 = 0;
            uint64_t v49 = v58 + 3;
            switch(v32)
            {
              case 1:
                LODWORD(v33) = HIDWORD(v16) - v16;
                if (__OFSUB__(HIDWORD(v16), v16)) {
                  goto LABEL_57;
                }
                uint64_t v33 = (int)v33;
LABEL_36:
                uint64_t v34 = v33;
                sub_10096AFC0();
                uint64_t v35 = v34;
                void v58[2] = v34;
                goto LABEL_40;
              case 2:
                if (__OFSUB__(*(void *)(v16 + 24), *(void *)(v16 + 16))) {
                  goto LABEL_58;
                }
                sub_10096AFC0();
                uint64_t v37 = *(void *)(v16 + 16);
                uint64_t v36 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v36, v37);
                uint64_t v38 = v36 - v37;
                if (v29) {
                  goto LABEL_59;
                }
                void v58[2] = v38;
                uint64_t v40 = *(void *)(v16 + 16);
                uint64_t v39 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v39, v40);
                uint64_t v35 = v39 - v40;
                if (v29) {
                  goto LABEL_60;
                }
LABEL_40:
                size_t v41 = v50;
                if (v50 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_54;
                }
                uint64_t v52 = (char *)v49 + v35;
                uint64_t v42 = sub_10096BCF0();
                swift_bridgeObjectRelease();
                int v43 = v52;
                memcpy(v52, (const void *)(v42 + 32), v41);
                swift_release();
                v43[v41] = 0;
                uint64_t v44 = v58;
                *uint64_t v58 = v13;
                v44[1] = v43;
                sub_10001E9C0(v16, v15);
                uint64_t v13 = v44;
                a2 = v51;
                break;
              case 3:
                goto LABEL_36;
              default:
                uint64_t v33 = BYTE6(v15);
                goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v16 + 16);
            uint64_t v27 = *(void *)(v16 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_29;
            }
            goto LABEL_56;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v26 = BYTE6(v15);
            goto LABEL_29;
        }
      }
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v19 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20)
  {
LABEL_20:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_21;
  }
  int64_t v21 = v19 + 3;
  if (v21 < v62)
  {
    unint64_t v20 = *(void *)(v61 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v62) {
          goto LABEL_42;
        }
        unint64_t v20 = *(void *)(v61 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x100946A34);
    }
    int64_t v12 = v21;
    goto LABEL_20;
  }
LABEL_42:
  swift_release();
  uint64_t v45 = v57;
  uint64_t result = v56(v13);
  if (v45)
  {
    if (v13)
    {
      do
      {
        unint64_t v47 = (void *)*v13;
        uint64_t result = swift_slowDealloc();
        uint64_t v13 = v47;
      }
      while (v47);
    }
  }
  else if (v13)
  {
    do
    {
      uint64_t v48 = (void *)*v13;
      uint64_t result = swift_slowDealloc();
      uint64_t v13 = v48;
    }
    while (v48);
  }
  return result;
}

void *sub_100946A54(void *(*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  void *(*v54)(uint64_t *__return_ptr, void *);
  uint64_t v55;
  void *v56;
  char *v57;
  const char *v58;
  uint64_t v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  uint64_t v54 = a1;
  uint64_t v53 = sub_10096BCB0();
  __chkstk_darwin(v53);
  uint64_t v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a3 + 64);
  unint64_t v59 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v60 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v52 = (void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  int64_t v12 = 0;
  uint64_t v58 = "collaborationIdentifier";
  uint64_t v61 = 0x8000000100996D80;
  while (v10)
  {
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_21:
    int64_t v21 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v17);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    if (*v21 != 0xD000000000000015 || v22 != v61)
    {
      uint64_t v13 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v17);
      uint64_t v14 = *v13;
      unint64_t v15 = v13[1];
      if ((sub_10096D2D0() & 1) == 0)
      {
        int64_t v62 = v23;
        uint64_t v63 = v22;
        uint64_t v50 = a2;
        uint64_t v51 = (unsigned char *)(v15 >> 62);
        swift_bridgeObjectRetain();
        sub_10001EBB0(v14, v15);
        sub_10096BC90();
        sub_10001F9C0();
        uint64_t v24 = sub_10096C8F0();
        (*v52)(v57, v53);
        uint64_t v25 = 0;
        switch((unint64_t)v51)
        {
          case 1uLL:
            LODWORD(v25) = HIDWORD(v14) - v14;
            if (__OFSUB__(HIDWORD(v14), v14)) {
              goto LABEL_56;
            }
            uint64_t v25 = (int)v25;
LABEL_29:
            BOOL v28 = __OFADD__(v25, 24);
            uint64_t v29 = v25 + 24;
            if (v28) {
              goto LABEL_52;
            }
            BOOL v28 = __OFADD__(v29, v24);
            uint64_t v30 = v29 + v24;
            if (v28) {
              goto LABEL_53;
            }
            if (__OFADD__(v30, 1)) {
              goto LABEL_54;
            }
            size_t v49 = v24;
            int v31 = (int)v51;
            uint64_t v56 = (void *)swift_slowAlloc();
            uint64_t v32 = 0;
            uint64_t v48 = v56 + 3;
            switch(v31)
            {
              case 1:
                LODWORD(v32) = HIDWORD(v14) - v14;
                if (__OFSUB__(HIDWORD(v14), v14)) {
                  goto LABEL_58;
                }
                uint64_t v32 = (int)v32;
LABEL_36:
                uint64_t v33 = v32;
                sub_10096AFC0();
                uint64_t v34 = v33;
                v56[2] = v33;
                goto LABEL_40;
              case 2:
                if (__OFSUB__(*(void *)(v14 + 24), *(void *)(v14 + 16))) {
                  goto LABEL_59;
                }
                sub_10096AFC0();
                uint64_t v36 = *(void *)(v14 + 16);
                uint64_t v35 = *(void *)(v14 + 24);
                BOOL v28 = __OFSUB__(v35, v36);
                uint64_t v37 = v35 - v36;
                if (v28) {
                  goto LABEL_60;
                }
                v56[2] = v37;
                uint64_t v39 = *(void *)(v14 + 16);
                uint64_t v38 = *(void *)(v14 + 24);
                BOOL v28 = __OFSUB__(v38, v39);
                uint64_t v34 = v38 - v39;
                if (v28) {
                  goto LABEL_61;
                }
LABEL_40:
                size_t v40 = v49;
                if (v49 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_55;
                }
                uint64_t v51 = (char *)v48 + v34;
                uint64_t v41 = sub_10096BCF0();
                swift_bridgeObjectRelease();
                uint64_t v42 = v51;
                memcpy(v51, (const void *)(v41 + 32), v40);
                swift_release();
                v42[v40] = 0;
                int v43 = v56;
                *uint64_t v56 = v12;
                v43[1] = v42;
                sub_10001E9C0(v14, v15);
                int64_t v12 = v43;
                a2 = v50;
                break;
              case 3:
                goto LABEL_36;
              default:
                uint64_t v32 = BYTE6(v15);
                goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v27 = *(void *)(v14 + 16);
            uint64_t v26 = *(void *)(v14 + 24);
            BOOL v28 = __OFSUB__(v26, v27);
            uint64_t v25 = v26 - v27;
            if (!v28) {
              goto LABEL_29;
            }
            goto LABEL_57;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v25 = BYTE6(v15);
            goto LABEL_29;
        }
      }
    }
  }
  int64_t v18 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v18 >= v60) {
    goto LABEL_42;
  }
  unint64_t v19 = *(void *)(v59 + 8 * v18);
  ++v11;
  if (v19) {
    goto LABEL_20;
  }
  int64_t v11 = v18 + 1;
  if (v18 + 1 >= v60) {
    goto LABEL_42;
  }
  unint64_t v19 = *(void *)(v59 + 8 * v11);
  if (v19) {
    goto LABEL_20;
  }
  int64_t v11 = v18 + 2;
  if (v18 + 2 >= v60) {
    goto LABEL_42;
  }
  unint64_t v19 = *(void *)(v59 + 8 * v11);
  if (v19)
  {
LABEL_20:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_21;
  }
  int64_t v20 = v18 + 3;
  if (v20 < v60)
  {
    unint64_t v19 = *(void *)(v59 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v11 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v11 >= v60) {
          goto LABEL_42;
        }
        unint64_t v19 = *(void *)(v59 + 8 * v11);
        ++v20;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      JUMPOUT(0x100946F54);
    }
    int64_t v11 = v20;
    goto LABEL_20;
  }
LABEL_42:
  swift_release();
  uint64_t v44 = v55;
  uint64_t result = v54(&v64, v12);
  if (v44)
  {
    if (v12)
    {
      do
      {
        uint64_t v46 = (void *)*v12;
        uint64_t result = (void *)swift_slowDealloc();
        int64_t v12 = v46;
      }
      while (v46);
    }
  }
  else
  {
    if (v12)
    {
      do
      {
        unint64_t v47 = (void *)*v12;
        swift_slowDealloc();
        int64_t v12 = v47;
      }
      while (v47);
    }
    return (void *)v64;
  }
  return result;
}

uint64_t sub_100946F74@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v55 = a4;
  uint64_t v54 = sub_10096BCB0();
  __chkstk_darwin(v54);
  unint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v61 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v62 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v60 = "collaborationIdentifier";
  unint64_t v65 = 0x8000000100996D80;
  while (v11)
  {
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_23:
    uint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    if (*v22 != 0xD000000000000015 || v23 != v65)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v18);
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      if ((sub_10096D2D0() & 1) == 0)
      {
        uint64_t v63 = v24;
        uint64_t v64 = v23;
        uint64_t v51 = a2;
        uint64_t v52 = (unsigned char *)(v15 >> 62);
        swift_bridgeObjectRetain();
        sub_10001EBB0(v16, v15);
        sub_10096BC90();
        sub_10001F9C0();
        uint64_t v25 = sub_10096C8F0();
        (*v53)(v59, v54);
        uint64_t v26 = 0;
        switch((unint64_t)v52)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16)) {
              goto LABEL_57;
            }
            uint64_t v26 = (int)v26;
LABEL_31:
            BOOL v29 = __OFADD__(v26, 24);
            uint64_t v30 = v26 + 24;
            if (v29) {
              goto LABEL_53;
            }
            BOOL v29 = __OFADD__(v30, v25);
            uint64_t v31 = v30 + v25;
            if (v29) {
              goto LABEL_54;
            }
            if (__OFADD__(v31, 1)) {
              goto LABEL_55;
            }
            size_t v50 = v25;
            int v32 = (int)v52;
            uint64_t v58 = (void *)swift_slowAlloc();
            uint64_t v33 = 0;
            size_t v49 = v58 + 3;
            switch(v32)
            {
              case 1:
                LODWORD(v33) = HIDWORD(v16) - v16;
                if (__OFSUB__(HIDWORD(v16), v16)) {
                  goto LABEL_59;
                }
                uint64_t v33 = (int)v33;
LABEL_38:
                uint64_t v34 = v33;
                sub_10096AFC0();
                uint64_t v35 = v34;
                void v58[2] = v34;
                goto LABEL_42;
              case 2:
                if (__OFSUB__(*(void *)(v16 + 24), *(void *)(v16 + 16))) {
                  goto LABEL_60;
                }
                sub_10096AFC0();
                uint64_t v37 = *(void *)(v16 + 16);
                uint64_t v36 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v36, v37);
                uint64_t v38 = v36 - v37;
                if (v29) {
                  goto LABEL_61;
                }
                void v58[2] = v38;
                uint64_t v40 = *(void *)(v16 + 16);
                uint64_t v39 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v39, v40);
                uint64_t v35 = v39 - v40;
                if (v29) {
                  goto LABEL_62;
                }
LABEL_42:
                size_t v41 = v50;
                if (v50 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_56;
                }
                uint64_t v52 = (char *)v49 + v35;
                uint64_t v42 = sub_10096BCF0();
                swift_bridgeObjectRelease();
                int v43 = v52;
                memcpy(v52, (const void *)(v42 + 32), v41);
                swift_release();
                v43[v41] = 0;
                uint64_t v44 = v58;
                *uint64_t v58 = v13;
                v44[1] = v43;
                sub_10001E9C0(v16, v15);
                uint64_t v13 = v44;
                a2 = v51;
                break;
              case 3:
                goto LABEL_38;
              default:
                uint64_t v33 = BYTE6(v15);
                goto LABEL_38;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v16 + 16);
            uint64_t v27 = *(void *)(v16 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_31;
            }
            goto LABEL_58;
          case 3uLL:
            goto LABEL_31;
          default:
            uint64_t v26 = BYTE6(v15);
            goto LABEL_31;
        }
      }
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v19 >= v62) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v62) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v62) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 3;
  if (v19 + 3 >= v62) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20)
  {
LABEL_22:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_23;
  }
  int64_t v21 = v19 + 4;
  if (v21 < v62)
  {
    unint64_t v20 = *(void *)(v61 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v62) {
          goto LABEL_44;
        }
        unint64_t v20 = *(void *)(v61 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_22;
        }
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      JUMPOUT(0x100947490);
    }
    int64_t v12 = v21;
    goto LABEL_22;
  }
LABEL_44:
  swift_release();
  uint64_t v45 = v57;
  uint64_t result = v56(v13);
  if (v45)
  {
    if (v13)
    {
      do
      {
        unint64_t v47 = (void *)*v13;
        uint64_t result = swift_slowDealloc();
        uint64_t v13 = v47;
      }
      while (v47);
    }
  }
  else if (v13)
  {
    do
    {
      uint64_t v48 = (void *)*v13;
      uint64_t result = swift_slowDealloc();
      uint64_t v13 = v48;
    }
    while (v48);
  }
  return result;
}

double sub_1009474B0@<D0>(void (*a1)(long long *__return_ptr, void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  void (*v58)(long long *__return_ptr, void *);
  uint64_t v59;
  void *v60;
  char *v61;
  const char *v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  long long v67;
  double v68;
  long long v69;
  unint64_t v70;

  uint64_t v58 = a1;
  uint64_t v51 = a4;
  uint64_t v57 = sub_10096BCB0();
  __chkstk_darwin(v57);
  uint64_t v61 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v63 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v64 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v56 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v62 = "collaborationIdentifier";
  uint64_t v70 = 0x8000000100996D80;
  while (v11)
  {
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_23:
    uint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    if (*v22 != 0xD000000000000015 || v23 != v70)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v18);
      uint64_t v15 = *v14;
      unint64_t v16 = v14[1];
      if ((sub_10096D2D0() & 1) == 0)
      {
        unint64_t v65 = v24;
        uint64_t v66 = v23;
        uint64_t v54 = a2;
        uint64_t v55 = (unsigned char *)(v16 >> 62);
        swift_bridgeObjectRetain();
        sub_10001EBB0(v15, v16);
        sub_10096BC90();
        sub_10001F9C0();
        uint64_t v25 = sub_10096C8F0();
        (*v56)(v61, v57);
        uint64_t v26 = 0;
        switch((unint64_t)v55)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v15) - v15;
            if (__OFSUB__(HIDWORD(v15), v15)) {
              goto LABEL_58;
            }
            uint64_t v26 = (int)v26;
LABEL_31:
            BOOL v29 = __OFADD__(v26, 24);
            uint64_t v30 = v26 + 24;
            if (v29) {
              goto LABEL_54;
            }
            BOOL v29 = __OFADD__(v30, v25);
            uint64_t v31 = v30 + v25;
            if (v29) {
              goto LABEL_55;
            }
            if (__OFADD__(v31, 1)) {
              goto LABEL_56;
            }
            size_t v53 = v25;
            int v32 = (int)v55;
            uint64_t v60 = (void *)swift_slowAlloc();
            uint64_t v33 = 0;
            uint64_t v52 = v60 + 3;
            switch(v32)
            {
              case 1:
                LODWORD(v33) = HIDWORD(v15) - v15;
                if (__OFSUB__(HIDWORD(v15), v15)) {
                  goto LABEL_60;
                }
                uint64_t v33 = (int)v33;
LABEL_38:
                uint64_t v34 = v33;
                sub_10096AFC0();
                uint64_t v35 = v34;
                v60[2] = v34;
                goto LABEL_42;
              case 2:
                if (__OFSUB__(*(void *)(v15 + 24), *(void *)(v15 + 16))) {
                  goto LABEL_61;
                }
                sub_10096AFC0();
                uint64_t v37 = *(void *)(v15 + 16);
                uint64_t v36 = *(void *)(v15 + 24);
                BOOL v29 = __OFSUB__(v36, v37);
                uint64_t v38 = v36 - v37;
                if (v29) {
                  goto LABEL_62;
                }
                v60[2] = v38;
                uint64_t v40 = *(void *)(v15 + 16);
                uint64_t v39 = *(void *)(v15 + 24);
                BOOL v29 = __OFSUB__(v39, v40);
                uint64_t v35 = v39 - v40;
                if (v29) {
                  goto LABEL_63;
                }
LABEL_42:
                size_t v41 = v53;
                if (v53 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_57;
                }
                uint64_t v55 = (char *)v52 + v35;
                uint64_t v42 = sub_10096BCF0();
                swift_bridgeObjectRelease();
                int v43 = v55;
                memcpy(v55, (const void *)(v42 + 32), v41);
                swift_release();
                v43[v41] = 0;
                uint64_t v44 = v60;
                *uint64_t v60 = v13;
                v44[1] = v43;
                sub_10001E9C0(v15, v16);
                uint64_t v13 = v44;
                a2 = v54;
                break;
              case 3:
                goto LABEL_38;
              default:
                uint64_t v33 = BYTE6(v16);
                goto LABEL_38;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v15 + 16);
            uint64_t v27 = *(void *)(v15 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_31;
            }
            goto LABEL_59;
          case 3uLL:
            goto LABEL_31;
          default:
            uint64_t v26 = BYTE6(v16);
            goto LABEL_31;
        }
      }
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v19 >= v64) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v63 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v64) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v63 + 8 * v12);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v64) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v63 + 8 * v12);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v12 = v19 + 3;
  if (v19 + 3 >= v64) {
    goto LABEL_44;
  }
  unint64_t v20 = *(void *)(v63 + 8 * v12);
  if (v20)
  {
LABEL_22:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_23;
  }
  int64_t v21 = v19 + 4;
  if (v21 < v64)
  {
    unint64_t v20 = *(void *)(v63 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v64) {
          goto LABEL_44;
        }
        unint64_t v20 = *(void *)(v63 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_22;
        }
      }
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      JUMPOUT(0x1009479E8);
    }
    int64_t v12 = v21;
    goto LABEL_22;
  }
LABEL_44:
  swift_release();
  uint64_t v45 = v59;
  v58(&v67, v13);
  if (v45)
  {
    if (v13)
    {
      do
      {
        unint64_t v47 = (void *)*v13;
        swift_slowDealloc();
        uint64_t v13 = v47;
      }
      while (v47);
    }
  }
  else
  {
    if (v13)
    {
      do
      {
        uint64_t v48 = (void *)*v13;
        swift_slowDealloc();
        uint64_t v13 = v48;
      }
      while (v48);
    }
    double result = v68;
    long long v49 = v69;
    size_t v50 = v51;
    *uint64_t v51 = v67;
    *((double *)v50 + 2) = result;
    *(_OWORD *)((char *)v50 + 24) = v49;
  }
  return result;
}

uint64_t sub_100947A08(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 == 15) {
    return a1(0, 0, 1);
  }
  uint64_t v6 = *(void *)v3;
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v6 >> 32 < (int)v6) {
        __break(1u);
      }
      sub_10002D830(*(void *)v3, *(void *)(v3 + 8));
      sub_100952930((int)v6, v6 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, a1);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 24);
      sub_10002D830(*(void *)v3, *(void *)(v3 + 8));
      swift_retain();
      swift_retain();
      sub_100952930(v8, v9, v4 & 0x3FFFFFFFFFFFFFFFLL, a1);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v10, 0, 14);
      uint64_t v7 = (char *)v10;
      goto LABEL_9;
    default:
      v10[0] = *(void *)v3;
      LOWORD(v10[1]) = v4;
      BYTE2(v10[1]) = BYTE2(v4);
      BYTE3(v10[1]) = BYTE3(v4);
      BYTE4(v10[1]) = BYTE4(v4);
      BYTE5(v10[1]) = BYTE5(v4);
      uint64_t v7 = (char *)v10 + BYTE6(v4);
LABEL_9:
      a1((uint64_t)v10, (uint64_t)v7, 0);
      break;
  }
  return sub_10001E9AC(v6, v4);
}

unint64_t sub_100947C64(void *(*a1)(uint64_t *__return_ptr, void *, char *, uint64_t))
{
  unint64_t v3 = (unint64_t)v2;
  uint64_t v5 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  unint64_t v6 = *(void *)(v5 + 8);
  if (v6 >> 60 == 15)
  {
    a1(&v14, 0, 0, 1);
    if (!v2) {
      return v14;
    }
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    switch(v6 >> 62)
    {
      case 1uLL:
        if (v7 >> 32 < (int)v7) {
          __break(1u);
        }
        sub_10002D830(*(void *)v5, *(void *)(v5 + 8));
        unint64_t v3 = (unint64_t)sub_100952E18((int)v7, v7 >> 32, v6 & 0x3FFFFFFFFFFFFFFFLL, a1);
        goto LABEL_9;
      case 2uLL:
        uint64_t v9 = *(void *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        sub_10002D830(*(void *)v5, *(void *)(v5 + 8));
        swift_retain();
        swift_retain();
        unint64_t v3 = (unint64_t)sub_100952E18(v9, v10, v6 & 0x3FFFFFFFFFFFFFFFLL, a1);
        swift_release();
        swift_release();
LABEL_9:
        sub_10001E9AC(v7, v6);
        return v3;
      case 3uLL:
        memset(v13, 0, 14);
        uint64_t v8 = (char *)v13;
        goto LABEL_11;
      default:
        v13[0] = *(void *)v5;
        LOWORD(v13[1]) = v6;
        BYTE2(v13[1]) = BYTE2(v6);
        BYTE3(v13[1]) = BYTE3(v6);
        BYTE4(v13[1]) = BYTE4(v6);
        BYTE5(v13[1]) = BYTE5(v6);
        uint64_t v8 = (char *)v13 + BYTE6(v6);
LABEL_11:
        a1((uint64_t *)&v12, v13, v8, 0);
        sub_10001E9AC(v7, v6);
        if (!v2) {
          unint64_t v3 = v12;
        }
        break;
    }
  }
  return v3;
}

uint64_t sub_100947EE4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 == 15) {
    return a1(0, 0, 1);
  }
  uint64_t v6 = *(void *)v3;
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v6 >> 32 < (int)v6) {
        __break(1u);
      }
      sub_10002D830(*(void *)v3, *(void *)(v3 + 8));
      sub_100952930((int)v6, v6 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, a1);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 24);
      sub_10002D830(*(void *)v3, *(void *)(v3 + 8));
      swift_retain();
      swift_retain();
      sub_100952930(v8, v9, v4 & 0x3FFFFFFFFFFFFFFFLL, a1);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v10, 0, 14);
      uint64_t v7 = (char *)v10;
      goto LABEL_9;
    default:
      v10[0] = *(void *)v3;
      LOWORD(v10[1]) = v4;
      BYTE2(v10[1]) = BYTE2(v4);
      BYTE3(v10[1]) = BYTE3(v4);
      BYTE4(v10[1]) = BYTE4(v4);
      BYTE5(v10[1]) = BYTE5(v4);
      uint64_t v7 = (char *)v10 + BYTE6(v4);
LABEL_9:
      a1((uint64_t)v10, (uint64_t)v7, 0);
      break;
  }
  return sub_10001E9AC(v6, v4);
}

void *sub_100948140@<X0>(void *(*a1)(long long *__return_ptr, void *, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = v2 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  unint64_t v7 = *(void *)(v6 + 8);
  if (v7 >> 60 == 15)
  {
    double result = a1(&v22, 0, 0, 1);
    if (v3) {
      return result;
    }
    long long v9 = v22;
    uint64_t v10 = v23;
    long long v11 = v24;
  }
  else
  {
    uint64_t v12 = *(void *)v6;
    switch(v7 >> 62)
    {
      case 1uLL:
        if (v12 >> 32 < (int)v12) {
          __break(1u);
        }
        sub_10002D830(*(void *)v6, *(void *)(v6 + 8));
        sub_100952ED0((int)v12, v12 >> 32, a1, (uint64_t)&v25);
        if (v3) {
          return (void *)sub_10001E9AC(v12, v7);
        }
        uint64_t v10 = v26;
        long long v16 = v27;
        long long v17 = v25;
        goto LABEL_16;
      case 2uLL:
        uint64_t v14 = *(void *)(v12 + 16);
        uint64_t v15 = *(void *)(v12 + 24);
        sub_10002D830(*(void *)v6, *(void *)(v6 + 8));
        swift_retain();
        swift_retain();
        sub_100952ED0(v14, v15, a1, (uint64_t)&v28);
        if (v3)
        {
          swift_release();
          swift_release();
          return (void *)sub_10001E9AC(v12, v7);
        }
        uint64_t v10 = v29;
        long long v16 = v30;
        long long v17 = v28;
        swift_release();
        swift_release();
LABEL_16:
        double result = (void *)sub_10001E9AC(v12, v7);
        long long v11 = v16;
        long long v9 = v17;
        break;
      case 3uLL:
        memset(v18, 0, 14);
        uint64_t v13 = (char *)v18;
        goto LABEL_13;
      default:
        v18[0] = *(void *)v6;
        LOWORD(v18[1]) = v7;
        BYTE2(v18[1]) = BYTE2(v7);
        BYTE3(v18[1]) = BYTE3(v7);
        BYTE4(v18[1]) = BYTE4(v7);
        BYTE5(v18[1]) = BYTE5(v7);
        uint64_t v13 = (char *)v18 + BYTE6(v7);
LABEL_13:
        a1(&v19, v18, v13, 0);
        double result = (void *)sub_10001E9AC(v12, v7);
        if (v3) {
          return result;
        }
        long long v9 = v19;
        uint64_t v10 = v20;
        long long v11 = v21;
        break;
    }
  }
  *(_OWORD *)a2 = v9;
  *(void *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 24) = v11;
  return result;
}

uint64_t sub_100948438(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a2[22] = a1;
  sub_10001AE98(a3, (uint64_t)v18, &qword_100AD0EA0);
  v17[4] = a2;
  v17[5] = a4;
  _OWORD v17[6] = a5;
  v17[7] = a6;
  if (sub_1000DBD64((uint64_t)v18) != 1 && v19) {
    return sub_100946234(v18[5], v19, (uint64_t (*)(void *))sub_1009547D4);
  }
  uint64_t v20 = v17;
  a2[24] = 0;
  long long v11 = (void *)(a4 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  uint64_t v12 = v11[1];
  if (v12)
  {
    v17[12] = *v11;
    v17[13] = v12;
    v17[10] = 47;
    v17[11] = 0xE100000000000000;
    v17[8] = 58;
    void v17[9] = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v13 = sub_10096C910();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  v17[1] = v17;
  uint64_t v16 = __chkstk_darwin(v13);
  if (v15)
  {
    sub_100946234(v16, v15, (uint64_t (*)(void *))sub_1009537E8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    a2[17] = 0;
    __chkstk_darwin(v16);
    return sub_100947A08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953800);
  }
}

void *sub_10094866C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>), void *a6)
{
  unint64_t v7 = v6;
  a2[22] = a1;
  sub_10001AE98(a3, (uint64_t)v34, &qword_100AD0EA0);
  uint64_t v12 = sub_1000DBD64((uint64_t)v34);
  v33[2] = a2;
  v33[3] = a4;
  void v33[4] = a5;
  void v33[5] = a6;
  if (v12 == 1 || !v34[6])
  {
    v34[33] = v33;
    a2[24] = 0;
    uint64_t v16 = type metadata accessor for ItemMetadata();
    long long v17 = (void *)(a4 + *(int *)(v16 + 56));
    uint64_t v18 = v17[1];
    if (v18)
    {
      v33[10] = *v17;
      v33[11] = v18;
      v33[8] = 47;
      v33[9] = 0xE100000000000000;
      v33[6] = 58;
      v33[7] = 0xE100000000000000;
      uint64_t v29 = &type metadata for String;
      unint64_t v30 = sub_10001F9C0();
      uint64_t v16 = sub_10096C910();
      uint64_t v20 = v19;
    }
    else
    {
      uint64_t v20 = 0;
    }
    uint64_t v21 = __chkstk_darwin(v16);
    uint64_t v29 = a2;
    unint64_t v30 = a4;
    uint64_t v31 = a5;
    int v32 = a6;
    if (v20)
    {
      __chkstk_darwin(v21);
      long long v27 = sub_100954578;
      long long v28 = v22;
      unint64_t v7 = sub_100440314((uint64_t)sub_100954534, (uint64_t)v26, v23, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      a2[17] = 0;
      __chkstk_darwin(v21);
      v26[0] = a4;
      v26[1] = a2;
      long long v27 = (unint64_t (*)@<X0>(uint64_t@<X0>, _DWORD *@<X8>))a5;
      long long v28 = a6;
      unint64_t v24 = sub_100947C64((void *(*)(uint64_t *__return_ptr, void *, char *, uint64_t))sub_100954590);
      if (!v6) {
        return (void *)v24;
      }
    }
  }
  else
  {
    __chkstk_darwin(v12);
    uint64_t v31 = sub_10095454C;
    int v32 = v33;
    uint64_t v15 = sub_100440314((uint64_t)sub_100954534, (uint64_t)&v29, v13, v14);
    if (!v6) {
      return v15;
    }
  }
  return v7;
}

uint64_t sub_10094892C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a2[22] = a1;
  sub_10001AE98(a3, (uint64_t)v18, &qword_100AD0EA0);
  v17[4] = a2;
  v17[5] = a4;
  _OWORD v17[6] = a5;
  v17[7] = a6;
  if (sub_1000DBD64((uint64_t)v18) != 1 && v19) {
    return sub_10094643C(v18[5], v19, (uint64_t (*)(void *))sub_1009547EC);
  }
  uint64_t v20 = v17;
  a2[24] = 0;
  long long v11 = (void *)(a4 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  uint64_t v12 = v11[1];
  if (v12)
  {
    v17[12] = *v11;
    v17[13] = v12;
    v17[10] = 47;
    v17[11] = 0xE100000000000000;
    v17[8] = 58;
    void v17[9] = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v13 = sub_10096C910();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  v17[1] = v17;
  uint64_t v16 = __chkstk_darwin(v13);
  if (v15)
  {
    sub_10094643C(v16, v15, (uint64_t (*)(void *))sub_100953EA0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    a2[17] = 0;
    __chkstk_darwin(v16);
    return sub_100947EE4((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953EB8);
  }
}

void sub_100948B60(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  a2[22] = a1;
  sub_10001AE98(a3, (uint64_t)v32, &qword_100AD0EA0);
  uint64_t v13 = sub_1000DBD64((uint64_t)v32);
  v28[4] = a2;
  v28[5] = a4;
  v28[6] = a5;
  v28[7] = a6;
  if (v13 != 1 && v32[6])
  {
    __chkstk_darwin(v13);
    sub_100440428((uint64_t)sub_100954230, v14, v15, (uint64_t)v31);
    if (v7) {
      return;
    }
    uint64_t v21 = v31[0];
    uint64_t v22 = v31[1];
    uint64_t v23 = v31[2];
    uint64_t v24 = v31[3];
    uint64_t v25 = v31[4];
LABEL_16:
    *a7 = v21;
    a7[1] = v22;
    a7[2] = v23;
    a7[3] = v24;
    a7[4] = v25;
    return;
  }
  v28[1] = v28;
  a2[24] = 0;
  uint64_t v16 = type metadata accessor for ItemMetadata();
  long long v17 = (void *)(a4 + *(int *)(v16 + 56));
  uint64_t v18 = v17[1];
  if (v18)
  {
    v28[13] = *v17;
    v28[14] = v18;
    v28[11] = 47;
    v28[12] = 0xE100000000000000;
    v28[9] = 58;
    v28[10] = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v16 = sub_10096C910();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v26 = __chkstk_darwin(v16);
  if (v20)
  {
    __chkstk_darwin(v26);
    sub_100440428((uint64_t)sub_100954230, v27, v20, (uint64_t)v30);
    if (v7)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v21 = v30[0];
    uint64_t v22 = v30[1];
    uint64_t v23 = v30[2];
    uint64_t v24 = v30[3];
    uint64_t v25 = v30[4];
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  a2[17] = 0;
  __chkstk_darwin(v26);
  sub_100948140((void *(*)(long long *__return_ptr, void *, char *, uint64_t))sub_100954294, (uint64_t)v29);
  if (!v7)
  {
    uint64_t v21 = v29[0];
    uint64_t v22 = v29[1];
    uint64_t v23 = v29[2];
    uint64_t v24 = v29[3];
    uint64_t v25 = v29[4];
    goto LABEL_16;
  }
}

uint64_t sub_100948E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a2 + 192) = a1;
  if (*(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 56) + 8))
  {
    sub_10001F9C0();
    uint64_t v4 = sub_10096C910();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = __chkstk_darwin(v4);
  if (v6)
  {
    sub_100946234(v7, v6, (uint64_t (*)(void *))sub_1009537E8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 136) = 0;
    __chkstk_darwin(v7);
    return sub_100947A08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953800);
  }
}

void *sub_10094900C(uint64_t a1, void *a2, void *a3, unint64_t (*a4)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>), uint64_t a5)
{
  a2[24] = a1;
  uint64_t v10 = type metadata accessor for ItemMetadata();
  long long v11 = (void *)((char *)a3 + *(int *)(v10 + 56));
  uint64_t v12 = v11[1];
  if (v12)
  {
    uint64_t v31 = *v11;
    uint64_t v32 = v12;
    uint64_t v29 = 47;
    unint64_t v30 = 0xE100000000000000;
    uint64_t v27 = 58;
    unint64_t v28 = 0xE100000000000000;
    uint64_t v23 = &type metadata for String;
    unint64_t v24 = sub_10001F9C0();
    uint64_t v10 = sub_10096C910();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = __chkstk_darwin(v10);
  uint64_t v23 = a2;
  unint64_t v24 = (unint64_t)a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  if (v14)
  {
    __chkstk_darwin(v15);
    uint64_t v21 = sub_100954578;
    uint64_t v22 = v16;
    a3 = sub_100440314((uint64_t)sub_100954534, (uint64_t)v20, v17, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    a2[17] = 0;
    __chkstk_darwin(v15);
    v20[0] = a3;
    v20[1] = a2;
    uint64_t v21 = a4;
    uint64_t v22 = a5;
    unint64_t v18 = sub_100947C64((void *(*)(uint64_t *__return_ptr, void *, char *, uint64_t))sub_100954590);
    if (!v5) {
      return (void *)v18;
    }
  }
  return a3;
}

uint64_t sub_100949200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a2 + 192) = a1;
  if (*(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 56) + 8))
  {
    sub_10001F9C0();
    uint64_t v4 = sub_10096C910();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = __chkstk_darwin(v4);
  if (v6)
  {
    sub_10094643C(v7, v6, (uint64_t (*)(void *))sub_100953EA0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 136) = 0;
    __chkstk_darwin(v7);
    return sub_100947EE4((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953EB8);
  }
}

uint64_t sub_1009493AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a2 + 192) = a1;
  uint64_t v8 = type metadata accessor for ItemMetadata();
  if (*(void *)(a3 + *(int *)(v8 + 56) + 8))
  {
    sub_10001F9C0();
    uint64_t v8 = sub_10096C910();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v11 = __chkstk_darwin(v8);
  if (v10)
  {
    __chkstk_darwin(v11);
    sub_100440428((uint64_t)sub_100954230, v12, v10, (uint64_t)&v22);
    if (v4) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v14 = v23;
    long long v17 = v24;
    long long v18 = v22;
    uint64_t result = swift_bridgeObjectRelease();
    long long v16 = v17;
    long long v15 = v18;
    goto LABEL_11;
  }
  *(void *)(a2 + 136) = 0;
  __chkstk_darwin(v11);
  uint64_t result = (uint64_t)sub_100948140((void *(*)(long long *__return_ptr, void *, char *, uint64_t))sub_100954294, (uint64_t)&v19);
  if (!v4)
  {
    long long v15 = v19;
    uint64_t v14 = v20;
    long long v16 = v21;
LABEL_11:
    *(_OWORD *)a4 = v15;
    *(void *)(a4 + 16) = v14;
    *(_OWORD *)(a4 + 24) = v16;
  }
  return result;
}

uint64_t sub_1009495D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  uint64_t v9 = type metadata accessor for ItemMetadata();
  uint64_t v10 = *(void *)(a1 + *(int *)(v9 + 128));
  if (v10) {
    return sub_100946534((uint64_t (*)(void *))sub_100953818, (uint64_t)v16, v10, a5);
  }
  *(void *)(a2 + 160) = 0;
  uint64_t v12 = *(void *)(a1 + *(int *)(v9 + 120));
  if (!v12) {
    return a3(a2);
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1003E03CC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100949F40;
  aBlock[3] = &unk_100AA6270;
  long long v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v15);
  a3(a2);
  return swift_release();
}

uint64_t sub_100949790@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  uint64_t v9 = type metadata accessor for ItemMetadata();
  uint64_t v10 = *(void *)(a1 + *(int *)(v9 + 128));
  if (v10) {
    return sub_100946F74((uint64_t (*)(void *))sub_100953ED0, (uint64_t)v16, v10, a5);
  }
  *(void *)(a2 + 160) = 0;
  uint64_t v12 = *(void *)(a1 + *(int *)(v9 + 120));
  if (!v12) {
    return a3(a2);
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1009548D4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100949F40;
  aBlock[3] = &unk_100AA6478;
  long long v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v15);
  a3(a2);
  return swift_release();
}

uint64_t sub_100949948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  *(void *)(a2 + 160) = a1;
  uint64_t v6 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6) {
    return a4(a2);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  v11[4] = sub_1009548D4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100949F40;
  v11[3] = &unk_100AA62C0;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

void *sub_100949ABC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  *(void *)(a2 + 160) = a1;
  uint64_t v7 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v7;
    v12[4] = sub_1009548D4;
    v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100949F40;
    v12[3] = &unk_100AA66F8;
    uint64_t v10 = _Block_copy(v12);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    fpfs_serialize_tags();
    _Block_release(v10);
    a4(&v13, a2);
    uint64_t result = (void *)swift_release();
    if (v4) {
      return result;
    }
    return (void *)v13;
  }
  uint64_t result = ((void *(*)(uint64_t *__return_ptr, uint64_t))a4)(&v13, a2);
  if (!v4) {
    return (void *)v13;
  }
  return result;
}

uint64_t sub_100949C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  *(void *)(a2 + 160) = a1;
  uint64_t v6 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6) {
    return a4(a2);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  v11[4] = sub_1009548D4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100949F40;
  v11[3] = &unk_100AA64C8;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

void *sub_100949DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a2 + 160) = a1;
  uint64_t v9 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (v9)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    v16[4] = sub_1009548D4;
    v16[5] = v11;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100949F40;
    v16[3] = &unk_100AA6608;
    uint64_t v12 = _Block_copy(v16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    fpfs_serialize_tags();
    _Block_release(v12);
    a4(&v17, a2);
    uint64_t result = (void *)swift_release();
    if (v5) {
      return result;
    }
    goto LABEL_3;
  }
  uint64_t result = ((void *(*)(long long *__return_ptr, uint64_t))a4)(&v17, a2);
  if (!v5)
  {
LABEL_3:
    uint64_t v14 = v18;
    long long v15 = v19;
    *(_OWORD *)a5 = v17;
    *(void *)(a5 + 16) = v14;
    *(_OWORD *)(a5 + 24) = v15;
  }
  return result;
}

uint64_t sub_100949F40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  LOBYTE(a2) = v3(a2);
  swift_release();
  return a2 & 1;
}

uint64_t sub_100949F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100358858();
  uint64_t v7 = swift_allocError();
  *(_OWORD *)uint64_t v8 = xmmword_100991650;
  *(unsigned char *)(v8 + 16) = 10;
  uint64_t v20 = v7;
  char v21 = 1;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = &v20;
  v9[3] = a4;
  v9[4] = a5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1009533BC;
  *(void *)(v10 + 24) = v9;
  v19[4] = sub_10002BF28;
  v19[5] = v10;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10002BF58;
  v19[3] = &unk_100AA5FF0;
  uint64_t v11 = _Block_copy(v19);
  swift_retain();
  swift_release();
  int v12 = fpfs_fgetfileattrs();
  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v12 < 0)
    {
      int v15 = sub_10096B4D0();
      uint64_t v16 = sub_1005970E0(v15, 7, 0, 0xAu);
      uint64_t v17 = v20;
      char v18 = v21;
      uint64_t v20 = v16;
      char v21 = 1;
      sub_1003545C4(v17, v18);
      if ((v21 & 1) == 0) {
        return swift_release();
      }
    }
    else if ((v21 & 1) == 0)
    {
      return swift_release();
    }
    v19[0] = v20;
    swift_errorRetain();
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
    sub_1003545C4(v20, v21);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_10094A1CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  void aBlock[7] = a1;
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACEC90);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v7);
  int v12 = (void *)((char *)aBlock - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (void *)((char *)aBlock - v13);
  sub_100358858();
  uint64_t v15 = swift_allocError();
  *(_OWORD *)uint64_t v16 = xmmword_100991650;
  *(unsigned char *)(v16 + 16) = 10;
  *uint64_t v14 = v15;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v14;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100953E34;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1009548D8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BF58;
  aBlock[3] = &unk_100AA6428;
  long long v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  int v20 = fpfs_fgetfileattrs();
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    if (v20 < 0)
    {
      int v22 = sub_10096B4D0();
      uint64_t *v12 = sub_1005970E0(v22, 7, 0, 0xAu);
      swift_storeEnumTagMultiPayload();
      sub_1000148B8((uint64_t)v12, (uint64_t)v14, (uint64_t *)&unk_100ACEC90);
    }
    sub_10002B70C((uint64_t)v14, (uint64_t)v9, (uint64_t *)&unk_100ACEC90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      aBlock[0] = *v9;
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      swift_willThrowTypedImpl();
      sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACEC90);
      return swift_release();
    }
    else
    {
      sub_10001AE98((uint64_t)v9, v23, &qword_100ACB910);
      sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACEC90);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10094A4F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  void aBlock[7] = a1;
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACEC50);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v7);
  int v12 = (void *)((char *)aBlock - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (void *)((char *)aBlock - v13);
  sub_100358858();
  uint64_t v15 = swift_allocError();
  *(_OWORD *)uint64_t v16 = xmmword_100991650;
  *(unsigned char *)(v16 + 16) = 10;
  *uint64_t v14 = v15;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v14;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100953FF4;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1009548D8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BF58;
  aBlock[3] = &unk_100AA6540;
  long long v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  int v20 = fpfs_fgetfileattrs();
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    if (v20 < 0)
    {
      int v22 = sub_10096B4D0();
      uint64_t *v12 = sub_1005970E0(v22, 7, 0, 0xAu);
      swift_storeEnumTagMultiPayload();
      sub_1000148B8((uint64_t)v12, (uint64_t)v14, (uint64_t *)&unk_100ACEC50);
    }
    sub_10002B70C((uint64_t)v14, (uint64_t)v9, (uint64_t *)&unk_100ACEC50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      aBlock[0] = *v9;
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      swift_willThrowTypedImpl();
      sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACEC50);
      return swift_release();
    }
    else
    {
      sub_10002C684((uint64_t)v9, v23, type metadata accessor for VFSItem);
      sub_10002B770((uint64_t)v14, (uint64_t *)&unk_100ACEC50);
      return swift_release();
    }
  }
  return result;
}

uint64_t DocumentWharf.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  uint64_t v2 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  _Block_release(*(const void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle + 56));

  swift_unknownObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACD950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  _Block_release(*(const void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext));

  return v0;
}

__n128 DocumentWharf.wharfHandle.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle);
  swift_beginAccess();
  uint64_t v4 = *v3;
  int v5 = *((_DWORD *)v3 + 4);
  __n128 v13 = *(__n128 *)(v3 + 3);
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  uint64_t v8 = (const void *)v3[7];
  int v9 = *((_DWORD *)v3 + 16);
  char v10 = *((unsigned char *)v3 + 68);
  uint64_t v11 = v3[1];
  _Block_copy(v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 16) = v5;
  __n128 result = v13;
  *(__n128 *)(a1 + 24) = v13;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 68) = v10;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DocumentWharf.activate()()
{
  uint64_t v2 = sub_10096B7D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_activated) = 1;
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10094E5B8);
  if (!v1)
  {
    DocumentWharf.excludeFromBackups()();
    if (!v6)
    {
      sub_100011348(0, (unint64_t *)&qword_100ACB010);
      uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
      uint64_t v8 = sub_10096C700();
      uint64_t v9 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
      *(void *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource) = v8;
      swift_unknownObjectRelease();
      if (*(void *)(v0 + v9))
      {
        swift_getObjectType();
        v11[1] = v7;
        swift_unknownObjectRetain();
        sub_10096B770();
        uint64_t v10 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_1006B7CE4(0, (uint64_t)v5, (uint64_t)sub_10094E7C0, v10);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        swift_release();
        if (*(void *)(v0 + v9))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_10096C750();
          swift_unknownObjectRelease();
        }
      }
      *(unsigned char *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v0 + v9))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        swift_unknownObjectRelease();
      }
      swift_retain();
      sub_1006B8108(0, (uint64_t)"enableDirstat()", 15, 2, (uint64_t)sub_10094EA54, v0);
      swift_release();
    }
  }
}

Swift::Void __swiftcall DocumentWharf.invalidate()()
{
  uint64_t v1 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
  if (*(void *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C750();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + v1))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C720();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  sub_100270A48(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_10094EADC, v0);
}

uint64_t DocumentWharf.runGarbageCollection()()
{
  uint64_t v1 = sub_10096B480();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10096B830();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
  void *v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_10096B860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) & 1) == 0)
    {
      __swp(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy, (unsigned int *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy));
      __chkstk_darwin(result);
      *(&v10 - 2) = v0;
      *((unsigned char *)&v10 - 8) = v9;
      return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100954448);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DocumentWharf.garbageCollectDeletedItems(deleteBusyFiles:wait:)(Swift::Bool deleteBusyFiles, Swift::Bool wait)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = deleteBusyFiles;
  if (*(void *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C7F0(1uLL);
    swift_unknownObjectRelease();
  }
  if (wait)
  {
    uint64_t v4 = *(NSObject **)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
    v6[4] = Filename.init(rawValue:);
    v6[5] = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_100014080;
    v6[3] = &unk_100AA5F48;
    int v5 = _Block_copy(v6);
    swift_release();
    dispatch_sync(v4, v5);
    _Block_release(v5);
    if (swift_isEscapingClosureAtFileLocation()) {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DocumentWharf.excludeFromBackups()()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v66 = *(void *)(v1 - 8);
  uint64_t v67 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v64 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v65 = (char *)v55 - v4;
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096AA50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096AA40();
  sub_10096A9F0();
  __n128 v13 = (char *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root, v5);
  uint64_t v14 = v68;
  sub_10096AD00();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return;
  }
  uint64_t v60 = v0;
  uint64_t v61 = v8;
  uint64_t v62 = 0;
  uint64_t v63 = v5;
  uint64_t v68 = v9;
  CFErrorRef error = 0;
  sub_10096AD20(v15);
  CFURLRef v17 = v16;
  int v18 = CFURLSetResourcePropertyForKey(v16, _kCFURLIsExcludedFromCloudBackupKey, kCFBooleanTrue, &error);

  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v63);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v68);
    return;
  }
  unint64_t v59 = v13;
  CFErrorRef v19 = error;
  uint64_t v20 = v10;
  if (error)
  {
    type metadata accessor for CFError(0);
    sub_100025EB4(&qword_100ADF5F8, type metadata accessor for CFError);
    char v21 = v19;
    swift_allocError();
    *int v22 = v21;
    id v23 = (id)fpfs_current_or_default_log();
    long long v24 = v65;
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v25 = sub_10096B470();
    os_log_type_t v26 = sub_10096C5B0();
    LODWORD(v64) = v26;
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = v63;
    uint64_t v29 = v66;
    if (v27)
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      os_log_t v58 = (os_log_t)swift_slowAlloc();
      os_log_t v71 = v58;
      *(_DWORD *)uint64_t v30 = 136315394;
      v55[1] = v30 + 4;
      os_log_t v56 = v25;
      sub_10096AD20((NSURL *)(v30 + 4));
      unint64_t v59 = v12;
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, "fp_shortDescription");

      uint64_t v34 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v36 = v35;

      uint64_t v70 = sub_100719D44(v34, v36, (uint64_t *)&v71);
      sub_10096C8C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      swift_getErrorValue();
      uint64_t v37 = (objc_class *)Error.prettyDescription.getter(v69);
      uint64_t v70 = (uint64_t)v37;
      sub_10096C8C0();
      v57->Class isa = v37;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v38 = v56;
      _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v64, "Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s: %@", (uint8_t *)v30, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v65, v67);
LABEL_10:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v63);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v59, v68);
      return;
    }

    swift_errorRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v67);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v28);
  }
  else
  {
    id v39 = (id)fpfs_current_or_default_log();
    uint64_t v40 = v64;
    sub_10096B490();
    swift_retain_n();
    size_t v41 = sub_10096B470();
    os_log_type_t v42 = sub_10096C5B0();
    int v43 = v42;
    BOOL v44 = os_log_type_enabled(v41, v42);
    uint64_t v45 = v63;
    uint64_t v46 = v66;
    if (v44)
    {
      os_log_t v58 = v41;
      LODWORD(v65) = v43;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      os_log_t v71 = v57;
      *(_DWORD *)uint64_t v47 = 136315138;
      os_log_t v56 = (os_log_t)(v47 + 4);
      sub_10096AD20((NSURL *)(v47 + 4));
      unint64_t v59 = v12;
      long long v49 = v48;
      id v50 = objc_msgSend(v48, "fp_shortDescription");

      uint64_t v51 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v53 = v52;

      uint64_t v70 = sub_100719D44(v51, v53, (uint64_t *)&v71);
      sub_10096C8C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v54 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v65, "Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s", (uint8_t *)v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v64, v67);
      goto LABEL_10;
    }
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v40, v67);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v45);
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v68);
}

uint64_t DocumentWharf.wharfUnload(_:fd:with:at:metadata:baseVersion:lookupScope:flags:opcode:nonSyncableAttributes:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v51 = a8;
  uint64_t v50 = a7;
  uint64_t v49 = a6;
  uint64_t v48 = a5;
  uint64_t v52 = a4;
  uint64_t v55 = sub_10096A7B0();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  unint64_t v53 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a3[1];
  *(void *)&long long v56 = v10;
  uint64_t v17 = v10 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v16 != *(void *)(v17 + 32)) {
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/wharf/DocumentWharf.swift", 103, 2, 297);
  }
  uint64_t v18 = *a3;
  int v19 = *((_DWORD *)a3 + 4);
  int v20 = *((_DWORD *)a3 + 5);
  uint64_t v21 = a3[3];
  v62[0] = *a3;
  v62[1] = v16;
  int v63 = v19;
  int v64 = v20;
  uint64_t v65 = v21;
  uint64_t v66 = a3[4];
  *(void *)&long long v59 = 0;
  int v58 = 0;
  uint64_t v22 = fpfs_pkg_dirstat();
  if ((v22 & 0x80000000) != 0)
  {
    uint64_t v47 = a9;
    int v23 = sub_10096B4D0();
    sub_1005970E0(v23, 25, 0, 0xAu);
    swift_willThrow();
    *(void *)&long long v57 = 0;
    swift_errorRetain();
    LODWORD(v59) = sub_10096A770();
    sub_100045CB4();
    char v24 = sub_10096AA60();
    swift_errorRelease();
    if ((v24 & 1) == 0)
    {
      swift_errorRetain();
      LODWORD(v59) = sub_10096A6E0();
      char v25 = sub_10096AA60();
      uint64_t result = swift_errorRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v42 = v56;
        *(unsigned char *)(v56 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (!*(void *)(v42 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource)) {
          return result;
        }
        goto LABEL_21;
      }
    }
    uint64_t v22 = swift_errorRelease();
    a9 = v47;
  }
  else
  {
    int v20 = v58;
    int v64 = v58;
  }
  if (v19 == *(_DWORD *)(a1 + 32) && v18 == *(void *)(a1 + 16) && v20 == *(_DWORD *)(a1 + 36))
  {
    __chkstk_darwin(v22);
    *(&v46 - 14) = v48;
    *(&v46 - 13) = v27;
    *(&v46 - 12) = (uint64_t)a3;
    *(&v46 - 11) = (uint64_t)v62;
    uint64_t v28 = v50;
    *(&v46 - 10) = v49;
    *(&v46 - 9) = v28;
    *(&v46 - 8) = v51;
    *((unsigned char *)&v46 - 56) = a10;
    *((unsigned char *)&v46 - 55) = v29 & 1;
    uint64_t v30 = v56;
    *(&v46 - 6) = v56;
    *((_DWORD *)&v46 - 10) = a2;
    *(&v46 - 4) = v32;
    *(&v46 - 3) = v31;
    *((_DWORD *)&v46 - 4) = v33;
    uint64_t v34 = v57;
    uint64_t result = sub_10096ADB0();
    if (v34)
    {
      *(unsigned char *)(v30 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (!*(void *)(v30 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource)) {
        return result;
      }
      goto LABEL_21;
    }
    long long v43 = v59;
    uint64_t v44 = v60;
    long long v45 = v61;
    *(unsigned char *)(v30 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v30 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      long long v57 = v43;
      long long v56 = v45;
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      uint64_t result = swift_unknownObjectRelease();
      long long v45 = v56;
      long long v43 = v57;
    }
    *(_OWORD *)a9 = v43;
    *(void *)(a9 + 16) = v44;
    *(_OWORD *)(a9 + 24) = v45;
  }
  else
  {
    __chkstk_darwin(v22);
    uint64_t v35 = v56;
    *(&v46 - 4) = v56;
    *((_DWORD *)&v46 - 6) = 1;
    *(&v46 - 2) = v18;
    uint64_t v36 = v57;
    uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    if (v36)
    {
      *(unsigned char *)(v35 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (!*(void *)(v35 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource)) {
        return result;
      }
      goto LABEL_21;
    }
    uint64_t v37 = OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy;
    *(unsigned char *)(v35 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    uint64_t v38 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
    if (*(void *)(v35 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
    LODWORD(v59) = 70;
    sub_10002B7CC(&qword_100ACE1E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BB0;
    *(void *)(inited + 32) = 0x6E6F73616572;
    *(void *)(inited + 40) = 0xE600000000000000;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000028;
    *(void *)(inited + 56) = 0x80000001009BF0B0;
    sub_10004621C(inited);
    sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    uint64_t v40 = v53;
    uint64_t v41 = v55;
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v41);
    uint64_t result = swift_willThrow();
    *(unsigned char *)(v35 + v37) = 0;
    if (*(void *)(v35 + v38))
    {
LABEL_21:
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10094C11C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void (*a4)(uint64_t, void, void, void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  int v76 = a2;
  uint64_t v65 = a6;
  uint64_t v71 = sub_10096A7B0();
  uint64_t v12 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a5;
  int v63 = a4;
  v82[2] = a4;
  v82[3] = a5;
  uint64_t v64 = a3;
  uint64_t v14 = a3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  uint64_t v15 = swift_beginAccess();
  uint64_t v74 = &v89;
  uint64_t v67 = (void (**)(char *, uint64_t))(v12 + 8);
  NSErrorUserInfoKey v68 = NSUnderlyingErrorKey;
  uint64_t v72 = &v85;
  useconds_t v16 = 1000;
  long long v66 = xmmword_100973BB0;
  uint64_t v69 = v14;
  while (1)
  {
    unsigned int v81 = -1;
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    int v19 = *(_DWORD *)(v14 + 8);
    uint64_t v20 = __chkstk_darwin(v15);
    int v25 = v76;
    *((_DWORD *)&v62 - 4) = v19;
    *((_DWORD *)&v62 - 3) = v25;
    os_log_type_t v26 = v74;
    *uint64_t v74 = 0;
    v26[1] = 0;
    *(void *)&long long v87 = v21;
    *((void *)&v87 + 1) = v22;
    unint64_t v88 = __PAIR64__(v24, v23);
    uint64_t v77 = &v62;
    if (!v18)
    {
      *(void *)&long long v83 = v21;
      *((void *)&v83 + 1) = v22;
      unint64_t v84 = __PAIR64__(v24, v23);
      uint64_t v37 = v72;
      *uint64_t v72 = 0;
      v37[1] = 0;
      uint64_t v38 = fpfs_openfdbyhandle();
      if ((v38 & 0x80000000) != 0)
      {
        if (!sub_10096B4D0() || (uint64_t v39 = sub_10096B4A0(), (v39 & 0x100000000) != 0))
        {
          sub_100358858();
          swift_allocError();
          *(void *)uint64_t v51 = 0;
          *(void *)(v51 + 8) = 0;
          *(unsigned char *)(v51 + 16) = 10;
        }
        else
        {
          LODWORD(v79[0]) = v39;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v66;
          *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(inited + 40) = v41;
          *(void *)(inited + 72) = &type metadata for VFSFileError;
          *(void *)(inited + 48) = 0;
          *(void *)(inited + 56) = 0;
          *(unsigned char *)(inited + 64) = 10;
          sub_10004621C(inited);
          sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          long long v43 = v70;
          uint64_t v42 = v71;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v44 = v42;
          uint64_t v14 = v69;
          (*v67)(v43, v44);
        }
        swift_willThrow();
        goto LABEL_22;
      }
      uint64_t v56 = v38;
      goto LABEL_44;
    }
    __chkstk_darwin(v20);
    *(&v62 - 4) = (uint64_t)&v87;
    *(&v62 - 3) = (uint64_t)sub_10043F5DC;
    *(&v62 - 2) = v27;
    uint64_t v75 = v28;
    if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v17 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_10096CBC0();
      if (v7)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v7 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v56 = v80;
LABEL_44:
      uint64_t v57 = sub_100595FB8(0xFFFFFFFFLL);
      unsigned int v81 = v56;
      __chkstk_darwin(v57);
      *(&v62 - 4) = (uint64_t)&v81;
      *(&v62 - 3) = (uint64_t)sub_100954468;
      *(&v62 - 2) = (uint64_t)v82;
      *(void *)&long long v87 = v58;
      DWORD2(v87) = v59;
      BYTE12(v87) = v60;
      sub_100949F90((uint64_t)&v87, v56, 0, (uint64_t)sub_1009548DC, (uint64_t)(&v62 - 6));
      return sub_100595FB8(v81);
    }
    if ((v18 & 0x2000000000000000) == 0)
    {
      unint64_t v73 = &v62;
      if ((v17 & 0x1000000000000000) != 0)
      {
        uint64_t v29 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        uint64_t v29 = sub_10096CC90();
        if (!v29)
        {
          uint64_t v89 = 0;
          long long v83 = v87;
          unint64_t v84 = v88;
          unint64_t v85 = 0;
          uint64_t v86 = v90;
          swift_bridgeObjectRetain();
          unsigned int v30 = fpfs_openfdbyhandle();
          if ((v30 & 0x80000000) == 0)
          {
LABEL_42:
            unsigned int v80 = v30;
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          if (sub_10096B4D0())
          {
            uint64_t v31 = sub_10096B4A0();
            if ((v31 & 0x100000000) == 0) {
              goto LABEL_11;
            }
          }
          goto LABEL_31;
        }
      }
      uint64_t v89 = (void *)v29;
      long long v83 = v87;
      unint64_t v84 = v88;
      unint64_t v85 = (void *)v29;
      uint64_t v86 = v90;
      swift_bridgeObjectRetain();
      unsigned int v30 = fpfs_openfdbyhandle();
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_42;
      }
      if (sub_10096B4D0())
      {
        uint64_t v31 = sub_10096B4A0();
        if ((v31 & 0x100000000) == 0)
        {
LABEL_11:
          LODWORD(v79[0]) = v31;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t v32 = swift_initStackObject();
          *(_OWORD *)(v32 + 16) = v66;
          *(void *)(v32 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(v32 + 40) = v33;
          *(void *)(v32 + 72) = &type metadata for VFSFileError;
          *(void *)(v32 + 48) = 0;
          *(void *)(v32 + 56) = 0;
          *(unsigned char *)(v32 + 64) = 10;
          sub_10004621C(v32);
          sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          uint64_t v35 = v70;
          uint64_t v34 = v71;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v36 = v34;
          uint64_t v14 = v69;
          (*v67)(v35, v36);
LABEL_32:
          swift_willThrow();
          uint64_t v7 = 0;
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
LABEL_31:
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v53 = 0;
      *(void *)(v53 + 8) = 0;
      *(unsigned char *)(v53 + 16) = 10;
      goto LABEL_32;
    }
    v79[0] = v17;
    v79[1] = v18 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v89 = v79;
    long long v83 = v87;
    unint64_t v84 = v88;
    unint64_t v85 = v79;
    uint64_t v86 = v90;
    swift_bridgeObjectRetain();
    unsigned int v30 = fpfs_openfdbyhandle();
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    if (!sub_10096B4D0() || (uint64_t v45 = sub_10096B4A0(), (v45 & 0x100000000) != 0))
    {
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v52 = 0;
      *(void *)(v52 + 8) = 0;
      *(unsigned char *)(v52 + 16) = 10;
    }
    else
    {
      int v78 = v45;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v46 = swift_initStackObject();
      *(_OWORD *)(v46 + 16) = v66;
      *(void *)(v46 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(v46 + 40) = v47;
      *(void *)(v46 + 72) = &type metadata for VFSFileError;
      *(void *)(v46 + 48) = 0;
      *(void *)(v46 + 56) = 0;
      *(unsigned char *)(v46 + 64) = 10;
      sub_10004621C(v46);
      sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      uint64_t v49 = v70;
      uint64_t v48 = v71;
      sub_10096ABD0();
      sub_10096A790();
      uint64_t v50 = v48;
      uint64_t v14 = v69;
      (*v67)(v49, v50);
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_33:
    swift_errorRetain();
    LODWORD(v87) = sub_10096A680();
    sub_100045CB4();
    char v54 = sub_10096AA60();
    swift_errorRelease();
    if ((v54 & 1) == 0) {
      break;
    }
    swift_errorRelease();
    usleep(v16);
    if (2 * v16 >= 0xF4240) {
      useconds_t v16 = 1000000;
    }
    else {
      v16 *= 2;
    }
    uint64_t v15 = sub_100595FB8(v81);
  }
  swift_errorRetain();
  LODWORD(v87) = sub_10096A710();
  char v55 = sub_10096AA60();
  swift_errorRelease();
  if (v55)
  {
    swift_errorRelease();
    v63(0xFFFFFFFFLL, 0, 0, 0);
  }
  return sub_100595FB8(v81);
}

uint64_t sub_10094CAA0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void (*a4)(uint64_t, void, void, void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  int v77 = a2;
  uint64_t v66 = a6;
  uint64_t v72 = sub_10096A7B0();
  uint64_t v12 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a5;
  uint64_t v64 = a4;
  v83[2] = a4;
  v83[3] = a5;
  uint64_t v65 = a3;
  uint64_t v14 = a3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  uint64_t v15 = swift_beginAccess();
  uint64_t v75 = &v90;
  NSErrorUserInfoKey v68 = (void (**)(char *, uint64_t))(v12 + 8);
  NSErrorUserInfoKey v69 = NSUnderlyingErrorKey;
  unint64_t v73 = &v86;
  int v16 = 1000;
  long long v67 = xmmword_100973BB0;
  uint64_t v70 = v14;
  while (1)
  {
    unsigned int v82 = -1;
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    int v19 = *(_DWORD *)(v14 + 8);
    uint64_t v20 = __chkstk_darwin(v15);
    int v25 = v77;
    *((_DWORD *)&v63 - 4) = v19;
    *((_DWORD *)&v63 - 3) = v25;
    os_log_type_t v26 = v75;
    void *v75 = 0;
    v26[1] = 0;
    *(void *)&long long v88 = v21;
    *((void *)&v88 + 1) = v22;
    unint64_t v89 = __PAIR64__(v24, v23);
    useconds_t v78 = v16;
    if (!v18)
    {
      *(void *)&long long v84 = v21;
      *((void *)&v84 + 1) = v22;
      unint64_t v85 = __PAIR64__(v24, v23);
      uint64_t v37 = v73;
      *unint64_t v73 = 0;
      v37[1] = 0;
      uint64_t v38 = fpfs_openfdbyhandle();
      if ((v38 & 0x80000000) != 0)
      {
        if (!sub_10096B4D0() || (uint64_t v39 = sub_10096B4A0(), (v39 & 0x100000000) != 0))
        {
          sub_100358858();
          swift_allocError();
          *(void *)uint64_t v51 = 0;
          *(void *)(v51 + 8) = 0;
          *(unsigned char *)(v51 + 16) = 10;
        }
        else
        {
          LODWORD(v80[0]) = v39;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v67;
          *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(inited + 40) = v41;
          *(void *)(inited + 72) = &type metadata for VFSFileError;
          *(void *)(inited + 48) = 0;
          *(void *)(inited + 56) = 0;
          *(unsigned char *)(inited + 64) = 10;
          sub_10004621C(inited);
          sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          long long v43 = v71;
          uint64_t v42 = v72;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v44 = v42;
          uint64_t v14 = v70;
          (*v68)(v43, v44);
        }
        swift_willThrow();
        goto LABEL_22;
      }
      uint64_t v57 = v38;
      goto LABEL_43;
    }
    __chkstk_darwin(v20);
    *(&v63 - 4) = (uint64_t)&v88;
    *(&v63 - 3) = (uint64_t)sub_10021E510;
    *(&v63 - 2) = v27;
    uint64_t v76 = v28;
    if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v17 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_10096CBC0();
      if (v7)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v7 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_42:
      uint64_t v57 = v81;
LABEL_43:
      uint64_t v58 = sub_100595FB8(0xFFFFFFFFLL);
      unsigned int v82 = v57;
      __chkstk_darwin(v58);
      *(&v63 - 4) = (uint64_t)&v82;
      *(&v63 - 3) = (uint64_t)sub_100953F9C;
      *(&v63 - 2) = (uint64_t)v83;
      *(void *)&long long v88 = v59;
      DWORD2(v88) = v60;
      BYTE12(v88) = v61;
      sub_100949F90((uint64_t)&v88, v57, 0, (uint64_t)sub_100953FC4, (uint64_t)(&v63 - 6));
      return sub_100595FB8(v82);
    }
    if ((v18 & 0x2000000000000000) == 0)
    {
      uint64_t v74 = &v63;
      if ((v17 & 0x1000000000000000) != 0)
      {
        uint64_t v29 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        uint64_t v29 = sub_10096CC90();
        if (!v29)
        {
          uint64_t v90 = 0;
          long long v84 = v88;
          unint64_t v85 = v89;
          uint64_t v86 = 0;
          uint64_t v87 = v91;
          swift_bridgeObjectRetain();
          unsigned int v30 = fpfs_openfdbyhandle();
          if ((v30 & 0x80000000) == 0)
          {
LABEL_41:
            unsigned int v81 = v30;
            swift_bridgeObjectRelease();
            goto LABEL_42;
          }
          if (sub_10096B4D0())
          {
            uint64_t v31 = sub_10096B4A0();
            if ((v31 & 0x100000000) == 0) {
              goto LABEL_11;
            }
          }
          goto LABEL_31;
        }
      }
      uint64_t v90 = (void *)v29;
      long long v84 = v88;
      unint64_t v85 = v89;
      uint64_t v86 = (void *)v29;
      uint64_t v87 = v91;
      swift_bridgeObjectRetain();
      unsigned int v30 = fpfs_openfdbyhandle();
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_41;
      }
      if (sub_10096B4D0())
      {
        uint64_t v31 = sub_10096B4A0();
        if ((v31 & 0x100000000) == 0)
        {
LABEL_11:
          LODWORD(v80[0]) = v31;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t v32 = swift_initStackObject();
          *(_OWORD *)(v32 + 16) = v67;
          *(void *)(v32 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(v32 + 40) = v33;
          *(void *)(v32 + 72) = &type metadata for VFSFileError;
          *(void *)(v32 + 48) = 0;
          *(void *)(v32 + 56) = 0;
          *(unsigned char *)(v32 + 64) = 10;
          sub_10004621C(v32);
          sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          uint64_t v35 = v71;
          uint64_t v34 = v72;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v36 = v34;
          uint64_t v14 = v70;
          (*v68)(v35, v36);
LABEL_32:
          swift_willThrow();
          uint64_t v7 = 0;
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
LABEL_31:
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v53 = 0;
      *(void *)(v53 + 8) = 0;
      *(unsigned char *)(v53 + 16) = 10;
      goto LABEL_32;
    }
    v80[0] = v17;
    v80[1] = v18 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v90 = v80;
    long long v84 = v88;
    unint64_t v85 = v89;
    uint64_t v86 = v80;
    uint64_t v87 = v91;
    swift_bridgeObjectRetain();
    unsigned int v30 = fpfs_openfdbyhandle();
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    if (!sub_10096B4D0() || (uint64_t v45 = sub_10096B4A0(), (v45 & 0x100000000) != 0))
    {
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v52 = 0;
      *(void *)(v52 + 8) = 0;
      *(unsigned char *)(v52 + 16) = 10;
    }
    else
    {
      int v79 = v45;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v46 = swift_initStackObject();
      *(_OWORD *)(v46 + 16) = v67;
      *(void *)(v46 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(v46 + 40) = v47;
      *(void *)(v46 + 72) = &type metadata for VFSFileError;
      *(void *)(v46 + 48) = 0;
      *(void *)(v46 + 56) = 0;
      *(unsigned char *)(v46 + 64) = 10;
      sub_10004621C(v46);
      sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      uint64_t v49 = v71;
      uint64_t v48 = v72;
      sub_10096ABD0();
      sub_10096A790();
      uint64_t v50 = v48;
      uint64_t v14 = v70;
      (*v68)(v49, v50);
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_33:
    swift_errorRetain();
    LODWORD(v88) = sub_10096A680();
    sub_100045CB4();
    char v54 = sub_10096AA60();
    swift_errorRelease();
    if ((v54 & 1) == 0) {
      break;
    }
    swift_errorRelease();
    useconds_t v55 = v78;
    usleep(v78);
    if (2 * v55 >= 0xF4240) {
      int v16 = 1000000;
    }
    else {
      int v16 = 2 * v55;
    }
    uint64_t v15 = sub_100595FB8(v82);
  }
  swift_errorRetain();
  LODWORD(v88) = sub_10096A710();
  char v56 = sub_10096AA60();
  swift_errorRelease();
  if (v56)
  {
    swift_errorRelease();
    v64(0xFFFFFFFFLL, 0, 0, 0);
  }
  return sub_100595FB8(v82);
}

uint64_t DocumentWharf.isUnderSyncRoots(_:syncroots:)(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10096B480();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v9 == *(void *)(v10 + 40)) {
    return 0;
  }
  id v11 = *(id *)(a1 + 160);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = a2[2];
  if (!v12) {
    goto LABEL_13;
  }
  if ((id)a2[4] != v11)
  {
    if (v12 == 1) {
      goto LABEL_13;
    }
    uint64_t v14 = 5;
    while (1)
    {
      uint64_t v15 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        goto LABEL_33;
      }
      if ((id)a2[v14] == v11) {
        break;
      }
      ++v14;
      if (v15 == v12)
      {
        while (1)
        {
LABEL_13:
          id v29 = v11;
          long long v30 = 0u;
          long long v31 = 0u;
          uint64_t v16 = fpfs_openfdbyhandle();
          if ((v16 & 0x80000000) != 0)
          {
            int v20 = sub_10096B4D0();
            sub_1005970E0(v20, 0, 0, 0xAu);
            swift_willThrow();
            goto LABEL_27;
          }
          uint64_t v17 = v16;
          id v29 = 0;
          if ((fpfs_fget_parent_syncroot() & 0x80000000) != 0) {
            break;
          }
          sub_100595FB8(v17);
          id v11 = v29;
          if (v12)
          {
            if ((id)a2[4] == v29) {
              return 1;
            }
            if (v12 != 1)
            {
              if ((id)a2[5] == v29) {
                return 1;
              }
              if (v12 != 2)
              {
                uint64_t v18 = 6;
                while (1)
                {
                  uint64_t v19 = v18 - 3;
                  if (__OFADD__(v18 - 4, 1)) {
                    break;
                  }
                  if ((id)a2[v18] == v29) {
                    return 1;
                  }
                  ++v18;
                  if (v19 == v12) {
                    goto LABEL_12;
                  }
                }
                __break(1u);
LABEL_33:
                __break(1u);
              }
            }
          }
LABEL_12:
          if (!v29) {
            return 0;
          }
        }
        int v21 = sub_10096B4D0();
        sub_1005970E0(v21, 16, 0, 0xAu);
        swift_willThrow();
        sub_100595FB8(v17);
LABEL_27:
        id v22 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        swift_errorRetain();
        unsigned int v23 = sub_10096B470();
        os_log_type_t v24 = sub_10096C5B0();
        if (os_log_type_enabled(v23, v24))
        {
          int v25 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v26 = (void *)swift_slowAlloc();
          *(_DWORD *)int v25 = 138543362;
          v28[1] = v25 + 4;
          swift_getErrorValue();
          id v27 = Error.prettyDescription.getter(v28[3]);
          id v29 = v27;
          sub_10096C8C0();
          *os_log_type_t v26 = v27;
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Cannot open parent sync-root: %{public}@", v25, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return 0;
      }
    }
  }
  return 1;
}

void DocumentWharf.report(identifier:failuresOnly:block:)(uint64_t a1, uint64_t a2, char a3, void (*a4)(void))
{
  a4();
  if (v5)
  {
    uint64_t v13 = v5;
    swift_errorRetain();
    swift_willThrow();
    sub_100950D4C(v4, &v13, a3 & 1, a1, a2);
    swift_errorRelease();
  }
  else
  {
    uint64_t v9 = *(void **)(v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter);
    if (v9)
    {
      if ((a3 & 1) == 0)
      {
        sub_10002B7CC(&qword_100AD0BB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100973BB0;
        id v11 = v9;
        sub_10096CB30();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 72) = a1;
        *(void *)(inited + 80) = a2;
        swift_bridgeObjectRetain();
        sub_1000936F0(inited);
        Class isa = sub_10096B9A0().super.isa;
        swift_bridgeObjectRelease();
        [v11 postReportWithCategory:1 type:1 payload:isa error:0];
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DocumentWharf.delete(_:at:)(Swift::UInt64 _, __C::wharf_step at)
{
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100243DE8);
  if (!v3)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
  }
}

void *DocumentWharf.delete(_:)(void *result)
{
  if (*result)
  {
    __chkstk_darwin(result);
    uint64_t result = (void *)sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    if (!v2)
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        return (void *)swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t DocumentWharf.withPersisted<A>(capturedContent:block:)(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

Swift::tuple_purgedIngest_Int_purgedPropagate_Int_optional __swiftcall DocumentWharf.vacuum(upperBound:)(Swift::Int upperBound)
{
  Swift::Int v2 = 1000;
  if (upperBound > 1000) {
    Swift::Int v2 = upperBound;
  }
  if (!upperBound) {
    Swift::Int v2 = 0;
  }
  uint64_t v3 = upperBound + v2;
  if (__OFADD__(upperBound, v2)) {
    __break(1u);
  }
  __chkstk_darwin(upperBound);
  uint64_t v4 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10095405C);
  if (v3 >= 0)
  {
    Swift::Bool v6 = 1;
  }
  else
  {
    __chkstk_darwin(v4);
    uint64_t v5 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100954078);
    __chkstk_darwin(v5);
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100954870);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
    Swift::Bool v6 = 0;
  }
  Swift::Int v7 = 0;
  Swift::Int v8 = 0;
  result.value.purgedPropagate = v8;
  result.value.purgedIngest = v7;
  result.is_nil = v6;
  return result;
}

uint64_t DocumentWharf.root.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void *sub_10094DDB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  int v4 = *(_DWORD *)(v3 + 16);
  uint64_t v5 = *(const void **)(v3 + 56);
  int v6 = *(_DWORD *)(v3 + 64);
  char v7 = *(unsigned char *)(v3 + 68);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = *(void *)(v3 + 8);
  *(_DWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(void *)(a2 + 56) = v5;
  *(_DWORD *)(a2 + 64) = v6;
  *(unsigned char *)(a2 + 68) = v7;
  return _Block_copy(v5);
}

void sub_10094DE48(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  int v4 = *((_DWORD *)a1 + 4);
  long long v12 = *(_OWORD *)(a1 + 3);
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  char v7 = (const void *)a1[7];
  int v8 = *((_DWORD *)a1 + 16);
  char v9 = *((unsigned char *)a1 + 68);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  id v11 = *(const void **)(v10 + 56);
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = a1[1];
  *(_DWORD *)(v10 + 16) = v4;
  *(_OWORD *)(v10 + 24) = v12;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v6;
  *(void *)(v10 + 56) = v7;
  *(_DWORD *)(v10 + 64) = v8;
  *(unsigned char *)(v10 + 68) = v9;
  _Block_copy(v7);
  _Block_release(v11);
}

id DocumentWharf.deferredWQ.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
}

uint64_t DocumentWharf.init(label:at:ioContext:targetQueue:reporter:)(void *a1, unint64_t a2, uint64_t a3, const void *a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v53 = a3;
  uint64_t v13 = sub_10096C690();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  __chkstk_darwin(v13);
  uint64_t v48 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10096C620();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v46 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v42 = (char *)v37 - v18;
  uint64_t v45 = sub_10096B7D0();
  uint64_t v41 = *(void *)(v45 - 8);
  uint64_t v19 = __chkstk_darwin(v45);
  int v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unsigned int v23 = (char *)v37 - v22;
  *(void *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_activated) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_disableGarbageCollection) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v24 = v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(_DWORD *)(v24 + 16) = 0;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 53) = 0u;
  swift_beginAccess();
  int v25 = *(const void **)(v24 + 56);
  uint64_t v40 = a4;
  *(void *)(v24 + 56) = a4;
  *(_DWORD *)(v24 + 64) = a5;
  uint64_t v43 = HIDWORD(a5) & 1;
  unint64_t v44 = a5;
  *(unsigned char *)(v24 + 68) = BYTE4(a5) & 1;
  swift_bridgeObjectRetain();
  _Block_copy(a4);
  _Block_release(v25);
  *(_DWORD *)(v24 + 12) = -1;
  uint64_t v26 = v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  uint64_t v27 = sub_10096AE50();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v53, v27);
  v37[3] = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
  char v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_10096CBD0(22);
  swift_bridgeObjectRelease();
  char v54 = a1;
  unint64_t v55 = a2;
  v56._char object = (void *)0x80000001009BEE50;
  v56._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_10096BDC0(v56);
  void v37[2] = v54;
  v37[1] = v55;
  id v29 = v23;
  sub_10096B770();
  char v54 = _swiftEmptyArrayStorage;
  sub_100025EB4((unint64_t *)&qword_100ACAF30, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_10007FBA0();
  long long v30 = v42;
  sub_10096CA60();
  uint64_t v31 = v41;
  uint64_t v32 = v45;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v21, v29, v45);
  uint64_t v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v30, v15);
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v50);
  uint64_t v34 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v15);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v32);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v53, v38);
  *(void *)(v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ) = v34;
  uint64_t v35 = v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext;
  *(void *)uint64_t v35 = v40;
  *(_DWORD *)(v35 + 8) = v44;
  *(unsigned char *)(v35 + 12) = v43;
  *(void *)(v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter) = v52;
  return v8;
}

uint64_t DocumentWharf.__deallocating_deinit()
{
  DocumentWharf.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10094E4D4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  sub_10096AE10();
  uint64_t v4 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  uint64_t v5 = (const char *)(sub_10096BCF0() + 32);
  uint64_t v6 = sub_10096BCF0();
  LODWORD(v4) = sub_10008A1DC(v4, v5, (const char *)(v6 + 32));
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10094E5B8@<X0>(_DWORD *a1@<X8>)
{
  return sub_10094E4D4(v1, a1);
}

uint64_t sub_10094E5D4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10094E60C()
{
  uint64_t v0 = sub_10096B480();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong
    && (char v5 = *(unsigned char *)(Strong + OBJC_IVAR____TtC9libfssync13DocumentWharf_disableGarbageCollection),
        swift_release(),
        (v5 & 1) != 0))
  {
    id v6 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v7 = sub_10096B470();
    os_log_type_t v8 = sub_10096C5A0();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Wharf garbage collection is disabled, skipping garbage collection", v9, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      DocumentWharf.runGarbageCollection()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10094E7C0()
{
  return sub_10094E60C();
}

uint64_t sub_10094E7C8()
{
  uint64_t v0 = sub_10096B480();
  __chkstk_darwin(v0);
  return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100954498);
}

uint64_t sub_10094EA54()
{
  return sub_10094E7C8();
}

uint64_t sub_10094EA5C(uint64_t result)
{
  uint64_t v1 = OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated;
  if ((*(unsigned char *)(result + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) & 1) == 0)
  {
    uint64_t v2 = result;
    uint64_t v3 = result + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    sub_10008A43C(v3);
    uint64_t result = swift_endAccess();
    *(unsigned char *)(v2 + v1) = 1;
  }
  return result;
}

uint64_t sub_10094EADC()
{
  return sub_10094EA5C(v0);
}

uint64_t sub_10094EAF8@<X0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  int v2 = sub_10008BD94();
  uint64_t result = swift_endAccess();
  *a1 = v2;
  return result;
}

uint64_t DocumentWharf.capture(from:preserve:canAccessParent:extent:bypassLocking:flags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W6>, int a8@<W7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v100 = a6;
  int v98 = a8;
  unsigned int v96 = a7;
  uint64_t v99 = a5;
  int v93 = a4;
  int v94 = a3;
  long long v95 = a9;
  uint64_t v12 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v103 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v102 = (uint64_t)&v76 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v76 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  long long v97 = (char *)&v76 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  unsigned int v23 = (char *)&v76 - v22;
  __chkstk_darwin(v21);
  int v25 = (char *)&v76 - v24;
  uint64_t v26 = type metadata accessor for ItemMetadata();
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  id v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v76 - v30;
  long long v123 = 0u;
  long long v124 = 0u;
  uint64_t v125 = 1;
  uint64_t v117 = a1;
  uint64_t v118 = a2;
  uint64_t v119 = &v123;
  uint64_t v32 = v105;
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953E04);
  uint64_t result = v123;
  if (v32) {
    return sub_10003DAF4(v123, *((uint64_t *)&v123 + 1), v124, *((uint64_t *)&v124 + 1), v125);
  }
  uint64_t v91 = v25;
  char v92 = v23;
  unint64_t v89 = v29;
  uint64_t v90 = v31;
  uint64_t v105 = a2;
  if (v125 == 1)
  {
    __break(1u);
  }
  else
  {
    v126[0] = v123;
    v126[1] = v124;
    uint64_t v127 = v125;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    int v109 = 0;
    uint64_t v108 = 0;
    long long v110 = 0u;
    long long v111 = 0u;
    long long v112 = 0u;
    long long v113 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v116 = 0u;
    uint64_t v34 = __chkstk_darwin(v123);
    uint64_t v36 = v35;
    uint64_t v37 = v34;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100027774);
    uint64_t v77 = a1;
    uint64_t v84 = v36;
    uint64_t v85 = v37;
    uint64_t v86 = v43;
    uint64_t v87 = v41;
    uint64_t v88 = v39;
    v96 &= 1u;
    uint64_t v82 = v114;
    uint64_t v83 = a10;
    uint64_t v44 = (uint64_t)v104;
    uint64_t v45 = sub_10096B0E0();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    uint64_t v48 = v46 + 56;
    uint64_t v49 = (uint64_t)v91;
    v47(v91, 1, 1, v45);
    v47(v92, 1, 1, v45);
    uint64_t v50 = (uint64_t)v97;
    int v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47;
    uint64_t v80 = v45;
    uint64_t v78 = v48;
    v47(v97, 1, 1, v45);
    int v51 = WORD2(v106);
    int v52 = sub_10096B510() & v51;
    int v81 = sub_10096B510();
    sub_10002B70C(v49, v44, (uint64_t *)&unk_100ACB5E0);
    uint64_t v53 = (uint64_t)v92;
    uint64_t v54 = v102;
    sub_10002B70C((uint64_t)v92, v102, (uint64_t *)&unk_100ACB5E0);
    uint64_t v55 = v103;
    sub_10002B70C(v50, v103, (uint64_t *)&unk_100ACB5E0);
    LOBYTE(v120[0]) = 1;
    char v74 = v52 == (unsigned __int16)v81;
    if (v52 == (unsigned __int16)v81) {
      unsigned int v56 = 493;
    }
    else {
      unsigned int v56 = 420;
    }
    uint64_t v57 = (uint64_t)v90;
    ItemMetadata.init(kind:size:physicalSize:childItemCount:posixPermissions:creationDate:contentModificationDate:isLocked:isHidden:isPathExtensionHidden:lastUsedDate:tags:favoriteRank:extendedAttributes:quarantineBlob:closestSyncRoot:evictionUrgency:isSyncRoot:isIgnoreRoot:isDetachedRoot:isPinned:isInPinnedFolder:isDataless:isPackage:hasBundleBit:beforeBounceFilename:osType:linkCount:isResurrected:collaborationIdentifier:isSyncPaused:isSyncResumingWithDropLocalChanges:evictionReason:)(0, v82, 0, 1, 0x100000000, v56, v44, v54, (uint64_t)v90, 0, 0, 0, v55, 0, 0, 1u, 0, 0, 0xF000000000000000,
      0,
      4u,
      0,
      0,
      0,
      0,
      0,
      0,
      v74,
      2,
      0,
      0,
      0,
      1u,
      0x100000000uLL,
      0,
      0,
      0,
      0,
      0,
      0);
    sub_10002B770(v50, (uint64_t *)&unk_100ACB5E0);
    sub_10002B770(v53, (uint64_t *)&unk_100ACB5E0);
    sub_10002B770((uint64_t)v91, (uint64_t *)&unk_100ACB5E0);
    int v58 = WORD2(v106);
    int v59 = sub_10096B520() & v58;
    if (v59 == (unsigned __int16)sub_10096B520())
    {
      long long v97 = (char *)v114;
      uint64_t v60 = (uint64_t)v104;
      uint64_t v62 = v79;
      uint64_t v61 = v80;
      v79((uint64_t)v104, 1, 1, v80);
      uint64_t v63 = v102;
      v62(v102, 1, 1, v61);
      uint64_t v64 = v103;
      v62(v103, 1, 1, v61);
      uint64_t v65 = (uint64_t)v89;
      sub_10015169C((uint64_t)v97, 0x1EDu, v60, v63, 0, 0, v64, 0, (uint64_t)v89);
      sub_10002B770(v64, (uint64_t *)&unk_100ACB5E0);
      sub_10002B770(v63, (uint64_t *)&unk_100ACB5E0);
      sub_10002B770(v60, (uint64_t *)&unk_100ACB5E0);
      sub_10010DAFC(v57);
      sub_10002C684(v65, v57, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    }
    (*(void (**)(void *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, void, void, uint64_t))(*(void *)v101 + 352))(v120, v126, v57, v99, v100, v96, v98 & 1, v83);
    uint64_t v66 = v120[0];
    uint64_t v67 = v120[1];
    uint64_t v69 = v120[2];
    uint64_t v68 = v120[3];
    uint64_t v70 = v120[4];
    int v71 = v121;
    uint64_t v72 = v122;
    sub_10003DAF4(v85, v84, v86, v87, v88);
    if ((v94 & 1) == 0)
    {
      LODWORD(v104) = v71;
      HIDWORD(v75) = 1;
      LOBYTE(v75) = v93 & 1;
      (*(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, void, uint64_t, uint64_t))(*(void *)v101 + 440))(v77, v105, 0, 0, 0, 256, 0, 1, v75);
      LOBYTE(v71) = (_BYTE)v104;
    }
    uint64_t result = sub_10010DAFC((uint64_t)v90);
    unint64_t v73 = v95;
    void *v95 = v66;
    v73[1] = v67;
    v73[2] = v69;
    v73[3] = v68;
    v73[4] = v70;
    *((unsigned char *)v73 + 40) = v71;
    _OWORD v73[6] = v72;
  }
  return result;
}

uint64_t DocumentWharf.capture(from:metadata:extent:bypassLocking:flags:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v9 = v8;
  id v29 = a8;
  char v35 = a6;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v32 = a4;
  *(void *)&long long v33 = a7;
  uint64_t v38 = a4;
  char v39 = a5 & 1;
  uint64_t v40 = a7;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  v55[0] = *a1;
  v55[1] = v10;
  int v12 = *((_DWORD *)a1 + 4);
  int v13 = *((_DWORD *)a1 + 5);
  int v56 = v12;
  int v57 = v13;
  sub_10001AE98((uint64_t)(a1 + 3), (uint64_t)v69, &qword_100ADF5E0);
  uint64_t v14 = sub_10001AE98((uint64_t)v69, (uint64_t)&v70, &qword_100ADF5E0);
  if (v71)
  {
    uint64_t result = sub_100946320(v70, v71, (uint64_t)v55, (uint64_t (*)(uint64_t))sub_100953A40);
    if (!(void)v34)
    {
      long long v16 = v60;
      unint64_t v17 = v61;
      long long v18 = v62;
      int v19 = v63;
      uint64_t v20 = v64;
      uint64_t v21 = v65;
      int v22 = v66;
      uint64_t v23 = v67;
      char v24 = v68;
LABEL_11:
      *(unsigned char *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        LODWORD(v32) = v19;
        long long v33 = v18;
        long long v34 = v16;
        unint64_t v26 = v17;
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        uint64_t result = swift_unknownObjectRelease();
        unint64_t v17 = v26;
        long long v18 = v33;
        long long v16 = v34;
        LOBYTE(v19) = v32;
      }
      uint64_t v27 = v29;
      *id v29 = v16;
      *((void *)v27 + 2) = v17;
      *(_OWORD *)((char *)v27 + 24) = v18;
      *((unsigned char *)v27 + 40) = v19;
      *((void *)v27 + 6) = v20;
      *((void *)v27 + 7) = v21;
      *((_DWORD *)v27 + 16) = v22;
      *((void *)v27 + 9) = v23;
      *((unsigned char *)v27 + 80) = v24;
      return result;
    }
  }
  else
  {
    v28[1] = v28;
    uint64_t v49 = v11;
    uint64_t v50 = v10;
    int v51 = v12;
    int v52 = v13;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    long long v45 = 0uLL;
    unint64_t v46 = 0xB000000000000000;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    __int16 v44 = 256;
    __chkstk_darwin(v14);
    uint64_t v25 = v34;
    uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953A70);
    if (!v25)
    {
      unint64_t v17 = v46;
      if (v46 >> 60 == 11)
      {
        __break(1u);
      }
      else if ((v44 & 0x100) == 0)
      {
        int v19 = v48 & 1;
        long long v16 = v45;
        long long v18 = v47;
        uint64_t v20 = *((void *)&v48 + 1);
        uint64_t v23 = v43;
        int v22 = v42;
        uint64_t v21 = v41;
        char v24 = v44 & 1;
        goto LABEL_11;
      }
      __break(1u);
      return result;
    }
    uint64_t result = sub_1000D35D8(v45, *((uint64_t *)&v45 + 1), v46);
  }
  *(unsigned char *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  if (*(void *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C7F0(1uLL);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10094F650()
{
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953A70);
  if (v0) {
    return sub_1000D35D8(0, 0, 0xB000000000000000);
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_10094F7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _DWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v30 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  int v32 = a3;
  uint64_t v33 = a2;
  uint64_t v31 = a1;
  char v35 = a9;
  uint64_t v27 = a11;
  uint64_t v13 = type metadata accessor for ItemMetadata();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  long long v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010DA98(a4, (uint64_t)v16);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  sub_10002C684((uint64_t)v16, v20 + v17, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  *(void *)(v20 + v18) = a5;
  unint64_t v21 = v20 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v29;
  *(void *)unint64_t v21 = v28;
  *(void *)(v21 + 8) = v22;
  *(unsigned char *)(v21 + 16) = v30 & 1;
  *(void *)(v20 + v19) = a10;
  *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v27;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100953CB0;
  *(void *)(v23 + 24) = v20;
  aBlock[4] = sub_100953DA0;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10094FCBC;
  aBlock[3] = &unk_100AA63B0;
  char v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LODWORD(v17) = sub_10008A480();
  swift_endAccess();
  _Block_release(v24);
  swift_release();
  *char v35 = v17;
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v24) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10094FA7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  uint64_t v16 = type metadata accessor for ItemMetadata();
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v41 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v41 - v24;
  uint64_t result = sub_10010DA98(a4, (uint64_t)&v41 - v24);
  *(void *)&v25[*(int *)(v17 + 108)] = a3;
  if (!a1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v27 = *a5;
  uint64_t v28 = a5[1];
  unint64_t v29 = a5[2];
  *a5 = *a1;
  *(_OWORD *)(a5 + 1) = xmmword_100973BC0;
  uint64_t v30 = v42;
  a5[3] = v41;
  a5[4] = v30;
  a5[5] = a8 & 1;
  a5[6] = a9;
  uint64_t result = sub_1000D35D8(v27, v28, v29);
  if (!a2)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v31 = *(void *)a2;
  uint64_t v32 = *(unsigned int *)(a2 + 20);
  if (*(void *)(a2 + 24))
  {
    uint64_t v47 = sub_10096BDE0();
    uint64_t v48 = v33;
    uint64_t v45 = 58;
    unint64_t v46 = 0xE100000000000000;
    uint64_t v43 = 47;
    unint64_t v44 = 0xE100000000000000;
    sub_10001F9C0();
    sub_10096C910();
    swift_bridgeObjectRelease();
  }
  sub_10010DA98((uint64_t)v25, (uint64_t)v23);
  sub_10010DA98((uint64_t)v23, (uint64_t)v20);
  uint64_t v34 = sub_100018CB0(v31, v32, (uint64_t)v20);
  unsigned int v36 = v35;
  uint64_t v38 = v37;
  char v40 = v39;
  swift_bridgeObjectRelease();
  sub_10010DAFC((uint64_t)v23);
  sub_10010DAFC((uint64_t)v25);
  *(void *)a10 = v34;
  *(void *)(a10 + 8) = v36;
  *(void *)(a10 + 16) = v38;
  *(unsigned char *)(a10 + 24) = v40 & 1;
  *(unsigned char *)(a10 + 25) = 0;
  return 0;
}

uint64_t sub_10094FCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

uint64_t DocumentWharf.stageForPropagation(from:metadata:nonSyncableAttributes:targetFilename:enableDocumentTracking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_10001AE98(a1, (uint64_t)v22, (uint64_t *)&unk_100ACF710);
  uint64_t v15 = v6;
  uint64_t v16 = a1;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  char v19 = a6;
  uint64_t v20 = &v21;
  uint64_t v21 = 0;
  sub_100943F70(a3, (unint64_t)sub_100953700, (unint64_t)&v14, (uint64_t)&v21);
  uint64_t result = v21;
  if (v7) {
    return swift_release();
  }
  if (!v21) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10094FDB4(uint64_t a1)
{
  sub_10001AE98(a1, (uint64_t)&v2, (uint64_t *)&unk_100ACF710);
  return sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953944);
}

uint64_t sub_10094FE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X7>, _DWORD *a6@<X8>)
{
  uint64_t v17 = a6;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  sub_10001AE98(a5, v10 + 24, (uint64_t *)&unk_100ACF710);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1009539C4;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1009539E0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100950200;
  aBlock[3] = &unk_100AA6338;
  int v12 = _Block_copy(aBlock);
  sub_100953A08(a5);
  swift_retain();
  swift_release();
  uint64_t v13 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  sub_10096BCF0();
  LODWORD(v13) = sub_10008AA00(v13, a2, a3);
  swift_endAccess();
  swift_release();
  _Block_release(v12);
  swift_release();
  *uint64_t v17 = v13;
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100950074(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4)
{
  uint64_t result = sub_10001AE98(a4, (uint64_t)v21, (uint64_t *)&unk_100ACF710);
  if (a1)
  {
    uint64_t v9 = v22;
    uint64_t v10 = *a1;
    uint64_t v11 = a1[1];
    uint64_t v12 = a1[2];
    if (a1[3])
    {
      v23[0] = sub_10096BDE0();
      v23[1] = v13;
      sub_10001F9C0();
      uint64_t v14 = sub_10096C910();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    sub_10001AE98(a4, (uint64_t)v23, (uint64_t *)&unk_100ACF710);
    if (v23[2] >> 60 == 11)
    {
      uint64_t v9 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 1;
    }
    else
    {
      uint64_t v17 = v23[3];
      uint64_t v18 = v23[4];
      char v19 = v24 & 1;
    }
    type metadata accessor for VFSStagedContext();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v10;
    *(void *)(v20 + 24) = v11;
    *(void *)(v20 + 32) = v12;
    *(void *)(v20 + 40) = v14;
    *(void *)(v20 + 48) = v16;
    *(unsigned char *)(v20 + 56) = a2 & 1;
    *(void *)(v20 + 64) = v17;
    *(void *)(v20 + 72) = v18;
    *(unsigned char *)(v20 + 80) = v19;
    *(void *)(v20 + 88) = v9;
    *a3 = v20;
    swift_release();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100950200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(a2, a3);
}

uint64_t sub_100950230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, char a10, char a11)
{
  uint64_t v34 = a2;
  uint64_t v32 = a9;
  uint64_t v33 = a3;
  uint64_t v17 = sub_10096A7B0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    __chkstk_darwin(v19);
    *(&v31 - 12) = a4;
    *(&v31 - 11) = a5;
    *(&v31 - 10) = a6;
    *(&v31 - 9) = a7;
    *(&v31 - 8) = a8;
    *((unsigned char *)&v31 - 56) = a10;
    *((unsigned char *)&v31 - 55) = a11 & 1;
    *(&v31 - 6) = v22;
    *(&v31 - 5) = a1;
    *((_DWORD *)&v31 - 8) = v23;
    *(&v31 - 3) = v25;
    *(&v31 - 2) = v24;
    *((_DWORD *)&v31 - 2) = v26;
    uint64_t v27 = v35;
    uint64_t result = sub_100945850(v33, (unint64_t)sub_100954184, (unint64_t)(&v31 - 14), v36);
    if (!v27)
    {
      long long v29 = v36[1];
      uint64_t v30 = v32;
      *uint64_t v32 = v36[0];
      v30[1] = v29;
      *((void *)v30 + 4) = v37;
    }
  }
  else
  {
    int v38 = 22;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100025EB4((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100950454@<X0>(_OWORD *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v8 = memcpy(v20, a2, sizeof(v20));
  *(_OWORD *)uint64_t v20 = *(_OWORD *)a3;
  *(void *)&unsigned char v20[16] = *(void *)(a3 + 16);
  *(void *)&v20[32] = *(void *)(a3 + 32);
  long long v9 = a1[11];
  *(_OWORD *)&v20[200] = a1[10];
  *(_OWORD *)&v20[216] = v9;
  long long v10 = a1[13];
  *(_OWORD *)&v20[232] = a1[12];
  *(_OWORD *)&v20[248] = v10;
  long long v11 = a1[7];
  *(_OWORD *)&v20[136] = a1[6];
  *(_OWORD *)&v20[152] = v11;
  long long v12 = a1[9];
  *(_OWORD *)&v20[168] = a1[8];
  *(_OWORD *)&v20[184] = v12;
  long long v13 = a1[3];
  *(_OWORD *)&v20[72] = a1[2];
  *(_OWORD *)&v20[88] = v13;
  long long v14 = a1[5];
  *(_OWORD *)&v20[104] = a1[4];
  *(_OWORD *)&v20[120] = v14;
  long long v15 = a1[1];
  *(_OWORD *)&v20[40] = *a1;
  *(void *)&v20[24] = *(void *)(a3 + 24);
  *(_OWORD *)&v20[56] = v15;
  __chkstk_darwin(v8);
  if ((a4 & 0x100) != 0) {
    uint64_t v16 = sub_1009543C0;
  }
  else {
    uint64_t v16 = sub_1009543EC;
  }
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))v16);
  if (!v19)
  {
    uint64_t result = 0;
    *(_OWORD *)a5 = 0u;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = 0;
  }
  return result;
}

uint64_t sub_100950728@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _DWORD *a9@<X8>, int a10)
{
  uint64_t v24 = a9;
  uint64_t v15 = *(void *)(a7 + 24);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100953454;
  *(void *)(v16 + 24) = a7;
  aBlock[4] = sub_1009548D0;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1009508E4;
  aBlock[3] = &unk_100AA6658;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v18 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v15) = sub_10008B7AC(v18, a2, a3, a4, a5, a6, v15, a8, (uint64_t)v17, a10);
  swift_endAccess();
  _Block_release(v17);
  swift_release();
  *uint64_t v24 = v15;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009508E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_100950914@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, _DWORD *a9@<X8>)
{
  int v23 = a9;
  uint64_t v15 = *(void *)(a6 + 24);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100953454;
  *(void *)(v16 + 24) = a6;
  aBlock[4] = sub_1009548D0;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1009508E4;
  aBlock[3] = &unk_100AA66A8;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v18 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v15) = sub_10008B7AC(v18, a2, a3, a4, 0, a5, v15, a7, (uint64_t)v17, a8);
  swift_endAccess();
  _Block_release(v17);
  swift_release();
  *int v23 = v15;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100950AD0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  if ((fpfs_pkg_dirstat() & 0x80000000) != 0)
  {
    int v10 = sub_10096B4D0();
    sub_1005970E0(v10, 25, 0, 0xAu);
    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    *(void *)(a1 + 56) = 0;
    *(_DWORD *)(a1 + 20) = 0;
  }
  return a5(*a4, a1, a2, a3);
}

uint64_t sub_100950BD4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  return sub_100950AD0(a1, a2, a3, a4, a5);
}

double DocumentWharf.create(_:fd:with:at:metadata:flags:lookupScope:nonSyncableAttributes:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  DocumentWharf.wharfUnload(_:fd:with:at:metadata:baseVersion:lookupScope:flags:opcode:nonSyncableAttributes:)(a1, a2, a3, a4, a5, 0, 0, 0, (uint64_t)v10, 0);
  if (!v6)
  {
    double result = *(double *)v10;
    long long v9 = v10[1];
    *(_OWORD *)a6 = v10[0];
    *(_OWORD *)(a6 + 16) = v9;
    *(void *)(a6 + 32) = v11;
  }
  return result;
}

double DocumentWharf.update(_:fd:with:at:metadata:baseVersion:lookupScope:nonSyncableAttributes:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  DocumentWharf.wharfUnload(_:fd:with:at:metadata:baseVersion:lookupScope:flags:opcode:nonSyncableAttributes:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v14, a10);
  if (!v10)
  {
    double result = *(double *)v14;
    long long v13 = v14[1];
    *(_OWORD *)a9 = v14[0];
    *(_OWORD *)(a9 + 16) = v13;
    *(void *)(a9 + 32) = v15;
  }
  return result;
}

uint64_t sub_100950CFC@<X0>(int *a1@<X8>)
{
  uint64_t v2 = sub_10096BCF0();
  int v3 = rmdir((const char *)(v2 + 32));
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_100950D4C(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  char v5 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter);
  if (v5 && (*a2 || (a3 & 1) == 0))
  {
    sub_10002B7CC(&qword_100AD0BB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BB0;
    id v10 = v5;
    sub_10096CB30();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = a4;
    *(void *)(inited + 80) = a5;
    swift_bridgeObjectRetain();
    sub_1000936F0(inited);
    v11.super.Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    if (*a2)
    {
      swift_errorRetain();
      long long v12 = (void *)sub_10096ABE0();
      swift_errorRelease();
    }
    else
    {
      long long v12 = 0;
    }
    [v10 postReportWithCategory:1 type:1 payload:v11.super.isa error:v12];
  }
}

uint64_t DocumentWharf.delete(at:baseVersion:lookupScope:allowNotEmptyDir:canAccessParent:emptyDirMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, char a8)
{
  uint64_t result = sub_100952FA4();
  if (v9)
  {
    uint64_t v24 = v8;
    swift_errorRetain();
    sub_10096A760();
    sub_100045CB4();
    char v13 = sub_10096AA60();
    swift_errorRelease();
    if (v13) {
      goto LABEL_12;
    }
    swift_errorRetain();
    sub_10096A7A0();
    char v14 = sub_10096AA60();
    swift_errorRelease();
    if (v14 & 1) != 0 && (a8) {
      goto LABEL_12;
    }
    swift_errorRetain();
    sub_10096A7A0();
    char v15 = sub_10096AA60();
    swift_errorRelease();
    if (v15)
    {
      swift_errorRelease();
      sub_100438524(0x200000u);
      sub_10096BCF0();
      uint64_t v16 = fpfs_lp_openat();
      uint64_t v17 = swift_release();
      if ((v16 & 0x80000000) != 0)
      {
        int v23 = sub_10096B4D0();
        sub_1005970E0(v23, 1, 0, 0xAu);
        return swift_willThrow();
      }
      else
      {
        __chkstk_darwin(v17);
        uint64_t v18 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1009534F4);
        __chkstk_darwin(v18);
        sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953550);
        sub_100952FA4();
        return sub_100595FB8(v16);
      }
    }
    swift_errorRetain();
    sub_10096A6A0();
    char v19 = sub_10096AA60();
    swift_errorRelease();
    if (v19 & 1) != 0 && (a8) {
      goto LABEL_12;
    }
    swift_errorRetain();
    sub_10096A6B0();
    char v20 = sub_10096AA60();
    uint64_t result = swift_errorRelease();
    if (v20 & 1) != 0 && (a8)
    {
LABEL_12:
      uint64_t v21 = swift_errorRelease();
      __chkstk_darwin(v21);
      if ((a6 & 0x100) != 0) {
        uint64_t v22 = sub_1009534B0;
      }
      else {
        uint64_t v22 = sub_1009534D0;
      }
      uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))v22);
      *(unsigned char *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v24 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_100951300@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, _DWORD *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100953590;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_1009535A8;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_10095163C;
  v11[3] = &unk_100AA60B8;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  int v9 = fpfs_femptydir();
  _Block_release(v8);
  uint64_t result = swift_release();
  *a3 = v9;
  return result;
}

uint64_t sub_10095146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100953454;
    *(void *)(v6 + 24) = a5;
    uint64_t v7 = sub_10095361C;
  }
  else
  {
    uint64_t v7 = variable initialization expression of DocumentWharf.deleteBusy;
    uint64_t v6 = 0;
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100953608;
  *(void *)(v9 + 24) = v8;
  v13[4] = sub_1009548D0;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_1009508E4;
  v13[3] = &unk_100AA6130;
  id v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = sub_10008BA7C();
  swift_endAccess();
  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_10095163C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

uint64_t sub_100951670@<X0>(uint64_t a1@<X4>, _DWORD *a2@<X8>)
{
  if (a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_100953454;
    *(void *)(v3 + 24) = a1;
    uint64_t v4 = sub_10095361C;
  }
  else
  {
    uint64_t v4 = variable initialization expression of DocumentWharf.deleteBusy;
    uint64_t v3 = 0;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100953620;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1009548D0;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1009508E4;
  aBlock[3] = &unk_100AA61D0;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  swift_beginAccess();
  sub_10096BCF0();
  int v8 = sub_10008BA7C();
  swift_endAccess();
  swift_release();
  _Block_release(v7);
  uint64_t result = swift_release();
  *a2 = v8;
  return result;
}

uint64_t sub_10095186C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  uint64_t v4 = sub_10096BCF0();
  int v5 = sub_10008AD84(v3, -2, (const char *)(v4 + 32));
  swift_endAccess();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_10095190C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(a3) = sub_10008BCD4(v7, a2, a3);
  uint64_t result = swift_endAccess();
  *a4 = a3;
  return result;
}

uint64_t DocumentWharf.resurrect(at:lookupScope:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v2 = sub_10096AE50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096ACF0();
  uint64_t v8 = v7;
  sub_10096AD80();
  sub_10096AE10();
  sub_100438524(0x100000u);
  sub_10096BCF0();
  uint64_t v9 = fpfs_lp_openat();
  swift_release();
  if ((v9 & 0x80000000) != 0)
  {
    int v17 = sub_10096B4D0();
    sub_1005970E0(v17, 1, 0, 0xAu);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100438524(0);
    sub_10096BCF0();
    uint64_t v10 = fpfs_lp_openat();
    uint64_t v11 = swift_release();
    if ((v10 & 0x80000000) != 0)
    {
      int v18 = sub_10096B4D0();
      sub_1005970E0(v18, 1, 0, 0xAu);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      __chkstk_darwin(v11);
      *(&v19 - 8) = v12;
      *(&v19 - 7) = 0xD000000000000018;
      *(&v19 - 6) = 0x80000001009BEF30;
      *((_DWORD *)&v19 - 10) = v10;
      *((_DWORD *)&v19 - 9) = v9;
      *(&v19 - 4) = v6;
      *(&v19 - 3) = v8;
      *(&v19 - 2) = v20;
      uint64_t v21 = v13;
      int v22 = v14;
      char v23 = v15;
      sub_100949F90((uint64_t)&v21, v10, 0, (uint64_t)sub_10095333C, (uint64_t)(&v19 - 10));
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      sub_100595FB8(v10);
    }
    return sub_100595FB8(v9);
  }
}

uint64_t sub_100951CA8()
{
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_10095342C);
  if (v0)
  {
    swift_errorRetain();
    sub_10096A750();
    sub_100045CB4();
    char v2 = sub_10096AA60();
    swift_errorRelease();
    if (v2)
    {
      swift_errorRelease();
      type metadata accessor for NSFileProviderError(0);
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_100025EB4((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
      sub_10096ABD0();
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100951DC8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, _DWORD *a6@<X8>)
{
  uint64_t v19 = a6;
  uint64_t v10 = *(void *)(a5 + 24);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100953454;
  *(void *)(v11 + 24) = a5;
  aBlock[4] = sub_100953484;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1009508E4;
  aBlock[3] = &unk_100AA6040;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v13 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  uint64_t v14 = sub_10096BCF0();
  LODWORD(v13) = sub_10008B25C(v13, a2, a3, v14 + 32, a4, v10);
  swift_endAccess();
  swift_release();
  _Block_release(v12);
  swift_release();
  _DWORD *v19 = v13;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100951F8C(uint64_t result, uint64_t a2)
{
  char v2 = *(void **)(a2 + 32);
  uint64_t v3 = v2[2];
  if (!v3) {
    return 0;
  }
  if (v2[4] == result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  if (v2[5] == result) {
    return 1;
  }
  if (v3 == 2) {
    return 0;
  }
  for (uint64_t i = 6; ; ++i)
  {
    uint64_t v6 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v7 = v2[i] == result;
    BOOL v4 = v7;
    BOOL v7 = v7 || v6 == v3;
    if (v7) {
      return v4;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100952004@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, _DWORD *a5@<X8>)
{
  swift_beginAccess();
  sub_10008A1BC(a2);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(_DWORD *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(unsigned char *)(v10 + 40) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1009540D8;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1009540FC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10095226C;
  aBlock[3] = &unk_100AA65B8;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  LODWORD(a1) = fpfs_opendirat();
  _Block_release(v12);
  swift_release();
  *a5 = a1;
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a5) {
    __break(1u);
  }
  return result;
}

void sub_1009521C4(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4, void *a5)
{
  if (!a2) {
    goto LABEL_7;
  }
  uint64_t v7 = *a2;
  uint64_t v8 = a3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  int v9 = sub_10008BCD4(v8, a4, v7);
  swift_endAccess();
  if (v9 < 0) {
    return;
  }
  if (__OFADD__(*a5, 1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  ++*a5;
}

uint64_t sub_10095226C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(a2, a3);
}

uint64_t sub_10095229C@<X0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = (uint64_t)sub_10008A1BC(0);
  if (result)
  {
    uint64_t result = fpfs_num_entries_at();
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100952324(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)NSFileHandle) initWithFileDescriptor:a1 closeOnDealloc:0];
  sub_1006B3E48();
  sub_10096C550();
}

void sub_1009523B4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = [objc_allocWithZone((Class)NSFileHandle) initWithFileDescriptor:a1 closeOnDealloc:0];
  uint64_t v5 = sub_10096C560();
  if (v2)
  {
  }
  else
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;

    if (v8 >> 60 == 15) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = v7;
    }
    unint64_t v10 = 0xC000000000000000;
    if (v8 >> 60 != 15) {
      unint64_t v10 = v8;
    }
    *a2 = v9;
    a2[1] = v10;
  }
}

uint64_t sub_100952454(uint64_t a1, void *a2)
{
  uint64_t v6 = v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  uint64_t v7 = *(unsigned int *)(v6 + 12);
  *(void *)&long long v11 = 0x656372756F736572;
  *((void *)&v11 + 1) = 0xEA00000000002F73;
  v12._uint64_t countAndFlagsBits = a1;
  v12._char object = a2;
  sub_10096BDC0(v12);
  long long v8 = v11;
  long long v11 = xmmword_100982960;
  swift_bridgeObjectRetain();
  uint64_t result = sub_10084B0EC(v7, v8, *((uint64_t *)&v8 + 1), 0x200000, 0, 0, (uint64_t)&v11, (uint64_t)sub_1009523B4, 0);
  if (v3)
  {
    sub_10037C394(v11, *((unint64_t *)&v11 + 1));
    swift_bridgeObjectRelease();
    swift_errorRetain();
    LODWORD(v11) = sub_10096A710();
    sub_100045CB4();
    char v10 = sub_10096AA60();
    swift_errorRelease();
    if (v10)
    {
      swift_errorRelease();
      return 0;
    }
    return a1;
  }
  if (*((void *)&v11 + 1) >> 60 != 11)
  {
    a1 = v11;
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1009525D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v11._uint64_t countAndFlagsBits = a1;
  v11._char object = a2;
  return sub_100952BF4(v11, a3, a4, *(unsigned int *)(v9 + 12));
}

uint64_t sub_100952660(uint64_t a1, void *a2)
{
  return sub_100952454(a1, a2);
}

uint64_t sub_100952684(uint64_t a1, void *a2)
{
  swift_beginAccess();
  v5._uint64_t countAndFlagsBits = a1;
  v5._char object = a2;
  return sub_10095317C(v5);
}

uint64_t sub_1009526FC()
{
  return type metadata accessor for DocumentWharf();
}

uint64_t type metadata accessor for DocumentWharf()
{
  uint64_t result = qword_100ADF3A8;
  if (!qword_100ADF3A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100952750()
{
  uint64_t result = sub_10096AE50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_100952830()
{
  if (&swift_runtimeSupportsNoncopyableTypes) {
    return (char *)sub_10002B7CC((uint64_t *)&unk_100ACD950);
  }
  else {
    return &type metadata for ()[8];
  }
}

uint64_t sub_100952858(uint64_t a1, uint64_t (*a2)(void, uint64_t, void))
{
  uint64_t v4 = 0;
  v5[0] = 0;
  v5[3] = a1;
  v5[4] = v5;
  v5[5] = &v4;
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100954754);
  return a2(v5[0], v4, 0);
}

uint64_t sub_100952930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void))
{
  uint64_t result = sub_10096A880();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_10096A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_10096A890();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  return a4(v8, v14, 0);
}

void *sub_1009529E0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, void (*a3)(uint64_t *__return_ptr, uint64_t)@<X5>, uint64_t a4@<X6>, _DWORD *a5@<X8>)
{
  v12[2] = a2;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v10)
  {
    uint64_t result = sub_100946A54((void *(*)(uint64_t *__return_ptr, void *))sub_1009545A8, (uint64_t)v12, v10);
    if (v5) {
      return result;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_100949ABC(0, a2, a1, a3);
  if (!v5) {
LABEL_3:
  }
    *a5 = result;
  return result;
}

double sub_100952A94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a2 + 136) = a1;
  sub_100948140((void *(*)(long long *__return_ptr, void *, char *, uint64_t))sub_100954294, (uint64_t)v7);
  if (!v3)
  {
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    *(void *)(a3 + 32) = v8;
  }
  return result;
}

void sub_100952B14(uint64_t a1@<X3>, uint64_t a2@<X4>, void (*a3)(long long *__return_ptr, uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  v12[2] = a2;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v10)
  {
    uint64_t v11 = v13;
    sub_1009474B0((void (*)(long long *__return_ptr, void *))sub_1009542AC, (uint64_t)v12, v10, v13);
    if (v5) {
      return;
    }
    goto LABEL_3;
  }
  uint64_t v11 = v14;
  sub_100949DAC(0, a2, a1, a3, (uint64_t)v14);
  if (!v5)
  {
LABEL_3:
    *(_OWORD *)a5 = *(_OWORD *)v11;
    *(void *)(a5 + 16) = *((void *)v11 + 2);
    *(_OWORD *)(a5 + 24) = *(_OWORD *)(v11 + 24);
  }
}

uint64_t sub_100952BF4(Swift::String a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[0] = 0x656372756F736572;
  v18[1] = 0xEA00000000002F73;
  sub_10096BDC0(a1);
  int v15 = a4;
  uint64_t v16 = 0x656372756F736572;
  unint64_t v17 = 0xEA00000000002F73;
  uint64_t v8 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953268);
  if (v4)
  {
    swift_errorRetain();
    LODWORD(v18[0]) = sub_10096A710();
    sub_100045CB4();
    char v9 = sub_10096AA60();
    swift_errorRelease();
    if ((v9 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v10 = swift_errorRelease();
    __chkstk_darwin(v10);
    LODWORD(v13) = a4;
    uint64_t v8 = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1009532E0);
  }
  __chkstk_darwin(v8);
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  LOBYTE(v18[0]) = 1;
  uint64_t result = sub_10084B3F4(a4, 0x656372756F736572, 0xEA00000000002F73, 2097665, 0x180u, 0, (uint64_t)v18, (uint64_t)sub_100953320, (uint64_t)&v12);
  if (v18[0]) {
    __break(1u);
  }
  return result;
}

void *sub_100952E18(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, char *, void))
{
  uint64_t result = (void *)sub_10096A880();
  char v9 = result;
  if (result)
  {
    uint64_t result = (void *)sub_10096A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    char v9 = (void *)((char *)v9 + a1 - (void)result);
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_10096A890();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = (char *)v9 + v13;
  if (v9) {
    int v15 = v14;
  }
  else {
    int v15 = 0;
  }
  uint64_t result = a4(&v16, v9, v15, 0);
  if (!v4) {
    return (void *)v16;
  }
  return result;
}

void *sub_100952ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(long long *__return_ptr, void *, char *, void)@<X3>, uint64_t a4@<X8>)
{
  uint64_t result = (void *)sub_10096A880();
  BOOL v10 = result;
  if (result)
  {
    uint64_t result = (void *)sub_10096A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    BOOL v10 = (void *)((char *)v10 + a1 - (void)result);
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = sub_10096A890();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  int v15 = (char *)v10 + v14;
  if (v10) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t result = a3(&v19, v10, v16, 0);
  if (!v4)
  {
    uint64_t v17 = v20;
    long long v18 = v21;
    *(_OWORD *)a4 = v19;
    *(void *)(a4 + 16) = v17;
    *(_OWORD *)(a4 + 24) = v18;
  }
  return result;
}

uint64_t sub_100952FA4()
{
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_1009536AC);
  if (v0)
  {
    swift_errorRetain();
    sub_10096A670();
    sub_100045CB4();
    char v2 = sub_10096AA60();
    swift_errorRelease();
    if (v2)
    {
      swift_errorRelease();
      NSString v3 = sub_10096BC00();
      id v4 = [v3 lastPathComponent];

      uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      NSString v6 = sub_10096BC00();
      id v7 = [v6 stringByDeletingLastPathComponent];

      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_100438524(0x200000u);
      sub_10096BCF0();
      uint64_t v8 = fpfs_lp_openat();
      swift_release();
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = sub_10096B4D0();
        sub_1005970E0(v9, 1, 0, 0xAu);
        swift_willThrow();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100596ED0(v8, v5);
        return sub_100595FB8(v8);
      }
    }
    else
    {
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10095317C(Swift::String a1)
{
  sub_10096BDC0(a1);
  sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100953268);
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_errorRetain();
  sub_10096A710();
  sub_100045CB4();
  char v2 = sub_10096AA60();
  uint64_t result = swift_errorRelease();
  if (v2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100953268@<X0>(int *a1@<X8>)
{
  return sub_100953280(a1);
}

uint64_t sub_100953280@<X0>(int *a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 16);
  uint64_t v4 = sub_10096BCF0();
  int v5 = unlinkat(v3, (const char *)(v4 + 32), 0);
  uint64_t result = swift_release();
  *a1 = v5;
  return result;
}

uint64_t sub_1009532E0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = mkdirat(*(_DWORD *)(v1 + 16), "resources", 0x1EDu);
  *a1 = result;
  return result;
}

void sub_100953320(uint64_t a1)
{
}

void sub_10095333C()
{
  DocumentWharf.report(identifier:failuresOnly:block:)(*(void *)(v0 + 24), *(void *)(v0 + 32), 0, (void (*)(void))sub_100953404);
}

uint64_t sub_1009533AC()
{
  return swift_deallocObject();
}

uint64_t sub_1009533BC(uint64_t a1)
{
  return sub_10064E7E8(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1009533F4()
{
  return swift_deallocObject();
}

uint64_t sub_100953404()
{
  return sub_100951CA8();
}

uint64_t sub_10095342C@<X0>(_DWORD *a1@<X8>)
{
  return sub_100951DC8(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(unsigned int *)(v1 + 28), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_100953454(uint64_t a1)
{
  return sub_100951F8C(a1, v1) & 1;
}

uint64_t sub_100953474()
{
  return swift_deallocObject();
}

uint64_t sub_100953484()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1009534B0@<X0>(_DWORD *a1@<X8>)
{
  return sub_10095186C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1009534D0@<X0>(_DWORD *a1@<X8>)
{
  return sub_100951670(*(void *)(v1 + 48), a1);
}

uint64_t sub_1009534F4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_femptydir();
  *a1 = result;
  return result;
}

uint64_t sub_100953550@<X0>(_DWORD *a1@<X8>)
{
  return sub_100951300(*(void *)(v1 + 24), *(void *)(v1 + 40), a1);
}

uint64_t sub_100953578()
{
  return sub_1009545EC((void (*)(void))&_swift_release);
}

uint64_t sub_100953590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10095146C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100953598()
{
  return swift_deallocObject();
}

uint64_t sub_1009535A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1009535D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10095360C()
{
  return swift_deallocObject();
}

uint64_t sub_100953624(uint64_t a1)
{
  void (*v2)(unsigned __int8 *__return_ptr, uint64_t *);
  unsigned __int8 v4;
  uint64_t v5;

  char v2 = *(void (**)(unsigned __int8 *__return_ptr, uint64_t *))(v1 + 16);
  int v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_100953664()
{
  return swift_deallocObject();
}

uint64_t sub_100953674@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1009536AC@<X0>(int *a1@<X8>)
{
  uint64_t v2 = sub_10096BCF0();
  int v3 = rmdir((const char *)(v2 + 32));
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100953700(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = a1;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  char v12 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t *, char *))(*(void *)v8 + 472))(v2, sub_10095391C, &v7, &type metadata for ()[8]);
}

uint64_t sub_1009537A4(uint64_t a1)
{
  return sub_100948438(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1009537C8(uint64_t a1)
{
  return sub_100948E60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1009537E8(uint64_t a1)
{
  return sub_1009538A0(a1);
}

uint64_t sub_100953800@<X0>(uint64_t a1@<X8>)
{
  return sub_1009538F8(a1);
}

uint64_t sub_100953818(uint64_t a1)
{
  return sub_100949948(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_100953838()
{
  return swift_deallocObject();
}

uint64_t sub_100953848()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100953860()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100953878()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1009538A0(uint64_t a1)
{
  *(void *)(*(void *)(v1 + 16) + 136) = a1;
  return sub_100947A08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953800);
}

uint64_t sub_1009538F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1009495D8(*(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_10095391C(uint64_t a1)
{
  return sub_10094FDB4(a1);
}

uint64_t sub_100953944@<X0>(_DWORD *a1@<X8>)
{
  return sub_10094FE78(*(void *)(v1 + 16), *(void *)(v1 + 24), *(long long **)(v1 + 32), *(void *)(v1 + 64), *(void *)(v1 + 72), a1);
}

uint64_t sub_100953970()
{
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000) {
    sub_10001E9C0(*(void *)(v0 + 32), v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1009539C4(uint64_t *a1, char a2)
{
  return sub_100950074(a1, a2, *(uint64_t **)(v2 + 16), v2 + 24);
}

uint64_t sub_1009539D0()
{
  return swift_deallocObject();
}

uint64_t sub_1009539E0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100953A08(uint64_t a1)
{
  return a1;
}

uint64_t sub_100953A40()
{
  return sub_10094F650();
}

uint64_t sub_100953A70@<X0>(_DWORD *a1@<X8>)
{
  return sub_100953DC8(a1);
}

uint64_t sub_100953A88(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 24);
  *(void *)(v2 + 24) = a1;
  return v3(v2);
}

uint64_t sub_100953ABC()
{
  uint64_t v1 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  NSString v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(v0 + v2 + v1[8], v4);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v0 + v2 + v1[33]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_10001E9C0(*v8, v9);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100953CB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for ItemMetadata() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10094FA7C(a1, a2, a3, v3 + v8, *(uint64_t **)(v3 + v9), *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v3 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100953D90()
{
  return swift_deallocObject();
}

uint64_t sub_100953DA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100953DC8@<X0>(_DWORD *a1@<X8>)
{
  return sub_10094F7C4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), a1, *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_100953E04@<X0>(_DWORD *a1@<X8>)
{
  return sub_10063C890(*(void *)(v1 + 32), a1);
}

uint64_t sub_100953E24()
{
  return swift_deallocObject();
}

uint64_t sub_100953E34(uint64_t a1)
{
  return sub_10095400C(a1, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_10064E960);
}

uint64_t sub_100953E4C()
{
  return swift_deallocObject();
}

uint64_t sub_100953E5C(uint64_t a1)
{
  return sub_10094892C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100953E80(uint64_t a1)
{
  return sub_100949200(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100953EA0(uint64_t a1)
{
  return sub_100953F20(a1);
}

uint64_t sub_100953EB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100953F78(a1);
}

uint64_t sub_100953ED0(uint64_t a1)
{
  return sub_100949C38(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_100953EF0()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100953F08()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100953F20(uint64_t a1)
{
  *(void *)(*(void *)(v1 + 16) + 136) = a1;
  return sub_100947EE4((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100953EB8);
}

uint64_t sub_100953F78@<X0>(uint64_t a1@<X8>)
{
  return sub_100949790(*(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100953F9C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100953FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100950AD0(a1, a2, a3, *(unsigned int **)(v3 + 16), *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_100953FE4()
{
  return swift_deallocObject();
}

uint64_t sub_100953FF4(uint64_t a1)
{
  return sub_10095400C(a1, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_10064E980);
}

uint64_t sub_10095400C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, uint64_t))
{
  return a2(a1, v2[2], v2[3], v2[4], a1);
}

uint64_t sub_10095404C()
{
  return swift_deallocObject();
}

uint64_t sub_10095405C@<X0>(_DWORD *a1@<X8>)
{
  return sub_10095229C(a1);
}

uint64_t sub_100954078@<X0>(_DWORD *a1@<X8>)
{
  return sub_100952004(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_1009540A0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1009540D8(uint64_t a1, uint64_t *a2)
{
  sub_1009521C4(a1, a2, *(void *)(v2 + 16), *(_DWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1009540EC()
{
  return swift_deallocObject();
}

uint64_t sub_1009540FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100954124@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int16 v4 = *(unsigned __int8 *)(v2 + 72) | (*(unsigned __int8 *)(v2 + 73) << 8);
  return sub_100950230(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, v4, SHIBYTE(v4));
}

uint64_t sub_100954184@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100950454(a1, *(const void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 56) | (unsigned __int16)(*(unsigned __int8 *)(v2 + 57) << 8), a2);
}

double sub_1009541DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100948B60(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), v7);
  if (!v3)
  {
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 32) = v8;
  }
  return result;
}

double sub_100954230@<D0>(uint64_t a1@<X8>)
{
  return sub_100954348(a1);
}

double sub_100954248@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009542F0(a1, (void (*)(_OWORD *__return_ptr, uint64_t, void, void, void, void))sub_1009493AC, a2);
}

double sub_100954274@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100952A94(a1, *(void *)(v2 + 16), a2);
}

void sub_100954294(uint64_t a1@<X8>)
{
}

double sub_1009542AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009542F0(a1, (void (*)(_OWORD *__return_ptr, uint64_t, void, void, void, void))sub_100949DAC, a2);
}

uint64_t sub_1009542D8()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

double sub_1009542F0@<D0>(uint64_t a1@<X0>, void (*a2)(_OWORD *__return_ptr, uint64_t, void, void, void, void)@<X1>, uint64_t a3@<X8>)
{
  a2(v8, a1, v3[2], v3[3], v3[4], v3[5]);
  if (!v4)
  {
    double result = *(double *)v8;
    long long v7 = v8[1];
    *(_OWORD *)a3 = v8[0];
    *(_OWORD *)(a3 + 16) = v7;
    *(void *)(a3 + 32) = v9;
  }
  return result;
}

double sub_100954348@<D0>(uint64_t a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    double result = v7;
    long long v5 = v8;
    *(_OWORD *)a1 = v6;
    *(double *)(a1 + 16) = result;
    *(_OWORD *)(a1 + 24) = v5;
  }
  return result;
}

void sub_10095439C(uint64_t a1@<X8>)
{
  sub_100952B14(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1009543C0@<X0>(_DWORD *a1@<X8>)
{
  return sub_100950914(*(void *)(v1 + 16), *(const char **)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(_DWORD *)(v1 + 72), a1);
}

uint64_t sub_1009543EC@<X0>(_DWORD *a1@<X8>)
{
  return sub_100950728(*(void *)(v1 + 16), *(const char **)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), a1, *(_DWORD *)(v1 + 80));
}

uint64_t sub_100954428()
{
  return swift_deallocObject();
}

uint64_t sub_100954438()
{
  return swift_deallocObject();
}

uint64_t sub_100954448@<X0>(_DWORD *a1@<X8>)
{
  return sub_10094EAF8(a1);
}

uint64_t sub_100954468()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100954498@<X0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = fpfs_pkg_enable_dirstat();
  *a1 = result;
  return result;
}

void *sub_1009544FC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_10094866C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(uint64_t (**)@<X0>(uint64_t@<X0>, _DWORD *@<X8>))(v2 + 40), *(void **)(v2 + 48));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

void *sub_100954534@<X0>(_DWORD *a1@<X8>)
{
  return sub_1009546EC(a1);
}

uint64_t sub_10095454C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_10095463C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_10094900C, a2);
}

unint64_t sub_100954578@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100954678(a1, a2);
}

void *sub_100954590@<X0>(_DWORD *a1@<X8>)
{
  return sub_100954730(a1);
}

uint64_t sub_1009545A8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_10095463C(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_100949ABC, a2);
}

uint64_t sub_1009545D4()
{
  return sub_1009545EC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009545EC(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

uint64_t sub_10095463C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void, void)@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = a2(a1, v3[2], v3[3], v3[4], v3[5]);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

unint64_t sub_100954678@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *(void *)(*(void *)(v2 + 16) + 136) = a1;
  unint64_t result = sub_100947C64((void *(*)(uint64_t *__return_ptr, void *, char *, uint64_t))sub_100954590);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

void *sub_1009546EC@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void *sub_100954730@<X0>(_DWORD *a1@<X8>)
{
  return sub_1009529E0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100954754@<X0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = fpfs_get_dirstat();
  *a1 = result;
  return result;
}

uint64_t sub_1009547D4(uint64_t a1)
{
  return sub_1009537C8(a1);
}

uint64_t sub_1009547EC(uint64_t a1)
{
  return sub_100953E80(a1);
}

double sub_100954804@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100954274(a1, a2);
}

uint64_t sub_100954870@<X0>(_DWORD *a1@<X8>)
{
  return sub_100954078(a1);
}

uint64_t sub_1009548DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100953FC4(a1, a2, a3);
}

void sub_1009548F4()
{
  sub_100343DA4();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

unint64_t sub_1009549E8()
{
  return 0xD000000000000079;
}

uint64_t sub_100954A04()
{
  return sub_100965970(191, 0xD000000000000044, (void *)0x80000001009C0C40);
}

unint64_t sub_100954A38()
{
  return 0xD000000000000098;
}

unint64_t sub_100954A5C()
{
  return 0xD0000000000000A6;
}

unint64_t sub_100954A78()
{
  return 0xD000000000000020;
}

unint64_t sub_100954A94()
{
  return 0xD000000000000046;
}

uint64_t sub_100954AB0()
{
  return sub_100965970(287, 0xD0000000000000A4, (void *)0x80000001009C0530);
}

unint64_t sub_100954AE4()
{
  return 0xD000000000000052;
}

unint64_t sub_100954B00()
{
  return 0xD000000000000049;
}

uint64_t sub_100954B20()
{
  return sub_100965CBC((void *)0x80000001009BF8B0, (void *)0x80000001009BF930);
}

uint64_t sub_100954B5C()
{
  return sub_100965CBC((void *)0x80000001009BF690, (void *)0x80000001009BF710);
}

unint64_t sub_100954B94()
{
  return 0xD000000000000049;
}

unint64_t sub_100954BB0()
{
  return 0xD000000000000035;
}

uint64_t sub_100954BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100954C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v12 = 0;
  unsigned __int8 v13 = -1;
  long long v6 = (void *)swift_allocObject();
  v6[2] = &v12;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100967A74;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_1000140A8;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100014080;
  v11[3] = &unk_100AA6DD0;
  long long v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v3 runIfPossible:v8];
  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    if (v13 == 255)
    {
      swift_release();
      return 0;
    }
    else
    {
      uint64_t v10 = v12;
      if (v13)
      {
        v11[0] = v12;
        swift_errorRetain();
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        swift_willThrowTypedImpl();
      }
      sub_100967A90(v12, v13);
      swift_release();
    }
    return v10;
  }
  return result;
}

uint64_t sub_100954E30(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v5);
  uint64_t v3 = v5;
  uint64_t result = sub_100967A90(*(void *)a1, *(unsigned char *)(a1 + 8));
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

unint64_t sub_100954E98(uint64_t a1)
{
  unint64_t result = 0;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E696E6E6970;
      break;
    case 2:
    case 64:
      unint64_t result = 0x74616C7563657073;
      break;
    case 4:
      unint64_t result = 0x20746E65746E6F63;
      break;
    case 8:
      unint64_t result = 0x7220746365726964;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 32:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1009550A0()
{
  return sub_100954E98(*v0);
}

unint64_t sub_1009550A8()
{
  return sub_100609068(*v0);
}

uint64_t sub_1009550B0()
{
  return sub_1006F00DC(*v0);
}

void sub_1009550B8()
{
  sub_1009550D8();
  qword_100B0B6C0 = v0;
}

void sub_1009550D8()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_DELAY, 0);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  if (XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY)
  {
    xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 1);
    id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
    NSString v2 = sub_10096BC00();
    [v1 initWithLabel:v2 options:1 criteria:v0];

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_1009551F4()
{
  swift_bridgeObjectRetain();
  NSString v0 = sub_10096BC00();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_100955248()
{
  return sub_100955290();
}

uint64_t sub_10095525C()
{
  return sub_100955394();
}

uint64_t sub_100955270()
{
  return sub_100955494();
}

uint64_t sub_10095527C()
{
  return sub_100955290();
}

uint64_t sub_100955290()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10096B600();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100955380()
{
  return sub_100955394();
}

uint64_t sub_100955394()
{
  return sub_10096B610();
}

uint64_t sub_100955488()
{
  return sub_100955494();
}

uint64_t sub_100955494()
{
  return swift_endAccess();
}

void sub_1009554F4()
{
  NSString v2 = (uint64_t (*)(uint64_t))v0[3];
  if (v2)
  {
    uint64_t v3 = *v0;
    uint64_t v4 = swift_retain();
    uint64_t v5 = v2(v4);
    sub_1000705CC((uint64_t)v2);
    if (v5)
    {
      uint64_t v6 = qword_100B0B6E0;
      *(uint64_t *)((char *)v0 + qword_100B0B6E0) = *(void *)(*(void *)(*(void *)(v5 + 40) + 16) + 144);
      swift_retain();
      swift_release();
      if (*(uint64_t *)((char *)v0 + v6))
      {
        swift_retain();
        char v7 = sub_1007BB7AC();
        swift_release();
        if (!*(uint64_t *)((char *)v0 + qword_100B0B6F8)
          || (swift_retain(), sub_10071CB24(v7 & 1), swift_release(), !v1))
        {
          uint64_t v8 = *(uint64_t *)((char *)v0 + v6);
          if (v8)
          {
            uint64_t v9 = swift_allocObject();
            swift_weakInit();
            uint64_t v10 = swift_allocObject();
            swift_weakInit();
            swift_retain();
            swift_release();
            uint64_t v11 = swift_allocObject();
            *(void *)(v11 + 16) = *(void *)(v3 + 80);
            *(_OWORD *)(v11 + 24) = *(_OWORD *)(v3 + 88);
            *(void *)(v11 + 40) = *(void *)(v3 + 104);
            *(void *)(v11 + 48) = v9;
            *(void *)(v11 + 56) = v10;
            uint64_t v12 = (uint64_t (**)(char))(v8 + qword_100B0B510);
            uint64_t v13 = *(void *)(v8 + qword_100B0B510);
            void *v12 = sub_100968758;
            v12[1] = (uint64_t (*)(char))v11;
            sub_1000705CC(v13);
          }
        }
      }
      swift_release();
    }
  }
}

uint64_t sub_1009556D4(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      *(unsigned char *)(v4 + 24) = a1 & 1;
      swift_retain();
      sub_10035B320((uint64_t)"speculativeDiskManagementActivation()", 37, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1009687A0, v4);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100955800(uint64_t result, char a2)
{
  if (*(void *)(result + qword_100B0B6F8))
  {
    swift_retain();
    sub_10071CB24(a2 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100955850()
{
  NSString v2 = v0;
  uint64_t v89 = *v0;
  uint64_t v3 = sub_10002B7CC(&qword_100ADE738);
  __chkstk_darwin(v3 - 8);
  char v92 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10096C680();
  uint64_t v95 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10002B7CC(&qword_100AD0F88);
  uint64_t v94 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002B7CC(&qword_100ADF698);
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v88 = v9;
  __chkstk_darwin(v9);
  uint64_t v90 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[3];
  if (!v11 || (v12 = swift_retain(), uint64_t v13 = v11(v12), sub_1000705CC((uint64_t)v11), !v13)) {
    sub_100717210((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/SQLBackgroundDownloader.swift", 147, 2, 159);
  }
  sub_1009554F4();
  if (!v1)
  {
    __int16 v14 = sub_1006C7F60();
    uint64_t v85 = 0;
    if ((v14 & 0x1000) != 0)
    {
      int v15 = (void *)((char *)v0 + qword_100B0B700);
      uint64_t v16 = *(void *)((char *)v0 + qword_100B0B700 + 72);
      if (v16 >= 1)
      {
        long long v17 = *(_OWORD *)(v89 + 96);
        long long aBlock = *(_OWORD *)(v89 + 80);
        long long v97 = v17;
        uint64_t v86 = type metadata accessor for SpeculativeSetPacer();
        uint64_t v18 = v15[13];
        uint64_t v19 = v15[11];
        uint64_t v83 = v15[10];
        uint64_t v20 = v15[15];
        uint64_t v21 = swift_retain();
        uint64_t v22 = sub_10071ED84(v21, v19, v18, v16, v83, v20);
        swift_release();
        uint64_t v23 = qword_100B0B6F8;
        *(void *)((char *)v2 + qword_100B0B6F8) = v22;
        swift_release();
        if (*(void *)((char *)v2 + v23))
        {
          swift_retain();
          uint64_t v24 = v85;
          sub_10071A88C();
          swift_release();
          if (v24) {
            return swift_release();
          }
          uint64_t v85 = 0;
        }
      }
    }
    uint64_t v72 = v8;
    sub_100955270();
    sub_10096C650();
    uint64_t v84 = v13;
    uint64_t v25 = (void *)sub_1006F2F2C();
    *(void *)&long long aBlock = v25;
    uint64_t v82 = sub_10096C640();
    uint64_t v26 = *(void *)(v82 - 8);
    int v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    uint64_t v83 = v26 + 56;
    uint64_t v27 = (uint64_t)v92;
    v81(v92, 1, 1, v82);
    uint64_t v80 = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
    uint64_t v79 = sub_100025500((unint64_t *)&unk_100AD0F98, &qword_100AD0F88);
    unint64_t v78 = sub_100130AEC();
    id v28 = v25;
    long long v29 = v90;
    uint64_t v30 = v91;
    uint64_t v31 = v72;
    sub_10096B650();
    sub_10002B770(v27, &qword_100ADE738);

    uint64_t v32 = v6;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v95 + 8);
    v95 += 8;
    v77(v6, v93);
    uint64_t v33 = v31;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v94 + 8);
    v94 += 8;
    uint64_t v76 = v34;
    v34(v31, v30);
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    unsigned int v36 = (void *)swift_allocObject();
    uint64_t v37 = (void *)v89;
    uint64_t v74 = *(void *)(v89 + 80);
    _OWORD v36[2] = v74;
    uint64_t v73 = v37[11];
    v36[3] = v73;
    uint64_t v86 = v37[12];
    v36[4] = v86;
    uint64_t v89 = v37[13];
    v36[5] = v89;
    v36[6] = v35;
    uint64_t v75 = sub_100025500(&qword_100ADF6A0, &qword_100ADF698);
    uint64_t v38 = v88;
    uint64_t v39 = sub_10096B670();
    swift_release();
    uint64_t v87 = *(void *)(v87 + 8);
    ((void (*)(char *, uint64_t))v87)(v29, v38);
    *(void *)((char *)v2 + qword_100B0B6C8) = v39;
    swift_release();
    sub_100955488();
    sub_10096C670();
    char v40 = (void *)sub_1006F2F2C();
    *(void *)&long long aBlock = v40;
    uint64_t v41 = (uint64_t)v92;
    v81(v92, 1, 1, v82);
    id v42 = v40;
    uint64_t v43 = v91;
    sub_10096B650();
    sub_10002B770(v41, &qword_100ADE738);

    unint64_t v44 = v32;
    uint64_t v45 = v73;
    v77(v44, v93);
    unint64_t v46 = v33;
    uint64_t v47 = v74;
    v76(v46, v43);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v47;
    v49[3] = v45;
    uint64_t v50 = v89;
    int v51 = v90;
    id v49[4] = v86;
    v49[5] = v50;
    v49[6] = v48;
    uint64_t v52 = sub_10096B670();
    swift_release();
    ((void (*)(char *, uint64_t))v87)(v51, v38);
    *(void *)((char *)v2 + qword_100ADF610) = v52;
    swift_release();
    uint64_t v53 = *(void **)((char *)v2 + qword_100B0B6F0);
    if (v53)
    {
      swift_bridgeObjectRetain();
      NSString v54 = sub_10096BC00();
      swift_bridgeObjectRelease();
      uint64_t v55 = swift_allocObject();
      swift_weakInit();
      int v56 = (void *)swift_allocObject();
      v56[2] = v47;
      v56[3] = v45;
      uint64_t v57 = v89;
      v56[4] = v86;
      v56[5] = v57;
      v56[6] = v55;
      int v98 = sub_100968708;
      uint64_t v99 = v56;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v97 = sub_100954BE4;
      *((void *)&v97 + 1) = &unk_100AA7820;
      uint64_t v58 = _Block_copy(&aBlock);
      swift_release();
      [v53 registerKey:v54 notificationsUpdatesHandlers:v58];
      _Block_release(v58);
    }
    uint64_t v59 = (void *)v2[2];
    int v98 = (uint64_t (*)(char))sub_100954BD4;
    uint64_t v99 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v97 = sub_10017090C;
    *((void *)&v97 + 1) = &unk_100AA77D0;
    long long v60 = _Block_copy(&aBlock);
    swift_release();
    *(void *)&long long aBlock = 0;
    id v61 = [v59 fetchSwift:v60 error:&aBlock];
    _Block_release(v60);
    id v62 = (id)aBlock;
    if (swift_isEscapingClosureAtFileLocation())
    {
      __break(1u);
    }
    else
    {
      if (!v61)
      {
        sub_10096ABF0();

        swift_willThrow();
        return swift_release();
      }
      [v61 next];
      uint64_t v63 = (uint64_t)[v61 longAtIndex:0];
      uint64_t v64 = sub_1006F2FD8(8);
      uint64_t v66 = *(void *)(v64 + 16);
      uint64_t v65 = *(void *)(v64 + 24);
      BOOL v67 = __OFSUB__(v65, v66);
      uint64_t v68 = v65 - v66;
      if (!v67)
      {
        if (v68 < v63) {
          *(void *)(v64 + 24) = v63;
        }
        *(void *)(v64 + 16) = v63;
        swift_retain();
        if (v63 < 1)
        {
          uint64_t v70 = v85;
        }
        else
        {
          uint64_t v69 = v85;
          sub_100964090();
          uint64_t v70 = v69;
          if (v69)
          {
LABEL_24:
            swift_release();

            return swift_release();
          }
        }
        sub_100956990();
        if (!v70) {
          sub_100956F68();
        }
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  return swift_release();
}

uint64_t sub_100956308()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100956990();
    return swift_release();
  }
  return result;
}

uint64_t sub_100956378()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1009649F4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1009563D0(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10095649C(a1 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100956430()
{
  uint64_t v1 = qword_100B0B6F8;
  if (*(void *)(v0 + qword_100B0B6F8))
  {
    swift_retain();
    sub_10071A8B8();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;

  return swift_release();
}

uint64_t sub_10095649C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096B480();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = (*(unsigned char *)(v2 + qword_100B0B6E8) ^ 1) & a1;
  *(unsigned char *)(v2 + qword_100B0B6E8) = a1;
  id v9 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v10 = sub_10096B470();
  os_log_type_t v11 = sub_10096C590();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    v17[3] = a1 & 1;
    sub_10096C8C0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "⏰ update CacheDeleteCacheable: %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    __int16 v14 = *(uint64_t (**)(uint64_t))(v2 + 24);
    if (v14)
    {
      uint64_t v15 = swift_retain();
      uint64_t v16 = v14(v15);
      uint64_t result = sub_1000705CC((uint64_t)v14);
      if (v16)
      {
        swift_retain();
        sub_10035B320((uint64_t)"updateCacheDeleteCacheable(_:)", 30, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_100968634, v2);
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1009566F0()
{
  uint64_t result = sub_10095C28C();
  if (v0) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100956724(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100956754(a1, a2, a3, (void (*)(uint64_t))sub_1009664B0);
}

uint64_t sub_10095673C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100956754(a1, a2, a3, (void (*)(uint64_t))sub_100966530);
}

uint64_t sub_100956754(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  id v5 = a3;
  uint64_t v6 = swift_retain();
  a4(v6);

  return swift_release();
}

id sub_1009567B0()
{
  if (*(unsigned char *)(v0 + qword_100B0B6D8))
  {
    if (qword_100ACC1E0 != -1) {
      swift_once();
    }
    return (id)sub_10070C5C8((uint64_t)sub_10096862C, v0);
  }
  else
  {
    *(unsigned char *)(v0 + qword_100B0B6D8) = 1;
    if (qword_100ACC1E0 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_100B0B6C0;
    return [v2 addWatcher:v0];
  }
}

uint64_t sub_10095689C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(result + 24);
  if (v3 && (uint64_t v4 = swift_retain(), v5 = v3(v4), result = sub_1000705CC((uint64_t)v3), v5))
  {
    sub_1006C05B4();
    uint64_t result = swift_release();
    char v6 = 0;
  }
  else
  {
    char v6 = 1;
  }
  *a2 = v6;
  return result;
}

id sub_100956914()
{
  uint64_t v1 = qword_100B0B6D8;
  if (*(unsigned char *)(v0 + qword_100B0B6D8) == 1)
  {
    if (qword_100ACC1E0 != -1) {
      swift_once();
    }
    id result = [(id)qword_100B0B6C0 removeWatcher:v0];
    *(unsigned char *)(v0 + v1) = 0;
  }
  return result;
}

void sub_100956990()
{
  uint64_t v1 = *(void **)(v0 + 16);
  aBlock[4] = sub_100954BD0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA7730;
  uint64_t v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  id v3 = [v1 fetchSwift:v2 error:aBlock];
  _Block_release(v2);
  id v4 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v3)
  {
    if ([v3 next]) {
      sub_1009567B0();
    }
    else {
      sub_100956914();
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

void sub_100956B00()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_10096B830();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (uint64_t *)((char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (!v7) {
    return;
  }
  uint64_t v8 = swift_retain();
  uint64_t v9 = v7(v8);
  sub_1000705CC((uint64_t)v7);
  if (!v9) {
    return;
  }
  uint64_t v10 = sub_1006F2F2C();
  *char v6 = v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v11 = (id)v10;
  LOBYTE(v10) = sub_10096B860();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  uint64_t v12 = *(void **)(v2 + 16);
  aBlock[4] = sub_100954BD8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA7708;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  id v14 = [v12 fetchSwift:v13 error:aBlock];
  _Block_release(v13);
  id v15 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    goto LABEL_15;
  }
  if (v14)
  {
    if ([v14 next])
    {
      while (1)
      {
        sub_100956DD8(v14);
        if (v1) {
          break;
        }
        if (([v14 next] & 1) == 0) {
          goto LABEL_12;
        }
      }
    }
LABEL_12:
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_100956DD8(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  char v6 = (char *)&v9 - v5;
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v7 + 16))(a1, 0, AssociatedTypeWitness, v7);
  if (!v1)
  {
    sub_10095A714((uint64_t)v6);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_100956F68()
{
  uint64_t v1 = sub_10096B730();
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  __chkstk_darwin(v1);
  uint64_t v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10096B7D0();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096B710();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_10096B820();
  uint64_t v25 = *(void *)(v31 - 8);
  uint64_t v9 = __chkstk_darwin(v31);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  id v14 = (char *)&v23 - v13;
  id v15 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v15)
  {
    uint64_t v16 = swift_retain();
    uint64_t v17 = v15(v16);
    uint64_t result = sub_1000705CC((uint64_t)v15);
    if (v17)
    {
      id v24 = (id)sub_1006F2F2C();
      sub_10096B800();
      *uint64_t v8 = *(void *)(v0 + qword_100B0B700 + 96);
      (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.nanoseconds(_:), v5);
      sub_10096B840();
      (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v25 = *(void *)(v25 + 8);
      ((void (*)(char *, uint64_t))v25)(v11, v31);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = v0;
      aBlock[4] = sub_10096860C;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100020480;
      aBlock[3] = &unk_100AA76E0;
      uint64_t v19 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_10096B780();
      uint64_t v32 = _swiftEmptyArrayStorage;
      sub_100025894((unint64_t *)&unk_100ACAEF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10002B7CC((uint64_t *)&unk_100ACB5C0);
      sub_100025500((unint64_t *)&qword_100ACAF00, (uint64_t *)&unk_100ACB5C0);
      uint64_t v20 = v27;
      uint64_t v21 = v30;
      sub_10096CA60();
      uint64_t v22 = v24;
      sub_10096C630();
      _Block_release(v19);
      swift_release();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v21);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v28);
      ((void (*)(char *, uint64_t))v25)(v14, v31);
      return swift_release();
    }
  }
  return result;
}

void sub_10095743C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10096B480();
  __chkstk_darwin(v3);
  if (qword_100ACC1E0 != -1) {
    swift_once();
  }
  char v4 = sub_10070C2F0((uint64_t)variable initialization expression of DocumentWharf.deleteBusy, 0);
  if (v4 == 2 || (v4 & 1) != 0) {
    sub_1006BFD34("scheduleCancellationOfSpeculativeSetDownloads()", 47, 2, (uint64_t)sub_100968614, a2, (uint64_t)&type metadata for () + 8, (uint64_t)&type metadata for ());
  }
}

uint64_t sub_10095770C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(v1 + 80);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v2 + 88);
  *(void *)(v4 + 40) = *(void *)(v1 + 104);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1009685B0;
  *(void *)(v5 + 24) = v4;
  uint64_t v16 = (unint64_t (*)())sub_1001FB2E8;
  uint64_t v17 = v5;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = sub_10017090C;
  id v15 = &unk_100AA7668;
  uint64_t v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v7 = [v3 executeSwift:v6 error:&aBlock];
  _Block_release(v6);
  uint64_t v8 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!v7)
  {
LABEL_5:
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v16 = sub_1009549E8;
  uint64_t v17 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = sub_10017090C;
  id v15 = &unk_100AA7690;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned __int8 v10 = [v3 executeSwift:v9 error:&aBlock];
  _Block_release(v9);
  uint64_t v8 = aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
LABEL_8:
  }
    __break(1u);
  if ((v10 & 1) == 0) {
    goto LABEL_5;
  }
  return swift_release();
}

uint64_t sub_1009579F4()
{
  sub_10096CBD0(144);
  v3._char object = (void *)0x80000001009C0C90;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  sub_10096BDC0(v3);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 8))(AssociatedTypeWitness);
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000064;
  v5._char object = (void *)0x80000001009C0CC0;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_100957B0C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v17 = sub_100954A04;
  uint64_t v18 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10017090C;
  uint64_t v16 = &unk_100AA7578;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:&aBlock];
  _Block_release(v2);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_14;
  }
  if (!v3)
  {
LABEL_10:
    sub_10096ABF0();

    return swift_willThrow();
  }
  uint64_t v17 = (uint64_t (*)())sub_100954A38;
  uint64_t v18 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10017090C;
  uint64_t v16 = &unk_100AA75A0;
  Swift::String v5 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v6 = [v1 executeSwift:v5 error:&aBlock];
  _Block_release(v5);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!v6) {
    goto LABEL_10;
  }
  uint64_t v17 = sub_100954A54;
  uint64_t v18 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10017090C;
  uint64_t v16 = &unk_100AA75C8;
  unsigned int v7 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v8 = [v1 executeSwift:v7 error:&aBlock];
  _Block_release(v7);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (!v8) {
    goto LABEL_10;
  }
  uint64_t v17 = sub_100954A58;
  uint64_t v18 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_10017090C;
  uint64_t v16 = &unk_100AA75F0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v10 = [v1 executeSwift:v9 error:&aBlock];
  _Block_release(v9);
  id v11 = aBlock;
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    goto LABEL_16;
  }
  if (v10) {
    return result;
  }
  sub_10096ABF0();

  return swift_willThrow();
}

uint64_t sub_100957EB8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  unsigned int v3 = (void *)v0[2];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(v1 + 80);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v2 + 88);
  *(void *)(v4 + 40) = *(void *)(v1 + 104);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100968584;
  *(void *)(v5 + 24) = v4;
  uint64_t v26 = sub_1001FB2E8;
  uint64_t v27 = v5;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA7488;
  unsigned int v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v7 = [v3 executeSwift:v6 error:&aBlock];
  _Block_release(v6);
  unsigned int v8 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v7)
  {
    sub_10096ABF0();

    goto LABEL_16;
  }
  uint64_t v26 = (uint64_t (*)())sub_100954A5C;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA74B0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v10 = [v3 executeSwift:v9 error:&aBlock];
  _Block_release(v9);
  id v11 = aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    goto LABEL_19;
  }
  if (!v10)
  {
LABEL_15:
    sub_10096ABF0();

    goto LABEL_16;
  }
  uint64_t v26 = (uint64_t (*)())sub_100954A78;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA74D8;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v13 = [v3 executeSwift:v12 error:&aBlock];
  _Block_release(v12);
  id v11 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!v13) {
    goto LABEL_15;
  }
  uint64_t v26 = (uint64_t (*)())sub_100954A94;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA7500;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v15 = [v3 executeSwift:v14 error:&aBlock];
  _Block_release(v14);
  id v11 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v15) {
    goto LABEL_15;
  }
  uint64_t v26 = (uint64_t (*)())sub_1009549E8;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA7528;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v17 = [v3 executeSwift:v16 error:&aBlock];
  _Block_release(v16);
  id v11 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  if (!v17) {
    goto LABEL_15;
  }
  uint64_t v26 = sub_100954AB0;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017090C;
  uint64_t v25 = &unk_100AA7550;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned __int8 v19 = [v3 executeSwift:v18 error:&aBlock];
  _Block_release(v18);
  uint64_t v20 = aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    goto LABEL_23;
  }
  if ((v19 & 1) == 0)
  {
    sub_10096ABF0();

LABEL_16:
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1009584D0()
{
  sub_10096CBD0(362);
  v3._char object = (void *)0x80000001009C0790;
  v3._uint64_t countAndFlagsBits = 0xD000000000000037;
  sub_10096BDC0(v3);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 8))(AssociatedTypeWitness);
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000131;
  v5._char object = (void *)0x80000001009C07D0;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_1009585E8(uint64_t result, void *a2)
{
  Swift::String v3 = *(uint64_t (**)(uint64_t))(v2 + 24);
  if (v3)
  {
    uint64_t v5 = result;
    uint64_t v6 = swift_retain();
    uint64_t v7 = v3(v6);
    uint64_t result = sub_1000705CC((uint64_t)v3);
    if (v7)
    {
      sub_10058411C();
      swift_retain();
      swift_release();
      sub_10096CBD0(49);
      swift_bridgeObjectRelease();
      v9._uint64_t countAndFlagsBits = v5;
      v9._char object = a2;
      sub_10096BDC0(v9);
      v10._uint64_t countAndFlagsBits = 41;
      v10._char object = (void *)0xE100000000000000;
      sub_10096BDC0(v10);
      uint64_t v8 = sub_1005D9F64(0xD00000000000002ELL, (void *)0x80000001009C0480);
      swift_release();
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009586FC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v12 = sub_100954AE4;
  uint64_t v13 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  Swift::String v10 = sub_10017090C;
  id v11 = &unk_100AA73E8;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:&aBlock];
  _Block_release(v2);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3)
  {
    uint64_t v12 = sub_100954B00;
    uint64_t v13 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    Swift::String v10 = sub_10017090C;
    id v11 = &unk_100AA7410;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_release();
    long long aBlock = 0;
    unsigned int v6 = [v1 executeSwift:v5 error:&aBlock];
    _Block_release(v5);
    Swift::String v4 = aBlock;
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0)
    {
      if (v6) {
        return result;
      }
      goto LABEL_5;
    }
LABEL_8:
    __break(1u);
  }
LABEL_5:
  sub_10096ABF0();

  return swift_willThrow();
}

uint64_t sub_100958914()
{
  return sub_100961D04(sub_100954AE4, &unk_100AA73C0);
}

uint64_t sub_100958980()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v29 = sub_100954AE4;
  uint64_t v30 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017090C;
  uint64_t v28 = &unk_100AA7258;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:&aBlock];
  _Block_release(v2);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!v3)
  {
LABEL_15:
    sub_10096ABF0();

    return swift_willThrow();
  }
  uint64_t v29 = sub_100954B94;
  uint64_t v30 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017090C;
  uint64_t v28 = &unk_100AA7280;
  uint64_t v5 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v6 = [v1 executeSwift:v5 error:&aBlock];
  _Block_release(v5);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!v6) {
    goto LABEL_15;
  }
  uint64_t v29 = sub_100954B00;
  uint64_t v30 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017090C;
  uint64_t v28 = &unk_100AA72A8;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v8 = [v1 executeSwift:v7 error:&aBlock];
  _Block_release(v7);
  Swift::String v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v8) {
    goto LABEL_15;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1009684CC;
  *(void *)(v9 + 24) = v0;
  uint64_t v29 = (unint64_t (*)())sub_1001FB2E8;
  uint64_t v30 = v9;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017090C;
  uint64_t v28 = &unk_100AA72F8;
  Swift::String v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v11 = [v1 executeSwift:v10 error:&aBlock];
  _Block_release(v10);
  uint64_t v12 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v11)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100968514;
  *(void *)(v14 + 24) = v0;
  uint64_t v29 = (unint64_t (*)())sub_1001FB2E8;
  uint64_t v30 = v14;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017090C;
  uint64_t v28 = &unk_100AA7348;
  unsigned int v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v16 = [v1 executeSwift:v15 error:&aBlock];
  _Block_release(v15);
  unsigned int v17 = aBlock;
  char v18 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18) {
    goto LABEL_23;
  }
  if (v16)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_10096852C;
    *(void *)(v19 + 24) = v0;
    uint64_t v29 = (unint64_t (*)())sub_1001FB2E8;
    uint64_t v30 = v19;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v26 = 1107296256;
    uint64_t v27 = sub_10017090C;
    uint64_t v28 = &unk_100AA7398;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    long long aBlock = 0;
    unsigned __int8 v21 = [v1 executeSwift:v20 error:&aBlock];
    _Block_release(v20);
    uint64_t v22 = aBlock;
    char v23 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v23 & 1) == 0)
    {
      if ((v21 & 1) == 0)
      {
        sub_10096ABF0();

        swift_willThrow();
      }
      return swift_release_n();
    }
LABEL_24:
    __break(1u);
  }
  sub_10096ABF0();

  swift_willThrow();
  return swift_release_n();
}

uint64_t sub_100958FF4()
{
  sub_10096CBD0(770);
  v1._uint64_t countAndFlagsBits = 0xD0000000000001A1;
  v1._char object = (void *)0x80000001009BFF90;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_1009585E8(0x695F70662E77656ELL, (void *)0xE900000000000064);
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD00000000000005BLL;
  v3._char object = (void *)0x80000001009C0140;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_1009585E8(0x695F70662E77656ELL, (void *)0xE900000000000064);
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000036;
  v5._char object = (void *)0x80000001009C01A0;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_1009670AC();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xD000000000000093;
  v7._char object = (void *)0x80000001009C01E0;
  sub_10096BDC0(v7);
  v8._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._char object = (void *)0x80000001009C0280;
  v9._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_100966E0C();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x444E450A3BLL;
  v11._char object = (void *)0xE500000000000000;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_100959244(uint64_t a1, uint64_t a2, Swift::Int a3, uint64_t a4, void *a5)
{
  sub_10096CBD0(a3);
  v8._uint64_t countAndFlagsBits = a4;
  v8._char object = a5;
  sub_10096BDC0(v8);
  v9._uint64_t countAndFlagsBits = sub_1009670AC();
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._char object = (void *)0x80000001009BFCE0;
  v10._uint64_t countAndFlagsBits = 0xD0000000000000D0;
  sub_10096BDC0(v10);
  v11._uint64_t countAndFlagsBits = sub_100966E0C();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x444E450A3BLL;
  v12._char object = (void *)0xE500000000000000;
  sub_10096BDC0(v12);
  return 0;
}

void sub_100959390(uint64_t a1, unint64_t a2, uint64_t a3)
{
}

void sub_1009593B0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v103 = a5;
  uint64_t v92 = a3;
  unint64_t v101 = a2;
  uint64_t v99 = (void *)*v5;
  uint64_t v8 = v99[12];
  int v109 = v5;
  uint64_t v107 = v99[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v106 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v87 - v13;
  unint64_t v98 = sub_10096B480();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  unsigned int v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v19 = v10 + 16;
  char v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v104 = a1;
  uint64_t v20 = a1;
  unsigned __int8 v21 = v18;
  v18(v14, v20, AssociatedTypeWitness);
  uint64_t v22 = sub_10096B470();
  os_log_type_t v23 = sub_10096C590();
  LODWORD(v96) = v23;
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v108 = v8;
  uint64_t v105 = AssociatedTypeWitness;
  uint64_t v100 = v21;
  uint64_t v110 = v10;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v94 = (void **)swift_slowAlloc();
    long long aBlock = v94;
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v91 = v25 + 4;
    os_log_t v93 = v22;
    uint64_t v26 = v106;
    v21(v106, (uint64_t)v14, AssociatedTypeWitness);
    uint64_t v95 = a4;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v14, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    uint64_t v28 = sub_10096D220();
    unint64_t v30 = v29;
    v27(v26, AssociatedTypeWitness);
    uint64_t v111 = sub_100719D44(v28, v30, (uint64_t *)&aBlock);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    unint64_t v31 = sub_100609068(v101);
    uint64_t v111 = sub_100719D44(v31, v32, (uint64_t *)&aBlock);
    uint64_t v33 = v100;
    sub_10096C8C0();
    a4 = v95;
    swift_bridgeObjectRelease();
    os_log_t v34 = v93;
    _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v96, "⏰  scheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, unint64_t))(v97 + 8))(v16, v98);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, AssociatedTypeWitness);

    (*(void (**)(char *, unint64_t))(v97 + 8))(v16, v98);
    uint64_t v33 = v21;
  }
  uint64_t v35 = sub_10096A660();
  BOOL v38 = a4 < 0 || v35 == a4 || (uint64_t)v103 < 0;
  if (v38) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = v103;
  }
  if (v38) {
    unint64_t v40 = 0;
  }
  else {
    unint64_t v40 = a4;
  }
  uint64_t v103 = (void *)v109[2];
  uint64_t v41 = v105;
  id v42 = v106;
  uint64_t v97 = v19;
  v33(v106, v104, v105);
  uint64_t v43 = v110;
  uint64_t v44 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v45 = (v44 + 48) & ~v44;
  uint64_t v90 = v44;
  uint64_t v89 = v45 + v102;
  unint64_t v46 = (v45 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v98 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v95 = v44 | 7;
  uint64_t v47 = (void *)swift_allocObject();
  uint64_t v48 = v43;
  uint64_t v49 = v47;
  v47[2] = v107;
  uint64_t v50 = v99;
  os_log_t v93 = (os_log_t)v99[11];
  v47[3] = v93;
  id v47[4] = v108;
  uint64_t v94 = (void **)v50[13];
  v47[5] = v94;
  uint64_t v91 = v45;
  int v51 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  uint64_t v52 = v42;
  BOOL v53 = v38;
  uint64_t v110 = v48 + 32;
  unsigned int v96 = v51;
  v51((char *)v47 + v45, v52, v41);
  *(void *)((char *)v49 + v46) = v109;
  NSString v54 = (char *)v49 + v98;
  unint64_t v98 = v40;
  uint64_t v99 = v39;
  *(void *)NSString v54 = v40;
  v54[8] = v38;
  uint64_t v55 = (char *)v49 + ((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)uint64_t v55 = v39;
  v55[8] = v38;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_10096805C;
  *(void *)(v56 + 24) = v49;
  long long v116 = sub_1001FB2E8;
  uint64_t v117 = v56;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v113 = 1107296256;
  long long v114 = sub_10017090C;
  long long v115 = &unk_100AA7140;
  uint64_t v57 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  long long aBlock = 0;
  id v58 = [v103 fetchSwift:v57 error:&aBlock];
  _Block_release(v57);
  uint64_t v59 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (!v58)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    return;
  }
  id v88 = v58;
  unsigned int v61 = [v58 next];
  uint64_t v63 = v105;
  id v62 = v106;
  v100(v106, v104, v105);
  if (v61)
  {
    uint64_t v64 = (v90 + 56) & ~v90;
    unint64_t v65 = (v102 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = (char *)swift_allocObject();
    os_log_t v67 = v93;
    *((void *)v66 + 2) = v107;
    *((void *)v66 + 3) = v67;
    uint64_t v68 = v94;
    *((void *)v66 + 4) = v108;
    *((void *)v66 + 5) = v68;
    *((void *)v66 + 6) = v101;
    v96(&v66[v64], v62, v63);
    *(void *)&v66[v65] = v109;
    uint64_t v69 = &v66[(v65 + 15) & 0xFFFFFFFFFFFFFFF8];
    *(void *)uint64_t v69 = v98;
    v69[8] = v53;
    uint64_t v70 = &v66[(v65 + 31) & 0xFFFFFFFFFFFFFFF8];
    *(void *)uint64_t v70 = v99;
    _DWORD v70[8] = v53;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = sub_1009683DC;
    *(void *)(v71 + 24) = v66;
    long long v116 = sub_1001FB2E8;
    uint64_t v117 = v71;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v113 = 1107296256;
    long long v114 = sub_10017090C;
    long long v115 = &unk_100AA7230;
    uint64_t v72 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    long long aBlock = 0;
    unsigned __int8 v73 = [v103 executeSwift:v72 error:&aBlock];
    _Block_release(v72);
    uint64_t v74 = aBlock;
    char v75 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v75 & 1) == 0)
    {
      if ((v73 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_29:
      swift_release();
      swift_release();

      return;
    }
    goto LABEL_32;
  }
  unint64_t v76 = (v89 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v77 = (v89 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v78 = (char *)swift_allocObject();
  os_log_t v79 = v93;
  *((void *)v78 + 2) = v107;
  *((void *)v78 + 3) = v79;
  uint64_t v80 = v94;
  *((void *)v78 + 4) = v108;
  *((void *)v78 + 5) = v80;
  v96(&v78[v91], v62, v63);
  int v81 = &v78[v46];
  *(void *)int v81 = v98;
  v81[8] = v53;
  uint64_t v82 = &v78[v76];
  *(void *)uint64_t v82 = v99;
  v82[8] = v53;
  *(void *)&v78[v77] = v92;
  *(void *)&v78[(v77 + 15) & 0xFFFFFFFFFFFFFFF8] = v101;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_100968204;
  *(void *)(v83 + 24) = v78;
  long long v116 = sub_1001FB2E8;
  uint64_t v117 = v83;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v113 = 1107296256;
  long long v114 = sub_10017090C;
  long long v115 = &unk_100AA71B8;
  uint64_t v84 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v85 = [v103 executeSwift:v84 error:&aBlock];
  _Block_release(v84);
  uint64_t v74 = aBlock;
  char v86 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v86) {
    goto LABEL_33;
  }
  if (v85)
  {
    sub_1009567B0();
    goto LABEL_29;
  }
LABEL_30:
  sub_10096ABF0();

  swift_willThrow();
  swift_release();
  swift_release();
}

uint64_t sub_100959F48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  int v9 = a5 & 1;
  int v10 = a7 & 1;
  sub_10096CBD0(73);
  v16._char object = (void *)0x80000001009A5460;
  v16._uint64_t countAndFlagsBits = 0xD000000000000036;
  sub_10096BDC0(v16);
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  v17._uint64_t countAndFlagsBits = v12(a1, v13, v11);
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x2020200A444E4120;
  v18._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v18);
  v19._uint64_t countAndFlagsBits = sub_10058B0C0(a1, a4, v9, a6, v10);
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10095A0EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  v21[1] = 0xE000000000000000;
  sub_10096CBD0(86);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0xD000000000000036;
  v24._char object = (void *)0x80000001009A5370;
  sub_10096BDC0(v24);
  v21[3] = &type metadata for Int;
  v21[0] = a2;
  uint64_t v13 = sub_1003AC444((uint64_t)v21);
  uint64_t v15 = v14;
  sub_10002B770((uint64_t)v21, (uint64_t *)&unk_100ACE0F0);
  if (v15)
  {
    v25._uint64_t countAndFlagsBits = v13;
    v25._char object = v15;
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0x204552454857200ALL;
    v26._char object = (void *)0xED0000203D206469;
    sub_10096BDC0(v26);
    swift_getAssociatedTypeWitness();
    uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    Swift::String v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v18 = swift_checkMetadataState();
    v27._uint64_t countAndFlagsBits = v17(a1, v18, v16);
    sub_10096BDC0(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 0x2020200A444E4120;
    v28._char object = (void *)0xED00002020202020;
    sub_10096BDC0(v28);
    v29._uint64_t countAndFlagsBits = sub_10058B0C0(a1, a5, a6 & 1, a7, a8 & 1);
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10095A36C(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  sub_10096CBD0(135);
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  v37._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v37._char object = (void *)0x80000001009A5430;
  sub_10096BDC0(v37);
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  v38._uint64_t countAndFlagsBits = v12(a1, v13, v11);
  sub_10096BDC0(v38);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v39._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v39);
  Class isa = 0;
  if ((a4 & 1) == 0) {
    Class isa = sub_10096C3C0().super.super.isa;
  }
  id v15 = [a1 bindObjectParameter:isa];
  swift_unknownObjectRelease();
  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v18 = v17;

  v40._uint64_t countAndFlagsBits = v16;
  v40._char object = v18;
  sub_10096BDC0(v40);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v41._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v41);
  if (a6) {
    v19.super.super.Class isa = 0;
  }
  else {
    v19.super.super.Class isa = sub_10096C3C0().super.super.isa;
  }
  id v20 = [a1 bindObjectParameter:v19.super.super.isa];
  swift_unknownObjectRelease();
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v23 = v22;

  v42._uint64_t countAndFlagsBits = v21;
  v42._char object = v23;
  sub_10096BDC0(v42);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v43._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v43);
  os_log_t v34 = &type metadata for Int;
  v33[0] = a7;
  uint64_t v24 = sub_1003AC444((uint64_t)v33);
  Swift::String v26 = v25;
  sub_10002B770((uint64_t)v33, (uint64_t *)&unk_100ACE0F0);
  if (!v26) {
    goto LABEL_9;
  }
  v44._uint64_t countAndFlagsBits = v24;
  v44._char object = v26;
  sub_10096BDC0(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v45._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v45);
  v33[0] = 0;
  v46._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v47._char object = (void *)0xEF20202020202020;
  sub_10096BDC0(v47);
  os_log_t v34 = &type metadata for Int;
  v33[0] = a8;
  uint64_t v27 = sub_1003AC444((uint64_t)v33);
  Swift::String v29 = v28;
  sub_10002B770((uint64_t)v33, (uint64_t *)&unk_100ACE0F0);
  if (v29)
  {
    v48._uint64_t countAndFlagsBits = v27;
    v48._char object = v29;
    sub_10096BDC0(v48);
    swift_bridgeObjectRelease();
    v49._uint64_t countAndFlagsBits = 41;
    v49._char object = (void *)0xE100000000000000;
    sub_10096BDC0(v49);
    return v35;
  }
  else
  {
LABEL_9:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10095A714(uint64_t a1)
{
  uint64_t v37 = a1;
  Swift::String v3 = (void *)*v1;
  uint64_t v4 = sub_10096B0E0();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  unint64_t v32 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[10];
  uint64_t v7 = v3[11];
  uint64_t v8 = v3[12];
  uint64_t v9 = v3[13];
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  uint64_t v35 = v9;
  uint64_t v36 = v7;
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  uint64_t v10 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  id v15 = (char *)&v29 - v14;
  uint64_t v16 = (uint64_t (*)(uint64_t))v1[3];
  if (v16)
  {
    uint64_t v17 = swift_retain();
    uint64_t v18 = v16(v17);
    uint64_t v19 = (uint64_t)v16;
    id v20 = (void *)v18;
    uint64_t result = sub_1000705CC(v19);
    if (v20)
    {
      uint64_t v31 = v2;
      unint64_t v30 = v20;
      swift_beginAccess();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_bridgeObjectRetain();
      uint64_t v21 = v37;
      sub_10096BAA0();
      swift_bridgeObjectRelease();
      int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v15, 1, v10);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      if (v22 != 1) {
        return swift_release();
      }
      uint64_t v38 = v6;
      uint64_t v39 = v36;
      uint64_t v40 = v8;
      uint64_t v41 = v35;
      type metadata accessor for ConcreteJobResult();
      uint64_t v23 = sub_100591720();
      uint64_t v24 = v31;
      sub_1008B25B8(v21, v30, v23);
      if (v24)
      {
        swift_release();
        return swift_release();
      }
      Swift::String v25 = v32;
      sub_10096B0D0();
      sub_10096B080();
      double v27 = v26;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v34);
      double v28 = v27 * 1000000000.0;
      if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v28 > -9.22337204e18)
        {
          if (v28 < 9.22337204e18)
          {
            sub_10059C6F4(v23, (uint64_t)v28);
            swift_release();
            return swift_release();
          }
LABEL_14:
          __break(1u);
          return result;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_14;
    }
  }
  return result;
}

void **sub_10095AB08(uint64_t a1, unint64_t a2)
{
  long long v116 = (void *)a2;
  uint64_t v4 = *v2;
  uint64_t v115 = sub_10096B480();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v113 = (char *)v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = v4;
  uint64_t v6 = *(void *)(v4 + 96);
  uint64_t v7 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  long long v112 = (char *)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v100 - v12;
  uint64_t v14 = (void *)v2[2];
  id v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  long long v124 = (char *)a1;
  uint64_t v125 = v9 + 16;
  id v128 = v15;
  id v129 = v14;
  v15((char *)v100 - v12, (char *)a1, AssociatedTypeWitness);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = (v16 + 48) & ~v16;
  uint64_t v111 = v10;
  uint64_t v110 = v16;
  uint64_t v108 = v17 + v10;
  uint64_t v118 = v16 | 7;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v127;
  uint64_t v122 = v7;
  *(void *)(v18 + 16) = v7;
  uint64_t v120 = *(void *)(v19 + 88);
  *(void *)(v18 + 24) = v120;
  *(void *)(v18 + 32) = v6;
  uint64_t v123 = v6;
  id v20 = v13;
  uint64_t v107 = v2;
  uint64_t v119 = *(void *)(v19 + 104);
  *(void *)(v18 + 40) = v119;
  uint64_t v109 = v17;
  uint64_t v21 = v18 + v17;
  uint64_t v22 = v9;
  uint64_t v23 = v9 + 32;
  uint64_t v24 = *(void ***)(v9 + 32);
  unsigned __int8 v121 = v20;
  uint64_t v126 = AssociatedTypeWitness;
  ((void (*)(uint64_t))v24)(v21);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_100967D8C;
  *(void *)(v25 + 24) = v18;
  uint64_t v127 = v18;
  uint64_t v135 = sub_1001FB2E8;
  uint64_t v136 = v25;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v132 = 1107296256;
  id v133 = sub_10017090C;
  long long v134 = &unk_100AA6F60;
  double v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  id v27 = [v129 fetchSwift:v26 error:&aBlock];
  _Block_release(v26);
  double v28 = aBlock;
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!v27)
  {
    sub_10096ABF0();

    swift_willThrow();
LABEL_29:
    swift_release();
    return v24;
  }
  id v29 = v27;
  [v29 next];
  uint64_t v30 = (uint64_t)[v29 longAtIndex:0];

  uint64_t v103 = (void **)v30;
  if (v30 < 1)
  {
    swift_release();
    uint64_t v24 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    BOOL v53 = 0;
    id v128 = 0;
    goto LABEL_34;
  }
  uint64_t v106 = v24;
  uint64_t v104 = v23;
  id v31 = (id)fpfs_current_or_default_log();
  unint64_t v32 = v113;
  sub_10096B490();
  uint64_t v33 = v112;
  uint64_t v34 = (uint64_t)v124;
  uint64_t v35 = v126;
  uint64_t v36 = v128;
  v128(v112, v124, v126);
  uint64_t v37 = sub_10096B470();
  os_log_type_t v38 = sub_10096C590();
  int v102 = v38;
  BOOL v39 = os_log_type_enabled(v37, v38);
  id v105 = v29;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc();
    unint64_t v101 = (void **)swift_slowAlloc();
    long long aBlock = v101;
    *(_DWORD *)uint64_t v40 = 136446466;
    v100[1] = v40 + 4;
    uint64_t v41 = v121;
    v36(v121, v33, v35);
    Swift::String v42 = v32;
    Swift::String v43 = *(void (**)(char *, uint64_t))(v22 + 8);
    v43(v33, v35);
    swift_getAssociatedConformanceWitness();
    uint64_t v44 = sub_10096D220();
    unint64_t v46 = v45;
    v43(v41, v35);
    uint64_t v130 = sub_100719D44(v44, v46, (uint64_t *)&aBlock);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    unint64_t v47 = (unint64_t)v116;
    unint64_t v48 = sub_100609068((unint64_t)v116);
    uint64_t v130 = sub_100719D44(v48, v49, (uint64_t *)&aBlock);
    uint64_t v34 = (uint64_t)v124;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v102, "⏰  unscheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v114 + 8))(v42, v115);
    id v50 = v129;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v33, v35);

    (*(void (**)(char *, uint64_t))(v114 + 8))(v32, v115);
    id v50 = v129;
    unint64_t v47 = (unint64_t)v116;
  }
  NSString v54 = v106;
  if (v47 != 64)
  {
    uint64_t v115 = 0;
    long long v116 = 0;
    goto LABEL_19;
  }
  uint64_t v55 = v121;
  uint64_t v56 = v126;
  v128(v121, (char *)v34, v126);
  uint64_t v57 = (void *)swift_allocObject();
  uint64_t v58 = v120;
  v57[2] = v122;
  v57[3] = v58;
  uint64_t v59 = v119;
  v57[4] = v123;
  v57[5] = v59;
  ((void (*)(char *, char *, uint64_t))v54)((char *)v57 + v109, v55, v56);
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_100967F54;
  *(void *)(v60 + 24) = v57;
  long long v116 = v57;
  uint64_t v135 = sub_1001FB2E8;
  uint64_t v136 = v60;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v132 = 1107296256;
  id v133 = sub_10017090C;
  long long v134 = &unk_100AA70C8;
  unsigned int v61 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  id v62 = [v50 fetchSwift:v61 error:&aBlock];
  _Block_release(v61);
  uint64_t v24 = aBlock;
  LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v61)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!v62)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();

    return v24;
  }

  id v63 = v62;
  unsigned int v64 = [v63 next];
  id v105 = v63;
  if (!v64 || [v63 longAtIndex:0] != (id)64)
  {

    uint64_t v115 = (uint64_t)sub_100967F54;
    uint64_t v34 = (uint64_t)v124;
    NSString v54 = v106;
    goto LABEL_19;
  }
  unsigned __int8 v65 = [v63 next];

  uint64_t v34 = (uint64_t)v124;
  NSString v54 = v106;
  if ((v65 & 1) != 0 || (uint64_t v66 = v117, sub_10095A714((uint64_t)v124), (v117 = v66) == 0))
  {
    uint64_t v115 = (uint64_t)sub_100967F54;
LABEL_19:
    uint64_t v67 = v110;
    uint64_t v68 = v121;
    uint64_t v69 = v126;
    v128(v121, (char *)v34, v126);
    uint64_t v70 = (void *)swift_allocObject();
    uint64_t v71 = v120;
    v70[2] = v122;
    v70[3] = v71;
    uint64_t v72 = v119;
    v70[4] = v123;
    v70[5] = v72;
    v70[6] = v47;
    ((void (*)(char *, char *, uint64_t))v54)((char *)v70 + ((v67 + 56) & ~v67), v68, v69);
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = sub_100967E78;
    *(void *)(v73 + 24) = v70;
    uint64_t v135 = sub_1001FB2E8;
    uint64_t v136 = v73;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v132 = 1107296256;
    id v133 = sub_10017090C;
    long long v134 = &unk_100AA6FD8;
    uint64_t v74 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    long long aBlock = 0;
    unsigned int v75 = [v50 executeSwift:v74 error:&aBlock];
    _Block_release(v74);
    uint64_t v24 = aBlock;
    unint64_t v76 = aBlock;
    LOBYTE(v74) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v74 & 1) == 0)
    {
      if (!v75)
      {
        sub_10096ABF0();

        swift_willThrow();
        swift_release();

        uint64_t v89 = v115;
        goto LABEL_28;
      }
      uint64_t v77 = (uint64_t)[v50 changes];
      uint64_t v78 = (uint64_t)v124;
      if (v77 >= 1)
      {
        __chkstk_darwin(v77);
        uint64_t v80 = v122;
        uint64_t v79 = v123;
        uint64_t v81 = v119;
        uint64_t v82 = v120;
        v100[-4] = v122;
        v100[-3] = v82;
        v100[-2] = v79;
        v100[-1] = v81;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        v100[-4] = v80;
        v100[-3] = v82;
        v100[-2] = v79;
        v100[-1] = v81;
        swift_getKeyPath();
        uint64_t v84 = (void (*)(void ***, void))sub_10096B5F0();
        if (__OFADD__(*v85, 1)) {
          goto LABEL_43;
        }
        ++*v85;
        v84(&aBlock, 0);
        swift_release();
        swift_release();
        uint64_t v78 = (uint64_t)v124;
      }
      if (v47 == 16)
      {
        uint64_t v86 = v117;
        sub_10096212C(v78);
        uint64_t v87 = (void (*)(char *, uint64_t, uint64_t))v128;
        uint64_t v24 = v106;
        id v88 = &selRef_stringWithFormat_;
        if (v86)
        {
          swift_release();

          uint64_t v89 = v115;
LABEL_28:
          sub_1000705CC(v89);
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v87 = (void (*)(char *, uint64_t, uint64_t))v128;
        uint64_t v24 = v106;
        id v88 = &selRef_stringWithFormat_;
      }
      uint64_t v90 = v121;
      uint64_t v91 = v78;
      uint64_t v92 = v126;
      v87(v121, v91, v126);
      os_log_t v93 = (void (*)(char *, char *, uint64_t))swift_allocObject();
      uint64_t v94 = v120;
      *((void *)v93 + 2) = v122;
      *((void *)v93 + 3) = v94;
      uint64_t v95 = v119;
      *((void *)v93 + 4) = v123;
      *((void *)v93 + 5) = v95;
      ((void (*)(char *, char *, uint64_t))v24)((char *)v93 + v109, v90, v92);
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = sub_100967D8C;
      *(void *)(v96 + 24) = v93;
      id v128 = v93;
      uint64_t v135 = sub_1001FB2E8;
      uint64_t v136 = v96;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v132 = 1107296256;
      id v133 = sub_10017090C;
      long long v134 = &unk_100AA7050;
      uint64_t v97 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      long long aBlock = 0;
      id v98 = objc_msgSend(v129, v88[376], v97, &aBlock);
      _Block_release(v97);
      uint64_t v24 = aBlock;
      LOBYTE(v97) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v97 & 1) == 0)
      {
        if (!v98)
        {
          sub_10096ABF0();

          swift_willThrow();
          swift_release();

          sub_1000705CC(v115);
          swift_release();
          goto LABEL_29;
        }

        id v29 = v98;
        [v29 next];
        [v29 longAtIndex:0];
        swift_release();

        BOOL v53 = sub_100967D8C;
        uint64_t v52 = sub_100967E78;
        uint64_t v24 = v103;
        uint64_t v51 = v115;
LABEL_34:

        sub_1000705CC(v51);
        sub_1000705CC((uint64_t)v52);
        sub_1000705CC((uint64_t)v53);
        return v24;
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
    }
    goto LABEL_40;
  }
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_10095BB18(uint64_t a1, uint64_t a2)
{
  v11[1] = 0xE000000000000000;
  sub_10096CBD0(72);
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000037;
  v14._char object = (void *)0x80000001009A5590;
  sub_10096BDC0(v14);
  v11[3] = &type metadata for Int;
  v11[0] = a2;
  uint64_t v4 = sub_1003AC444((uint64_t)v11);
  uint64_t v6 = v5;
  sub_10002B770((uint64_t)v11, (uint64_t *)&unk_100ACE0F0);
  if (v6)
  {
    v15._uint64_t countAndFlagsBits = v4;
    v15._char object = v6;
    sub_10096BDC0(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 0x204552454857200ALL;
    v16._char object = (void *)0xED0000203D206469;
    sub_10096BDC0(v16);
    swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    uint64_t v9 = swift_checkMetadataState();
    v17._uint64_t countAndFlagsBits = v8(a1, v9, v7);
    sub_10096BDC0(v17);
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10095BD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a1;
  os_log_type_t v38 = (void *)*v4;
  uint64_t v7 = v38[10];
  uint64_t v37 = v38[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t result = __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v13 = (char *)v32 - v12;
  Swift::String v14 = (uint64_t (*)(uint64_t))v4[3];
  if (v14)
  {
    uint64_t v34 = a2;
    uint64_t v35 = a3;
    uint64_t v15 = swift_retain();
    uint64_t v16 = v14(v15);
    uint64_t result = sub_1000705CC((uint64_t)v14);
    if (v16)
    {
      uint64_t v17 = sub_1006F2FD8(8);
      uint64_t v18 = *(void *)(v17 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v17 + 16) = v20;
        uint64_t v21 = (void *)v4[2];
        v32[1] = v16;
        id v33 = v21;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v36, AssociatedTypeWitness);
        unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v23 = (char *)swift_allocObject();
        *((void *)v23 + 2) = v7;
        uint64_t v24 = v38;
        uint64_t v25 = v37;
        *((void *)v23 + 3) = v38[11];
        *((void *)v23 + 4) = v25;
        *((void *)v23 + 5) = v24[13];
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v22], v13, AssociatedTypeWitness);
        double v26 = &v23[(v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8];
        uint64_t v27 = v35;
        *(void *)double v26 = v34;
        *((void *)v26 + 1) = v27;
        double v28 = (void *)swift_allocObject();
        void v28[2] = sub_100967C98;
        v28[3] = v23;
        aBlock[4] = sub_1001FB2E8;
        aBlock[5] = v28;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_10017090C;
        aBlock[3] = &unk_100AA6EE8;
        id v29 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock[0] = 0;
        unsigned int v30 = [v33 executeSwift:v29 error:aBlock];
        _Block_release(v29);
        id v31 = aBlock[0];
        LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v29 & 1) == 0)
        {
          if (v30)
          {
            swift_release();
            swift_release();
            return swift_release();
          }
          else
          {
            sub_10096ABF0();

            swift_willThrow();
            swift_release();
            swift_release();
            return swift_release();
          }
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10095C0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_10096CBD0(68);
  v9._char object = (void *)0x80000001009A5300;
  v9._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x204552454857200ALL;
  v11._char object = (void *)0xED0000203D206469;
  sub_10096BDC0(v11);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = swift_checkMetadataState();
  v12._uint64_t countAndFlagsBits = v6(a1, v7, v5);
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x20444E4120;
  v13._char object = (void *)0xE500000000000000;
  sub_10096BDC0(v13);
  v14._uint64_t countAndFlagsBits = a3(a1);
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10095C28C()
{
  if (qword_100ACC1E0 != -1) {
    swift_once();
  }
  uint64_t result = sub_100954C38((uint64_t)sub_100967A48, v0);
  if (v2) {
    return 0;
  }
  return result;
}

void sub_10095C318(uint64_t a1@<X0>, void (***a2)(char *, uint64_t *, uint64_t)@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(a1 + 24);
  if (!v4) {
    goto LABEL_17;
  }
  uint64_t v6 = swift_retain();
  uint64_t v7 = (void **)v4(v6);
  sub_1000705CC((uint64_t)v4);
  if (!v7) {
    goto LABEL_17;
  }
  swift_retain();
  char v8 = sub_1006C816C();
  swift_release();
  if (v8 & 1) != 0 || *(unsigned char *)(a1 + qword_100B0B6E8) != 1 || (sub_1006C7F68()) {
    goto LABEL_16;
  }
  uint64_t v9 = sub_1006F2FD8(8);
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v10 = *(void *)(v9 + 24);
  BOOL v12 = __OFSUB__(v10, v11);
  uint64_t v13 = v10 - v11;
  if (v12)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  if (v13 < 1)
  {
LABEL_16:
    swift_release();
LABEL_17:
    *a2 = 0;
    return;
  }
  uint64_t v14 = v9;
  uint64_t v15 = *(void **)(a1 + 16);
  aBlock[4] = sub_100954BE0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA6DF8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v17 = [v15 fetchSwift:v16 error:aBlock];
  _Block_release(v16);
  id v18 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    goto LABEL_27;
  }
  if (!v17)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    goto LABEL_24;
  }
  aBlock[0] = 0;
  if (![v17 next])
  {
    uint64_t v23 = 0;
LABEL_20:
    uint64_t v24 = sub_100963DC4(v23);
    swift_release();
    if (v2)
    {
      swift_release();
    }
    else
    {

      swift_release();
      *a2 = v24;
    }
    return;
  }
  while (1)
  {
    uint64_t v20 = *(void *)(v14 + 16);
    uint64_t v19 = *(void *)(v14 + 24);
    BOOL v12 = __OFSUB__(v19, v20);
    uint64_t v21 = v19 - v20;
    if (v12)
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 < 1) {
      goto LABEL_15;
    }
    sub_10095C614(v17, v7, a1, aBlock);
    if (v2) {
      break;
    }
    if (([v17 next] & 1) == 0)
    {
LABEL_15:
      uint64_t v23 = (void (**)(char *, uint64_t *, uint64_t))aBlock[0];
      goto LABEL_20;
    }
  }
  swift_release();

LABEL_24:
  swift_release();
}

uint64_t sub_10095C614(void *a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v143 = a4;
  uint64_t v161 = a3;
  id v166 = a1;
  uint64_t v5 = *a2;
  uint64_t v147 = sub_10096B480();
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v149 = &v132[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = sub_10096B0E0();
  uint64_t v150 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v151 = &v132[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v141 = sub_10096B7D0();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  int v139 = &v132[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v5[309];
  uint64_t v159 = v5[311];
  uint64_t v158 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v138 = sub_10096C890();
  uint64_t v137 = *(void *)(v138 - 8);
  uint64_t v11 = __chkstk_darwin(v138);
  unint64_t v148 = &v132[-v12];
  uint64_t v145 = AssociatedTypeWitness;
  uint64_t v144 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v142 = &v132[-v13];
  uint64_t v14 = (void **)v5[308];
  uint64_t v165 = a2;
  uint64_t v15 = (void *)v5[310];
  uint64_t v16 = type metadata accessor for SnapshotItem();
  os_log_type_t v162 = (void *)sub_10096C890();
  uint64_t v154 = (void (**)(void, void))*(v162 - 1);
  uint64_t v17 = __chkstk_darwin(v162);
  unint64_t v163 = (unint64_t)&v132[-v18];
  uint64_t v160 = v16;
  uint64_t v157 = *(void *)(v16 - 8);
  __chkstk_darwin(v17);
  int v155 = &v132[-v19];
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v164 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v164 + 64);
  uint64_t v22 = __chkstk_darwin(v20);
  __chkstk_darwin(v22);
  uint64_t v24 = &v132[-v23];
  os_log_type_t v156 = v14;
  uint64_t v25 = *(uint64_t (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  id v26 = v166;
  uint64_t v27 = (uint64_t)v167;
  uint64_t result = v25();
  if (v27) {
    return result;
  }
  id v29 = v162;
  id v166 = v15;
  uint64_t v153 = v24;
  uint64_t v136 = v20;
  unsigned int v30 = [v26 intAtIndex:3];
  unsigned __int8 v31 = [v26 isNullAtIndex:1];
  uint64_t v135 = &v132[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v31) {
    uint64_t v134 = -1;
  }
  else {
    uint64_t v134 = (uint64_t)[v26 longAtIndex:1];
  }
  uint64_t v32 = (uint64_t)v153;
  id v33 = v29;
  unsigned __int8 v34 = [v26 isNullAtIndex:2];
  unsigned int v133 = v30;
  if (v34) {
    uint64_t v35 = -1;
  }
  else {
    uint64_t v35 = (uint64_t)[v26 longAtIndex:2];
  }
  unint64_t v36 = v163;
  (*(void (**)(uint64_t, uint64_t))(*v165[4] + 240))(v32, 1);
  uint64_t v167 = 0;
  uint64_t v37 = v157;
  uint64_t v38 = v160;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v157 + 48))(v36, 1, v160) == 1)
  {
    ((void (**)(unint64_t, void *))v154)[1](v36, v33);
    uint64_t v39 = v164;
    uint64_t v40 = v161;
    goto LABEL_16;
  }
  uint64_t v41 = v155;
  (*(void (**)(unsigned char *, unint64_t, uint64_t))(v37 + 32))(v155, v36, v38);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = FileItem.isDataless.getter(v38, WitnessTable);
  if (v43)
  {
    __chkstk_darwin(v43);
    uint64_t v44 = v134;
    *(void *)&v132[-32] = v134;
    *(void *)&v132[-24] = v35;
    *(void *)&v132[-16] = v161;
    uint64_t v45 = (uint64_t)v153;
    uint64_t v46 = (uint64_t)v167;
    sub_10095BD00((uint64_t)v153, (uint64_t)sub_100967BCC, (uint64_t)&v132[-48]);
    uint64_t v47 = v164;
    if (v46)
    {
      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v155, v160);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v45, v136);
    }
    unint64_t v163 = v133;
    if (v44 < 0)
    {
      uint64_t v72 = v159;
      uint64_t v73 = v152;
      uint64_t v74 = v158;
      uint64_t v75 = v150;
      unint64_t v76 = v151;
      uint64_t v70 = v165;
      uint64_t v77 = (id (*)(uint64_t, void *))v166;
      goto LABEL_49;
    }
    uint64_t v68 = [self discreteProgressWithTotalUnitCount:1];
    id v69 = [self requestForSelf];
    objc_msgSend(v69, "setRequestedExtent:", v44, v35);
    uint64_t v70 = v165;
    uint64_t v71 = v148;
    (*(void (**)(unsigned char *))(*v165[2] + 160))(v153);
    os_log_type_t v162 = v68;
    uint64_t v167 = 0;
    uint64_t v78 = v144;
    uint64_t v79 = v145;
    int v80 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v144 + 48))(v71, 1, v145);
    uint64_t v81 = v149;
    if (v80 == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v137 + 8))(v71, v138);
      type metadata accessor for NSFileProviderError(0);
      uint64_t v168 = -1005;
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_100025894((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
      sub_10096ABD0();
      swift_willThrow();

LABEL_45:
      id v107 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_errorRetain();
      uint64_t v108 = sub_10096B470();
      os_log_type_t v109 = sub_10096C5B0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        uint64_t v111 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v110 = 138412290;
        uint64_t v167 = v110 + 4;
        swift_getErrorValue();
        long long v112 = (void **)Error.prettyDescription.getter(v169);
        long long aBlock = v112;
        sub_10096C8C0();
        *uint64_t v111 = v112;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "⏰ BRM Materialization failed with %@, falling back to full materialization", v110, 0xCu);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        uint64_t v70 = v165;
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v75 = v150;
      (*(void (**)(unsigned char *, uint64_t))(v146 + 8))(v81, v147);
      uint64_t v72 = v159;
      uint64_t v73 = v152;
      uint64_t v74 = v158;
      unint64_t v76 = v151;
      uint64_t v77 = (id (*)(uint64_t, void *))v166;
LABEL_49:
      long long aBlock = v156;
      uint64_t v171 = v74;
      uint64_t v172 = v77;
      v173[0] = v72;
      type metadata accessor for ConcreteJobResult();
      uint64_t v113 = sub_100591720();
      sub_10096B0D0();
      sub_10096B080();
      double v115 = v114;
      long long v116 = *(void (**)(unsigned char *, uint64_t))(v75 + 8);
      v116(v76, v73);
      double v117 = v115 * 1000000000.0;
      if ((~COERCE__INT64(v115 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      if (v117 <= -9.22337204e18)
      {
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      if (v117 >= 9.22337204e18)
      {
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      if ((v163 & 0x2C) != 0)
      {
        uint64_t v118 = 0x1000000;
LABEL_64:
        sub_1008B08F0((uint64_t)v153, 0, (uint64_t)v117, v118, v70, 0, v113);
        sub_10096B0D0();
        sub_10096B080();
        double v120 = v119;
        v116(v76, v73);
        double v121 = v120 * 1000000000.0;
        if ((~COERCE__INT64(v120 * 1000000000.0) & 0x7FF0000000000000) == 0)
        {
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        if (v121 <= -9.22337204e18)
        {
LABEL_85:
          __break(1u);
          goto LABEL_86;
        }
        if (v121 >= 9.22337204e18)
        {
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
        }
        sub_10059C6F4(v113, (uint64_t)v121);
        swift_release();
        uint64_t v103 = v143;
        uint64_t v104 = v160;
        goto LABEL_68;
      }
      if ((v163 & 0x10) != 0)
      {
        if ((v163 & 0x40) != 0) {
          uint64_t v118 = 0x4401000000;
        }
        else {
          uint64_t v118 = 0x401000000;
        }
      }
      else
      {
        if ((v163 & 0x40) == 0)
        {
          uint64_t v118 = 0x1000000;
          if ((v163 & 1) == 0) {
            goto LABEL_64;
          }
          goto LABEL_63;
        }
        uint64_t v118 = 0x4001000000;
      }
      if ((v163 & 1) == 0) {
        goto LABEL_64;
      }
LABEL_63:
      v118 |= 0x10000000000uLL;
      goto LABEL_64;
    }
    uint64_t v82 = v142;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v78 + 32))(v142, v71, v79);
    sub_100011348(255, (unint64_t *)&qword_100ADA390);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v84 = swift_allocBox();
    uint64_t v86 = v85;
    uint64_t v87 = *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v78 + 16))(v85, v82, v79);
    *(void *)(v86 + v87) = v69;
    uint64_t v161 = v84;
    unint64_t v88 = v84 | 0x2000000000000004;
    id v89 = v69;
    uint64_t v90 = (uint64_t)v139;
    sub_10096B770();
    uint64_t v91 = v162;
    LOBYTE(v88) = sub_1006BDE9C((uint64_t)v153, v88, v162, v90, (void (*)(void))Filename.init(rawValue:), 0);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v90, v141);
    if ((v88 - 1) > 1u)
    {
      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v82, v79);
      swift_release();

      uint64_t v103 = v143;
      uint64_t v104 = v160;
LABEL_68:
      uint64_t v122 = v155;
      uint64_t v123 = v164;
LABEL_69:
      (*(void (**)(unsigned char *, uint64_t))(v157 + 8))(v122, v104);
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v123 + 8))(v153, v136);
      if (__OFADD__(*v103, 1)) {
        goto LABEL_87;
      }
      ++*v103;
      return result;
    }
    uint64_t v154 = (void (**)(void, void))v89;
    long long aBlock = v156;
    uint64_t v171 = v158;
    uint64_t v172 = (id (*)(uint64_t, void *))v166;
    v173[0] = v159;
    type metadata accessor for ConcreteJobResult();
    uint64_t v92 = sub_100591720();
    uint64_t v93 = sub_100591720();
    uint64_t v94 = v151;
    sub_10096B0D0();
    sub_10096B080();
    double v96 = v95;
    uint64_t v97 = *(uint64_t (**)(unsigned char *, uint64_t))(v150 + 8);
    uint64_t result = v97(v94, v152);
    double v98 = v96 * 1000000000.0;
    if ((~COERCE__INT64(v96 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      uint64_t v99 = v142;
      id v100 = v154;
      if (v98 > -9.22337204e18)
      {
        if (v98 < 9.22337204e18)
        {
          uint64_t v101 = (uint64_t)v98;
          if ((v163 & 0x2C) != 0)
          {
            uint64_t v102 = 0x1000000;
            goto LABEL_43;
          }
          if ((v163 & 0x10) != 0)
          {
            if ((v163 & 0x40) != 0) {
              uint64_t v102 = 0x4401000000;
            }
            else {
              uint64_t v102 = 0x401000000;
            }
          }
          else
          {
            if ((v163 & 0x40) == 0)
            {
              uint64_t v102 = 0x1000000;
              if ((v163 & 1) == 0)
              {
LABEL_43:
                swift_retain();
                uint64_t v105 = v101;
                uint64_t v106 = (uint64_t)v167;
                sub_1008B08F0((uint64_t)v153, 0, v105, v102, v165, v92, v93);
                if (v106)
                {
                  swift_release();
                  swift_release();
                  swift_release_n();

                  (*(void (**)(unsigned char *, uint64_t))(v144 + 8))(v99, v145);
                  uint64_t v70 = v165;
                  goto LABEL_45;
                }
                uint64_t v167 = (uint8_t *)v93;
                swift_release();
                long long v124 = v151;
                sub_10096B0D0();
                sub_10096B080();
                double v126 = v125;
                uint64_t v127 = v152;
                uint64_t result = v97(v124, v152);
                double v128 = v126 * 1000000000.0;
                if ((~COERCE__INT64(v126 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v128 > -9.22337204e18)
                  {
                    if (v128 < 9.22337204e18)
                    {
                      sub_10059C6F4(v92, (uint64_t)v128);
                      sub_10096B0D0();
                      sub_10096B080();
                      double v130 = v129;
                      uint64_t result = v97(v124, v127);
                      double v131 = v130 * 1000000000.0;
                      if ((~COERCE__INT64(v130 * 1000000000.0) & 0x7FF0000000000000) != 0)
                      {
                        if (v131 > -9.22337204e18)
                        {
                          if (v131 < 9.22337204e18)
                          {
                            sub_10059C6F4((uint64_t)v167, (uint64_t)v131);
                            unsigned int v61 = v173;
LABEL_79:
                            (*(void (**)(unsigned char *, uint64_t))(*(v61 - 32) + 8))(v142, v145);
                            swift_release();
                            swift_release();
                            swift_release();

                            uint64_t v123 = v164;
                            uint64_t v103 = v143;
                            uint64_t v104 = v160;
                            uint64_t v122 = v155;
                            goto LABEL_69;
                          }
LABEL_96:
                          __break(1u);
                          return result;
                        }
LABEL_95:
                        __break(1u);
                        goto LABEL_96;
                      }
LABEL_94:
                      __break(1u);
                      goto LABEL_95;
                    }
LABEL_93:
                    __break(1u);
                    goto LABEL_94;
                  }
LABEL_92:
                  __break(1u);
                  goto LABEL_93;
                }
LABEL_91:
                __break(1u);
                goto LABEL_92;
              }
LABEL_42:
              v102 |= 0x10000000000uLL;
              goto LABEL_43;
            }
            uint64_t v102 = 0x4001000000;
          }
          if ((v163 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_42;
        }
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_90;
  }
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v41, v38);
  uint64_t v39 = v164;
  uint64_t v40 = v161;
LABEL_16:
  unint64_t v48 = *(void **)(v40 + 16);
  unint64_t v49 = v135;
  uint64_t v50 = v136;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 16))(v135, v153, v136);
  unint64_t v51 = (*(unsigned __int8 *)(v39 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v52 = (char *)swift_allocObject();
  BOOL v53 = v156;
  uint64_t v54 = v158;
  *((void *)v52 + 2) = v156;
  *((void *)v52 + 3) = v54;
  uint64_t v55 = v159;
  *((void *)v52 + 4) = v166;
  *((void *)v52 + 5) = v55;
  (*(void (**)(char *, unsigned char *, uint64_t))(v39 + 32))(&v52[v51], v49, v50);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_100967AAC;
  *(void *)(v56 + 24) = v52;
  v173[1] = sub_1001FB2E8;
  v173[2] = v56;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v171 = 1107296256;
  uint64_t v172 = sub_10017090C;
  v173[0] = &unk_100AA6E70;
  uint64_t v57 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v58 = [v48 executeSwift:v57 error:&aBlock];
  _Block_release(v57);
  uint64_t v59 = aBlock;
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  uint64_t v60 = swift_release();
  if (v49)
  {
    __break(1u);
    goto LABEL_79;
  }
  if (v58)
  {
    __chkstk_darwin(v60);
    uint64_t v62 = v158;
    *(void *)&v132[-32] = v53;
    *(void *)&v132[-24] = v62;
    id v63 = v166;
    uint64_t v64 = v159;
    *(void *)&v132[-16] = v166;
    *(void *)&v132[-8] = v64;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v132[-32] = v53;
    *(void *)&v132[-24] = v62;
    *(void *)&v132[-16] = v63;
    *(void *)&v132[-8] = v64;
    swift_getKeyPath();
    uint64_t v66 = (void (*)(void ***, void))sub_10096B5F0();
    if (!__OFADD__(*v67, 1))
    {
      ++*v67;
      v66(&aBlock, 0);
      swift_release();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v153, v136);
      return swift_release();
    }
    __break(1u);
    goto LABEL_81;
  }
  sub_10096ABF0();

  swift_willThrow();
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v153, v136);
  return swift_release();
}

uint64_t sub_10095DDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::Int a7, uint64_t a8, void *a9)
{
  sub_10096CBD0(a7);
  v15._uint64_t countAndFlagsBits = a8;
  v15._char object = a9;
  sub_10096BDC0(v15);
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  v16._uint64_t countAndFlagsBits = v12(a1, v13, v11);
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10095DEBC(uint64_t a1, void **a2)
{
  uint64_t v113 = a2;
  uint64_t v122 = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = sub_10096B480();
  uint64_t v115 = *(void *)(v5 - 8);
  uint64_t v116 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  double v117 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v109 = (char *)&v104 - v8;
  uint64_t v9 = (void **)v4[10];
  uint64_t v10 = v4[11];
  uint64_t v11 = (id (*)(uint64_t, void *))v4[12];
  uint64_t v12 = (void *)v4[13];
  long long aBlock = v9;
  uint64_t v125 = v10;
  uint64_t v118 = (uint64_t)v12;
  uint64_t v119 = v10;
  double v121 = v11;
  double v126 = v11;
  uint64_t v127 = v12;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = sub_10096C890();
  uint64_t v110 = *(void *)(v14 - 8);
  uint64_t v111 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v104 - v16;
  uint64_t v114 = *(void *)(v13 - 8);
  __chkstk_darwin(v15);
  long long v112 = (char *)&v104 - v18;
  uint64_t v19 = sub_10096B830();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (uint64_t (*)(uint64_t))v2[3];
  if (!v24) {
    return result;
  }
  uint64_t v108 = v9;
  double v120 = v2;
  uint64_t v25 = swift_retain();
  id v26 = (uint64_t *)v24(v25);
  uint64_t result = sub_1000705CC((uint64_t)v24);
  if (!v26) {
    return result;
  }
  uint64_t v27 = sub_1006F2F2C();
  *uint64_t v23 = v27;
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v19);
  id v28 = (id)v27;
  LOBYTE(v27) = sub_10096B860();
  (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v23, v19);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  id v29 = (void *)sub_1006F2FD8(8);
  unsigned int v30 = v29;
  uint64_t v31 = v122;
  uint64_t v32 = v120;
  if (*(unsigned char *)(v122 + 139))
  {
    uint64_t v33 = v29[2];
    BOOL v34 = __OFSUB__(v33, 1);
    uint64_t v35 = v33 - 1;
    if (v34)
    {
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v29[2] = v35;
    uint64_t v36 = v29[3];
    if (v36 != v29[4])
    {
      BOOL v34 = __OFSUB__(v36, 1);
      uint64_t v37 = v36 - 1;
      if (v34)
      {
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      v29[3] = v37;
    }
  }
  int v38 = *(unsigned __int8 *)(v31 + 112);
  if (v38 != 3)
  {
    if (v38 == 4)
    {
      uint64_t v39 = *(void *)(v31 + 96);
      uint64_t v40 = *(void *)(v31 + 104);
      if (v39 ^ 1 | v40)
      {
        if (!(v39 | v40)) {
          goto LABEL_13;
        }
      }
      else if ((*(unsigned char *)(v31 + 140) & 0x40) != 0)
      {
        uint64_t v59 = v29;
        if (*(void *)((char *)v32 + qword_100B0B6F8))
        {
          swift_retain();
          swift_retain();
          sub_10071AD80();
          swift_release();
        }
        else
        {
          swift_retain();
        }
        uint64_t v32 = v120;
        goto LABEL_25;
      }
    }
    uint64_t v59 = v29;
    swift_retain();
    goto LABEL_25;
  }
LABEL_13:
  uint64_t v41 = v31 + *(void *)(*(void *)v31 + 576);
  swift_retain();
  swift_retain();
  sub_1000DEDD8(v41, (uint64_t)v17);
  if (v3)
  {
    swift_release();
LABEL_38:
    swift_release();
    return swift_release();
  }
  swift_release();
  uint64_t v42 = v114;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v17, 1, v13) == 1)
  {
    uint64_t v105 = v41;
    uint64_t v106 = v30;
    id v107 = v26;
    double v117 = 0;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v17, v111);
    char v43 = 0;
    LODWORD(v114) = 1;
    uint64_t v32 = v120;
    goto LABEL_18;
  }
  uint64_t v93 = (uint64_t)v112;
  (*(void (**)(void))(v42 + 32))();
  char v94 = sub_1009653B8(v93, v26);
  uint64_t v32 = v120;
  if (v94)
  {
    uint64_t v105 = v41;
    uint64_t v106 = v30;
    id v107 = v26;
    double v117 = 0;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v93, v13);
    LODWORD(v114) = 0;
    char v43 = 2;
    goto LABEL_18;
  }
  uint64_t v102 = *(void *)(v31 + 136);
  if ((v102 & 0x10000000000) == 0 && (v112[*(int *)(v13 + 76)] & 2) != 0)
  {
    uint64_t v59 = v30;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v13);
    goto LABEL_25;
  }
  if ((v102 & 0x400000000) != 0)
  {
    uint64_t v103 = *(void *)&v112[*(int *)(v13 + 76)];
    (*(void (**)(void))(v114 + 8))();
    if ((v103 & 1) == 0)
    {
      uint64_t v105 = v41;
      uint64_t v106 = v30;
      id v107 = v26;
      double v117 = 0;
      goto LABEL_61;
    }
    uint64_t v59 = v30;
LABEL_25:
    uint64_t v60 = (void *)v32[2];
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_100967970;
    *(void *)(v61 + 24) = v31;
    double v128 = sub_1001FB2E8;
    uint64_t v129 = v61;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v125 = 1107296256;
    double v126 = sub_10017090C;
    uint64_t v127 = &unk_100AA6CE0;
    uint64_t v62 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    long long aBlock = 0;
    unsigned int v63 = [v60 executeSwift:v62 error:&aBlock];
    _Block_release(v62);
    unint64_t v49 = aBlock;
    LOBYTE(v62) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v62 & 1) == 0)
    {
      if (!v63)
      {
LABEL_30:
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
        swift_release();
        return swift_release();
      }
      uint64_t v64 = (uint64_t)[v60 changes];
      unsigned __int8 v65 = v59;
      uint64_t v66 = v121;
      id v107 = v26;
      if (v64 >= 1)
      {
        id v67 = (id)fpfs_current_or_default_log();
        uint64_t v68 = v117;
        sub_10096B490();
        swift_retain_n();
        id v69 = sub_10096B470();
        os_log_type_t v70 = sub_10096C590();
        int v71 = v70;
        if (os_log_type_enabled(v69, v70))
        {
          LODWORD(v114) = v71;
          uint64_t v72 = swift_slowAlloc();
          uint64_t v106 = v65;
          uint64_t v73 = (uint8_t *)v72;
          uint64_t v74 = (void **)swift_slowAlloc();
          uint64_t v113 = v74;
          *(_DWORD *)uint64_t v73 = 136315138;
          long long aBlock = v74;
          long long v112 = (char *)(v73 + 4);
          uint64_t v75 = v108;
          swift_getAssociatedTypeWitness();
          uint64_t v66 = v121;
          swift_getAssociatedConformanceWitness();
          uint64_t v76 = sub_10096D220();
          uint64_t v123 = sub_100719D44(v76, v77, (uint64_t *)&aBlock);
          sub_10096C8C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v114, "⏰  finished background download <i:%s>", v73, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unsigned __int8 v65 = v106;
          swift_slowDealloc();

          uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v117, v116);
        }
        else
        {

          swift_release_n();
          uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v68, v116);
          uint64_t v75 = v108;
        }
        __chkstk_darwin(v78);
        uint64_t v80 = v118;
        uint64_t v79 = v119;
        *(&v104 - 4) = (uint64_t)v75;
        *(&v104 - 3) = v79;
        *(&v104 - 2) = (uint64_t)v66;
        *(&v104 - 1) = v80;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(&v104 - 4) = (uint64_t)v75;
        *(&v104 - 3) = v79;
        *(&v104 - 2) = (uint64_t)v66;
        *(&v104 - 1) = v80;
        swift_getKeyPath();
        uint64_t v82 = (void (*)(void ***, void))sub_10096B5F0();
        if (__OFADD__(*v83, 1)) {
          goto LABEL_69;
        }
        ++*v83;
        v82(&aBlock, 0);
        swift_release();
        uint64_t v64 = swift_release();
      }
      uint64_t v85 = v65[2];
      uint64_t v84 = v65[3];
      BOOL v34 = __OFSUB__(v84, v85);
      uint64_t v86 = v84 - v85;
      if (!v34)
      {
        if (v86 < 1)
        {
          swift_release();
          swift_release();
          return swift_release();
        }
        __chkstk_darwin(v64);
        uint64_t v87 = v108;
        uint64_t v88 = v118;
        uint64_t v89 = v119;
        *(&v104 - 4) = (uint64_t)v108;
        *(&v104 - 3) = v89;
        *(&v104 - 2) = (uint64_t)v66;
        *(&v104 - 1) = v88;
        uint64_t v90 = swift_getKeyPath();
        __chkstk_darwin(v90);
        *(&v104 - 4) = (uint64_t)v87;
        *(&v104 - 3) = v89;
        *(&v104 - 2) = (uint64_t)v66;
        *(&v104 - 1) = v88;
        swift_getKeyPath();
        uint64_t v91 = (void (*)(void ***, void))sub_10096B5F0();
        if (!__OFADD__(*v92, 1))
        {
          ++*v92;
          v91(&aBlock, 0);
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_38;
        }
        goto LABEL_70;
      }
      goto LABEL_67;
    }
    goto LABEL_65;
  }
  uint64_t v105 = v41;
  uint64_t v106 = v30;
  id v107 = v26;
  double v117 = 0;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v13);
LABEL_61:
  char v43 = 0;
  LODWORD(v114) = 1;
LABEL_18:
  uint64_t v44 = (void *)v32[2];
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = v43;
  *(void *)(v45 + 24) = v113;
  *(void *)(v45 + 32) = v31;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_100967A2C;
  *(void *)(v46 + 24) = v45;
  double v128 = sub_1001FB2E8;
  uint64_t v129 = v46;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v125 = 1107296256;
  double v126 = sub_10017090C;
  uint64_t v127 = &unk_100AA6D58;
  uint64_t v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  long long aBlock = 0;
  unsigned int v48 = [v44 executeSwift:v47 error:&aBlock];
  _Block_release(v47);
  unint64_t v49 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (!v48) {
    goto LABEL_30;
  }
  if ((uint64_t)[v44 changes] >= 1)
  {
    id v51 = (id)fpfs_current_or_default_log();
    uint64_t v52 = v109;
    sub_10096B490();
    swift_retain_n();
    BOOL v53 = sub_10096B470();
    os_log_type_t v54 = sub_10096C590();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v113 = (void **)swift_slowAlloc();
      long long aBlock = v113;
      *(_DWORD *)uint64_t v55 = 136315138;
      long long v112 = (char *)(v55 + 4);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v56 = sub_10096D220();
      uint64_t v123 = sub_100719D44(v56, v57, (uint64_t *)&aBlock);
      sub_10096C8C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "⏰  throttling background download <i:%s>", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v109, v116);
    }
    else
    {

      swift_release_n();
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v52, v116);
    }
    if (v114)
    {
      sub_1009567B0();
      swift_release();
      swift_release();
      return swift_release();
    }
    __chkstk_darwin(v58);
    double v95 = v108;
    uint64_t v96 = v118;
    uint64_t v97 = v119;
    *(&v104 - 4) = (uint64_t)v108;
    *(&v104 - 3) = v97;
    double v98 = v121;
    *(&v104 - 2) = (uint64_t)v121;
    *(&v104 - 1) = v96;
    uint64_t v99 = swift_getKeyPath();
    __chkstk_darwin(v99);
    *(&v104 - 4) = (uint64_t)v95;
    *(&v104 - 3) = v97;
    *(&v104 - 2) = (uint64_t)v98;
    *(&v104 - 1) = v96;
    swift_getKeyPath();
    id v100 = (void (*)(void ***, void))sub_10096B5F0();
    if (!__OFADD__(*v101, 1))
    {
      ++*v101;
      v100(&aBlock, 0);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
LABEL_72:
    __break(1u);
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10095EFEC(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  v16[1] = 0xE000000000000000;
  sub_10096CBD0(95);
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v20._char object = (void *)0x80000001009A5300;
  sub_10096BDC0(v20);
  uint64_t v17 = &type metadata for Int;
  v16[0] = a2;
  uint64_t v6 = sub_1003AC444((uint64_t)v16);
  uint64_t v8 = v7;
  sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACE0F0);
  if (!v8) {
    goto LABEL_4;
  }
  v21._uint64_t countAndFlagsBits = v6;
  v21._char object = v8;
  sub_10096BDC0(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0xD000000000000020;
  v22._char object = (void *)0x8000000100999800;
  sub_10096BDC0(v22);
  uint64_t v17 = &type metadata for Int;
  v16[0] = a3;
  uint64_t v9 = sub_1003AC444((uint64_t)v16);
  uint64_t v11 = v10;
  sub_10002B770((uint64_t)v16, (uint64_t *)&unk_100ACE0F0);
  if (v11)
  {
    v23._uint64_t countAndFlagsBits = v9;
    v23._char object = v11;
    sub_10096BDC0(v23);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = 0x204552454857200ALL;
    v24._char object = (void *)0xED0000203D206469;
    sub_10096BDC0(v24);
    swift_getAssociatedTypeWitness();
    uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    uint64_t v14 = swift_checkMetadataState();
    v25._uint64_t countAndFlagsBits = v13(a1, v14, v12);
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10095F280(uint64_t a1)
{
  sub_10096CBD0(53);
  v6._char object = (void *)0x80000001009BFB30;
  v6._uint64_t countAndFlagsBits = 0xD000000000000033;
  sub_10096BDC0(v6);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v7._uint64_t countAndFlagsBits = v3(a1, v4, v2);
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10095F3C8(uint64_t *a1)
{
  uint64_t v3 = v1;
  unint64_t v49 = a1;
  uint64_t v4 = *(void ***)(*(void *)v1 + 80);
  uint64_t v5 = *(id (**)(uint64_t, void *))(*(void *)v1 + 96);
  Swift::String v6 = *(void **)(*(void *)v1 + 104);
  uint64_t v47 = *(void *)(*(void *)v1 + 88);
  unsigned int v48 = v4;
  long long aBlock = v4;
  uint64_t v51 = v47;
  uint64_t v45 = v6;
  uint64_t v46 = v5;
  uint64_t v52 = v5;
  BOOL v53 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_10096C890();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v40 - v10;
  uint64_t v12 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v13 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  unint64_t v19 = *(uint64_t (**)(uint64_t))(v3 + 24);
  if (v19)
  {
    uint64_t v41 = v18;
    uint64_t v42 = (char *)v40 - v16;
    uint64_t v43 = v17;
    uint64_t v44 = v7;
    uint64_t v20 = swift_retain();
    uint64_t v21 = v19(v20);
    uint64_t v22 = (uint64_t)v19;
    Swift::String v23 = (uint64_t *)v21;
    uint64_t result = sub_1000705CC(v22);
    if (v23)
    {
      ((void (*)(uint64_t *))v49)(v23);
      if (v2) {
        return swift_release();
      }
      unint64_t v49 = v23;
      uint64_t v24 = v43;
      uint64_t v25 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v44) == 1)
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v11, v8);
      }
      else
      {
        uint64_t v26 = (uint64_t)v42;
        uint64_t v41 = *(void *)(v24 + 32);
        ((void (*)(char *, char *, uint64_t))v41)(v42, v11, v25);
        char v27 = sub_1009653B8(v26, v49);
        id v28 = (void (*)(char *, char *, uint64_t))v41;
        if (v27)
        {
          (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
          return swift_release();
        }
        else
        {
          v40[1] = 0;
          id v29 = *(void **)(v3 + 16);
          uint64_t v30 = v43 + 16;
          uint64_t v31 = v44;
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v14, v42, v44);
          unint64_t v32 = (*(unsigned __int8 *)(v30 + 64) + 48) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64);
          uint64_t v33 = (char *)swift_allocObject();
          uint64_t v34 = v47;
          *((void *)v33 + 2) = v48;
          *((void *)v33 + 3) = v34;
          uint64_t v35 = v45;
          *((void *)v33 + 4) = v46;
          *((void *)v33 + 5) = v35;
          v28(&v33[v32], v14, v31);
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = sub_1009678B4;
          *(void *)(v36 + 24) = v33;
          os_log_type_t v54 = sub_1001FB2E8;
          uint64_t v55 = v36;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v51 = 1107296256;
          uint64_t v52 = sub_10017090C;
          BOOL v53 = &unk_100AA6C90;
          uint64_t v37 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          long long aBlock = 0;
          unsigned int v38 = [v29 executeSwift:v37 error:&aBlock];
          _Block_release(v37);
          uint64_t v39 = aBlock;
          LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v37) {
            __break(1u);
          }
          if (v38)
          {
            if ([v29 changes])
            {
              sub_1009567B0();
              swift_release();
              (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
              swift_release();
            }
            return swift_release();
          }
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10095F96C(void *a1)
{
  sub_10096CBD0(76);
  v5._char object = (void *)0x80000001009A5300;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x204552454857200ALL;
  v7._char object = (void *)0xED0000203D206469;
  sub_10096BDC0(v7);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8._uint64_t countAndFlagsBits = Optional<A>.encode(_:)(a1, v2, *(void *)(AssociatedConformanceWitness + 40));
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._char object = (void *)0xED0000203D206574;
  v9._uint64_t countAndFlagsBits = 0x61747320444E4120;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10095FB34(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v18 = *(void *)(*v1 + 96);
  uint64_t v4 = v3[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  Swift::String v8 = (char *)&v17 - v7;
  id v19 = (id)v1[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - v7, a1, AssociatedTypeWitness);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  Swift::String v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v4;
  *((void *)v10 + 3) = v3[11];
  *((void *)v10 + 4) = v18;
  *((void *)v10 + 5) = v3[13];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v10[v9], v8, AssociatedTypeWitness);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = sub_1009672C0;
  v11[3] = v10;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA6C18;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v13 = [v19 fetchSwift:v12 error:aBlock];
  _Block_release(v12);
  id v14 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12) {
    __break(1u);
  }
  if (!v13)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  if (![v13 next])
  {
    swift_release();

    return 0;
  }
  unsigned __int8 v15 = [v13 longAtIndex:0];
  swift_release();

  if ((v15 & 0x2C) != 0) {
    return 0x1000000;
  }
  if ((v15 & 0x10) != 0)
  {
    if ((v15 & 0x40) != 0) {
      uint64_t result = 0x4401000000;
    }
    else {
      uint64_t result = 0x401000000;
    }
  }
  else
  {
    if ((v15 & 0x40) == 0)
    {
      uint64_t result = 0x1000000;
      if (v15) {
        return result | 0x10000000000;
      }
      return result;
    }
    uint64_t result = 0x4001000000;
  }
  if (v15) {
    return result | 0x10000000000;
  }
  return result;
}

uint64_t sub_10095FEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::Int a7, uint64_t a8, void *a9)
{
  sub_10096CBD0(a7);
  v15._char object = (void *)0x80000001009A5510;
  v15._uint64_t countAndFlagsBits = 0xD000000000000037;
  sub_10096BDC0(v15);
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  v16._uint64_t countAndFlagsBits = v12(a1, v13, v11);
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = a8;
  v17._char object = a9;
  sub_10096BDC0(v17);
  v18._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100960060()
{
  if (qword_100ACC1E0 != -1) {
    swift_once();
  }
  if ([(id)qword_100B0B6C0 preventRunning])
  {
    LOBYTE(v1) = 0;
  }
  else if (*(void *)(v0 + qword_100B0B6F8) && (sub_10071A874() & 1) != 0)
  {
    LOBYTE(v1) = 1;
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 16);
    aBlock[4] = sub_1009549E4;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100AA6BA0;
    uint64_t v3 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    id v4 = [v2 fetchSwift:v3 error:aBlock];
    _Block_release(v3);
    id v1 = aBlock[0];
    if (swift_isEscapingClosureAtFileLocation()) {
      __break(1u);
    }
    if (v4)
    {
      LOBYTE(v1) = [v4 next];
    }
    else
    {
      sub_10096ABF0();

      swift_willThrow();
    }
  }
  return v1 & 1;
}

uint64_t sub_10096023C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  uint64_t v5 = *(void *)(*(void *)v1 + 104);
  uint64_t v36 = *(void *)(*(void *)v1 + 96);
  uint64_t v37 = v3;
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v36;
  uint64_t v44 = v5;
  uint64_t v6 = type metadata accessor for PersistenceTrigger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v38 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v34 = (char *)&v31 - v16;
  Swift::String v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v39 = a1;
  v17(v12, a1, v6);
  if (swift_getEnumCaseMultiPayload() != 13) {
    goto LABEL_9;
  }
  unint64_t v32 = v12;
  v17(v10, (uint64_t)v12, v6);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = v18;
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v44 = v20;
  uint64_t v21 = type metadata accessor for ReconciliationID();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v10, v21);
    goto LABEL_8;
  }
  int v22 = v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  if (v22 == 1)
  {
    uint64_t v24 = v34;
    uint64_t v23 = v35;
  }
  else
  {
    uint64_t v24 = v34;
    uint64_t v23 = v35;
    if (v22 != 6 && v22 != 23)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, AssociatedTypeWitness);
LABEL_8:
      uint64_t v12 = v32;
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      uint64_t v26 = v40;
      goto LABEL_10;
    }
  }
  char v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v27(v24, v10, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v6);
  id v28 = v33;
  uint64_t v29 = ((uint64_t (*)(char *, char *, uint64_t))v27)(v33, v24, AssociatedTypeWitness);
  __chkstk_darwin(v29);
  *(&v31 - 2) = (uint64_t)v28;
  uint64_t v26 = v40;
  uint64_t v30 = v45;
  sub_10095F3C8((uint64_t *)sub_1009672A0);
  if (v30) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v28, AssociatedTypeWitness);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v28, AssociatedTypeWitness);
LABEL_10:
  if (*(void *)(v26 + qword_100B0B6F8))
  {
    swift_retain();
    sub_10071D4D4(v39);
    return swift_release();
  }
  return result;
}

uint64_t sub_1009606F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 104);
  uint64_t v6 = *(void *)(*(void *)a1 + 96);
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v25 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_10096C890();
  uint64_t v19 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)&v18 - v9;
  uint64_t v11 = v26;
  uint64_t result = sub_1000DF200(v21, (uint64_t)&v18 - v9);
  if (!v11)
  {
    uint64_t v21 = v8;
    uint64_t v26 = v6;
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v21);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v16 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
    }
    else
    {
      sub_100827044(v7, v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v7);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v17 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
    }
  }
  return result;
}

void sub_100960990(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_10002689C(a1, v5);
  sub_10096CBD0(23);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000015;
  *((void *)&aBlock + 1) = 0x80000001009BFA10;
  if (*((unsigned char *)v1 + qword_100B0B6E8)) {
    v7._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v7._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (*((unsigned char *)v1 + qword_100B0B6E8)) {
    uint64_t v8 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE500000000000000;
  }
  v7._char object = v8;
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10002689C(a1, v9);
  sub_10096CBD0(22);
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000014;
  *((void *)&aBlock + 1) = 0x80000001009BFA30;
  if (qword_100ACC1E0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100B0B6C0;
  id v12 = [v11 description];
  uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v15 = v14;

  v33._uint64_t countAndFlagsBits = v13;
  v33._char object = v15;
  sub_10096BDC0(v33);

  swift_bridgeObjectRelease();
  sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v9, v10);
  swift_bridgeObjectRelease();
  if (*(void *)((char *)v2 + qword_100B0B6F8))
  {
    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
    sub_10002689C(a1, v16);
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    swift_retain();
    sub_10096CBD0(25);
    long long v28 = aBlock;
    v34._uint64_t countAndFlagsBits = 0xD000000000000017;
    v34._char object = (void *)0x80000001009BFAA0;
    sub_10096BDC0(v34);
    long long v18 = *(_OWORD *)(v4 + 96);
    long long aBlock = *(_OWORD *)(v4 + 80);
    long long v30 = v18;
    type metadata accessor for SpeculativeSetPacer();
    swift_getWitnessTable();
    sub_10096D270();
    sub_10059A0E8(v28, *((void **)&v28 + 1), v16, v17);
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(void *)((char *)v2 + qword_100B0B6E0))
  {
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    sub_10002689C(a1, v19);
    swift_retain();
    sub_10096CBD0(31);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = 0xD00000000000001DLL;
    *((void *)&aBlock + 1) = 0x80000001009BFA80;
    v35._uint64_t countAndFlagsBits = sub_1007BDBD0();
    sub_10096BDC0(v35);
    swift_bridgeObjectRelease();
    sub_10059A0E8(0xD00000000000001DLL, (void *)0x80000001009BFA80, v19, v20);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (void *)v2[2];
  uint64_t v31 = sub_100954BB0;
  uint64_t v32 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v30 = sub_10017090C;
  *((void *)&v30 + 1) = &unk_100AA6B78;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  *(void *)&long long aBlock = 0;
  id v23 = [v21 fetchSwift:v22 error:&aBlock];
  _Block_release(v22);
  id v24 = (id)aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v23)
  {
    if ([v23 next])
    {
      do
      {
        sub_100960F40(v23, a1);
      }
      while (([v23 next] & 1) != 0);
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    sub_10002689C(a1, v26);
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    sub_10096CBD0(41);
    v36._uint64_t countAndFlagsBits = 0xD000000000000027;
    v36._char object = (void *)0x80000001009BFA50;
    sub_10096BDC0(v36);
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_10096CDF0();
    sub_10059A0E8(aBlock, *((void **)&aBlock + 1), v26, v27);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100960F40(void *a1, void *a2)
{
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = (char *)&v20 - v5;
  Swift::String v7 = *(uint64_t (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  id v8 = a1;
  uint64_t result = v7();
  if (!v2)
  {
    uint64_t v10 = v26;
    uint64_t v11 = v23;
    id v12 = [v8 longAtIndex:1];
    if ((unint64_t)v12 > 2)
    {
      sub_10017D094();
      swift_allocError();
      unsigned char *v19 = 0;
      swift_willThrow();
    }
    else
    {
      char v13 = (char)v12;
      id v14 = [v8 longAtIndex:2];
      uint64_t v16 = v10[3];
      uint64_t v15 = v10[4];
      unint64_t v21 = (unint64_t)v14;
      uint64_t v22 = v15;
      uint64_t v26 = sub_10002689C(v10, v16);
      uint64_t v24 = 0;
      uint64_t v25 = (void *)0xE000000000000000;
      if (v13)
      {
        if (v13 == 1) {
          v17._uint64_t countAndFlagsBits = 0x208FB8EFB696E2;
        }
        else {
          v17._uint64_t countAndFlagsBits = 0x20919B9FF0;
        }
        if (v13 == 1) {
          long long v18 = (void *)0xA700000000000000;
        }
        else {
          long long v18 = (void *)0xA500000000000000;
        }
      }
      else
      {
        long long v18 = (void *)0xA400000000000000;
        v17._uint64_t countAndFlagsBits = 548638690;
      }
      v17._char object = v18;
      sub_10096BDC0(v17);
      swift_bridgeObjectRelease();
      v27._uint64_t countAndFlagsBits = 32;
      v27._char object = (void *)0xE100000000000000;
      sub_10096BDC0(v27);
      sub_10096D270();
      v28._uint64_t countAndFlagsBits = 8250;
      v28._char object = (void *)0xE200000000000000;
      sub_10096BDC0(v28);
      v29._uint64_t countAndFlagsBits = sub_100609068(v21);
      sub_10096BDC0(v29);
      swift_bridgeObjectRelease();
      sub_10059A0E8(v24, v25, v16, v22);
      swift_bridgeObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, AssociatedTypeWitness);
  }
  return result;
}

void sub_1009611E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v44 = a5;
  uint64_t v45 = a4;
  uint64_t v10 = sub_10096A630();
  __chkstk_darwin(v10 - 8);
  uint64_t v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096A650();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v41 = v12;
  __chkstk_darwin(v12);
  uint64_t v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)(a2 + 16);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_100968C44;
  void v16[3] = v15;
  v53[4] = sub_1001FB2E8;
  v53[5] = v16;
  v53[0] = _NSConcreteStackBlock;
  v53[1] = (id)1107296256;
  v53[2] = sub_10017090C;
  v53[3] = &unk_100AA7910;
  Swift::String v17 = _Block_copy(v53);
  swift_retain();
  swift_release();
  v53[0] = 0;
  id v18 = [v14 fetchSwift:v17 error:v53];
  _Block_release(v17);
  id v19 = v53[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v18)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();
    return;
  }
  unint64_t v21 = v18;
  if (![v18 next])
  {
    swift_release();
    swift_release();

    return;
  }
  uint64_t v37 = v15;
  uint64_t v42 = a3;
  while (1)
  {
    uint64_t v23 = v21;
    id v24 = v21;
    int64_t v25 = (int64_t)objc_msgSend(v24, "longAtIndex:", 0, v37);
    if (v25 == 0x8000000000000000)
    {
      Swift::String v27 = v22;
      char v28 = 2;
      Swift::UInt64 v26 = 1;
      goto LABEL_13;
    }
    Swift::UInt64 v26 = v25;
    if (!v25)
    {
      Swift::String v27 = v22;
      char v28 = 2;
      goto LABEL_13;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
      Swift::String v27 = v22;
      char v28 = 1;
      goto LABEL_13;
    }
    Swift::UInt64 v26 = -v25;
    if ((unint64_t)-v25 >> 32) {
      break;
    }
    Swift::String v27 = v22;
    char v28 = 0;
LABEL_13:

    uint64_t v29 = *(void *)(a3 + 16);
    Swift::UInt64 v50 = v26;
    char v51 = v28;
    char v52 = 0;
    (*(void (**)(id *__return_ptr, Swift::UInt64 *, uint64_t))(*(void *)v29 + 168))(v53, &v50, 1);
    if (v6)
    {
      uint64_t v22 = v27;
      goto LABEL_29;
    }
    sub_10096884C((uint64_t)v53, (uint64_t)v48);
    sub_10096884C((uint64_t)v48, (uint64_t)v49);
    if (sub_1000D3324((uint64_t)v49) == 1) {
      goto LABEL_19;
    }
    memcpy(v47, v53, sizeof(v47));
    if (!v47[30])
    {
      sub_1000D3440((uint64_t)v47);
LABEL_19:
      sub_100494DBC((uint64_t)v47, v26, v28);
      goto LABEL_20;
    }
    if (LOBYTE(v47[42]) == 2)
    {
      sub_1000D3440((uint64_t)v47);
    }
    else
    {
      uint64_t v30 = *v44;
      id v31 = v47[30];
      swift_bridgeObjectRetain();
      id v43 = v31;
      char v32 = sub_1004AE964((uint64_t)v31, v30);
      swift_bridgeObjectRelease();
      if (v32)
      {
        id v33 = v43;
        Swift::String v34 = (void *)sub_100926FD4();
        sub_1000D3440((uint64_t)v47);
      }
      else
      {
        sub_100494DBC((uint64_t)&v46, v26, v28);
        sub_1000D3440((uint64_t)v47);
      }
      a3 = v42;
    }
LABEL_20:
    if (([v24 next] & 1) == 0) {
      goto LABEL_30;
    }
    unint64_t v21 = v23;
  }
  sub_10096A5B0();
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_100025894((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
  Swift::String v35 = v38;
  uint64_t v36 = v41;
  sub_10096ABD0();
  sub_10096A4D0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v36);
  swift_willThrow();

LABEL_29:
LABEL_30:
  swift_release();
  swift_release();
}

void sub_100961784(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  id v8 = *(void **)(v3 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = sub_100967288;
  v10[3] = v9;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA6B50;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v12 = [v8 fetchSwift:v11 error:aBlock];
  _Block_release(v11);
  id v13 = aBlock[0];
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v9) {
    __break(1u);
  }
  if (v12)
  {
    if ([v12 next])
    {
      while (1)
      {
        sub_100961B1C(a2, a3, v12);
        if (v4) {
          break;
        }
        if (([v12 next] & 1) == 0) {
          goto LABEL_9;
        }
      }
    }
LABEL_9:
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_1009619F0(uint64_t a1, uint64_t a2)
{
  v7[1] = 0xE000000000000000;
  sub_10096CBD0(64);
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000038;
  v10._char object = (void *)0x80000001009BF9D0;
  sub_10096BDC0(v10);
  v7[3] = &type metadata for Int;
  v7[0] = a2;
  uint64_t v3 = sub_1003AC444((uint64_t)v7);
  uint64_t v5 = v4;
  sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ACE0F0);
  if (v5)
  {
    v11._uint64_t countAndFlagsBits = v3;
    v11._char object = v5;
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 0x30203D212029;
    v12._char object = (void *)0xE600000000000000;
    sub_10096BDC0(v12);
    return v8;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100961B1C(void (*a1)(char *), uint64_t a2, void *a3)
{
  v11[1] = a2;
  Swift::String v12 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v9 + 16))(a3, 0, AssociatedTypeWitness, v9);
  if (!v3)
  {
    v12(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_100961C98()
{
  return sub_100961D04(sub_100954B1C, &unk_100AA6AD8);
}

uint64_t sub_100961D04(void *a1, void *a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = a2;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v5 = [v3 executeSwift:v4 error:aBlock];
  _Block_release(v4);
  id v6 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v5)
  {
    sub_10096ABF0();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100961E40()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v15 = sub_100954B20;
  uint64_t v16 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_10017090C;
  id v14 = &unk_100AA6A60;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:&aBlock];
  _Block_release(v2);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!v3)
  {
LABEL_8:
    sub_10096ABF0();

    return swift_willThrow();
  }
  uint64_t v15 = sub_100954B58;
  uint64_t v16 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_10017090C;
  id v14 = &unk_100AA6A88;
  unsigned int v5 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v6 = [v1 executeSwift:v5 error:&aBlock];
  _Block_release(v5);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v15 = sub_100954B5C;
  uint64_t v16 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_10017090C;
  id v14 = &unk_100AA6AB0;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  long long aBlock = 0;
  unsigned int v8 = [v1 executeSwift:v7 error:&aBlock];
  _Block_release(v7);
  uint64_t v9 = aBlock;
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    goto LABEL_13;
  }
  if (v8) {
    return result;
  }
  sub_10096ABF0();

  return swift_willThrow();
}

uint64_t sub_10096212C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t result = __chkstk_darwin(v7);
  id v14 = (char *)&v20 - v13;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v15)
  {
    uint64_t v20 = result;
    uint64_t v21 = v12;
    uint64_t v22 = v11;
    uint64_t v16 = swift_retain();
    uint64_t v17 = v15(v16);
    uint64_t result = sub_1000705CC((uint64_t)v15);
    if (v17)
    {
      id v18 = *(void (**)(uint64_t))(**(void **)(v17 + 16) + 160);
      swift_retain();
      v18(a1);
      swift_release();
      if (v2)
      {
        return swift_release();
      }
      else
      {
        uint64_t v19 = v22;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, AssociatedTypeWitness) == 1)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, v20);
        }
        else
        {
          uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v14, v9, AssociatedTypeWitness);
          if (*(void *)(v3 + qword_100B0B6E0))
          {
            swift_retain();
            sub_1007BD914();
            swift_release();
            swift_release();
            return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, AssociatedTypeWitness);
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1009623F4(void (**a1)(char *, uint64_t *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v54 = a3;
  uint64_t v56 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  BOOL v53 = *(void (***)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)&v43 - v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v13 = (char *)&v43 - v12;
  id v14 = *(uint64_t (**)(uint64_t))(v5 + 24);
  if (!v14) {
    return (uint64_t)v56;
  }
  uint64_t v51 = AssociatedTypeWitness;
  char v52 = v13;
  uint64_t v47 = v11;
  uint64_t v49 = v10;
  Swift::UInt64 v50 = v9;
  uint64_t v15 = swift_retain();
  uint64_t v16 = (void **)v14(v15);
  sub_1000705CC((uint64_t)v14);
  if (!v16) {
    return (uint64_t)v56;
  }
  uint64_t v17 = *(void *)(v5 + qword_100B0B6E0);
  if (!v17) {
    goto LABEL_24;
  }
  uint64_t v18 = sub_1006F2FD8(8);
  uint64_t v20 = *(void *)(v18 + 16);
  uint64_t v19 = *(void *)(v18 + 24);
  uint64_t v48 = v18;
  BOOL v21 = __OFSUB__(v19, v20);
  uint64_t v22 = v19 - v20;
  if (v21)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v22 < 1)
  {
LABEL_24:
    swift_release();
    return (uint64_t)v56;
  }
  uint64_t v46 = v16;
  id v45 = *(id *)(v5 + 16);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v54;
  _OWORD v23[2] = a2;
  v23[3] = v24;
  aBlock[4] = sub_1001F8FDC;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA6A38;
  int64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v54 = v17;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v26 = [v45 fetchSwift:v25 error:aBlock];
  _Block_release(v25);
  id v45 = aBlock[0];
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v25)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
  if (!v26)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v23;
  }
  Swift::String v27 = (void *)sub_10096B970();
  uint64_t v60 = 0;
  aBlock[0] = v27;
  if (![v26 next]) {
    goto LABEL_28;
  }
  do
  {
    sub_100962C40(v26, (uint64_t)aBlock, &v60);
    if (v4)
    {

      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v23;
    }
  }
  while (([v26 next] & 1) != 0);
  uint64_t v28 = v60;
  if (v60 < 1)
  {
LABEL_28:
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return (uint64_t)v56;
  }
  uint64_t v29 = v46;
  swift_retain();
  sub_1007BC318(v28, sub_100966350, (uint64_t)v29);
  swift_release();
  uint64_t v59 = v56;
  char v58 = 0;
  id v30 = aBlock[0];
  swift_bridgeObjectRetain();
  uint64_t v31 = TupleTypeMetadata2;
  if (!sub_10096C1A0())
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_33:
    if (v58 == 1)
    {
      swift_retain();
      sub_1006BA410((uint64_t)"startSpeculativeBackgroundDownloads(currentDownloadsCount:matching:)", 68, 2, 0, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_10096635C, v5);
      swift_release();
    }
    swift_release();
    swift_release();
    swift_release();

    uint64_t v23 = v59;
    swift_bridgeObjectRelease();
    return (uint64_t)v23;
  }
  uint64_t v32 = 0;
  id v45 = (id)*(int *)(v31 + 48);
  uint64_t v56 = (void (**)(char *, uint64_t *, uint64_t))(v49 + 16);
  uint64_t v44 = (void (**)(uint64_t))(v53 + 4);
  ++v53;
  while (1)
  {
    BOOL v33 = sub_10096C130();
    sub_10096C0E0();
    if (v33)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v52, (unint64_t)v30+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v32, v31);
      uint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_23;
      }
      goto LABEL_16;
    }
    uint64_t result = sub_10096CC20();
    if (v47 != 8) {
      break;
    }
    uint64_t v57 = result;
    (*v56)(v52, &v57, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    uint64_t v34 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_16:
    Swift::String v35 = *(uint8_t **)((char *)v45 + (void)v52);
    (*v44)((uint64_t)v50);
    uint64_t v37 = *(void *)(v48 + 16);
    uint64_t v36 = *(void *)(v48 + 24);
    BOOL v21 = __OFSUB__(v36, v37);
    uint64_t v38 = v36 - v37;
    if (v21) {
      goto LABEL_38;
    }
    if (v38 < 1)
    {
      swift_bridgeObjectRelease();
      (*v53)((uint64_t)v50, v51);
      goto LABEL_33;
    }
    id v39 = v26;
    uint64_t v41 = (uint64_t)v50;
    sub_100962E8C(v46, (uint64_t)v50, v35, v5, &v58, v54, &v59);
    (*v53)(v41, v51);
    uint64_t v31 = TupleTypeMetadata2;
    ++v32;
    id v26 = v39;
    if (v34 == sub_10096C1A0()) {
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100962C40(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(uint64_t (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  id v12 = a1;
  uint64_t v13 = v23;
  uint64_t result = v11();
  if (!v13)
  {
    id v15 = [v12 longAtIndex:1];
    id v16 = [v12 longLongAtIndex:2];
    uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v18 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v8, v10, AssociatedTypeWitness);
    *(void *)&v8[v17] = v15;
    sub_10096C1C0();
    sub_10096C180();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, AssociatedTypeWitness);
    if (__OFADD__(*v22, v16)) {
      __break(1u);
    }
    else {
      *v22 += v16;
    }
  }
  return result;
}

uint64_t sub_100962E8C(void **a1, uint64_t a2, uint8_t *a3, uint64_t a4, unsigned char *a5, uint64_t a6, void *a7)
{
  uint64_t v90 = a7;
  uint64_t v107 = a6;
  uint64_t v92 = a5;
  uint64_t v110 = a4;
  uint64_t v111 = a3;
  uint64_t v9 = *a1;
  uint64_t v97 = sub_10096B0E0();
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v96 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v9[310];
  uint64_t v101 = v9[308];
  uint64_t v102 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v103 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v104 = AssociatedTypeWitness;
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v99 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v91 = (char *)&v85 - v15;
  uint64_t v16 = sub_10096B480();
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v106 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  id v100 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  double v98 = (char *)&v85 - v19;
  uint64_t v20 = v9[309];
  uint64_t v21 = v9[311];
  uint64_t v22 = type metadata accessor for SnapshotItem();
  uint64_t v23 = sub_10096C890();
  uint64_t v108 = *(void *)(v23 - 8);
  uint64_t v109 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v114 = (char *)&v85 - v25;
  uint64_t v112 = *(void *)(v22 - 8);
  __chkstk_darwin(v24);
  Swift::String v27 = (char *)&v85 - v26;
  uint64_t v94 = v21;
  uint64_t v93 = v20;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_10096C890();
  uint64_t v113 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v85 - v31;
  uint64_t v115 = *(void *)(v28 - 8);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v85 - v33;
  Swift::String v35 = v116;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*a1[2] + 160))(a2);
  if (v35) {
    return result;
  }
  uint64_t v116 = a1;
  uint64_t v86 = a2;
  uint64_t v87 = v27;
  uint64_t v89 = v34;
  uint64_t v88 = v22;
  uint64_t v37 = v115;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v32, 1, v28) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v32, v29);
  }
  uint64_t v38 = v89;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v89, v32, v28);
  id v39 = v114;
  (*(void (**)(char *, uint64_t))(*v116[5] + 240))(v38, 1);
  uint64_t v40 = v112;
  uint64_t v41 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v39, 1, v88) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v39, v109);
  }
  uint64_t v113 = 0;
  uint64_t v42 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v87, v39, v41);
  uint64_t v43 = v86;
  if (v111 == (uint8_t *)64)
  {
    uint64_t v44 = *(void ***)(v110 + qword_100B0B6F8);
    if (v44)
    {
      swift_retain();
      if ((sub_10071B048(v42) & 1) == 0)
      {
        uint64_t v116 = v44;
        uint64_t v114 = (char *)v28;
        id v68 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v69 = v103;
        uint64_t v70 = v104;
        int v71 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v91, v43, v104);
        uint64_t v72 = sub_10096B470();
        os_log_type_t v73 = sub_10096C590();
        LODWORD(v111) = v73;
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          v117[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v74 = 136446210;
          swift_getAssociatedConformanceWitness();
          uint64_t v75 = sub_10096D220();
          uint64_t v118 = sub_100719D44(v75, v76, v117);
          uint64_t v38 = v89;
          uint64_t v40 = v112;
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
          _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v111, "🔮  unscheduling download of item %{public}s not in the speculative set anymore", v74, 0xCu);
          swift_arrayDestroy();
          uint64_t v37 = v115;
          uint64_t v43 = v86;
          swift_slowDealloc();
          uint64_t v41 = v88;
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
        }

        (*(void (**)(char *, uint64_t))(v105 + 8))(v98, v106);
        uint64_t v77 = v113;
        uint64_t v28 = (uint64_t)v114;
        sub_10095AB08(v43, 0x40uLL);
        uint64_t v78 = v87;
        uint64_t v79 = v92;
        if (v77)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v78, v41);
          return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v28);
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v78, v41);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v28);
        unsigned char *v79 = 1;
        return result;
      }
      swift_release();
    }
  }
  type metadata accessor for ItemMetadata();
  if (sub_1007BD5D0())
  {
    uint64_t v45 = v113;
    sub_10095BD00(v43, (uint64_t)sub_100966378, v110);
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v87, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v28);
    }
    uint64_t v114 = (char *)v28;
    v117[0] = v101;
    v117[1] = v93;
    v117[2] = v102;
    v117[3] = v94;
    type metadata accessor for ConcreteJobResult();
    uint64_t v61 = sub_100591720();
    uint64_t v62 = v96;
    sub_10096B0D0();
    sub_10096B080();
    double v64 = v63;
    unsigned __int8 v65 = *(uint64_t (**)(char *, uint64_t))(v95 + 8);
    uint64_t result = v65(v62, v97);
    double v66 = v64 * 1000000000.0;
    if ((~COERCE__INT64(v64 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v66 > -9.22337204e18)
      {
        if (v66 < 9.22337204e18)
        {
          if ((v111 & 0x2C) != 0)
          {
            uint64_t v67 = 0x1000000;
            goto LABEL_40;
          }
          if ((v111 & 0x10) != 0)
          {
            if ((v111 & 0x40) != 0) {
              uint64_t v67 = 0x4401000000;
            }
            else {
              uint64_t v67 = 0x401000000;
            }
          }
          else
          {
            if ((v111 & 0x40) == 0)
            {
              uint64_t v67 = 0x1000000;
              if ((v111 & 1) == 0)
              {
LABEL_40:
                sub_1008B08F0(v86, 0, (uint64_t)v66, v67, v116, 0, v61);
                uint64_t v80 = v96;
                sub_10096B0D0();
                sub_10096B080();
                double v82 = v81;
                uint64_t result = v65(v80, v97);
                double v83 = v82 * 1000000000.0;
                if ((~COERCE__INT64(v82 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v83 > -9.22337204e18)
                  {
                    if (v83 < 9.22337204e18)
                    {
                      sub_10059C6F4(v61, (uint64_t)v83);
                      uint64_t v84 = (void (**)(char *, uint64_t))(v112 + 8);
                      sub_1007BD71C();
                      swift_release();
                      (*v84)(v87, v88);
                      uint64_t result = (*(uint64_t (**)(char *, char *))(v37 + 8))(v38, v114);
                      if (!__OFADD__(*v90, 1))
                      {
                        ++*v90;
                        return result;
                      }
                      goto LABEL_51;
                    }
LABEL_50:
                    __break(1u);
LABEL_51:
                    __break(1u);
                    return result;
                  }
LABEL_49:
                  __break(1u);
                  goto LABEL_50;
                }
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
LABEL_39:
              v67 |= 0x10000000000uLL;
              goto LABEL_40;
            }
            uint64_t v67 = 0x4001000000;
          }
          if ((v111 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_39;
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_47;
  }
  id v46 = (id)fpfs_current_or_default_log();
  uint64_t v47 = v100;
  sub_10096B490();
  uint64_t v48 = v103;
  uint64_t v49 = v104;
  Swift::UInt64 v50 = v99;
  uint64_t v51 = v43;
  char v52 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v99, v51, v104);
  BOOL v53 = sub_10096B470();
  os_log_type_t v54 = sub_10096C5A0();
  int v55 = v54;
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v56 = swift_slowAlloc();
    LODWORD(v116) = v55;
    uint64_t v57 = (uint8_t *)v56;
    uint64_t v58 = swift_slowAlloc();
    uint64_t v114 = (char *)v28;
    v117[0] = v58;
    uint64_t v111 = v57;
    *(_DWORD *)uint64_t v57 = 136315138;
    swift_getAssociatedConformanceWitness();
    uint64_t v59 = sub_10096D220();
    uint64_t v118 = sub_100719D44(v59, v60, v117);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
    _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v116, "💾 download for file %s won't be scheduled due to disk management concerns", v111, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v105 + 8))(v52, v106);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v87, v88);
    return (*(uint64_t (**)(char *, char *))(v115 + 8))(v89, v114);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v52, v106);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v87, v88);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v28);
  }
}

uint64_t sub_100963D7C(uint64_t result)
{
  if (*(void *)(result + qword_100B0B6F8))
  {
    swift_retain();
    sub_10071D37C();
    return swift_release();
  }
  return result;
}

void (**sub_100963DC4(void (**a1)(char *, uint64_t *, uint64_t)))(char *, uint64_t *, uint64_t)
{
  uint64_t result = (void (**)(char *, uint64_t *, uint64_t))sub_1009623F4(a1, (uint64_t)sub_100963E18, 0);
  if (!v1) {
    return (void (**)(char *, uint64_t *, uint64_t))sub_1009623F4(result, (uint64_t)sub_100963F78, 0);
  }
  return result;
}

uint64_t sub_100963E18()
{
  sub_10096CBD0(362);
  v1._uint64_t countAndFlagsBits = 0xD000000000000109;
  v1._char object = (void *)0x80000001009BF500;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD000000000000018;
  v3._char object = (void *)0x80000001009BF350;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._char object = (void *)0x80000001009BF490;
  v5._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v7._char object = (void *)0x80000001009BF610;
  sub_10096BDC0(v7);
  return 0;
}

uint64_t sub_100963F78()
{
  sub_10096CBD0(234);
  v1._uint64_t countAndFlagsBits = 0xD000000000000090;
  v1._char object = (void *)0x80000001009BF3F0;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009BF490;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000041;
  v5._char object = (void *)0x80000001009BF4B0;
  sub_10096BDC0(v5);
  return 0;
}

void sub_100964090()
{
  Swift::String v2 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = type metadata accessor for SnapshotItem();
  uint64_t v5 = sub_10096C890();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v40 - v7;
  uint64_t v8 = *(void (***)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v40 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_10096C890();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  double v63 = (char *)&v40 - v13;
  uint64_t v58 = *(char **)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v12);
  double v64 = (char *)&v40 - v14;
  uint64_t v57 = *(void *)(v3 + 96);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = (uint64_t (*)(uint64_t))v2[3];
  if (v19)
  {
    uint64_t v45 = v16;
    uint64_t v49 = v8;
    unint64_t v60 = v18;
    uint64_t v20 = swift_retain();
    uint64_t v21 = v19(v20);
    sub_1000705CC((uint64_t)v19);
    uint64_t v65 = v21;
    if (v21)
    {
      uint64_t v59 = v15;
      uint64_t v22 = (void *)v2[2];
      aBlock[4] = sub_100954BCC;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10017090C;
      aBlock[3] = &unk_100AA69E8;
      uint64_t v23 = _Block_copy(aBlock);
      swift_release();
      aBlock[0] = 0;
      id v24 = [v22 fetchSwift:v23 error:aBlock];
      _Block_release(v23);
      id v25 = aBlock[0];
      if (swift_isEscapingClosureAtFileLocation()) {
        __break(1u);
      }
      uint64_t v26 = v59;
      if (v24)
      {
        uint64_t v52 = qword_100B0B6E0;
        if ([v24 next])
        {
          uint64_t v57 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
          Swift::UInt64 v50 = *(void (**)(void))(v57 + 16);
          uint64_t v51 = v57 + 16;
          uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
          uint64_t v47 = (void (**)(char *, char *, uint64_t))(v58 + 32);
          uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 6);
          uint64_t v42 = (void (**)(char *, char *, uint64_t))(v49 + 4);
          uint64_t v40 = v49 + 1;
          id v46 = (void (**)(char *, uint64_t))(v58 + 8);
          uint64_t v49 = (void (**)(char *, uint64_t))(v45 + 8);
          Swift::String v27 = v60;
          uint64_t v43 = v2;
          id v41 = v24;
          while (1)
          {
            uint64_t v28 = (char *)v24;
            v50();
            if (v1)
            {
              swift_release();

              return;
            }
            uint64_t v58 = v28;
            uint64_t v29 = v4;
            uint64_t v30 = AssociatedTypeWitness;
            uint64_t v31 = *(void (**)(char *))(**(void **)(v65 + 16) + 160);
            swift_retain();
            uint64_t v32 = v63;
            v31(v27);
            swift_release();
            uint64_t v33 = v32;
            if ((*v48)(v32, 1, v30) == 1)
            {
              (*v49)(v60, v26);
              swift_release();

              (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v56);
              return;
            }
            uint64_t v34 = v64;
            (*v47)(v64, v33, v30);
            Swift::String v35 = *(void (**)(char *, uint64_t))(**(void **)(v65 + 40) + 240);
            swift_retain();
            uint64_t v36 = v62;
            v35(v34, 1);
            uint64_t AssociatedTypeWitness = v30;
            swift_release();
            uint64_t v4 = v29;
            if ((*v44)(v36, 1, v29) == 1)
            {

              swift_release();
              (*v46)(v64, AssociatedTypeWitness);
              (*v49)(v60, v59);
              (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v54);
              return;
            }
            uint64_t v37 = v61;
            (*v42)(v61, v36, v29);
            type metadata accessor for ItemMetadata();
            uint64_t v26 = v59;
            if (!*(void *)((char *)v43 + v52)) {
              break;
            }
            swift_retain();
            uint64_t v38 = v64;
            sub_1007BD71C();
            swift_release();
            (*v40)(v37, v4);
            (*v46)(v38, AssociatedTypeWitness);
            Swift::String v27 = v60;
            (*v49)(v60, v26);
            unsigned __int8 v39 = [v58 next];
            id v24 = v41;
            if ((v39 & 1) == 0) {
              goto LABEL_12;
            }
          }
          __break(1u);
        }
        else
        {
LABEL_12:
          swift_release();
        }
      }
      else
      {
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
      }
    }
  }
}

uint64_t sub_1009649F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B830();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v11)
  {
    uint64_t v30 = v3;
    uint64_t v12 = swift_retain();
    uint64_t v13 = v11(v12);
    uint64_t v14 = (uint64_t)v11;
    uint64_t v15 = v13;
    sub_1000705CC(v14);
    if (v15)
    {
      uint64_t v16 = sub_1006F2F2C();
      *uint64_t v9 = v16;
      (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
      id v17 = (id)v16;
      LOBYTE(v16) = sub_10096B860();
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
      if (v16)
      {
        uint64_t v18 = *(void **)(v1 + 16);
        aBlock[4] = sub_100954BDC;
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_10017090C;
        aBlock[3] = &unk_100AA69C0;
        uint64_t v19 = _Block_copy(aBlock);
        swift_release();
        aBlock[0] = 0;
        id v20 = [v18 fetchSwift:v19 error:aBlock];
        _Block_release(v19);
        id v21 = aBlock[0];
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
        {
          if (v20)
          {
            if ([v20 next])
            {
              sub_1007C482C((uint64_t)[v20 longAtIndex:0], (uint64_t)objc_msgSend(v20, "longLongAtIndex:", 1));

              swift_unknownObjectRelease();
            }
            else
            {
              if (swift_unknownObjectWeakLoadStrong())
              {
                sub_1007C482C(0, 0);
                swift_unknownObjectRelease();
              }
              swift_unknownObjectRelease();
            }
            return swift_release();
          }
          else
          {
            sub_10096ABF0();

            swift_willThrow();
            id v22 = (id)fpfs_current_or_default_log();
            sub_10096B490();
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v23 = sub_10096B470();
            os_log_type_t v24 = sub_10096C5B0();
            if (os_log_type_enabled(v23, v24))
            {
              id v25 = (uint8_t *)swift_slowAlloc();
              uint64_t v26 = swift_slowAlloc();
              v29[2] = v15;
              Swift::String v27 = (void *)v26;
              *(_DWORD *)id v25 = 138412290;
              v29[1] = v25 + 4;
              swift_getErrorValue();
              id v28 = Error.prettyDescription.getter(v31);
              aBlock[0] = v28;
              sub_10096C8C0();
              *Swift::String v27 = v28;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v23, v24, "Error fetching items from db: %@", v25, 0xCu);
              sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_unknownObjectRelease();

              swift_errorRelease();
              swift_release();
            }
            else
            {
              swift_release();
              swift_unknownObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
            }
            return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v2);
          }
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_100964F8C()
{
  sub_1000705CC(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_100ADF600;
  uint64_t v2 = sub_10002B7CC(&qword_100AD74A0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  v3(v0 + qword_100ADF608, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  long long v4 = *(_OWORD *)(v0 + qword_100B0B700 + 80);
  v9[4] = *(_OWORD *)(v0 + qword_100B0B700 + 64);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(v0 + qword_100B0B700 + 112);
  _OWORD v9[6] = *(_OWORD *)(v0 + qword_100B0B700 + 96);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(v0 + qword_100B0B700 + 16);
  v9[0] = *(_OWORD *)(v0 + qword_100B0B700);
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v0 + qword_100B0B700 + 48);
  v9[2] = *(_OWORD *)(v0 + qword_100B0B700 + 32);
  v9[3] = v7;
  sub_10017DCF4((uint64_t)v9);
  sub_10000A63C(v0 + qword_100B0B708);
  return v0;
}

uint64_t sub_1009650E8()
{
  sub_100964F8C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLBackgroundDownloader()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100965158()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10096516C()
{
  return sub_10095770C();
}

uint64_t sub_100965190()
{
  return sub_100957B0C();
}

uint64_t sub_1009651B4()
{
  return sub_100957EB8();
}

uint64_t sub_1009651D8()
{
  return sub_1009586FC();
}

uint64_t sub_1009651FC()
{
  return sub_100961C98();
}

uint64_t sub_100965220()
{
  return sub_100961E40();
}

uint64_t sub_100965244()
{
  return sub_100958914();
}

uint64_t sub_100965268()
{
  return sub_100958980();
}

uint64_t sub_10096528C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100955248();
  *a1 = result;
  return result;
}

uint64_t sub_1009652B8()
{
  return sub_10095525C();
}

uint64_t sub_1009652E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10095527C();
  *a1 = result;
  return result;
}

uint64_t sub_10096530C()
{
  return sub_100955380();
}

uint64_t sub_100965334@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100965364(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_100965390(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1009653B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 104);
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v23 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v14 = *(void *)(v3 + 96);
  _OWORD v23[2] = *(void *)(v3 + 80);
  v23[3] = v5;
  v23[4] = v14;
  void v23[5] = v4;
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v24 + *(int *)(v17 + 52), v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    LOBYTE(v18) = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v11, AssociatedTypeWitness);
    uint64_t v18 = *(void *)a2[3] + 328;
    uint64_t v19 = *(uint64_t (**)(uint64_t, char *, void, void))v18;
    uint64_t v20 = v23[1];
    char v21 = (*(uint64_t (**)(uint64_t, char *, void, void))v18)(23, v13, 0, 0);
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, AssociatedTypeWitness);
    }
    else if (v21 & 1) != 0 || (v19(6, v13, 0, 0))
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, AssociatedTypeWitness);
      LOBYTE(v18) = 1;
    }
    else
    {
      LOBYTE(v18) = v19(1, v13, 0, 0);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, AssociatedTypeWitness);
    }
  }
  return v18 & 1;
}

uint64_t sub_10096571C()
{
  sub_10096CBD0(70);
  v1._char object = (void *)0x80000001009BF370;
  v1._uint64_t countAndFlagsBits = 0xD000000000000036;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x7461747320524F20;
  v3._char object = (void *)0xEC000000203D2065;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100965810()
{
  sub_10096CBD0(429);
  v1._char object = (void *)0x80000001009C09F0;
  v1._uint64_t countAndFlagsBits = 0xD0000000000001A5;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x444E450A3B29;
  v3._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_1009658C0()
{
  sub_10096CBD0(217);
  v1._char object = (void *)0x80000001009C0910;
  v1._uint64_t countAndFlagsBits = 0xD0000000000000D1;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x444E450A3B29;
  v3._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_100965970(Swift::Int a1, uint64_t a2, void *a3)
{
  sub_10096CBD0(a1);
  v6._char object = (void *)0x80000001009C04B0;
  v6._uint64_t countAndFlagsBits = 0xD000000000000079;
  sub_10096BDC0(v6);
  v7._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = a2;
  v8._char object = a3;
  sub_10096BDC0(v8);
  return 0;
}

uint64_t sub_100965A24()
{
  sub_10096CBD0(132);
  v1._char object = (void *)0x80000001009BF950;
  v1._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x30203D212029;
  v3._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_100965AD4()
{
  sub_10096CBD0(280);
  v1._uint64_t countAndFlagsBits = 0xD000000000000090;
  v1._char object = (void *)0x80000001009BF770;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  v3._char object = (void *)0x80000001009BF810;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._char object = (void *)0x80000001009BF830;
  v5._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xD000000000000016;
  v7._char object = (void *)0x80000001009BF850;
  sub_10096BDC0(v7);
  v8._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0xD000000000000035;
  v9._char object = (void *)0x80000001009BF870;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x444E450A3B29;
  v11._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_100965CBC(void *a1, void *a2)
{
  sub_10096CBD0(208);
  v5._uint64_t countAndFlagsBits = 0xD00000000000007ELL;
  v5._char object = a1;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xD000000000000012;
  v7._char object = a2;
  sub_10096BDC0(v7);
  v8._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0xD000000000000034;
  v9._char object = (void *)0x80000001009BF730;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x444E450A3B29;
  v11._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_100965E0C()
{
  sub_10096CBD0(95);
  v1._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._char object = (void *)0x80000001009BF370;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009BF3B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000015;
  v5._char object = (void *)0x80000001009BF3D0;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_100965F30()
{
  sub_10096CBD0(154);
  v1._uint64_t countAndFlagsBits = 0xD000000000000035;
  v1._char object = (void *)0x80000001009C0D80;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  v3._char object = (void *)0x80000001009C0DC0;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._char object = (void *)0x80000001009C0D60;
  v5._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x200A0A30203D2120;
  v7._char object = (void *)0xEF312054494D494CLL;
  sub_10096BDC0(v7);
  return 0;
}

uint64_t sub_1009660A0()
{
  sub_10096CBD0(63);
  v1._char object = (void *)0x80000001009C0EC0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100966138()
{
  sub_10096CBD0(81);
  v1._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._char object = (void *)0x80000001009BF370;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009C0D60;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x30203D2120;
  v5._char object = (void *)0xE500000000000000;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_10096624C()
{
  sub_10096CBD0(241);
  v1._uint64_t countAndFlagsBits = 0xD0000000000000D5;
  v1._char object = (void *)0x80000001009BF270;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009BF350;
  v3._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100966340()
{
  return swift_deallocObject();
}

uint64_t sub_100966350(uint64_t result)
{
  if (result) {
    return sub_1006C05B4();
  }
  return result;
}

uint64_t sub_10096635C()
{
  return sub_100963D7C(v0);
}

unint64_t sub_100966378()
{
  return 0xD000000000000031;
}

uint64_t sub_100966394()
{
  sub_10096CBD0(152);
  v1._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  v1._char object = (void *)0x80000001009BFB70;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009BFBD0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000024;
  v5._char object = (void *)0x80000001009BFBF0;
  sub_10096BDC0(v5);
  return 0;
}

void sub_1009664B0()
{
  Swift::String v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    uint64_t v3 = v1(v2);
    sub_1000705CC((uint64_t)v1);
    if (v3)
    {
      sub_1006C05B4();
      swift_release();
    }
  }
}

uint64_t sub_100966534(uint64_t a1)
{
  sub_10096CBD0(320);
  v40._char object = (void *)0x80000001009BFE40;
  v40._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  sub_10096BDC0(v40);
  v41._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 0xD000000000000034;
  v42._char object = (void *)0x80000001009BFE70;
  sub_10096BDC0(v42);
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v39 = a1;
  if (v2)
  {
    sub_100446214(0, v2, 0);
    uint64_t v3 = (uint64_t *)(a1 + 32);
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    int64_t v5 = v2;
    do
    {
      uint64_t v7 = *v3++;
      uint64_t v6 = v7;
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v4 >= v8 >> 1) {
        sub_100446214(v8 > 1, v4 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v4 + 1;
      _swiftEmptyArrayStorage[v4++ + 4] = v6;
      --v5;
    }
    while (v5);
    a1 = v39;
  }
  swift_bridgeObjectRetain();
  sub_10002B7CC((uint64_t *)&unk_100AD0EC0);
  sub_100025500((unint64_t *)&unk_100AD6B80, (uint64_t *)&unk_100AD0EC0);
  sub_10001F9C0();
  uint64_t v9 = sub_10096BF90();
  Swift::String v11 = v10;
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = v9;
  v43._char object = v11;
  sub_10096BDC0(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 41;
  v44._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 40;
  v45._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 0x204E45485720200ALL;
  v46._char object = (void *)0xE800000000000000;
  sub_10096BDC0(v46);
  v47._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v48._char object = (void *)0x80000001009BFEB0;
  sub_10096BDC0(v48);
  v49._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v49);
  swift_bridgeObjectRelease();
  v50._uint64_t countAndFlagsBits = 0xD000000000000036;
  v50._char object = (void *)0x80000001009BFEE0;
  sub_10096BDC0(v50);
  if (v2)
  {
    sub_100446214(0, v2, 0);
    uint64_t v12 = (uint64_t *)(a1 + 32);
    unint64_t v13 = _swiftEmptyArrayStorage[2];
    int64_t v14 = v2;
    do
    {
      uint64_t v16 = *v12++;
      uint64_t v15 = v16;
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v13 >= v17 >> 1) {
        sub_100446214(v17 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13++ + 4] = v15;
      --v14;
    }
    while (v14);
    a1 = v39;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10096BF90();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v51._uint64_t countAndFlagsBits = v18;
  v51._char object = v20;
  sub_10096BDC0(v51);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 41;
  v52._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v52);
  swift_bridgeObjectRelease();
  v53._uint64_t countAndFlagsBits = 40;
  v53._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v53);
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v54._char object = (void *)0x80000001009BFF20;
  sub_10096BDC0(v54);
  if (v2)
  {
    sub_100446214(0, v2, 0);
    char v21 = (uint64_t *)(a1 + 32);
    unint64_t v22 = _swiftEmptyArrayStorage[2];
    int64_t v23 = v2;
    do
    {
      uint64_t v25 = *v21++;
      uint64_t v24 = v25;
      unint64_t v26 = _swiftEmptyArrayStorage[3];
      if (v22 >= v26 >> 1) {
        sub_100446214(v26 > 1, v22 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      _swiftEmptyArrayStorage[v22++ + 4] = v24;
      --v23;
    }
    while (v23);
    a1 = v39;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10096BF90();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  v55._uint64_t countAndFlagsBits = v27;
  v55._char object = v29;
  sub_10096BDC0(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 41;
  v56._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v56);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 40;
  v57._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v57);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 0xD000000000000035;
  v58._char object = (void *)0x80000001009BFF50;
  sub_10096BDC0(v58);
  if (v2)
  {
    sub_100446214(0, v2, 0);
    uint64_t v30 = (uint64_t *)(a1 + 32);
    unint64_t v31 = _swiftEmptyArrayStorage[2];
    do
    {
      uint64_t v33 = *v30++;
      uint64_t v32 = v33;
      unint64_t v34 = _swiftEmptyArrayStorage[3];
      if (v31 >= v34 >> 1) {
        sub_100446214(v34 > 1, v31 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v31 + 1;
      _swiftEmptyArrayStorage[v31++ + 4] = v32;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10096BF90();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  v59._uint64_t countAndFlagsBits = v35;
  v59._char object = v37;
  sub_10096BDC0(v59);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 41;
  v60._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v60);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 40;
  v61._char object = (void *)0xE100000000000000;
  sub_10096BDC0(v61);
  swift_bridgeObjectRelease();
  v62._uint64_t countAndFlagsBits = 0x29444E4520200ALL;
  v62._char object = (void *)0xE700000000000000;
  sub_10096BDC0(v62);
  return 0;
}

uint64_t sub_100966C2C()
{
  sub_10002B7CC(&qword_100AD0EB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BA0;
  *(_OWORD *)(inited + 32) = xmmword_10097D7A0;
  uint64_t v1 = sub_100966534(inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_100966CC8()
{
  sub_10002B7CC(&qword_100AD0EB8);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_10097C0C0;
  inited[2] = xmmword_1009861B0;
  inited[3] = xmmword_1009861C0;
  uint64_t v1 = sub_100966534((uint64_t)inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_100966D70()
{
  sub_10002B7CC(&qword_100AD0EB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = 501;
  uint64_t v1 = sub_100966534(inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_100966E0C()
{
  sub_10096CBD0(183);
  v1._uint64_t countAndFlagsBits = 0xD000000000000016;
  v1._char object = (void *)0x80000001009BFDC0;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x444E41202020200ALL;
  v3._char object = (void *)0xE900000000000020;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_100966CC8();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x2820524F20200A29;
  v5._char object = (void *)0xE800000000000000;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_100966C2C();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xD000000000000024;
  v7._char object = (void *)0x80000001009BFDE0;
  sub_10096BDC0(v7);
  v8._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x20200A2930203D20;
  v9._char object = (void *)0xEC0000002820524FLL;
  sub_10096BDC0(v9);
  v10._uint64_t countAndFlagsBits = sub_100966D70();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0xD000000000000024;
  v11._char object = (void *)0x80000001009BFDE0;
  sub_10096BDC0(v11);
  v12._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0xD000000000000028;
  v13._char object = (void *)0x80000001009BFE10;
  sub_10096BDC0(v13);
  v14._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x292930203D20;
  v15._char object = (void *)0xE600000000000000;
  sub_10096BDC0(v15);
  return 0;
}

uint64_t sub_1009670AC()
{
  sub_10096CBD0(90);
  v1._uint64_t countAndFlagsBits = 0x20200A4553414328;
  v1._char object = (void *)0xEE0028204E454857;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_100966D70();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._char object = (void *)0x80000001009BFDE0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000024;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x4854202930203D20;
  v5._char object = (void *)0xEF202020200A4E45;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0xA45534C4520200ALL;
  v7._char object = (void *)0xEC00000020202020;
  sub_10096BDC0(v7);
  v8._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x29444E450ALL;
  v9._char object = (void *)0xE500000000000000;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_100967278()
{
  return swift_deallocObject();
}

uint64_t sub_100967288(uint64_t a1)
{
  return sub_1009619F0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100967290()
{
  return swift_deallocObject();
}

uint64_t sub_1009672A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009606F4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1009672C0(uint64_t a1)
{
  return sub_100967AE0(a1, 72, 0x61747320444E4120, 0xED0000203D206574, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10095FEF4);
}

uint64_t sub_1009672FC()
{
  return swift_deallocObject();
}

uint64_t sub_10096730C()
{
  uint64_t v24 = type metadata accessor for ItemReconciliation();
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
  uint64_t v1 = v0 + ((v23 + 48) & ~v23);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, AssociatedTypeWitness);
  }
  Swift::String v4 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v5 = v1 + v4[12];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5 + *(int *)(v8 + 56), v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000D31F8(*(void *)(v1 + v4[16]), *(void *)(v1 + v4[16] + 8), *(unsigned char *)(v1 + v4[16] + 16));
  uint64_t v9 = v1 + v4[17];
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 >> 60 != 11 && v10 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v9 + 8), v10);
  }

  uint64_t v12 = v1 + *(int *)(v24 + 52);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  Swift::String v15 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v16 = v12 + v15[12];
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = type metadata accessor for FileItemVersion();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v16, 1, v19))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16 + *(int *)(v19 + 56), v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000D31F8(*(void *)(v12 + v15[16]), *(void *)(v12 + v15[16] + 8), *(unsigned char *)(v12 + v15[16] + 16));
  uint64_t v20 = v12 + v15[17];
  unint64_t v21 = *(void *)(v20 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v20 + 8), v21);
  }

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1009678B4(void *a1)
{
  type metadata accessor for ItemReconciliation();

  return sub_10095F96C(a1);
}

uint64_t sub_100967960()
{
  return swift_deallocObject();
}

uint64_t sub_100967970(uint64_t a1)
{
  return sub_10095F280(a1);
}

uint64_t sub_100967978()
{
  return swift_deallocObject();
}

uint64_t sub_100967988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100955248();
  *a1 = result;
  return result;
}

uint64_t sub_1009679B4()
{
  return sub_10095525C();
}

uint64_t sub_1009679DC()
{
  return 32;
}

__n128 sub_1009679E8(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1009679F4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100967A2C(uint64_t a1)
{
  return sub_10095EFEC(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100967A38()
{
  return swift_deallocObject();
}

void sub_100967A48(void (***a1)(char *, uint64_t *, uint64_t)@<X8>)
{
  sub_10095C318(v1, a1);
}

uint64_t sub_100967A64()
{
  return swift_deallocObject();
}

uint64_t sub_100967A74()
{
  return sub_100954E30(*(void *)(v0 + 16), *(void (**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_100967A80()
{
  return swift_deallocObject();
}

uint64_t sub_100967A90(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1003545C4(result, a2 & 1);
  }
  return result;
}

uint64_t sub_100967AAC(uint64_t a1)
{
  return sub_100967AE0(a1, 53, 0xD000000000000033, 0x80000001009BFB30, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10095DDAC);
}

uint64_t sub_100967AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *((void *)v5 + 2);
  uint64_t v12 = *((void *)v5 + 3);
  uint64_t v13 = *((void *)v5 + 4);
  uint64_t v14 = *((void *)v5 + 5);
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return a5(a1, &v5[(*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)], v11, v12, v13, v14, a2, a3, a4);
}

uint64_t sub_100967BBC()
{
  return swift_deallocObject();
}

unint64_t sub_100967BCC(void *a1)
{
  return sub_10058B0C0(a1, *(void *)(v1 + 16) & ~(*(uint64_t *)(v1 + 16) >> 63), *(void *)(v1 + 16) >> 63, *(void *)(v1 + 24) & ~(*(uint64_t *)(v1 + 24) >> 63), *(void *)(v1 + 24) >> 63);
}

uint64_t sub_100967BE4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_100967C98(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10095C0CC(a1, v1 + v4, v5);
}

uint64_t sub_100967D78()
{
  return swift_deallocObject();
}

uint64_t sub_100967D8C(uint64_t a1)
{
  return sub_100967AE0(a1, 57, 0xD000000000000037, 0x80000001009A5550, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10095DDAC);
}

uint64_t sub_100967DC0()
{
  return swift_deallocObject();
}

uint64_t sub_100967DD0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_100967E78(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v1 + 48);

  return sub_10095BB18(a1, v3);
}

uint64_t sub_100967F2C()
{
  return swift_deallocObject();
}

uint64_t sub_100967F40()
{
  return swift_deallocObject();
}

uint64_t sub_100967F54(uint64_t a1)
{
  return sub_100967AE0(a1, 75, 0xD000000000000010, 0x8000000100997C20, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10095FEF4);
}

uint64_t sub_100967F88()
{
  return swift_deallocObject();
}

uint64_t sub_100967F98()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10096805C(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v6);
  char v10 = *(unsigned char *)(v1 + v6 + 8);
  uint64_t v11 = v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void *)v11;
  char v13 = *(unsigned char *)(v11 + 8);

  return sub_100959F48(a1, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_100968138()
{
  return swift_deallocObject();
}

uint64_t sub_100968148()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_100968204(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  return sub_10095A36C(a1, v1 + v4, *(void *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100968308()
{
  return swift_deallocObject();
}

uint64_t sub_100968318()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009683DC(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  char v11 = *(unsigned char *)(v1 + v6 + 8);
  uint64_t v12 = v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);

  return sub_10095A0EC(a1, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t sub_1009684BC()
{
  return swift_deallocObject();
}

uint64_t sub_1009684CC(uint64_t a1)
{
  return sub_100959244(a1, v1, 420, 0xD0000000000000CBLL, (void *)0x80000001009C02B0);
}

uint64_t sub_100968504()
{
  return swift_deallocObject();
}

uint64_t sub_100968514()
{
  return sub_100958FF4();
}

uint64_t sub_10096851C()
{
  return swift_deallocObject();
}

uint64_t sub_10096852C(uint64_t a1)
{
  return sub_100959244(a1, v1, 396, 0xD0000000000000B3, (void *)0x80000001009BFC20);
}

uint64_t sub_100968564()
{
  return swift_deallocObject();
}

uint64_t sub_100968574()
{
  return swift_deallocObject();
}

uint64_t sub_100968584()
{
  return sub_1009584D0();
}

uint64_t sub_100968590()
{
  return swift_deallocObject();
}

uint64_t sub_1009685A0()
{
  return swift_deallocObject();
}

uint64_t sub_1009685B0()
{
  return sub_1009579F4();
}

uint64_t sub_1009685BC()
{
  return swift_deallocObject();
}

uint64_t sub_1009685CC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10096860C()
{
  sub_10095743C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100968614()
{
}

uint64_t sub_10096862C@<X0>(char *a1@<X8>)
{
  return sub_10095689C(v1, a1);
}

uint64_t sub_100968634()
{
  return sub_1009566F0();
}

uint64_t sub_100968650()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100968688()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009686C0(uint64_t a1)
{
  return sub_1009686F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100956308);
}

uint64_t sub_1009686D8(uint64_t a1)
{
  return sub_1009686F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100956378);
}

uint64_t sub_1009686F0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100968708(char a1)
{
  return sub_1009563D0(a1);
}

uint64_t sub_100968718()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100968758(char a1)
{
  return sub_1009556D4(a1);
}

uint64_t sub_100968768()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009687A0()
{
  return sub_100955800(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1009687C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10095527C();
  *a1 = result;
  return result;
}

uint64_t sub_1009687EC()
{
  return sub_100955380();
}

uint64_t sub_100968814()
{
  return 32;
}

__n128 sub_100968820(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_10096882C()
{
  return swift_deallocObject();
}

uint64_t sub_10096883C()
{
  return swift_deallocObject();
}

uint64_t sub_10096884C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100AD67E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BackgroundWorkReason()
{
  return &type metadata for BackgroundWorkReason;
}

unint64_t sub_1009688C8()
{
  unint64_t result = qword_100ADF6A8;
  if (!qword_100ADF6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF6A8);
  }
  return result;
}

unint64_t sub_100968920()
{
  unint64_t result = qword_100ADF6B0;
  if (!qword_100ADF6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF6B0);
  }
  return result;
}

uint64_t sub_100968974()
{
  return sub_100025500(&qword_100ADF6B8, &qword_100ADF6C0);
}

unint64_t sub_1009689B4()
{
  unint64_t result = qword_100ADF6C8;
  if (!qword_100ADF6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF6C8);
  }
  return result;
}

unint64_t sub_100968A0C()
{
  unint64_t result = qword_100ADF6D0;
  if (!qword_100ADF6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF6D0);
  }
  return result;
}

uint64_t sub_100968A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100968B60(a1, a2, a3, (uint64_t (*)(void))sub_100968A8C, (uint64_t (*)(void))sub_100968AE0);
}

unint64_t sub_100968A8C()
{
  unint64_t result = qword_100ADF6F8;
  if (!qword_100ADF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF6F8);
  }
  return result;
}

unint64_t sub_100968AE0()
{
  unint64_t result = qword_100ADF700;
  if (!qword_100ADF700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF700);
  }
  return result;
}

uint64_t sub_100968B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100968B60(a1, a2, a3, (uint64_t (*)(void))sub_100968B9C, (uint64_t (*)(void))sub_100968BF0);
}

uint64_t sub_100968B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100968B9C()
{
  unint64_t result = qword_100ADF708;
  if (!qword_100ADF708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF708);
  }
  return result;
}

unint64_t sub_100968BF0()
{
  unint64_t result = qword_100ADF710;
  if (!qword_100ADF710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADF710);
  }
  return result;
}

void sub_100968DE4(NSObject *a1)
{
  uint64_t v2 = __error();
  long long v3 = strerror(*v2);
  int v4 = 136315138;
  unint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_ERROR, "[ERROR] Unable to getattrlist: %s", (uint8_t *)&v4, 0xCu);
}

void sub_100968E78(int *a1, uint8_t *buf, os_log_t log)
{
  int v3 = *a1;
  *(_DWORD *)buf = 67109120;
  *((_DWORD *)buf + 1) = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[ERROR] Couldn't open stream: %{errno}d", buf, 8u);
}

void sub_100968EC4(void *a1, void *a2, NSObject *a3)
{
  unint64_t v5 = objc_msgSend(a1, "fp_shortDescription");
  unint64_t v6 = objc_msgSend(a2, "fp_prettyDescription");
  int v7 = 138412546;
  uint64_t v8 = v5;
  __int16 v9 = 2112;
  uint64_t v10 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "[ERROR] cannot build descriptor for detached item %@: %@", (uint8_t *)&v7, 0x16u);
}

void sub_100968F88(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] 🚧  no reader (%@) or associated barrier folder URL", (uint8_t *)&v2, 0xCu);
}

void sub_100969000(void *a1, NSObject *a2)
{
  uint64_t v3 = objc_msgSend(a1, "fp_shortDescription");
  int v4 = 138412546;
  unint64_t v5 = v3;
  __int16 v6 = 2048;
  FSEventStreamEventId CurrentEventId = FSEventsGetCurrentEventId();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] 🚧  setting up new barrier with rendez-vous %@ (currentID=%llu)", (uint8_t *)&v4, 0x16u);
}

void sub_1009690A8(void *a1, NSObject *a2)
{
  uint64_t v3 = objc_msgSend(a1, "fp_shortDescription");
  int v4 = 138412290;
  unint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] 🚧  updating existing barrier to new rendez-vous %@", (uint8_t *)&v4, 0xCu);
}

void sub_100969140(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] 🚧  handle event on barrier %@", (uint8_t *)&v2, 0xCu);
}

void sub_1009691B8()
{
}

void sub_1009691E4()
{
}

void sub_100969210()
{
}

void sub_10096923C(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "fp_prettyDescription");
  sub_100086F24((void *)&_mh_execute_header, v2, v3, "[ERROR] 🧹 FPCK error restoring persona during XPC Service preparation %@", v4, v5, v6, v7, 2u);
}

void sub_1009692C4(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "fp_prettyDescription");
  sub_100086F24((void *)&_mh_execute_header, v2, v3, "[ERROR] 🧹 FPCK error adopting persona during XPC Service preparation %@", v4, v5, v6, v7, 2u);
}

void sub_10096934C(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "fp_shortDescription");
  sub_100086F24((void *)&_mh_execute_header, v2, v3, "[ERROR] Unable to launch FPCK, unable to sandbox wrap URL: %@", v4, v5, v6, v7, 2u);
}

void sub_1009693D4()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Creating new FSEvent stream %s", v2, v3, v4, v5, v6);
}

void sub_10096943C()
{
  sub_1000874EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "[ERROR] Unable to defer FSEvent XPC activity on stream %s", v1, 0xCu);
}

void sub_1009694B0()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Defer processing of FSEvents on stream %s per XPC activity", v2, v3, v4, v5, v6);
}

void sub_100969518()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Suspending FSEvent stream %s", v2, v3, v4, v5, v6);
}

void sub_100969580()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Resuming FSEvent stream %s <XPC activity already running>", v2, v3, v4, v5, v6);
}

void sub_1009695E8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100969658()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Stop processing of FSEvents on stream %s", v2, v3, v4, v5, v6);
}

void sub_1009696C0()
{
  sub_1000874EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "[ERROR] Unable to mark done FSEvent XPC activity on stream %s", v1, 0xCu);
}

void sub_100969734(const __CFString *a1, NSObject *a2)
{
  CFStringRef v2 = @"success";
  if (a1) {
    CFStringRef v2 = a1;
  }
  int v3 = 138412290;
  CFStringRef v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] reporting d2d backup telemetry with %@", (uint8_t *)&v3, 0xCu);
}

void sub_1009697BC()
{
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "Cloning file failed [%llu]: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_10096983C()
{
  __assert_rtn("fpfs_wharf_unload", "fpfs_wharf.c", 963, "attrs->item_handle.doc_id == 0");
}

void sub_100969868()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
}

void sub_1009698E4()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "BSD flags cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_100969960()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "stat of item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_1009699DC()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "ACL cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_100969A58()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "xattr cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_100969AD4()
{
  sub_10008C904();
  __error();
  sub_10008C8CC();
  sub_10008C8E4((void *)&_mh_execute_header, v0, v1, "Permission cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
}

void sub_100969B50(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "skipping unsupported object in package", v1, 2u);
}

void sub_100969B94(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "skipping compressed / unreadable object in package", v1, 2u);
}

void sub_100969BD8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "couldn't clone package", v1, 2u);
}

void sub_100969C1C()
{
}

void sub_100969C48()
{
  sub_1000874EC();
  sub_100090CC4((void *)&_mh_execute_header, v0, v1, "[DEBUG] Observing %@ (%s)");
}

void sub_100969CD8(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "com.apple.fpfs.fsevents";
  __int16 v4 = 2048;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] Creating stream with name %s since %llu", (uint8_t *)&v2, 0x16u);
}

void sub_100969D64()
{
}

void sub_100969D90()
{
  sub_100090D30();
  sub_100090CE4((void *)&_mh_execute_header, v0, v1, "[DEBUG] Incoming events need deep scan.  Dropping all existing events", v2, v3, v4, v5, v6);
}

void sub_100969DC4()
{
  sub_100090D30();
  sub_100090CE4((void *)&_mh_execute_header, v0, v1, "[DEBUG] Already need deep scan.  Dropping all incoming events", v2, v3, v4, v5, v6);
}

void sub_100969DF8()
{
  sub_100090D18();
  sub_100090CC4((void *)&_mh_execute_header, v0, v1, "[DEBUG] %@ (handling barrier - %@)");
}

void sub_100969E60()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] %@ processing", v2, v3, v4, v5, v6);
}

void sub_100969EC8(void *a1, uint64_t a2, NSObject *a3)
{
  [a1 rootFileID];
  sub_100090D00();
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "[CRIT] The root fileID changed from %llu to %llu", v4, 0x16u);
}

void sub_100969F58(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 root];
  int v4 = *__error();
  int v5 = 138412546;
  uint8_t v6 = v3;
  __int16 v7 = 1024;
  int v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[ERROR] Cannot stat root at '%@' after fsevent:%{errno}d", (uint8_t *)&v5, 0x12u);
}

void sub_10096A004()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] %@ (ignored uninteresting path)", v2, v3, v4, v5, v6);
}

void sub_10096A06C()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] %@ (dropped event)", v2, v3, v4, v5, v6);
}

void sub_10096A0D4()
{
  sub_1000874EC();
  sub_1000874D0((void *)&_mh_execute_header, v0, v1, "[DEBUG] Historical stream is being processed - enqueuing barrier event %@", v2, v3, v4, v5, v6);
}

void sub_10096A13C()
{
  sub_100090D00();
  sub_100090CC4((void *)&_mh_execute_header, v0, v1, "[DEBUG] %@ ignore event #%llu (own event)");
}

void sub_10096A1A8(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  *(_DWORD *)a2 = 134218242;
  *(void *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = a1;
  id v6 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_DEBUG, "[DEBUG] ┏%llx closing the %@", (uint8_t *)a2, 0x16u);
}

void sub_10096A220(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  if ((unint64_t)(a2 - 1) > 9) {
    CFStringRef v6 = @"unspecified reason";
  }
  else {
    CFStringRef v6 = off_100A6A1C0[a2 - 1];
  }
  *(_DWORD *)a3 = 138412546;
  *(void *)(a3 + 4) = a1;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = v6;
  id v7 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_DEBUG, "[DEBUG] resetting the %@ because of %@", (uint8_t *)a3, 0x16u);
}

void sub_10096A2BC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10096A32C()
{
  sub_100090D30();
  sub_100090CE4((void *)&_mh_execute_header, v0, v1, "[DEBUG] creating the new stream", v2, v3, v4, v5, v6);
}

void sub_10096A360(int a1, NSObject *a2)
{
  v2[0] = 67109376;
  v2[1] = a1;
  __int16 v3 = 1024;
  int v4 = a1 + 1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] suspending - suspendCount:%d->%d", (uint8_t *)v2, 0xEu);
}

void sub_10096A3E8()
{
  __assert_rtn("-[FSChangeMonitor resume]", "FSChangeMonitor.m", 1004, "suspendCount >= 0");
}

void sub_10096A414()
{
  sub_100090D30();
  sub_100090CE4((void *)&_mh_execute_header, v0, v1, "[DEBUG] Starting FSEvents stream", v2, v3, v4, v5, v6);
}

void sub_10096A448(int a1, int a2, os_log_t log)
{
  v3[0] = 67109376;
  v3[1] = a1;
  __int16 v4 = 1024;
  int v5 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[DEBUG] resuming - suspendCount:%d->%d", (uint8_t *)v3, 0xEu);
}

uint64_t sub_10096A4D0()
{
  return CocoaError._nsError.getter();
}

uint64_t sub_10096A4E0()
{
  return static CocoaError.userCancelled.getter();
}

uint64_t sub_10096A4F0()
{
  return static CocoaError.fileNoSuchFile.getter();
}

uint64_t sub_10096A500()
{
  return static CocoaError.featureUnsupported.getter();
}

uint64_t sub_10096A510()
{
  return static CocoaError.fileReadNoSuchFile.getter();
}

uint64_t sub_10096A520()
{
  return static CocoaError.fileWriteFileExists.getter();
}

uint64_t sub_10096A530()
{
  return static CocoaError.fileWriteOutOfSpace.getter();
}

uint64_t sub_10096A540()
{
  return static CocoaError.fileReadNoPermission.getter();
}

uint64_t sub_10096A550()
{
  return static CocoaError.xpcConnectionInvalid.getter();
}

uint64_t sub_10096A560()
{
  return static CocoaError.Code.fileLocking.getter();
}

uint64_t sub_10096A570()
{
  return static CocoaError.Code.userCancelled.getter();
}

uint64_t sub_10096A580()
{
  return static CocoaError.Code.fileNoSuchFile.getter();
}

uint64_t sub_10096A590()
{
  return static CocoaError.Code.fileReadUnknown.getter();
}

uint64_t sub_10096A5A0()
{
  return static CocoaError.Code.fileWriteUnknown.getter();
}

uint64_t sub_10096A5B0()
{
  return static CocoaError.Code.coderInvalidValue.getter();
}

uint64_t sub_10096A5C0()
{
  return static CocoaError.Code.featureUnsupported.getter();
}

uint64_t sub_10096A5D0()
{
  return static CocoaError.Code.fileReadNoSuchFile.getter();
}

uint64_t sub_10096A5E0()
{
  return static CocoaError.Code.fileWriteFileExists.getter();
}

uint64_t sub_10096A5F0()
{
  return static CocoaError.Code.fileReadNoPermission.getter();
}

uint64_t sub_10096A600()
{
  return static CocoaError.Code.fileWriteNoPermission.getter();
}

uint64_t sub_10096A610()
{
  return static CocoaError.Code.ubiquitousFileUnavailable.getter();
}

uint64_t sub_10096A620()
{
  return CocoaError.Code.rawValue.getter();
}

uint64_t sub_10096A630()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t sub_10096A640()
{
  return static CocoaError.error(_:userInfo:url:)();
}

uint64_t sub_10096A650()
{
  return type metadata accessor for CocoaError();
}

uint64_t sub_10096A660()
{
  return NSNotFound.getter();
}

uint64_t sub_10096A670()
{
  return static POSIXError.ENAMETOOLONG.getter();
}

uint64_t sub_10096A680()
{
  return static POSIXError.EBUSY.getter();
}

uint64_t sub_10096A690()
{
  return static POSIXError.ENXIO.getter();
}

uint64_t sub_10096A6A0()
{
  return static POSIXError.EPERM.getter();
}

uint64_t sub_10096A6B0()
{
  return static POSIXError.EACCES.getter();
}

uint64_t sub_10096A6C0()
{
  return static POSIXError.EAGAIN.getter();
}

uint64_t sub_10096A6D0()
{
  return static POSIXError.EEXIST.getter();
}

uint64_t sub_10096A6E0()
{
  return static POSIXError.EINVAL.getter();
}

uint64_t sub_10096A6F0()
{
  return static POSIXError.EISDIR.getter();
}

uint64_t sub_10096A700()
{
  return static POSIXError.EMLINK.getter();
}

uint64_t sub_10096A710()
{
  return static POSIXError.ENOENT.getter();
}

uint64_t sub_10096A720()
{
  return static POSIXError.ENOLCK.getter();
}

uint64_t sub_10096A730()
{
  return static POSIXError.ENOSPC.getter();
}

uint64_t sub_10096A740()
{
  return static POSIXError.ESTALE.getter();
}

uint64_t sub_10096A750()
{
  return static POSIXError.ENOATTR.getter();
}

uint64_t sub_10096A760()
{
  return static POSIXError.ENOTDIR.getter();
}

uint64_t sub_10096A770()
{
  return static POSIXError.ENOTSUP.getter();
}

uint64_t sub_10096A780()
{
  return static POSIXError.EALREADY.getter();
}

uint64_t sub_10096A790()
{
  return POSIXError._nsError.getter();
}

uint64_t sub_10096A7A0()
{
  return static POSIXError.ENOTEMPTY.getter();
}

uint64_t sub_10096A7B0()
{
  return type metadata accessor for POSIXError();
}

uint64_t sub_10096A7C0()
{
  return static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)();
}

uint64_t sub_10096A7D0()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_10096A7E0()
{
  return JSONDecoder.init()();
}

uint64_t sub_10096A7F0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_10096A800()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_10096A810()
{
  return JSONEncoder.init()();
}

uint64_t sub_10096A820()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_10096A830()
{
  return static CharacterSet.controlCharacters.getter();
}

uint64_t sub_10096A840()
{
  return static CharacterSet.newlines.getter();
}

uint64_t sub_10096A850()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_10096A860()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_10096A870()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_10096A880()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_10096A890()
{
  return __DataStorage._length.getter();
}

uint64_t sub_10096A8A0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_10096A8B0()
{
  return __DataStorage.init(capacity:)();
}

uint64_t sub_10096A8C0()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_10096A8D0()
{
  return DateComponents.isValidDate.getter();
}

uint64_t sub_10096A8E0()
{
  return DateComponents.nanosecond.setter();
}

uint64_t sub_10096A8F0()
{
  return DateComponents.date.getter();
}

uint64_t sub_10096A900()
{
  return DateComponents.hour.setter();
}

uint64_t sub_10096A910()
{
  return DateComponents.minute.setter();
}

uint64_t sub_10096A920()
{
  return DateComponents.second.setter();
}

uint64_t sub_10096A930()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_10096A940()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_10096A950()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_10096A960()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_10096A970()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_10096A980()
{
  return URLResourceValues.allValues.getter();
}

uint64_t sub_10096A990()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t sub_10096A9A0()
{
  return URLResourceValues.creationDate.getter();
}

uint64_t sub_10096A9B0()
{
  return URLResourceValues.canonicalPath.getter();
}

uint64_t sub_10096A9C0()
{
  return URLResourceValues.fileProtection.getter();
}

uint64_t sub_10096A9D0()
{
  return URLResourceValues.typeIdentifier.getter();
}

uint64_t sub_10096A9E0()
{
  return URLResourceValues.documentIdentifier.getter();
}

uint64_t sub_10096A9F0()
{
  return URLResourceValues.isExcludedFromBackup.setter();
}

uint64_t sub_10096AA00()
{
  return URLResourceValues.contentType.getter();
}

uint64_t sub_10096AA10()
{
  return URLResourceValues.contentModificationDate.getter();
}

uint64_t sub_10096AA20()
{
  return URLResourceValues.volumeSupportsCaseSensitiveNames.getter();
}

uint64_t sub_10096AA30()
{
  return URLResourceValues.fileSize.getter();
}

uint64_t sub_10096AA40()
{
  return URLResourceValues.init()();
}

uint64_t sub_10096AA50()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t sub_10096AA60()
{
  return static _ErrorCodeProtocol.~= infix(_:_:)();
}

uint64_t sub_10096AA70()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_10096AA80()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_10096AA90()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_10096AAA0()
{
  return dispatch thunk of PropertyListEncoder.outputFormat.setter();
}

uint64_t sub_10096AAB0()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_10096AAC0()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_10096AAD0()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_10096AAE0()
{
  return type metadata accessor for ByteCountFormatStyle.Style();
}

uint64_t sub_10096AAF0()
{
  return static ByteCountFormatStyle.Units.all.getter();
}

uint64_t sub_10096AB00()
{
  return type metadata accessor for ByteCountFormatStyle.Units();
}

uint64_t sub_10096AB10()
{
  return type metadata accessor for ByteCountFormatStyle();
}

uint64_t sub_10096AB20()
{
  return PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)();
}

Class sub_10096AB30()
{
  return PersonNameComponents._bridgeToObjectiveC()().super.isa;
}

uint64_t sub_10096AB40()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096AB50()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t sub_10096ABA0()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t sub_10096ABC0()
{
  return _BridgedStoredNSError.errorCode.getter();
}

uint64_t sub_10096ABD0()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t sub_10096ABE0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_10096ABF0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10096AC00()
{
  return FloatingPointFormatStyle.Percent.init(locale:)();
}

uint64_t sub_10096AC10()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t sub_10096AC20()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_10096AC30()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t sub_10096AC40()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

uint64_t sub_10096AC50()
{
  return URL.isFileURL.getter();
}

uint64_t sub_10096AC60()
{
  return URL.description.getter();
}

uint64_t sub_10096AC70()
{
  return URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)();
}

uint64_t sub_10096AC80()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_10096AC90()
{
  return URL.pathExtension.getter();
}

uint64_t sub_10096ACA0()
{
  return URL.pathComponents.getter();
}

uint64_t sub_10096ACB0()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t sub_10096ACC0()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t sub_10096ACD0()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_10096ACE0()
{
  return static URL.desktopDirectory.getter();
}

uint64_t sub_10096ACF0()
{
  return URL.lastPathComponent.getter();
}

uint64_t sub_10096AD00()
{
  return URL.setResourceValues(_:)();
}

uint64_t sub_10096AD10()
{
  return static URL.documentsDirectory.getter();
}

void sub_10096AD20(NSURL *retstr@<X8>)
{
}

void sub_10096AD30(Swift::String a1)
{
}

uint64_t sub_10096AD40()
{
  return URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)();
}

uint64_t sub_10096AD50()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_10096AD60()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_10096AD70()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t sub_10096AD80()
{
  return URL.deletingLastPathComponent()();
}

void sub_10096AD90(NSURLResourceKey forKey)
{
}

uint64_t sub_10096ADA0()
{
  return static URL.== infix(_:_:)();
}

uint64_t sub_10096ADB0()
{
  return URL.withUnsafeFileSystemRepresentation<A>(_:)();
}

void sub_10096ADC0()
{
}

uint64_t sub_10096ADD0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_10096ADE0()
{
  return URL.startAccessingSecurityScopedResource()();
}

uint64_t sub_10096ADF0()
{
  return URL.hash(into:)();
}

uint64_t sub_10096AE00(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_10096AE10()
{
  return URL.path.getter();
}

uint64_t sub_10096AE20()
{
  return URL.init(string:)();
}

uint64_t sub_10096AE30()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_10096AE40()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_10096AE50()
{
  return type metadata accessor for URL();
}

void sub_10096AE60()
{
}

uint64_t sub_10096AE70()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_10096AE80()
{
  return Data.Deallocator._deallocator.getter();
}

uint64_t sub_10096AE90()
{
  return type metadata accessor for Data.Deallocator();
}

uint64_t sub_10096AEA0()
{
  return Data.description.getter();
}

uint64_t sub_10096AEB0()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t sub_10096AEC0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_10096AED0()
{
  return Data._Representation.count.setter();
}

uint64_t sub_10096AEE0()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t sub_10096AEF0()
{
  return Data._Representation.subscript.getter();
}

uint64_t sub_10096AF00()
{
  return Data.withUnsafeBytes<A>(_:)();
}

uint64_t sub_10096AF10()
{
  return Data._copyBytesHelper(to:from:)();
}

NSData sub_10096AF20()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10096AF30(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_10096AF40()
{
  return static Data._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10096AF50()
{
  return static Data._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10096AF60()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096AF70()
{
  return Data.init(from:)();
}

uint64_t sub_10096AF80()
{
  return Data.hash(into:)();
}

uint64_t sub_10096AF90()
{
  return Data.write(to:options:)();
}

uint64_t sub_10096AFA0()
{
  return Data.append(_:)();
}

uint64_t sub_10096AFB0()
{
  return Data.encode(to:)();
}

uint64_t sub_10096AFC0()
{
  return Data.copyBytes(to:count:)();
}

uint64_t sub_10096AFD0()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_10096AFE0()
{
  return Date.description.getter();
}

uint64_t sub_10096AFF0()
{
  return Date.init(timeInterval:since:)();
}

uint64_t sub_10096B000()
{
  return static Date.distantFuture.getter();
}

uint64_t sub_10096B010()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_10096B020()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_10096B030()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_10096B040()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_10096B050()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_10096B060()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_10096B070()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_10096B080()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_10096B090()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_10096B0A0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096B0B0()
{
  return static Date.now.getter();
}

uint64_t sub_10096B0C0()
{
  return Date.compare(_:)();
}

uint64_t sub_10096B0D0()
{
  return Date.init()();
}

uint64_t sub_10096B0E0()
{
  return type metadata accessor for Date();
}

uint64_t sub_10096B0F0()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_10096B100()
{
  return UUID.uuidString.getter();
}

uint64_t sub_10096B110()
{
  return UUID.description.getter();
}

NSUUID sub_10096B120()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_10096B130()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10096B140()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096B150()
{
  return UUID.init(uuid:)();
}

uint64_t sub_10096B160()
{
  return UUID.uuid.getter();
}

uint64_t sub_10096B170()
{
  return UUID.init()();
}

uint64_t sub_10096B180()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10096B190()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_10096B1A0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10096B1B0()
{
  return Calendar.dateComponents(in:from:)();
}

uint64_t sub_10096B1C0()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_10096B1D0()
{
  return static Calendar.current.getter();
}

uint64_t sub_10096B1E0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_10096B1F0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_10096B200()
{
  return static TimeZone.current.getter();
}

uint64_t sub_10096B210()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_10096B220()
{
  return type metadata accessor for URLError();
}

uint64_t sub_10096B230()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10096B240()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_10096B250()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10096B260()
{
  return UTTagClass.init(rawValue:)();
}

uint64_t sub_10096B270()
{
  return type metadata accessor for UTTagClass();
}

uint64_t sub_10096B280()
{
  return UTType.identifier.getter();
}

uint64_t sub_10096B290()
{
  return static UTType.resolvable.getter();
}

uint64_t sub_10096B2A0()
{
  return static UTType.symbolicLink.getter();
}

uint64_t sub_10096B2B0()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

UTType sub_10096B2C0()
{
  return UTType._bridgeToObjectiveC()();
}

uint64_t sub_10096B2D0()
{
  return static UTType._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096B2E0()
{
  return UTType.init(tag:tagClass:conformingTo:)();
}

uint64_t sub_10096B2F0()
{
  return static UTType.data.getter();
}

uint64_t sub_10096B300()
{
  return static UTType.item.getter();
}

uint64_t sub_10096B310()
{
  return static UTType.folder.getter();
}

uint64_t sub_10096B320()
{
  return static UTType.package.getter();
}

uint64_t sub_10096B330()
{
  return UTType.conforms(to:)();
}

uint64_t sub_10096B340()
{
  return static UTType.aliasFile.getter();
}

uint64_t sub_10096B350()
{
  return static UTType.directory.getter();
}

uint64_t sub_10096B360()
{
  return UTType.isDynamic.getter();
}

uint64_t sub_10096B370()
{
  return type metadata accessor for UTType();
}

uint64_t sub_10096B380()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_10096B390()
{
  return os_signpost(_:dso:log:name:signpostID:_:_:)();
}

uint64_t sub_10096B3A0()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t sub_10096B3B0()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_10096B3C0()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_10096B3D0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_10096B3E0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_10096B3F0()
{
  return OSSignposter.init(subsystem:category:)();
}

uint64_t sub_10096B400()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_10096B410()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_10096B420()
{
  return static OSLogIntegerFormatting.decimal.getter();
}

uint64_t sub_10096B430()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_10096B440()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_10096B450()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_10096B460()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_10096B470()
{
  return Logger.logObject.getter();
}

uint64_t sub_10096B480()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10096B490()
{
  return Logger.init(_:)();
}

uint64_t sub_10096B4A0()
{
  return POSIXErrorCode.init(rawValue:)();
}

uint64_t sub_10096B4B0()
{
  return POSIXErrorCode.rawValue.getter();
}

uint64_t sub_10096B4C0()
{
  return open(_:_:)();
}

uint64_t sub_10096B4D0()
{
  return errno.getter();
}

uint64_t sub_10096B4E0()
{
  return errno.setter();
}

uint64_t sub_10096B4F0(Swift::Int32 a1, Swift::Int32 a2, Swift::Int32 a3)
{
  return fcntl(_:_:_:)(a1, a2, a3);
}

uint64_t sub_10096B500()
{
  return S_IFMT.getter();
}

uint64_t sub_10096B510()
{
  return S_IFDIR.getter();
}

uint64_t sub_10096B520()
{
  return S_IFLNK.getter();
}

uint64_t sub_10096B530()
{
  return S_IRGRP.getter();
}

uint64_t sub_10096B540()
{
  return S_IROTH.getter();
}

uint64_t sub_10096B550()
{
  return S_IRUSR.getter();
}

uint64_t sub_10096B560()
{
  return S_IWGRP.getter();
}

uint64_t sub_10096B570()
{
  return S_IWOTH.getter();
}

uint64_t sub_10096B580()
{
  return S_IWUSR.getter();
}

uint64_t sub_10096B590()
{
  return S_IXGRP.getter();
}

uint64_t sub_10096B5A0()
{
  return S_IXOTH.getter();
}

uint64_t sub_10096B5B0()
{
  return S_IXUSR.getter();
}

void sub_10096B5C0()
{
}

uint64_t sub_10096B5D0()
{
  return Published.init(initialValue:)();
}

uint64_t sub_10096B5E0()
{
  return Published.projectedValue.getter();
}

uint64_t sub_10096B5F0()
{
  return static Published.subscript.modify();
}

uint64_t sub_10096B600()
{
  return static Published.subscript.getter();
}

uint64_t sub_10096B610()
{
  return static Published.subscript.setter();
}

uint64_t sub_10096B620()
{
  return type metadata accessor for Published();
}

uint64_t sub_10096B630()
{
  return Publisher.combineLatest<A>(_:)();
}

uint64_t sub_10096B640()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_10096B650()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t sub_10096B660()
{
  return Publisher.throttle<A>(for:scheduler:latest:)();
}

uint64_t sub_10096B670()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_10096B680()
{
  return Publisher<>.assign<A>(to:on:)();
}

uint64_t sub_10096B690()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t sub_10096B6A0()
{
  return NWPathMonitor.currentPath.getter();
}

uint64_t sub_10096B6B0()
{
  return NWPathMonitor.pathUpdateHandler.setter();
}

uint64_t sub_10096B6C0()
{
  return NWPathMonitor.start(queue:)();
}

uint64_t sub_10096B6D0()
{
  return NWPathMonitor.init()();
}

uint64_t sub_10096B6E0()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t sub_10096B6F0()
{
  return NWPath.usesInterfaceType(_:)();
}

uint64_t sub_10096B700()
{
  return type metadata accessor for NWPath();
}

uint64_t sub_10096B710()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_10096B720()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t sub_10096B730()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10096B740()
{
  return DispatchQoS.QoSClass.init(rawValue:)();
}

uint64_t sub_10096B750()
{
  return DispatchQoS.QoSClass.rawValue.getter();
}

uint64_t sub_10096B760()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_10096B770()
{
  return static DispatchQoS.background.getter();
}

uint64_t sub_10096B780()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_10096B790()
{
  return static DispatchQoS.default.getter();
}

uint64_t sub_10096B7A0()
{
  return static DispatchQoS.utility.getter();
}

uint64_t sub_10096B7B0()
{
  return DispatchQoS.init(qosClass:relativePriority:)();
}

uint64_t sub_10096B7C0()
{
  return DispatchQoS.qosClass.getter();
}

uint64_t sub_10096B7D0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10096B7E0()
{
  return DispatchTime.init(uptimeNanoseconds:)();
}

uint64_t sub_10096B7F0()
{
  return static DispatchTime.< infix(_:_:)();
}

uint64_t sub_10096B800()
{
  return static DispatchTime.now()();
}

uint64_t sub_10096B810()
{
  return DispatchTime.advanced(by:)();
}

uint64_t sub_10096B820()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_10096B830()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_10096B840()
{
  return + infix(_:_:)();
}

uint64_t sub_10096B850()
{
  return + infix(_:_:)();
}

uint64_t sub_10096B860()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_10096B870()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_10096B880()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t sub_10096B890()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t sub_10096B8A0()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t sub_10096B8B0()
{
  return SymmetricKey.withUnsafeBytes<A>(_:)();
}

uint64_t sub_10096B8C0()
{
  return SymmetricKey.init<A>(data:)();
}

uint64_t sub_10096B8D0()
{
  return SymmetricKey.init(size:)();
}

uint64_t sub_10096B8E0()
{
  return type metadata accessor for SymmetricKey();
}

uint64_t sub_10096B8F0()
{
  return static SymmetricKeySize.bits256.getter();
}

uint64_t sub_10096B900()
{
  return type metadata accessor for SymmetricKeySize();
}

uint64_t sub_10096B910()
{
  return static HMAC.authenticationCode<A>(for:using:)();
}

uint64_t sub_10096B920()
{
  return static HMAC.isValidAuthenticationCode<A, B>(_:authenticating:using:)();
}

uint64_t sub_10096B930()
{
  return SHA256.finalize()();
}

uint64_t sub_10096B940()
{
  return SHA256.init()();
}

uint64_t sub_10096B950()
{
  return type metadata accessor for SHA256();
}

uint64_t sub_10096B960()
{
  return Dictionary.init()();
}

uint64_t sub_10096B970()
{
  return Array.init()();
}

uint64_t sub_10096B980()
{
  return Set.init()();
}

uint64_t sub_10096B990()
{
  return BinaryFloatingPoint.formatted<A>(_:)();
}

NSDictionary sub_10096B9A0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10096B9B0()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10096B9C0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096B9D0()
{
  return Dictionary.description.getter();
}

uint64_t sub_10096B9E0()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t sub_10096B9F0()
{
  return Dictionary.init(minimumCapacity:)();
}

uint64_t sub_10096BA00()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10096BA10()
{
  return type metadata accessor for Dictionary.Keys();
}

uint64_t sub_10096BA20()
{
  return Dictionary.count.getter();
}

uint64_t sub_10096BA30()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t sub_10096BA40()
{
  return Dictionary.filter(_:)();
}

uint64_t sub_10096BA50()
{
  return Dictionary.isEmpty.getter();
}

uint64_t sub_10096BA60()
{
  return type metadata accessor for Dictionary._Variant();
}

uint64_t sub_10096BA70()
{
  return Dictionary._Variant.subscript.modify();
}

uint64_t sub_10096BA80()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_10096BA90()
{
  return Dictionary.subscript.modify();
}

uint64_t sub_10096BAA0()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_10096BAB0()
{
  return Dictionary.subscript.setter();
}

uint64_t sub_10096BAC0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_10096BAD0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10096BAE0()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_10096BAF0()
{
  return Character.write<A>(to:)();
}

uint64_t sub_10096BB00()
{
  return BidirectionalCollection.difference<A>(from:by:)();
}

uint64_t sub_10096BB10()
{
  return BidirectionalCollection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_10096BB20()
{
  return BidirectionalCollection.index(_:offsetBy:)();
}

uint64_t sub_10096BB30()
{
  return BidirectionalCollection.distance(from:to:)();
}

uint64_t sub_10096BB40()
{
  return BidirectionalCollection.reversed()();
}

uint64_t sub_10096BB50()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10096BB60()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_10096BB70()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_10096BB80()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_10096BB90()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_10096BBA0()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_10096BBB0()
{
  return MutableCollection.subscript.getter();
}

uint64_t sub_10096BBC0()
{
  return MutableCollection<>.partition(by:)();
}

uint64_t sub_10096BBD0()
{
  return MutableCollection<>.sort()();
}

uint64_t sub_10096BBE0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10096BBF0()
{
  return String.init(utf8String:)();
}

NSString sub_10096BC00()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10096BC10()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10096BC20()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096BC40()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_10096BC50()
{
  return String.init(data:encoding:)();
}

uint64_t sub_10096BC60()
{
  return String.init(format:_:)();
}

uint64_t sub_10096BC70()
{
  return String.init(cString:encoding:)();
}

uint64_t sub_10096BC80()
{
  return static String.Encoding.macOSRoman.getter();
}

uint64_t sub_10096BC90()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_10096BCA0()
{
  return static String.Encoding.ascii.getter();
}

uint64_t sub_10096BCB0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_10096BCC0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10096BCD0()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_10096BCE0()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_10096BCF0()
{
  return String.utf8CString.getter();
}

uint64_t sub_10096BD00()
{
  return String.withCString<A>(_:)();
}

uint64_t sub_10096BD10()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_10096BD30()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10096BD40()
{
  return String.init(from:)();
}

uint64_t sub_10096BD50()
{
  return String.hash(into:)();
}

uint64_t sub_10096BD60()
{
  return String.count.getter();
}

uint64_t sub_10096BD70()
{
  return String.index(after:)();
}

uint64_t sub_10096BD80()
{
  return String.index(before:)();
}

uint64_t sub_10096BD90()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_10096BDA0()
{
  return String.index(_:offsetBy:)();
}

uint64_t sub_10096BDB0()
{
  return String.append<A>(contentsOf:)();
}

void sub_10096BDC0(Swift::String a1)
{
}

uint64_t sub_10096BDD0()
{
  return String.encode(to:)();
}

uint64_t sub_10096BDE0()
{
  return String.init(cString:)();
}

uint64_t sub_10096BDF0()
{
  return String.init(cString:)();
}

uint64_t sub_10096BE00()
{
  return String.Iterator.next()().value._countAndFlagsBits;
}

Swift::Int sub_10096BE10()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10096BE20()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_10096BE30()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_10096BE40()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t sub_10096BE50()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_10096BE60()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_10096BE70(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

BOOL sub_10096BE80(Swift::String a1)
{
  return String.hasSuffix(_:)(a1);
}

uint64_t sub_10096BE90()
{
  return String.hashValue.getter();
}

uint64_t sub_10096BEA0(Swift::String repeating, Swift::Int count)
{
  return String.init(repeating:count:)(repeating, count)._countAndFlagsBits;
}

uint64_t sub_10096BEB0()
{
  return String.init<A>(_:radix:uppercase:)();
}

uint64_t sub_10096BEC0()
{
  return String.subscript.getter();
}

uint64_t sub_10096BED0()
{
  return String.init<A>(_:)();
}

uint64_t sub_10096BEE0()
{
  return String.subscript.getter();
}

uint64_t sub_10096BEF0()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_10096BF00()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t sub_10096BF10()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t sub_10096BF20()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t sub_10096BF30()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_10096BF40()
{
  return Sequence.max(by:)();
}

uint64_t sub_10096BF50()
{
  return Sequence.lazy.getter();
}

uint64_t sub_10096BF60()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_10096BF70()
{
  return Sequence.contains(where:)();
}

uint64_t sub_10096BF80()
{
  return Sequence<>.contains(_:)();
}

uint64_t sub_10096BF90()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_10096BFA0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_10096BFB0()
{
  return dispatch thunk of RawRepresentable.init(rawValue:)();
}

uint64_t sub_10096BFC0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10096BFD0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10096BFE0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10096BFF0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10096C030()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10096C040()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10096C050()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10096C060()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10096C070()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10096C080()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10096C090()
{
  return static Array._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10096C0A0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096C0B0()
{
  return Array.description.getter();
}

uint64_t sub_10096C0C0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10096C0D0()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t sub_10096C0E0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_10096C0F0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10096C100()
{
  return static Array.+ infix(_:_:)();
}

uint64_t sub_10096C110()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_10096C120()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_10096C130()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_10096C140()
{
  return static Array.+= infix(_:_:)();
}

uint64_t sub_10096C150()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10096C160()
{
  return Array.count.getter();
}

uint64_t sub_10096C170()
{
  return Array.append<A>(contentsOf:)();
}

uint64_t sub_10096C180()
{
  return Array.append(_:)();
}

uint64_t sub_10096C190()
{
  return Array.remove(at:)();
}

uint64_t sub_10096C1A0()
{
  return Array.endIndex.getter();
}

Swift::Int sub_10096C1B0()
{
  return Array._getCount()();
}

uint64_t sub_10096C1C0()
{
  return type metadata accessor for Array();
}

uint64_t sub_10096C1D0()
{
  return Array<A>.hash(into:)();
}

uint64_t sub_10096C1E0()
{
  return static Array<A>.== infix(_:_:)();
}

uint64_t sub_10096C1F0()
{
  return Array.init<A>(_:)();
}

uint64_t sub_10096C200()
{
  return Array.subscript.getter();
}

uint64_t sub_10096C210()
{
  return Array.subscript.getter();
}

NSNumber sub_10096C220()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_10096C230()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10096C240()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_10096C250()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10096C260()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10096C270()
{
  return type metadata accessor for TaskPriority();
}

void sub_10096C280()
{
}

uint64_t sub_10096C290()
{
  return static Task<>.isCancelled.getter();
}

uint64_t sub_10096C2A0()
{
  return dispatch thunk of SerialExecutor.asUnownedSerialExecutor()();
}

uint64_t sub_10096C2B0()
{
  return Double.description.getter();
}

uint64_t sub_10096C2C0()
{
  return Double._roundSlowPath(_:)();
}

uint64_t sub_10096C2D0()
{
  return Double.write<A>(to:)();
}

NSSet sub_10096C2E0()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_10096C2F0()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10096C300()
{
  return Set.description.getter();
}

uint64_t sub_10096C310()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10096C320()
{
  return Set.count.getter();
}

uint64_t sub_10096C330()
{
  return Set.insert(_:)();
}

uint64_t sub_10096C340()
{
  return Set.remove(_:)();
}

uint64_t sub_10096C350()
{
  return Set.update(with:)();
}

uint64_t sub_10096C360()
{
  return Set.isEmpty.getter();
}

uint64_t sub_10096C370()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_10096C380()
{
  return Set.contains(_:)();
}

uint64_t sub_10096C390()
{
  return Set.formUnion<A>(_:)();
}

uint64_t sub_10096C3A0()
{
  return type metadata accessor for Set();
}

uint64_t sub_10096C3B0()
{
  return Set.init<A>(_:)();
}

NSNumber sub_10096C3C0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10096C3D0()
{
  return Int.init(from:)();
}

uint64_t sub_10096C3E0()
{
  return Int.encode(to:)();
}

uint64_t sub_10096C3F0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_10096C400()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_10096C410()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_10096C420()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_10096C440()
{
  return Collection.count.getter();
}

uint64_t sub_10096C450()
{
  return Collection.first.getter();
}

uint64_t sub_10096C460()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_10096C470()
{
  return Collection<>.indices.getter();
}

uint64_t sub_10096C480()
{
  return Collection<>.firstIndex(of:)();
}

uint64_t sub_10096C490()
{
  return Collection<>.subscript.getter();
}

uint64_t sub_10096C4A0()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_10096C4B0()
{
  return static RangeReplaceableCollection.+= infix<A>(_:_:)();
}

uint64_t sub_10096C4C0()
{
  return RangeReplaceableCollection<>.popLast()();
}

uint64_t sub_10096C4D0()
{
  return RangeReplaceableCollection<>.removeAll(where:)();
}

uint64_t sub_10096C4E0()
{
  return type metadata accessor for Range();
}

uint64_t sub_10096C4F0()
{
  return NSProgress.fileTotalCount.getter();
}

uint64_t sub_10096C500()
{
  return NSProgress.fileTotalCount.setter();
}

uint64_t sub_10096C510()
{
  return NSProgress.fileCompletedCount.getter();
}

uint64_t sub_10096C520()
{
  return NSProgress.fileCompletedCount.setter();
}

uint64_t sub_10096C530()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_10096C540()
{
  return NSEnumerator.makeIterator()();
}

uint64_t sub_10096C550()
{
  return NSFileHandle.write<A>(contentsOf:)();
}

uint64_t sub_10096C560()
{
  return NSFileHandle.readToEnd()();
}

uint64_t sub_10096C570()
{
  return NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();
}

uint64_t sub_10096C580()
{
  return NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)();
}

uint64_t sub_10096C590()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10096C5A0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10096C5B0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10096C5C0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10096C5D0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10096C5E0()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_10096C5F0()
{
  return OS_dispatch_group.wait(timeout:)();
}

void sub_10096C600()
{
}

uint64_t sub_10096C610()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_10096C620()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_10096C630()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10096C640()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_10096C650()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.nanoseconds(_:)();
}

uint64_t sub_10096C660()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t sub_10096C670()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t sub_10096C680()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t sub_10096C690()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_10096C6A0()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_10096C6B0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10096C6C0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_10096C6D0()
{
  return OS_dispatch_queue.label.getter();
}

uint64_t sub_10096C6E0()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t sub_10096C6F0()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t sub_10096C700()
{
  return static OS_dispatch_source.makeUserDataOrSource(queue:)();
}

uint64_t sub_10096C710()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

void sub_10096C720()
{
}

void sub_10096C730()
{
}

void sub_10096C740()
{
}

void sub_10096C750()
{
}

uint64_t sub_10096C760()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_10096C770()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_10096C780()
{
  return static os_signpost_type_t.event.getter();
}

void sub_10096C790()
{
}

Swift::Int sub_10096C7A0()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_10096C7B0()
{
  return type metadata accessor for OS_dispatch_queue_serial.Attributes();
}

uint64_t sub_10096C7C0()
{
  return OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_10096C7D0()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t sub_10096C7E0()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

void sub_10096C7F0(Swift::UInt data)
{
}

uint64_t sub_10096C800()
{
  return OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()();
}

NSNumber sub_10096C810(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int sub_10096C820(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_10096C830()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10096C840()
{
  return NSObject.hash(into:)();
}

uint64_t sub_10096C850()
{
  return NSObject.hashValue.getter();
}

uint64_t sub_10096C860()
{
  return NSString.init(stringLiteral:)();
}

uint64_t sub_10096C870()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_10096C880()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_10096C890()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10096C8A0()
{
  return Optional<A>.hash(into:)();
}

uint64_t sub_10096C8B0()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_10096C8C0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10096C8D0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10096C8E0()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_10096C8F0()
{
  return StringProtocol.lengthOfBytes(using:)();
}

uint64_t sub_10096C900()
{
  return StringProtocol.rangeOfCharacter(from:options:range:)();
}

uint64_t sub_10096C910()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_10096C920()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t sub_10096C930()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t sub_10096C940()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_10096C950()
{
  return BinaryInteger.formatted<A>(_:)();
}

uint64_t sub_10096C960()
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)();
}

uint64_t sub_10096C970()
{
  return dispatch thunk of BinaryInteger.trailingZeroBitCount.getter();
}

uint64_t sub_10096C980()
{
  return dispatch thunk of static BinaryInteger.<< infix<A>(_:_:)();
}

uint64_t sub_10096C990()
{
  return dispatch thunk of BinaryInteger._lowWord.getter();
}

uint64_t sub_10096C9A0()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter();
}

uint64_t sub_10096C9B0()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter();
}

uint64_t sub_10096C9C0()
{
  return BinaryInteger.description.getter();
}

uint64_t sub_10096C9D0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10096C9E0()
{
  return ArraySlice.startIndex.getter();
}

BOOL sub_10096C9F0()
{
  return ArraySlice._hoistableIsNativeTypeChecked()();
}

uint64_t sub_10096CA00()
{
  return ArraySlice.count.getter();
}

uint64_t sub_10096CA10()
{
  return ArraySlice.endIndex.getter();
}

uint64_t sub_10096CA20()
{
  return type metadata accessor for ArraySlice();
}

uint64_t sub_10096CA30()
{
  return dispatch thunk of SetAlgebra.remove(_:)();
}

uint64_t sub_10096CA40()
{
  return dispatch thunk of SetAlgebra.isEmpty.getter();
}

uint64_t sub_10096CA60()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10096CA70()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10096CA80()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t sub_10096CA90()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10096CAA0()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_10096CAB0()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_10096CAC0()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_10096CAD0()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_10096CAE0()
{
  return __CocoaSet.contains(_:)();
}

NSObject sub_10096CAF0()
{
  return AnyHashable._bridgeToObjectiveC()();
}

uint64_t sub_10096CB00()
{
  return AnyHashable.description.getter();
}

Swift::Int sub_10096CB10(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_10096CB20()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_10096CB30()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10096CB40()
{
  return AnyIterator.next()();
}

uint64_t sub_10096CB50()
{
  return type metadata accessor for AnySequence();
}

uint64_t sub_10096CB60()
{
  return AnySequence.init<A>(_:)();
}

uint64_t sub_10096CB70()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10096CB80()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10096CB90()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_10096CBA0()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_10096CBB0()
{
  return type metadata accessor for _SetStorage();
}

uint64_t sub_10096CBC0()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

void sub_10096CBD0(Swift::Int a1)
{
}

uint64_t sub_10096CBE0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10096CBF0()
{
  return dispatch thunk of static CaseIterable.allCases.getter();
}

uint64_t sub_10096CC00()
{
  return type metadata accessor for LazySequence();
}

uint64_t sub_10096CC10()
{
  return StaticString.description.getter();
}

uint64_t sub_10096CC20()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10096CC30()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10096CC40()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10096CC50()
{
  return static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
}

uint64_t sub_10096CC60()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_10096CC70()
{
  return type metadata accessor for DecodingError.Context();
}

uint64_t sub_10096CC80()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_10096CC90()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10096CCA0()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t sub_10096CCB0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10096CCC0()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_10096CCD0(Swift::Int a1)
{
}

uint64_t sub_10096CCE0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10096CCF0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10096CD00()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10096CD10()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_10096CD20()
{
  return ContiguousArray.init()();
}

uint64_t sub_10096CD30()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_10096CD40()
{
  return type metadata accessor for FlattenSequence();
}

uint64_t sub_10096CD50()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t sub_10096CD60()
{
  return type metadata accessor for LazyMapSequence();
}

uint64_t sub_10096CD70()
{
  return type metadata accessor for SuspendingClock.Instant();
}

uint64_t sub_10096CD80()
{
  return SuspendingClock.init()();
}

uint64_t sub_10096CD90()
{
  return type metadata accessor for SuspendingClock();
}

uint64_t sub_10096CDA0()
{
  return dispatch thunk of _AnySequenceBox._makeIterator()();
}

uint64_t sub_10096CDB0()
{
  return __VaListBuilder.deallocStorage(wordCount:storage:)();
}

uint64_t sub_10096CDC0()
{
  return __VaListBuilder.va_list()();
}

uint64_t sub_10096CDD0()
{
  return type metadata accessor for __VaListBuilder();
}

uint64_t sub_10096CDE0()
{
  return _arrayForceCast<A, B>(_:)();
}

uint64_t sub_10096CDF0()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_10096CE00()
{
  return _NativeDictionary.makeIterator()();
}

uint64_t sub_10096CE10()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10096CE20()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10096CE30()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_10096CE40()
{
  return LazyFilterSequence.filter(_:)();
}

uint64_t sub_10096CE50()
{
  return type metadata accessor for LazyFilterSequence();
}

uint64_t sub_10096CE60()
{
  return type metadata accessor for ReversedCollection();
}

uint64_t sub_10096CE70()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10096CE80()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_10096CE90()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10096CEA0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10096CEB0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10096CEC0()
{
  return dispatch thunk of _AnyIteratorBoxBase.next()();
}

uint64_t sub_10096CED0()
{
  return LazySequenceProtocol<>.elements.getter();
}

uint64_t sub_10096CEE0()
{
  return LazySequenceProtocol.compactMap<A>(_:)();
}

uint64_t sub_10096CEF0()
{
  return LazySequenceProtocol.map<A>(_:)();
}

uint64_t sub_10096CF00()
{
  return LazySequenceProtocol.filter(_:)();
}

uint64_t sub_10096CF10()
{
  return LazySequenceProtocol.flatMap<A>(_:)();
}

Swift::Int sub_10096CF30(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10096CF40()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10096CF50()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_10096CF60()
{
  return KeyedDecodingContainer.superDecoder()();
}

uint64_t sub_10096CF70()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CF80()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CF90()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CFA0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CFB0()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10096CFC0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CFD0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CFE0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096CFF0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D000()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D010()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D020()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D030()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D040()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10096D050()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D060()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D070()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D080()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D090()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10096D0A0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10096D0B0()
{
  return type metadata accessor for KeyedDecodingContainer();
}

uint64_t sub_10096D0C0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10096D0D0()
{
  return KeyedEncodingContainer.superEncoder()();
}

uint64_t sub_10096D0E0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D0F0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D100()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10096D110()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D120()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D130()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D140()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10096D150()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D160()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D170()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D180()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D190()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D1A0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10096D1B0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D1C0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D1D0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D1E0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D1F0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10096D200()
{
  return type metadata accessor for KeyedEncodingContainer();
}

Swift::Int sub_10096D210(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10096D220()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10096D230()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t sub_10096D240()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_10096D250()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_10096D260()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_10096D270()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

void sub_10096D280(Swift::String a1)
{
}

uint64_t sub_10096D290()
{
  return _forceBridgeFromObjectiveC<A>(_:_:)();
}

uint64_t sub_10096D2A0()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_10096D2B0()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10096D2C0()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_10096D2D0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10096D2E0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_10096D2F0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
}

uint64_t sub_10096D300()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10096D310()
{
  return dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
}

uint64_t sub_10096D320()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_10096D330()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_10096D340()
{
  return == infix<A>(_:_:)();
}

uint64_t sub_10096D350()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_10096D370()
{
  return _copyCollectionToContiguousArray<A>(_:)();
}

uint64_t sub_10096D380()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_10096D390()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_10096D3A0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10096D3B0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10096D3C0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10096D3D0()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t sub_10096D410()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10096D420()
{
  return Error._code.getter();
}

uint64_t sub_10096D430()
{
  return Error._domain.getter();
}

uint64_t sub_10096D440()
{
  return Error._userInfo.getter();
}

uint64_t sub_10096D450()
{
  return Int64.init(truncating:)();
}

NSNumber sub_10096D460()
{
  return Int64._bridgeToObjectiveC()();
}

uint64_t sub_10096D470()
{
  return UInt8.init(from:)();
}

uint64_t sub_10096D480()
{
  return UInt8.encode(to:)();
}

uint64_t sub_10096D490()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t sub_10096D4A0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10096D4B0()
{
  return Hasher.init(_seed:)();
}

void sub_10096D4C0(Swift::UInt a1)
{
}

void sub_10096D4D0(Swift::UInt8 a1)
{
}

void sub_10096D4E0(Swift::UInt32 a1)
{
}

void sub_10096D4F0(Swift::UInt64 a1)
{
}

Swift::Int sub_10096D500()
{
  return Hasher._finalize()();
}

uint64_t sub_10096D510()
{
  return type metadata accessor for Result();
}

uint64_t sub_10096D520()
{
  return UInt32.init(truncating:)();
}

NSNumber sub_10096D530()
{
  return UInt32._bridgeToObjectiveC()();
}

NSNumber sub_10096D540()
{
  return UInt64._bridgeToObjectiveC()();
}

uint64_t sub_10096D550()
{
  return dispatch thunk of CVarArg._cVarArgEncoding.getter();
}

uint64_t sub_10096D560()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_10096D570()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10096D580()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_10096D590()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10096D5C0()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t sub_10096D5D0()
{
  return _typeName(_:qualified:)();
}

uint64_t sub_10096D5E0()
{
  return getVaList(_:)();
}

uint64_t APFSVolumeRole()
{
  return _APFSVolumeRole();
}

void CFRelease(CFTypeRef cf)
{
}

Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error)
{
  return _CFURLSetResourcePropertyForKey(url, key, propertyValue, error);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return _CFUUIDCreateString(alloc, uuid);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return _CFUserNotificationReceiveResponse(userNotification, timeout, responseFlags);
}

uint64_t CacheDeleteCopyPurgeableSpaceWithInfo()
{
  return _CacheDeleteCopyPurgeableSpaceWithInfo();
}

uint64_t CacheDeletePurgeSpaceWithInfo()
{
  return _CacheDeletePurgeSpaceWithInfo();
}

uint64_t FPDictFromVendorItem()
{
  return _FPDictFromVendorItem();
}

uint64_t FPDomainUnavailableError()
{
  return _FPDomainUnavailableError();
}

uint64_t FPDomainUnavailableErrorWithUnderlyingError()
{
  return _FPDomainUnavailableErrorWithUnderlyingError();
}

uint64_t FPEvictedByTheUserError()
{
  return _FPEvictedByTheUserError();
}

uint64_t FPEvictionOnBusyItemError()
{
  return _FPEvictionOnBusyItemError();
}

uint64_t FPEvictionOnItemWithHardlinkError()
{
  return _FPEvictionOnItemWithHardlinkError();
}

uint64_t FPEvictionWithUnsyncedEditsError()
{
  return _FPEvictionWithUnsyncedEditsError();
}

uint64_t FPFeatureFlagEbihilIsEnabled()
{
  return _FPFeatureFlagEbihilIsEnabled();
}

uint64_t FPFeatureFlagSpaceAttributionIsEnabled()
{
  return _FPFeatureFlagSpaceAttributionIsEnabled();
}

uint64_t FPFileIsAlreadyPausedError()
{
  return _FPFileIsAlreadyPausedError();
}

uint64_t FPFileMetadataSetFavoriteRank()
{
  return _FPFileMetadataSetFavoriteRank();
}

uint64_t FPFileMetadataSetLastUsedDate()
{
  return _FPFileMetadataSetLastUsedDate();
}

uint64_t FPFileMetadataSetTagData()
{
  return _FPFileMetadataSetTagData();
}

uint64_t FPFileNotPausedError()
{
  return _FPFileNotPausedError();
}

uint64_t FPGetTagsDataForTags()
{
  return _FPGetTagsDataForTags();
}

uint64_t FPGetTagsFromTagsData()
{
  return _FPGetTagsFromTagsData();
}

uint64_t FPInvalidParameterError()
{
  return _FPInvalidParameterError();
}

uint64_t FPInvalidURLError()
{
  return _FPInvalidURLError();
}

uint64_t FPIsCloudDocsWithFPFSEnabled()
{
  return _FPIsCloudDocsWithFPFSEnabled();
}

uint64_t FPIsFPCKXPCServiceEnabled()
{
  return _FPIsFPCKXPCServiceEnabled();
}

uint64_t FPItemNotFoundError()
{
  return _FPItemNotFoundError();
}

uint64_t FPItemNotFoundErrorAtURL()
{
  return _FPItemNotFoundErrorAtURL();
}

uint64_t FPLocv()
{
  return _FPLocv();
}

uint64_t FPMissingAllowsEvictingCapabilitiesError()
{
  return _FPMissingAllowsEvictingCapabilitiesError();
}

uint64_t FPNonEvictableChildrenError()
{
  return _FPNonEvictableChildrenError();
}

uint64_t FPNotPermittedWriteError()
{
  return _FPNotPermittedWriteError();
}

uint64_t FPNotSupportedError()
{
  return _FPNotSupportedError();
}

uint64_t FPOSVersion()
{
  return _FPOSVersion();
}

uint64_t FPPerformWithPersona()
{
  return _FPPerformWithPersona();
}

uint64_t FPPinningIsEnabledForDomainID()
{
  return _FPPinningIsEnabledForDomainID();
}

uint64_t FPStatVFS()
{
  return _FPStatVFS();
}

uint64_t FPUserCancelledError()
{
  return _FPUserCancelledError();
}

uint64_t FPVersion()
{
  return _FPVersion();
}

uint64_t FPWriteImportCookieForDomainURL()
{
  return _FPWriteImportCookieForDomainURL();
}

FSEventStreamRef FSEventStreamCreate(CFAllocatorRef allocator, FSEventStreamCallback callback, FSEventStreamContext *context, CFArrayRef pathsToWatch, FSEventStreamEventId sinceWhen, CFTimeInterval latency, FSEventStreamCreateFlags flags)
{
  return _FSEventStreamCreate(allocator, callback, context, pathsToWatch, sinceWhen, latency, flags);
}

FSEventStreamRef FSEventStreamCreateRelativeToDevice(CFAllocatorRef allocator, FSEventStreamCallback callback, FSEventStreamContext *context, dev_t deviceToWatch, CFArrayRef pathsToWatchRelativeToDevice, FSEventStreamEventId sinceWhen, CFTimeInterval latency, FSEventStreamCreateFlags flags)
{
  return _FSEventStreamCreateRelativeToDevice(allocator, callback, context, deviceToWatch, pathsToWatchRelativeToDevice, sinceWhen, latency, flags);
}

void FSEventStreamFlushSync(FSEventStreamRef streamRef)
{
}

void FSEventStreamInvalidate(FSEventStreamRef streamRef)
{
}

void FSEventStreamRelease(FSEventStreamRef streamRef)
{
}

void FSEventStreamSetDispatchQueue(FSEventStreamRef streamRef, dispatch_queue_t q)
{
}

Boolean FSEventStreamStart(FSEventStreamRef streamRef)
{
  return _FSEventStreamStart(streamRef);
}

void FSEventStreamStop(FSEventStreamRef streamRef)
{
}

CFUUIDRef FSEventsCopyUUIDForDevice(dev_t dev)
{
  return _FSEventsCopyUUIDForDevice(dev);
}

FSEventStreamEventId FSEventsGetCurrentEventId(void)
{
  return _FSEventsGetCurrentEventId();
}

uint64_t GSLibraryResolveDocumentId2()
{
  return _GSLibraryResolveDocumentId2();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFURLCStringIsPromiseName()
{
  return __CFURLCStringIsPromiseName();
}

uint64_t _CFURLCopyPromiseURLOfLogicalURL()
{
  return __CFURLCopyPromiseURLOfLogicalURL();
}

void _Exit(int a1)
{
}

uint64_t _NSErrorWithFilePathAndErrno()
{
  return __NSErrorWithFilePathAndErrno();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

uint64_t __fp_create_section()
{
  return ___fp_create_section();
}

uint64_t __fp_leave_section_Debug()
{
  return ___fp_leave_section_Debug();
}

uint64_t __fp_log_adopt()
{
  return ___fp_log_adopt();
}

uint64_t __fp_log_fork()
{
  return ___fp_log_fork();
}

uint64_t __fp_pop_log()
{
  return ___fp_pop_log();
}

uint64_t __strlcpy_chk()
{
  return ___strlcpy_chk();
}

{
}

{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void abort(void)
{
}

int access(const char *a1, int a2)
{
  return _access(a1, a2);
}

int asprintf(char **a1, const char *a2, ...)
{
  return _asprintf(a1, a2);
}

char *__cdecl basename_r(const char *a1, char *a2)
{
  return _basename_r(a1, a2);
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return _class_addMethod(cls, name, imp, types);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

int clonefileat(int a1, const char *a2, int a3, const char *a4, uint32_t a5)
{
  return _clonefileat(a1, a2, a3, a4, a5);
}

int close(int a1)
{
  return _close(a1);
}

int closedir(DIR *a1)
{
  return _closedir(a1);
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return _copyfile(from, to, state, flags);
}

copyfile_state_t copyfile_state_alloc(void)
{
  return _copyfile_state_alloc();
}

int copyfile_state_free(copyfile_state_t a1)
{
  return _copyfile_state_free(a1);
}

int copyfile_state_set(copyfile_state_t s, uint32_t flag, const void *src)
{
  return _copyfile_state_set(s, flag, src);
}

char *__cdecl dirname_r(const char *a1, char *a2)
{
  return _dirname_r(a1, a2);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return _dispatch_set_qos_class_fallback();
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return _dispatch_workloop_create(label);
}

int dup(int a1)
{
  return _dup(a1);
}

uint64_t errorInjectionPointEnabled()
{
  return _errorInjectionPointEnabled();
}

uint64_t errorInjectionThrowOnDBQueryEnabled()
{
  return _errorInjectionThrowOnDBQueryEnabled();
}

uint64_t errorInjectionUnknownDBVersionEnabled()
{
  return _errorInjectionUnknownDBVersionEnabled();
}

void exit(int a1)
{
}

int faccessat(int a1, const char *a2, int a3, int a4)
{
  return _faccessat(a1, a2, a3, a4);
}

int fchmod(int a1, mode_t a2)
{
  return _fchmod(a1, a2);
}

int fclonefileat(int a1, int a2, const char *a3, uint32_t a4)
{
  return _fclonefileat(a1, a2, a3, a4);
}

int fcntl(int a1, int a2, ...)
{
  return _fcntl(a1, a2);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return _ffsctl(a1, a2, a3, a4);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return _fgetattrlist(a1, a2, a3, a4, a5);
}

ssize_t fgetxattr(int fd, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return _fgetxattr(fd, name, value, size, position, options);
}

ssize_t flistxattr(int fd, char *namebuff, size_t size, int options)
{
  return _flistxattr(fd, namebuff, size, options);
}

int flock(int a1, int a2)
{
  return _flock(a1, a2);
}

uint64_t fp_current_or_default_log()
{
  return _fp_current_or_default_log();
}

uint64_t fp_default_log()
{
  return _fp_default_log();
}

uint64_t fp_shouldObfuscateFilenames()
{
  return _fp_shouldObfuscateFilenames();
}

uint64_t fpfs_adopt_log()
{
  return _fpfs_adopt_log();
}

uint64_t fpfs_clear_acl()
{
  return _fpfs_clear_acl();
}

uint64_t fpfs_clear_file_acl()
{
  return _fpfs_clear_file_acl();
}

uint64_t fpfs_create_dataless_fault_at()
{
  return _fpfs_create_dataless_fault_at();
}

uint64_t fpfs_create_log_for_provider()
{
  return _fpfs_create_log_for_provider();
}

uint64_t fpfs_current_log()
{
  return _fpfs_current_log();
}

uint64_t fpfs_current_or_default_log()
{
  return _fpfs_current_or_default_log();
}

uint64_t fpfs_delete_xattrs()
{
  return _fpfs_delete_xattrs();
}

uint64_t fpfs_deserialize_favorite_rank()
{
  return _fpfs_deserialize_favorite_rank();
}

uint64_t fpfs_deserialize_last_use_date()
{
  return _fpfs_deserialize_last_use_date();
}

uint64_t fpfs_deserialize_tags()
{
  return _fpfs_deserialize_tags();
}

uint64_t fpfs_dirsize()
{
  return _fpfs_dirsize();
}

uint64_t fpfs_evict()
{
  return _fpfs_evict();
}

uint64_t fpfs_eviction_urgency()
{
  return _fpfs_eviction_urgency();
}

uint64_t fpfs_extension_in_filename()
{
  return _fpfs_extension_in_filename();
}

uint64_t fpfs_fchdir()
{
  return _fpfs_fchdir();
}

uint64_t fpfs_fchflags()
{
  return _fpfs_fchflags();
}

uint64_t fpfs_femptydir()
{
  return _fpfs_femptydir();
}

uint64_t fpfs_fget_decmpf_type()
{
  return _fpfs_fget_decmpf_type();
}

uint64_t fpfs_fget_parent_id()
{
  return _fpfs_fget_parent_id();
}

uint64_t fpfs_fget_parent_syncroot()
{
  return _fpfs_fget_parent_syncroot();
}

uint64_t fpfs_fget_syncroot()
{
  return _fpfs_fget_syncroot();
}

uint64_t fpfs_fgetdirentries()
{
  return _fpfs_fgetdirentries();
}

uint64_t fpfs_fgetfileattrs()
{
  return _fpfs_fgetfileattrs();
}

uint64_t fpfs_fgethandle()
{
  return _fpfs_fgethandle();
}

uint64_t fpfs_fgetpath()
{
  return _fpfs_fgetpath();
}

uint64_t fpfs_fgetxattr_checked()
{
  return _fpfs_fgetxattr_checked();
}

uint64_t fpfs_file_is_flocked()
{
  return _fpfs_file_is_flocked();
}

uint64_t fpfs_fileattrs_fullpath()
{
  return _fpfs_fileattrs_fullpath();
}

uint64_t fpfs_filename_contains_ext()
{
  return _fpfs_filename_contains_ext();
}

uint64_t fpfs_finder_info_deserialize()
{
  return _fpfs_finder_info_deserialize();
}

uint64_t fpfs_fopendir()
{
  return _fpfs_fopendir();
}

uint64_t fpfs_free_metadata_tag_data()
{
  return _fpfs_free_metadata_tag_data();
}

uint64_t fpfs_fremovexattr()
{
  return _fpfs_fremovexattr();
}

uint64_t fpfs_fset_acl()
{
  return _fpfs_fset_acl();
}

uint64_t fpfs_fset_metadata()
{
  return _fpfs_fset_metadata();
}

uint64_t fpfs_fset_pause_sync_bundleID()
{
  return _fpfs_fset_pause_sync_bundleID();
}

uint64_t fpfs_fset_resuming_sync_with_drop_local_changes()
{
  return _fpfs_fset_resuming_sync_with_drop_local_changes();
}

uint64_t fpfs_fset_syncroot()
{
  return _fpfs_fset_syncroot();
}

uint64_t fpfs_fsetxattr()
{
  return _fpfs_fsetxattr();
}

uint64_t fpfs_fsgetpath()
{
  return _fpfs_fsgetpath();
}

uint64_t fpfs_funset_pause_sync_bundleID()
{
  return _fpfs_funset_pause_sync_bundleID();
}

uint64_t fpfs_funset_resuming_sync_with_drop_local_changes()
{
  return _fpfs_funset_resuming_sync_with_drop_local_changes();
}

uint64_t fpfs_get_dirstat()
{
  return _fpfs_get_dirstat();
}

uint64_t fpfs_get_finder_info()
{
  return _fpfs_get_finder_info();
}

uint64_t fpfs_get_finder_info_buffer()
{
  return _fpfs_get_finder_info_buffer();
}

uint64_t fpfs_get_flock_type()
{
  return _fpfs_get_flock_type();
}

uint64_t fpfs_get_is_ignore_root()
{
  return _fpfs_get_is_ignore_root();
}

uint64_t fpfs_get_is_sync_paused()
{
  return _fpfs_get_is_sync_paused();
}

uint64_t fpfs_get_materialization_alignment()
{
  return _fpfs_get_materialization_alignment();
}

uint64_t fpfs_get_purgeable_info()
{
  return _fpfs_get_purgeable_info();
}

uint64_t fpfs_get_purgeable_stats()
{
  return _fpfs_get_purgeable_stats();
}

uint64_t fpfs_gethandle_at()
{
  return _fpfs_gethandle_at();
}

uint64_t fpfs_icd_package_extension_list_reload()
{
  return _fpfs_icd_package_extension_list_reload();
}

uint64_t fpfs_is_busy_date()
{
  return _fpfs_is_busy_date();
}

uint64_t fpfs_is_dataless_fault()
{
  return _fpfs_is_dataless_fault();
}

uint64_t fpfs_is_dataless_fault_at()
{
  return _fpfs_is_dataless_fault_at();
}

uint64_t fpfs_is_detached_root()
{
  return _fpfs_is_detached_root();
}

uint64_t fpfs_is_finder_alias_at()
{
  return _fpfs_is_finder_alias_at();
}

uint64_t fpfs_is_internal_build()
{
  return _fpfs_is_internal_build();
}

uint64_t fpfs_is_seed_build()
{
  return _fpfs_is_seed_build();
}

uint64_t fpfs_item_handle_gencmp()
{
  return _fpfs_item_handle_gencmp();
}

uint64_t fpfs_load_additional_attrs()
{
  return _fpfs_load_additional_attrs();
}

uint64_t fpfs_lp_faccessat()
{
  return _fpfs_lp_faccessat();
}

uint64_t fpfs_lp_openat()
{
  return _fpfs_lp_openat();
}

uint64_t fpfs_lp_unlinkat()
{
  return _fpfs_lp_unlinkat();
}

uint64_t fpfs_make_fsevent()
{
  return _fpfs_make_fsevent();
}

uint64_t fpfs_materialize()
{
  return _fpfs_materialize();
}

uint64_t fpfs_num_entries()
{
  return _fpfs_num_entries();
}

uint64_t fpfs_num_entries_at()
{
  return _fpfs_num_entries_at();
}

uint64_t fpfs_open()
{
  return _fpfs_open();
}

uint64_t fpfs_openat()
{
  return _fpfs_openat();
}

uint64_t fpfs_openat_longparent()
{
  return _fpfs_openat_longparent();
}

uint64_t fpfs_openbyid()
{
  return _fpfs_openbyid();
}

uint64_t fpfs_openbyid_ext()
{
  return _fpfs_openbyid_ext();
}

uint64_t fpfs_opendirat()
{
  return _fpfs_opendirat();
}

uint64_t fpfs_openfdbyhandle()
{
  return _fpfs_openfdbyhandle();
}

uint64_t fpfs_path_is_safe_save_temp_file()
{
  return _fpfs_path_is_safe_save_temp_file();
}

uint64_t fpfs_path_is_safe_save_temp_filename()
{
  return _fpfs_path_is_safe_save_temp_filename();
}

uint64_t fpfs_path_relative_to()
{
  return _fpfs_path_relative_to();
}

uint64_t fpfs_pkg_demote()
{
  return _fpfs_pkg_demote();
}

uint64_t fpfs_pkg_dirstat()
{
  return _fpfs_pkg_dirstat();
}

uint64_t fpfs_pkg_enable_dirstat()
{
  return _fpfs_pkg_enable_dirstat();
}

uint64_t fpfs_pkg_is_demoted()
{
  return _fpfs_pkg_is_demoted();
}

uint64_t fpfs_pkg_is_demoted_at()
{
  return _fpfs_pkg_is_demoted_at();
}

uint64_t fpfs_pkg_is_package_item()
{
  return _fpfs_pkg_is_package_item();
}

uint64_t fpfs_pkg_is_package_root2()
{
  return _fpfs_pkg_is_package_root2();
}

uint64_t fpfs_pkg_is_promoted()
{
  return _fpfs_pkg_is_promoted();
}

uint64_t fpfs_pkg_promote()
{
  return _fpfs_pkg_promote();
}

uint64_t fpfs_pkg_promote_at()
{
  return _fpfs_pkg_promote_at();
}

uint64_t fpfs_pkg_relative_path_lookup()
{
  return _fpfs_pkg_relative_path_lookup();
}

uint64_t fpfs_pkg_remove_demotion_xattr()
{
  return _fpfs_pkg_remove_demotion_xattr();
}

uint64_t fpfs_pkg_remove_promotion_xattr()
{
  return _fpfs_pkg_remove_promotion_xattr();
}

uint64_t fpfs_pkg_set_bundle_bit()
{
  return _fpfs_pkg_set_bundle_bit();
}

uint64_t fpfs_pkg_system_lookup()
{
  return _fpfs_pkg_system_lookup();
}

uint64_t fpfs_pkg_system_relative_lookup()
{
  return _fpfs_pkg_system_relative_lookup();
}

uint64_t fpfs_recursive_prune_fault()
{
  return _fpfs_recursive_prune_fault();
}

uint64_t fpfs_recursive_unlinkat()
{
  return _fpfs_recursive_unlinkat();
}

uint64_t fpfs_remove_before_bounce_filename()
{
  return _fpfs_remove_before_bounce_filename();
}

uint64_t fpfs_remove_resurrected()
{
  return _fpfs_remove_resurrected();
}

uint64_t fpfs_removeat()
{
  return _fpfs_removeat();
}

uint64_t fpfs_root_exposure_symlink_xattr_is_equal()
{
  return _fpfs_root_exposure_symlink_xattr_is_equal();
}

uint64_t fpfs_serialize_tags()
{
  return _fpfs_serialize_tags();
}

uint64_t fpfs_set_before_bounce_filename_on_path()
{
  return _fpfs_set_before_bounce_filename_on_path();
}

uint64_t fpfs_set_dataless_cmpfs_attrs()
{
  return _fpfs_set_dataless_cmpfs_attrs();
}

uint64_t fpfs_set_evictable()
{
  return _fpfs_set_evictable();
}

uint64_t fpfs_set_is_ignore_root()
{
  return _fpfs_set_is_ignore_root();
}

uint64_t fpfs_set_is_pinned()
{
  return _fpfs_set_is_pinned();
}

uint64_t fpfs_set_metadata()
{
  return _fpfs_set_metadata();
}

uint64_t fpfs_set_purgeable_non_evictable()
{
  return _fpfs_set_purgeable_non_evictable();
}

uint64_t fpfs_set_resurrected()
{
  return _fpfs_set_resurrected();
}

uint64_t fpfs_set_root_exposure_symlink_xattr()
{
  return _fpfs_set_root_exposure_symlink_xattr();
}

uint64_t fpfs_set_vfs_ignore_permissions_iopolicy()
{
  return _fpfs_set_vfs_ignore_permissions_iopolicy();
}

uint64_t fpfs_set_vfs_parent_mtime_iopolicy()
{
  return _fpfs_set_vfs_parent_mtime_iopolicy();
}

uint64_t fpfs_should_be_tracked()
{
  return _fpfs_should_be_tracked();
}

uint64_t fpfs_should_be_tracked_internal()
{
  return _fpfs_should_be_tracked_internal();
}

uint64_t fpfs_supports_brm_sparse_files()
{
  return _fpfs_supports_brm_sparse_files();
}

uint64_t fpfs_supports_lazy_recursive_deletion()
{
  return _fpfs_supports_lazy_recursive_deletion();
}

uint64_t fpfs_supports_long_paths()
{
  return _fpfs_supports_long_paths();
}

uint64_t fpfs_supports_parent_mtime_iopolicy()
{
  return _fpfs_supports_parent_mtime_iopolicy();
}

uint64_t fpfs_supports_partial_conflicts_resolution()
{
  return _fpfs_supports_partial_conflicts_resolution();
}

uint64_t fpfs_supports_partial_materialization()
{
  return _fpfs_supports_partial_materialization();
}

uint64_t fpfs_supports_pkg_dataless_escape_prevention()
{
  return _fpfs_supports_pkg_dataless_escape_prevention();
}

uint64_t fpfs_supports_purge_reasons()
{
  return _fpfs_supports_purge_reasons();
}

uint64_t fpfs_supports_sokoban()
{
  return _fpfs_supports_sokoban();
}

uint64_t fpfs_supports_speculative_set()
{
  return _fpfs_supports_speculative_set();
}

uint64_t fpfs_supports_tap_to_feedback()
{
  return _fpfs_supports_tap_to_feedback();
}

uint64_t fpfs_supports_vfs_ignore_permissions_iopolicy()
{
  return _fpfs_supports_vfs_ignore_permissions_iopolicy();
}

uint64_t fpfs_track_document()
{
  return _fpfs_track_document();
}

uint64_t fpfs_transfer_xattrs()
{
  return _fpfs_transfer_xattrs();
}

uint64_t fpfs_unset_dataless_cmpfs_attrs()
{
  return _fpfs_unset_dataless_cmpfs_attrs();
}

uint64_t fpfs_unset_evictable()
{
  return _fpfs_unset_evictable();
}

uint64_t fpfs_untrack_document()
{
  return _fpfs_untrack_document();
}

uint64_t fpfs_update_dataless_fault()
{
  return _fpfs_update_dataless_fault();
}

uint64_t fpfs_update_purgency()
{
  return _fpfs_update_purgency();
}

uint64_t fpfs_user_package_extension_list_init()
{
  return _fpfs_user_package_extension_list_init();
}

uint64_t fpfs_xattr_is_syncable()
{
  return _fpfs_xattr_is_syncable();
}

void free(void *a1)
{
}

int fremovexattr(int fd, const char *name, int options)
{
  return _fremovexattr(fd, name, options);
}

int fsetxattr(int fd, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return _fsetxattr(fd, name, value, size, position, options);
}

ssize_t fsgetpath(char *a1, size_t a2, fsid_t *a3, uint64_t a4)
{
  return _fsgetpath(a1, a2, a3, a4);
}

uint64_t fssync_default_log()
{
  return _fssync_default_log();
}

int fstat(int a1, stat *a2)
{
  return _fstat(a1, a2);
}

int fstatat(int a1, const char *a2, stat *a3, int a4)
{
  return _fstatat(a1, a2, a3, a4);
}

int fstatfs(int a1, statfs *a2)
{
  return _fstatfs(a1, a2);
}

int ftruncate(int a1, off_t a2)
{
  return _ftruncate(a1, a2);
}

int fts_close(FTS *a1)
{
  return _fts_close(a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return _fts_open(a1, a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return _fts_read(a1);
}

int getattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return _getattrlist(a1, a2, a3, a4, a5);
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

uid_t geteuid(void)
{
  return _geteuid();
}

int getpagesize(void)
{
  return _getpagesize();
}

uid_t getuid(void)
{
  return _getuid();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return _getxattr(path, name, value, size, position, options);
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return _localtime_r(a1, a2);
}

long double log(long double __x)
{
  return _log(__x);
}

long double log10(long double __x)
{
  return _log10(__x);
}

off_t lseek(int a1, off_t a2, int a3)
{
  return _lseek(a1, a2, a3);
}

int lstat(const char *a1, stat *a2)
{
  return _lstat(a1, a2);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

IMP method_getImplementation(Method m)
{
  return _method_getImplementation(m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return _method_getTypeEncoding(m);
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

int mkdirat(int a1, const char *a2, mode_t a3)
{
  return _mkdirat(a1, a2, a3);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

int openat(int a1, const char *a2, int a3, ...)
{
  return _openat(a1, a2, a3);
}

DIR *__cdecl opendir(const char *a1)
{
  return _opendir(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return _os_unfair_recursive_lock_lock_with_options();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return _os_unfair_recursive_lock_unlock();
}

uint64_t os_variant_has_internal_content()
{
  return _os_variant_has_internal_content();
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return _pread(__fd, __buf, __nbyte, a4);
}

uint64_t pthread_fchdir_np()
{
  return _pthread_fchdir_np();
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

dirent *__cdecl readdir(DIR *a1)
{
  return _readdir(a1);
}

ssize_t readlink(const char *a1, char *a2, size_t a3)
{
  return _readlink(a1, a2, a3);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return _removefile(path, state, flags);
}

int removexattr(const char *path, const char *name, int options)
{
  return _removexattr(path, name, options);
}

int renameatx_np(int a1, const char *a2, int a3, const char *a4, unsigned int a5)
{
  return _renameatx_np(a1, a2, a3, a4, a5);
}

int renamex_np(const char *a1, const char *a2, unsigned int a3)
{
  return _renamex_np(a1, a2, a3);
}

int rmdir(const char *a1)
{
  return _rmdir(a1);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return _setxattr(path, name, value, size, position, options);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return _sqlite3_bind_parameter_count(a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return _sqlite3_column_count(pStmt);
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return _sqlite3_sql(pStmt);
}

int sqlite3_stmt_status(sqlite3_stmt *a1, int op, int resetFlg)
{
  return _sqlite3_stmt_status(a1, op, resetFlg);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return _sqlite3_value_blob(a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return _sqlite3_value_bytes(a1);
}

int sqlite3_value_int(sqlite3_value *a1)
{
  return _sqlite3_value_int(a1);
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return _sqlite3_value_int64(a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return _sqlite3_value_type(a1);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return _statfs(a1, a2);
}

int strcasecmp(const char *a1, const char *a2)
{
  return _strcasecmp(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return _strdup(__s1);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return _strlcpy(__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return _strtoll(__str, __endptr, __base);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocBox()
{
  return _swift_deallocBox();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocError()
{
  return _swift_deallocError();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_deletedMethodError()
{
  return _swift_deletedMethodError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return _swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_task_isCurrentExecutor()
{
  return _swift_task_isCurrentExecutor();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_unownedRelease()
{
  return _swift_unownedRelease();
}

uint64_t swift_unownedRetain()
{
  return _swift_unownedRetain();
}

uint64_t swift_unownedRetainStrong()
{
  return _swift_unownedRetainStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

int symlink(const char *a1, const char *a2)
{
  return _symlink(a1, a2);
}

int symlinkat(const char *a1, int a2, const char *a3)
{
  return _symlinkat(a1, a2, a3);
}

time_t time(time_t *a1)
{
  return _time(a1);
}

int unlink(const char *a1)
{
  return _unlink(a1);
}

int unlinkat(int a1, const char *a2, int a3)
{
  return _unlinkat(a1, a2, a3);
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

void uuid_generate(uuid_t out)
{
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__activateSubscription_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateSubscription:error:");
}

id objc_msgSend__createStreamNamed_since_criteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStreamNamed:since:criteria:");
}

id objc_msgSend__emojiCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 _emojiCharacterSet];
}

id objc_msgSend__launchXPCServiceWithUpdateReceiver_proxy_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchXPCServiceWithUpdateReceiver:proxy:completionHandler:");
}

id objc_msgSend__performStep_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performStep:error:");
}

id objc_msgSend__prepareXPCService_domainUserInfo_domainRootURL_databaseBackupPath_urls_volumeRole_personaIdentifier_options_reason_fpfs_iCDPackageDetection_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareXPCService:domainUserInfo:domainRootURL:databaseBackupPath:urls:volumeRole:personaIdentifier:options:reason:fpfs:iCDPackageDetection:completionHandler:");
}

id objc_msgSend__queueEvents_markSelfEncountered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queueEvents:markSelfEncountered:");
}

id objc_msgSend__resolveLaunchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveLaunchType:");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateSubscription_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateSubscription:error:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_additionalDebugFlagsForHistoricalStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalDebugFlagsForHistoricalStream:");
}

id objc_msgSend_anonymousListener(void *a1, const char *a2, ...)
{
  return _[a1 anonymousListener];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attributesOfFileSystemForPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfFileSystemForPath:error:");
}

id objc_msgSend_backUpWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backUpWithCompletionHandler:");
}

id objc_msgSend_barrierFolderURL(void *a1, const char *a2, ...)
{
  return _[a1 barrierFolderURL];
}

id objc_msgSend_barrierUUID(void *a1, const char *a2, ...)
{
  return _[a1 barrierUUID];
}

id objc_msgSend_characterSetWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithRange:");
}

id objc_msgSend_checker_handleItem_itemStatus_under_brokenInvariants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checker:handleItem:itemStatus:under:brokenInvariants:");
}

id objc_msgSend_checker_handleLockedItemAtPath_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checker:handleLockedItemAtPath:handle:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_conformsToType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToType:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_controlCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 controlCharacterSet];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyCurrentPersonaContextWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCurrentPersonaContextWithError:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentPersona(void *a1, const char *a2, ...)
{
  return _[a1 currentPersona];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_decomposedStringWithCanonicalMapping(void *a1, const char *a2, ...)
{
  return _[a1 decomposedStringWithCanonicalMapping];
}

id objc_msgSend_decomposedStringWithCompatibilityMapping(void *a1, const char *a2, ...)
{
  return _[a1 decomposedStringWithCompatibilityMapping];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegationQueue(void *a1, const char *a2, ...)
{
  return _[a1 delegationQueue];
}

id objc_msgSend_deliverBarrierEvents(void *a1, const char *a2, ...)
{
  return _[a1 deliverBarrierEvents];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didProcessBarrierEventUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didProcessBarrierEventUUID:");
}

id objc_msgSend_didProcessEventID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didProcessEventID:");
}

id objc_msgSend_disableSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableSubscription:");
}

id objc_msgSend_dispose(void *a1, const char *a2, ...)
{
  return _[a1 dispose];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_dumpDatabaseAt_fullDump_writeTo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dumpDatabaseAt:fullDump:writeTo:error:");
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _[a1 endpoint];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_eventID(void *a1, const char *a2, ...)
{
  return _[a1 eventID];
}

id objc_msgSend_eventStreamUUID(void *a1, const char *a2, ...)
{
  return _[a1 eventStreamUUID];
}

id objc_msgSend_fileID(void *a1, const char *a2, ...)
{
  return _[a1 fileID];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLWithFileSystemRepresentation_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_foreachSubscriptionInState_apply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foreachSubscriptionInState:apply:");
}

id objc_msgSend_fp_cachedTypeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_cachedTypeWithIdentifier:");
}

id objc_msgSend_fp_errorWithPOSIXCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_errorWithPOSIXCode:");
}

id objc_msgSend_fp_errorWithPOSIXCode_itemURL_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_errorWithPOSIXCode:itemURL:debugDescription:");
}

id objc_msgSend_fp_isCocoaErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_isCocoaErrorCode:");
}

id objc_msgSend_fp_isPOSIXErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_isPOSIXErrorCode:");
}

id objc_msgSend_fp_obfuscatedPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_obfuscatedPath");
}

id objc_msgSend_fp_pathWithFileSystemRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_pathWithFileSystemRepresentation:");
}

id objc_msgSend_fp_prettyDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_prettyDescription");
}

id objc_msgSend_fp_prettyPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_prettyPath");
}

id objc_msgSend_fp_realpath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_realpath");
}

id objc_msgSend_fp_relationshipToItemAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_relationshipToItemAtURL:");
}

id objc_msgSend_fp_shortDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_shortDescription");
}

id objc_msgSend_fp_supportDirectoryForVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fp_supportDirectoryForVolume:");
}

id objc_msgSend_fpfs_extractFSEventsBarrierUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fpfs_extractFSEventsBarrierUUID");
}

id objc_msgSend_fpfs_extractFSEventsNotifyUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fpfs_extractFSEventsNotifyUUID");
}

id objc_msgSend_fpfs_initWithFSEventsFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fpfs_initWithFSEventsFlags:");
}

id objc_msgSend_fseventProcessBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 fseventProcessBatchSize];
}

id objc_msgSend_fseventsAggregationDelay(void *a1, const char *a2, ...)
{
  return _[a1 fseventsAggregationDelay];
}

id objc_msgSend_generateAndRestorePersonaContextWithIdentityString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAndRestorePersonaContextWithIdentityString:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getStringCharactersSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStringCharactersSet:");
}

id objc_msgSend_getUnicodeNormalization(void *a1, const char *a2, ...)
{
  return _[a1 getUnicodeNormalization];
}

id objc_msgSend_handleFSEvent_indexInBatch_batchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFSEvent:indexInBatch:batchSize:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_ignoreOwnEvents(void *a1, const char *a2, ...)
{
  return _[a1 ignoreOwnEvents];
}

id objc_msgSend_illegalCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 illegalCharacterSet];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithConnection_protocol_orError_name_requestPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:protocol:orError:name:requestPid:");
}

id objc_msgSend_initWithDatabasesBackupsPaths_volumeRole_providerDomainID_domainUserInfo_reason_usingFPFS_iCDPackageDetection_useShouldPause_shouldPause_sendDiagnostics_saveCheckpoint_isInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabasesBackupsPaths:volumeRole:providerDomainID:domainUserInfo:reason:usingFPFS:iCDPackageDetection:useShouldPause:shouldPause:sendDiagnostics:saveCheckpoint:isInvalidated:");
}

id objc_msgSend_initWithPath_fd_reader_sinceEventID_streamUUID_ignoreOwnEvents_delegate_purpose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:fd:reader:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:");
}

id objc_msgSend_initWithPath_fileID_flags_eventID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:fileID:flags:eventID:");
}

id objc_msgSend_initWithPhysicalLocation_rootURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhysicalLocation:rootURL:error:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithShouldPause_semaphore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShouldPause:semaphore:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUserURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserURL:");
}

id objc_msgSend_initWithUserURL_outputUserURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserURL:outputUserURL:");
}

id objc_msgSend_inode(void *a1, const char *a2, ...)
{
  return _[a1 inode];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _[a1 invertedSet];
}

id objc_msgSend_isActivated(void *a1, const char *a2, ...)
{
  return _[a1 isActivated];
}

id objc_msgSend_isBarrier(void *a1, const char *a2, ...)
{
  return _[a1 isBarrier];
}

id objc_msgSend_isDataProtectedFileAtPath_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDataProtectedFileAtPath:handle:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_lastDeliveredEventID(void *a1, const char *a2, ...)
{
  return _[a1 lastDeliveredEventID];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_latency(void *a1, const char *a2, ...)
{
  return _[a1 latency];
}

id objc_msgSend_launchFromURLs_options_error_resultHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchFromURLs:options:error:resultHandler:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_liveFSEventsXPCActivityCriteria(void *a1, const char *a2, ...)
{
  return _[a1 liveFSEventsXPCActivityCriteria];
}

id objc_msgSend_logicalLocation(void *a1, const char *a2, ...)
{
  return _[a1 logicalLocation];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_maxFSEventQueueSize(void *a1, const char *a2, ...)
{
  return _[a1 maxFSEventQueueSize];
}

id objc_msgSend_mountPath(void *a1, const char *a2, ...)
{
  return _[a1 mountPath];
}

id objc_msgSend_nonBaseCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 nonBaseCharacterSet];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_numberOfBrokenFilesInBackupManifestCheck(void *a1, const char *a2, ...)
{
  return _[a1 numberOfBrokenFilesInBackupManifestCheck];
}

id objc_msgSend_numberOfBrokenFilesInFSAndFSSnapshotCheck(void *a1, const char *a2, ...)
{
  return _[a1 numberOfBrokenFilesInFSAndFSSnapshotCheck];
}

id objc_msgSend_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck(void *a1, const char *a2, ...)
{
  return _[a1 numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck];
}

id objc_msgSend_numberOfBrokenFilesInReconciliationTableCheck(void *a1, const char *a2, ...)
{
  return _[a1 numberOfBrokenFilesInReconciliationTableCheck];
}

id objc_msgSend_numberOfFilesChecked(void *a1, const char *a2, ...)
{
  return _[a1 numberOfFilesChecked];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_numberWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedShort:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_oldestStartingPoint(void *a1, const char *a2, ...)
{
  return _[a1 oldestStartingPoint];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_permanentStorageForItemAtURL_allocateIfNone_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "permanentStorageForItemAtURL:allocateIfNone:error:");
}

id objc_msgSend_permanentStorageForItemWithDocID_deviceID_allocateIfNone_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "permanentStorageForItemWithDocID:deviceID:allocateIfNone:error:");
}

id objc_msgSend_physicalLocation(void *a1, const char *a2, ...)
{
  return _[a1 physicalLocation];
}

id objc_msgSend_postReportWithCategory_type_payload_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postReportWithCategory:type:payload:error:");
}

id objc_msgSend_precomposedStringWithCanonicalMapping(void *a1, const char *a2, ...)
{
  return _[a1 precomposedStringWithCanonicalMapping];
}

id objc_msgSend_precomposedStringWithCompatibilityMapping(void *a1, const char *a2, ...)
{
  return _[a1 precomposedStringWithCompatibilityMapping];
}

id objc_msgSend_prepareFPCKForDomain_domainUserInfo_domainRootURL_databaseBackupPath_accessingPaths_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareFPCKForDomain:domainUserInfo:domainRootURL:databaseBackupPath:accessingPaths:urls:volumeRole:options:reason:fpfs:iCDPackageDetection:completionHandler:");
}

id objc_msgSend_processFseventBatch(void *a1, const char *a2, ...)
{
  return _[a1 processFseventBatch];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_purgatoryPrefix(void *a1, const char *a2, ...)
{
  return _[a1 purgatoryPrefix];
}

id objc_msgSend_purgeabilityErrorForReason_atURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeabilityErrorForReason:atURL:");
}

id objc_msgSend_queueEvents_markSelfEncountered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queueEvents:markSelfEncountered:");
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeAtIndex:");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rawFlags(void *a1, const char *a2, ...)
{
  return _[a1 rawFlags];
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_reportCompletionTelemetryWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCompletionTelemetryWithError:");
}

id objc_msgSend_reportCompletionTelemetryWithError_atStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCompletionTelemetryWithError:atStep:");
}

id objc_msgSend_resetWithReason_newFSEventID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWithReason:newFSEventID:");
}

id objc_msgSend_restorePersonaWithSavedPersonaContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restorePersonaWithSavedPersonaContext:");
}

id objc_msgSend_restoreWithCleanupOnSuccess_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreWithCleanupOnSuccess:completionHandler:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_root(void *a1, const char *a2, ...)
{
  return _[a1 root];
}

id objc_msgSend_rootFileID(void *a1, const char *a2, ...)
{
  return _[a1 rootFileID];
}

id objc_msgSend_runFPCKForDomain_domainUserInfo_domainRootURL_databaseBackupPath_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_shouldPause_sendDiagnostics_saveCheckpoint_isInvalidated_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runFPCKForDomain:domainUserInfo:domainRootURL:databaseBackupPath:urls:volumeRole:options:reason:fpfs:iCDPackageDetection:shouldPause:sendDiagnostics:saveCheckpoint:isInvalidated:completionHandler:");
}

id objc_msgSend_sessionForProviderID_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionForProviderID:version:");
}

id objc_msgSend_setAutoRollbackHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoRollbackHandler:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setEventStreamUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventStreamUUID:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setInterface_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsActivated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsActivated:");
}

id objc_msgSend_setLastDeliveredEventID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDeliveredEventID:");
}

id objc_msgSend_setNumberOfBrokenFilesInBackupManifestCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfBrokenFilesInBackupManifestCheck:");
}

id objc_msgSend_setNumberOfBrokenFilesInFSAndFSSnapshotCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfBrokenFilesInFSAndFSSnapshotCheck:");
}

id objc_msgSend_setNumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck:");
}

id objc_msgSend_setNumberOfBrokenFilesInReconciliationTableCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfBrokenFilesInReconciliationTableCheck:");
}

id objc_msgSend_setNumberOfFilesChecked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfFilesChecked:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setPlannedRescan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlannedRescan:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setUpStreamForReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpStreamForReason:error:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setupForPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupForPath:error:");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_shouldRefreshBookmark(void *a1, const char *a2, ...)
{
  return _[a1 shouldRefreshBookmark];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingLastPathComponent];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subscription_handleEventAtPath_targetItemID_eventID_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscription:handleEventAtPath:targetItemID:eventID:flags:");
}

id objc_msgSend_subscription_handleResetWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscription:handleResetWithReason:");
}

id objc_msgSend_subscriptionDidHandleBatchOfEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionDidHandleBatchOfEvents:");
}

id objc_msgSend_subscriptionHandleDroppedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionHandleDroppedEvent:");
}

id objc_msgSend_subscriptionHandleTermination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionHandleTermination:");
}

id objc_msgSend_subscriptionWillHandleBatchOfEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionWillHandleBatchOfEvents:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_suspend(void *a1, const char *a2, ...)
{
  return _[a1 suspend];
}

id objc_msgSend_symbolCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 symbolCharacterSet];
}

id objc_msgSend_synchronousRemoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 synchronousRemoteObjectProxy];
}

id objc_msgSend_telemetryReport(void *a1, const char *a2, ...)
{
  return _[a1 telemetryReport];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_typeWithFilenameExtension_conformingToType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithFilenameExtension:conformingToType:");
}

id objc_msgSend_underlyingErrors(void *a1, const char *a2, ...)
{
  return _[a1 underlyingErrors];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userPersonaUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 userPersonaUniqueString];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_wrapperWithURL_readonly_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperWithURL:readonly:error:");
}

id objc_msgSend_xpcServiceConnection(void *a1, const char *a2, ...)
{
  return _[a1 xpcServiceConnection];
}

id objc_msgSend_xpcServiceProxyWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcServiceProxyWithConnection:");
}