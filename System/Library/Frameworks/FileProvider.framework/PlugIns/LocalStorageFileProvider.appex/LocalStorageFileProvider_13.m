BOOL sub_10082A8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v15;

  v4 = v3;
  v6 = *(void *)(a3 - 8);
  v7 = __chkstk_darwin(a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
  {
    v11 = v7 & 0xFFFFDFFFFFFEF6E7;
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    v7 = v11 & (static Fields.all | 0x6409000000C000);
  }
  v12 = *(void *)(v4 + *(int *)(a3 + 40)) & v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v4, a3);
  if (v12) {
    v13 = 1;
  }
  else {
    v13 = (v9[*(int *)(a3 + 36)] & 0x51) != 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  return v13;
}

uint64_t sub_10082AA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, a2);
  v9 = &v7[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  if (!v9[16] && *(void *)v9 == 0x2000)
  {
    sub_1000D31F8(0x2000, *((void *)v9 + 1), 0);
    *(void *)v9 = 0;
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
  }
  uint64_t v10 = *(int *)(a2 + 52);
  v11 = &v7[v10 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  if (!v11[16] && *(void *)v11 == 0x2000)
  {
    sub_1000D31F8(0x2000, *((void *)v11 + 1), 0);
    *(void *)v11 = 0;
    *((void *)v11 + 1) = 0;
    v11[16] = 1;
  }
  uint64_t v12 = sub_10082AD38(v4, a2);
  if (!v2) {
    uint64_t v4 = v12;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
  return v4;
}

BOOL sub_10082AC18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ItemReconciliationHalf();
  BOOL v7 = sub_1008313B4(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  if (v7)
  {
    BOOL v8 = 1;
  }
  else
  {
    uint64_t v9 = type metadata accessor for ItemReconciliationHalf();
    BOOL v8 = sub_1008313B4(v9);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  return v8;
}

uint64_t sub_10082AD38(uint64_t a1, uint64_t a2)
{
  v72 = (uint64_t *)a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v74 = *(void *)(a2 + 24);
  uint64_t v75 = v4;
  uint64_t v76 = v6;
  uint64_t v77 = v5;
  BOOL v7 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v69 = *((void *)v7 - 1);
  v70 = v7;
  __chkstk_darwin(v7);
  uint64_t v68 = (uint64_t)&v66 - v8;
  uint64_t v9 = *(int *)(a2 + 60);
  uint64_t v71 = v2;
  uint64_t v78 = *(void *)(v2 + v9);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v74 = AssociatedTypeWitness;
  uint64_t v75 = v11;
  uint64_t v76 = AssociatedConformanceWitness;
  uint64_t v77 = v13;
  type metadata accessor for ReconciliationID();
  sub_10096C1C0();
  swift_getWitnessTable();
  if ((sub_10096C460() & 1) == 0) {
    return 0x8000000000000001;
  }
  uint64_t v14 = (uint64_t)v72;
  uint64_t v15 = v73;
  uint64_t v16 = sub_100832B1C((uint64_t)v72, (int *)a2);
  if (v15) {
    return v11;
  }
  uint64_t v20 = v17;
  v21 = v18;
  int v22 = v19;
  uint64_t v73 = v16;
  uint64_t v23 = v68;
  uint64_t v24 = sub_100827044(a2, v68);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 176))(v24);
  v26 = v70;
  uint64_t v27 = sub_100832B1C(v25, v70);
  uint64_t v71 = v30;
  uint64_t v32 = v27;
  v67 = v28;
  unsigned __int8 v33 = v29;
  (*(void (**)(uint64_t, int *))(v69 + 8))(v23, v26);
  swift_release();
  int v34 = v33 >> 6;
  if (v33 >> 6)
  {
    if (v34 == 1)
    {
      if ((v71 & 0x10) != 0)
      {
        sub_10071A38C(v73, v20, (uint64_t)v21, v22);
        return v32 | 0x4000000000000000;
      }
      int v35 = v32;
      if (v22 < 0x40u)
      {
        if ((_BYTE)v32)
        {
          uint64_t v36 = v73;
          if (v32 == 23 && (v22 & 1) == 0)
          {
            if (v21 == (void *)512)
            {
              uint64_t v37 = *v72;
              uint64_t v66 = v32;
              v38 = *(int **)(v37 + 152);
              uint64_t v69 = v37 + 152;
              v70 = v38;
              uint64_t v39 = v73;
              sub_10079A37C(v73, v20, (void *)0x200, v22);
              uint64_t v40 = v71;
              uint64_t v41 = (uint64_t)v67;
              id v42 = sub_10079A37C(v32, v71, v67, v33);
              uint64_t v43 = v41;
              __int16 v44 = ((uint64_t (*)(id))v70)(v42);
              sub_10071A38C(v39, v20, 512, v22);
              uint64_t v45 = v20;
              uint64_t v46 = v66;
              sub_10071A38C(v39, v45, 512, v22);
              sub_10071A38C(v46, v40, v41, v33);
              if ((v44 & 0x4000) != 0) {
                return 0x4000000000000017;
              }
              uint64_t v47 = v46;
              goto LABEL_52;
            }
LABEL_48:
            sub_10071A38C(v36, v20, (uint64_t)v21, v22);
            uint64_t v47 = v32;
            uint64_t v55 = v71;
            uint64_t v56 = (uint64_t)v67;
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v36 = v73;
          if ((v22 & 1) == 0)
          {
            if (v21 == (void *)512)
            {
              v59 = *(uint64_t (**)(id))(*v72 + 152);
              uint64_t v60 = v73;
              sub_10079A37C(v73, v20, (void *)0x200, v22);
              uint64_t v66 = v32;
              id v61 = sub_10079A37C(v32, v71, v67, v33);
              LOWORD(v59) = v59(v61);
              sub_10071A38C(v60, v20, 512, v22);
              if (((unsigned __int16)v59 & 0x4000) == 0)
              {
                uint64_t v62 = v66;
                uint64_t v43 = (uint64_t)v67;
                uint64_t v63 = v71;
                sub_10071A38C(v66, v71, (uint64_t)v67, v33);
                sub_10071A38C(v60, v20, 512, v22);
                uint64_t v47 = v62;
                uint64_t v55 = v63;
LABEL_53:
                uint64_t v56 = v43;
                goto LABEL_54;
              }
              sub_10071A38C(v60, v20, 512, v22);
              uint64_t v64 = v66;
              uint64_t v43 = (uint64_t)v67;
              char v65 = v71;
              sub_10071A38C(v66, v71, (uint64_t)v67, v33);
              if ((v65 & 2) != 0) {
                return 0x4000000000000000;
              }
              uint64_t v47 = v64;
LABEL_52:
              uint64_t v55 = v71;
              goto LABEL_53;
            }
            goto LABEL_48;
          }
        }
        goto LABEL_29;
      }
      int v58 = v22 >> 6;
      goto LABEL_34;
    }
  }
  else if ((v22 & 0xC0) == 0x40)
  {
    uint64_t v36 = v73;
    if (v73 == 2 && (v33 & 1) == 0)
    {
      uint64_t v48 = (uint64_t)v67;
      if (v67 != (void *)2)
      {
        sub_10071A38C(v73, v20, (uint64_t)v21, v22);
        uint64_t v47 = v32;
        uint64_t v55 = v71;
        uint64_t v56 = v48;
LABEL_54:
        unsigned __int8 v57 = v33;
        goto LABEL_30;
      }
      uint64_t v49 = v71;
      uint64_t v50 = v32;
      v51 = *(int **)(*v72 + 152);
      uint64_t v69 = *v72 + 152;
      v70 = v51;
      sub_10079A37C(v73, v20, v21, v22);
      LODWORD(v68) = v22;
      uint64_t v11 = 2;
      id v52 = sub_10079A37C(v32, v49, (void *)2, v33);
      unsigned __int8 v53 = v68;
      __int16 v54 = ((uint64_t (*)(id))v70)(v52);
      sub_10071A38C(v50, v49, 2, v33);
      sub_10071A38C(v73, v20, (uint64_t)v21, v53);
      sub_10071A38C(v50, v49, 2, v33);
      if ((v54 & 0x4000) == 0)
      {
        uint64_t v47 = v73;
        uint64_t v55 = v20;
        uint64_t v56 = (uint64_t)v21;
        unsigned __int8 v57 = v53;
LABEL_30:
        sub_10071A38C(v47, v55, v56, v57);
        return 0x8000000000000001;
      }
      return v11;
    }
LABEL_29:
    sub_10071A38C(v36, v20, (uint64_t)v21, v22);
    uint64_t v47 = v32;
    uint64_t v55 = v71;
    uint64_t v56 = (uint64_t)v67;
    unsigned __int8 v57 = v33;
    goto LABEL_30;
  }
  if (v22 <= 0x3Fu || !(v33 >> 6))
  {
    uint64_t v36 = v73;
    goto LABEL_29;
  }
  int v58 = v22 >> 6;
  if (v34 != 2)
  {
    int v35 = v32;
LABEL_34:
    if (v58 == 2) {
      return v32 | 0x4000000000000000;
    }
    if ((_BYTE)v73)
    {
      if (v73 == 2 && v35 == 2)
      {
        sub_10071A38C(v73, v20, (uint64_t)v21, v22);
        sub_10071A38C(v32, v71, (uint64_t)v67, v33);
        return 0x8000000000000002;
      }
    }
    else if (!v35)
    {
      sub_10079A37C(v73, v20, v21, v22);
      sub_10079A37C(v32, v71, v67, v33);
      sub_100713E0C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/interfaces/persistence/types/ItemReconciliation.swift", 131, 2, 1262);
    }
    sub_10071A38C(v32, v71, (uint64_t)v67, v33);
    return v73;
  }
  if (v58 != 2) {
    return v73;
  }
  return 0x8000000000000000;
}

BOOL sub_10082B4C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v17 - v8;
  BOOL v10 = sub_100827AAC(v7);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, v1, a1);
  BOOL v12 = v10 && *(void *)&v9[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] == 0;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v9, a1);
  v11(v6, v1, a1);
  if (v12)
  {
    uint64_t v14 = &v6[*(int *)(a1 + 52)];
    BOOL v15 = *(void *)&v14[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] == 0;
  }
  else
  {
    BOOL v15 = 0;
  }
  v13(v6, a1);
  return v15;
}

BOOL sub_10082B668(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  uint64_t v10 = static Fields.all | 0x10;
  uint64_t v11 = (int *)type metadata accessor for ItemReconciliationHalf();
  BOOL v12 = sub_10082A8D4(v10, 0, (uint64_t)v11);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13(v9, v2, a1);
  if (!v12)
  {
    uint64_t v27 = v7;
    uint64_t v15 = type metadata accessor for ItemReconciliationHalf();
    BOOL v16 = sub_10082A8D4(v10, 0, v15);
    uint64_t v17 = v9;
    v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v17, a1);
    BOOL v14 = 0;
    if (v16) {
      return v14;
    }
    if (*(unsigned char *)(v2 + v11[13]) == 1
      || *(unsigned char *)(v2 + *(int *)(a1 + 52) + *(int *)(v15 + 52)) == 1
      || *(unsigned char *)(v2 + v11[11]) != 3
      || *(unsigned char *)(v2 + v11[14]) != 6)
    {
      return 0;
    }
    uint64_t v19 = v2 + v11[16];
    int v20 = *(unsigned __int8 *)(v19 + 16);
    if (v20 == 3)
    {
      int v22 = v27;
      v13(v27, v2, a1);
    }
    else
    {
      if (v20 != 4)
      {
        int v22 = v27;
        v13(v27, v2, a1);
        goto LABEL_21;
      }
      unint64_t v21 = *(void *)v19 & 0xFFFFFFFFFFFFFFFELL | *(void *)(v19 + 8);
      int v22 = v27;
      v13(v27, v2, a1);
      if (v21)
      {
LABEL_21:
        BOOL v14 = 0;
        goto LABEL_22;
      }
    }
    uint64_t v24 = &v22[*(int *)(a1 + 52) + (uint64_t)*(int *)(v15 + 64)];
    int v25 = v24[16];
    if (v25 == 3)
    {
      BOOL v14 = 1;
      goto LABEL_22;
    }
    if (v25 == 4)
    {
      BOOL v14 = (*(void *)v24 & 0xFFFFFFFFFFFFFFFELL | *((void *)v24 + 1)) == 0;
LABEL_22:
      v18(v22, a1);
      return v14;
    }
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
  return 0;
}

BOOL sub_10082B97C(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

uint64_t sub_10082B988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v56 = *(void *)(a2 + 24);
  uint64_t v57 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = sub_10096C890();
  uint64_t v58 = *(void *)(v51 - 8);
  uint64_t v7 = __chkstk_darwin(v51);
  uint64_t v60 = (char *)&v49 - v8;
  uint64_t v54 = AssociatedTypeWitness;
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v49 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v55 = *(void *)(v10 - 8);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v49 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(a3, v59, a2);
  uint64_t v18 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v19 = a3;
  uint64_t v20 = *(int *)(v18 + 36);
  uint64_t v21 = *(void *)(a3 + v20);
  if ((v21 & 0x51) != 0)
  {
    uint64_t v22 = v61;
  }
  else
  {
    uint64_t v23 = v18;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v59 = v19;
    v24(v15, v19, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v15, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      uint64_t v22 = v61;
      uint64_t v19 = v59;
    }
    else
    {
      uint64_t v25 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v17, v15, v10);
      uint64_t v26 = v61;
      uint64_t v27 = sub_10035D3C0();
      if (v26)
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v10);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v59, a2);
      }
      uint64_t v29 = v59;
      *(void *)(v59 + *(int *)(v23 + 40)) |= v27;
      if (v28) {
        *(void *)(v29 + v20) = v21 | 1;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v10);
      uint64_t v19 = v59;
      uint64_t v22 = 0;
    }
  }
  uint64_t v30 = v19 + *(int *)(a2 + 52);
  uint64_t v31 = v19;
  uint64_t result = type metadata accessor for ItemReconciliationHalf();
  uint64_t v33 = *(int *)(result + 36);
  uint64_t v34 = *(void *)(v30 + v33);
  uint64_t v35 = v58;
  uint64_t v36 = v60;
  if ((v34 & 0x51) != 0) {
    return result;
  }
  uint64_t v37 = result;
  uint64_t v61 = v22;
  uint64_t v59 = v31;
  uint64_t v38 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v60, v30, v51);
  uint64_t v39 = v53;
  uint64_t v40 = v36;
  uint64_t v41 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v40, 1, v54) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v60, v38);
  }
  id v42 = v50;
  uint64_t v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v39 + 32))(v50, v60, v41);
  (*(void (**)(uint64_t))(*(void *)v52 + 176))(v43);
  uint64_t v44 = v61;
  uint64_t v45 = sub_10035D3C0();
  uint64_t v61 = v44;
  if (v44)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v54);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v59, a2);
  }
  uint64_t v47 = v45;
  char v48 = v46;
  swift_release();
  *(void *)(v30 + *(int *)(v37 + 40)) |= v47;
  if (v48) {
    *(void *)(v30 + v33) = v34 | 1;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v50, v54);
}

BOOL sub_10082BF38(char a1)
{
  return (a1 & 0xFB) == 0;
}

uint64_t sub_10082BF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v42 = *(void *)(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v43 = v3;
  v15(v11, v3, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  uint64_t v39 = a2;
  uint64_t v17 = v41;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
  uint64_t v18 = v42;
  uint64_t v19 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v20 = v43;
  int v21 = *(unsigned __int8 *)(v43 + *(int *)(v19 + 64) + 16);
  uint64_t v40 = v14;
  if (v21 != 2)
  {
    uint64_t v27 = v48;
    uint64_t v23 = v17;
    goto LABEL_7;
  }
  uint64_t v22 = v14;
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v23 = v17;
  uint64_t v24 = *(void *)(v17 + 24);
  uint64_t v25 = v48;
  uint64_t v26 = (*(uint64_t (**)(char *))(*(void *)v24 + 256))(v22);
  uint64_t v27 = v25;
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v28 = v39;
      uint64_t v33 = *(void *)(v39 + 24);
      uint64_t v34 = *(void *)(v39 + 40);
      uint64_t v44 = v5;
      uint64_t v45 = v33;
      uint64_t v46 = v18;
      uint64_t v47 = v34;
      uint64_t v35 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      char v36 = (*(uint64_t (**)(char *, uint64_t, void))(*(void *)v24 + 288))(v40, v35, 0);
      uint64_t AssociatedTypeWitness = v38;
      if ((v36 & 1) == 0)
      {
LABEL_19:
        sub_10010F2A0();
        swift_allocError();
        *(void *)uint64_t v37 = 1;
        *(_OWORD *)(v37 + 8) = 0u;
        *(_OWORD *)(v37 + 24) = 0u;
        *(void *)(v37 + 40) = 0;
        *(unsigned char *)(v37 + 48) = 9;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
LABEL_8:
      if (*(unsigned char *)(v20 + *(int *)(v19 + 52)) != 1) {
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
      uint64_t v29 = *(void *)(v28 + 24);
      uint64_t v30 = *(void *)(v28 + 40);
      if (*(unsigned char *)(v20 + *(int *)(v28 + 56)) == 1)
      {
        uint64_t v44 = v5;
        uint64_t v45 = v29;
        uint64_t v46 = v18;
        uint64_t v47 = v30;
        uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchChildrenMetadata();
      }
      else
      {
        uint64_t v44 = v5;
        uint64_t v45 = v29;
        uint64_t v46 = v18;
        uint64_t v47 = v30;
        uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchContent();
      }
      char v32 = (*(uint64_t (**)(char *, uint64_t, void))(**(void **)(v23 + 24) + 288))(v40, ChildrenMetadata, 0);
      if (v27 || (v32 & 1) != 0) {
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
      goto LABEL_19;
    }
    swift_release();
    uint64_t AssociatedTypeWitness = v38;
LABEL_7:
    uint64_t v28 = v39;
    goto LABEL_8;
  }
  uint64_t AssociatedTypeWitness = v38;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
}

uint64_t sub_10082C360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t v22 = (int *)type metadata accessor for ItemReconciliationHalf();
  *(void *)(a9 + v22[9]) = a2;
  *(void *)(a9 + v22[10]) = a3;
  *(unsigned char *)(a9 + v22[11]) = a4;
  uint64_t v23 = a9 + v22[12];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v24 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a5, v24);
  *(unsigned char *)(a9 + v22[13]) = a6;
  *(unsigned char *)(a9 + v22[14]) = a7;
  *(unsigned char *)(a9 + v22[15]) = a8;
  uint64_t v25 = a9 + v22[16];
  *(void *)uint64_t v25 = a10;
  *(void *)(v25 + 8) = a11;
  *(unsigned char *)(v25 + 16) = a12;
  uint64_t result = sub_10001AE98(a13, a9 + v22[17], (uint64_t *)&unk_100ACF710);
  *(void *)(a9 + v22[18]) = a14;
  *(void *)(a9 + v22[19]) = a15;
  return result;
}

uint64_t sub_10082C5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16 = type metadata accessor for ItemReconciliationHalf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a9, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v18 = a9 + v17[13];
  uint64_t v19 = type metadata accessor for ItemReconciliationHalf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(unsigned char *)(a9 + v17[14]) = a3;
  *(void *)(a9 + v17[15]) = a4;
  uint64_t v21 = (void *)(a9 + v17[16]);
  void *v21 = a5;
  v21[1] = a6;
  *(void *)(a9 + v17[17]) = a7;
  *(unsigned char *)(a9 + v17[18]) = a8;
  *(void *)(a9 + v17[19]) = a10;
  return result;
}

BOOL sub_10082C738(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v86 = *(void *)(a1 + 24);
  uint64_t v87 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v85 = sub_10096C890();
  uint64_t v83 = *(void *)(v85 - 8);
  uint64_t v5 = __chkstk_darwin(v85);
  uint64_t v7 = (char *)&v73 - v6;
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v74 = (char *)&v73 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v81 = (char *)&v73 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v80 = (char *)&v73 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v79 = (char *)&v73 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v78 = (char *)&v73 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v73 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v76 = *(void *)(a1 + 16);
  uint64_t v77 = v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_10096C890();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v73 - v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)&v73 - v30, v2, v28);
  LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v31, 1, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  char v32 = v2;
  uint64_t v88 = v8;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v33(v25, (uint64_t)v2, a1);
  if (v27 == 1
    && (uint64_t v34 = *(int *)(a1 + 52),
        uint64_t v35 = &v25[v34 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64)],
        !v35[16]))
  {
    uint64_t v67 = *(void *)v35;
    v82 = *(void (**)(char *, uint64_t))(v88 + 8);
    v82(v25, a1);
    if ((v67 & 2) != 0) {
      return 0;
    }
  }
  else
  {
    v82 = *(void (**)(char *, uint64_t))(v88 + 8);
    v82(v25, a1);
  }
  char v36 = &v2[*(int *)(a1 + 52)];
  uint64_t v37 = v83;
  uint64_t v38 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v7, &v32[*(int *)(a1 + 52)], v85);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v7, 1);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  uint64_t v40 = (void (*)(char *, char *, uint64_t))v33;
  v33(v23, (uint64_t)v32, a1);
  if (v39 == 1)
  {
    uint64_t v41 = &v23[*(int *)(a1 + 52)];
    uint64_t v42 = (int *)type metadata accessor for ItemReconciliationHalf();
    uint64_t v43 = *(void *)&v41[v42[9]];
    uint64_t v44 = v78;
    v40(v78, v23, a1);
    if ((v43 & 0x10) != 0)
    {
      uint64_t v56 = v82;
      v82(v44, a1);
      v56(v23, a1);
      return 0;
    }
    uint64_t v45 = *(void *)&v44[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)];
    uint64_t v46 = v44;
    uint64_t v47 = (void (*)(void))v82;
    v82(v46, a1);
    uint64_t v48 = v23;
    uint64_t v49 = v47;
    ((void (*)(char *, uint64_t))v47)(v48, a1);
    if ((v45 & 0x10) != 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v50 = v23;
    uint64_t v49 = (void (*)(void))v82;
    v82(v50, a1);
    uint64_t v42 = (int *)type metadata accessor for ItemReconciliationHalf();
  }
  uint64_t v51 = &v36[v42[16]];
  int v52 = v51[16];
  if (v52 == 3)
  {
    uint64_t v54 = v79;
    v40(v79, v32, a1);
    uint64_t v53 = v81;
LABEL_15:
    BOOL v58 = *(void *)&v54[*(int *)(a1 + 52) + v42[10]] != 0;
    goto LABEL_18;
  }
  uint64_t v53 = v81;
  uint64_t v54 = v79;
  if (v52 == 4)
  {
    unint64_t v55 = *(void *)v51 & 0xFFFFFFFFFFFFFFFELL | *((void *)v51 + 1);
    v40(v79, v32, a1);
    if (!v55) {
      goto LABEL_15;
    }
  }
  else
  {
    v40(v79, v32, a1);
  }
  BOOL v58 = 1;
LABEL_18:
  ((void (*)(char *, uint64_t))v49)(v54, a1);
  uint64_t v59 = v80;
  v40(v80, v32, a1);
  if (v58)
  {
    uint64_t v60 = v59;
LABEL_34:
    ((void (*)(char *, uint64_t))v49)(v60, a1);
    return 1;
  }
  uint64_t v61 = *(void *)&v59[*(int *)(a1 + 52) + v42[9]];
  ((void (*)(char *, uint64_t))v49)(v59, a1);
  if (!v61)
  {
    uint64_t v62 = (int *)type metadata accessor for ItemReconciliationHalf();
    uint64_t v63 = &v32[v62[16]];
    int v64 = v63[16];
    if (v64 != 3)
    {
      if (v64 == 4)
      {
        unint64_t v65 = *(void *)v63 & 0xFFFFFFFFFFFFFFFELL | *((void *)v63 + 1);
        v40(v53, v32, a1);
        uint64_t v66 = v74;
        if (!v65)
        {
LABEL_28:
          uint64_t v68 = *(void *)&v53[v62[10]];
          ((void (*)(char *, uint64_t))v49)(v53, a1);
          v40(v66, v32, a1);
          if (!v68)
          {
            uint64_t v69 = *(void *)&v66[v62[9]];
            ((void (*)(char *, uint64_t))v49)(v66, a1);
            v70 = v75;
            v40(v75, v32, a1);
            uint64_t v60 = v70;
            if (!v69)
            {
              int v71 = v70[v62[11]];
              v49();
              return v71 == 0;
            }
            goto LABEL_34;
          }
          goto LABEL_33;
        }
      }
      else
      {
        v40(v53, v32, a1);
        uint64_t v66 = v74;
      }
      ((void (*)(char *, uint64_t))v49)(v53, a1);
      v40(v66, v32, a1);
LABEL_33:
      ((void (*)(char *, uint64_t))v49)(v66, a1);
      v72 = v75;
      v40(v75, v32, a1);
      uint64_t v60 = v72;
      goto LABEL_34;
    }
    v40(v53, v32, a1);
    uint64_t v66 = v74;
    goto LABEL_28;
  }
  return 1;
}

uint64_t sub_10082CFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v246 = a4;
  uint64_t v294 = a3;
  uint64_t v289 = a2;
  uint64_t v240 = a1;
  v250 = a6;
  uint64_t v7 = sub_10096A630();
  __chkstk_darwin(v7 - 8);
  v236 = (char *)&v224 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096A650();
  uint64_t v237 = *(void *)(v9 - 8);
  uint64_t v238 = v9;
  __chkstk_darwin(v9);
  v235 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a5[5];
  uint64_t v12 = a5[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v296 = a5;
  uint64_t v14 = a5[4];
  uint64_t v15 = a5[2];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v231 = v12;
  uint64_t v232 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v257 = v15;
  uint64_t v258 = v14;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v300 = AssociatedTypeWitness;
  uint64_t v301 = v16;
  uint64_t v302 = AssociatedConformanceWitness;
  uint64_t v303 = v18;
  uint64_t v19 = type metadata accessor for ThrottlingKey();
  uint64_t v230 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  v263 = (char *)&v224 - v20;
  uint64_t v274 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v265 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = __chkstk_darwin(TupleTypeMetadata2);
  v233 = (char *)&v224 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v268 = (char *)&v224 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v291 = (char *)&v224 - v27;
  uint64_t v229 = v28;
  uint64_t v29 = __chkstk_darwin(v26);
  v266 = (char *)&v224 - v30;
  uint64_t v255 = *(v296 - 1);
  uint64_t v31 = __chkstk_darwin(v29);
  v249 = (char *)&v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v239 = (char *)&v224 - v33;
  uint64_t v285 = sub_10096C890();
  uint64_t v253 = *(void *)(v285 - 8);
  uint64_t v34 = __chkstk_darwin(v285);
  v254 = (char *)&v224 - v35;
  uint64_t v284 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v34);
  v283 = (char *)&v224 - v36;
  uint64_t v300 = v16;
  uint64_t v287 = AssociatedTypeWitness;
  uint64_t v301 = AssociatedTypeWitness;
  uint64_t v269 = v18;
  uint64_t v270 = AssociatedConformanceWitness;
  uint64_t v302 = v18;
  uint64_t v303 = AssociatedConformanceWitness;
  uint64_t v37 = type metadata accessor for ThrottlingKey();
  v295 = *(void (***)(void, void, void))(v37 - 8);
  __chkstk_darwin(v37);
  v273 = (char *)&v224 - v38;
  uint64_t v297 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  v276 = *(char **)(v40 - 8);
  v277 = (char **)v40;
  uint64_t v41 = (char *)*((void *)v276 + 8);
  uint64_t v42 = __chkstk_darwin(v40);
  v256 = (char *)&v224 - ((unint64_t)(v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v42);
  v234 = (char *)&v224 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v278 = (char *)&v224 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v275 = (char *)&v224 - v48;
  __chkstk_darwin(v47);
  v292 = (char *)&v224 - v49;
  uint64_t v50 = sub_10096C890();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v224 - v53;
  unint64_t v55 = *(char **)(v16 - 8);
  __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v224 - v56;
  char v307 = 1;
  char v306 = 1;
  uint64_t v58 = v286;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v54, v286, v50);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v55 + 6))(v54, 1, v16) == 1)
  {
    uint64_t v264 = v16;
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
  }
  else
  {
    (*((void (**)(char *, char *, uint64_t))v55 + 4))(v57, v54, v16);
    swift_errorRetain();
    swift_errorRetain();
    if (!v289)
    {
      if (qword_100ACC0F0 != -1) {
        goto LABEL_100;
      }
      goto LABEL_17;
    }
    swift_errorRetain();
    uint64_t v59 = (void (*)(char *, uint64_t))*((void *)v55 + 1);
    uint64_t v264 = v16;
    v59(v57, v16);
  }
  v251 = 0;
  v252 = 0;
  int v247 = 2;
  int v248 = 70;
  uint64_t v60 = v287;
  uint64_t v41 = v283;
  uint64_t v61 = v284;
  uint64_t v62 = v285;
  uint64_t v63 = v296;
  while (2)
  {
    uint64_t v64 = v58;
    uint64_t v65 = v58 + *((int *)v63 + 13);
    uint64_t v66 = v253;
    uint64_t v67 = v254;
    (*(void (**)(char *, uint64_t, uint64_t))(v253 + 16))(v254, v65, v62);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v67, 1, v60) == 1)
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v62);
LABEL_10:
      uint64_t v69 = 0;
      v276 = 0;
      char v70 = 2;
      char v71 = 70;
      uint64_t v72 = v64;
      unint64_t v55 = (char *)v296;
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v41, v67, v60);
    uint64_t v68 = v294;
    swift_errorRelease();
    if (v68)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v60);
      goto LABEL_10;
    }
    uint64_t v72 = v64;
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    uint64_t v89 = static Fields.all | 0x10;
    uint64_t v90 = type metadata accessor for ItemReconciliationHalf();
    BOOL v91 = sub_10082A8D4(v89, 0, v90);
    uint64_t v92 = v255;
    uint64_t v93 = v64;
    unint64_t v55 = (char *)v296;
    (*(void (**)(char *, uint64_t, void *))(v255 + 16))(v239, v93, v296);
    if (v91)
    {
      (*(void (**)(char *, char *))(v92 + 8))(v239, v55);
      uint64_t v94 = 70;
    }
    else
    {
      int v100 = v239[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)];
      (*(void (**)(void))(v92 + 8))();
      if (v100 == 3) {
        uint64_t v94 = 3;
      }
      else {
        uint64_t v94 = 70;
      }
    }
    uint64_t v101 = v287;
    BOOL v102 = v267;
    uint64_t v103 = (*(uint64_t (**)(char *, uint64_t))(**(void **)(v240 + 24) + 336))(v41, v94);
    BOOL v104 = v102;
    uint64_t v57 = (char *)TupleTypeMetadata2;
    if (v102)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v101);
      goto LABEL_33;
    }
LABEL_74:
    BOOL v267 = v104;
    v273 = (char *)v103;
    if (!sub_10096C1A0())
    {
      v256 = 0;
      uint64_t v294 = 0;
      v276 = 0;
      LODWORD(v260) = 2;
      LODWORD(v259) = 70;
LABEL_98:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v287);
      char v70 = v260;
      char v71 = (char)v259;
      uint64_t v69 = v256;
LABEL_11:
      uint64_t v73 = v255;
      uint64_t v74 = v249;
      (*(void (**)(char *, uint64_t, char *))(v255 + 16))(v249, v72, v55);
      uint64_t v75 = v289;
      if (v289 || (v246 & 1) == 0)
      {
        uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v73 + 8))(v74, v55, v258);
      }
      else
      {
        uint64_t v76 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 76);
        uint64_t v77 = v74;
        uint64_t v78 = *(void *)&v74[v76];
        uint64_t result = (*(uint64_t (**)(char *, char *))(v73 + 8))(v77, v55);
        if (v78)
        {
          sub_10096A560();
          sub_100042898((uint64_t)_swiftEmptyArrayStorage);
          sub_10010DA14();
          v80 = v69;
          v81 = v235;
          uint64_t v82 = v238;
          sub_10096ABD0();
          uint64_t v75 = sub_10096A4D0();
          uint64_t v83 = v81;
          uint64_t v69 = v80;
          (*(void (**)(char *, uint64_t))(v237 + 8))(v83, v82);
          uint64_t result = swift_errorRelease();
        }
        else
        {
          uint64_t v75 = 0;
        }
      }
      uint64_t v95 = (uint64_t)v276;
      char v96 = v307;
      char v97 = v306;
      v98 = v250;
      v99 = v251;
      uint64_t *v250 = v75;
      v98[1] = (uint64_t)v99;
      *((unsigned char *)v98 + 16) = v248;
      *((unsigned char *)v98 + 17) = v247;
      v98[3] = (uint64_t)v252;
      *((unsigned char *)v98 + 32) = v96;
      v98[5] = v294;
      v98[6] = (uint64_t)v69;
      *((unsigned char *)v98 + 56) = v71;
      *((unsigned char *)v98 + 57) = v70;
      v98[8] = v95;
      *((unsigned char *)v98 + 72) = v97;
      return result;
    }
    uint64_t v16 = 0;
    v256 = 0;
    uint64_t v294 = 0;
    v271 = &v266[*((int *)v57 + 12)];
    v272 = (char *)(v265 + 16);
    v276 = 0;
    v277 = (char **)(v230 + 16);
    v275 = (char *)(v230 + 8);
    v261 = (char *)(v265 + 8);
    v262 = (void (**)(char *, char *, uint64_t))(v230 + 32);
    LODWORD(v260) = 2;
    LODWORD(v259) = 70;
    v169 = v273;
    while (1)
    {
      BOOL v172 = sub_10096C130();
      sub_10096C0E0();
      v173 = v57;
      if (v172)
      {
        uint64_t v57 = v266;
        (*(void (**)(char *, char *, char *))(v265 + 16))(v266, &v169[((*(unsigned __int8 *)(v265 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80))+ *(void *)(v265 + 72) * v16], v173);
        uint64_t v41 = v291;
      }
      else
      {
        uint64_t result = sub_10096CC20();
        uint64_t v41 = v291;
        uint64_t v57 = v266;
        if (v229 != 8) {
          goto LABEL_102;
        }
        uint64_t v300 = result;
        (*(void (**)(char *, uint64_t *, char *))v272)(v266, &v300, v173);
        swift_unknownObjectRelease();
      }
      if (__OFADD__(v16, 1)) {
        break;
      }
      uint64_t v282 = v16 + 1;
      uint64_t v285 = v16;
      LODWORD(v280) = *v271;
      v295 = (void (**)(void, void, void))*((void *)v271 + 1);
      v174 = (char *)*((void *)v271 + 3);
      v293 = (char *)*((void *)v271 + 2);
      v288 = v174;
      uint64_t v175 = *((void *)v271 + 5);
      v292 = (char *)*((void *)v271 + 4);
      v176 = v292;
      uint64_t v281 = v175;
      unsigned __int8 v177 = v271[48];
      int v308 = v177;
      uint64_t v178 = *((void *)v271 + 8);
      uint64_t v290 = *((void *)v271 + 7);
      uint64_t v297 = v178;
      v179 = v57;
      v180 = v173;
      v181 = &v41[*((int *)v173 + 12)];
      uint64_t v182 = v274;
      (*v262)(v41, v179, v274);
      int v183 = v280;
      char *v181 = v280;
      v184 = v293;
      *((void *)v181 + 1) = v295;
      *((void *)v181 + 2) = v184;
      *((void *)v181 + 3) = v174;
      *((void *)v181 + 4) = v176;
      uint64_t v185 = v281;
      *((void *)v181 + 5) = v281;
      v181[48] = v177;
      uint64_t v186 = v290;
      uint64_t v187 = v297;
      *((void *)v181 + 7) = v290;
      *((void *)v181 + 8) = v187;
      v188 = v268;
      v189 = &v268[*((int *)v180 + 12)];
      v278 = *v277;
      ((void (*)(char *, char *, uint64_t))v278)(v268, v41, v182);
      char *v189 = v183;
      v190 = v293;
      *((void *)v189 + 1) = v295;
      *((void *)v189 + 2) = v190;
      v191 = v292;
      *((void *)v189 + 3) = v288;
      *((void *)v189 + 4) = v191;
      uint64_t v192 = v297;
      *((void *)v189 + 5) = v185;
      v189[48] = v308;
      *((void *)v189 + 7) = v186;
      *((void *)v189 + 8) = v192;
      swift_errorRetain();
      v193 = *(void (**)(char *, uint64_t))v275;
      swift_bridgeObjectRetain();
      uint64_t v194 = v182;
      v193(v188, v182);
      if (v183 == 1)
      {
        v195 = v263;
        v196 = v291;
        v197 = (void (*)(char *, char *, uint64_t))v278;
        ((void (*)(char *, char *, uint64_t))v278)(v263, v291, v194);
        uint64_t v300 = v287;
        uint64_t v301 = v264;
        uint64_t v302 = v270;
        uint64_t v303 = v269;
        uint64_t v198 = type metadata accessor for ReconciliationID();
        unsigned int v199 = v195[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        if (v199 > 0x17 || ((1 << v199) & 0x80004F) == 0)
        {
          v170 = (char *)TupleTypeMetadata2;
          (*(void (**)(char *, uint64_t))v261)(v196, TupleTypeMetadata2);
          swift_errorRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(*(void *)(v198 - 8) + 8))(v263, v198);
          goto LABEL_78;
        }
        v200 = v197;
        v201 = v193;
        (*(void (**)(char *, uint64_t))(*(void *)(v198 - 8) + 8))(v263, v198);
        v170 = (char *)TupleTypeMetadata2;
        uint64_t v202 = v185;
        if (!v294)
        {
          v203 = v200;
          v204 = v233;
          v205 = &v233[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v206 = v274;
          v203(v233, v196, v274);
          char *v205 = 1;
          v207 = v293;
          *((void *)v205 + 1) = v295;
          *((void *)v205 + 2) = v207;
          v208 = v292;
          *((void *)v205 + 3) = v288;
          *((void *)v205 + 4) = v208;
          *((void *)v205 + 5) = v202;
          v205[48] = v308;
          uint64_t v209 = v297;
          *((void *)v205 + 7) = v290;
          *((void *)v205 + 8) = v209;
          if (v202)
          {
            swift_errorRetain();
            v201(v204, v206);
            swift_getErrorValue();
            if (sub_10016D850(v305))
            {
              v170 = (char *)TupleTypeMetadata2;
              (*(void (**)(char *, uint64_t))v261)(v196, TupleTypeMetadata2);
              swift_errorRelease();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              uint64_t v294 = 0;
            }
            else
            {
              swift_errorRetain();
              swift_errorRelease();
              v210 = v268;
              v211 = &v268[*(int *)(TupleTypeMetadata2 + 48)];
              v254 = (char *)v201;
              ((void (*)(char *, char *, uint64_t))v278)(v268, v196, v206);
              char *v211 = 1;
              v212 = v293;
              *((void *)v211 + 1) = v295;
              *((void *)v211 + 2) = v212;
              v213 = v288;
              v214 = v292;
              *((void *)v211 + 3) = v288;
              *((void *)v211 + 4) = v214;
              *((void *)v211 + 5) = v202;
              v211[48] = v308;
              uint64_t v215 = v297;
              *((void *)v211 + 7) = v290;
              *((void *)v211 + 8) = v215;
              v201(v210, v206);
              v216 = &v210[*(int *)(TupleTypeMetadata2 + 48)];
              ((void (*)(char *, char *, uint64_t))v278)(v210, v291, v206);
              char *v216 = 1;
              v217 = v293;
              *((void *)v216 + 1) = v295;
              *((void *)v216 + 2) = v217;
              v218 = v292;
              *((void *)v216 + 3) = v213;
              *((void *)v216 + 4) = v218;
              uint64_t v219 = v202;
              *((void *)v216 + 5) = v202;
              v216[48] = v308;
              *((void *)v216 + 7) = v290;
              *((void *)v216 + 8) = v215;
              LODWORD(v259) = sub_10070C05C(v206);
              swift_errorRelease();
              ((void (*)(char *, uint64_t))v254)(v210, v206);
              v170 = (char *)TupleTypeMetadata2;
              v220 = &v210[*(int *)(TupleTypeMetadata2 + 48)];
              v221 = v291;
              ((void (*)(char *, char *, uint64_t))v278)(v210, v291, v206);
              (*(void (**)(char *, char *))v261)(v221, v170);
              swift_errorRelease();
              uint64_t v222 = v297;
              swift_bridgeObjectRelease();
              LODWORD(v260) = 1;
              char *v220 = 1;
              *((void *)v220 + 1) = v295;
              *((void *)v220 + 2) = v217;
              v223 = v292;
              *((void *)v220 + 3) = v288;
              *((void *)v220 + 4) = v223;
              *((void *)v220 + 5) = v219;
              v220[48] = v308;
              *((void *)v220 + 7) = v290;
              *((void *)v220 + 8) = v222;
              char v306 = 0;
              ((void (*)(char *, uint64_t))v254)(v210, v206);
              v256 = v217;
              uint64_t v294 = v219;
              v276 = v223;
            }
          }
          else
          {
            (*(void (**)(char *, char *))v261)(v196, v170);
            swift_errorRelease();
            swift_bridgeObjectRelease();
            v201(v204, v206);
            uint64_t v294 = 0;
          }
          goto LABEL_78;
        }
        (*(void (**)(char *, uint64_t))v261)(v196, TupleTypeMetadata2);
        swift_errorRelease();
      }
      else
      {
        v170 = (char *)TupleTypeMetadata2;
        (*(void (**)(char *, uint64_t))v261)(v291, TupleTypeMetadata2);
        swift_errorRelease();
      }
      swift_bridgeObjectRelease();
LABEL_78:
      v169 = v273;
      uint64_t v171 = sub_10096C1A0();
      uint64_t v72 = v286;
      uint64_t v16 = v285 + 1;
      uint64_t v41 = v283;
      unint64_t v55 = (char *)v296;
      uint64_t v57 = v170;
      uint64_t v61 = v284;
      if (v282 == v171) {
        goto LABEL_98;
      }
    }
    __break(1u);
LABEL_100:
    swift_once();
LABEL_17:
    uint64_t v84 = static Fields.all | 0x10;
    uint64_t v85 = type metadata accessor for ItemReconciliationHalf();
    if (sub_10082A8D4(v84, 0, v85)) {
      uint64_t v86 = 70;
    }
    else {
      uint64_t v86 = 3;
    }
    BOOL v87 = v267;
    uint64_t v88 = (*(uint64_t (**)(char *, uint64_t))(**(void **)(v240 + 24) + 344))(v57, v86);
    if (v87)
    {
      (*((void (**)(char *, uint64_t))v55 + 1))(v57, v16);
      swift_errorRelease();
LABEL_33:
      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t v61 = v88;
    v226 = v55;
    uint64_t v227 = v85;
    v225 = v57;
    uint64_t v264 = v16;
    v105 = v277;
    uint64_t v106 = sub_10096C1A0();
    BOOL v267 = 0;
    if (!v106)
    {
      v251 = 0;
      v252 = 0;
      uint64_t v289 = 0;
      int v247 = 2;
      int v248 = 70;
      uint64_t v62 = v285;
LABEL_96:
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v226 + 1))(v225, v264);
      uint64_t v63 = v296;
      uint64_t v58 = v286;
      uint64_t v60 = v287;
      uint64_t v41 = v283;
      uint64_t v61 = v284;
      continue;
    }
    break;
  }
  v224 = v41;
  uint64_t v72 = 0;
  v251 = 0;
  v252 = 0;
  uint64_t v289 = 0;
  v242 = &v292[*((int *)v105 + 12)];
  unint64_t v55 = v275;
  v243 = (void (**)(char *, char *, uint64_t))(v295 + 4);
  v244 = (void (**)(char *, uint64_t *, char **))(v276 + 16);
  v272 = (char *)(v295 + 2);
  v262 = (void (**)(char *, char *, uint64_t))(v295 + 1);
  v241 = (void (**)(char *, char **))(v276 + 8);
  int v247 = 2;
  int v248 = 70;
  uint64_t v245 = v61;
  while (2)
  {
    BOOL v104 = sub_10096C130();
    sub_10096C0E0();
    if (v104)
    {
      uint64_t v103 = (*((uint64_t (**)(char *, unint64_t, char **))v276 + 2))(v292, v61+ ((v276[80] + 32) & ~(unint64_t)v276[80])+ *((void *)v276 + 9) * v72, v105);
      uint64_t v109 = v72 + 1;
      if (__OFADD__(v72, 1)) {
        goto LABEL_73;
      }
      goto LABEL_40;
    }
    uint64_t result = sub_10096CC20();
    if (v224 == (char *)8)
    {
      BOOL v104 = result;
      uint64_t v300 = result;
      (*v244)(v292, &v300, v105);
      uint64_t v103 = swift_unknownObjectRelease();
      uint64_t v109 = v72 + 1;
      if (__OFADD__(v72, 1))
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
LABEL_40:
      uint64_t v281 = v72;
      uint64_t v282 = v109;
      v110 = v105;
      char v111 = *v242;
      LODWORD(v280) = *v242;
      v112 = (char *)*((void *)v242 + 2);
      uint64_t v290 = *((void *)v242 + 1);
      uint64_t v113 = v290;
      uint64_t v114 = *((void *)v242 + 3);
      uint64_t v57 = (char *)*((void *)v242 + 4);
      v293 = (char *)*((void *)v242 + 5);
      int v308 = v242[48];
      v115 = (char *)*((void *)v242 + 8);
      v295 = (void (**)(void, void, void))*((void *)v242 + 7);
      v288 = v115;
      v116 = &v55[*((int *)v110 + 12)];
      (*v243)(v55, v292, v297);
      char *v116 = v111;
      *((void *)v116 + 1) = v113;
      *((void *)v116 + 2) = v112;
      *((void *)v116 + 3) = v114;
      *((void *)v116 + 4) = v57;
      *((void *)v116 + 5) = v293;
      char v117 = v308;
      v116[48] = v308;
      uint64_t v41 = v288;
      *((void *)v116 + 7) = v295;
      *((void *)v116 + 8) = v41;
      uint64_t v118 = *((int *)v110 + 12);
      v119 = v278;
      v120 = &v278[v118];
      v271 = *(char **)v272;
      ((void (*)(char *, char *, uint64_t))v271)(v278, v55, v297);
      int v121 = v280;
      char *v120 = v280;
      *((void *)v120 + 1) = v290;
      *((void *)v120 + 2) = v112;
      uint64_t v260 = v114;
      v261 = v112;
      *((void *)v120 + 3) = v114;
      *((void *)v120 + 4) = v57;
      v259 = v57;
      v122 = v293;
      *((void *)v120 + 5) = v293;
      v120[48] = v117;
      *((void *)v120 + 7) = v295;
      *((void *)v120 + 8) = v41;
      v123 = v41;
      swift_errorRetain();
      v124 = *v262;
      swift_bridgeObjectRetain();
      ((void (*)(char *, uint64_t))v124)(v119, v297);
      if (v121 != 1)
      {
        unint64_t v55 = v275;
        v105 = v277;
        (*v241)(v275, v277);
        swift_errorRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = v245;
        uint64_t v107 = v281;
        goto LABEL_37;
      }
      uint64_t v41 = v122;
      v105 = v277;
      uint64_t v57 = v272;
      v125 = v273;
      unint64_t v55 = v275;
      v126 = (void (*)(void))v271;
      ((void (*)(char *, char *, uint64_t))v271)(v273, v275, v297);
      uint64_t v300 = v264;
      uint64_t v301 = v287;
      uint64_t v302 = v269;
      uint64_t v303 = v270;
      uint64_t v280 = type metadata accessor for ReconciliationID();
      unsigned int v127 = v125[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (v127 >= 4 && v127 != 6)
      {
        v228 = v124;
        v128 = v234;
        uint64_t v107 = v281;
        v129 = v41;
        if (v127 != 23)
        {
          ((void (*)(char *, char **, uint64_t))*v241)(v55, v105, v227);
          swift_errorRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *))(*(void *)(v280 - 8) + 8))(v273);
          goto LABEL_68;
        }
        if (!sub_10082A8D4(static Fields.all | 0x10, 0, v227) || v289)
        {
          (*v241)(v55, v105);
          swift_errorRelease();
          swift_bridgeObjectRelease();
          uint64_t v57 = v251;
          v149 = v252;
          v129 = (char *)v289;
          goto LABEL_67;
        }
        v130 = &v128[*((int *)v105 + 12)];
        ((void (*)(char *, char *, uint64_t))v271)(v128, v55, v297);
        char *v130 = 1;
        v131 = (void (**)(void, void))v261;
        *((void *)v130 + 1) = v290;
        *((void *)v130 + 2) = v131;
        v132 = v259;
        *((void *)v130 + 3) = v260;
        *((void *)v130 + 4) = v132;
        *((void *)v130 + 5) = v41;
        v130[48] = v308;
        v133 = v288;
        *((void *)v130 + 7) = v295;
        *((void *)v130 + 8) = v133;
        if (v41)
        {
          swift_errorRetain();
          ((void (*)(char *, uint64_t))v228)(v128, v297);
          uint64_t v41 = v278;
          if ((v246 & 2) != 0) {
            goto LABEL_52;
          }
          v304 = v129;
          swift_errorRetain();
          sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
          sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
          if (!swift_dynamicCast()) {
            goto LABEL_51;
          }
          sub_10001AE98((uint64_t)&v300, (uint64_t)v298, (uint64_t *)&unk_100ACD9A0);
          sub_10001AE98((uint64_t)v298, (uint64_t)v299, (uint64_t *)&unk_100ACD9A0);
          if (sub_10021FECC((uint64_t)v299))
          {
            sub_10021FD38((uint64_t)v298);
LABEL_51:
            uint64_t v41 = v278;
LABEL_52:
            swift_errorRetain();
            swift_errorRelease();
            v135 = &v41[*((int *)v105 + 12)];
            v136 = v129;
            ((void (*)(char *, char *, uint64_t))v271)(v41, v55, v297);
            char *v135 = 1;
            v137 = (void (**)(void, void))v261;
            *((void *)v135 + 1) = v290;
            *((void *)v135 + 2) = v137;
            v138 = v259;
            *((void *)v135 + 3) = v260;
            *((void *)v135 + 4) = v138;
            *((void *)v135 + 5) = v129;
            v135[48] = v308;
            v139 = v288;
            *((void *)v135 + 7) = v295;
            *((void *)v135 + 8) = v139;
            uint64_t v140 = v297;
            ((void (*)(char *, uint64_t))v228)(v41, v297);
            v141 = &v41[*((int *)v105 + 12)];
            ((void (*)(char *, char *, uint64_t))v271)(v41, v55, v140);
            char *v141 = 1;
            v142 = (void (**)(void, void))v261;
            *((void *)v141 + 1) = v290;
            *((void *)v141 + 2) = v142;
            v143 = v259;
            *((void *)v141 + 3) = v260;
            *((void *)v141 + 4) = v143;
            v144 = v136;
            *((void *)v141 + 5) = v136;
            v141[48] = v308;
            v145 = v288;
            *((void *)v141 + 7) = v295;
            *((void *)v141 + 8) = v145;
            int v248 = sub_10070C05C(v140);
            swift_errorRelease();
            ((void (*)(char *, uint64_t))v228)(v41, v140);
            v146 = &v41[*((int *)v105 + 12)];
            ((void (*)(char *, char *, uint64_t))v271)(v41, v55, v140);
            (*v241)(v55, v105);
            swift_errorRelease();
            swift_bridgeObjectRelease();
            char *v146 = 1;
            v147 = v261;
            *((void *)v146 + 1) = v290;
            *((void *)v146 + 2) = v147;
            v148 = v259;
            *((void *)v146 + 3) = v260;
            *((void *)v146 + 4) = v148;
            *((void *)v146 + 5) = v144;
            v146[48] = v308;
            *((void *)v146 + 7) = v295;
            *((void *)v146 + 8) = v145;
            char v307 = 0;
            uint64_t v57 = v147;
            v149 = v148;
            ((void (*)(char *, uint64_t))v228)(v41, v140);
            int v247 = 0;
            v129 = v293;
LABEL_67:
            (*(void (**)(char *))(*(void *)(v280 - 8) + 8))(v273);
            v251 = v57;
            v252 = v149;
            uint64_t v289 = (uint64_t)v129;
LABEL_68:
            uint64_t v61 = v245;
LABEL_37:
            uint64_t v108 = sub_10096C1A0();
            uint64_t v72 = v107 + 1;
            uint64_t v62 = v285;
            if (v282 == v108) {
              goto LABEL_96;
            }
            continue;
          }
          v168 = v299;
          Filename.init(rawValue:)(*(Swift::String *)(&v134 - 1));
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          sub_10021FD38((uint64_t)v298);
          (*v241)(v55, v105);
          v129 = 0;
        }
        else
        {
          (*v241)(v55, v105);
          swift_errorRelease();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v228)(v128, v297);
        }
        uint64_t v57 = v251;
        v149 = v252;
        goto LABEL_67;
      }
      (*(void (**)(char *))(*(void *)(v280 - 8) + 8))(v273);
      v150 = &v256[*((int *)v105 + 12)];
      v126();
      char *v150 = 1;
      v151 = (void (**)(void, void))v261;
      *((void *)v150 + 1) = v290;
      *((void *)v150 + 2) = v151;
      v152 = v259;
      *((void *)v150 + 3) = v260;
      *((void *)v150 + 4) = v152;
      v153 = v41;
      *((void *)v150 + 5) = v41;
      v150[48] = v308;
      *((void *)v150 + 7) = v295;
      *((void *)v150 + 8) = v123;
      uint64_t v107 = v281;
      if (!v41)
      {
        (*v241)(v55, v105);
        swift_errorRelease();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v124)(v256, v297);
        goto LABEL_68;
      }
      swift_errorRetain();
      v228 = v124;
      ((void (*)(char *, uint64_t))v124)(v256, v297);
      v304 = v41;
      swift_errorRetain();
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      uint64_t v57 = (char *)&unk_100ACD9A0;
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      int v154 = swift_dynamicCast();
      uint64_t v61 = v245;
      if (v154)
      {
        sub_10001AE98((uint64_t)&v300, (uint64_t)v298, (uint64_t *)&unk_100ACD9A0);
        sub_10001AE98((uint64_t)v298, (uint64_t)v299, (uint64_t *)&unk_100ACD9A0);
        if (sub_10021FECC((uint64_t)v299) != 11)
        {
          sub_10021FD38((uint64_t)v298);
          goto LABEL_57;
        }
      }
      else
      {
LABEL_57:
        if (!v289)
        {
          swift_getErrorValue();
          if (sub_10016D850(v299[17]))
          {
            (*v241)(v55, v105);
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            uint64_t v289 = 0;
          }
          else
          {
            uint64_t v41 = v278;
            v155 = &v278[*((int *)v105 + 12)];
            uint64_t v156 = v297;
            ((void (*)(char *, char *, uint64_t))v271)(v278, v55, v297);
            char *v155 = 1;
            v157 = (void (**)(void, void))v261;
            *((void *)v155 + 1) = v290;
            *((void *)v155 + 2) = v157;
            v158 = v259;
            *((void *)v155 + 3) = v260;
            *((void *)v155 + 4) = v158;
            v159 = v158;
            *((void *)v155 + 5) = v153;
            v155[48] = v308;
            v160 = v288;
            *((void *)v155 + 7) = v295;
            *((void *)v155 + 8) = v160;
            swift_errorRetain();
            ((void (*)(char *, uint64_t))v228)(v41, v156);
            v161 = &v41[*((int *)v105 + 12)];
            ((void (*)(char *, char *, uint64_t))v271)(v41, v55, v156);
            char *v161 = 1;
            v162 = (void (**)(void, void))v261;
            *((void *)v161 + 1) = v290;
            *((void *)v161 + 2) = v162;
            *((void *)v161 + 3) = v260;
            *((void *)v161 + 4) = v159;
            *((void *)v161 + 5) = v153;
            v161[48] = v308;
            v163 = v288;
            *((void *)v161 + 7) = v295;
            *((void *)v161 + 8) = v163;
            int v248 = sub_10070C05C(v156);
            swift_errorRelease();
            ((void (*)(char *, uint64_t))v228)(v41, v156);
            v164 = &v41[*((int *)v105 + 12)];
            ((void (*)(char *, char *, uint64_t))v271)(v41, v55, v156);
            (*v241)(v55, v105);
            swift_errorRelease();
            swift_bridgeObjectRelease();
            char *v164 = 1;
            v165 = (void (**)(void, void))v261;
            *((void *)v164 + 1) = v290;
            *((void *)v164 + 2) = v165;
            uint64_t v57 = v259;
            *((void *)v164 + 3) = v260;
            *((void *)v164 + 4) = v57;
            *((void *)v164 + 5) = v153;
            v164[48] = v308;
            v166 = v288;
            *((void *)v164 + 7) = v295;
            *((void *)v164 + 8) = v166;
            char v307 = 0;
            uint64_t v167 = v156;
            uint64_t v61 = v245;
            ((void (*)(char *, uint64_t))v228)(v41, v167);
            int v247 = 0;
            v251 = v261;
            v252 = v57;
            uint64_t v289 = (uint64_t)v153;
          }
          goto LABEL_37;
        }
      }
      (*v241)(v55, v105);
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    break;
  }
  __break(1u);
LABEL_102:
  __break(1u);
  return result;
}

uint64_t sub_10082F0AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v15 = *(void *)(v1 + v14[19]);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v16(v13, v1, a1);
  if ((v15 & 4) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, a1);
    return 2;
  }
  uint64_t v17 = &v13[*(int *)(a1 + 52)];
  uint64_t v35 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v18 = *(void *)&v17[v35[19]];
  uint64_t v34 = *(void (**)(char *, uint64_t))(v3 + 8);
  v34(v13, a1);
  if ((v18 & 4) != 0) {
    return 2;
  }
  uint64_t v19 = *(int *)(a1 + 56);
  if (*(unsigned char *)(v1 + v19) != 1 && (*(unsigned char *)(v1 + v14[10]) & 8) != 0 && *(unsigned char *)(v1 + v14[14]))
  {
    uint64_t v20 = (uint64_t *)(v1 + v14[16]);
    int v21 = *((unsigned __int8 *)v20 + 16);
    uint64_t v33 = v20;
    if (v21)
    {
      v16(v11, v1, a1);
    }
    else
    {
      uint64_t v23 = *v20;
      v16(v11, v1, a1);
      if ((v23 & 0x40000) != 0)
      {
        v34(v11, a1);
        goto LABEL_17;
      }
    }
    uint64_t v24 = *(void *)&v11[v14[9]];
    v34(v11, a1);
    if ((v24 & 0x10) == 0)
    {
      int v25 = *((unsigned __int8 *)v33 + 16);
      v16(v8, v1, a1);
      if (v25 != 2)
      {
        v34(v8, a1);
        return 0;
      }
      uint64_t v26 = *(void *)&v8[v14[10]];
      v34(v8, a1);
      if (!v26) {
        return 0;
      }
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)(v1 + v19) - 1 < 4) {
    return 2;
  }
  uint64_t v27 = v1 + *(int *)(a1 + 52);
  if ((*(unsigned char *)(v27 + v35[10]) & 8) == 0 || !*(unsigned char *)(v27 + v35[13])) {
    return 2;
  }
  BOOL v28 = sub_100827AAC(a1);
  uint64_t v29 = v36;
  v16(v36, v1, a1);
  if (!v28)
  {
    uint64_t v30 = &v29[*(int *)(a1 + 52) + (uint64_t)v35[16]];
    if (!v30[16])
    {
      uint64_t v32 = *(void *)v30;
      v34(v29, a1);
      if (v32 != 2) {
        goto LABEL_23;
      }
      return 2;
    }
  }
  v34(v29, a1);
LABEL_23:
  uint64_t v31 = v27 + v35[16];
  if (!*(unsigned char *)(v31 + 16) && (*(unsigned char *)(v31 + 2) & 4) != 0) {
    return 2;
  }
  return 1;
}

uint64_t sub_10082F470(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v82 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v81 = (char *)&v70 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v70 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v70 - v12;
  uint64_t v15 = *(void *)(v14 + 40);
  uint64_t v85 = *(const char **)(v14 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_10096C890();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v70 - v19;
  int v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v86 = v2;
  v21((char *)&v70 - v19, v2, v17);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);
  uint64_t v83 = AssociatedTypeWitness;
  LODWORD(AssociatedTypeWitness) = v22(v20, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (AssociatedTypeWitness == 1)
  {
    uint64_t v23 = v86 + *(int *)(a1 + 52);
    uint64_t v84 = *(void *)(a1 + 24);
    uint64_t v24 = v23 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
    if (!*(unsigned char *)(v24 + 16) && *(void *)v24 == 2)
    {
      uint64_t v73 = 0;
      int v79 = 0;
      uint64_t v78 = "🔍";
      int v74 = 2;
      uint64_t v77 = 4;
      uint64_t v72 = "";
      uint64_t v25 = v83;
      goto LABEL_23;
    }
  }
  uint64_t v26 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v27 = *(void *)(v86 + *(int *)(v26 + 36)) & 0x51;
  BOOL v28 = *(void (**)(char *))(v4 + 16);
  v28(v13);
  uint64_t v70 = v15;
  if (v27) {
    LOBYTE(v27) = sub_100827AAC(a1);
  }
  uint64_t v29 = v81;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v13, a1);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v11, v86, a1);
  if (v27)
  {
    v30(v11, a1);
    int v79 = 0;
    uint64_t v77 = 6;
    uint64_t v78 = "⬆︎";
  }
  else
  {
    uint64_t v31 = *(void *)&v11[*(int *)(v26 + 40)];
    v30(v11, a1);
    uint64_t v32 = "⬆︎";
    uint64_t v33 = 6;
    if (v31) {
      int v34 = 0;
    }
    else {
      int v34 = 2;
    }
    int v79 = v34;
    if (!v31)
    {
      uint64_t v33 = 1;
      uint64_t v32 = " ";
    }
    uint64_t v77 = v33;
    uint64_t v78 = v32;
  }
  uint64_t v35 = v86;
  uint64_t v36 = v86 + *(int *)(a1 + 52);
  uint64_t v84 = *(void *)(a1 + 24);
  uint64_t v37 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v38 = *(void *)(v36 + *(int *)(v37 + 36)) & 0x51;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v29, v35, a1);
  if (v38)
  {
    BOOL v39 = sub_100827AAC(a1);
    v30(v29, a1);
    uint64_t v40 = v82;
    ((void (*)(char *, uint64_t, uint64_t))v28)(v82, v86, a1);
    uint64_t v41 = v40;
    uint64_t v25 = v83;
    if (v39)
    {
      v30(v40, a1);
      goto LABEL_20;
    }
  }
  else
  {
    v30(v29, a1);
    uint64_t v42 = v82;
    ((void (*)(char *, uint64_t, uint64_t))v28)(v82, v86, a1);
    uint64_t v41 = v42;
    uint64_t v25 = v83;
  }
  uint64_t v43 = *(void *)&v41[*(int *)(a1 + 52) + *(int *)(v37 + 40)];
  ((void (*)(char *))v30)(v41);
  if (!v43)
  {
    uint64_t v72 = " ";
    int v74 = 2;
    uint64_t v44 = 1;
    goto LABEL_22;
  }
LABEL_20:
  int v74 = 0;
  uint64_t v72 = "⬇︎";
  uint64_t v44 = 6;
LABEL_22:
  uint64_t v73 = v44;
LABEL_23:
  uint64_t v45 = v86;
  uint64_t v88 = *(void *)(v86 + *(int *)(a1 + 60));
  uint64_t v46 = (void *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  v90._uint64_t countAndFlagsBits = v25;
  v90._object = v46;
  uint64_t v91 = AssociatedConformanceWitness;
  uint64_t v92 = v48;
  type metadata accessor for ReconciliationID();
  sub_10096C1C0();
  swift_getWitnessTable();
  int v49 = sub_10096C460();
  int v50 = *(unsigned __int8 *)(v45 + *(int *)(a1 + 56));
  int v80 = v49;
  if (v50 == 4)
  {
    v71._uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    v90._uint64_t countAndFlagsBits = 32;
    v90._object = (void *)0xE100000000000000;
    uint64_t v52 = (void *)0xE300000000000000;
    v53._uint64_t countAndFlagsBits = 6516580;
    switch(v50)
    {
      case 1:
        v53._uint64_t countAndFlagsBits = 7498084;
        break;
      case 2:
        uint64_t v52 = (void *)0xE700000000000000;
        v53._uint64_t countAndFlagsBits = 0x6B6E696C6D7973;
        break;
      case 3:
        uint64_t v52 = (void *)0xE500000000000000;
        v53._uint64_t countAndFlagsBits = 0x7361696C61;
        break;
      default:
        break;
    }
    v53._object = v52;
    sub_10096BDC0(v53);
    swift_bridgeObjectRelease();
    v71._uint64_t countAndFlagsBits = v90._countAndFlagsBits;
    object = v90._object;
  }
  v71._object = object;
  unint64_t v54 = *(void *)(v86 + *(int *)(a1 + 76));
  if (v54)
  {
    v90._uint64_t countAndFlagsBits = 0x3A636570733C20;
    v90._object = (void *)0xE700000000000000;
    v93._uint64_t countAndFlagsBits = sub_100608E98(v54);
    sub_10096BDC0(v93);
    swift_bridgeObjectRelease();
    v94._uint64_t countAndFlagsBits = 62;
    v94._object = (void *)0xE100000000000000;
    sub_10096BDC0(v94);
    uint64_t countAndFlagsBits = v90._countAndFlagsBits;
    unint64_t v55 = v90._object;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    unint64_t v55 = (void *)0xE000000000000000;
  }
  unint64_t v75 = (unint64_t)v55;
  v90._uint64_t countAndFlagsBits = 0;
  v90._object = (void *)0xE000000000000000;
  uint64_t v56 = *(void *)(v86 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 76));
  if ((v56 & 3) != 0)
  {
    v95._uint64_t countAndFlagsBits = 2425659376;
    v95._object = (void *)0xA400000000000000;
    sub_10096BDC0(v95);
  }
  if ((v56 & 4) != 0)
  {
    v96._uint64_t countAndFlagsBits = 9149666;
    v96._object = (void *)0xA300000000000000;
    sub_10096BDC0(v96);
  }
  if ((v56 & 8) != 0)
  {
    v97._uint64_t countAndFlagsBits = 2207555568;
    v97._object = (void *)0xA400000000000000;
    sub_10096BDC0(v97);
  }
  uint64_t v57 = v86;
  LODWORD(v82) = sub_10082FFCC(a1);
  LODWORD(v81) = *(unsigned __int8 *)(v57 + *(int *)(a1 + 72));
  uint64_t v58 = "🙋‍♂️";
  uint64_t v83 = v54 & 2;
  if ((v54 & 2) == 0) {
    uint64_t v58 = "";
  }
  uint64_t v85 = v58;
  uint64_t v88 = sub_10096CC10();
  unint64_t v89 = v59;
  v98._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v98);
  swift_bridgeObjectRelease();
  v99._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v99);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v90);
  swift_bridgeObjectRelease();
  v100._uint64_t countAndFlagsBits = 32;
  v100._object = (void *)0xE100000000000000;
  sub_10096BDC0(v100);
  uint64_t v60 = v88;
  unint64_t v61 = v89;
  uint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  sub_10096CBD0(38);
  v101._uint64_t countAndFlagsBits = 980641340;
  v101._object = (void *)0xE400000000000000;
  sub_10096BDC0(v101);
  swift_getWitnessTable();
  sub_10096D270();
  v102._uint64_t countAndFlagsBits = 0x663C203E2D3C203ELL;
  v102._object = (void *)0xEA00000000003A70;
  sub_10096BDC0(v102);
  type metadata accessor for ItemReconciliationHalf();
  swift_getWitnessTable();
  sub_10096D270();
  v103._uint64_t countAndFlagsBits = 62;
  v103._object = (void *)0xE100000000000000;
  sub_10096BDC0(v103);
  sub_10096BDC0(v71);
  swift_bridgeObjectRelease();
  v104._uint64_t countAndFlagsBits = 0x3A646568637320;
  v104._object = (void *)0xE700000000000000;
  sub_10096BDC0(v104);
  v87._uint64_t countAndFlagsBits = sub_100437928(*(void *)(v57 + *(int *)(a1 + 64)));
  v87._object = v62;
  v105._uint64_t countAndFlagsBits = 35;
  v105._object = (void *)0xE100000000000000;
  sub_10096BDC0(v105);
  v106._uint64_t countAndFlagsBits = sub_10096C2B0();
  sub_10096BDC0(v106);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v87);
  swift_bridgeObjectRelease();
  v107._uint64_t countAndFlagsBits = 0x3A6B6E617220;
  v107._object = (void *)0xE600000000000000;
  sub_10096BDC0(v107);
  v87._uint64_t countAndFlagsBits = *(void *)(v57 + *(int *)(a1 + 68));
  v108._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v108);
  swift_bridgeObjectRelease();
  uint64_t v63 = v88;
  uint64_t v64 = (void *)v89;
  uint64_t v88 = v60;
  unint64_t v89 = v61;
  swift_bridgeObjectRetain();
  v109._uint64_t countAndFlagsBits = v63;
  v109._object = v64;
  sub_10096BDC0(v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = v88;
  unint64_t v65 = v89;
  uint64_t v88 = countAndFlagsBits;
  unint64_t v89 = v75;
  v110._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v110);
  swift_bridgeObjectRelease();
  v111._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v111);
  swift_bridgeObjectRelease();
  v112._uint64_t countAndFlagsBits = sub_10096CC10();
  sub_10096BDC0(v112);
  swift_bridgeObjectRelease();
  uint64_t v67 = v88;
  uint64_t v68 = (void *)v89;
  uint64_t v88 = v66;
  unint64_t v89 = v65;
  swift_bridgeObjectRetain();
  v113._uint64_t countAndFlagsBits = v67;
  v113._object = v68;
  sub_10096BDC0(v113);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v88;
}

BOOL sub_10082FFCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v10, v2 + *(int *)(a1 + 52), v8);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v11, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  BOOL v12 = AssociatedTypeWitness != 1 && sub_10082C738(a1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  return v12;
}

void sub_1008301E0()
{
  qword_100B0B5D8 = (uint64_t)&off_100A6B958;
}

void sub_1008301F4()
{
  qword_100B0B5E0 = (uint64_t)&off_100A6B9A8;
}

unint64_t sub_100830208(uint64_t a1)
{
  unint64_t result = 0;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C46646572616873;
      break;
    case 2:
      unint64_t result = 0x766973756C637865;
      break;
    case 4:
      unint64_t result = 0x73756150636E7973;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1008302DC()
{
  return sub_100830208(*v0);
}

uint64_t sub_1008302E4()
{
  return sub_100608C54(*v0);
}

uint64_t sub_1008302EC()
{
  return sub_1006F00C4(*v0);
}

uint64_t sub_1008302F4(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      uint64_t result = 0x7964616572;
      break;
    case 1:
      uint64_t result = 0x7669737275636572;
      break;
    case 2:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      return result;
    case 3:
      uint64_t result = 0x7974706D45746F6ELL;
      break;
    case 7:
      uint64_t result = 0x676E696E6E7572;
      break;
    case 15:
      uint64_t result = 0x6465726F6E6769;
      break;
    case 31:
      uint64_t result = 0x6544746E65726170;
      break;
    case 63:
      uint64_t result = 0x64657463656A6572;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_10083050C()
{
  return sub_1008302F4(*v0);
}

uint64_t sub_100830514()
{
  return sub_100608894(*v0);
}

uint64_t sub_10083051C()
{
  return sub_1006F00AC(*v0);
}

unint64_t sub_100830524(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000014;
  if (a1 != 1) {
    unint64_t v1 = 0;
  }
  if (a1 == 2) {
    return 0xD000000000000010;
  }
  else {
    return v1;
  }
}

unint64_t sub_10083056C()
{
  return sub_100830524(*v0);
}

unint64_t sub_100830574()
{
  return sub_100608E98(*v0);
}

uint64_t sub_10083057C()
{
  return sub_1006F00D0(*v0);
}

unint64_t sub_100830584(char a1)
{
  unint64_t result = 0x7265746E49746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746F687370616E73;
      break;
    case 2:
      unint64_t result = 0x676E696863746177;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100830654()
{
  return sub_100830584(*v0);
}

uint64_t sub_10083065C()
{
  unint64_t v1 = 0x7463697665;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6169726574616DLL;
  }
}

uint64_t sub_1008306C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  v69._uint64_t countAndFlagsBits = swift_getAssociatedTypeWitness();
  v69._object = (void *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = sub_10096C890();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v55 - v8;
  uint64_t v61 = *(void *)(v5 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v57 = v3;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_10096C890();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v55 - v13;
  v69._uint64_t countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  uint64_t v64 = (int *)a1;
  uint64_t v65 = v1;
  uint64_t v15 = v1 + *(int *)(a1 + 64);
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  char v18 = *(unsigned char *)(v15 + 16);
  uint64_t v62 = v5;
  uint64_t v63 = v15;
  uint64_t v56 = v10;
  switch(v18)
  {
    case 1:
      uint64_t v19 = 548376546;
      if (v16)
      {
        swift_retain();
        uint64_t v19 = 548966370;
      }
      goto LABEL_5;
    case 2:
      swift_retain();
      uint64_t v20 = (void *)0xA700000000000000;
      unsigned int v21 = -273246494;
      goto LABEL_8;
    case 3:
      swift_errorRetain();
      uint64_t v20 = (void *)0xA700000000000000;
      unsigned int v21 = -272858910;
LABEL_8:
      uint64_t v19 = v21 | 0x208FB800000000;
      break;
    case 4:
      if (v16 | v17) {
        uint64_t v19 = 545627362;
      }
      else {
        uint64_t v19 = 0x208FB8EFB49CE2;
      }
      if (v16 | v17) {
        uint64_t v20 = (void *)0xA400000000000000;
      }
      else {
        uint64_t v20 = (void *)0xA700000000000000;
      }
      break;
    default:
      swift_retain();
      uint64_t v19 = 548638690;
LABEL_5:
      uint64_t v20 = (void *)0xA400000000000000;
      break;
  }
  v72._uint64_t countAndFlagsBits = v19;
  v72._object = v20;
  sub_10096BDC0(v72);
  swift_bridgeObjectRelease();
  sub_1000D31F8(v16, v17, v18);
  v73._uint64_t countAndFlagsBits = 32;
  v73._object = (void *)0xE100000000000000;
  sub_10096BDC0(v73);
  uint64_t v22 = v65;
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v65, v11);
  __chkstk_darwin(v23);
  uint64_t v24 = v57;
  *(&v55 - 2) = v4;
  *(&v55 - 1) = v24;
  sub_100827804((void (*)(char *, char *))sub_100832ED0, (uint64_t)(&v55 - 4), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v25, (uint64_t)&v68);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v68._object) {
    v26._uint64_t countAndFlagsBits = v68._countAndFlagsBits;
  }
  else {
    v26._uint64_t countAndFlagsBits = 0x6E776F6E6B6E753CLL;
  }
  if (v68._object) {
    object = v68._object;
  }
  else {
    object = (void *)0xE90000000000003ELL;
  }
  v26._object = object;
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  BOOL v28 = v64;
  unint64_t v29 = *(void *)(v22 + v64[9]);
  if (v29)
  {
    v68._uint64_t countAndFlagsBits = 0x3A6574656C656420;
    v68._object = (void *)0xE800000000000000;
    v74._uint64_t countAndFlagsBits = sub_100608894(v29);
    sub_10096BDC0(v74);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = *(void *)(v22 + v28[10]);
  uint64_t v32 = v61;
  uint64_t v31 = v62;
  uint64_t v34 = v59;
  uint64_t v33 = v60;
  uint64_t v35 = v58;
  if (v30)
  {
    v68._uint64_t countAndFlagsBits = 0x3A73646C65696620;
    v68._object = (void *)0xE800000000000000;
    v75._uint64_t countAndFlagsBits = sub_1006096B0(v30);
    sub_10096BDC0(v75);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
  }
  int v36 = *(unsigned __int8 *)(v22 + v28[11]);
  if (v36 != 3)
  {
    v68._uint64_t countAndFlagsBits = 32;
    v68._object = (void *)0xE100000000000000;
    if (v36)
    {
      if (v36 == 1)
      {
        uint64_t v37 = (void *)0xE500000000000000;
        v38._uint64_t countAndFlagsBits = 0x7463697665;
      }
      else
      {
        v38._uint64_t countAndFlagsBits = 0xD000000000000013;
        uint64_t v37 = (void *)0x80000001009A3DA0;
      }
    }
    else
    {
      uint64_t v37 = (void *)0xEB00000000657A69;
      v38._uint64_t countAndFlagsBits = 0x6C6169726574616DLL;
    }
    v38._object = v37;
    sub_10096BDC0(v38);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
  }
  switch(*(unsigned char *)(v22 + v28[13]))
  {
    case 1:
      v39._uint64_t countAndFlagsBits = 0x746E65746E6F6320;
      v39._object = (void *)0xED000070616E733ALL;
      goto LABEL_37;
    case 2:
      v39._uint64_t countAndFlagsBits = 0x746E65746E6F6320;
      v39._object = (void *)0xEE0068637461773ALL;
      goto LABEL_37;
    case 3:
      v39._uint64_t countAndFlagsBits = 0x746E65746E6F6320;
      v39._object = (void *)0xEF74726F706D693ALL;
      goto LABEL_37;
    case 4:
      v39._object = (void *)0x80000001009B7250;
      v39._uint64_t countAndFlagsBits = 0xD000000000000010;
LABEL_37:
      sub_10096BDC0(v39);
      break;
    default:
      break;
  }
  int v40 = *(unsigned __int8 *)(v22 + v28[14]);
  if (v40 != 6)
  {
    uint64_t v41 = (void *)0xE800000000000000;
    v68._uint64_t countAndFlagsBits = 0x3A74726F706D6920;
    v68._object = (void *)0xE800000000000000;
    v42._uint64_t countAndFlagsBits = 0x72656469766F7270;
    switch(v40)
    {
      case 1:
        uint64_t v41 = (void *)0xE600000000000000;
        v42._uint64_t countAndFlagsBits = 0x746E65726170;
        break;
      case 2:
        uint64_t v41 = (void *)0xE600000000000000;
        v42._uint64_t countAndFlagsBits = 0x7463656C6573;
        break;
      case 3:
        uint64_t v41 = (void *)0xE400000000000000;
        v42._uint64_t countAndFlagsBits = 1802725732;
        break;
      case 4:
        break;
      case 5:
        uint64_t v41 = (void *)0xE700000000000000;
        v42._uint64_t countAndFlagsBits = 0x70756E61656C63;
        break;
      default:
        uint64_t v41 = (void *)0xE700000000000000;
        v42._uint64_t countAndFlagsBits = 0x676E69646E6570;
        break;
    }
    v42._object = v41;
    sub_10096BDC0(v42);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v22 + v28[15]) == 1)
  {
    v76._uint64_t countAndFlagsBits = 0x29736C6428;
    v76._object = (void *)0xE500000000000000;
    sub_10096BDC0(v76);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v22 + v28[12], v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v35, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  }
  else
  {
    uint64_t v43 = v56;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v56, v35, v31);
    v68._uint64_t countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v77._uint64_t countAndFlagsBits = 32;
    v77._object = (void *)0xE100000000000000;
    sub_10096BDC0(v77);
    swift_getWitnessTable();
    sub_10096D270();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v43, v31);
  }
  uint64_t v44 = *(void **)(v22 + v28[18]);
  if (v44)
  {
    v68._uint64_t countAndFlagsBits = 0x3A7265766D6F6420;
    v68._object = (void *)0xE800000000000000;
    id v45 = v44;
    id v46 = [v45 description];
    uint64_t v47 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    int v49 = v48;

    v78._uint64_t countAndFlagsBits = v47;
    v78._object = v49;
    sub_10096BDC0(v78);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);

    swift_bridgeObjectRelease();
  }
  int v50 = (uint64_t *)(v22 + v28[17]);
  unint64_t v51 = v50[2];
  if (v51 >> 60 != 11)
  {
    uint64_t v53 = *v50;
    uint64_t v52 = v50[1];
    v68._uint64_t countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    sub_10002D830(v52, v51);
    v79._uint64_t countAndFlagsBits = 0x6572757470616320;
    v79._object = (void *)0xEA00000000003A64;
    sub_10096BDC0(v79);
    v67._uint64_t countAndFlagsBits = 677669222;
    v67._object = (void *)0xE400000000000000;
    uint64_t v66 = v53;
    v80._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v80);
    swift_bridgeObjectRelease();
    v81._uint64_t countAndFlagsBits = 41;
    v81._object = (void *)0xE100000000000000;
    sub_10096BDC0(v81);
    sub_10096BDC0(v67);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
    sub_1000D35D8(v53, v52, v51);
  }
  Swift::String v68 = v69;
  v82._uint64_t countAndFlagsBits = sub_1008B02B0(*(void *)v63, *(void *)(v63 + 8), *(unsigned char *)(v63 + 16));
  sub_10096BDC0(v82);
  swift_bridgeObjectRelease();
  return v68._countAndFlagsBits;
}

uint64_t sub_100831130@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_10096D270();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1008311EC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  if (a4 == 70)
  {
    uint64_t v9 = v8 + *(int *)(a8 + 64);
    unsigned int v10 = *(unsigned __int8 *)(v9 + 16);
    if (v10 > 1)
    {
      return 0;
    }
    else
    {
      sub_1000D31F8(*(void *)v9, *(void *)(v9 + 8), v10);
      uint64_t result = 0;
      *(_OWORD *)uint64_t v9 = xmmword_10097B210;
      *(unsigned char *)(v9 + 16) = 4;
    }
  }
  else
  {
    uint64_t v12 = a6;
    if (a1 != 70 && qword_10098EA80[a4] == qword_10098EA80[a1])
    {
      uint64_t v13 = v8 + *(int *)(a8 + 64);
      if (*(unsigned char *)(v13 + 16) == 1)
      {
        unint64_t v14 = a6 & ~a3;
        if ((a6 & a3) == 0) {
          unint64_t v14 = a6;
        }
      }
      else
      {
        unint64_t v14 = a6;
        if (!*(unsigned char *)(v13 + 16))
        {
          uint64_t v15 = a3 & ~*(void *)v13;
          unint64_t v14 = a6;
          if ((v15 & a6) != 0) {
            unint64_t v14 = a6 & ~v15;
          }
        }
      }
      BOOL v16 = (a7 & 2) == 0;
      if ((a6 & 2) == 0) {
        BOOL v16 = 1;
      }
      if (!(v16 | (v14 >> 1) & 1)) {
        v14 |= 2uLL;
      }
      BOOL v17 = (a7 & 3) == 0;
      if ((a6 & 0x400) == 0) {
        BOOL v17 = 1;
      }
      if (v17 | (v14 >> 10) & 1) {
        uint64_t v12 = v14;
      }
      else {
        uint64_t v12 = v14 | 0x400;
      }
    }
    uint64_t v18 = v8 + *(int *)(a8 + 64);
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t result = 0;
    switch(*(unsigned char *)(v18 + 16))
    {
      case 1:
      case 3:
        sub_1000D31F8(*(void *)v18, v19, *(unsigned char *)(v18 + 16));
        goto LABEL_24;
      case 2:
        return result;
      case 4:
LABEL_24:
        if (v12)
        {
          *(void *)uint64_t v18 = v12;
          *(void *)(v18 + 8) = 0;
          uint64_t result = 1;
          *(unsigned char *)(v18 + 16) = 0;
        }
        else
        {
          *(void *)uint64_t v18 = 0;
          *(void *)(v18 + 8) = 0;
          uint64_t result = 1;
          *(unsigned char *)(v18 + 16) = 1;
        }
        break;
      default:
        sub_1000D31F8(*(void *)v18, v19, 0);
        uint64_t result = 0;
        if (v12)
        {
          *(void *)uint64_t v18 = v12;
          *(void *)(v18 + 8) = 0;
          *(unsigned char *)(v18 + 16) = 0;
        }
        else
        {
          *(void *)uint64_t v18 = 0;
          *(void *)(v18 + 8) = 0;
          *(unsigned char *)(v18 + 16) = 1;
        }
        break;
    }
  }
  return result;
}

BOOL sub_1008313B4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_10096C890();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, v1, v4);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v7, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return AssociatedTypeWitness != 1 && *(unsigned char *)(v1 + *(int *)(a1 + 64) + 16) == 1;
}

BOOL sub_100831518(uint64_t a1, unint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v148 = a1;
  unint64_t v149 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v150 = AssociatedTypeWitness;
  uint64_t v151 = swift_getAssociatedTypeWitness();
  uint64_t v127 = v151;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v152 = AssociatedConformanceWitness;
  uint64_t v153 = swift_getAssociatedConformanceWitness();
  uint64_t v125 = v153;
  uint64_t v6 = type metadata accessor for FileItemVersion();
  uint64_t v131 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  v124 = (char *)&v121 - v7;
  uint64_t v135 = v8;
  uint64_t v9 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v130 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = __chkstk_darwin(TupleTypeMetadata2);
  v133 = (char *)&v121 - v11;
  uint64_t v134 = v9;
  uint64_t v137 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  v129 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v136 = (char *)&v121 - v15;
  __chkstk_darwin(v14);
  v138 = (char *)&v121 - v16;
  v141 = a3;
  uint64_t v142 = a4;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v139 = (char *)&v121 - v19;
  uint64_t v20 = sub_10096C890();
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v143 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v121 - v23;
  uint64_t v25 = *(void *)(v20 - 8);
  uint64_t v26 = __chkstk_darwin(v22);
  v147 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v121 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v121 - v31;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v33((char *)&v121 - v31, v148, v20);
  v33(v30, v149, v20);
  uint64_t v144 = v21;
  uint64_t v34 = &v24[*(int *)(v21 + 48)];
  v33(v24, (uint64_t)v32, v20);
  v145 = v34;
  v33(v34, (uint64_t)v30, v20);
  uint64_t v140 = v18;
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  v146 = (int *)v17;
  if (v35(v24, 1, (int *)v17) == 1)
  {
    int v36 = *(void (**)(char *, uint64_t))(v25 + 8);
    v36(v30, v20);
    v36(v32, v20);
    if (v35(v145, 1, v146) == 1)
    {
      v36(v24, v20);
      goto LABEL_8;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t))(v143 + 8))(v24, v144);
    return 0;
  }
  v122 = v30;
  v123 = v32;
  v33(v147, (uint64_t)v24, v20);
  uint64_t v37 = v145;
  Swift::String v38 = v146;
  if (v35(v145, 1, v146) == 1)
  {
    Swift::String v39 = *(void (**)(char *, uint64_t))(v25 + 8);
    v39(v122, v20);
    v39(v123, v20);
    (*(void (**)(char *, int *))(v140 + 8))(v147, v38);
    goto LABEL_6;
  }
  int v40 = v139;
  uint64_t v41 = v140;
  (*(void (**)(char *, char *, int *))(v140 + 32))(v139, v37, v38);
  swift_getAssociatedConformanceWitness();
  LODWORD(v145) = sub_10096BBE0();
  Swift::String v42 = *(void (**)(char *, int *))(v41 + 8);
  v42(v40, v38);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
  v43(v122, v20);
  v43(v123, v20);
  v42(v147, v38);
  v43(v24, v20);
  if ((v145 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v44 = (int *)type metadata accessor for ItemReconciliationHalf();
  if (*(void *)(v148 + v44[9]) != *(void *)(v149 + v44[9])) {
    return 0;
  }
  id v45 = v44;
  if (*(void *)(v148 + v44[10]) != *(void *)(v149 + v44[10])) {
    return 0;
  }
  uint64_t v46 = v44[11];
  int v47 = *(unsigned __int8 *)(v148 + v46);
  int v48 = *(unsigned __int8 *)(v149 + v46);
  if (v47 == 3)
  {
    uint64_t v50 = v134;
    uint64_t v49 = v135;
    unint64_t v51 = v133;
    uint64_t v53 = v137;
    uint64_t v52 = v138;
    unint64_t v54 = v136;
    if (v48 != 3) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    uint64_t v50 = v134;
    uint64_t v49 = v135;
    unint64_t v51 = v133;
    uint64_t v53 = v137;
    uint64_t v52 = v138;
    unint64_t v54 = v136;
    if (v48 == 3 || v47 != v48) {
      return result;
    }
  }
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v57 = v45;
  v56(v52, v148 + v45[12], v50);
  v146 = v57;
  v56(v54, v149 + v57[12], v50);
  uint64_t v58 = &v51[*(int *)(TupleTypeMetadata2 + 48)];
  v56(v51, (uint64_t)v52, v50);
  v147 = v58;
  v56(v58, (uint64_t)v54, v50);
  uint64_t v59 = v131;
  uint64_t v60 = v54;
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
  if (v61(v51, 1, v49) == 1)
  {
    uint64_t v62 = *(void (**)(char *, uint64_t))(v53 + 8);
    v62(v60, v50);
    v62(v138, v50);
    if (v61(v147, 1, v49) == 1)
    {
      v62(v51, v50);
      goto LABEL_22;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v130 + 8))(v51, TupleTypeMetadata2);
    return 0;
  }
  uint64_t v63 = (uint64_t)v129;
  v56(v129, (uint64_t)v51, v50);
  uint64_t v64 = v147;
  if (v61(v147, 1, v49) == 1)
  {
    uint64_t v65 = *(void (**)(char *, uint64_t))(v137 + 8);
    v65(v136, v50);
    v65(v138, v50);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v49);
    goto LABEL_20;
  }
  uint64_t v66 = (uint64_t)v124;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v124, v64, v49);
  BOOL v67 = static FileItemVersion.__derived_struct_equals(_:_:)(v63, v66);
  Swift::String v68 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v68(v66, v49);
  Swift::String v69 = *(void (**)(char *, uint64_t))(v137 + 8);
  v69(v136, v50);
  v69(v138, v50);
  v68(v63, v49);
  v69(v51, v50);
  if (!v67) {
    return 0;
  }
LABEL_22:
  uint64_t v70 = v146;
  uint64_t v71 = v148;
  if (*(unsigned __int8 *)(v148 + v146[13]) != *(unsigned __int8 *)(v149 + v146[13])) {
    return 0;
  }
  uint64_t v72 = v146[14];
  int v73 = *(unsigned __int8 *)(v148 + v72);
  int v74 = *(unsigned __int8 *)(v149 + v72);
  if (v73 != 6)
  {
    BOOL result = 0;
    if (v74 == 6 || v73 != v74) {
      return result;
    }
    goto LABEL_28;
  }
  if (v74 != 6) {
    return 0;
  }
LABEL_28:
  if (*(unsigned __int8 *)(v148 + v146[15]) != *(unsigned __int8 *)(v149 + v146[15])) {
    return 0;
  }
  uint64_t v75 = v146[16];
  uint64_t v76 = *(void *)(v148 + v75);
  uint64_t v77 = *(void *)(v148 + v75 + 8);
  uint64_t v78 = *(unsigned __int8 *)(v148 + v75 + 16);
  uint64_t v79 = v149 + v75;
  uint64_t v80 = *(void *)v79;
  uint64_t v81 = *(void *)(v79 + 8);
  int v82 = *(unsigned __int8 *)(v79 + 16);
  switch(v78)
  {
    case 1:
      if (v82 != 1) {
        return 0;
      }
      goto LABEL_52;
    case 2:
      if (v82 != 2) {
        return 0;
      }
      goto LABEL_52;
    case 3:
      if (v82 != 3) {
        return 0;
      }
      uint64_t v150 = v76;
      sub_10009C5FC(v76, v77, 3);
      sub_10009C5FC(v76, v77, 3);
      sub_10009C5FC(v80, v81, 3);
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      uint64_t v83 = sub_10096BCC0();
      uint64_t v85 = v84;
      uint64_t v150 = v80;
      swift_errorRetain();
      if (v83 == sub_10096BCC0() && v85 == v86)
      {
        swift_bridgeObjectRelease_n();
        sub_1000D31F8(v80, v81, 3);
        sub_1000D31F8(v76, v77, 3);
        uint64_t v71 = v148;
        uint64_t v70 = v146;
        goto LABEL_52;
      }
      char v87 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000D31F8(v80, v81, 3);
      sub_1000D31F8(v76, v77, 3);
      BOOL result = 0;
      uint64_t v71 = v148;
      uint64_t v70 = v146;
      if (v87) {
        goto LABEL_52;
      }
      return result;
    case 4:
      if (!(v76 | v77))
      {
        BOOL result = 0;
        if (v82 != 4 || v81 | v80) {
          return result;
        }
LABEL_52:
        uint64_t v88 = v70[17];
        uint64_t v89 = *(void *)(v71 + v88);
        uint64_t v90 = *(void *)(v71 + v88 + 8);
        unint64_t v91 = *(void *)(v71 + v88 + 16);
        uint64_t v92 = *(void *)(v71 + v88 + 24);
        Swift::String v94 = *(char **)(v71 + v88 + 32);
        Swift::String v93 = *(char **)(v71 + v88 + 40);
        Swift::String v95 = *(char **)(v71 + v88 + 48);
        Swift::String v96 = (uint64_t *)(v149 + v88);
        uint64_t v97 = *v96;
        uint64_t v98 = v96[1];
        unint64_t v99 = v96[2];
        uint64_t v100 = v96[3];
        Swift::String v101 = (char *)v96[4];
        Swift::String v102 = (char *)v96[5];
        Swift::String v103 = (char *)v96[6];
        unint64_t v104 = v99 & 0xF000000000000000;
        if (v91 >> 60 == 11)
        {
          if (v104 == 0xB000000000000000) {
            goto LABEL_54;
          }
LABEL_59:
          uint64_t v112 = v89;
          uint64_t v143 = v96[1];
          uint64_t v144 = v89;
          uint64_t v113 = v97;
          uint64_t v142 = v97;
          unint64_t v149 = v99;
          v145 = v95;
          v147 = v103;
          sub_10009C650(v112, v90, v91);
          uint64_t v114 = v98;
          unint64_t v115 = v149;
          sub_10009C650(v113, v114, v149);
          sub_1000D35D8(v144, v90, v91);
          sub_1000D35D8(v142, v143, v115);
          return 0;
        }
        if (v104 == 0xB000000000000000) {
          goto LABEL_59;
        }
        if (v89 != v97) {
          return 0;
        }
        v147 = (char *)v96[6];
        uint64_t v116 = v89;
        uint64_t v117 = v98;
        v141 = v94;
        uint64_t v142 = v92;
        v139 = v101;
        uint64_t v140 = v100;
        if (v91 >> 60 == 15)
        {
          unint64_t v118 = v99;
          if (v99 >> 60 == 15)
          {
            sub_10002D830(v117, v99);
            goto LABEL_69;
          }
        }
        else
        {
          unint64_t v118 = v99;
          if (v99 >> 60 != 15)
          {
            uint64_t v120 = v116;
            v138 = v93;
            v145 = v95;
            sub_10009C650(v116, v90, v91);
            v136 = v102;
            sub_10009C650(v120, v117, v118);
            LODWORD(v137) = _s9libfssync17FPItemVersionDataV23__derived_struct_equalsySbAC_ACtFZ_0(v90, v91, v117, v118);
            sub_1000D35D8(v120, v117, v118);
            sub_1000D35D8(v120, v90, v91);
            if ((v137 & 1) == 0) {
              return 0;
            }
LABEL_69:
            if (v93)
            {
              uint64_t v71 = v148;
              uint64_t v70 = v146;
              if ((v102 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              BOOL result = 0;
              if (v102) {
                return result;
              }
              if (v142 != v140) {
                return result;
              }
              uint64_t v71 = v148;
              uint64_t v70 = v146;
              if (v141 != v139) {
                return result;
              }
            }
LABEL_54:
            uint64_t v105 = v70[18];
            Swift::String v106 = *(void **)(v71 + v105);
            unint64_t v107 = v149;
            Swift::String v108 = *(void **)(v149 + v105);
            if (v106)
            {
              if (!v108) {
                return 0;
              }
              sub_1003923E8();
              id v109 = v108;
              id v110 = v106;
              char v111 = sub_10096C830();

              if ((v111 & 1) == 0) {
                return 0;
              }
            }
            else if (v108)
            {
              return 0;
            }
            return *(void *)(v148 + v146[19]) == *(void *)(v107 + v146[19]);
          }
        }
        uint64_t v119 = v116;
        sub_10009C650(v116, v90, v91);
        sub_10009C650(v119, v117, v118);
        sub_10001E9AC(v90, v91);
        sub_10001E9AC(v117, v118);
        return 0;
      }
      if (v82 != 4) {
        return 0;
      }
      BOOL result = 0;
      if (v80 == 1 && !v81) {
        goto LABEL_52;
      }
      return result;
    default:
      BOOL result = 0;
      if (v82 || v76 != v80) {
        return result;
      }
      goto LABEL_52;
  }
}

BOOL sub_1008324DC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100831518(a1, a2, *(char **)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1008324EC@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = (int8x16_t *)type metadata accessor for ReconciliationID();
  return sub_1005EC558(v2, a1);
}

BOOL sub_1008325EC(uint64_t a1, unint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  if (!sub_100831518(a1, a2, a3, a5)) {
    return 0;
  }
  uint64_t v10 = (int *)type metadata accessor for ItemReconciliation();
  if (!sub_100831518(a1 + v10[13], a2 + v10[13], a4, a6)) {
    return 0;
  }
  uint64_t v11 = v10[14];
  uint64_t v12 = *(char *)(a1 + v11);
  uint64_t v13 = *(char *)(a2 + v11);
  if (v12 == 4)
  {
    if (v13 != 4) {
      return 0;
    }
  }
  else if (v13 == 4 || qword_10098ECB0[v12] != qword_10098ECB0[v13])
  {
    return 0;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  if ((sub_10096C1E0() & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  uint64_t v15 = v10[16];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  if (v17 == *v18 && *(void *)(v16 + 8) == v18[1])
  {
    if (*(void *)(a1 + v10[17]) == *(void *)(a2 + v10[17])
      && *(unsigned __int8 *)(a1 + v10[18]) == *(unsigned __int8 *)(a2 + v10[18]))
    {
      return *(void *)(a1 + v10[19]) == *(void *)(a2 + v10[19]);
    }
    return 0;
  }
  return result;
}

BOOL sub_100832818(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1008325EC(a1, a2, *(char **)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_10083282C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!(a1 >> 62))
  {
    id v6 = (id)a3;
    sub_10096CBD0(24);
    v17._uint64_t countAndFlagsBits = 0x74616761706F7270;
    v17._object = (void *)0xEE0028426F744165;
    sub_10096BDC0(v17);
    sub_10096CDF0();
    v18._uint64_t countAndFlagsBits = 8236;
    v18._object = (void *)0xE200000000000000;
    sub_10096BDC0(v18);
    v19._uint64_t countAndFlagsBits = sub_1006096B0(a2);
    sub_10096BDC0(v19);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = 8236;
    v20._object = (void *)0xE200000000000000;
    sub_10096BDC0(v20);
    if (a3)
    {
LABEL_6:
      id v7 = [v6 description];
      uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v10 = v9;

LABEL_11:
      v21._uint64_t countAndFlagsBits = v8;
      v21._object = v10;
      sub_10096BDC0(v21);
      swift_bridgeObjectRelease();
      sub_10010D75C(a1);
      return 0;
    }
LABEL_10:
    uint64_t v8 = 0x3E6C696E3CLL;
    uint64_t v10 = (void *)0xE500000000000000;
    goto LABEL_11;
  }
  if (a1 >> 62 == 1)
  {
    id v6 = (id)a3;
    sub_10096CBD0(24);
    v13._uint64_t countAndFlagsBits = 0x74616761706F7270;
    v13._object = (void *)0xEE0028416F744265;
    sub_10096BDC0(v13);
    sub_10096CDF0();
    v14._uint64_t countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    sub_10096BDC0(v14);
    v15._uint64_t countAndFlagsBits = sub_1006096B0(a2);
    sub_10096BDC0(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 8236;
    v16._object = (void *)0xE200000000000000;
    sub_10096BDC0(v16);
    if (a3) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  unint64_t v11 = a3 | a2;
  if (a1 == 0x8000000000000000 && !v11) {
    return 0x54676E6968746F6ELL;
  }
  if (a1 == 0x8000000000000001 && v11 == 0) {
    return 0x4279646165726C61;
  }
  return 0xD000000000000014;
}

uint64_t sub_100832AF4()
{
  return sub_10083282C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

unint64_t sub_100832B00()
{
  return sub_100719960(*(void *)v0, *(void **)(v0 + 8), *(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100832B1C(uint64_t a1, int *a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = *((void *)a2 - 1);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v10 = (void (*)(char *, int *))(v2 + *(int *)(v9 + 52));
  unint64_t v11 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v12 = *(void *)((unsigned char *)v10 + v11[19]) & 3;
  Swift::String v13 = *(void (**)(char *, uint64_t, int *))(v4 + 16);
  v13(v8, v2, a2);
  if (v12)
  {
    (*(void (**)(char *, int *))(v4 + 8))(v8, a2);
    return 0;
  }
  uint64_t v28 = v13;
  uint64_t v29 = v10;
  uint64_t v30 = v2;
  Swift::String v14 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v15 = *(void *)&v8[v14[19]];
  Swift::String v16 = *(void (**)(char *, int *))(v4 + 8);
  v16(v8, a2);
  if ((v15 & 2) != 0) {
    return 0;
  }
  Swift::String v17 = (uint64_t *)(v30 + v14[16]);
  uint64_t v18 = *v17;
  uint64_t result = 0;
  uint64_t v20 = v33;
  switch(*((unsigned char *)v17 + 16))
  {
    case 1:
      if (*((unsigned char *)v29 + v11[16] + 16) == 2) {
        return 0xD000000000000034;
      }
      uint64_t v29 = v16;
      BOOL v21 = sub_100827AAC((uint64_t)a2);
      uint64_t v22 = v32;
      v28(v32, v30, a2);
      if (v21)
      {
        int v23 = v22[a2[13] + v11[13]];
        v29(v22, a2);
        uint64_t v24 = v31;
        if (v23 == 1) {
          return 0xD00000000000002ALL;
        }
      }
      else
      {
        v29(v22, a2);
        uint64_t v24 = v31;
      }
      uint64_t result = sub_100828E84(v24, a2);
      if (!v20)
      {
        if (result == 70)
        {
          uint64_t result = 0;
        }
        else
        {
          uint64_t v25 = result;
          id v26 = *(id *)(v30 + v14[18]);
          uint64_t result = v25;
        }
      }
      break;
    case 2:
      return 0xD000000000000020;
    case 3:
    case 4:
      return result;
    default:
      uint64_t result = 0;
      if (v18 != 4096 && v18 != 0x2000 && v18 != 0x4000) {
        return 0xD000000000000016;
      }
      return result;
  }
  return result;
}

uint64_t sub_100832ED0@<X0>(void *a1@<X8>)
{
  return sub_100831130(a1);
}

uint64_t sub_100832EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1008324EC(a1);
}

uint64_t type metadata accessor for ItemReconciliation.PropagationStatus()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for GatherTransferExtraErrors()
{
  return &type metadata for GatherTransferExtraErrors;
}

uint64_t destroy for ReconciledPropagationStatus(uint64_t *a1)
{
  return sub_10010D75C(*a1);
}

unint64_t *_s9libfssync27ReconciledPropagationStatusOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  sub_10010D750(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (unint64_t)v5;
  return a1;
}

uint64_t *assignWithCopy for ReconciledPropagationStatus(uint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  sub_10010D750(*a2, v4, v5);
  uint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  sub_10010D75C(v6);
  return a1;
}

uint64_t *assignWithTake for ReconciledPropagationStatus(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_10010D75C(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 7;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (unint64_t)-a2 << 7;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1008330D0(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(void *)a1 & 0x7F | (*(_DWORD *)(a1 + 8) << 7)) + 2;
  }
}

void *sub_1008330F0(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *uint64_t result = *result & 0x7FLL | (a2 << 62);
  }
  else
  {
    result[1] = (unint64_t)(a2 - 2) >> 7;
    result[2] = 0;
    *uint64_t result = ((_BYTE)a2 - 2) & 0x7F | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReconciledPropagationStatus()
{
  return &type metadata for ReconciledPropagationStatus;
}

uint64_t sub_100833134(uint64_t a1)
{
  return sub_10071A38C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_100833148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10079A37C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_1008331A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10079A37C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10071A38C(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_100833218(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10071A38C(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_100833268(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1008332BC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100833318(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100833338(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_100833348(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 2;
    *(unsigned char *)(result + 24) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeletionStatus()
{
  return &type metadata for DeletionStatus;
}

ValueMetadata *type metadata accessor for PolicyContentStatus()
{
  return &type metadata for PolicyContentStatus;
}

unsigned char *storeEnumTagSinglePayload for MaterializationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100833464);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterializationStatus()
{
  return &type metadata for MaterializationStatus;
}

unsigned char *storeEnumTagSinglePayload for ContentStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100833568);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatus()
{
  return &type metadata for ContentStatus;
}

ValueMetadata *type metadata accessor for SyncPausedStatus()
{
  return &type metadata for SyncPausedStatus;
}

unint64_t sub_1008335B4()
{
  unint64_t result = qword_100ADC340;
  if (!qword_100ADC340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC340);
  }
  return result;
}

unint64_t sub_10083360C()
{
  unint64_t result = qword_100ADC348;
  if (!qword_100ADC348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC348);
  }
  return result;
}

uint64_t sub_100833660()
{
  return sub_1006B6950(&qword_100ADC350, &qword_100ADC358);
}

unint64_t sub_10083368C()
{
  unint64_t result = qword_100ADC360;
  if (!qword_100ADC360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC360);
  }
  return result;
}

unint64_t sub_1008336E4()
{
  unint64_t result = qword_100ADC368;
  if (!qword_100ADC368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC368);
  }
  return result;
}

uint64_t sub_100833738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833764, (uint64_t (*)(void))sub_1008337B8);
}

unint64_t sub_100833764()
{
  unint64_t result = qword_100ADC390;
  if (!qword_100ADC390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC390);
  }
  return result;
}

unint64_t sub_1008337B8()
{
  unint64_t result = qword_100ADC398;
  if (!qword_100ADC398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC398);
  }
  return result;
}

uint64_t sub_10083380C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833838, (uint64_t (*)(void))sub_10083388C);
}

unint64_t sub_100833838()
{
  unint64_t result = qword_100ADC3A0;
  if (!qword_100ADC3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3A0);
  }
  return result;
}

unint64_t sub_10083388C()
{
  unint64_t result = qword_100ADC3A8;
  if (!qword_100ADC3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3A8);
  }
  return result;
}

unint64_t sub_1008338E4()
{
  unint64_t result = qword_100ADC3B0;
  if (!qword_100ADC3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3B0);
  }
  return result;
}

unint64_t sub_10083393C()
{
  unint64_t result = qword_100ADC3B8;
  if (!qword_100ADC3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3B8);
  }
  return result;
}

unint64_t sub_100833994()
{
  unint64_t result = qword_100ADC3C0;
  if (!qword_100ADC3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3C0);
  }
  return result;
}

unint64_t sub_1008339EC()
{
  unint64_t result = qword_100ADC3C8;
  if (!qword_100ADC3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3C8);
  }
  return result;
}

uint64_t sub_100833A40()
{
  return sub_1006B6950(&qword_100ADC3D0, &qword_100ADC3D8);
}

unint64_t sub_100833A6C()
{
  unint64_t result = qword_100ADC3E0;
  if (!qword_100ADC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3E0);
  }
  return result;
}

unint64_t sub_100833AC4()
{
  unint64_t result = qword_100ADC3E8;
  if (!qword_100ADC3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC3E8);
  }
  return result;
}

uint64_t sub_100833B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833B44, (uint64_t (*)(void))sub_100833B98);
}

unint64_t sub_100833B44()
{
  unint64_t result = qword_100ADC410;
  if (!qword_100ADC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC410);
  }
  return result;
}

unint64_t sub_100833B98()
{
  unint64_t result = qword_100ADC418;
  if (!qword_100ADC418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC418);
  }
  return result;
}

uint64_t sub_100833BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833C18, (uint64_t (*)(void))sub_100833C6C);
}

unint64_t sub_100833C18()
{
  unint64_t result = qword_100ADC420;
  if (!qword_100ADC420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC420);
  }
  return result;
}

unint64_t sub_100833C6C()
{
  unint64_t result = qword_100ADC428;
  if (!qword_100ADC428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC428);
  }
  return result;
}

unint64_t sub_100833CC4()
{
  unint64_t result = qword_100ADC430;
  if (!qword_100ADC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC430);
  }
  return result;
}

unint64_t sub_100833D1C()
{
  unint64_t result = qword_100ADC438;
  if (!qword_100ADC438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC438);
  }
  return result;
}

uint64_t sub_100833D70()
{
  return sub_1006B6950(&qword_100ADC440, &qword_100ADC448);
}

unint64_t sub_100833D9C()
{
  unint64_t result = qword_100ADC450;
  if (!qword_100ADC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC450);
  }
  return result;
}

unint64_t sub_100833DF4()
{
  unint64_t result = qword_100ADC458;
  if (!qword_100ADC458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC458);
  }
  return result;
}

uint64_t sub_100833E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833E74, (uint64_t (*)(void))sub_100833EC8);
}

unint64_t sub_100833E74()
{
  unint64_t result = qword_100ADC480;
  if (!qword_100ADC480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC480);
  }
  return result;
}

unint64_t sub_100833EC8()
{
  unint64_t result = qword_100ADC488;
  if (!qword_100ADC488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC488);
  }
  return result;
}

uint64_t sub_100833F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100833F48(a1, a2, a3, (uint64_t (*)(void))sub_100833F84, (uint64_t (*)(void))sub_100833FD8);
}

uint64_t sub_100833F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100833F84()
{
  unint64_t result = qword_100ADC490;
  if (!qword_100ADC490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC490);
  }
  return result;
}

unint64_t sub_100833FD8()
{
  unint64_t result = qword_100ADC498;
  if (!qword_100ADC498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC498);
  }
  return result;
}

unint64_t sub_100834030()
{
  unint64_t result = qword_100ADC4A0;
  if (!qword_100ADC4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC4A0);
  }
  return result;
}

unint64_t sub_100834088()
{
  unint64_t result = qword_100ADC4A8;
  if (!qword_100ADC4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC4A8);
  }
  return result;
}

unint64_t sub_1008340E0()
{
  unint64_t result = qword_100ADC4B0;
  if (!qword_100ADC4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC4B0);
  }
  return result;
}

unint64_t sub_100834138()
{
  unint64_t result = qword_100ADC4B8;
  if (!qword_100ADC4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADC4B8);
  }
  return result;
}

uint64_t sub_100834190(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v41 = a3;
  sub_10083459C((uint64_t)&v35);
  uint64_t v4 = v35;
  uint64_t v5 = v36;
  unint64_t v6 = v37;
  uint64_t v7 = v40;
  uint64_t v33 = v39;
  if (v38) {
    unint64_t v6 = 0;
  }
  unint64_t v31 = v6;
  unint64_t v8 = (unint64_t)objc_msgSend(self, "fp_maximumBounceLevel");
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_26:
    uint64_t result = sub_10096CE10();
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8;
    char v10 = 0;
    do
    {
      char v32 = v10;
      if (v10)
      {
        id v11 = [objc_allocWithZone((Class)NSDateFormatter) init];
        [v11 setDateStyle:1];
        uint64_t v30 = v11;
        [v11 setTimeStyle:2];
        Class isa = sub_10096B030().super.isa;
        id v13 = [v11 stringFromDate:isa];

        uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v29 = v4;
        uint64_t v16 = v15;

        uint64_t v35 = v14;
        uint64_t v36 = v16;
        sub_10001F9C0();
        uint64_t v17 = sub_10096C910();
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        uint64_t v35 = v17;
        uint64_t v36 = v19;
        uint64_t v20 = sub_10096C910();
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        uint64_t v35 = v29;
        uint64_t v36 = v5;
        v42._uint64_t countAndFlagsBits = 0x209380E220;
        v42._object = (void *)0xA500000000000000;
        sub_10096BDC0(v42);
        v43._uint64_t countAndFlagsBits = v20;
        v43._object = v22;
        sub_10096BDC0(v43);

        swift_bridgeObjectRelease();
        uint64_t v4 = v35;
        uint64_t v5 = v36;
      }
      unint64_t v23 = v31;
      if (v31 < v9)
      {
        while (1)
        {
          if (v23 == 1) {
            goto LABEL_16;
          }
          if (v23) {
            break;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v24 = v4;
          uint64_t v25 = v5;
          if (v7) {
            goto LABEL_12;
          }
LABEL_13:
          char v26 = a2(v24, v25);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v24;
          }
          if (v26)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v24;
          }
          swift_bridgeObjectRelease();
LABEL_16:
          if (v9 == v23) {
            goto LABEL_5;
          }
          if (__CFADD__(v23++, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v35 = v4;
        uint64_t v36 = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46._uint64_t countAndFlagsBits = 32;
        v46._object = (void *)0xE100000000000000;
        sub_10096BDC0(v46);
        v47._uint64_t countAndFlagsBits = sub_10096D220();
        sub_10096BDC0(v47);
        swift_bridgeObjectRelease();
        uint64_t v24 = v35;
        uint64_t v25 = v36;
        if (!v7) {
          goto LABEL_13;
        }
LABEL_12:
        uint64_t v35 = v24;
        uint64_t v36 = v25;
        v44._uint64_t countAndFlagsBits = 46;
        v44._object = (void *)0xE100000000000000;
        sub_10096BDC0(v44);
        v45._uint64_t countAndFlagsBits = v33;
        v45._object = v7;
        sub_10096BDC0(v45);
        swift_bridgeObjectRelease();
        uint64_t v24 = v35;
        uint64_t v25 = v36;
        goto LABEL_13;
      }
LABEL_5:
      char v10 = 1;
    }
    while ((v32 & 1) == 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_10083459C(uint64_t a1@<X8>)
{
  NSString v2 = sub_10096BC00();
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  id v3 = objc_msgSend(v2, "fp_stringByDeletingPathBounceNo:andPathExtension:isFolder:", &v16, &v15, 0);

  uint64_t v5 = v15;
  uint64_t v4 = v16;
  uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v8 = v7;
  id v9 = v4;
  id v10 = v5;

  if (!v9)
  {
    id v11 = 0;
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:

    uint64_t v12 = 0;
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  id v11 = [v9 unsignedIntegerValue];
  if (!v10) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v14 = v13;

LABEL_6:
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 24) = v9 == 0;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v14;
}

Swift::String __swiftcall String.filenameWithoutBouncing()()
{
  NSString v2 = v1;
  uint64_t v3 = v0;
  sub_10083459C((uint64_t)&v9);
  uint64_t v4 = v13;
  if (v11 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v9;
    if (v13)
    {
      uint64_t v5 = v12;
      v14._uint64_t countAndFlagsBits = 46;
      v14._object = (void *)0xE100000000000000;
      sub_10096BDC0(v14);
      v15._uint64_t countAndFlagsBits = v5;
      v15._object = v4;
      sub_10096BDC0(v15);
      swift_bridgeObjectRelease();
      uint64_t v3 = v9;
      NSString v2 = v10;
    }
    else
    {
      NSString v2 = v10;
    }
  }
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  result._object = v7;
  result._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t sub_100834788(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_10083459C((uint64_t)&v42);
  uint64_t v4 = v43;
  uint64_t v48 = v42;
  unint64_t v5 = v44;
  uint64_t v6 = v47;
  uint64_t v40 = v46;
  if (v45) {
    unint64_t v5 = 0;
  }
  unint64_t v38 = v5;
  unint64_t v7 = (unint64_t)objc_msgSend(self, "fp_maximumBounceLevel");
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_30:

    uint64_t result = sub_10096CE10();
    __break(1u);
    return result;
  }
  unint64_t v8 = v7;
  char v9 = 0;
  do
  {
    char v39 = v9;
    if (v9)
    {
      id v10 = [objc_allocWithZone((Class)NSDateFormatter) init];
      [v10 setDateStyle:1];
      [v10 setTimeStyle:2];
      Class isa = sub_10096B030().super.isa;
      id v12 = [v10 stringFromDate:isa];

      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v15 = v14;

      uint64_t v42 = v13;
      uint64_t v43 = v15;
      unint64_t v16 = sub_10001F9C0();
      uint64_t v17 = sub_10096C910();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v42 = v17;
      uint64_t v43 = v19;
      unint64_t v36 = v16;
      unint64_t v37 = v16;
      uint64_t v34 = &type metadata for String;
      unint64_t v35 = v16;
      uint64_t v20 = sub_10096C910();
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v42 = v48;
      uint64_t v43 = v4;
      v49._uint64_t countAndFlagsBits = 0x209380E220;
      v49._object = (void *)0xA500000000000000;
      sub_10096BDC0(v49);
      v50._uint64_t countAndFlagsBits = v20;
      v50._object = v22;
      sub_10096BDC0(v50);

      swift_bridgeObjectRelease();
      uint64_t v4 = v43;
      uint64_t v48 = v42;
    }
    if (v38 < v8)
    {
      unint64_t v23 = v38;
      while (v23 == 1)
      {
LABEL_22:
        if (v8 == v23) {
          goto LABEL_5;
        }
        if (__CFADD__(v23++, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      if (v23)
      {
        uint64_t v42 = v48;
        uint64_t v43 = v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53._uint64_t countAndFlagsBits = 32;
        v53._object = (void *)0xE100000000000000;
        sub_10096BDC0(v53);
        v54._uint64_t countAndFlagsBits = sub_10096D220();
        sub_10096BDC0(v54);
        swift_bridgeObjectRelease();
        uint64_t v24 = v42;
        uint64_t v25 = v43;
        if (!v6) {
          goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v24 = v48;
        uint64_t v25 = v4;
        if (!v6)
        {
LABEL_14:
          id v26 = objc_msgSend(a4, "filename", v34, v35, v36, v37);
          uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v29 = v28;

          if (v24 == v27 && v25 == v29)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v31 = sub_10096D2D0();
            swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v24;
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
      }
      uint64_t v42 = v24;
      uint64_t v43 = v25;
      v51._uint64_t countAndFlagsBits = 46;
      v51._object = (void *)0xE100000000000000;
      sub_10096BDC0(v51);
      v52._uint64_t countAndFlagsBits = v40;
      v52._object = v6;
      sub_10096BDC0(v52);
      swift_bridgeObjectRelease();
      uint64_t v24 = v42;
      uint64_t v25 = v43;
      goto LABEL_14;
    }
LABEL_5:
    char v9 = 1;
  }
  while ((v39 & 1) == 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100834BB8()
{
}

void sub_100834C14()
{
}

void sub_100834C70()
{
}

void sub_100834CCC()
{
}

void sub_100834D28()
{
}

void sub_100834D84()
{
}

void sub_100834DE0()
{
}

uint64_t sub_100834E3C(void *a1, unint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a7;
  uint64_t v13 = sub_10096AE50();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  uint64_t v17 = DocumentWharf.init(label:at:ioContext:targetQueue:reporter:)(a1, a2, (uint64_t)v16, a4, a5 & 0x1FFFFFFFFLL, a6, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  return v17;
}

uint64_t sub_100834F88()
{
  DocumentWharf.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100834FDC()
{
  return type metadata accessor for ReadOnlyWharf();
}

uint64_t type metadata accessor for ReadOnlyWharf()
{
  uint64_t result = qword_100ADC4E8;
  if (!qword_100ADC4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100835030()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100835068()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    type metadata accessor for Bouncing.BouncingContext();
    uint64_t v2 = sub_10096C890();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t AssociatedTypeWitness = sub_10096C890();
      if (v4 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t AssociatedTypeWitness = sub_10096C890();
        if (v5 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_100835314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1008353E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  v9(a5, a1, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for Bouncing.BouncingContext();
  char v11 = (void *)(a5 + *(int *)(v10 + 52));
  void *v11 = a2;
  v11[1] = a3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(a5 + *(int *)(v10 + 56), a4, AssociatedTypeWitness);
}

unint64_t sub_1008354DC(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

uint64_t sub_1008354EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001009BCF60 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001009BCF80 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001009BCFA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_100835630(char a1)
{
  unint64_t result = 0xD000000000000016;
  if (!a1) {
    return 0xD000000000000014;
  }
  return result;
}

uint64_t sub_100835688()
{
  swift_getWitnessTable();

  return sub_10096D340();
}

uint64_t sub_1008356FC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_100835768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_1008357D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

unint64_t sub_100835848@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1008354DC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100835880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EvictionUrgency.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_1008358B4()
{
  return sub_100835630(*v0);
}

uint64_t sub_1008358C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008354EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008358F8()
{
  return sub_100592D4C(*v0);
}

unint64_t sub_100835920@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1008354DC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100835954(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1008359A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1008359FC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v6._uint64_t countAndFlagsBits = 3829792;
  v6._object = (void *)0xE300000000000000;
  sub_10096BDC0(v6);
  sub_10096D270();
  v7._uint64_t countAndFlagsBits = 574254624;
  v7._object = (void *)0xE400000000000000;
  sub_10096BDC0(v7);
  swift_bridgeObjectRetain();
  NSString v0 = sub_10096BC00();
  id v1 = objc_msgSend(v0, "fp_obfuscatedFilename");

  uint64_t v2 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v4 = v3;

  v8._uint64_t countAndFlagsBits = v2;
  v8._object = v4;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 34;
  v9._object = (void *)0xE100000000000000;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_100835B6C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v16 = a2;
  long long v17 = *(_OWORD *)(a2 + 24);
  long long v21 = v17;
  uint64_t v22 = v3;
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_10096D200();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v15 - v6;
  sub_10002689C(a1, a1[3]);
  sub_10096D590();
  LOBYTE(v20) = 0;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = v4;
  uint64_t v9 = v18;
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = v19;
  sub_10096D1A0();
  if (!v10)
  {
    char v11 = (uint64_t *)(v9 + *(int *)(v16 + 52));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v20 = v13;
    *(void *)&long long v21 = v12;
    char v23 = 1;
    sub_100157BC4();
    sub_10096D1A0();
    LOBYTE(v20) = 2;
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v8);
}

uint64_t sub_100835DD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v34 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v40 = (void (*)(char *, char *, uint64_t))((char *)&v30 - v13);
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v41 = sub_10096D0B0();
  uint64_t v35 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v37 = a3;
  uint64_t v38 = a5;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v16 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v32 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v30 - v17;
  sub_10002689C(a1, a1[3]);
  uint64_t v42 = v15;
  uint64_t v19 = (uint64_t)v43;
  sub_10096D570();
  if (v19) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v21 = v35;
  uint64_t v20 = v36;
  uint64_t v30 = v16;
  char v31 = v18;
  uint64_t v43 = a1;
  LOBYTE(v44) = 0;
  uint64_t v22 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  sub_10096D040();
  char v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v23(v31, (char *)v40, v22);
  char v48 = 1;
  sub_100157D68();
  sub_10096D040();
  uint64_t v40 = v23;
  uint64_t v24 = v45;
  uint64_t v25 = v31;
  id v26 = &v31[*(int *)(v30 + 52)];
  *(void *)id v26 = v44;
  *((void *)v26 + 1) = v24;
  LOBYTE(v44) = 2;
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v41);
  uint64_t v27 = v30;
  v40(&v25[*(int *)(v30 + 56)], v34, v22);
  uint64_t v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v33, v25, v27);
  sub_1000268E0((uint64_t)v43);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v25, v27);
}

uint64_t sub_100836278@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100835DD0(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_10083629C(void *a1, uint64_t a2)
{
  return sub_100835B6C(a1, a2);
}

uint64_t sub_1008362B8()
{
  return 0x692D65636E756F62;
}

uint64_t sub_1008362D8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_100836404()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_100836540()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_100836684()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_1008367C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 616);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_100836958()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  long long v3 = *(_OWORD *)(*v0 + 560);
  v23[0] = *(_OWORD *)(*v0 + 544);
  v23[1] = v3;
  Swift::String v25 = (Swift::String)v23[0];
  long long v26 = v3;
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_10096C890();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v23 - v5, (uint64_t)v1 + *(void *)(v2 + 600), v4);
  uint64_t v7 = sub_10096BCC0();
  uint64_t v9 = v8;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_10096CBD0(32);
  v27._uint64_t countAndFlagsBits = 0x3A6465636E756F62;
  v27._object = (void *)0xE90000000000003CLL;
  sub_10096BDC0(v27);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v28._uint64_t countAndFlagsBits = 0x3A726576626420;
  v28._object = (void *)0xE700000000000000;
  sub_10096BDC0(v28);
  uint64_t v24 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 584));
  v29._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 0x3A7265766D6F6420;
  v30._object = (void *)0xE800000000000000;
  sub_10096BDC0(v30);
  uint64_t v10 = *(void **)((char *)v1 + *(void *)(*v1 + 608));
  if (v10)
  {
    id v11 = [v10 description];
    uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = (void *)0xE500000000000000;
    uint64_t v12 = 0x3E6C696E3CLL;
  }
  v31._uint64_t countAndFlagsBits = v12;
  v31._object = v14;
  sub_10096BDC0(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 8254;
  v32._object = (void *)0xE200000000000000;
  sub_10096BDC0(v32);
  Swift::String v15 = v25;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_10096CBD0(18);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 3829620;
  v25._object = (void *)0xE300000000000000;
  swift_bridgeObjectRetain();
  NSString v16 = sub_10096BC00();
  id v17 = objc_msgSend(v16, "fp_obfuscatedFilename");

  uint64_t v18 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v20 = v19;

  v33._uint64_t countAndFlagsBits = v18;
  v33._object = v20;
  sub_10096BDC0(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 0x747865746E6F6320;
  v34._object = (void *)0xEA00000000007B3ALL;
  sub_10096BDC0(v34);
  v35._uint64_t countAndFlagsBits = v7;
  v35._object = v9;
  sub_10096BDC0(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 125;
  v36._object = (void *)0xE100000000000000;
  sub_10096BDC0(v36);
  Swift::String v21 = v25;
  Swift::String v25 = v15;
  swift_bridgeObjectRetain();
  sub_10096BDC0(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25._countAndFlagsBits;
}

uint64_t sub_100836D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100836EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v126 = a2;
  uint64_t v115 = a1;
  uint64_t v4 = *(char **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 544);
  uint64_t v6 = *(void *)(*(void *)v2 + 560);
  uint64_t v7 = type metadata accessor for JobLockRule();
  uint64_t v113 = *(void *)(v7 - 8);
  uint64_t v114 = v7;
  __chkstk_darwin(v7);
  uint64_t v112 = (char *)&v91 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = sub_10096C890();
  uint64_t v110 = *(void *)(v11 - 8);
  uint64_t v111 = v11;
  __chkstk_darwin(v11);
  id v109 = (char *)&v91 - v12;
  uint64_t v94 = sub_10096C890();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v13 = __chkstk_darwin(v94);
  uint64_t v98 = (char *)&v91 - v14;
  uint64_t v117 = AssociatedTypeWitness;
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v92 = (char *)&v91 - v15;
  uint64_t v120 = v4;
  uint64_t v16 = *((void *)v4 + 69);
  uint64_t v17 = *((void *)v4 + 71);
  uint64_t v122 = v5;
  uint64_t v123 = v16;
  uint64_t v124 = v6;
  uint64_t v125 = v17;
  uint64_t v102 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v100 = sub_10096C890();
  uint64_t v118 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  Swift::String v101 = (char *)&v91 - v18;
  uint64_t v99 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v99 - 8);
  uint64_t v19 = __chkstk_darwin(v99);
  Swift::String v95 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  Swift::String v96 = (char *)&v91 - v22;
  uint64_t v119 = v10;
  uint64_t v108 = *(void *)(v10 - 8);
  __chkstk_darwin(v21);
  uint64_t v107 = (uint64_t)&v91 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v122 = v24;
  uint64_t v123 = v25;
  uint64_t v124 = AssociatedConformanceWitness;
  uint64_t v125 = v27;
  uint64_t v104 = type metadata accessor for FileItemVersion();
  uint64_t v105 = sub_10096C890();
  uint64_t v106 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  Swift::String v29 = (char *)&v91 - v28;
  uint64_t v30 = type metadata accessor for SnapshotItem();
  uint64_t v31 = sub_10096C890();
  uint64_t v103 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  Swift::String v34 = (char *)&v91 - v33;
  uint64_t v35 = *(void *)(v30 - 8);
  __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v91 - v36;
  uint64_t v38 = v121;
  char v39 = &v2[*((void *)v120 + 72)];
  (*(void (**)(char *, void))(**(void **)(v126 + 32) + 248))(&v3[*((void *)v120 + 72)], *(void *)&v3[*((void *)v120 + 73)]);
  if (!v38)
  {
    unint64_t v91 = v39;
    uint64_t v120 = v37;
    uint64_t v121 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v34, 1, v30) == 1)
    {
      (*(void (**)(char *, uint64_t))(v103 + 8))(v34, v31);
      return 0;
    }
    uint64_t v103 = v35;
    uint64_t v40 = v120;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v120, v34, v30);
    uint64_t v41 = v104;
    uint64_t v42 = *(void *)(v104 - 8);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v29, &v40[*(int *)(v30 + 40)], v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v29, 0, 1, v41);
    uint64_t v43 = v3;
    uint64_t v44 = &v3[*(void *)(*(void *)v3 + 624)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v44, v29, v105);
    swift_endAccess();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v46 = v107;
    uint64_t v106 = v30;
    sub_100619010(v30, WitnessTable, v107);
    char v47 = v3[140];
    uint64_t v49 = v118;
    uint64_t v48 = v119;
    uint64_t v50 = v110;
    if ((v47 & 1) == 0 && sub_1005152D8())
    {
      uint64_t v51 = v46 + *(int *)(v48 + 40);
      Swift::String v52 = (int *)type metadata accessor for ItemMetadata();
      if ((*(unsigned char *)(v51 + v52[16]) & 1) == 0 && (*(unsigned char *)(v51 + v52[17]) & 1) == 0)
      {
        Swift::String v53 = (uint64_t *)(v51 + v52[14]);
        uint64_t v54 = v53[1];
        if (v54)
        {
          uint64_t v55 = *v53;
        }
        else
        {
          uint64_t v55 = *(void *)(v46 + *(int *)(v48 + 36));
          uint64_t v54 = swift_bridgeObjectRetain();
        }
        *Swift::String v53 = v55;
        v53[1] = v54;
      }
    }
    if (sub_1005152D8())
    {
      uint64_t v56 = *(int *)(v48 + 40);
      uint64_t v57 = v46 + v56 + *(int *)(type metadata accessor for ItemMetadata() + 144);
      uint64_t v58 = v111;
      if ((*(unsigned char *)(v57 + 4) & 1) != 0 || *(_DWORD *)v57 < 2u) {
        goto LABEL_18;
      }
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      uint64_t v60 = v101;
      uint64_t v61 = v100;
      v59(v101, &v43[*(void *)(*(void *)v43 + 600)], v100);
      uint64_t v62 = v102;
      uint64_t v63 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v102) == 1)
      {
        (*(void (**)(char *, uint64_t))(v118 + 8))(v60, v61);
      }
      else
      {
        uint64_t v81 = &v60[*(int *)(v62 + 56)];
        uint64_t v82 = v97;
        uint64_t v83 = v95;
        uint64_t v84 = v99;
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v81, v99);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v101, v102);
        uint64_t v85 = v96;
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v96, v83, v84);
        uint64_t v86 = v98;
        uint64_t v87 = v121;
        (*(void (**)(char *))(**(void **)(v126 + 16) + 152))(v85);
        if (v87)
        {
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v99);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v86, 1, 1, v117);
          uint64_t v121 = 0;
        }
        else
        {
          uint64_t v121 = 0;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v99);
          uint64_t v89 = v116;
          uint64_t v88 = v117;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v86, 1, v117) != 1)
          {
            uint64_t v90 = v92;
            (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v92, v86, v88);
            (*(void (**)(uint64_t, char *, uint64_t))(v89 + 40))(v46, v90, v88);
            goto LABEL_18;
          }
        }
        (*(void (**)(char *, uint64_t))(v93 + 8))(v86, v94);
      }
    }
    else
    {
      uint64_t v58 = v111;
    }
LABEL_18:
    uint64_t v64 = (uint64_t *)&v43[*(void *)(*(void *)v43 + 592)];
    uint64_t v66 = *v64;
    uint64_t v65 = v64[1];
    uint64_t v67 = v46;
    Swift::String v68 = (void *)(v46 + *(int *)(v48 + 36));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *Swift::String v68 = v66;
    v68[1] = v65;
    uint64_t v69 = v108;
    uint64_t v70 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v109, v67, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v48);
    uint64_t v71 = &v43[*(void *)(*(void *)v43 + 616)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v71, v70, v58);
    swift_endAccess();
    swift_beginAccess();
    sub_1003B32B0((uint64_t)(v43 + 56), (uint64_t)&v122);
    uint64_t v72 = *((void *)v43 + 15);
    uint64_t v73 = v117;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v75 = (uint64_t)v112;
    uint64_t v76 = &v112[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v77 = &v112[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v78 = *(void (**)(char *, unsigned char *, uint64_t))(v116 + 16);
    v78(v112, v91, v73);
    v78(v76, (unsigned char *)v67, v73);
    v78(v77, (unsigned char *)v67, v73);
    uint64_t v79 = v114;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = sub_1001E3E98((uint64_t)&v122, v72, v75);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v75, v79);
    sub_1003B3318((uint64_t)&v122);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v120, v106);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v119);
  }
  return v30;
}

uint64_t sub_100837D44(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v171 = a3;
  uint64_t v172 = a1;
  uint64_t v167 = a2;
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 568);
  uint64_t v6 = *(void *)(*v3 + 552);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v174 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v176 = swift_getAssociatedConformanceWitness();
  uint64_t v132 = type metadata accessor for FileItemVersion();
  uint64_t v138 = sub_10096C890();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v146 = (char *)&v123 - v7;
  uint64_t v145 = swift_getAssociatedTypeWitness();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v123 - v8;
  v169 = v3;
  uint64_t v170 = v4;
  uint64_t v9 = *(void *)(v4 + 560);
  uint64_t v10 = *(void *)(v4 + 544);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v130 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v13;
  uint64_t v174 = v14;
  uint64_t AssociatedConformanceWitness = v15;
  uint64_t v176 = v16;
  uint64_t v17 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v140 = TupleTypeMetadata2;
  uint64_t v19 = sub_10096D510();
  uint64_t v165 = *(void *)(v19 - 8);
  uint64_t v166 = v19;
  __chkstk_darwin(v19);
  v164 = (uint64_t *)((char *)&v123 - v20);
  uint64_t v128 = sub_10096C890();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v21 = __chkstk_darwin(v128);
  v139 = (char *)&v123 - v22;
  uint64_t v159 = v11;
  uint64_t v160 = *(void *)(v11 - 8);
  __chkstk_darwin(v21);
  v129 = (char *)&v123 - v23;
  uint64_t AssociatedTypeWitness = v10;
  uint64_t v174 = v6;
  uint64_t v163 = v6;
  uint64_t v24 = v169;
  uint64_t AssociatedConformanceWitness = v9;
  uint64_t v176 = v5;
  uint64_t v162 = v5;
  uint64_t v25 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v149 = sub_10096C890();
  uint64_t v148 = *(void (**)(char *, char *, uint64_t))(v149 - 8);
  uint64_t v26 = __chkstk_darwin(v149);
  v147 = (char *)&v123 - v27;
  uint64_t v153 = v25;
  uint64_t v151 = *(void *)(v25 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v142 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = v29;
  __chkstk_darwin(v28);
  uint64_t v150 = (char *)&v123 - v30;
  uint64_t v156 = sub_10096C890();
  uint64_t v158 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  v155 = (char *)&v123 - v31;
  uint64_t v32 = sub_10096C890();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v123 - v35;
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = __chkstk_darwin(v34);
  uint64_t v135 = (char *)&v123 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  v168 = (char *)&v123 - v41;
  uint64_t v134 = v42;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v152 = (char *)&v123 - v44;
  uint64_t v161 = v12;
  uint64_t v154 = *(void *)(v12 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  v141 = (char *)&v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = v46;
  __chkstk_darwin(v45);
  v157 = (char *)&v123 - v47;
  uint64_t v131 = *(void *)(v172 + 40);
  uint64_t v48 = (uint64_t)v24 + *(void *)(v170 + 624);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v36, v48, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v36, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
    uint64_t AssociatedTypeWitness = v10;
    uint64_t v174 = v163;
    uint64_t AssociatedConformanceWitness = v9;
    uint64_t v176 = v162;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v49 = swift_allocError();
    uint64_t v51 = v50;
    uint64_t v52 = v159;
    uint64_t v53 = swift_getTupleTypeMetadata2();
    uint64_t v54 = (void *)(v51 + *(int *)(v53 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v51, (uint64_t)v24 + *(void *)(*v24 + 576), v52);
    *uint64_t v54 = 0xD000000000000011;
    v54[1] = 0x80000001009A0FE0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
    swift_willThrow();
LABEL_5:
    uint64_t v70 = v166;
    uint64_t v69 = v167;
    uint64_t v71 = v164;
    uint64_t *v164 = v49;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v69(v71);
    swift_errorRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v165 + 8))(v71, v70);
  }
  uint64_t v126 = v10;
  uint64_t v170 = v9;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v55(v168, v36, v17);
  uint64_t v56 = v17;
  uint64_t v57 = (uint64_t)v24 + *(void *)(*v24 + 616);
  swift_beginAccess();
  uint64_t v58 = v155;
  uint64_t v59 = v57;
  uint64_t v60 = v156;
  (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v155, v59, v156);
  uint64_t v61 = v154;
  uint64_t v62 = v161;
  uint64_t v63 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v58, 1, v161) == 1)
  {
    (*(void (**)(char *, uint64_t))(v158 + 8))(v58, v60);
    uint64_t AssociatedTypeWitness = v126;
    uint64_t v174 = v163;
    uint64_t AssociatedConformanceWitness = v170;
    uint64_t v176 = v162;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v49 = swift_allocError();
    uint64_t v65 = v64;
    uint64_t v66 = v159;
    uint64_t v67 = swift_getTupleTypeMetadata2();
    Swift::String v68 = (void *)(v65 + *(int *)(v67 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v65, (uint64_t)v24 + *(void *)(*v24 + 576), v66);
    *Swift::String v68 = 0xD000000000000012;
    v68[1] = 0x80000001009BCF40;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v65, 0, 1, v67);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v168, v56);
    goto LABEL_5;
  }
  uint64_t v158 = v37;
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  v155 = (char *)(v61 + 32);
  uint64_t v125 = v73;
  v73(v157, v58, v62);
  int v74 = v152;
  uint64_t v75 = v168;
  v168 = (char *)v55;
  uint64_t v156 = v37 + 32;
  v55(v152, v75, v56);
  uint64_t v76 = v148;
  uint64_t v77 = v147;
  uint64_t v78 = v149;
  (*((void (**)(char *, char *, uint64_t))v148 + 2))(v147, (char *)v24 + *(void *)(*v24 + 600), v149);
  uint64_t v79 = v151;
  uint64_t v80 = v153;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v77, 1, v153) == 1)
  {
    (*((void (**)(char *, uint64_t))v76 + 1))(v77, v78);
    uint64_t v81 = v164;
    uint64_t v82 = (char *)v164 + *(int *)(v140 + 48);
    uint64_t v83 = v157;
    (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v164, v157, v62);
    uint64_t v84 = v158;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v82, v74, v56);
    uint64_t v85 = v166;
    swift_storeEnumTagMultiPayload();
    v167(v81);
    (*(void (**)(uint64_t *, uint64_t))(v165 + 8))(v81, v85);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v74, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v83, v62);
  }
  uint64_t v86 = v61;
  uint64_t v87 = v79 + 32;
  uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  uint64_t v89 = v150;
  v88(v150, v77, v80);
  uint64_t v90 = v139;
  (*(void (**)(char *))(**(void **)(v172 + 16) + 152))(v89);
  uint64_t v149 = v87;
  uint64_t v148 = v88;
  uint64_t v91 = v160;
  uint64_t v92 = v159;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v90, 1, v159) == 1)
  {
    uint64_t v93 = v90;
    uint64_t v94 = v158;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v93, v128);
    Swift::String v95 = v167;
    uint64_t v96 = v56;
  }
  else
  {
    uint64_t v97 = v129;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v129, v90, v92);
    char v98 = sub_10096BBE0();
    uint64_t v96 = v56;
    uint64_t v94 = v158;
    if (v98)
    {
      type metadata accessor for FileTreeError();
      uint64_t v99 = v97;
      swift_getWitnessTable();
      uint64_t v100 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      uint64_t v101 = v91;
      uint64_t v102 = v164;
      uint64_t *v164 = v100;
      uint64_t v103 = v166;
      swift_storeEnumTagMultiPayload();
      v167(v102);
      (*(void (**)(uint64_t *, uint64_t))(v165 + 8))(v102, v103);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v99, v92);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v150, v153);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v152, v96);
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v157, v161);
    }
    (*(void (**)(char *, uint64_t))(v91 + 8))(v97, v92);
    Swift::String v95 = v167;
  }
  uint64_t v104 = v132;
  uint64_t v105 = v157;
  uint64_t v172 = *(void *)(v131 + 16);
  uint64_t v106 = v150;
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v143, v150, v145);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v146, 1, 1, v104);
  v169 = *(uint64_t **)((char *)v24 + *(void *)(*v24 + 608));
  uint64_t v107 = v151;
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v142, v106, v153);
  uint64_t v108 = v86;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v141, v105, v161);
  id v109 = v135;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v135, v152, v96);
  unint64_t v110 = (*(unsigned __int8 *)(v107 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  unint64_t v111 = (v136 + v110 + *(unsigned __int8 *)(v86 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v112 = (v133 + *(unsigned __int8 *)(v94 + 80) + v111) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v113 = (char *)swift_allocObject();
  uint64_t v114 = v96;
  uint64_t v124 = v96;
  uint64_t v115 = v113;
  uint64_t v116 = v163;
  *((void *)v113 + 2) = v126;
  *((void *)v113 + 3) = v116;
  uint64_t v117 = v162;
  *((void *)v113 + 4) = v170;
  *((void *)v113 + 5) = v117;
  uint64_t v118 = &v113[v110];
  *((void *)v115 + 6) = v95;
  *((void *)v115 + 7) = v171;
  uint64_t v119 = v153;
  v148(v118, v142, v153);
  v125(&v115[v111], v141, v161);
  ((void (*)(char *, char *, uint64_t))v168)(&v115[v112], v109, v114);
  uint64_t v120 = *(void (**)(char *, char *, uint64_t *, void, uint64_t (*)(char *), void *))(*(void *)v172 + 136);
  swift_retain();
  uint64_t v121 = v143;
  uint64_t v122 = v146;
  v120(v143, v146, v169, 0, sub_100841E14, v115);
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v122, v138);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v121, v145);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v150, v119);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v152, v124);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v157, v161);
}

uint64_t sub_1008392D4(char *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v95 = a6;
  uint64_t v94 = a5;
  uint64_t v103 = a4;
  uint64_t v109 = a3;
  unint64_t v110 = a2;
  unint64_t v111 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v97 = AssociatedTypeWitness;
  uint64_t v98 = v13;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v96 = (char *)&v88 - v14;
  uint64_t v112 = a7;
  uint64_t v113 = a8;
  uint64_t v114 = a9;
  uint64_t v115 = a10;
  uint64_t v101 = a10;
  uint64_t v102 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)&v88 - v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v104 = a9;
  uint64_t v105 = a7;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v112 = v17;
  uint64_t v113 = v18;
  uint64_t v114 = AssociatedConformanceWitness;
  uint64_t v115 = v20;
  uint64_t v21 = type metadata accessor for FileItemVersion();
  uint64_t v93 = v16;
  uint64_t v92 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v23 = sub_10096D510();
  uint64_t v107 = *(void *)(v23 - 8);
  uint64_t v108 = v23;
  __chkstk_darwin(v23);
  uint64_t v106 = (uint64_t *)((char *)&v88 - v24);
  uint64_t v25 = sub_10096C890();
  uint64_t v26 = sub_10096D510();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v88 - v28;
  uint64_t v30 = *(void *)(v25 - 8);
  uint64_t v31 = __chkstk_darwin(v27);
  uint64_t v33 = (char *)&v88 - v32;
  uint64_t v34 = *(void *)(a8 - 8);
  uint64_t v35 = __chkstk_darwin(v31);
  uint64_t v37 = (char *)&v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v88 - v38;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v29, v111, v26);
  sub_100835314(v26, (uint64_t)&v112, (uint64_t)v33);
  uint64_t v91 = v37;
  uint64_t v90 = TupleTypeMetadata2;
  unint64_t v111 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, a8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v25);
    type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v41 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v106;
    *uint64_t v106 = v41;
    uint64_t v43 = v108;
    swift_storeEnumTagMultiPayload();
    v110(v42);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v107 + 8))(v42, v43);
  }
  uint64_t v88 = v34;
  uint64_t v45 = v111;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v111, v33, a8);
  uint64_t v46 = *(uint64_t (**)(uint64_t))(v101 + 80);
  uint64_t v89 = a8;
  uint64_t v47 = v46(a8);
  unint64_t v49 = v48;
  uint64_t v50 = (uint64_t *)(v103 + *(int *)(v102 + 52));
  uint64_t v52 = *v50;
  unint64_t v51 = v50[1];
  swift_bridgeObjectRetain();
  uint64_t v53 = v47;
  uint64_t v54 = sub_10002C020(v47, v49);
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  if (v56)
  {
    if (v54 == 12565487 && v56 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_10096BD70();
      sub_1000364D0(v58, v53, v49);
      swift_bridgeObjectRelease();
      uint64_t v45 = v111;
      uint64_t v53 = sub_10096BD10();
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    char v57 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v57) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v60 = v49;
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_10002C020(v52, v51);
  uint64_t v63 = v62;
  swift_bridgeObjectRelease();
  if (v63)
  {
    if (v61 == 12565487 && v63 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v64 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v64)
    {
LABEL_16:
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_10096BD70();
      sub_1000364D0(v65, v52, v51);
      swift_bridgeObjectRelease();
      uint64_t v45 = v111;
      uint64_t v66 = sub_10096BD10();
      unint64_t v51 = v67;
      swift_bridgeObjectRelease();
      if (v53 != v66) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  if (v53 != v52)
  {
LABEL_21:
    char v68 = sub_10096D2D0();
    goto LABEL_22;
  }
LABEL_19:
  if (v60 != v51) {
    goto LABEL_21;
  }
  char v68 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = v88;
  uint64_t v70 = v91;
  uint64_t v71 = v89;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v91, v45, v89);
  uint64_t v73 = v99;
  uint64_t v72 = v100;
  uint64_t v74 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v103, v102);
  if (v68)
  {
    uint64_t v75 = v71;
    uint64_t v76 = v96;
    uint64_t v77 = v74;
    (*(void (**)(uint64_t, uint64_t))(v101 + 72))(v71, v101);
    uint64_t v78 = v97;
    swift_getAssociatedConformanceWitness();
    char v79 = sub_10096BBE0();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v76, v78);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v77);
    uint64_t v80 = *(void (**)(char *, uint64_t))(v69 + 8);
    v80(v70, v75);
    if (v79)
    {
      uint64_t v81 = v106;
      uint64_t v82 = (char *)v106 + *(int *)(v90 + 48);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v93 - 8) + 16))(v106, v94);
      (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 16))(v82, v95);
      uint64_t v83 = v108;
      swift_storeEnumTagMultiPayload();
      v110(v81);
      (*(void (**)(uint64_t *, uint64_t))(v107 + 8))(v81, v83);
      return ((uint64_t (*)(char *, uint64_t))v80)(v111, v75);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    uint64_t v75 = v71;
    uint64_t v80 = *(void (**)(char *, uint64_t))(v69 + 8);
    v80(v70, v75);
  }
  uint64_t v84 = v106;
  uint64_t v85 = v111;
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v86 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  *uint64_t v84 = v86;
  uint64_t v87 = v108;
  swift_storeEnumTagMultiPayload();
  v110(v84);
  (*(void (**)(uint64_t *, uint64_t))(v107 + 8))(v84, v87);
  return ((uint64_t (*)(char *, uint64_t))v80)(v85, v75);
}

uint64_t sub_100839E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v5;
  v11[4] = a4;
  v11[5] = a5;
  v11[6] = a3;
  v11[7] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100837D44(a1, (void (*)(uint64_t *))sub_1008418FC, (uint64_t)v11);

  return swift_release();
}

uint64_t sub_100839F50(char *a1, uint64_t *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  unint64_t v111 = a7;
  uint64_t v122 = a5;
  uint64_t v123 = a6;
  uint64_t v121 = a4;
  uint64_t v124 = a1;
  uint64_t v125 = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = *(void *)(*a2 + 96);
  uint64_t v10 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v98 = (char *)v93 - v12;
  uint64_t v13 = *(void *)(v8 + 88);
  uint64_t v14 = *(void *)(v8 + 104);
  uint64_t v130 = v10;
  uint64_t v113 = v14;
  uint64_t v114 = v13;
  uint64_t v131 = v13;
  uint64_t v132 = v9;
  uint64_t v133 = v14;
  uint64_t v102 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v106 = sub_10096C890();
  uint64_t v101 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v117 = (char *)v93 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v130 = v16;
  uint64_t v131 = v17;
  uint64_t v132 = AssociatedConformanceWitness;
  uint64_t v133 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v118 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v109 = v22;
  unint64_t v110 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v93 - v23;
  uint64_t v115 = v10;
  uint64_t v116 = v9;
  swift_getAssociatedConformanceWitness();
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v25 = type metadata accessor for ItemState();
  uint64_t v119 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v108 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v104 = (char *)v93 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)v93 - v31;
  uint64_t v107 = v33;
  __chkstk_darwin(v30);
  uint64_t v35 = (char *)v93 - v34;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v37 = sub_10096D510();
  __chkstk_darwin(v37);
  uint64_t v39 = (void *)((char *)v93 - v38);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v93 - v38, v124, v37);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = *v39;
    uint64_t v42 = swift_allocObject();
    uint64_t v44 = v121;
    uint64_t v43 = v122;
    *(void *)(v42 + 16) = v121;
    *(void *)(v42 + 24) = v43;
    uint64_t v45 = (void *)swift_allocObject();
    uint64_t v46 = (uint64_t)v125;
    v45[2] = v125;
    v45[3] = v41;
    uint64_t v47 = v123;
    v45[4] = a2;
    v45[5] = v47;
    v45[6] = v44;
    v45[7] = v43;
    swift_retain_n();
    swift_retain_n();
    swift_errorRetain();
    uint64_t v48 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_10042BE40, v46, (uint64_t)sub_1003A946C, v42, (uint64_t)sub_1008426C8, (uint64_t)v45, v48, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
    swift_release();
    return swift_errorRelease();
  }
  uint64_t v112 = a2;
  uint64_t v50 = (char *)v39 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v51 = v119;
  uint64_t v94 = *(void (**)(char *, uint64_t *, uint64_t))(v119 + 32);
  uint64_t v95 = v119 + 32;
  v94(v35, v39, v25);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
  uint64_t v103 = v24;
  uint64_t v120 = v20;
  v93[0] = v52;
  v93[1] = v118 + 32;
  v52(v24, v50, v20);
  uint64_t v53 = *((void *)v125 + 17);
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v105(v32, v35, v25);
  if ((v53 & 0x100000000) != 0)
  {
    int v55 = 1;
  }
  else
  {
    uint64_t v54 = &v32[*(int *)(v25 + 40)];
    int v55 = v54[*(int *)(type metadata accessor for ItemMetadata() + 64)];
  }
  uint64_t v56 = v117;
  char v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v32, v25);
  uint64_t v58 = (uint64_t)v104;
  uint64_t v124 = v35;
  v105(v104, v35, v25);
  uint64_t v96 = (uint64_t (*)(char *, char *))v57;
  uint64_t v97 = v51 + 8;
  if (v55)
  {
    v57((char *)v58, v25);
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v60 = v58 + *(int *)(v25 + 40);
    LODWORD(v60) = *(unsigned __int8 *)(v60 + *(int *)(type metadata accessor for ItemMetadata() + 68));
    v57((char *)v58, v25);
    uint64_t v59 = ~(8 * (int)v60) & 8;
  }
  uint64_t v61 = v103;
  uint64_t v117 = (char *)v25;
  uint64_t v62 = *(int *)(v25 + 40);
  uint64_t v63 = &v124[v62 + *(int *)(type metadata accessor for ItemMetadata() + 144)];
  uint64_t v64 = v106;
  if ((v63[4] & 1) == 0 && *(_DWORD *)v63 >= 2u)
  {
    unint64_t v65 = v56;
    if (sub_1005152D8())
    {
      uint64_t v66 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v56, &v125[*(void *)(*(void *)v125 + 600)], v64);
      uint64_t v67 = v102;
      uint64_t v68 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v102) != 1)
      {
        uint64_t v89 = (uint64_t *)&v65[*(int *)(v67 + 52)];
        uint64_t v90 = v89[1];
        uint64_t v104 = (char *)*v89;
        uint64_t v91 = *(void (**)(char *, uint64_t))(v68 + 8);
        swift_bridgeObjectRetain();
        v91(v65, v67);
        uint64_t v106 = v59 | 0x10;
        type metadata accessor for BouncingHardlinkStagedContext();
        uint64_t v92 = (uint64_t)v98;
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v98, v124, v100);
        uint64_t v104 = (char *)sub_10083ADC4(v92, (uint64_t)v104, v90);
        uint64_t v69 = 3;
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v64);
    }
  }
  uint64_t v106 = v59;
  type metadata accessor for StagedContext();
  uint64_t v104 = (char *)swift_allocObject();
  uint64_t v69 = 1;
LABEL_15:
  uint64_t v102 = v69;
  uint64_t v100 = *((void *)v111 + 2);
  uint64_t v70 = v125;
  uint64_t v71 = *(void *)v125;
  unint64_t v111 = (char *)v70 + *(void *)(*v70 + 576);
  v127[1] = 0;
  v127[0] = 0;
  v127[2] = 0xB000000000000000;
  long long v128 = 0u;
  long long v129 = 0u;
  uint64_t v101 = *(void *)&v125[*(void *)(v71 + 608)];
  sub_10002C548((uint64_t)v126);
  sub_10016B800((uint64_t)v126, (uint64_t)&v130);
  uint64_t v72 = v118;
  uint64_t v73 = v110;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v61, v120);
  uint64_t v74 = v108;
  v105(v108, v124, (uint64_t)v117);
  unint64_t v75 = (*(unsigned __int8 *)(v72 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  unint64_t v76 = (v109 + v75 + *(unsigned __int8 *)(v119 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
  unint64_t v77 = (v107 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v78 = (char *)swift_allocObject();
  uint64_t v79 = v114;
  *((void *)v78 + 2) = v115;
  *((void *)v78 + 3) = v79;
  uint64_t v81 = v112;
  uint64_t v80 = v113;
  *((void *)v78 + 4) = v116;
  *((void *)v78 + 5) = v80;
  *((void *)v78 + 6) = v81;
  *((void *)v78 + 7) = v70;
  uint64_t v82 = &v78[v75];
  uint64_t v83 = v120;
  uint64_t v84 = v72;
  uint64_t v85 = v122;
  *((void *)v78 + 8) = v121;
  *((void *)v78 + 9) = v85;
  ((void (*)(char *, char *, uint64_t))v93[0])(v82, v73, v83);
  v94(&v78[v76], (uint64_t *)v74, (uint64_t)v117);
  *(void *)&v78[v77] = v123;
  uint64_t v86 = *(void (**)(char *, char *, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t *, void, uint64_t (*)(uint64_t), char *))(*(void *)v100 + 624);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v87 = v124;
  uint64_t v88 = v103;
  v86(v111, v124, v102, (uint64_t)v104, v127, v103, v101, v106, &v130, 0, sub_100842474, v78);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v88, v120);
  return v96(v87, v117);
}

uint64_t sub_10083AACC(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void (*)(char *, uint64_t, uint64_t)), uint64_t a6)
{
  v18[1] = a6;
  uint64_t v19 = a5;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v20 = sub_10096C890();
  uint64_t v8 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v10 = (char *)v18 - v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for ItemState();
  uint64_t v12 = sub_10096C890();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v18 - v14, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v10, 1, 1, v7);
  uint64_t v16 = v23;
  sub_10083ED50((uint64_t)v15, (uint64_t)v10, a2, v21, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19(0, 0, 0, a2);
}

uint64_t *sub_10083ADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)swift_allocObject();
  uint64_t v7 = sub_100841680(a1, a2, a3, v6);
  swift_release();
  return v7;
}

uint64_t sub_10083AE2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a8;
  uint64_t v63 = a4;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v64 = a5;
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v56 = a1;
  uint64_t v59 = *a2;
  uint64_t v8 = *(void *)(v59 + 96);
  uint64_t v9 = *(void *)(v59 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v50 = v10;
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v55 = *(void *)(v65 + 64);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v51 = (char *)&v45 - v11;
  uint64_t v13 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = v13;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v67 = v15;
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v69 = v17;
  uint64_t v18 = type metadata accessor for FileItemVersion();
  uint64_t v48 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v52 = *(void *)(v19 + 64);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v45 - v20;
  unint64_t v49 = (char *)&v45 - v20;
  type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v22 = sub_10096D510();
  uint64_t v46 = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v45 - v25;
  uint64_t v47 = (char *)&v45 - v25;
  uint64_t v27 = swift_allocObject();
  uint64_t v54 = v27;
  uint64_t v28 = v64;
  *(void *)(v27 + 16) = v63;
  *(void *)(v27 + 24) = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v56, v22);
  uint64_t v45 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v57, v18);
  uint64_t v29 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v12, v58, v10);
  unint64_t v30 = (*(unsigned __int8 *)(v23 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v31 = (v24 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (*(unsigned __int8 *)(v19 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v33 = (v52 + *(unsigned __int8 *)(v29 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v34 = (v55 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = (char *)swift_allocObject();
  uint64_t v37 = v59;
  *((void *)v36 + 2) = v9;
  uint64_t v38 = v60;
  *((void *)v36 + 3) = *(void *)(v37 + 88);
  *((void *)v36 + 4) = v53;
  *((void *)v36 + 5) = *(void *)(v37 + 104);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v36[v30], v47, v46);
  uint64_t v39 = v61;
  *(void *)&v36[v31] = v61;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v36[v32], v49, v48);
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v36[v33], v51, v50);
  *(void *)&v36[v34] = v38;
  uint64_t v40 = v63;
  *(void *)&v36[v35] = v62;
  uint64_t v41 = &v36[(v35 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v42 = v64;
  *(void *)uint64_t v41 = v40;
  *((void *)v41 + 1) = v42;
  uint64_t v43 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_10042BE40, v39, (uint64_t)sub_1003B377C, v54, (uint64_t)sub_100842CEC, (uint64_t)v36, v43, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10083B420(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t)), uint64_t a8)
{
  uint64_t v99 = a8;
  uint64_t v100 = a7;
  uint64_t v112 = a5;
  uint64_t v113 = a6;
  uint64_t v105 = a4;
  uint64_t v119 = a1;
  uint64_t v9 = *a2;
  uint64_t v10 = *(void *)(*a2 + 544);
  uint64_t v11 = sub_10096C890();
  __chkstk_darwin(v11 - 8);
  uint64_t v108 = (char *)v93 - v12;
  uint64_t v115 = a2;
  uint64_t v13 = *(void *)(v9 + 560);
  type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v110 = *(void *)(v14 - 8);
  uint64_t v111 = v14;
  __chkstk_darwin(v14);
  uint64_t v109 = (char *)v93 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t, uint64_t))swift_getAssociatedConformanceWitness();
  uint64_t v104 = type metadata accessor for ItemState();
  uint64_t v17 = sub_10096C890();
  uint64_t v106 = *(void *)(v17 - 8);
  uint64_t v107 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v124 = (uint64_t)v93 - v19;
  uint64_t v102 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v93 - v20;
  uint64_t v118 = v10;
  uint64_t v120 = v13;
  uint64_t v22 = type metadata accessor for ItemPropagationResult();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v98 = (char *)v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v101 = (char *)v93 - v27;
  __chkstk_darwin(v26);
  uint64_t v103 = (char *)v93 - v28;
  uint64_t v29 = sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v31 = sub_10096D510();
  uint64_t v32 = __chkstk_darwin(v31);
  unint64_t v34 = (void (**)(char *, uint64_t, uint64_t))((char *)v93 - v33);
  uint64_t v122 = v29;
  uint64_t v121 = *(void *)(v29 - 8);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)v93 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)v93 - v38;
  (*(void (**)(void, char *, uint64_t))(v40 + 16))(v34, v119, v31);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v119 = v39;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t AssociatedConformanceWitness = *v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v39, 1, 1, v22);
    uint64_t v102 = 0;
    id v116 = 0;
    uint64_t v42 = (void *)0xE000000000000000;
    uint64_t v43 = v23;
    goto LABEL_11;
  }
  id v44 = *(void (**)(char *, uint64_t, uint64_t))((char *)v34 + *(int *)(TupleTypeMetadata2 + 48));
  int v45 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v23 + 48))(v34, 1, v22);
  id v116 = v44;
  if (v45 == 1)
  {
    uint64_t v39 = v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v119, 1, 1, v22);
    uint64_t AssociatedConformanceWitness = 0;
    uint64_t v43 = v23;
    if (v44)
    {
LABEL_5:
      strcpy((char *)v123, " domver:");
      BYTE1(v123[1]) = 0;
      WORD1(v123[1]) = 0;
      HIDWORD(v123[1]) = -402653184;
      id v46 = [v44 description];
      uint64_t v47 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v49 = v48;

      v125._uint64_t countAndFlagsBits = v47;
      v125._object = v49;
      sub_10096BDC0(v125);
      swift_bridgeObjectRelease();
      uint64_t v42 = (void *)v123[1];
      uint64_t v102 = v123[0];
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v95 = v37;
    uint64_t v50 = v103;
    (*(void (**)(char *, void, uint64_t))(v23 + 32))(v103, v34, v22);
    uint64_t v51 = v44;
    uint64_t v52 = v119;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v119, v50, v22);
    uint64_t v96 = v23;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v52, 0, 1, v22);
    uint64_t v53 = v21;
    uint64_t v54 = v120;
    uint64_t v55 = v120;
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v120 + 64);
    id v97 = v51;
    uint64_t v57 = v55 + 64;
    uint64_t v58 = v118;
    uint64_t v94 = v56;
    v93[1] = v57;
    v56(v118, v54);
    uint64_t v59 = (uint64_t)v115 + *(void *)(*v115 + 576);
    LOBYTE(v52) = sub_10096BBE0();
    uint64_t v60 = v102;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v53, AssociatedTypeWitness);
    if (v52)
    {
      uint64_t v43 = v96;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v103, v22);

      uint64_t AssociatedConformanceWitness = 0;
    }
    else
    {
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t, uint64_t))swift_allocError();
      uint64_t v61 = v58;
      uint64_t v63 = v62;
      sub_10096C890();
      swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v63, v59, AssociatedTypeWitness);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v63, 0, 1, AssociatedTypeWitness);
      uint64_t v64 = v103;
      v94(v61, v54);
      swift_storeEnumTagMultiPayload();

      uint64_t v43 = v96;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v22);
    }
    uint64_t v39 = v119;
    id v44 = v116;
    uint64_t v37 = v95;
    if (v116) {
      goto LABEL_5;
    }
  }
  uint64_t v102 = 0;
  id v116 = 0;
  uint64_t v42 = (void *)0xE000000000000000;
LABEL_11:
  uint64_t v66 = v121;
  uint64_t v65 = v122;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v37, v39, v122);
  uint64_t v103 = *(char **)(v43 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v103)(v37, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v65);
    uint64_t v67 = v43;
    if (AssociatedConformanceWitness)
    {
      swift_bridgeObjectRelease();
      uint64_t v68 = 0;
      uint64_t v69 = 0;
    }
    else
    {
      strcpy((char *)v123, "<actual:nil");
      HIDWORD(v123[1]) = -352321536;
      v133._uint64_t countAndFlagsBits = v102;
      v133._object = v42;
      sub_10096BDC0(v133);
      swift_bridgeObjectRelease();
      v134._uint64_t countAndFlagsBits = 62;
      v134._object = (void *)0xE100000000000000;
      sub_10096BDC0(v134);
      uint64_t v68 = v123[0];
      uint64_t v69 = v123[1];
    }
  }
  else
  {
    uint64_t v70 = v101;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v101, v37, v22);
    v123[0] = 0;
    v123[1] = 0xE000000000000000;
    sub_10096CBD0(27);
    v126._uint64_t countAndFlagsBits = 0x3A6C61757463613CLL;
    v126._object = (void *)0xE800000000000000;
    sub_10096BDC0(v126);
    sub_10096D270();
    v127._uint64_t countAndFlagsBits = 0x65506C6C69747320;
    v127._object = (void *)0xEE003A676E69646ELL;
    sub_10096BDC0(v127);
    v128._uint64_t countAndFlagsBits = sub_1006096B0(*(void *)&v70[*(int *)(v22 + 36)]);
    sub_10096BDC0(v128);
    swift_bridgeObjectRelease();
    v129._uint64_t countAndFlagsBits = 32;
    v129._object = (void *)0xE100000000000000;
    sub_10096BDC0(v129);
    uint64_t v72 = v123[0];
    uint64_t v71 = v123[1];
    v123[0] = 0;
    v123[1] = 0xE000000000000000;
    sub_10096CBD0(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v123, "shouldFetch:");
    BYTE5(v123[1]) = 0;
    HIWORD(v123[1]) = -5120;
    if (v70[*(int *)(v22 + 40)]) {
      v73._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v73._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v70[*(int *)(v22 + 40)]) {
      uint64_t v74 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v74 = (void *)0xE500000000000000;
    }
    v73._object = v74;
    sub_10096BDC0(v73);
    swift_bridgeObjectRelease();
    v130._uint64_t countAndFlagsBits = v102;
    v130._object = v42;
    sub_10096BDC0(v130);
    swift_bridgeObjectRelease();
    v131._uint64_t countAndFlagsBits = 62;
    v131._object = (void *)0xE100000000000000;
    sub_10096BDC0(v131);
    uint64_t v75 = v123[0];
    unint64_t v76 = (void *)v123[1];
    v123[0] = v72;
    v123[1] = v71;
    swift_bridgeObjectRetain();
    v132._uint64_t countAndFlagsBits = v75;
    v132._object = v76;
    sub_10096BDC0(v132);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = v123[0];
    uint64_t v69 = v123[1];
    uint64_t v67 = v43;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v70, v22);
  }
  uint64_t v77 = (uint64_t)v109;
  uint64_t v78 = v104;
  uint64_t v79 = *(void *)(v104 - 8);
  uint64_t v80 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v124, v105, v104);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
  uint64_t v81 = v119;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v103)(v119, 1, v22))
  {
    uint64_t v82 = v118;
    uint64_t v83 = *(void *)(v118 - 8);
    uint64_t v84 = 1;
    uint64_t v85 = (uint64_t)v108;
  }
  else
  {
    uint64_t v86 = v98;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v98, v81, v22);
    uint64_t v82 = v118;
    uint64_t v83 = *(void *)(v118 - 8);
    uint64_t v85 = (uint64_t)v108;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v108, v86, v118);
    uint64_t v84 = 0;
  }
  uint64_t v87 = v120;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v85, v84, 1, v82);
  sub_10060A8A0(v85, v82, v87, v77);
  uint64_t v88 = v124;
  uint64_t v89 = AssociatedConformanceWitness;
  uint64_t v90 = v114;
  sub_10083ED50(v124, v77, AssociatedConformanceWitness, v112, v113);
  uint64_t v91 = (uint64_t (**)(char *, uint64_t))(v121 + 8);
  if (v90)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v77, v111);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v88, v107);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v77, v111);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v88, v107);
    v100(0, v68, v69, v89);

    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  return (*v91)(v81, v122);
}

uint64_t sub_10083C24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_10096C890();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v6 = (void *)(a1 + TupleTypeMetadata[16]);
  uint64_t v7 = TupleTypeMetadata[20];
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v8, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = *v1;
  uint64_t v12 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 592));
  uint64_t v13 = v12[1];
  *uint64_t v6 = *v12;
  v6[1] = v13;
  *(void *)(a1 + v7) = *(uint64_t *)((char *)v1 + *(void *)(v11 + 584));
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10083C518()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 616);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v8 = sub_10096C890();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_10083C820()
{
  uint64_t v0 = sub_10061056C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 616);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v8 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t sub_10083CB34()
{
  sub_10083C820();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Bouncing.BounceItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10083CBA0@<X0>(uint64_t a1@<X8>)
{
  sub_100836D60(a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t type metadata accessor for Bouncing.BouncingContext()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10083CD28()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10083CDE0(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10083CDF8(char a1)
{
  return a1 & 1;
}

uint64_t sub_10083CE04(char a1)
{
  return a1 & 1;
}

uint64_t sub_10083CE0C()
{
  swift_getWitnessTable();

  return sub_10096D340();
}

uint64_t sub_10083CE80(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_10083CEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_10083CF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for Int);
}

uint64_t sub_10083CFCC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10083CDE0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10083D000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10083CE04(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_10083D034()
{
  return sub_10083CDF8(*v0);
}

uint64_t sub_10083D05C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10083CDE0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10083D08C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10083D0E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10083D134(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10083D184(a1);
  return v2;
}

void *sub_10083D184(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = v4[15];
  uint64_t v6 = v4[14];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v28 = (char *)&v25 - v9;
  uint64_t v36 = v6;
  uint64_t v37 = v5;
  type metadata accessor for BouncingHardlinkStagedContext.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = sub_10096D0B0();
  uint64_t v26 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void (**)(void))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v31 = (char *)v2 + v4[16];
  uint64_t v27 = AssociatedTypeWitness;
  v12();
  uint64_t v13 = (void *)((char *)v2 + *(void *)(*v2 + 136));
  *uint64_t v13 = 0;
  v13[1] = 0;
  unint64_t v34 = a1;
  uint64_t v35 = v13;
  sub_10002689C(a1, a1[3]);
  swift_retain();
  uint64_t v29 = v11;
  uint64_t v14 = v39;
  sub_10096D570();
  if (v14)
  {
    swift_release();
    uint64_t v18 = v32;
    uint64_t v17 = v33;
    uint64_t v19 = v31;
    sub_1000268E0((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BouncingHardlinkStagedContext();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v40[0]) = 0;
    uint64_t v15 = v27;
    swift_getAssociatedConformanceWitness();
    uint64_t v16 = v28;
    sub_10096D040();
    ((void (*)(char *, void, uint64_t, uint64_t))v12)(v16, 0, 1, v15);
    uint64_t v21 = v31;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v21, v16, v33);
    swift_endAccess();
    char v41 = 1;
    sub_100157D68();
    sub_10096D040();
    uint64_t v22 = v40[1];
    uint64_t v23 = v35;
    *uint64_t v35 = v40[0];
    v23[1] = v22;
    swift_release();
    swift_bridgeObjectRelease();
    sub_10096CF60();
    uint64_t v24 = (void (**)(char *, uint64_t))(v26 + 8);
    sub_1000268E0((uint64_t)v40);
    (*v24)(v29, v30);
    sub_1000268E0((uint64_t)v34);
  }
  return v2;
}

uint64_t sub_10083D660(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_10002B7CC(&qword_100ACDF88);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 + 120);
  uint64_t v8 = *(void *)(v4 + 112);
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_10096C890();
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v10 = (char *)&v23 - v9;
  type metadata accessor for BouncingHardlinkStagedContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v11 = sub_10096D200();
  uint64_t v30 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  sub_10002689C(a1, a1[3]);
  uint64_t v14 = v26;
  sub_10096D590();
  uint64_t v15 = (uint64_t)v2 + *(void *)(*v2 + 128);
  swift_beginAccess();
  uint64_t v16 = v15;
  uint64_t v17 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v16, v29);
  LOBYTE(v33) = 0;
  uint64_t v36 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  swift_getWitnessTable();
  uint64_t v18 = v32;
  sub_10096D1A0();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  }
  else
  {
    uint64_t v20 = v14;
    uint64_t v21 = v30;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v17);
    long long v33 = *(_OWORD *)((char *)v2 + *(void *)(*v2 + 136));
    char v35 = 1;
    sub_10002B7CC(&qword_100ADF5E0);
    sub_10083ECDC();
    sub_10096D1A0();
    sub_10096D0D0();
    sub_10002689C(&v33, v34);
    sub_10016D300();
    uint64_t v22 = v23;
    sub_10096D590();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v25);
    sub_1000268E0((uint64_t)&v33);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  }
}

uint64_t sub_10083DAEC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10083DBCC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10083DCA4()
{
  sub_10083DBCC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext()
{
  return sub_10014D080();
}

uint64_t type metadata accessor for Bouncing()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10083DD2C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10083DDDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v12(a1, a2, AssociatedTypeWitness);
    uint64_t v13 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    v13[1] = v14[1];
    uint64_t v15 = ((unint64_t)v13 + v7 + 16) & ~v7;
    uint64_t v16 = ((unint64_t)v14 + v7 + 16) & ~v7;
    swift_bridgeObjectRetain();
    v12((uint64_t *)v15, (uint64_t *)v16, v11);
  }
  return a1;
}

uint64_t sub_10083DF54(unint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v8 = v3 + 8;
  v7(a1, AssociatedTypeWitness);
  unint64_t v4 = (a1 + *(void *)(v8 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  unint64_t v5 = (v4 + *(unsigned __int8 *)(v8 + 72) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 72);

  return v7(v5, AssociatedTypeWitness);
}

uint64_t sub_10083E028(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  swift_bridgeObjectRetain();
  v6(v12, v13, AssociatedTypeWitness);
  return a1;
}

unint64_t sub_10083E114(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 56) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 56) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_10083E20C(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  uint64_t v9 = (_OWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v9 = *v10;
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_10083E2E4(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 40) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 40) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_10083E3CC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + v8;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((a2 - v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v6 < 0x7FFFFFFF)
      {
        unint64_t v16 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v16 >= 0xFFFFFFFF) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
      else
      {
        uint64_t v15 = *(uint64_t (**)(unsigned __int16 *))(v5 + 48);
        return v15(a1);
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10083E5D4(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + v8;
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10083E870);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v17 = (void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v17 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            v17[1] = (a2 - 1);
          }
        }
        else
        {
          unint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
          v16(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_10083E898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9 + *(void *)(*(void *)v9 + 616);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = v9 + *(void *)(*(void *)v9 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9 + *(void *)(*(void *)v9 + 576), a1, AssociatedTypeWitness);
  *(void *)(v9 + *(void *)(*(void *)v9 + 584)) = a2;
  int v15 = (void *)(v9 + *(void *)(*(void *)v9 + 592));
  *int v15 = a3;
  v15[1] = a4;
  uint64_t v16 = v9 + *(void *)(*(void *)v9 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v17 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a5, v17);
  *(void *)(v9 + *(void *)(*(void *)v9 + 608)) = a6;
  id v18 = a6;
  uint64_t v19 = sub_100610514(a7, a8, a9);
  swift_retain();
  sub_10058364C(0x2000);
  swift_release();
  return v19;
}

uint64_t sub_10083EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10083E898(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t type metadata accessor for Bouncing.BouncingContext.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext.CodingKeys()
{
  return sub_10014D080();
}

unint64_t sub_10083ECDC()
{
  unint64_t result = qword_100ADC908[0];
  if (!qword_100ADC908[0])
  {
    sub_100033BE8(&qword_100ADF5E0);
    sub_100157BC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100ADC908);
  }
  return result;
}

uint64_t sub_10083ED50(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), void *a4, uint64_t a5)
{
  uint64_t v336 = a5;
  int v308 = a4;
  v324 = a3;
  uint64_t v307 = a2;
  uint64_t v302 = a1;
  uint64_t v6 = v5;
  unsigned int v7 = (void *)*v5;
  uint64_t v8 = v7[70];
  uint64_t v9 = v7[68];
  uint64_t v10 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v341 = (ValueMetadata *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v343 = swift_getAssociatedConformanceWitness();
  uint64_t v266 = type metadata accessor for FileItemVersion();
  uint64_t v265 = sub_10096C890();
  uint64_t v264 = *(void *)(v265 - 8);
  __chkstk_darwin(v265);
  v263 = (char *)&v256 - v11;
  uint64_t v268 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v272 = *(void *)(v268 - 8);
  uint64_t v12 = __chkstk_darwin(v268);
  v262 = (char *)&v256 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  BOOL v267 = (char *)&v256 - v14;
  uint64_t v334 = (uint64_t)v7;
  v337 = v10;
  int v15 = (ValueMetadata *)v7[69];
  uint64_t v16 = v7[71];
  uint64_t v261 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v258 = *(void *)(v261 - 8);
  __chkstk_darwin(v261);
  uint64_t v260 = (char *)&v256 - v17;
  uint64_t AssociatedTypeWitness = v9;
  v341 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v343 = v16;
  uint64_t v273 = type metadata accessor for ItemReconciliation();
  uint64_t v270 = sub_10096C890();
  uint64_t v274 = *(void *)(v270 - 8);
  uint64_t v18 = __chkstk_darwin(v270);
  uint64_t v269 = (char *)&v256 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v257 = (char *)&v256 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v259 = (char *)&v256 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v271 = (char *)&v256 - v25;
  __chkstk_darwin(v24);
  uint64_t v275 = (uint64_t)&v256 - v26;
  uint64_t v27 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v27 - 8);
  uint64_t v280 = (uint64_t)&v256 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v325 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v29;
  uint64_t v339 = v29;
  uint64_t v31 = type metadata accessor for ItemState();
  uint64_t v309 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v279 = (uint64_t)&v256 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v283 = (char *)&v256 - v34;
  uint64_t v301 = v35;
  uint64_t v306 = sub_10096C890();
  uint64_t v299 = *(void *)(v306 - 8);
  uint64_t v36 = __chkstk_darwin(v306);
  uint64_t v282 = (char *)&v256 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v296 = (char *)&v256 - v38;
  uint64_t v39 = type metadata accessor for SnapshotItem();
  uint64_t v316 = sub_10096C890();
  uint64_t v315 = *(void *)(v316 - 8);
  uint64_t v40 = __chkstk_darwin(v316);
  uint64_t v303 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v256 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  v278 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v256 - v43);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v305 = (char *)&v256 - v45;
  uint64_t v311 = v39;
  uint64_t v310 = *(void *)(v39 - 8);
  uint64_t v46 = __chkstk_darwin(v44);
  v304 = (char *)&v256 - v47;
  uint64_t v335 = *(void *)(v30 - 8);
  uint64_t v48 = __chkstk_darwin(v46);
  v277 = (char *)&v256 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v281 = (char *)&v256 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v300 = (char *)&v256 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v276 = (char *)&v256 - v55;
  __chkstk_darwin(v54);
  uint64_t v298 = (uint64_t)&v256 - v56;
  uint64_t v313 = type metadata accessor for FileTreeError();
  uint64_t v294 = *(void *)(v313 - 8);
  __chkstk_darwin(v313);
  v314 = (char *)&v256 - v57;
  uint64_t AssociatedTypeWitness = v9;
  v341 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v343 = v16;
  uint64_t v58 = v16;
  uint64_t v322 = type metadata accessor for ReconciliationMutation();
  uint64_t v326 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  v320 = (char *)&v256 - v59;
  v329 = (ValueMetadata *)v9;
  uint64_t v330 = v8;
  uint64_t AssociatedTypeWitness = v9;
  v341 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v343 = v16;
  uint64_t v60 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v61 = sub_10096C890();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = __chkstk_darwin(v61);
  v292 = (char *)&v256 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  uint64_t v66 = (char *)&v256 - v65;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v312 = *(void *)(v67 - 8);
  uint64_t v68 = __chkstk_darwin(v67);
  uint64_t v285 = (char *)&v256 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v72 = (char *)&v256 - v71;
  __chkstk_darwin(v70);
  uint64_t v74 = (char *)&v256 - v73;
  uint64_t v75 = v58;
  uint64_t v76 = v62;
  v327 = v15;
  uint64_t v328 = v75;
  uint64_t v77 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v339;
  v341 = (ValueMetadata *)v67;
  uint64_t AssociatedConformanceWitness = v325;
  uint64_t v343 = v77;
  uint64_t v78 = type metadata accessor for ReconciliationID();
  uint64_t v332 = *(void *)(v78 - 8);
  uint64_t v333 = v78;
  __chkstk_darwin(v78);
  uint64_t v80 = (char *)&v256 - v79;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v289 = (char *)v337 + *(void *)(v334 + 600);
  uint64_t v290 = v62 + 16;
  v288 = v81;
  ((void (*)(char *))v81)(v66);
  uint64_t v82 = *(void *)(v60 - 8);
  uint64_t v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  uint64_t v287 = v82 + 48;
  uint64_t v286 = v83;
  int v84 = v83(v66, 1, v60);
  uint64_t v293 = v60;
  uint64_t v297 = v67;
  uint64_t v291 = v61;
  uint64_t v284 = v82;
  if (v84 == 1)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v66, v61);
    uint64_t v85 = v337;
    uint64_t v86 = v335;
    (*(void (**)(char *, char *, uint64_t))(v335 + 16))(v80, (char *)v85 + *(void *)(*v85 + 576), v339);
  }
  else
  {
    uint64_t v87 = v312;
    (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v72, v66, v67);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v60);
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    v88(v74, v72, v67);
    v88(v80, v74, v67);
    uint64_t v85 = v337;
    uint64_t v86 = v335;
  }
  v338 = v80;
  uint64_t v89 = v333;
  swift_storeEnumTagMultiPayload();
  uint64_t AssociatedTypeWitness = (uint64_t)v329;
  v341 = v327;
  uint64_t AssociatedConformanceWitness = v330;
  uint64_t v343 = v328;
  uint64_t v334 = type metadata accessor for JobResult();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v90 = (uint64_t)v320;
  uint64_t v91 = &v320[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v92 = *(unsigned int (**)(uint64_t, char *, uint64_t))(v332 + 16);
  v318 = (void (*)(char *, uint64_t))(v332 + 16);
  v319 = v92;
  v92((uint64_t)v320, v338, v89);
  uint64_t v331 = (uint64_t)v85 + *(void *)(*v85 + 576);
  uint64_t v93 = *(void (**)(char *))(v86 + 16);
  uint64_t v94 = v339;
  v93(v91);
  swift_storeEnumTagMultiPayload();
  uint64_t v95 = v322;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v336, v90);
  uint64_t v96 = v326 + 8;
  v321 = *(void (**)(uint64_t, uint64_t))(v326 + 8);
  v321(v90, v95);
  id v97 = v338;
  uint64_t v98 = v90 + *(int *)(TupleTypeMetadata2 + 48);
  TupleTypeMetadata2 = v86 + 16;
  v295 = v93;
  ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v90, v331, v94);
  swift_storeEnumTagMultiPayload();
  uint64_t v99 = v97;
  v319(v98, v97, v89);
  uint64_t v100 = v336;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v100, v90);
  v321(v90, v95);
  uint64_t v101 = v335;
  if (!v324)
  {
    uint64_t v126 = v315;
    Swift::String v127 = v305;
    uint64_t v128 = v316;
    (*(void (**)(char *, uint64_t, uint64_t))(v315 + 16))(v305, v307, v316);
    uint64_t v129 = v310;
    uint64_t v130 = v311;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v310 + 48))(v127, 1, v311) == 1)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
LABEL_28:
      uint64_t v152 = v323;
      uint64_t v153 = v303;
      uint64_t v154 = (*(uint64_t (**)(void))(v129 + 56))();
      uint64_t v155 = v337[15];
      uint64_t v156 = v337[16];
      uint64_t v157 = (*(uint64_t (**)(uint64_t))(*(void *)v100 + 192))(v154);
      sub_10086C908(v153, v331, 0, 0, 0, v308, v155, v156, 4096, v157);
      if (!v152)
      {
        swift_release();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v315 + 8))(v153, v316);
        uint64_t v159 = *(uint64_t (**)(char *, uint64_t))(v332 + 8);
        uint64_t v160 = v338;
        return v159(v160, v333);
      }
      swift_release();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v315 + 8))(v153, v316);
      goto LABEL_30;
    }
    uint64_t v326 = v96;
    Swift::String v131 = v304;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v304, v127, v130);
    uint64_t v132 = v299;
    Swift::String v133 = v296;
    v324 = *(void (**)(char *, uint64_t, uint64_t))(v299 + 16);
    v324(v296, v302, v306);
    uint64_t v134 = v309;
    uint64_t v135 = v301;
    v319 = *(unsigned int (**)(uint64_t, char *, uint64_t))(v309 + 48);
    if (v319((uint64_t)v133, (char *)1, v301) == 1)
    {
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v306);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v130);
LABEL_27:
      uint64_t v100 = v336;
      goto LABEL_28;
    }
    uint64_t v145 = v281;
    uint64_t v146 = v339;
    v147 = (void (*)(char *, char *, uint64_t))v295;
    ((void (*)(char *, char *, uint64_t))v295)(v281, v133, v339);
    uint64_t v148 = *(void (**)(char *, uint64_t))(v134 + 8);
    uint64_t v309 = v134 + 8;
    v318 = v148;
    v148(v133, v135);
    uint64_t v149 = v335;
    (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v300, v145, v146);
    uint64_t v150 = v282;
    uint64_t v151 = v306;
    v324(v282, v302, v306);
    if (v319((uint64_t)v150, (char *)1, v135) == 1)
    {
      (*(void (**)(char *, uint64_t))(v299 + 8))(v150, v151);
      (*(void (**)(char *, uint64_t))(v149 + 8))(v300, v146);
      uint64_t v129 = v310;
      (*(void (**)(char *, uint64_t))(v310 + 8))(v304, v311);
      goto LABEL_27;
    }
    uint64_t v164 = v135;
    uint64_t v165 = (uint64_t *)&v150[*(int *)(v135 + 36)];
    uint64_t v166 = v150;
    uint64_t v167 = *v165;
    uint64_t v168 = v165[1];
    swift_bridgeObjectRetain();
    v318(v166, v135);
    uint64_t v169 = (uint64_t)v277;
    v147(v277, v300, v146);
    uint64_t v170 = v311;
    uint64_t v171 = v304;
    uint64_t v172 = v280;
    sub_10010DA98((uint64_t)&v304[*(int *)(v311 + 48)], v280);
    sub_1005E4708(v169, v167, v168, v172, v146, (uint64_t)v283);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v174 = v279;
    sub_100619010(v170, WitnessTable, v279);
    uint64_t v325 = sub_1005E4860(v174, 0, 1, v164);
    v318((char *)v174, v164);
    uint64_t v175 = v310;
    uint64_t v176 = v278;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v310 + 16))(v278, v171, v170);
    uint64_t v177 = (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v175 + 56))(v176, 0, 1, v170);
    uint64_t v178 = v337[15];
    uint64_t v179 = v337[16];
    uint64_t v180 = (*(uint64_t (**)(uint64_t))(*(void *)v336 + 192))(v177);
    uint64_t v181 = v331;
    uint64_t v182 = v323;
    sub_10086C908(v176, v331, 0, 0, 0, v308, v178, v179, 4096, v180);
    if (v182)
    {
      swift_release();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v315 + 8))(v176, v316);
      v318(v283, v301);
      (*(void (**)(char *, uint64_t))(v335 + 8))(v300, v339);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v304, v170);
LABEL_30:
      uint64_t v158 = v338;
LABEL_31:
      uint64_t v159 = *(uint64_t (**)(char *, uint64_t))(v332 + 8);
      uint64_t v160 = v158;
      return v159(v160, v333);
    }
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v315 + 8))(v176, v316);
    swift_release();
    uint64_t v183 = v275;
    sub_1000DEDD8(v181, v275);
    BOOL v184 = sub_1005152D8();
    uint64_t v185 = v274;
    uint64_t v187 = v274 + 16;
    uint64_t v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v274 + 16);
    v188 = v271;
    uint64_t v189 = v270;
    v186(v271, v183, v270);
    uint64_t v323 = 0;
    v319 = (unsigned int (*)(uint64_t, char *, uint64_t))v186;
    if (v184)
    {
      v190 = *(void (**)(char *, uint64_t))(v185 + 8);
      v190(v188, v189);
      uint64_t v191 = 0;
      uint64_t v328 = 1;
      uint64_t v192 = v269;
      v193 = v321;
      uint64_t v194 = v325;
      goto LABEL_51;
    }
    v195 = v259;
    uint64_t v316 = v187;
    v186(v259, (uint64_t)v188, v189);
    uint64_t v196 = v273;
    uint64_t v197 = *(void *)(v273 - 8);
    uint64_t v315 = *(void *)(v197 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v315)(v195, 1, v273) == 1)
    {
      uint64_t v198 = *(void (**)(char *, uint64_t))(v185 + 8);
      v198(v188, v189);
      v324 = (void (*)(char *, uint64_t, uint64_t))v198;
      v198(v195, v189);
      uint64_t v199 = v261;
      v200 = v260;
    }
    else
    {
      uint64_t v201 = v258;
      v200 = v260;
      uint64_t v199 = v261;
      (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v260, &v195[*(int *)(v196 + 52)], v261);
      (*(void (**)(char *, uint64_t))(v197 + 8))(v195, v196);
      uint64_t v202 = *(void *)&v200[*(int *)(v199 + 36)];
      (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v199);
      v324 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 8);
      ((void (*)(char *, uint64_t))v324)(v271, v189);
      if (v202)
      {
        uint64_t v191 = 0;
        uint64_t v328 = 1;
        uint64_t v192 = v269;
        v193 = v321;
        goto LABEL_50;
      }
    }
    v203 = v257;
    v319((uint64_t)v257, (char *)v183, v189);
    uint64_t v204 = v273;
    int v205 = ((uint64_t (*)(char *, uint64_t, uint64_t))v315)(v203, 1, v273);
    uint64_t v192 = v269;
    if (v205 == 1)
    {
      v190 = (void (*)(char *, uint64_t))v324;
      ((void (*)(char *, uint64_t))v324)(v203, v189);
      uint64_t v328 = 0;
      uint64_t v191 = 1;
      v193 = v321;
      uint64_t v194 = v325;
      goto LABEL_51;
    }
    uint64_t v206 = v258;
    (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v200, &v203[*(int *)(v204 + 52)], v199);
    (*(void (**)(char *, uint64_t))(v197 + 8))(v203, v204);
    uint64_t v207 = *(void *)&v200[*(int *)(v199 + 40)];
    (*(void (**)(char *, uint64_t))(v206 + 8))(v200, v199);
    if ((v207 & 3) != 0)
    {
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v208 = swift_getTupleTypeMetadata2();
      uint64_t v209 = (uint64_t)v320;
      v210 = &v320[*(int *)(v208 + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v295)(v320, v331, v339);
      swift_storeEnumTagMultiPayload();
      uint64_t v328 = 1;
      *(void *)v210 = 1;
      *(_OWORD *)(v210 + 8) = *(_OWORD *)(v337 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v211 = v322;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v336, v209);
      v193 = v321;
      v321(v209, v211);
      uint64_t v191 = 0;
    }
    else
    {
      uint64_t v328 = 0;
      uint64_t v191 = 1;
      v193 = v321;
    }
LABEL_50:
    v190 = (void (*)(char *, uint64_t))v324;
    uint64_t v194 = v325;
LABEL_51:
    unint64_t v212 = v191 | v194 & 0xFFFFFFFFFF7FFFEFLL;
    uint64_t v213 = v272;
    if (qword_100ACC0F0 != -1) {
      swift_once();
    }
    uint64_t v214 = (static Fields.all | 0x409000000C000) & v212;
    uint64_t v215 = v275;
    v324 = (void (*)(char *, uint64_t, uint64_t))v190;
    if (v214)
    {
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v216 = swift_getTupleTypeMetadata2();
      v217 = v192;
      v218 = v193;
      uint64_t v219 = v189;
      uint64_t v220 = (uint64_t)v320;
      v221 = &v320[*(int *)(v216 + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v295)(v320, v331, v339);
      uint64_t v215 = v275;
      swift_storeEnumTagMultiPayload();
      *(void *)v221 = v214;
      *(_OWORD *)(v221 + 8) = *(_OWORD *)(v337 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v222 = v322;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v336, v220);
      uint64_t v213 = v272;
      uint64_t v223 = v220;
      uint64_t v189 = v219;
      v218(v223, v222);
      uint64_t v192 = v217;
      v190 = (void (*)(char *, uint64_t))v324;
    }
    v319((uint64_t)v192, (char *)v215, v189);
    uint64_t v224 = v273;
    uint64_t v225 = *(void *)(v273 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v225 + 48))(v192, 1, v273) == 1)
    {
      v190(v192, v189);
      uint64_t v226 = v323;
      uint64_t v158 = v338;
      uint64_t v227 = v322;
    }
    else
    {
      v228 = v262;
      uint64_t v229 = v268;
      (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v262, v192, v268);
      (*(void (**)(char *, uint64_t))(v225 + 8))(v192, v224);
      uint64_t v230 = v267;
      (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v267, v228, v229);
      uint64_t v231 = v264;
      uint64_t v232 = v263;
      uint64_t v233 = v265;
      (*(void (**)(char *, char *, uint64_t))(v264 + 16))(v263, &v230[*(int *)(v229 + 48)], v265);
      uint64_t v234 = *(void *)(v266 - 8);
      int v235 = (*(uint64_t (**)(char *, uint64_t))(v234 + 48))(v232, 1);
      (*(void (**)(char *, uint64_t))(v231 + 8))(v232, v233);
      uint64_t v226 = v323;
      uint64_t v158 = v338;
      if (v235 == 1)
      {
        (*(void (**)(char *, uint64_t))(v213 + 8))(v230, v229);
        uint64_t v227 = v322;
      }
      else
      {
        uint64_t v227 = v322;
        v236 = v320;
        if (v328)
        {
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v237 = v213;
          uint64_t v238 = &v236[*(int *)(swift_getTupleTypeMetadata2() + 48)];
          ((void (*)(char *, uint64_t, uint64_t))v295)(v236, v331, v339);
          swift_storeEnumTagMultiPayload();
          uint64_t v239 = v266;
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v241 = *(int *)(TupleTypeMetadata3 + 48);
          uint64_t v242 = *(int *)(TupleTypeMetadata3 + 64);
          uint64_t v243 = v239;
          uint64_t v244 = (uint64_t)v320;
          (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v238, &v304[*(int *)(v311 + 40)], v243);
          v238[v241] = 0;
          uint64_t v158 = v338;
          v238[v242] = 1;
          uint64_t v226 = v323;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_100591758(v336, v244);
          v321(v244, v227);
          (*(void (**)(char *, uint64_t))(v237 + 8))(v267, v268);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v213 + 8))(v267, v268);
        }
      }
      uint64_t v215 = v275;
    }
    uint64_t v245 = (uint64_t)v283;
    uint64_t v246 = (void (*)(uint64_t, uint64_t))v318;
    if ((v325 & 3) != 0)
    {
      ((void (*)(uint64_t, uint64_t))v324)(v215, v189);
      v246(v245, v301);
      (*(void (**)(char *, uint64_t))(v335 + 8))(v300, v339);
      (*(void (**)(char *, uint64_t))(v310 + 8))(v304, v311);
    }
    else
    {
      char v247 = (*(uint64_t (**)(uint64_t))(*(void *)v308[3] + 216))(v331);
      uint64_t v248 = v339;
      v249 = v304;
      if (!v226 && (v247 & 1) != 0)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v250 = v333;
        uint64_t v251 = swift_getTupleTypeMetadata2();
        uint64_t v252 = v189;
        uint64_t v253 = (uint64_t)v320;
        v254 = &v320[*(int *)(v251 + 48)];
        ((void (*)(char *, uint64_t, uint64_t))v295)(v320, v331, v248);
        swift_storeEnumTagMultiPayload();
        *(void *)v254 = 1;
        *(_OWORD *)(v254 + 8) = *(_OWORD *)(v337 + 15);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v336, v253);
        v321(v253, v227);
        ((void (*)(uint64_t, uint64_t))v324)(v275, v252);
        v318((char *)v245, v301);
        (*(void (**)(char *, uint64_t))(v335 + 8))(v300, v248);
        (*(void (**)(char *, uint64_t))(v310 + 8))(v304, v311);
        return (*(uint64_t (**)(char *, uint64_t))(v332 + 8))(v338, v250);
      }
      ((void (*)(uint64_t, uint64_t))v324)(v215, v189);
      v318((char *)v245, v301);
      (*(void (**)(char *, uint64_t))(v335 + 8))(v300, v248);
      (*(void (**)(char *, uint64_t))(v310 + 8))(v249, v311);
    }
    goto LABEL_31;
  }
  v345 = v324;
  swift_errorRetain();
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  uint64_t v102 = v314;
  uint64_t v103 = v313;
  if (!swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v332 + 8))(v99, v333);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 10)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __chkstk_darwin(EnumCaseMultiPayload);
      qmemcpy(&v256 - 6, " filename below syncability original", 36);
      strcpy(&v255[2], "alError ");
      uint64_t v105 = v339;
      uint64_t AssociatedTypeWitness = v339;
      v341 = &type metadata for Filename;
      uint64_t AssociatedConformanceWitness = v339;
      uint64_t v343 = sub_100033BE8(qword_100ACD7A0);
      uint64_t v344 = sub_100033BE8(&qword_100AD7360);
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      uint64_t v107 = (unint64_t *)&v102[*(int *)(TupleTypeMetadata + 80)];
      unint64_t v109 = *v107;
      unint64_t v108 = v107[1];
      swift_errorRelease();
      uint64_t v110 = v298;
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v298, v102, v105);
      if (v109 < 0xFFFFFFFF00000000 || (v108 & 0xF000000000000007) != 0)
      {
        uint64_t v111 = v108;
        uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))v295;
        if (!(v108 >> 62))
        {
LABEL_13:
          uint64_t v331 = v111;
          uint64_t v113 = v109;
          uint64_t v114 = v276;
          v112(v276, v110, v105);
          uint64_t v115 = v337[15];
          uint64_t v116 = v337[16];
          uint64_t v117 = v105;
          uint64_t v118 = v337[17] | 0x800000000;
          uint64_t AssociatedTypeWitness = (uint64_t)v329;
          v341 = v327;
          uint64_t AssociatedConformanceWitness = v330;
          uint64_t v343 = v328;
          type metadata accessor for Ingestion.TrackTemporaryItem();
          sub_10018B584(v113, v108);
          uint64_t v119 = sub_1003A9380(v114, v115, v116, v118);
          uint64_t v120 = *(void (**)(char *, uint64_t))(v335 + 8);
          uint64_t v121 = v117;
          uint64_t v122 = v298;
          v120(v114, v121);
          uint64_t v123 = *(void *)(v119 + 96);
          uint64_t v124 = *(void *)(v119 + 104);
          *(void *)(v119 + 96) = 256;
          *(void *)(v119 + 104) = v331;
          char v125 = *(unsigned char *)(v119 + 112);
          *(unsigned char *)(v119 + 112) = 0;
          sub_1000D31F8(v123, v124, v125);
          sub_1004D4360(v336, v119);
          swift_release();
          sub_10010DC6C(v113, v108);
          swift_errorRelease();
LABEL_35:
          uint64_t v162 = &v314[*(int *)(TupleTypeMetadata + 64)];
          uint64_t v163 = v339;
          v120((char *)v122, v339);
          (*(void (**)(char *, uint64_t))(v332 + 8))(v338, v333);
          v120(v162, v163);
          return swift_errorRelease();
        }
        uint64_t v100 = v336;
        if (v108 >> 62 == 1)
        {
          uint64_t v111 = v108 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))v295;
          goto LABEL_13;
        }
      }
      uint64_t AssociatedTypeWitness = (uint64_t)v329;
      v341 = v327;
      uint64_t AssociatedConformanceWitness = v330;
      uint64_t v343 = v328;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v122 = v298;
      uint64_t v161 = sub_1008AA66C(v298, v337[15], v337[16], v337[17]);
      sub_1004D4360(v100, v161);
      swift_release();
      sub_10010DC6C(v109, v108);
      swift_errorRelease();
      uint64_t v120 = *(void (**)(char *, uint64_t))(v335 + 8);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v332 + 8))(v99, v333);
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v294 + 8))(v102, v103);
    return swift_errorRelease();
  }
  uint64_t v136 = v292;
  v288(v292, v289, v291);
  uint64_t v137 = v293;
  uint64_t result = v286(v136, 1, v293);
  if (result != 1)
  {
    uint64_t v139 = v312;
    uint64_t v140 = (uint64_t)v285;
    (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v285, v136, v297);
    (*(void (**)(char *, uint64_t))(v284 + 8))(v136, v137);
    uint64_t v141 = v337[15];
    uint64_t v142 = v337[16];
    if ((~*((_DWORD *)v337 + 34) & 0x2140) != 0) {
      uint64_t v143 = v337[17] | 0x2140;
    }
    else {
      uint64_t v143 = v337[17];
    }
    uint64_t AssociatedTypeWitness = (uint64_t)v327;
    v341 = v329;
    uint64_t AssociatedConformanceWitness = v328;
    uint64_t v343 = v330;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v144 = sub_1008AA66C(v140, v141, v142, v143);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v140, v297);
    sub_1004D7588(v100, v144);
    swift_release();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v332 + 8))(v338, v333);
    return swift_errorRelease();
  }
  __break(1u);
  return result;
}

uint64_t *sub_100841680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v18 = a1;
  uint64_t v5 = *a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = (uint64_t)a4 + *(void *)(v5 + 128);
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v14 = (uint64_t *)((char *)a4 + *(void *)(*a4 + 136));
  *uint64_t v14 = 0;
  v14[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v10, v18, AssociatedTypeWitness);
  v13((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  swift_beginAccess();
  int v15 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 40);
  swift_retain();
  v15(v11, v10, v7);
  swift_endAccess();
  uint64_t v16 = v20;
  *uint64_t v14 = v19;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1008418A4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008418FC(char *a1)
{
  return sub_100839F50(a1, *(uint64_t **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(char **)(v1 + 56));
}

uint64_t sub_10084190C()
{
  uint64_t v1 = (int *)(type metadata accessor for Bouncing.BouncingContext() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v2 = v20 + *(void *)(*(void *)v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v24 = (v2 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v21 = *(void *)(*(void *)v4 + 64);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  swift_release();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v0 + v20, v7);
  swift_bridgeObjectRelease();
  v8(v0 + v20 + v1[16], v7);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v24, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v24 + v4[12];
  uint64_t v10 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v11 = v9 + v10[7];
  uint64_t v12 = sub_10096B0E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(v9 + v10[8], v12);
  swift_bridgeObjectRelease();
  unint64_t v15 = v9 + v10[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12)) {
    v14(v15, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v9 + v10[33]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15) {
    sub_10001E9C0(*v16, v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + ((v24 + v21 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v23 - 8) + 8))(v18 + *(int *)(v5 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_100841E14(char *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(type metadata accessor for Bouncing.BouncingContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  return sub_1008392D4(a1, *(void (**)(uint64_t *))(v1 + 48), *(void *)(v1 + 56), v1 + v5, v1 + v8, v1 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v2, v14, v3, v12);
}

uint64_t sub_100842054()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = (int *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)v1 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v5 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v2, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v0 + v2 + v1[16], v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v6, v4);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v6 + v5[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_10096B0E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001E9C0(*v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100842474(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (void *)v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10083AE2C(a1, v8, v9, v10, v11, (uint64_t)v1 + v4, (uint64_t)v1 + v7, v12);
}

uint64_t sub_100842670()
{
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008426C8()
{
  return sub_10083AACC(*(void *)(v0 + 16), *(void (**)(char *, uint64_t, uint64_t))(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(uint64_t (**)(void, void, void, void (*)(char *, uint64_t, uint64_t)))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1008426EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100842724()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v25 = type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v24 = TupleTypeMetadata2;
  uint64_t v3 = sub_10096D510();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v26 = (v29 + 48) & ~v29;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64) + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v4 + v28 + 8) & ~v28;
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for ItemState();
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v27) & ~v27;
  uint64_t v13 = v0 + v26;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v13, 1)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v13, v1);
    }
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v8, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v8 + *(int *)(v7 + 56), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v12, v10);
  swift_bridgeObjectRelease();
  uint64_t v14 = v0 + v12 + *(int *)(v11 + 40);
  unint64_t v15 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v16 = v14 + v15[7];
  uint64_t v17 = sub_10096B0E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v16, v17);
  v19(v14 + v15[8], v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = v14 + v15[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17)) {
    v19(v20, v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(v14 + v15[33]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_10001E9C0(*v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100842CEC()
{
  type metadata accessor for ItemPropagationResult();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10083B420((char *)(v0 + v2), *(uint64_t **)(v0 + v3), v0 + v5, v0 + v8, *(void **)(v0 + v9), *(void *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t)))(v0 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unsigned char *sub_100842FC0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10084308CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1008430B4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100843180);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1008431A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1008431C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1008431E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1008431FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100843218()
{
  return swift_getWitnessTable();
}

uint64_t sub_100843234()
{
  return swift_getWitnessTable();
}

uint64_t sub_100843254(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  unint64_t v8 = _swiftEmptyArrayStorage;
  while (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    sub_100347A00(*(void *)(a1 + 56) + 16 * v10, (uint64_t)v21);
    sub_10009CB44((uint64_t)v21, (uint64_t)v19);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v15 = v20;
    uint64_t result = sub_10000A63C((uint64_t)v19);
    if (Strong)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1006A3F08(0, v8[2] + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_1006A3F08((void *)(v16 > 1), v17 + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      v8[2] = v17 + 1;
      uint64_t v18 = &v8[2 * v17];
      v18[4] = Strong;
      v18[5] = v15;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v4 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_28:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v22 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id Error.prettyDescription.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (sub_10096D240())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  int64_t v7 = (void *)sub_10096ABE0();
  swift_errorRelease();
  id v8 = objc_msgSend(v7, "fp_prettyDescription");

  return v8;
}

uint64_t sub_1008435DC(void *a1, unsigned __int8 *a2)
{
  char v3 = sub_1008530F8(a1, a2);

  return v3 & 1;
}

uint64_t sub_10084361C(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)a3;
    *(void *)a3 = a2;
    unsigned __int8 v7 = *(unsigned char *)(a3 + 8);
    *(unsigned char *)(a3 + 8) = 1;
    swift_errorRetain();
    sub_1000CF0EC(v6, v7);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_errorRelease();
}

uint64_t sub_100843728(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8 = a4 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_1000D5B18(a3, v8);
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)a2;
  int v10 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v15 = a3;
  if (v10 == 255)
  {
    sub_1000D5B30(a3, a4 & 1);
    uint64_t v11 = a3;
  }
  else
  {
    char v8 = v10 & 1;
    uint64_t v11 = *(void *)a2;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)a2;
  *(void *)a2 = v11;
  unsigned __int8 v13 = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a2 + 8) = v8;
  sub_1000CF118(v9, v10);
  sub_1000CF0EC(v12, v13);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_1000D5B18(v15, a4 & 1);
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return sub_1000D5B18(v15, a4 & 1);
}

void sub_100843890(void *a1, void *a2, void *a3, void *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10015B968((uint64_t)a2, (uint64_t)a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

void sub_10084397C(void *a1, void *a2, char a3, uint64_t *a4, void *a5, uint64_t *a6)
{
  char v11 = a3 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_1000D5B24(a2, v11);

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10021A01C(a2, v11, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_1000D5B24(a2, v11);

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  sub_1000D5B24(a2, v11);
}

uint64_t sub_100843A8C(void *a1, uint64_t a2)
{
  return sub_100843B1C(a1, a2, (void (*)(uint64_t, uint64_t))sub_10084FD44, (uint64_t)&unk_100AA0A38, (uint64_t)sub_100852FFC);
}

uint64_t sub_100843AD4(void *a1, uint64_t a2)
{
  return sub_100843B1C(a1, a2, (void (*)(uint64_t, uint64_t))sub_10084FEB4, (uint64_t)&unk_100AA0C90, (uint64_t)sub_100852FFC);
}

uint64_t sub_100843B1C(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1008502CC(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_100843C0C(void *a1, uint64_t a2)
{
  return sub_100843C38(a1, a2, (void (*)(uint64_t))sub_100249120);
}

uint64_t sub_100843C38(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  a3(a2);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_100843D10(void *a1, void *a2, unint64_t *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_100278FCC((uint64_t)a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_100843DDC(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  *(unsigned char *)(a2 + 152) = 3;
  *(void *)(a2 + 160) = a3;
  swift_retain();
  swift_release();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  return swift_release();
}

void sub_100843EC8(void *a1, void *a2, char *a3)
{
}

void sub_100843EE0(void *a1, void *a2, uint64_t a3)
{
}

void sub_100843F20(void *a1, void *a2, char *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v6 = (unint64_t *)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  char v8 = sub_10057B300(v7);
  swift_bridgeObjectRelease();
  *a2 = v8;
  swift_bridgeObjectRelease();
  *uint64_t v6 = sub_100099734((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_100844044(void *a1, void *a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    swift_errorRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1002C3ED4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    swift_errorRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }

  return swift_errorRelease();
}

void sub_100844128(void *a1, void *a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  long long v6 = xmmword_100974EA0;
  swift_beginAccess();
  sub_100360DF4(&v6, a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

void sub_100844224(void *a1, void *a2, void *a3)
{
}

void sub_100844244(void *a1, void *a2, void *a3)
{
}

void sub_100844264(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  v8[1] = a4;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_100360DF4(v8, (uint64_t)a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_100844370(void *a1, void *a2, uint64_t a3)
{
  return sub_1008456A4(a1, a2, a3);
}

void sub_100844388(void *a1, void *a2, void *a3)
{
}

void sub_1008443A0(void *a1, uint64_t a2, void *a3)
{
}

void sub_1008443CC(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, void *))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

void sub_1008444A0(void *a1, void *a2, uint64_t a3)
{
}

void sub_1008444E0(void *a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), void (*a5)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  a5(a3);
}

void sub_1008445E4(void *a1, uint64_t a2, void *a3, unint64_t a4, void *a5, uint64_t *a6, uint64_t *a7, void *a8)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();

    sub_10021E0B4(a4);
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1002F29A4(a2, a3, a4, a5, a6, a7, a8);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();

    sub_10021E0B4(a4);
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_errorRelease();

  sub_10021E0B4(a4);
}

void sub_100844744(void *a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t *a5, void *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1002F390C(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_errorRelease();
}

void sub_100844854(void *a1, void *a2, void *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  id v6 = a3;
  sub_10096C070();
  if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_10096C0F0();
  }
  sub_10096C150();
  sub_10096C0C0();
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_100844970(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  id v6 = (uint64_t *)(a3 + qword_100ADA000);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1008528E4(v7, a3);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_1003FCF10(v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100514C2C();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1008524C4(v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = swift_bridgeObjectRelease_n();
    __chkstk_darwin(v13);
    type metadata accessor for VFSItem(0);
    sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
    sub_10002DC44((unint64_t *)&unk_100AD6EA0, (void (*)(uint64_t))type metadata accessor for VFSItem);
    sub_10058B65C();
    swift_getKeyPath();
    swift_retain();
    uint64_t v14 = sub_1008522E8(v12);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_1003FCF10((uint64_t)v14);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_100844CDC(void *a1, uint64_t a2)
{
  return sub_100844D5C(a1, a2, (uint64_t (*)(void *))sub_10009A0C0, (uint64_t (*)(void *))sub_100094E24);
}

uint64_t sub_100844D1C(void *a1, uint64_t a2)
{
  return sub_100844D5C(a1, a2, (uint64_t (*)(void *))sub_100094CB8, (uint64_t (*)(void *))sub_100094E18);
}

uint64_t sub_100844D5C(void *a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t (*a4)(void *))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v8 = a3(_swiftEmptyArrayStorage);
  swift_beginAccess();
  *(void *)(a2 + 16) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a4(_swiftEmptyArrayStorage);
  swift_beginAccess();
  *(void *)(a2 + 32) = v9;
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_100844E8C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1005EF8F0(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100844F94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100844FFC(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_100ADA000, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10084DF7C);
}

uint64_t sub_100844FC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100844FFC(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_100ADA008, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10084D5DC);
}

uint64_t sub_100844FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000705CC(a5);
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  a8(a3, a4, a5, a6);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000705CC(a5);
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1000705CC(a5);
}

uint64_t sub_100845174(void *a1, uint64_t a2, char a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  *(unsigned char *)(a2 + 122) = a3 & 1;
  id v6 = *(void (**)(void))(a2 + 128);
  if (v6)
  {
    swift_retain();
    v6(a3 & 1);
    sub_1000705CC((uint64_t)v6);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_100845264(void *a1, uint64_t a2)
{
  return sub_100843C38(a1, a2, (void (*)(uint64_t))sub_10084F6A0);
}

uint64_t sub_100845290(void *a1, uint64_t a2)
{
  return sub_100843C38(a1, a2, (void (*)(uint64_t))sub_10084F928);
}

uint64_t sub_1008452BC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1008453B0(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10084FD44);
}

uint64_t sub_1008452E8(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10084FBA0(a2);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_1008453B0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_100845490(void *a1, uint64_t a2)
{
  return sub_100843C38(a1, a2, (void (*)(uint64_t))sub_1007C0694);
}

uint64_t sub_1008454BC(void *a1, uint64_t *a2, unint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1007E82EC(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_errorRelease();
}

uint64_t sub_10084559C(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  *a2 = a3;
  swift_errorRelease();
  swift_beginAccess();
  *a4 = 0;
  swift_errorRetain();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_errorRelease();
}

uint64_t sub_1008456A4(void *a1, void *a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  *a2 = a3;
  swift_errorRelease();
  swift_errorRetain();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_errorRelease();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_errorRelease();
}

void sub_100845788(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4, void *a5, NSObject *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_errorRelease();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1008CF5C4(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_errorRelease();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
  swift_errorRelease();
}

uint64_t sub_1008458A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008458FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_10090DA90);
}

uint64_t sub_1008458D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008458FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_10090DF38);
}

uint64_t sub_1008458FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  a5(a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_1008459EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v5 = (unint64_t *)(a2 + qword_100ADA000);
  swift_beginAccess();
  unint64_t v20 = *v5;
  unint64_t v34 = v5[1];
  unint64_t v31 = v5[3];
  unint64_t v32 = v5[2];
  char v29 = *((unsigned char *)v5 + 48);
  char v30 = *((unsigned char *)v5 + 32);
  char v27 = *((unsigned char *)v5 + 50);
  char v28 = *((unsigned char *)v5 + 49);
  unint64_t v18 = v5[7];
  unint64_t v19 = v5[5];
  id v6 = (unint64_t *)(a2 + qword_100ADA008);
  swift_beginAccess();
  unint64_t v16 = v6[1];
  unint64_t v17 = *v6;
  unint64_t v25 = v6[3];
  unint64_t v26 = v6[2];
  unint64_t v13 = v6[5];
  char v23 = *((unsigned char *)v6 + 48);
  char v24 = *((unsigned char *)v6 + 32);
  char v21 = *((unsigned char *)v6 + 50);
  char v22 = *((unsigned char *)v6 + 49);
  unint64_t v15 = v6[7];
  unint64_t v14 = sub_100099A38((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v8 = sub_100099A54((uint64_t)_swiftEmptyArrayStorage);
  *uint64_t v5 = v14;
  v5[1] = v7;
  *((_OWORD *)v5 + 1) = xmmword_100984A70;
  *((unsigned char *)v5 + 32) = 0;
  v5[5] = v8;
  *((_WORD *)v5 + 24) = 0;
  *((unsigned char *)v5 + 50) = 0;
  v5[7] = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_1000945E0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v10 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v11 = sub_100094910((uint64_t)_swiftEmptyArrayStorage);
  *id v6 = v9;
  v6[1] = v10;
  *((_OWORD *)v6 + 1) = xmmword_100984A70;
  *((unsigned char *)v6 + 32) = 0;
  v6[5] = v11;
  *((_WORD *)v6 + 24) = 0;
  *((unsigned char *)v6 + 50) = 0;
  v6[7] = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a3 = v20;
  *(void *)(a3 + 8) = v34;
  *(void *)(a3 + 16) = v32;
  *(void *)(a3 + 24) = v31;
  *(unsigned char *)(a3 + 32) = v30;
  *(void *)(a3 + 40) = v19;
  *(unsigned char *)(a3 + 48) = v29;
  *(unsigned char *)(a3 + 49) = v28;
  *(unsigned char *)(a3 + 50) = v27;
  *(void *)(a3 + 56) = v18;
  *(void *)(a3 + 64) = v17;
  *(void *)(a3 + 72) = v16;
  *(void *)(a3 + 80) = v26;
  *(void *)(a3 + 88) = v25;
  *(unsigned char *)(a3 + 96) = v24;
  *(void *)(a3 + 104) = v13;
  *(unsigned char *)(a3 + 112) = v23;
  *(unsigned char *)(a3 + 113) = v22;
  *(unsigned char *)(a3 + 114) = v21;
  *(void *)(a3 + 120) = v15;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_100845D50(void *a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_1002C32B4((uint64_t)a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  swift_release();
}

Swift::Bool __swiftcall shouldSendDynamicError(for:)(__C::FPProviderID a1)
{
  id v2 = [self defaultStore];
  id v3 = [v2 dynamicErrorSampleRatePerProvider];

  uint64_t v4 = sub_10096C0A0();
  uint64_t v5 = sub_100851328((uint64_t)a1._rawValue, v4);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    uint64_t v7 = v5;
    unint64_t v8 = sub_10070ED94(0x64uLL);
    Swift::Bool result = swift_bridgeObjectRelease();
    if (__OFADD__(v8, 1)) {
      __break(1u);
    }
    else {
      return v7 >= (uint64_t)(v8 + 1);
    }
  }
  return result;
}

void sub_100845F00(uint64_t a1)
{
  if (a1 >= 1)
  {
    [v1 doubleValue];
    double v4 = v3;
    uint64_t v5 = (*(void *)&v3 >> 52) & 0x7FFLL;
    if (!v5 || v5 == 2047)
    {
      [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
      return;
    }
    id v6 = v1;
    BOOL v7 = 0;
    unsigned int v8 = *(unsigned __int8 *)[v6 objCType] - 99;
    if (v8 > 0x10)
    {
      BOOL v9 = 0;
LABEL_16:
      double v21 = log10(fabs(v4));
      double v22 = __exp10((double)a1 - floor(v21) + -1.0);
      double v23 = round(v4 * v22) / v22;
      if (v9)
      {
        [objc_allocWithZone((Class)NSNumber) initWithDouble:v23];
        return;
      }
      double v24 = round(v23);
      if (!v7)
      {
        if ((*(void *)&v24 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v24 > -1.0)
          {
            if (v24 < 1.84467441e19)
            {
              [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:(unint64_t)v24];
              return;
            }
            goto LABEL_34;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          return;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if ((*(void *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        __break(1u);
      }
      else if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          [objc_allocWithZone((Class)NSNumber) initWithLongLong:(uint64_t)v24];
          return;
        }
        goto LABEL_31;
      }
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (((1 << v8) & 0x14041) == 0)
    {
      BOOL v9 = 0;
      if (((1 << v8) & 0xA) == 0) {
        goto LABEL_16;
      }
      unint64_t v10 = [v6 objCType];
      id v11 = v6;
      BOOL v7 = v10[1] == 0;
      unsigned int v12 = ((v8 >> 1) | ((_BYTE)v8 << 7));
      BOOL v13 = v12 > 8;
      int v14 = (1 << v12) & 0x189;
      if (v13 || v14 == 0)
      {
        BOOL v19 = 0;
        goto LABEL_15;
      }
      id v16 = v11;
    }
    unint64_t v17 = [v6 objCType];
    id v18 = v6;
    BOOL v19 = v17[1] == 0;
LABEL_15:
    BOOL v9 = v7;
    id v20 = v6;
    BOOL v7 = v19;
    goto LABEL_16;
  }
}

unint64_t sub_100846178(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  BOOL v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unsigned int v12 = (char *)v44 - v11;
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v44 - v13;
  sub_100847F30((uint64_t)v44 - v13);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v45 = v6;
  uint64_t v46 = a1;
  if (v14)
  {
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v57 = v6 + 16;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v48 = *(void *)(v6 + 72);
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v52 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v44[1] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v49 = v4;
    uint64_t v50 = v9;
    id v16 = v52;
    while (1)
    {
      v56(v4, v15, v5);
      unint64_t v17 = *v54;
      (*v54)(v4, 0, 1, v5);
      if ((*v53)(v4, 1, v5) == 1) {
        break;
      }
      (*v51)(v12, v4, v5);
      uint64_t v18 = sub_10096AE10();
      unint64_t v20 = v19;
      v63._uint64_t countAndFlagsBits = 1918989871;
      v63._object = (void *)0xE400000000000000;
      BOOL v21 = sub_10096BE70(v63);
      uint64_t v47 = v17;
      if (v21)
      {
        unint64_t result = sub_10096BDA0();
        uint64_t v23 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0) {
          uint64_t v23 = v18 & 0xFFFFFFFFFFFFLL;
        }
        if (4 * v23 < result >> 14)
        {
          __break(1u);
          return result;
        }
        uint64_t v24 = sub_10096BEE0();
        uint64_t v26 = v25;
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v61 = v30;
        strcpy((char *)v62, "/private/var");
        HIBYTE(v62[6]) = 0;
        v62[7] = -5120;
        uint64_t v58 = v24;
        uint64_t v59 = v26;
        uint64_t v60 = v28;
        sub_10003DB70();
        sub_10096BDB0();
        swift_bridgeObjectRelease();
        unint64_t v31 = self;
        NSString v32 = sub_10096BC00();
        swift_bridgeObjectRelease();
        id v33 = [v31 fileURLWithPath:v32];

        unint64_t v34 = v50;
        sub_10096ADD0();
      }
      else
      {
        unint64_t v34 = v50;
        v56(v50, (uint64_t)v12, v5);
        swift_bridgeObjectRelease();
      }
      sub_10096AD20(v35);
      uint64_t v37 = v36;
      uint64_t v38 = *v16;
      (*v16)(v34, v5);
      sub_10096AD20(v39);
      uint64_t v41 = v40;
      id v42 = objc_msgSend(v37, "fp_relationshipToItemAtURL:", v40);

      v38(v12, v5);
      if (v42 != (id)2)
      {
        swift_bridgeObjectRelease();
        v38(v55, v5);
        return 1;
      }
      double v4 = v49;
      v15 += v48;
      if (!--v14)
      {
        v47(v49, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v43(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v5);
  return 0;
}

unint64_t sub_10084663C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  BOOL v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v79 = (char *)&v65 - v11;
  __chkstk_darwin(v10);
  uint64_t v78 = (char *)&v65 - v12;
  sub_100847F30((uint64_t)&v65 - v12);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v66 = v6;
  uint64_t v67 = a1;
  if (v13)
  {
    uint64_t v15 = v6 + 16;
    uint64_t v14 = *(void (**)(void, void, void))(v6 + 16);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v73 = *(void *)(v15 + 56);
    uint64_t v74 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    unint64_t v17 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v18 = (void (**)(char *, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    unint64_t v65 = (v15 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v69 = v14;
    uint64_t v70 = v5;
    while (1)
    {
      unint64_t v19 = v77;
      v14(v77, v16, v5);
      unint64_t v20 = *v75;
      (*v75)(v19, 0, 1, v5);
      if ((*v74)(v19, 1, v5) == 1) {
        break;
      }
      uint64_t v71 = v20;
      uint64_t v72 = *v17;
      v72(v79, v77, v5);
      uint64_t v21 = sub_10096AE10();
      unint64_t v23 = v22;
      v85._uint64_t countAndFlagsBits = 1918989871;
      v85._object = (void *)0xE400000000000000;
      BOOL v24 = sub_10096BE70(v85);
      uint64_t v76 = v16;
      if (v24)
      {
        unint64_t result = sub_10096BDA0();
        uint64_t v26 = HIBYTE(v23) & 0xF;
        if ((v23 & 0x2000000000000000) == 0) {
          uint64_t v26 = v21 & 0xFFFFFFFFFFFFLL;
        }
        if (4 * v26 < result >> 14)
        {
          __break(1u);
          return result;
        }
        uint64_t v27 = sub_10096BEE0();
        uint64_t v28 = v15;
        uint64_t v29 = v13;
        uint64_t v30 = v18;
        unint64_t v31 = v9;
        NSString v32 = v17;
        uint64_t v34 = v33;
        uint64_t v36 = v35;
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v83 = v38;
        strcpy((char *)v84, "/private/var");
        HIBYTE(v84[6]) = 0;
        v84[7] = -5120;
        uint64_t v80 = v27;
        uint64_t v81 = v34;
        unint64_t v17 = v32;
        BOOL v9 = v31;
        uint64_t v18 = v30;
        uint64_t v13 = v29;
        uint64_t v15 = v28;
        uint64_t v14 = v69;
        uint64_t v82 = v36;
        sub_10003DB70();
        sub_10096BDB0();
        uint64_t v5 = v70;
        swift_bridgeObjectRelease();
        uint64_t v39 = self;
        NSString v40 = sub_10096BC00();
        swift_bridgeObjectRelease();
        id v41 = objc_msgSend(v39, "fileURLWithPath:", v40, v65);

        sub_10096ADD0();
      }
      else
      {
        v14(v9, v79, v5);
        swift_bridgeObjectRelease();
      }
      sub_10096AD20(v42);
      uint64_t v44 = v43;
      sub_10096AD20(v45);
      uint64_t v47 = v46;
      id v48 = objc_msgSend(v44, "fp_relativePathWithRealpath:", v46);

      if (v48
        || (sub_10096AD20(v49),
            uint64_t v51 = v50,
            sub_10096AD20(v52),
            uint64_t v54 = v53,
            id v48 = objc_msgSend(v51, "fp_relativePathOf:", v53),
            v51,
            v54,
            v48))
      {
        uint64_t v58 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v60 = v59;

        uint64_t v61 = *v18;
        (*v18)(v9, v5);
        swift_bridgeObjectRelease();
        v61(v78, v5);
        uint64_t v62 = sub_10002B7CC((uint64_t *)&unk_100AD0F30);
        Swift::String v63 = v68;
        uint64_t v64 = (uint64_t *)&v68[*(int *)(v62 + 48)];
        v72(v68, v79, v5);
        *uint64_t v64 = v58;
        v64[1] = v60;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v63, 0, 1, v62);
      }
      uint64_t v55 = *v18;
      (*v18)(v9, v5);
      v55(v79, v5);
      uint64_t v16 = v76 + v73;
      if (!--v13)
      {
        v71(v77, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v56(v77, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v78, v5);
  uint64_t v57 = sub_10002B7CC((uint64_t *)&unk_100AD0F30);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v68, 1, 1, v57);
}

uint64_t sub_100846C3C()
{
  uint64_t v1 = sub_10096B480();
  __chkstk_darwin(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_10096AA90();
    swift_allocObject();
    sub_10001EBB0(v7, v6);
    sub_10096AA80();
    sub_100853018();
    sub_10096AA70();
    swift_beginAccess();
    *(unsigned char *)(v0 + 80) = v8;
    *(void *)(v0 + 88) = v9;
    *(unsigned char *)(v0 + 96) = v10;
    *(void *)(v0 + 104) = v11;
    *(unsigned char *)(v0 + 112) = v12;
    *(unsigned char *)(v0 + 72) = 1;
    sub_10001E9AC(v7, v6);
    swift_release();
    uint64_t result = sub_10001E9AC(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_100847048()
{
  uint64_t v1 = sub_10096B480();
  __chkstk_darwin(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_10096AA90();
    swift_allocObject();
    sub_10001EBB0(v7, v6);
    sub_10096AA80();
    sub_10085340C();
    sub_10096AA70();
    swift_beginAccess();
    *(void *)(v0 + 80) = v8;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 72) = 1;
    sub_10001E9AC(v7, v6);
    swift_release();
    uint64_t result = sub_10001E9AC(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_10084743C()
{
  uint64_t v1 = sub_10096B480();
  __chkstk_darwin(v1);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))();
  unint64_t v5 = v4;
  if (v4 >> 60 != 15)
  {
    uint64_t v6 = result;
    sub_10096AA90();
    swift_allocObject();
    sub_10001EBB0(v6, v5);
    sub_10096AA80();
    sub_10002B7CC(&qword_100AD7558);
    sub_100025500(&qword_100ADCA18, &qword_100AD7558);
    sub_10096AA70();
    swift_beginAccess();
    *(void *)(v0 + 80) = v7;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 72) = 1;
    sub_10001E9AC(v6, v5);
    swift_release();
    uint64_t result = sub_10001E9AC(v6, v5);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_10084784C()
{
  uint64_t v0 = sub_10096B480();
  __chkstk_darwin(v0);
  return sub_100861E9C();
}

uint64_t sub_100847B24()
{
  uint64_t v1 = sub_10096B480();
  __chkstk_darwin(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_10096AA90();
    swift_allocObject();
    sub_10001EBB0(v7, v6);
    sub_10096AA80();
    sub_1008530A4();
    sub_10096AA70();
    swift_beginAccess();
    *(unsigned char *)(v0 + 80) = v8;
    *(void *)(v0 + 88) = v9;
    *(unsigned char *)(v0 + 96) = v10;
    *(void *)(v0 + 104) = v11;
    *(void *)(v0 + 112) = v12;
    *(unsigned char *)(v0 + 120) = v13;
    *(unsigned char *)(v0 + 72) = 1;
    sub_10001E9AC(v7, v6);
    swift_release();
    uint64_t result = sub_10001E9AC(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

void sub_100847F30(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10096AE10();
  unint64_t v5 = v4;
  v22._uint64_t countAndFlagsBits = 1918989871;
  v22._object = (void *)0xE400000000000000;
  if (sub_10096BE70(v22))
  {
    unint64_t v6 = sub_10096BDA0();
    unint64_t v7 = sub_1000364D0(v6, v3, v5);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "/private/var");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    unint64_t v18 = v7;
    uint64_t v19 = v9;
    sub_10003DB70();
    sub_10096BDB0();
    swift_bridgeObjectRelease();
    uint64_t v14 = self;
    NSString v15 = sub_10096BC00();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, "fileURLWithPath:", v15, v18, v19, v11, v13, v20[0], v20[1]);

    sub_10096ADD0();
  }
  else
  {
    uint64_t v17 = sub_10096AE50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, v1, v17);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008480DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1008531C0;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0AF0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10085212C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10002BAC4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0988;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100852158;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0A00;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008485F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10085349C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0BE0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008487AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1008534C8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0C58;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100853470;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0B68;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100853620;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0F50;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1008535C8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0E60;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100848E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100853574;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0D70;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100849030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10085364C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0FC8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008491E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1008535F4;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0ED8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100849398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1008534C8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0DE8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10084954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10085351C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100036B3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BAF4;
  aBlock[3] = &unk_100AA0CF8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100849700(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = 0;
  return result;
}

uint64_t sub_100849940(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = v9;
  return result;
}

uint64_t sub_100849B84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v10, a1);
  uint64_t result = 0;
  unsigned __int8 v9 = v11;
  *(void *)a2 = v10;
  *(_WORD *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_100849DD4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v10, a1);
  uint64_t result = 0;
  int v9 = v10;
  *(unsigned char *)(a2 + 4) = BYTE4(v10);
  *(_DWORD *)a2 = v9;
  *(unsigned char *)(a2 + 5) = 0;
  return result;
}

uint64_t sub_10084A024(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *(_DWORD *)a2 = v9;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_10084A26C(uint64_t a1, _WORD *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = v9;
  return result;
}

uint64_t sub_10084A4B4(uint64_t a1, void **a2, void (*a3)(void **__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v10, a1);
  uint64_t v8 = *a2;
  *a2 = v10;
  sub_10002D240(v8);
  return 0;
}

uint64_t sub_10084A700(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_10084A948(uint64_t a1, void **a2, void (*a3)(long long *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a3(&v10, a1);
  uint64_t v8 = *a2;
  *(_OWORD *)a2 = v10;

  return 0;
}

uint64_t sub_10084AB94(uint64_t a1, uint64_t *a2, void (*a3)(long long *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10 = sub_10096A7B0();
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  a3(&v15, a1);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  *(_OWORD *)a2 = v15;
  a6(v12, v13);
  return 0;
}

uint64_t sub_10084ADE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_10096A7B0();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10002B7CC(&qword_100AD5D78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a1);
  uint64_t v11 = sub_10002B7CC(&qword_100AD5D80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_1000148B8((uint64_t)v10, a2, &qword_100AD5D78);
  return 0;
}

uint64_t sub_10084B0C4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10084B0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084C904(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_1008480DC, (uint64_t (*)(uint64_t))sub_1008536A4);
}

uint64_t sub_10084B138(void *(*a1)(void *__return_ptr, uint64_t))
{
  uint64_t v3 = sub_10096A7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)a1(v12, v5);
  if (!v1)
  {
    uint64_t result = LODWORD(v12[0]);
    int v13 = v12[0];
    if ((v12[0] & 0x80000000) != 0)
    {
      uint64_t v9 = sub_10096B4D0();
      if (!v9)
      {
        __chkstk_darwin(v9);
        v12[-2] = &v13;
        fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)&v12[-4], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
      }
      if (sub_10096B4D0() == 9939393)
      {
        sub_1002678E0((uint64_t)v12);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        swift_allocError();
        sub_10001AE98((uint64_t)v12, v10, (uint64_t *)&unk_100ACD9A0);
      }
      else
      {
        if (sub_10096B4D0() == 9939394)
        {
          objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
          return swift_willThrow();
        }
        sub_10096B4D0();
        uint64_t v11 = sub_10096B4A0();
        if ((v11 & 0x100000000) != 0) {
          LODWORD(v12[0]) = 22;
        }
        else {
          LODWORD(v12[0]) = v11;
        }
        sub_100042898((uint64_t)&_swiftEmptyArrayStorage);
        sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10096ABD0();
        sub_10096A790();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10084B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084CFE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_100848290, (uint64_t (*)(uint64_t))sub_100442178);
}

uint64_t sub_10084B440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_1008485F8((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084B790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084C904(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_1008487AC, (uint64_t (*)(uint64_t))sub_1008536A4);
}

uint64_t sub_10084B7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_100848960((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084BB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_100848B14((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084BE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_100848CC8((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084C1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_100848E7C((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_100849030((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084C86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084C904(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_1008491E4, (uint64_t (*)(uint64_t))sub_1008536A4);
}

uint64_t sub_10084C8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084C904(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_100849398, (uint64_t (*)(uint64_t))sub_1008536A4);
}

uint64_t sub_10084C904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t), uint64_t (*a11)(uint64_t))
{
  uint64_t v32 = a7;
  unsigned int v30 = a5;
  unsigned int v31 = a6;
  uint64_t v16 = sub_10096A7B0();
  uint64_t v29 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = 0;
  uint64_t v19 = v33;
  uint64_t v20 = a10(&v36, a1, a2, a3, a4, v30, v31, v32, a8, a9);
  uint64_t v21 = v20;
  if (v19)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v22 = v29;
  int v35 = v20;
  if (v36)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v21;
  }
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v24 = sub_10096B4D0();
    if (!v24)
    {
      __chkstk_darwin(v24);
      uint64_t v27 = &v35;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)(a11, (uint64_t)(&v28 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v34);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v34, v25, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v26 = sub_10096B4A0();
      if ((v26 & 0x100000000) != 0) {
        v34[0] = 22;
      }
      else {
        v34[0] = v26;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v16);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10084CC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_10096A7B0();
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_10084954C((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = sub_10096B4D0();
    if (!v23)
    {
      __chkstk_darwin(v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1008536A4, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v32);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v32, v24, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v25 = sub_10096B4A0();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10084CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10084CFE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_100848444, (uint64_t (*)(uint64_t))sub_1008536A4);
}

uint64_t sub_10084CFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t), uint64_t (*a11)(uint64_t))
{
  uint64_t v32 = a7;
  unsigned int v30 = a5;
  unsigned int v31 = a6;
  uint64_t v16 = sub_10096A7B0();
  uint64_t v29 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = 0;
  uint64_t v19 = v33;
  uint64_t v20 = a10(&v36, a1, a2, a3, a4, v30, v31, v32, a8, a9);
  uint64_t v21 = v20;
  if (v19)
  {
LABEL_2:
    swift_errorRelease();
    goto LABEL_3;
  }
  uint64_t v22 = v29;
  int v35 = v20;
  if (v36)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v21;
  }
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v24 = sub_10096B4D0();
    if (!v24)
    {
      __chkstk_darwin(v24);
      uint64_t v27 = &v35;
      swift_bridgeObjectRelease();
      fp_preconditionFailure(_:file:line:)(a11, (uint64_t)(&v28 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    if (sub_10096B4D0() == 9939393)
    {
      sub_1002678E0((uint64_t)v34);
      sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
      sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
      swift_allocError();
      sub_10001AE98((uint64_t)v34, v25, (uint64_t *)&unk_100ACD9A0);
    }
    else
    {
      if (sub_10096B4D0() == 9939394)
      {
        objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
        swift_willThrow();
        goto LABEL_3;
      }
      sub_10096B4D0();
      uint64_t v26 = sub_10096B4A0();
      if ((v26 & 0x100000000) != 0) {
        v34[0] = 22;
      }
      else {
        v34[0] = v26;
      }
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10096ABD0();
      sub_10096A790();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v16);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v21;
}

void *sub_10084D320(void *(*a1)(void *__return_ptr, uint64_t))
{
  uint64_t v3 = sub_10096A7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a1(v13, v5);
  if (!v1)
  {
    uint64_t result = (void *)v13[0];
    uint64_t v14 = v13[0];
    if ((v13[0] & 0x8000000000000000) != 0)
    {
      uint64_t v9 = sub_10096B4D0();
      if (!v9)
      {
        __chkstk_darwin(v9);
        *(&v12 - 2) = (uint64_t)&v14;
        fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_100853590, (uint64_t)(&v12 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
      }
      if (sub_10096B4D0() == 9939393)
      {
        sub_1002678E0((uint64_t)v13);
        sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
        sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
        swift_allocError();
        sub_10001AE98((uint64_t)v13, v10, (uint64_t *)&unk_100ACD9A0);
      }
      else
      {
        if (sub_10096B4D0() == 9939394)
        {
          objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
          return (void *)swift_willThrow();
        }
        sub_10096B4D0();
        uint64_t v11 = sub_10096B4A0();
        if ((v11 & 0x100000000) != 0) {
          LODWORD(v13[0]) = 22;
        }
        else {
          LODWORD(v13[0]) = v11;
        }
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_10002DC44((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10096ABD0();
        sub_10096A790();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      return (void *)swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10084D5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v105 = a4;
  uint64_t v106 = a3;
  uint64_t v109 = type metadata accessor for SyncState();
  uint64_t v8 = __chkstk_darwin(v109);
  uint64_t v112 = (uint64_t)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v110 = (uint64_t)v103 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v103 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v111 = (char *)v103 - v14;
  uint64_t v107 = a2;
  if (v16)
  {
    uint64_t v104 = v13;
    swift_bridgeObjectRetain();
    v103[1] = a1;
    uint64_t v17 = (unsigned char *)(a1 + 56);
    while (2)
    {
      unint64_t v21 = *((void *)v17 - 3);
      unint64_t v22 = *((void *)v17 - 2);
      uint64_t v23 = *(v17 - 8);
      uint64_t v24 = *((void *)v17 - 1);
      switch(*v17)
      {
        case 1:
          sub_10058DDC8(*((id *)v17 - 3), *((void **)v17 - 2), v24, 1);
          id v57 = (id)v21;
          swift_bridgeObjectRetain();
          unint64_t v58 = sub_10031F918(v57);
          char v60 = v59;
          swift_bridgeObjectRelease();
          if (v60)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v62 = *(void *)v5;
            uint64_t v113 = *(void **)v5;
            *(void *)uint64_t v5 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10091D9F0();
              uint64_t v62 = (uint64_t)v113;
            }

            uint64_t v63 = *(void *)(v62 + 56) + 24 * v58;
            uint64_t v64 = *(void **)v63;
            unint64_t v65 = *(void **)(v63 + 8);
            sub_100918B5C(v58, v62);
            *(void *)uint64_t v5 = v62;

            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v15 = v111;
          }
          else
          {
          }
          goto LABEL_6;
        case 2:
          uint64_t v18 = *(unsigned __int8 *)(v5 + 16);
          uint64_t v19 = *(void *)(v5 + 24);
          char v20 = *(unsigned char *)(v5 + 32);
          if (v18 == 2)
          {
            uint64_t v19 = *((void *)v17 - 2);
            char v20 = *((void *)v17 - 1);
            LOBYTE(v18) = *((void *)v17 - 3);
          }
          *(void *)(v5 + 16) = v18 & 1;
          *(void *)(v5 + 24) = v19;
          *(unsigned char *)(v5 + 32) = v20 & 1;
          *(_WORD *)(v5 + 48) = 0;
          goto LABEL_6;
        case 3:
          sub_10058DDC8(*((id *)v17 - 3), *((void **)v17 - 2), v24, 3);
          uint64_t v33 = (id)v21;
          char v47 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v113 = *(void **)(v5 + 40);
          uint64_t v36 = v113;
          *(void *)(v5 + 40) = 0x8000000000000000;
          unint64_t v49 = sub_10031F918(v33);
          uint64_t v50 = v36[2];
          BOOL v51 = (v48 & 1) == 0;
          uint64_t v52 = v50 + v51;
          if (__OFADD__(v50, v51)) {
            goto LABEL_87;
          }
          char v53 = v48;
          if (v36[3] >= v52)
          {
            if (v47)
            {
              uint64_t v56 = v113;
              if (v48) {
                goto LABEL_34;
              }
            }
            else
            {
              uint64_t v36 = &v113;
              sub_10091D838();
              uint64_t v56 = v113;
              if (v53) {
                goto LABEL_34;
              }
            }
          }
          else
          {
            sub_100375700(v52, v47);
            uint64_t v36 = v113;
            uint64_t v54 = sub_10031F918(v33);
            if ((v53 & 1) != (v55 & 1))
            {
LABEL_93:
              type metadata accessor for NSFileProviderItemIdentifier(0);
              sub_10096D3C0();
              __break(1u);
              JUMPOUT(0x10084DF44);
            }
            unint64_t v49 = v54;
            uint64_t v56 = v113;
            if (v53)
            {
LABEL_34:
              uint64_t v66 = v56[7] + 16 * v49;
              *(void *)uint64_t v66 = v22;
              *(unsigned char *)(v66 + 8) = v23 & 1;
              goto LABEL_49;
            }
          }
          v56[(v49 >> 6) + 8] |= 1 << v49;
          *(void *)(v56[6] + 8 * v49) = v33;
          uint64_t v75 = v56[7] + 16 * v49;
          *(void *)uint64_t v75 = v22;
          *(unsigned char *)(v75 + 8) = v23 & 1;
          uint64_t v76 = v56[2];
          BOOL v77 = __OFADD__(v76, 1);
          uint64_t v78 = v76 + 1;
          if (v77) {
            goto LABEL_89;
          }
          v56[2] = v78;
          uint64_t v79 = v33;
LABEL_49:
          *(void *)(v5 + 40) = v56;

          goto LABEL_54;
        case 4:
          if (v24 | v22 | v21)
          {
            if (v21 == 1 && (v24 | v22) == 0) {
              *(unsigned char *)(v5 + 49) = 1;
            }
            else {
              *(unsigned char *)(v5 + 50) = 1;
            }
          }
          else
          {
            *(unsigned char *)(v5 + 48) = 1;
          }
          goto LABEL_6;
        default:
          unint64_t v25 = ((unint64_t)*(unsigned int *)(v17 - 7) << 8) | ((unint64_t)(*(unsigned __int16 *)(v17 - 3) | (*(v17 - 1) << 16)) << 40) | v23;
          *(_WORD *)(v5 + 48) = 0;
          uint64_t v26 = *(void *)v5;
          uint64_t v27 = *(void *)(*(void *)v5 + 16);
          swift_retain();
          id v28 = (id)v21;
          id v29 = (id)v22;
          if (v27)
          {
            uint64_t v30 = sub_10031F918(v28);
            if ((v31 & 1) != 0 && !*(void *)(*(void *)(v26 + 56) + 24 * v30 + 8))
            {
              id v69 = v28;
              swift_bridgeObjectRetain();
              unint64_t v70 = sub_10031F918(v69);
              char v72 = v71;
              swift_bridgeObjectRelease();
              if (v72)
              {
                char v73 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v74 = *(void *)(v5 + 40);
                uint64_t v113 = (void *)v74;
                *(void *)(v5 + 40) = 0x8000000000000000;
                if ((v73 & 1) == 0)
                {
                  sub_10091D838();
                  uint64_t v74 = (uint64_t)v113;
                }

                sub_1009190B0(v70, v74);
                *(void *)(v5 + 40) = v74;

                swift_bridgeObjectRelease();
              }
              else
              {
              }
              swift_release();
              goto LABEL_6;
            }
          }
          uint64_t v32 = v29;
          uint64_t v33 = (void *)v25;
          swift_retain();
          id v34 = v28;
          id v108 = v32;
          char v35 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v113 = *(void **)v5;
          uint64_t v36 = v113;
          *(void *)uint64_t v5 = 0x8000000000000000;
          unint64_t v38 = sub_10031F918(v34);
          uint64_t v39 = v36[2];
          BOOL v40 = (v37 & 1) == 0;
          uint64_t v41 = v39 + v40;
          if (__OFADD__(v39, v40)) {
            goto LABEL_88;
          }
          char v42 = v37;
          if (v36[3] >= v41)
          {
            if (v35)
            {
              uint64_t v45 = v113;
              if (v37) {
                goto LABEL_37;
              }
            }
            else
            {
              uint64_t v36 = &v113;
              sub_10091D9F0();
              uint64_t v45 = v113;
              if (v42) {
                goto LABEL_37;
              }
            }
          }
          else
          {
            sub_100375A3C(v41, v35);
            uint64_t v36 = v113;
            uint64_t v43 = sub_10031F918(v34);
            if ((v42 & 1) != (v44 & 1)) {
              goto LABEL_93;
            }
            unint64_t v38 = v43;
            uint64_t v45 = v113;
            if (v42)
            {
LABEL_37:
              uint64_t v67 = v45[7] + 24 * v38;
              uint64_t v68 = *(void **)(v67 + 8);

              swift_release();
              *(void *)uint64_t v67 = v34;
              *(void *)(v67 + 8) = v22;
              *(void *)(v67 + 16) = v33;
              goto LABEL_53;
            }
          }
          v45[(v38 >> 6) + 8] |= 1 << v38;
          *(void *)(v45[6] + 8 * v38) = v34;
          uint64_t v80 = (void *)(v45[7] + 24 * v38);
          void *v80 = v34;
          v80[1] = v22;
          v80[2] = v33;
          uint64_t v81 = v45[2];
          BOOL v77 = __OFADD__(v81, 1);
          uint64_t v82 = v81 + 1;
          if (v77) {
            goto LABEL_90;
          }
          v45[2] = v82;
          id v83 = v34;
LABEL_53:
          *(void *)uint64_t v5 = v45;

          swift_release();
LABEL_54:
          swift_bridgeObjectRelease();
          uint64_t v15 = v111;
LABEL_6:
          v17 += 32;
          if (--v16) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          a2 = v107;
          uint64_t v13 = v104;
          break;
      }
      break;
    }
  }
  uint64_t v84 = *(void *)(a2 + 16);
  if (!v84) {
    goto LABEL_79;
  }
  uint64_t v33 = (void *)(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)));
  uint64_t v85 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1005996D0((uint64_t)v33, (uint64_t)v15);
    sub_1005996D0((uint64_t)v15, v110);
    uint64_t v86 = 1;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        break;
      case 2u:
        sub_100597DF0(v110);
        uint64_t v86 = 2;
        break;
      case 3u:
        uint64_t v86 = 3;
        break;
      case 4u:
        uint64_t v87 = *(void **)(v110 + 8);

        uint64_t v86 = 4;
        break;
      case 5u:

        uint64_t v86 = 5;
        break;
      case 6u:
        uint64_t v86 = 6;
        break;
      case 7u:
        uint64_t v86 = 7;
        break;
      case 8u:
        uint64_t v86 = 8;
        break;
      default:
        sub_100597DF0(v110);
        uint64_t v86 = 0;
        break;
    }
    sub_1005996D0((uint64_t)v15, v112);
    int v88 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = *(void **)(v5 + 8);
    uint64_t v36 = v113;
    *(void *)(v5 + 8) = 0x8000000000000000;
    unint64_t v90 = sub_10031FDC4(v86);
    uint64_t v91 = v36[2];
    BOOL v92 = (v89 & 1) == 0;
    uint64_t v93 = v91 + v92;
    if (__OFADD__(v91, v92)) {
      break;
    }
    char v94 = v89;
    if (v36[3] >= v93)
    {
      if ((v88 & 1) == 0) {
        sub_10091D5C0();
      }
    }
    else
    {
      sub_1003751D0(v93, v88);
      uint64_t v95 = sub_10031FDC4(v86);
      if ((v94 & 1) != (v96 & 1))
      {
        sub_10096D3C0();
        __break(1u);
        goto LABEL_93;
      }
      unint64_t v90 = v95;
    }
    uint64_t v15 = v111;
    uint64_t v36 = v113;
    if (v94)
    {
      sub_10038EFC8(v112, v113[7] + v90 * v85);
    }
    else
    {
      v113[(v90 >> 6) + 8] |= 1 << v90;
      *(unsigned char *)(v36[6] + v90) = v86;
      sub_100706DF8(v112, v36[7] + v90 * v85);
      uint64_t v97 = v36[2];
      BOOL v77 = __OFADD__(v97, 1);
      uint64_t v98 = v97 + 1;
      if (v77) {
        goto LABEL_86;
      }
      v36[2] = v98;
    }
    *(void *)(v5 + 8) = v36;
    swift_bridgeObjectRelease();
    sub_100597DF0((uint64_t)v15);
    uint64_t v33 = (void *)((char *)v33 + v85);
    if (!--v84)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_79:
      uint64_t v99 = v106;
      if (v106)
      {
        uint64_t v36 = (void *)swift_allocObject();
        v36[2] = v99;
        v36[3] = v105;
        uint64_t v33 = *(void **)(v5 + 56);
        swift_retain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result) {
          goto LABEL_81;
        }
        goto LABEL_91;
      }
      return result;
    }
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  uint64_t result = (uint64_t)sub_1006A327C(0, v33[2] + 1, 1, v33);
  uint64_t v33 = (void *)result;
LABEL_81:
  unint64_t v101 = v33[2];
  unint64_t v100 = v33[3];
  if (v101 >= v100 >> 1)
  {
    uint64_t result = (uint64_t)sub_1006A327C((void *)(v100 > 1), v101 + 1, 1, v33);
    uint64_t v33 = (void *)result;
  }
  v33[2] = v101 + 1;
  uint64_t v102 = &v33[2 * v101];
  v102[4] = sub_1000D324C;
  v102[5] = v36;
  *(void *)(v5 + 56) = v33;
  return result;
}

uint64_t sub_10084DF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v128 = a4;
  uint64_t v130 = a3;
  uint64_t v147 = type metadata accessor for SyncState();
  uint64_t v129 = *(void *)(v147 - 8);
  uint64_t v8 = __chkstk_darwin(v147);
  uint64_t v150 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v149 = (uint64_t)&v127 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v127 - v12;
  uint64_t v14 = sub_10002B7CC(&qword_100ACCA30);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v138 = (uint64_t)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v134 = (char *)&v127 - v19;
  __chkstk_darwin(v18);
  uint64_t v132 = (uint64_t)&v127 - v20;
  uint64_t v21 = sub_10002B7CC((uint64_t *)&unk_100AD6FA8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v136 = (uint64_t)&v127 - v25;
  uint64_t v26 = sub_10002B7CC(&qword_100ACB910);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v131 = (uint64_t)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v146 = (uint64_t)&v127 - v29;
  uint64_t v30 = sub_10002B7CC((uint64_t *)&unk_100AD0D50);
  uint64_t result = __chkstk_darwin(v30);
  id v34 = (char *)&v127 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(a1 + 16);
  uint64_t v148 = v13;
  uint64_t v133 = a2;
  if (v35)
  {
    uint64_t v36 = a1;
    char v37 = (void *)(a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)));
    uint64_t v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v137 = v15;
    uint64_t v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    uint64_t v38 = *(void *)(v32 + 72);
    uint64_t v127 = v36;
    swift_bridgeObjectRetain();
    uint64_t v144 = v14;
    uint64_t v140 = v30;
    uint64_t v141 = v24;
    uint64_t v142 = v38;
    while (1)
    {
      sub_10002B70C((uint64_t)v37, (uint64_t)v34, (uint64_t *)&unk_100AD0D50);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          unint64_t v68 = sub_10031F858(*(void *)v34, v34[8]);
          if (v69)
          {
            unint64_t v70 = v68;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v72 = *(void *)v5;
            v151[0] = *(void *)v5;
            *(void *)uint64_t v5 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10091DD78();
              uint64_t v72 = v151[0];
            }
            sub_10001AE98(*(void *)(v72 + 56) + *(void *)(v137 + 72) * v70, (uint64_t)v24, &qword_100ACCA30);
            sub_1009194D0(v70, v72);
            *(void *)uint64_t v5 = v72;
            swift_bridgeObjectRelease();
            uint64_t v73 = 0;
          }
          else
          {
            uint64_t v73 = 1;
          }
          (*v143)(v24, v73, 1, v144);
          uint64_t v74 = (uint64_t)v24;
          uint64_t v75 = (uint64_t *)&unk_100AD6FA8;
          goto LABEL_29;
        case 2u:
          uint64_t v52 = (uint64_t *)(v34 + 8);
          char v53 = v34[16];
          uint64_t v54 = *(unsigned __int8 *)(v5 + 16);
          if (v54 != 2) {
            uint64_t v52 = (uint64_t *)(v5 + 24);
          }
          uint64_t v55 = *v52;
          if (v54 == 2) {
            LOBYTE(v54) = *v34;
          }
          else {
            char v53 = *(unsigned char *)(v5 + 32);
          }
          *(void *)(v5 + 16) = v54 & 1;
          *(void *)(v5 + 24) = v55;
          *(unsigned char *)(v5 + 32) = v53 & 1;
          *(_WORD *)(v5 + 48) = 0;
          goto LABEL_5;
        case 3u:
          uint64_t v139 = *((void *)v34 + 2);
          LODWORD(v145) = v34[24];
          Swift::UInt64 v56 = *(void *)v34;
          char v57 = v34[8];
          char v58 = swift_isUniquelyReferenced_nonNull_native();
          v151[0] = *(void *)(v5 + 40);
          char v59 = (void *)v151[0];
          *(void *)(v5 + 40) = 0x8000000000000000;
          unint64_t v61 = sub_10031F858(v56, v57);
          uint64_t v62 = v59[2];
          BOOL v63 = (v60 & 1) == 0;
          uint64_t v64 = v62 + v63;
          if (__OFADD__(v62, v63)) {
            goto LABEL_92;
          }
          char v65 = v60;
          if (v59[3] >= v64)
          {
            if ((v58 & 1) == 0)
            {
              char v59 = v151;
              sub_10091DBC8();
            }
          }
          else
          {
            sub_100375D88(v64, v58);
            char v59 = (void *)v151[0];
            unint64_t v66 = sub_10031F858(v56, v57);
            if ((v65 & 1) != (v67 & 1)) {
              goto LABEL_98;
            }
            unint64_t v61 = v66;
          }
          uint64_t v38 = v142;
          uint64_t v76 = (void *)v151[0];
          if (v65)
          {
            uint64_t v39 = *(void *)(v151[0] + 56) + 16 * v61;
            *(void *)uint64_t v39 = v139;
            *(unsigned char *)(v39 + 8) = v145;
          }
          else
          {
            *(void *)(v151[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
            uint64_t v77 = v76[6] + 16 * v61;
            *(void *)uint64_t v77 = v56;
            *(unsigned char *)(v77 + 8) = v57;
            uint64_t v78 = v76[7] + 16 * v61;
            *(void *)uint64_t v78 = v139;
            *(unsigned char *)(v78 + 8) = v145;
            uint64_t v79 = v76[2];
            BOOL v80 = __OFADD__(v79, 1);
            uint64_t v81 = v79 + 1;
            if (v80) {
              goto LABEL_94;
            }
            v76[2] = v81;
          }
          *(void *)(v5 + 40) = v76;
          swift_bridgeObjectRelease();
          uint64_t v13 = v148;
          uint64_t v24 = v141;
          goto LABEL_5;
        case 4u:
          *(unsigned char *)(v5 + 48) = 1;
          goto LABEL_5;
        case 5u:
          *(unsigned char *)(v5 + 49) = 1;
          goto LABEL_5;
        case 6u:
          *(unsigned char *)(v5 + 50) = 1;
          goto LABEL_5;
        default:
          uint64_t v40 = sub_10002B7CC((uint64_t *)&unk_100AD7400);
          uint64_t v41 = *(void *)&v34[*(int *)(v40 + 64)];
          Swift::UInt64 v42 = *(void *)v34;
          int v43 = v34[8];
          sub_10001AE98((uint64_t)&v34[*(int *)(v40 + 48)], v146, &qword_100ACB910);
          *(_WORD *)(v5 + 48) = 0;
          uint64_t v44 = *(void *)v5;
          uint64_t v45 = *(void *)(*(void *)v5 + 16);
          LODWORD(v145) = v43;
          if (v45)
          {
            unint64_t v46 = sub_10031F858(v42, v43);
            uint64_t v47 = v144;
            if (v48)
            {
              uint64_t v49 = *(void *)(v44 + 56);
              uint64_t v50 = v136;
              sub_10002B70C(v49 + *(void *)(v137 + 72) * v46, v136, &qword_100ACCA30);
              uint64_t v51 = 0;
            }
            else
            {
              uint64_t v51 = 1;
              uint64_t v50 = v136;
            }
          }
          else
          {
            uint64_t v51 = 1;
            uint64_t v50 = v136;
            uint64_t v47 = v144;
          }
          (*v143)((char *)v50, v51, 1, v47);
          if ((*v135)(v50, 1, v47))
          {
            sub_10002B770(v50, (uint64_t *)&unk_100AD6FA8);
LABEL_44:
            uint64_t v93 = (uint64_t)v134;
            sub_10002B70C(v146, (uint64_t)&v134[*(int *)(v47 + 36)], &qword_100ACB910);
            *(void *)uint64_t v93 = v42;
            char v94 = v145;
            *(unsigned char *)(v93 + 8) = v145;
            *(void *)(v93 + *(int *)(v47 + 40)) = v41;
            sub_10001AE98(v93, v138, &qword_100ACCA30);
            swift_retain();
            int v95 = swift_isUniquelyReferenced_nonNull_native();
            v151[0] = *(void *)v5;
            char v59 = (void *)v151[0];
            *(void *)uint64_t v5 = 0x8000000000000000;
            unint64_t v97 = sub_10031F858(v42, v94);
            uint64_t v98 = v59[2];
            BOOL v99 = (v96 & 1) == 0;
            uint64_t v100 = v98 + v99;
            if (__OFADD__(v98, v99)) {
              goto LABEL_93;
            }
            char v101 = v96;
            if (v59[3] >= v100)
            {
              if (v95)
              {
                uint64_t v104 = (void *)v151[0];
                if ((v96 & 1) == 0) {
                  goto LABEL_55;
                }
              }
              else
              {
                char v59 = v151;
                sub_10091DD78();
                uint64_t v104 = (void *)v151[0];
                if ((v101 & 1) == 0) {
                  goto LABEL_55;
                }
              }
            }
            else
            {
              sub_1003760C8(v100, v95);
              char v59 = (void *)v151[0];
              unint64_t v102 = sub_10031F858(v42, v145);
              if ((v101 & 1) != (v103 & 1))
              {
LABEL_98:
                sub_10096D3C0();
                __break(1u);
                JUMPOUT(0x10084ECDCLL);
              }
              unint64_t v97 = v102;
              uint64_t v104 = (void *)v151[0];
              if ((v101 & 1) == 0)
              {
LABEL_55:
                v104[(v97 >> 6) + 8] |= 1 << v97;
                uint64_t v105 = v104[6] + 16 * v97;
                *(void *)uint64_t v105 = v42;
                *(unsigned char *)(v105 + 8) = v145;
                sub_10001AE98(v138, v104[7] + *(void *)(v137 + 72) * v97, &qword_100ACCA30);
                uint64_t v106 = v104[2];
                BOOL v80 = __OFADD__(v106, 1);
                uint64_t v107 = v106 + 1;
                if (v80) {
                  goto LABEL_95;
                }
                v104[2] = v107;
                goto LABEL_57;
              }
            }
            sub_1000148B8(v138, v104[7] + *(void *)(v137 + 72) * v97, &qword_100ACCA30);
LABEL_57:
            *(void *)uint64_t v5 = v104;
            swift_release();
            swift_bridgeObjectRelease();
            sub_10002B770(v146, &qword_100ACB910);
            uint64_t v13 = v148;
            uint64_t v24 = v141;
            uint64_t v38 = v142;
            goto LABEL_5;
          }
          uint64_t v139 = v41;
          uint64_t v82 = v132;
          sub_10002B70C(v50, v132, &qword_100ACCA30);
          sub_10002B770(v50, (uint64_t *)&unk_100AD6FA8);
          uint64_t v83 = v82 + *(int *)(v47 + 36);
          uint64_t v84 = v131;
          sub_10002B70C(v83, v131, &qword_100ACB910);
          uint64_t v85 = type metadata accessor for VFSItem(0);
          int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85);
          uint64_t v87 = v84;
          uint64_t v47 = v144;
          sub_10002B770(v87, &qword_100ACB910);
          uint64_t v88 = v82;
          uint64_t v41 = v139;
          sub_10002B770(v88, &qword_100ACCA30);
          if (v86 != 1) {
            goto LABEL_44;
          }
          unint64_t v89 = sub_10031F858(v42, v145);
          if (v90)
          {
            unint64_t v145 = v89;
            char v91 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v92 = *(void *)(v5 + 40);
            v151[0] = v92;
            *(void *)(v5 + 40) = 0x8000000000000000;
            uint64_t v24 = v141;
            uint64_t v38 = v142;
            if ((v91 & 1) == 0)
            {
              sub_10091DBC8();
              uint64_t v92 = v151[0];
            }
            sub_1009192AC(v145, v92);
            *(void *)(v5 + 40) = v92;
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_release();
            uint64_t v24 = v141;
            uint64_t v38 = v142;
          }
          uint64_t v74 = v146;
          uint64_t v75 = &qword_100ACB910;
LABEL_29:
          sub_10002B770(v74, v75);
LABEL_5:
          char v37 = (void *)((char *)v37 + v38);
          if (!--v35)
          {
            uint64_t result = swift_bridgeObjectRelease();
            a2 = v133;
            goto LABEL_59;
          }
          break;
      }
    }
  }
LABEL_59:
  uint64_t v108 = *(void *)(a2 + 16);
  if (v108)
  {
    char v37 = (void *)(a2 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80)));
    uint64_t v109 = *(void *)(v129 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1005996D0((uint64_t)v37, (uint64_t)v13);
      sub_1005996D0((uint64_t)v13, v149);
      uint64_t v110 = 1;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          break;
        case 2u:
          sub_100597DF0(v149);
          uint64_t v110 = 2;
          break;
        case 3u:
          uint64_t v110 = 3;
          break;
        case 4u:
          uint64_t v111 = *(void **)(v149 + 8);

          uint64_t v110 = 4;
          break;
        case 5u:

          uint64_t v110 = 5;
          break;
        case 6u:
          uint64_t v110 = 6;
          break;
        case 7u:
          uint64_t v110 = 7;
          break;
        case 8u:
          uint64_t v110 = 8;
          break;
        default:
          sub_100597DF0(v149);
          uint64_t v110 = 0;
          break;
      }
      sub_1005996D0((uint64_t)v13, v150);
      int v112 = swift_isUniquelyReferenced_nonNull_native();
      v151[0] = *(void *)(v5 + 8);
      char v59 = (void *)v151[0];
      *(void *)(v5 + 8) = 0x8000000000000000;
      unint64_t v114 = sub_10031FDC4(v110);
      uint64_t v115 = v59[2];
      BOOL v116 = (v113 & 1) == 0;
      uint64_t v117 = v115 + v116;
      if (__OFADD__(v115, v116))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        uint64_t result = (uint64_t)sub_1006A327C(0, v37[2] + 1, 1, v37);
        char v37 = (void *)result;
LABEL_86:
        unint64_t v125 = v37[2];
        unint64_t v124 = v37[3];
        if (v125 >= v124 >> 1)
        {
          uint64_t result = (uint64_t)sub_1006A327C((void *)(v124 > 1), v125 + 1, 1, v37);
          char v37 = (void *)result;
        }
        v37[2] = v125 + 1;
        uint64_t v126 = &v37[2 * v125];
        v126[4] = sub_1000DEB18;
        v126[5] = v59;
        *(void *)(v5 + 56) = v37;
        return result;
      }
      char v118 = v113;
      if (v59[3] >= v117)
      {
        if (v112)
        {
          char v59 = (void *)v151[0];
          if ((v113 & 1) == 0) {
            goto LABEL_79;
          }
        }
        else
        {
          sub_10091D5C0();
          char v59 = (void *)v151[0];
          if ((v118 & 1) == 0) {
            goto LABEL_79;
          }
        }
      }
      else
      {
        sub_1003751D0(v117, v112);
        uint64_t v119 = sub_10031FDC4(v110);
        if ((v118 & 1) != (v120 & 1))
        {
          sub_10096D3C0();
          __break(1u);
          goto LABEL_98;
        }
        unint64_t v114 = v119;
        char v59 = (void *)v151[0];
        if ((v118 & 1) == 0)
        {
LABEL_79:
          v59[(v114 >> 6) + 8] |= 1 << v114;
          *(unsigned char *)(v59[6] + v114) = v110;
          sub_100706DF8(v150, v59[7] + v114 * v109);
          uint64_t v121 = v59[2];
          BOOL v80 = __OFADD__(v121, 1);
          uint64_t v122 = v121 + 1;
          if (v80) {
            goto LABEL_91;
          }
          v59[2] = v122;
          goto LABEL_62;
        }
      }
      sub_10038EFC8(v150, v59[7] + v114 * v109);
LABEL_62:
      *(void *)(v5 + 8) = v59;
      swift_bridgeObjectRelease();
      uint64_t v13 = v148;
      sub_100597DF0((uint64_t)v148);
      char v37 = (void *)((char *)v37 + v109);
      if (!--v108)
      {
        uint64_t result = swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v123 = v130;
  if (v130)
  {
    char v59 = (void *)swift_allocObject();
    v59[2] = v123;
    v59[3] = v128;
    char v37 = *(void **)(v5 + 56);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      goto LABEL_96;
    }
    goto LABEL_86;
  }
  return result;
}

id sub_10084ED1C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)sub_100528084((uint64_t)a1);
  if (!v4)
  {
    unint64_t v17 = v14;
    uint64_t v52 = v9;
    uint64_t v53 = v10;
    if (v16 == 2)
    {
      uint64_t v47 = a4;
      uint64_t v18 = v15;
      uint64_t v19 = (uint64_t)result;
      id v20 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_retain_n();
      char v48 = a1;
      id v21 = a1;
      id v22 = a2;
      id v23 = v21;
      id v24 = v22;
      uint64_t v49 = v19;
      id v50 = v24;
      uint64_t v51 = v18;
      sub_10058DE40(v19, v17, v18, 2);
      uint64_t v25 = sub_10096B470();
      os_log_type_t v26 = sub_10096C5A0();
      int v46 = v26;
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v28 = v53;
      if (v27)
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v55 = v45;
        *(_DWORD *)uint64_t v29 = 136315394;
        uint64_t v43 = v29 + 4;
        uint64_t v30 = sub_100489FA8((uint64_t)v23, a2, a3);
        os_log_t v44 = v25;
        unint64_t v32 = v31;
        swift_release();
        id v33 = v50;

        uint64_t v54 = sub_100719D44(v30, v32, &v55);
        sub_10096C8C0();
        swift_release();

        swift_bridgeObjectRelease();
        id v34 = (uint8_t *)v29;
        *(_WORD *)(v29 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v35 = v49;
        uint64_t v54 = sub_100719D44(v49, v17, &v55);
        sub_10096C8C0();
        uint64_t v36 = v51;
        sub_10058DF00(v35, v17, v51, 2);
        sub_10058DF00(v35, v17, v36, 2);
        swift_bridgeObjectRelease();
        os_log_t v37 = v44;
        _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v46, "fetch metadata for pending event: %s, reason: %s", v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v52);
      }
      else
      {
        swift_release_n();
        id v39 = v50;

        uint64_t v40 = v49;
        uint64_t v41 = v51;
        sub_10058DF00(v49, v17, v51, 2);
        sub_10058DF00(v40, v17, v41, 2);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v52);
      }
      a4 = v47;
      *uint64_t v47 = v23;
      sub_10002B7CC((uint64_t *)&unk_100AD65B0);
      swift_storeEnumTagMultiPayload();
      sub_10002B7CC(&qword_100AD68D8);
      swift_storeEnumTagMultiPayload();
      a1 = v48;
    }
    else
    {
      sub_10058DF00((uint64_t)result, v14, v15, v16);
      *a4 = a1;
      a4[1] = a2;
      sub_10002B7CC((uint64_t *)&unk_100AD65B0);
      swift_storeEnumTagMultiPayload();
      sub_10002B7CC(&qword_100AD68D8);
      swift_storeEnumTagMultiPayload();
      id v38 = a2;
    }
    uint64_t v42 = sub_10002B7CC(&qword_100AD68D8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a4, 0, 1, v42);
    return a1;
  }
  return result;
}

unint64_t sub_10084F1A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_10002B7CC(&qword_100ACCA30);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = sub_10096B480();
  uint64_t v53 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + *(int *)(v4 + 44);
  uint64_t v14 = *(void *)a1;
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = v55;
  unint64_t result = sub_100529828(*(void *)a1);
  if (!v16)
  {
    uint64_t v52 = v7;
    uint64_t v55 = v10;
    if (v20 == 2)
    {
      unint64_t v50 = result;
      uint64_t v51 = v19;
      uint64_t v49 = 0;
      unint64_t v21 = v18;
      id v22 = (id)fpfs_current_or_default_log();
      id v23 = v12;
      sub_10096B490();
      uint64_t v24 = a1;
      sub_10002B70C(a1, (uint64_t)v9, &qword_100ACCA30);
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_10096B470();
      os_log_type_t v26 = sub_10096C5A0();
      int v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v57 = v48;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v45 = v28 + 4;
        os_log_t v47 = v25;
        int v46 = v27;
        uint64_t v29 = (uint64_t)v52;
        sub_10002B70C((uint64_t)v9, (uint64_t)v52, &qword_100ACCA30);
        sub_10002B770((uint64_t)v9, &qword_100ACCA30);
        uint64_t v30 = sub_10048A1D8();
        unint64_t v32 = v31;
        sub_10002B770(v29, &qword_100ACCA30);
        uint64_t v56 = sub_100719D44(v30, v32, &v57);
        id v33 = v23;
        sub_10096C8C0();
        uint64_t v24 = a1;
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        id v34 = (uint8_t *)v28;
        swift_bridgeObjectRetain();
        uint64_t v35 = v50;
        uint64_t v56 = sub_100719D44(v50, v21, &v57);
        sub_10096C8C0();
        uint64_t v36 = v51;
        sub_10058DF00(v35, v21, v51, 2);
        sub_10058DF00(v35, v21, v36, 2);
        swift_bridgeObjectRelease();
        os_log_t v37 = v47;
        _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v46, "fetch metadata for pending event: %s, reason: %s", v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v55);
      }
      else
      {
        sub_10002B770((uint64_t)v9, &qword_100ACCA30);
        uint64_t v42 = v50;
        uint64_t v41 = v51;
        sub_10058DF00(v50, v21, v51, 2);
        sub_10058DF00(v42, v21, v41, 2);

        (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v55);
      }
      char v43 = *(unsigned char *)(v24 + 8);
      id v39 = v54;
      *uint64_t v54 = *(void *)v24;
      *((unsigned char *)v39 + 8) = v43;
      sub_10002B7CC((uint64_t *)&unk_100AD0A90);
      swift_storeEnumTagMultiPayload();
      sub_10002B7CC(&qword_100AD65C0);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      sub_10058DF00(result, v18, v19, v20);
      uint64_t v38 = sub_10002B7CC((uint64_t *)&unk_100AD0D70);
      id v39 = v54;
      uint64_t v40 = (uint64_t)v54 + *(int *)(v38 + 48);
      *uint64_t v54 = v14;
      *((unsigned char *)v39 + 8) = v15;
      sub_10002B70C(v13, v40, &qword_100ACB910);
      sub_10002B7CC((uint64_t *)&unk_100AD0A90);
      swift_storeEnumTagMultiPayload();
      sub_10002B7CC(&qword_100AD65C0);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v44 = sub_10002B7CC(&qword_100AD65C0);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v39, 0, 1, v44);
  }
  return result;
}

uint64_t sub_10084F6A0(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1 + qword_100ADA000;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v19 = v1;
    sub_100394C70();
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t *))(v5 - 8);
      v20[0] = swift_allocError();
      swift_retain();
      v6(v20);
      swift_errorRelease();
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v19;
  }
  unint64_t v7 = sub_100099A38((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v8 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v9 = sub_100099A54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)uint64_t v2 = v7;
  *(void *)(v2 + 8) = v8;
  *(_OWORD *)(v2 + 16) = xmmword_100984A70;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v9;
  *(_WORD *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 50) = 0;
  *(void *)(v2 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + qword_100ADA008;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    sub_100394C70();
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 40;
    do
    {
      uint64_t v14 = *(void (**)(uint64_t *))(v13 - 8);
      uint64_t v21 = swift_allocError();
      swift_retain();
      v14(&v21);
      swift_errorRelease();
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  unint64_t v15 = sub_1000945E0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v16 = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v17 = sub_100094910((uint64_t)_swiftEmptyArrayStorage);
  *(void *)uint64_t v10 = v15;
  *(void *)(v10 + 8) = v16;
  *(_OWORD *)(v10 + 16) = xmmword_100984A70;
  *(unsigned char *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = v17;
  *(_WORD *)(v10 + 48) = 0;
  *(unsigned char *)(v10 + 50) = 0;
  *(void *)(v10 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10084F928(void *a1)
{
  uint64_t v3 = (char *)a1 + qword_100ADA000;
  swift_beginAccess();
  long long v4 = *((_OWORD *)v3 + 1);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v4;
  long long v5 = *((_OWORD *)v3 + 3);
  v22[2] = *((_OWORD *)v3 + 2);
  v22[3] = v5;
  sub_1004A61D8((uint64_t)v22);
  sub_10052B0B4(a1);
  uint64_t result = sub_1004A6230((uint64_t)v22);
  if (!v1)
  {
    swift_beginAccess();
    *((_OWORD *)v3 + 1) = xmmword_100984A70;
    v3[32] = 0;
    *((_WORD *)v3 + 24) = 0;
    v3[50] = 0;
    *((void *)v3 + 1) = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v7 = *((void *)v3 + 7);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v7 + 40;
      do
      {
        uint64_t v10 = *(void (**)(void *))(v9 - 8);
        v20[0] = 0;
        swift_retain();
        v10(v20);
        swift_release();
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    *((void *)v3 + 7) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v11 = (char *)a1 + qword_100ADA008;
    swift_beginAccess();
    long long v12 = *((_OWORD *)v11 + 1);
    v21[0] = *(_OWORD *)v11;
    v21[1] = v12;
    long long v13 = *((_OWORD *)v11 + 3);
    v21[2] = *((_OWORD *)v11 + 2);
    v21[3] = v13;
    sub_1004A61D8((uint64_t)v21);
    uint64_t v14 = (void *)sub_100514C2C();
    sub_10052CF74(v14);
    swift_release();
    sub_1004A6230((uint64_t)v21);
    swift_beginAccess();
    *((_OWORD *)v11 + 1) = xmmword_100984A70;
    v11[32] = 0;
    *((_WORD *)v11 + 24) = 0;
    v11[50] = 0;
    *((void *)v11 + 1) = sub_10009471C((uint64_t)_swiftEmptyArrayStorage);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v15 = *((void *)v11 + 7);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = v15 + 40;
      do
      {
        uint64_t v18 = *(void (**)(void *))(v17 - 8);
        v19[0] = 0;
        swift_retain();
        v18(v19);
        swift_release();
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    *((void *)v11 + 7) = _swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10084FBA0(uint64_t result)
{
  uint64_t v1 = qword_100B0B568;
  if (*(unsigned char *)(result + qword_100B0B568 + 8)) {
    uint64_t v1 = qword_100B0B518;
  }
  uint64_t v2 = *(void *)(result + v1);
  uint64_t v3 = qword_100B0B578;
  if (*(unsigned char *)(result + qword_100B0B578 + 8)) {
    uint64_t v3 = qword_100B0B528;
  }
  uint64_t v4 = *(void *)(result + v3);
  long long v5 = (uint64_t *)(result + qword_100B0B590);
  if (*(unsigned char *)(result + qword_100B0B590 + 8) == 1)
  {
    if (*(unsigned char *)(result + 152))
    {
LABEL_22:
      *(void *)(result + qword_100B0B550) = v2;
      *(void *)(result + qword_100B0B558) = v4;
      return result;
    }
    long long v5 = (uint64_t *)(result + 144);
  }
  uint64_t v6 = qword_100B0B570;
  if (*(unsigned char *)(result + qword_100B0B570 + 8)) {
    uint64_t v6 = qword_100B0B520;
  }
  double v7 = (double)*v5;
  double v8 = *(double *)(result + v6) * v7;
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v2 <= (uint64_t)v8) {
    uint64_t v2 = (uint64_t)v8;
  }
  uint64_t v9 = qword_100B0B580;
  if (*(unsigned char *)(result + qword_100B0B580 + 8)) {
    uint64_t v9 = qword_100B0B530;
  }
  double v10 = *(double *)(result + v9) * v7;
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0) {
    goto LABEL_26;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v10 < 9.22337204e18)
  {
    if (v4 <= (uint64_t)v10) {
      uint64_t v4 = (uint64_t)v10;
    }
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10084FD44(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + qword_100ADB660;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(result + 56) + 8 * i);
    BOOL v17 = __OFADD__(*a2, v16);
    uint64_t v18 = *a2 + v16;
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v18;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10084FEB4(uint64_t a1, void *a2)
{
  uint64_t v3 = (uint64_t *)(a1 + qword_100ADB660);
  uint64_t result = swift_beginAccess();
  int64_t v5 = 0;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(*v3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(*v3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v6 + 56) + 8 * i);
    BOOL v18 = __OFADD__(*a2, v17);
    uint64_t v19 = *a2 + v17;
    if (v18)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v19;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v11) {
      return result;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v11) {
        return result;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v11) {
          return result;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v11) {
      return result;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

ssize_t sub_10085001C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v1 + qword_100ADB650);
  swift_bridgeObjectRetain();
  NSString v7 = sub_10096BC00();
  swift_bridgeObjectRelease();
  uint64_t v8 = (const char *)[v7 fileSystemRepresentation];
  id v9 = v7;
  ssize_t result = getxattr(v8, "com.apple.fileprovider.testing.failSpeculativeDownload", 0, 0, 0, 1);
  if (result >= 1)
  {
    *(unsigned char *)(v1 + qword_100B0B5A0) = 1;
    id v11 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    unint64_t v12 = sub_10096B470();
    os_log_type_t v13 = sub_10096C5A0();
    if (os_log_type_enabled(v12, v13))
    {
      int64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v2;
      uint64_t v21 = v15;
      uint64_t v18 = v3;
      *(_DWORD *)int64_t v14 = 136315138;
      uint64_t v17 = *v6;
      unint64_t v16 = v6[1];
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_100719D44(v17, v16, &v21);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "💾 marking SpeculativeDownloadsDiskManagement as ailDownloadsWithInsufficiantStorage: for root %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v19);
    }
    else
    {

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_1008502CC(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  int v27 = a2;
  NSString v7 = (void (*)(uint64_t, uint64_t))sub_10096B480();
  uint64_t v28 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100846C3C();
  unint64_t v10 = *(void **)(a1 + 120);
  swift_bridgeObjectRetain();
  NSString v11 = sub_10096BC00();
  swift_bridgeObjectRelease();
  id v30 = 0;
  unsigned int v12 = [v10 setupForPath:v11 error:&v30];

  if (v12)
  {
    id v13 = v30;
    id v14 = [v10 totalSize];
    uint64_t v15 = v14;
    if (v14)
    {
      id v16 = [v14 longLongValue];
    }
    else
    {
      id v16 = 0;
    }
    *(void *)(a1 + 144) = v16;
    *(unsigned char *)(a1 + 152) = v15 == 0;
    if (os_variant_has_internal_content()) {
      sub_10085001C();
    }
    uint64_t v25 = (void *)swift_retain();
    sub_1008452E8(v25, a1);
    sub_100850C88(v27, a3, a4);
    return sub_100850658(a3, a4);
  }
  else
  {
    id v17 = v30;
    sub_10096ABF0();

    swift_willThrow();
    id v18 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    uint64_t v19 = sub_10096B470();
    int v20 = sub_10096C5C0();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      int v27 = v7;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      swift_getErrorValue();
      id v23 = Error.prettyDescription.getter(v29);
      id v30 = v23;
      NSString v7 = v27;
      sub_10096C8C0();
      *id v22 = v23;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v20, "💾 failed to register root path for speculative downloader: %@", v21, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, void))(v28 + 8))(v9, v7);
  }
}

uint64_t sub_100850658(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_10096B7D0();
  uint64_t v38 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10096C6E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_100B0B5B8;
  if (*(unsigned char *)(v3 + qword_100B0B5B8 + 8)) {
    uint64_t v15 = qword_100B0B548;
  }
  uint64_t v16 = *(void *)(v3 + v15);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v3 + 80) != 1 || (*(unsigned char *)(v3 + 96) & 1) != 0) {
    return result;
  }
  uint64_t v18 = *(void *)(v3 + 88);
  BOOL v19 = __OFADD__(v18, v16);
  uint64_t v20 = v18 + v16;
  if (v19)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_10096B0D0();
  sub_10096B080();
  double v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  double v23 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v20 > (uint64_t)v23)
  {
    uint64_t v34 = (uint64_t)v23;
    uint64_t v24 = qword_100B0B508;
    uint64_t v25 = *(void *)(v3 + qword_100B0B508);
    uint64_t v35 = v20;
    if (v25)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C750();
      swift_unknownObjectRelease();
      if (*(void *)(v3 + v24))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C720();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v3 + v24) = 0;
    swift_unknownObjectRelease();
    uint64_t v26 = sub_100011348(0, (unint64_t *)&qword_100ACB010);
    v33[1] = *(void *)(v3 + qword_100ADB658);
    v33[2] = v26;
    id v39 = _swiftEmptyArrayStorage;
    sub_10002DC44((unint64_t *)&qword_100ACF610, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
    sub_10002B7CC((uint64_t *)&unk_100ACB020);
    sub_100025500((unint64_t *)&qword_100ACF620, (uint64_t *)&unk_100ACB020);
    sub_10096CA60();
    uint64_t v27 = sub_10096C6F0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)(v3 + v24) = v27;
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v29 = v34;
    uint64_t v28 = v35;
    if (*(void *)(v3 + v24))
    {
      swift_getObjectType();
      uint64_t v30 = swift_allocObject();
      swift_weakInit();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1004B1508();
      sub_1006B7CE4(0, (uint64_t)v6, v37, v30);
      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
      uint64_t result = swift_release();
      if (!__OFSUB__(v28, v29))
      {
        dispatch_time_t v31 = dispatch_time(0x8000000000000000, 0);
        dispatch_time_t v32 = dispatch_time(v31, v28 - v29);
        sub_1006B7EAC(v32);
        sub_10096C730();
        return swift_unknownObjectRelease();
      }
LABEL_21:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100850B44()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = qword_100B0B508;
    if (*(void *)(result + qword_100B0B508))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C750();
      swift_unknownObjectRelease();
      if (*(void *)(v1 + v2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C720();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    uint64_t v3 = *(void (**)(uint64_t))(v1 + qword_100B0B510);
    if (v3)
    {
      swift_retain();
      v3(1);
      sub_1000705CC((uint64_t)v3);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100850C54()
{
  return sub_100850C88((void (*)(uint64_t, uint64_t))sub_10084FD44, (uint64_t)&unk_100AA0A38, (uint64_t)sub_100852FFC);
}

uint64_t sub_100850C88(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_10096B0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100850F20(0);
  if (v13)
  {
    id v17 = (unsigned __int8 *)(v3 + 80);
    swift_beginAccess();
    return *v17;
  }
  uint64_t v14 = v12;
  v26[0] = 0;
  uint64_t v15 = (void *)swift_retain();
  sub_1008453B0(v15, v7, (uint64_t)v26, a1);
  uint64_t v16 = v26[0];
  id v17 = (unsigned __int8 *)(v7 + 80);
  uint64_t result = swift_beginAccess();
  uint64_t v19 = v14 - v16;
  BOOL v20 = __OFSUB__(v14, v16);
  if (*(unsigned char *)(v7 + 80))
  {
    if (!v20)
    {
      if (v19 < *(void *)(v7 + qword_100B0B550))
      {
        *(unsigned char *)(v7 + 80) = 0;
        *(unsigned char *)(v7 + 72) = 1;
        sub_1004D2A2C();
        double v21 = *(void (**)(void))(v7 + qword_100B0B510);
        if (v21)
        {
          swift_retain();
          v21(0);
          sub_1000705CC((uint64_t)v21);
        }
      }
      return *v17;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(void *)(v7 + qword_100B0B558) >= v19) {
    return *v17;
  }
  *(unsigned char *)(v7 + 80) = 1;
  *(unsigned char *)(v7 + 72) = 1;
  sub_10096B0D0();
  sub_10096B080();
  double v23 = v22;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  double v24 = v23 * 1000000000.0;
  if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v24 < 9.22337204e18)
  {
    *(void *)(v7 + 88) = (uint64_t)v24;
    *(unsigned char *)(v7 + 96) = 0;
    *(unsigned char *)(v7 + 72) = 1;
    sub_1004D2A2C();
    sub_100850658(a2, a3);
    return *v17;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100850F20(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096B820();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v25 - v10;
  __chkstk_darwin(v9);
  char v13 = (char *)&v25 - v12;
  uint64_t v14 = v2 + qword_100B0B588;
  if (*(unsigned char *)(v2 + qword_100B0B588 + 8) == 1)
  {
    uint64_t v15 = v2 + qword_100ADB640;
    swift_beginAccess();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v26 = v15;
    v16(v13, v15, v4);
    sub_10096B810();
    sub_10096B800();
    char v17 = sub_10096B7F0();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v11, v4);
    if (a1 & 1) == 0 || (v17)
    {
      id v19 = [*(id *)(v2 + 120) freeSize];
      if (v19)
      {
        BOOL v20 = v19;
        double v21 = (uint64_t *)(v2 + qword_100B0B590);
        if (*(unsigned char *)(v2 + qword_100B0B590 + 8))
        {
          if (*(unsigned char *)(v2 + 152))
          {
            v18(v13, v4);

LABEL_14:
            uint64_t v14 = v2 + 128;
            return *(void *)v14;
          }
          double v21 = (uint64_t *)(v2 + 144);
        }
        uint64_t v22 = *v21;
        *(void *)(v2 + 128) = [v19 longLongValue];
        *(unsigned char *)(v2 + 136) = 0;
        if (v22 < (uint64_t)[v20 longLongValue])
        {
          *(void *)(v2 + 128) = v22;
          *(unsigned char *)(v2 + 136) = 0;
        }
        sub_10096B800();

        v18(v13, v4);
        uint64_t v23 = v26;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v23, v11, v4);
        swift_endAccess();
        goto LABEL_14;
      }
    }
    v18(v13, v4);
    goto LABEL_14;
  }
  return *(void *)v14;
}

uint64_t sub_10085120C()
{
  sub_10096CBD0(49);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v1._object = (void *)0x800000010099B770;
  sub_10096BDC0(v1);
  sub_10096D270();
  v2._object = (void *)0x800000010099B790;
  v2._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v2);
  return 0;
}

uint64_t sub_1008512C0(uint64_t a1)
{
  return sub_1008518F4(a1, (void *)0x80000001009B15D0);
}

void sub_1008512D4()
{
  NSString v0 = sub_10096BC00();
  int v1 = MGGetSInt32Answer();

  dword_100B0B5E8 = v1;
}

uint64_t sub_100851328(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a1;
  uint64_t v53 = *(void *)(a2 + 16);
  if (!v53) {
    return 0;
  }
  uint64_t v52 = a2 + 32;
  os_log_t v47 = (char *)&v55 + 2;
  uint64_t v48 = (char *)&v55 + 3;
  uint64_t v49 = a2;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  long long v50 = xmmword_100973BB0;
  while (1)
  {
    uint64_t v54 = v3;
    uint64_t v4 = (uint64_t *)(v52 + 16 * v3);
    uint64_t v6 = *v4;
    unint64_t v5 = v4[1];
    uint64_t v55 = 58;
    uint64_t v56 = 0xE100000000000000;
    __chkstk_darwin(v2);
    v46[2] = &v55;
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_100915C50(0x7FFFFFFFFFFFFFFFLL, 1, sub_100353A9C, (uint64_t)v46, v6, v5);
    swift_bridgeObjectRelease();
    int64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v55 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100021770(0, v8, 0);
      uint64_t v9 = (void *)v55;
      uint64_t v10 = v7 + 56;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_10096BD10();
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        uint64_t v55 = (uint64_t)v9;
        unint64_t v15 = v9[2];
        unint64_t v14 = v9[3];
        if (v15 >= v14 >> 1)
        {
          sub_100021770((char *)(v14 > 1), v15 + 1, 1);
          uint64_t v9 = (void *)v55;
        }
        v9[2] = v15 + 1;
        uint64_t v16 = &v9[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
        v10 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    if (v9[2] == 2) {
      break;
    }
    uint64_t v2 = swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v3 = v54 + 1;
    if (v54 + 1 == v53)
    {
      uint64_t v37 = 0;
LABEL_71:
      swift_bridgeObjectRelease();
      return v37;
    }
  }
  uint64_t v18 = v9[4];
  uint64_t v17 = v9[5];
  uint64_t v20 = v9[6];
  unint64_t v19 = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = HIBYTE(v19) & 0xF;
  uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v24 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v24 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = 0;
    goto LABEL_59;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    uint64_t v26 = (uint64_t)sub_100851CFC(v20, v19, 10);
    LOBYTE(v20) = v45;
LABEL_56:
    swift_bridgeObjectRelease();
    if (v20) {
      uint64_t v37 = 0;
    }
    else {
      uint64_t v37 = v26;
    }
LABEL_59:
    sub_100011348(0, qword_100ADCA38);
    sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v50;
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_1000240A4();
    *(void *)(v38 + 32) = v18;
    *(void *)(v38 + 40) = v17;
    id v39 = (void *)sub_10096C530();
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    NSString v40 = sub_10096BC00();
    swift_bridgeObjectRelease();
    unsigned __int8 v41 = [v39 evaluateWithObject:v40];

    if (v41) {
      goto LABEL_71;
    }
    goto LABEL_4;
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v20 & 0x1000000000000000) != 0) {
      uint64_t v25 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v25 = (unsigned __int8 *)sub_10096CC90();
    }
    uint64_t v26 = (uint64_t)sub_100851DE4(v25, v23, 10);
    LOBYTE(v20) = v27 & 1;
    goto LABEL_56;
  }
  uint64_t v55 = v20;
  uint64_t v56 = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v20 == 43)
  {
    if (!v22) {
      goto LABEL_75;
    }
    if (v22 == 1 || (BYTE1(v20) - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v26 = (BYTE1(v20) - 48);
    if (v22 != 2)
    {
      if ((BYTE2(v20) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v26 = 10 * (BYTE1(v20) - 48) + (BYTE2(v20) - 48);
      uint64_t v28 = v22 - 3;
      if (v28)
      {
        uint64_t v29 = (unsigned __int8 *)v48;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            goto LABEL_43;
          }
          uint64_t v31 = 10 * v26;
          if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63) {
            goto LABEL_43;
          }
          uint64_t v26 = v31 + v30;
          if (__OFADD__(v31, v30)) {
            goto LABEL_43;
          }
          LOBYTE(v20) = 0;
          ++v29;
          if (!--v28) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_55:
    LOBYTE(v20) = 0;
    goto LABEL_56;
  }
  if (v20 != 45)
  {
    if (!v22 || (v20 - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v26 = (v20 - 48);
    if (v22 != 1)
    {
      if ((BYTE1(v20) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v26 = 10 * (v20 - 48) + (BYTE1(v20) - 48);
      uint64_t v32 = v22 - 2;
      if (v32)
      {
        id v33 = (unsigned __int8 *)v47;
        while (1)
        {
          unsigned int v34 = *v33 - 48;
          if (v34 > 9) {
            goto LABEL_43;
          }
          uint64_t v35 = 10 * v26;
          if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63) {
            goto LABEL_43;
          }
          uint64_t v26 = v35 + v34;
          if (__OFADD__(v35, v34)) {
            goto LABEL_43;
          }
          LOBYTE(v20) = 0;
          ++v33;
          if (!--v32) {
            goto LABEL_56;
          }
        }
      }
    }
    goto LABEL_55;
  }
  if (v22)
  {
    if (v22 != 1 && (BYTE1(v20) - 48) <= 9u)
    {
      if (v22 == 2)
      {
        LOBYTE(v20) = 0;
        uint64_t v26 = -(uint64_t)(BYTE1(v20) - 48);
        goto LABEL_56;
      }
      if ((BYTE2(v20) - 48) <= 9u)
      {
        uint64_t v26 = -10 * (BYTE1(v20) - 48) - (BYTE2(v20) - 48);
        uint64_t v36 = v22 - 3;
        if (!v36) {
          goto LABEL_55;
        }
        uint64_t v42 = (unsigned __int8 *)v48;
        while (1)
        {
          unsigned int v43 = *v42 - 48;
          if (v43 > 9) {
            break;
          }
          uint64_t v44 = 10 * v26;
          if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63) {
            break;
          }
          uint64_t v26 = v44 - v43;
          if (__OFSUB__(v44, v43)) {
            break;
          }
          LOBYTE(v20) = 0;
          ++v42;
          if (!--v36) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_43:
    uint64_t v26 = 0;
    LOBYTE(v20) = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_1008518E0(uint64_t a1)
{
  return sub_1008518F4(a1, (void *)0x80000001009B15B0);
}

uint64_t sub_1008518F4(uint64_t a1, void *a2)
{
  sub_10096CBD0(27);
  v4._uint64_t countAndFlagsBits = 0xD000000000000019;
  v4._object = a2;
  sub_10096BDC0(v4);
  sub_10096CDF0();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_100851994(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_100851AEC((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_100851AEC((uint64_t)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_100851AEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v19 = (unint64_t *)result;
  uint64_t v24 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    sub_100347A00(*(void *)(a3 + 56) + 16 * v11, (uint64_t)v23);
    uint64_t v21 = v12;
    sub_100347A00((uint64_t)v23, (uint64_t)v22);
    sub_100347A00((uint64_t)v22, (uint64_t)v20);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    sub_10002B770((uint64_t)&v21, &qword_100ADCA28);
    sub_10000A63C((uint64_t)v20);
    if (Strong)
    {
      swift_unknownObjectRelease();
      uint64_t result = sub_10000A63C((uint64_t)v23);
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_1009290B4(v19, a2, v24, a3);
      }
    }
    else
    {
      uint64_t result = sub_10000A63C((uint64_t)v23);
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v9) {
    return sub_1009290B4(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return sub_1009290B4(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 2;
  if (v14 + 2 >= v9) {
    return sub_1009290B4(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_5;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9) {
    return sub_1009290B4(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_1009290B4(v19, a2, v24, a3);
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unsigned __int8 *sub_100851CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10096BED0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10003C9C8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_10096CC90();
  }
LABEL_7:
  unint64_t v11 = sub_100851DE4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100851DE4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100852060()
{
  sub_10096CBD0(49);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v1._object = (void *)0x800000010099B770;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x800000010099B790;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_10085211C()
{
  return swift_deallocObject();
}

uint64_t sub_10085212C(uint64_t a1)
{
  return sub_100849700(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_100852138()
{
  return swift_deallocObject();
}

uint64_t sub_100852148()
{
  return swift_deallocObject();
}

uint64_t sub_100852158(uint64_t a1)
{
  return sub_100849940(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_100852164()
{
  return swift_deallocObject();
}

uint64_t sub_100852174()
{
  sub_10096CBD0(49);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v1._object = (void *)0x800000010099B770;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x800000010099B790;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v3);
  return 0;
}

uint64_t sub_100852230(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = *(void *)(a2 + 160);
  swift_retain();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return v4;
}

void *sub_1008522E8(uint64_t a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  unsigned __int8 v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  unsigned __int8 v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v15[1] = v1;
    unsigned __int8 v16 = _swiftEmptyArrayStorage;
    sub_10044625C(0, v7, 0);
    unsigned __int8 v8 = v16;
    uint64_t v9 = *(void *)(sub_10002B7CC(&qword_100AD68D8) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    do
    {
      swift_getAtKeyPath();
      unsigned __int8 v16 = v8;
      unint64_t v13 = v8[2];
      unint64_t v12 = v8[3];
      if (v13 >= v12 >> 1)
      {
        sub_10044625C(v12 > 1, v13 + 1, 1);
        unsigned __int8 v8 = v16;
      }
      void v8[2] = v13 + 1;
      sub_10001AE98((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, &qword_100AD65C0);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1008524C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v5 = sub_10002B7CC(&qword_100AD6F18);
  __chkstk_darwin(v5 - 8);
  int64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_10002B7CC(&qword_100AD68D8);
  uint64_t v8 = __chkstk_darwin(v42);
  uint64_t v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v36 = (uint64_t)&v36 - v11;
  uint64_t v37 = v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unsigned __int8 v16 = (unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  id v39 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v41) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v40 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    uint64_t v24 = *(void *)(v44 + 56) + 24 * v20;
    uint64_t v25 = *(void **)v24;
    unsigned int v26 = *(void **)(v24 + 8);
    char v27 = *(void **)(v24 + 16);
    swift_retain();
    id v28 = v25;
    id v29 = v26;
    sub_10084ED1C(v28, v26, v27, v7);
    if (v3)
    {
      uint64_t v35 = v39;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      return (uint64_t)v35;
    }
    swift_release();

    if ((*v16)(v7, 1, v42) == 1)
    {
      uint64_t result = sub_10002B770((uint64_t)v7, &qword_100AD6F18);
    }
    else
    {
      uint64_t v30 = v36;
      sub_10001AE98((uint64_t)v7, v36, &qword_100AD68D8);
      sub_10001AE98(v30, v38, &qword_100AD68D8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v39 = (void *)sub_1006A4188(0, v39[2] + 1, 1, (unint64_t)v39);
      }
      unint64_t v32 = v39[2];
      unint64_t v31 = v39[3];
      if (v32 >= v31 >> 1) {
        id v39 = (void *)sub_1006A4188(v31 > 1, v32 + 1, 1, (unint64_t)v39);
      }
      uint64_t v33 = v38;
      unsigned int v34 = v39;
      v39[2] = v32 + 1;
      uint64_t result = sub_10001AE98(v33, (uint64_t)v34+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v32, &qword_100AD68D8);
    }
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v41)
  {
LABEL_32:
    uint64_t v35 = v39;
    swift_release();
    return (uint64_t)v35;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v41) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v40 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1008528E4(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100AD6F20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v7 = *(void *)(v45 - 8);
  uint64_t v8 = __chkstk_darwin(v45);
  uint64_t v41 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v40 = (uint64_t)&v37 - v10;
  uint64_t v11 = sub_10002B7CC(&qword_100ACCA30);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unsigned __int8 v16 = (char *)&v37 - v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v44 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v39 = v7;
  uint64_t v21 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v22 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v42 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v24 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v24);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_19:
    sub_10002B70C(*(void *)(v22 + 56) + *(void *)(v46 + 72) * v26, (uint64_t)v16, &qword_100ACCA30);
    sub_10001AE98((uint64_t)v16, (uint64_t)v14, &qword_100ACCA30);
    sub_10084F1A4((uint64_t)v14, v6);
    if (v2)
    {
      sub_10002B770((uint64_t)v14, &qword_100ACCA30);
      uint64_t v36 = v42;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v36;
    }
    sub_10002B770((uint64_t)v14, &qword_100ACCA30);
    if ((*v21)(v6, 1, v45) == 1)
    {
      uint64_t result = sub_10002B770((uint64_t)v6, (uint64_t *)&unk_100AD6F20);
    }
    else
    {
      sub_10001AE98((uint64_t)v6, v40, &qword_100AD65C0);
      sub_10001AE98(v40, v41, &qword_100AD65C0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v42 = (void *)sub_1006A419C(0, v42[2] + 1, 1, (unint64_t)v42);
      }
      unint64_t v31 = v42[2];
      unint64_t v30 = v42[3];
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        unint64_t v37 = v42[2];
        unint64_t v38 = v31 + 1;
        uint64_t v35 = (void *)sub_1006A419C(v30 > 1, v31 + 1, 1, (unint64_t)v42);
        unint64_t v31 = v37;
        unint64_t v32 = v38;
        uint64_t v42 = v35;
      }
      uint64_t v33 = v41;
      unsigned int v34 = v42;
      v42[2] = v32;
      uint64_t result = sub_10001AE98(v33, (uint64_t)v34+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v31, &qword_100AD65C0);
    }
  }
  int64_t v29 = v24 + 1;
  if (v24 + 1 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 2;
  if (v24 + 2 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 3;
  if (v24 + 3 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 4;
  if (v24 + 4 >= v44)
  {
LABEL_32:
    uint64_t v36 = v42;
    goto LABEL_33;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v24 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void *sub_100852D88(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = *(void **)(a2 + qword_100ADA010);
  id v5 = v4;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_100852E44(void *a1)
{
  return sub_100852E5C(a1);
}

uint64_t sub_100852E5C(void *a1)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10096CBD0(21);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v3._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x2065766974636120;
  v4._object = (void *)0xED000073656C7572;
  sub_10096BDC0(v4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return 0x202092949FF0;
}

uint64_t sub_100852FC4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100852FFC()
{
  return sub_100850B44();
}

unint64_t sub_100853018()
{
  unint64_t result = qword_100ADCA10;
  if (!qword_100ADCA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCA10);
  }
  return result;
}

uint64_t sub_10085306C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1008530A4()
{
  unint64_t result = qword_100ADCA20;
  if (!qword_100ADCA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCA20);
  }
  return result;
}

uint64_t sub_1008530F8(void *a1, unsigned __int8 *a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated] = 1;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_1008531B0()
{
  return swift_deallocObject();
}

uint64_t sub_1008531C0(uint64_t a1)
{
  return sub_10084AB94(a1, *(uint64_t **)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (void (*)(uint64_t, uint64_t))sub_10037C394);
}

uint64_t sub_1008531F4()
{
  return swift_deallocObject();
}

uint64_t sub_100853204(void *a1, void *a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  sub_10027994C((char *)a2, &v6);
  if (!v2)
  {
    if (!objc_sync_exit(a1)) {
      return v6;
    }
LABEL_8:
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  uint64_t result = objc_sync_exit(a1);
  if (result) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1008532CC(void *a1, char *a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_100843254(v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) != *(void *)(*(void *)v4 + 16))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_100851994(v7);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v8;
    swift_bridgeObjectRelease();
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a1);
  }
  return v6;
}

unint64_t sub_10085340C()
{
  unint64_t result = qword_100ADCA30;
  if (!qword_100ADCA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCA30);
  }
  return result;
}

uint64_t sub_100853460()
{
  return swift_deallocObject();
}

uint64_t sub_100853470(uint64_t a1)
{
  return sub_100849DD4(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_10085347C()
{
  return swift_deallocObject();
}

uint64_t sub_10085348C()
{
  return swift_deallocObject();
}

uint64_t sub_10085349C(uint64_t a1)
{
  return sub_100849B84(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_1008534A8()
{
  return swift_deallocObject();
}

uint64_t sub_1008534B8()
{
  return swift_deallocObject();
}

uint64_t sub_1008534C8(uint64_t a1)
{
  return sub_10084AB94(a1, *(uint64_t **)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (void (*)(uint64_t, uint64_t))sub_10016A2D0);
}

uint64_t sub_1008534FC()
{
  return swift_deallocObject();
}

uint64_t sub_10085350C()
{
  return swift_deallocObject();
}

uint64_t sub_10085351C(uint64_t a1)
{
  return sub_10084ADE8(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_100853528()
{
  return swift_deallocObject();
}

uint64_t sub_10085353C()
{
  return 32;
}

__n128 sub_100853548(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_100853564()
{
  return swift_deallocObject();
}

uint64_t sub_100853574(uint64_t a1)
{
  return sub_10084A4B4(a1, *(void ***)(v1 + 16), *(void (**)(void **__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_100853580()
{
  return swift_deallocObject();
}

uint64_t sub_100853590()
{
  return sub_100852174();
}

uint64_t sub_100853598()
{
  return swift_deallocObject();
}

uint64_t sub_1008535A8()
{
  return swift_deallocObject();
}

uint64_t sub_1008535B8()
{
  return swift_deallocObject();
}

uint64_t sub_1008535C8(uint64_t a1)
{
  return sub_10084A26C(a1, *(_WORD **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_1008535D4()
{
  return swift_deallocObject();
}

uint64_t sub_1008535E4()
{
  return swift_deallocObject();
}

uint64_t sub_1008535F4(uint64_t a1)
{
  return sub_10084A948(a1, *(void ***)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_100853600()
{
  return swift_deallocObject();
}

uint64_t sub_100853610()
{
  return swift_deallocObject();
}

uint64_t sub_100853620(uint64_t a1)
{
  return sub_10084A024(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_10085362C()
{
  return swift_deallocObject();
}

uint64_t sub_10085363C()
{
  return swift_deallocObject();
}

uint64_t sub_10085364C(uint64_t a1)
{
  return sub_10084A700(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_100853658()
{
  return swift_deallocObject();
}

uint64_t sub_100853668()
{
  return sub_10085120C();
}

uint64_t sub_1008536D8()
{
  uint64_t result = type metadata accessor for SnapshotCounters();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10085378C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 96))();
}

uint64_t sub_1008537D0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 104))();
}

uint64_t sub_100853814@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10096D510();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_1008539C8()
{
  sub_10002B7CC((uint64_t *)&unk_100AD0D38);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10097C0C0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100973BA0;
  *(void *)(v2 + 32) = 0x6F43657461657263;
  *(void *)(v2 + 40) = 0xEB00000000746E75;
  uint64_t v3 = *v0;
  *(void *)(v2 + 88) = &type metadata for UInt64;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = v3;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACECD0);
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 32) = v2;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100973BA0;
  *(void *)(v5 + 32) = 0x6F43657461647075;
  *(void *)(v5 + 40) = 0xEB00000000746E75;
  uint64_t v6 = v0[1];
  *(void *)(v5 + 88) = &type metadata for UInt64;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = v6;
  *(void *)(v1 + 88) = v4;
  *(void *)(v1 + 64) = v5;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100973BA0;
  *(void *)(v7 + 32) = 0x6F436574656C6564;
  *(void *)(v7 + 40) = 0xEB00000000746E75;
  uint64_t v8 = v0[2];
  *(void *)(v7 + 88) = &type metadata for UInt64;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = v8;
  *(void *)(v1 + 120) = v4;
  *(void *)(v1 + 96) = v7;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100973BA0;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 32) = 0x7461447465736572;
  *(void *)(v9 + 40) = 0xE900000000000065;
  uint64_t v10 = (char *)v0 + *(int *)(type metadata accessor for SnapshotCounters() + 28);
  uint64_t v11 = sub_10096B0E0();
  *(void *)(v9 + 88) = v11;
  uint64_t v12 = sub_10009C958((uint64_t *)(v9 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v12, v10, v11);
  *(void *)(v1 + 152) = v4;
  *(void *)(v1 + 128) = v9;
  return v1;
}

uint64_t sub_100853BCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(*(void *)v1 + 88);
  uint64_t v6 = *(void *)v1;
  uint64_t v7 = *(ValueMetadata **)(*(void *)v1 + 96);
  uint64_t v8 = *(void **)(v6 + 104);
  uint64_t v118 = v4;
  uint64_t v119 = v5;
  uint64_t v95 = v5;
  char v120 = v7;
  uint64_t v121 = v8;
  char v94 = v8;
  uint64_t v98 = type metadata accessor for PersistenceTrigger();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  char v96 = (char *)v88 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v114 = AssociatedTypeWitness;
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  int v112 = (char *)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  char v101 = (char *)v88 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v100 = (char *)v88 - v16;
  __chkstk_darwin(v15);
  unint64_t v102 = (char *)v88 - v17;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v103 = *(void *)(v18 - 8);
  uint64_t v104 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v105 = (char *)v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  BOOL v99 = (char *)v88 - v21;
  uint64_t v93 = v4;
  uint64_t v92 = v7;
  uint64_t v22 = type metadata accessor for SnapshotMutation();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v111 = (char *)v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v106 = (char *)v88 - v27;
  __chkstk_darwin(v26);
  int64_t v29 = (char *)v88 - v28;
  uint64_t v30 = sub_10096B480();
  uint64_t v108 = *(void *)(v30 - 8);
  uint64_t v109 = v30;
  __chkstk_darwin(v30);
  unint64_t v32 = (char *)v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  os_log_type_t v34 = sub_10064C500(v22);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v110 = a1;
  uint64_t v115 = v23 + 16;
  v35(v29, a1, v22);
  BOOL v116 = v2;
  swift_retain();
  uint64_t v107 = v32;
  uint64_t v36 = sub_10096B470();
  int v37 = v34;
  if (os_log_type_enabled(v36, v34))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    uint64_t v118 = v91;
    *(_DWORD *)uint64_t v38 = 136446466;
    int v90 = v37;
    if (v116[32]) {
      uint64_t v39 = 20550;
    }
    else {
      uint64_t v39 = 21318;
    }
    os_log_t v89 = v36;
    uint64_t v122 = sub_100719D44(v39, 0xE200000000000000, &v118);
    v88[1] = &v123;
    sub_10096C8C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v88[0] = v38 + 14;
    uint64_t v40 = v106;
    v35(v106, (uint64_t)v29, v22);
    uint64_t v41 = v35;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v29, v22);
    uint64_t v43 = sub_10064BBAC(v22);
    unint64_t v45 = v44;
    v42(v40, v22);
    uint64_t v122 = sub_100719D44(v43, v45, &v118);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    os_log_t v46 = v89;
    _os_log_impl((void *)&_mh_execute_header, v89, (os_log_type_t)v90, " ✍️  %{public}s snapshot mutation: %{public}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);

    swift_release();
    uint64_t v41 = v35;
  }
  (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
  uint64_t v47 = v111;
  v41(v111, v110, v22);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v49 = v112;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v88[-4], "from to  reason ");
      uint64_t v56 = v104;
      uint64_t v118 = v104;
      uint64_t v119 = v104;
      char v120 = &type metadata for Fields;
      uint64_t v121 = &type metadata for String;
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      char v58 = &v47[*(int *)(TupleTypeMetadata + 48)];
      uint64_t v59 = *(void *)&v47[*(int *)(TupleTypeMetadata + 64)];
      swift_bridgeObjectRelease();
      uint64_t v60 = v103;
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v105, v58, v56);
      unint64_t v61 = &v116[qword_100B0B5F0];
      swift_beginAccess();
      uint64_t v62 = *((void *)v61 + 1);
      BOOL v63 = __CFADD__(v62, 1);
      uint64_t v64 = v62 + 1;
      if (v63) {
        goto LABEL_22;
      }
      *((void *)v61 + 1) = v64;
      uint64_t v65 = v117;
      (*(void (**)(char *, uint64_t))(*(void *)v116 + 488))(v105, v59);
      uint64_t v117 = v65;
      unint64_t v66 = *(void (**)(char *, uint64_t))(v60 + 8);
      v66(v105, v56);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v66)(v47, v56);
      break;
    case 2:
      sub_100033BE8((uint64_t *)&unk_100AD7510);
      uint64_t v67 = v114;
      swift_getTupleTypeMetadata3();
      swift_bridgeObjectRelease();
      unint64_t v68 = v102;
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v102, v47, v67);
      char v69 = &v116[qword_100B0B5F0];
      swift_beginAccess();
      uint64_t v70 = *((void *)v69 + 2);
      BOOL v63 = __CFADD__(v70, 1);
      uint64_t v71 = v70 + 1;
      if (v63) {
        goto LABEL_23;
      }
      *((void *)v69 + 2) = v71;
      uint64_t v72 = v117;
      (*(void (**)(char *))(*(void *)v116 + 496))(v68);
LABEL_16:
      uint64_t v117 = v72;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v68, v114);
      break;
    case 3:
      uint64_t v73 = v114;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      uint64_t v74 = v100;
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v100, v47, v73);
      uint64_t v75 = v117;
      (*(void (**)(char *))(*(void *)v116 + 504))(v74);
      uint64_t v117 = v75;
      return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v74, v114);
    case 4:
      uint64_t v76 = v114;
      uint64_t v77 = v47[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_bridgeObjectRelease();
      unint64_t v68 = v101;
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v101, v47, v76);
      uint64_t v72 = v117;
      (*(void (**)(char *, uint64_t))(*(void *)v116 + 512))(v68, v77);
      goto LABEL_16;
    case 5:
      uint64_t v78 = v114;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v49, v47, v78);
      uint64_t Strong = swift_weakLoadStrong();
      if (!Strong) {
        goto LABEL_24;
      }
      uint64_t v80 = Strong;
      uint64_t v81 = v113;
      uint64_t v82 = v114;
      uint64_t v83 = v96;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v96, v49, v114);
      uint64_t v84 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v86 = swift_getAssociatedConformanceWitness();
      uint64_t v118 = v82;
      uint64_t v119 = v84;
      char v120 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v121 = (void *)v86;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = v98;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *))(*(void *)v80 + 312))(v83);
      swift_release();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v83, v87);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v112, v82);
      break;
    default:
      uint64_t v50 = v104;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      uint64_t v51 = v103;
      uint64_t v52 = v99;
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v99, v47, v50);
      uint64_t v53 = &v116[qword_100B0B5F0];
      swift_beginAccess();
      if (*v53 == -1)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x100854958);
      }
      ++*v53;
      uint64_t v54 = v117;
      (*(void (**)(char *))(*(void *)v116 + 480))(v52);
      uint64_t v117 = v54;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v50);
      break;
  }
  return result;
}

uint64_t sub_100854970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 80);
  uint64_t v31 = *(void *)(*(void *)v3 + 96);
  uint64_t v33 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = v3;
  sub_10096B0D0();
  uint64_t v15 = v45;
  uint64_t v16 = sub_100834190((uint64_t)v14, sub_100859A94, (uint64_t)v34);
  uint64_t v45 = v15;
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return v11;
  }
  uint64_t v18 = v16;
  uint64_t v29 = a3;
  uint64_t v30 = v10;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v20)
  {
    uint64_t v43 = v18;
    uint64_t v44 = v20;
    uint64_t v41 = 58;
    unint64_t v42 = 0xE100000000000000;
    uint64_t v39 = 47;
    unint64_t v40 = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v11 = sub_10096C910();
    swift_bridgeObjectRelease();
    return v11;
  }
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  swift_allocError();
  uint64_t v23 = v22;
  *(void *)uint64_t v22 = a1;
  *((void *)v22 + 1) = a2;
  uint64_t v43 = v29;
  sub_10096C1C0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v24 = v30;
  sub_10096C450();
  uint64_t v25 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v19) != 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v11 = v25 + 32;
    v27(&v23[*(int *)(TupleTypeMetadata2 + 48)], v24, v19);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v11;
  }
  uint64_t result = swift_errorRelease();
  __break(1u);
  return result;
}

uint64_t sub_100854D38()
{
  swift_release();
  swift_weakDestroy();
  sub_100859994(v0 + qword_100B0B5F0);
  return v0;
}

uint64_t sub_100854D70(uint64_t a1)
{
  type metadata accessor for SnapshotItem();
  uint64_t v3 = 0;
  uint64_t v8 = sub_10096C110();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 472);
  do
  {
    v4(a1, v3);
    uint64_t v6 = v5;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C170();
    swift_release();
    uint64_t v3 = v6;
  }
  while (v6);
  return v8;
}

uint64_t sub_100854EE4()
{
  sub_10096CBD0(21);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x3A76656E20;
  v2._object = (void *)0xE500000000000000;
  sub_10096BDC0(v2);
  v3._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 980837664;
  v4._object = (void *)0xE400000000000000;
  sub_10096BDC0(v4);
  v5._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  sub_10096BDC0(v6);
  return 0x3A736C643CLL;
}

uint64_t sub_10085501C()
{
  sub_10096CBD0(18);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x3A6C6378652120;
  v2._object = (void *)0xE700000000000000;
  sub_10096BDC0(v2);
  v3._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  sub_10096BDC0(v4);
  return 0x3A6C6564213CLL;
}

uint64_t sub_100855118(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v18 = a2;
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 632))();
  uint64_t v17 = 0;
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  sub_10002689C(a1, v7);
  sub_10096CBD0(27);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0x687370616E73202BLL;
  unint64_t v21 = 0xEB0000000020746FLL;
  uint64_t v8 = sub_10096BCD0();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = v8;
  v22._object = v10;
  sub_10096BDC0(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 10272;
  v23._object = (void *)0xE200000000000000;
  sub_10096BDC0(v23);
  uint64_t v19 = v5;
  sub_10014D284();
  v24._uint64_t countAndFlagsBits = sub_10096C9C0();
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 0x73656972746E6520;
  v25._object = (void *)0xEA00000000003A29;
  sub_10096BDC0(v25);
  sub_10059A0E8(0x687370616E73202BLL, (void *)0xEB0000000020746FLL, v7, v6);
  swift_bridgeObjectRelease();
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v13 = sub_10002689C(a1, v11);
  __chkstk_darwin(v13);
  v15[16] = v18 & 1;
  uint64_t v16 = v3;
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_100859A54, (uint64_t)v15, v11, (uint64_t)&type metadata for () + 8, v12);
}

uint64_t sub_100855368()
{
  return sub_100854EE4();
}

uint64_t sub_100855374()
{
  return sub_10085501C();
}

uint64_t sub_10085537C()
{
  sub_10096CBD0(57);
  v1._uint64_t countAndFlagsBits = 0x6F43657461657263;
  v1._object = (void *)0xEC0000003D746E75;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x4365746164707520;
  v3._object = (void *)0xED00003D746E756FLL;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x436574656C656420;
  v5._object = (void *)0xED00003D746E756FLL;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x6144746573657220;
  v7._object = (void *)0xEB000000003D6574;
  sub_10096BDC0(v7);
  type metadata accessor for SnapshotCounters();
  v8._uint64_t countAndFlagsBits = sub_10096AFE0();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100855528(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100ADCBA0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_100859940();
  sub_10096D590();
  v8[15] = 0;
  sub_10096D1F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_10096D1F0();
    v8[13] = 2;
    sub_10096D1F0();
    type metadata accessor for SnapshotCounters();
    v8[12] = 3;
    sub_10096B0E0();
    sub_10016D354(&qword_100ACB9B8);
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10085571C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v23 = sub_10096B0E0();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10002B7CC(&qword_100ADCB90);
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  Swift::String v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SnapshotCounters();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v11 = 0;
  v11[1] = 0;
  v11[2] = 0;
  uint64_t v12 = (char *)v11 + *(int *)(v9 + 36);
  sub_10096B0B0();
  sub_10002689C(a1, a1[3]);
  sub_100859940();
  sub_10096D570();
  if (!v2)
  {
    uint64_t v20 = v12;
    uint64_t v14 = v22;
    uint64_t v13 = v23;
    uint64_t v15 = v24;
    char v29 = 0;
    uint64_t *v11 = sub_10096D090();
    char v28 = 1;
    v11[1] = sub_10096D090();
    char v27 = 2;
    v11[2] = sub_10096D090();
    char v26 = 3;
    sub_10016D354(&qword_100ACB9F0);
    uint64_t v19 = v5;
    uint64_t v17 = v25;
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
    (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v20, v19, v13);
    sub_1008599F0((uint64_t)v11, v15);
  }
  sub_1000268E0((uint64_t)a1);
  return sub_100859994((uint64_t)v11);
}

uint64_t sub_100855A48()
{
  uint64_t result = 0x6F43657461657263;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1633972341;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1701602660;
LABEL_4:
      uint64_t result = v2 | 0x6F43657400000000;
      break;
    case 3:
      uint64_t result = 0x7461447465736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100855AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100859560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100855AFC(uint64_t a1)
{
  unint64_t v2 = sub_100859940();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100855B38(uint64_t a1)
{
  unint64_t v2 = sub_100859940();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100855B74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10085571C(a1, a2);
}

uint64_t sub_100855B8C(void *a1)
{
  return sub_100855528(a1);
}

void sub_100855BA8()
{
}

void sub_100855C0C()
{
}

void sub_100855C70()
{
}

void sub_100855CD4()
{
}

void sub_100855D38()
{
}

uint64_t sub_100855D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = v21;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v10)
  {
    uint64_t v12 = v6;
    uint64_t v13 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                           + 56))(v20, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v15 = &v9[*(int *)(v5 + 36)];
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = v20;
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v20, v15, v16);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v5);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
    }
  }
  return result;
}

uint64_t sub_10085608C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v2)
  {
    LOBYTE(v5) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v9, 1, v5) != 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v5 & 1;
}

void sub_10085622C()
{
}

void sub_100856290()
{
}

void sub_1008562F4()
{
}

void sub_100856358()
{
}

void sub_1008563BC()
{
}

void sub_100856420()
{
}

void sub_100856484()
{
}

void sub_1008564E8()
{
}

void sub_10085654C()
{
}

void sub_1008565B0()
{
}

void sub_100856614()
{
}

void sub_100856678()
{
}

void sub_1008566DC()
{
}

void sub_100856740()
{
}

void sub_1008567A4()
{
}

void sub_100856808()
{
}

void sub_10085686C()
{
}

void sub_1008568D0()
{
}

void sub_100856934()
{
}

void sub_100856998()
{
}

void sub_1008569FC()
{
}

void sub_100856A60()
{
}

void sub_100856AC4()
{
}

void sub_100856B28()
{
}

void sub_100856B8C()
{
}

void sub_100856BF0()
{
}

void sub_100856C54()
{
}

void sub_100856CB8()
{
}

void sub_100856D1C()
{
}

void sub_100856D80()
{
}

void sub_100856DE4()
{
}

void sub_100856E48()
{
}

void sub_100856EAC()
{
}

void sub_100856F10()
{
}

void sub_100856F74()
{
}

void sub_100856FD8()
{
}

void sub_10085703C()
{
}

void sub_1008570A0()
{
}

void sub_100857104()
{
}

void sub_100857168()
{
}

uint64_t sub_1008571CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v5 = *v2;
  uint64_t v30 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 240))(a1, 1);
  if (!v3)
  {
    uint64_t v11 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(v9, 1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v13 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v15 = swift_getAssociatedConformanceWitness();
      uint64_t v26 = AssociatedTypeWitness;
      uint64_t v27 = v13;
      uint64_t v28 = AssociatedConformanceWitness;
      uint64_t v29 = v15;
      uint64_t v16 = type metadata accessor for FileItemVersion();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v25, 1, 1, v16);
    }
    else
    {
      uint64_t v24 = &v9[*(int *)(v30 + 40)];
      uint64_t v17 = swift_getAssociatedTypeWitness();
      uint64_t v18 = swift_getAssociatedTypeWitness();
      uint64_t v19 = swift_getAssociatedConformanceWitness();
      uint64_t v20 = swift_getAssociatedConformanceWitness();
      uint64_t v26 = v17;
      uint64_t v27 = v18;
      uint64_t v28 = v19;
      uint64_t v29 = v20;
      uint64_t v21 = type metadata accessor for FileItemVersion();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v25, v24, v21);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v30);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
    }
  }
  return result;
}

uint64_t sub_1008575B8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_10096C890();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v17 - v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v2)
  {
    uint64_t v13 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
      uint64_t v14 = &v12[*(int *)(v5 + 48)];
      uint64_t v6 = *(void *)&v14[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      uint64_t WitnessTable = swift_getWitnessTable();
      FileItem.kind.getter(v5, WitnessTable);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v5);
    }
  }
  return v6;
}

void sub_100857848()
{
}

void sub_1008578B0()
{
}

void sub_100857914()
{
}

void sub_100857978()
{
}

uint64_t sub_1008579DC()
{
  sub_100854D38();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Snapshot()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for SnapshotCounters()
{
  uint64_t result = qword_100ADCB18;
  if (!qword_100ADCB18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100857A98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_10096B0E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100857B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_10096B0E0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_100857BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100857C58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_100857CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100857D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10096B0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100857DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100857E00);
}

uint64_t sub_100857E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100857E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100857E84);
}

uint64_t sub_100857E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_100857EF8()
{
  uint64_t result = sub_10096B0E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotFPRecursiveProperties()
{
  return &type metadata for SnapshotFPRecursiveProperties;
}

ValueMetadata *type metadata accessor for SnapshotFSRecursiveProperties()
{
  return &type metadata for SnapshotFSRecursiveProperties;
}

uint64_t sub_100857FB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100857FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = sub_10096C890();
  uint64_t v12 = *(void *)(v48 - 8);
  uint64_t v13 = __chkstk_darwin(v48);
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v51 = a1;
  if (a1 == a3 && a2 == a4 || (v38 = v18, uint64_t v47 = v17, (sub_10096D2D0() & 1) != 0))
  {
LABEL_4:
    char v21 = 0;
    return v21 & 1;
  }
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0())
  {
LABEL_18:
    swift_bridgeObjectRelease();
    char v21 = 1;
    return v21 & 1;
  }
  uint64_t v23 = 0;
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)v49 + 256);
  uint64_t v41 = *(void *)v49 + 256;
  unint64_t v42 = v24;
  uint64_t v45 = a5;
  os_log_t v46 = (void (**)(char *, void *, uint64_t))(v50 + 16);
  uint64_t v39 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
  unint64_t v40 = (void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v43 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v44 = (void (**)(char *, uint64_t))(v50 + 8);
  while (1)
  {
    BOOL v25 = sub_10096C130();
    sub_10096C0E0();
    if (v25)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v20, a5+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v23, AssociatedTypeWitness);
      uint64_t v26 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_10096CC20();
    if (v38 != 8) {
      break;
    }
    v57[0] = result;
    (*v46)(v20, v57, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_10:
    uint64_t v52 = v26;
    uint64_t v27 = v20;
    (*v40)(v16, v20, AssociatedTypeWitness);
    v57[0] = v51;
    v57[1] = a2;
    uint64_t v28 = a2;
    uint64_t v55 = 58;
    unint64_t v56 = 0xE100000000000000;
    uint64_t v53 = 47;
    unint64_t v54 = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v29 = sub_10096C910();
    uint64_t v31 = v30;
    unint64_t v32 = v16;
    uint64_t v33 = v47;
    (*v39)(v47, 1, 1, AssociatedTypeWitness);
    uint64_t v34 = v58;
    uint64_t v35 = v42(v32, v29, v31, v33);
    if (v34)
    {
      swift_bridgeObjectRelease();
      (*v43)(v33, v48);
      (*v44)(v32, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return v21 & 1;
    }
    uint64_t v36 = v35;
    uint64_t v58 = 0;
    (*v43)(v33, v48);
    swift_bridgeObjectRelease();
    v57[0] = v36;
    sub_10096C1C0();
    swift_getWitnessTable();
    uint64_t v37 = sub_10096C460();
    swift_bridgeObjectRelease();
    (*v44)(v32, AssociatedTypeWitness);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v16 = v32;
    a5 = v45;
    ++v23;
    a2 = v28;
    uint64_t v20 = v27;
    if (v52 == sub_10096C1A0()) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100858514()
{
  return sub_10085378C();
}

uint64_t sub_100858538()
{
  return sub_1008537D0();
}

uint64_t sub_10085855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  return sub_100859760(a1, a5);
}

uint64_t sub_100858588(uint64_t a1)
{
  return sub_100854D70(a1);
}

uint64_t sub_1008585AC(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SnapshotItem();
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v42 - v13;
  if (a3 < 61)
  {
    if (*a4 <= 0)
    {
      uint64_t v20 = a2[3];
      uint64_t v21 = a2[4];
      sub_10002689C(a2, v20);
      sub_10059A0E8(0xD00000000000001BLL, (void *)0x80000001009A3D20, v20, v21);
      return 0;
    }
    uint64_t v46 = *a4;
    uint64_t v47 = a4;
    uint64_t v44 = a3;
    uint64_t v45 = v11;
    uint64_t v48 = v12;
    (*(void (**)(char *, uint64_t))(v12 + 16))(v14, a1);
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    uint64_t v19 = swift_checkMetadataState();
    if ((v18(v19, AssociatedConformanceWitness) & 1) != 0
      || ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v19, AssociatedConformanceWitness) & 1) != 0)
    {
      (*(void (**)(void *__return_ptr, char *))(*v4 + 264))(v52, v14);
      sub_10016B800((uint64_t)v52, (uint64_t)v49);
      sub_10016B800((uint64_t)v49, (uint64_t)&v50);
      uint64_t v23 = v45;
      uint64_t v24 = (uint64_t)&v14[*(int *)(v45 + 52)];
      sub_10016B800(v24, (uint64_t)v49);
      sub_1000DBD88((uint64_t)v49);
      sub_10016B800((uint64_t)&v50, v24);
      uint64_t v25 = *v5;
      if (v5[4])
      {
        uint64_t v26 = (*(uint64_t (**)(char *))(v25 + 320))(v14);
        uint64_t v43 = 0;
        uint64_t v29 = &v14[*(int *)(v23 + 60)];
        *(void *)uint64_t v29 = v26;
        *((void *)v29 + 1) = v30;
        v29[16] = v28 & 1;
      }
      else
      {
        uint64_t v27 = (*(uint64_t (**)(char *))(v25 + 312))(v14);
        uint64_t v43 = 0;
        unint64_t v32 = &v14[*(int *)(v23 + 56)];
        *(void *)unint64_t v32 = v27;
        *((void *)v32 + 1) = v33;
        *((void *)v32 + 2) = v34;
        v32[24] = v31 & 1;
      }
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v23 = v45;
    }
    uint64_t v36 = a2[3];
    uint64_t v35 = a2[4];
    sub_10002689C(a2, v36);
    uint64_t v50 = 0;
    uint64_t v51 = (void *)0xE000000000000000;
    swift_getWitnessTable();
    sub_10096D270();
    sub_10059A0E8(v50, v51, v36, v35);
    swift_bridgeObjectRelease();
    uint64_t v37 = v47;
    *uint64_t v47 = v46 - 1;
    uint64_t WitnessTable = swift_getWitnessTable();
    if (FileItem.kind.getter(v23, WitnessTable) == 1)
    {
      uint64_t v39 = a2[3];
      uint64_t v40 = a2[4];
      uint64_t v41 = sub_10002689C(a2, v39);
      __chkstk_darwin(v41);
      *(&v42 - 4) = (uint64_t)v5;
      *(&v42 - 3) = (uint64_t)v14;
      *(&v42 - 2) = v44;
      *(&v42 - 1) = (uint64_t)v37;
      sub_10059A1B8(32, 0xE100000000000000, (void (*)(void *))sub_100859A74, (uint64_t)(&v42 - 6), v39, (uint64_t)&type metadata for () + 8, v40);
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v23);
  }
  else
  {
    uint64_t v15 = a2[3];
    uint64_t v16 = a2[4];
    sub_10002689C(a2, v15);
    sub_10059A0E8(0xD000000000000018, (void *)0x80000001009A3D00, v15, v16);
  }
  return 1;
}

void sub_100858AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a1;
  uint64_t v35 = a5;
  uint64_t v32 = a4;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v10;
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v28 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v28 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v28 - v15, a3, AssociatedTypeWitness);
  uint64_t v17 = (*(uint64_t (**)(char *))(*(void *)a2 + 688))(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  if (sub_10096C1A0())
  {
    uint64_t v18 = 0;
    char v31 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v29 = v32 + 1;
    BOOL v19 = __OFADD__(v32, 1);
    BOOL v30 = v19;
    uint64_t v32 = v8;
    uint64_t v33 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    uint64_t v20 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      BOOL v21 = sub_10096C130();
      sub_10096C0E0();
      if (v21)
      {
        uint64_t v22 = v36;
        (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v36, v17+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v18, v7);
        uint64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v27 = sub_10096CC20();
        uint64_t v22 = v36;
        if (v28 != 8) {
          goto LABEL_19;
        }
        BOOL v21 = v27;
        uint64_t v38 = v27;
        (*v33)(v36, &v38, v7);
        swift_unknownObjectRelease();
        uint64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      (*v31)(v11, v22, v7);
      if (v30) {
        break;
      }
      BOOL v21 = (BOOL)v24;
      char v25 = sub_1008585AC(v11, v34, v29, v35);
      if (v37) {
        goto LABEL_20;
      }
      char v26 = v25;
      (*v20)(v11, v7);
      if (v26)
      {
        ++v18;
        if (v23 != sub_10096C1A0()) {
          continue;
        }
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100858ED8(void *a1, char a2, void **a3)
{
  unint64_t v54 = a1;
  uint64_t v6 = type metadata accessor for SnapshotCounters();
  __chkstk_darwin(v6 - 8);
  uint64_t v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v49 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v19 = (char *)&v45 - v18;
  uint64_t v20 = *(void *)(v13 - 8);
  uint64_t v21 = __chkstk_darwin(v17);
  uint64_t v46 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  char v25 = (char *)&v45 - v24;
  uint64_t v26 = 3000;
  if ((a2 & 1) == 0) {
    uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v59 = v26;
  (*(void (**)(uint64_t))(*a3[2] + 96))(v23);
  uint64_t v27 = (void (*)(char *, uint64_t))(*a3)[30];
  uint64_t v51 = (uint64_t)(*a3 + 30);
  uint64_t v52 = v27;
  v27(v12, 1);
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = v13;
  if (v3)
  {
    swift_errorRelease();
    uint64_t v28 = v12;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v55 + 8);
    v29(v28, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, 1, 1, v13);
    uint64_t v30 = v57;
    char v31 = v49;
LABEL_7:
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v19, v30);
    goto LABEL_9;
  }
  uint64_t v45 = *(void (**)(char *, uint64_t))(v55 + 8);
  v45(v12, AssociatedTypeWitness);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v13);
  uint64_t v33 = v13;
  uint64_t v30 = v57;
  char v31 = v49;
  if (v32 == 1)
  {
    uint64_t v29 = v45;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v19, v33);
  sub_1008585AC((uint64_t)v25, v54, 1, &v59);
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v33);
  uint64_t v29 = v45;
LABEL_9:
  (*(void (**)(uint64_t))(*a3[2] + 104))(v34);
  uint64_t v35 = v53;
  v52(v31, 1);
  v29(v31, v47);
  uint64_t v36 = v48;
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v35, 1, v48);
  uint64_t v38 = (uint64_t)v50;
  uint64_t v39 = v54;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v57);
  }
  else
  {
    uint64_t v40 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v46, v35, v36);
    sub_1008585AC(v40, v39, 1, &v59);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v40, v36);
  }
  uint64_t v41 = v39[3];
  uint64_t v42 = v39[4];
  sub_10002689C(v39, v41);
  strcpy((char *)v58, "+ counters: ");
  BYTE5(v58[1]) = 0;
  HIWORD(v58[1]) = -5120;
  uint64_t v43 = (uint64_t)a3 + qword_100B0B5F0;
  swift_beginAccess();
  sub_1008599F0(v43, v38);
  v60._uint64_t countAndFlagsBits = sub_10085537C();
  sub_10096BDC0(v60);
  swift_bridgeObjectRelease();
  sub_100859994(v38);
  sub_10059A0E8(v58[0], (void *)v58[1], v41, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100859560(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43657461657263 && a2 == 0xEB00000000746E75;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43657461647075 && a2 == 0xEB00000000746E75 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F436574656C6564 && a2 == 0xEB00000000746E75 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100859760(uint64_t a1, void (*a2)(unsigned char *))
{
  type metadata accessor for SnapshotItem();
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v5 = sub_10096D510();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-v7];
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  sub_100853814((void (*)(unsigned char *))sub_1008598E4, (uint64_t)&v10[-v7]);
  a2(v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1008598E4(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(v1 + 16) + 240))(*(void *)(v1 + 24), 1);
  if (v2) {
    *a1 = v2;
  }
  return result;
}

unint64_t sub_100859940()
{
  unint64_t result = qword_100ADCB98;
  if (!qword_100ADCB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCB98);
  }
  return result;
}

uint64_t sub_100859994(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008599F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100859A54(void *a1)
{
  return sub_100858ED8(a1, *(unsigned char *)(v1 + 16), *(void ***)(v1 + 24));
}

void sub_100859A74(uint64_t a1)
{
  sub_100858AF8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100859A94(uint64_t a1, uint64_t a2)
{
  return sub_100857FD4(a1, a2, v2[2], v2[3], v2[4], v2[5]) & 1;
}

unsigned char *storeEnumTagSinglePayload for SnapshotCounters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100859B84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotCounters.CodingKeys()
{
  return &type metadata for SnapshotCounters.CodingKeys;
}

unint64_t sub_100859BC0()
{
  unint64_t result = qword_100ADCBA8;
  if (!qword_100ADCBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCBA8);
  }
  return result;
}

unint64_t sub_100859C18()
{
  unint64_t result = qword_100ADCBB0;
  if (!qword_100ADCBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCBB0);
  }
  return result;
}

unint64_t sub_100859C70()
{
  unint64_t result = qword_100ADCBB8[0];
  if (!qword_100ADCBB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100ADCBB8);
  }
  return result;
}

uint64_t sub_100859CC4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100859D10(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  return v3;
}

void sub_100859D20()
{
}

uint64_t sub_100859D84()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Schedulable()
{
  return swift_getGenericMetadata();
}

BOOL sub_100859DAC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 < v2) {
    return 1;
  }
  return v2 == v3 && *(void *)(a1 + 24) < *(void *)(a2 + 24);
}

BOOL sub_100859DDC(uint64_t *a1, uint64_t *a2)
{
  return sub_100859DAC(*a1, *a2);
}

uint64_t sub_100859E0C()
{
  return static Fields.filename.getter();
}

uint64_t sub_100859E14()
{
  return swift_getWitnessTable();
}

uint64_t sub_100859E30(char a1, void *a2)
{
  uint64_t v5 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 80)]];
      goto LABEL_34;
    case 2:
      uint64_t v20 = *(int *)(type metadata accessor for ItemMetadata() + 100);
      return sub_10025D404(*(void *)&v2[v20], 0);
    case 3:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 36)]];
      goto LABEL_34;
    case 4:
      id v9 = [a2 bindUnsignedShortParameter:*((unsigned __int16 *)v2 + 5)];
      goto LABEL_34;
    case 5:
      uint64_t v22 = *(int *)(type metadata accessor for ItemMetadata() + 28);
      goto LABEL_29;
    case 6:
      uint64_t v22 = *(int *)(type metadata accessor for ItemMetadata() + 32);
LABEL_29:
      uint64_t v27 = &v2[v22];
      uint64_t v28 = sub_10096B0E0();
      uint64_t v29 = *(void *)(v28 - 8);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v7, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v7, 0, 1, v28);
      uint64_t v10 = sub_10025D428((uint64_t)v7);
      sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ACB5E0);
      return v10;
    case 7:
      uint64_t v21 = type metadata accessor for ItemMetadata();
      return sub_10025D428((uint64_t)&v2[*(int *)(v21 + 116)]);
    case 8:
      type metadata accessor for ItemMetadata();
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v14 = sub_10025D67C(v30);
      goto LABEL_38;
    case 9:
      uint64_t v15 = type metadata accessor for ItemMetadata();
      return sub_10025D828(*(void *)&v2[*(int *)(v15 + 124)], v2[*(int *)(v15 + 124) + 8]);
    case 10:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 108)]];
      goto LABEL_34;
    case 11:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 40)]];
      goto LABEL_34;
    case 12:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 52)]];
      goto LABEL_34;
    case 13:
      uint64_t v26 = *((unsigned int *)v2 + 1);
      LOBYTE(v38[0]) = v2[8];
      return sub_10025D9F8(v26 | ((unint64_t)LOBYTE(v38[0]) << 32));
    case 14:
      goto LABEL_7;
    case 15:
      uint64_t v20 = *(int *)(type metadata accessor for ItemMetadata() + 104);
      return sub_10025D404(*(void *)&v2[v20], 0);
    case 16:
      uint64_t v8 = v2[*(int *)(type metadata accessor for ItemMetadata() + 84)];
      goto LABEL_5;
    case 17:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 44)]];
      goto LABEL_34;
    case 18:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 48)]];
      goto LABEL_34;
    case 19:
      uint64_t v33 = (uint64_t *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 56)];
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_10038FCD8(v34, v35);
      goto LABEL_38;
    case 20:
      uint64_t v23 = (uint64_t *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 132)];
      uint64_t v24 = *v23;
      unint64_t v25 = v23[1];
      sub_10002D830(*v23, v25);
      uint64_t v10 = sub_10025CECC(v24, v25);
      sub_10001E9AC(v24, v25);
      return v10;
    case 21:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 60)]];
      goto LABEL_34;
    case 22:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 64)]];
      goto LABEL_34;
    case 23:
      type metadata accessor for ItemMetadata();
      Class isa = sub_10096D540().super.super.isa;
      id v31 = [a2 bindObjectParameter:isa];

      goto LABEL_35;
    case 24:
      uint64_t v17 = type metadata accessor for ItemMetadata();
      return sub_10038FD94(*(void *)&v2[*(int *)(v17 + 136)], v2[*(int *)(v17 + 136) + 8]);
    case 25:
      Class v18 = 0;
      if ((v2[*(int *)(type metadata accessor for ItemMetadata() + 144) + 4] & 1) == 0) {
        Class v18 = sub_10096D530().super.super.isa;
      }
      id v19 = [a2 bindObjectParameter:v18];
      swift_unknownObjectRelease();
      uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      return v10;
    case 26:
      if (*(void *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 148) + 8]) {
        NSString v37 = sub_10096BC00();
      }
      else {
        NSString v37 = 0;
      }
      id v31 = [a2 bindObjectParameter:v37];
      swift_unknownObjectRelease();
      goto LABEL_35;
    case 27:
      id v9 = [a2 bindBooleanParameter:v2[*(int *)(type metadata accessor for ItemMetadata() + 72)]];
LABEL_34:
      id v31 = v9;
LABEL_35:
      uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      break;
    default:
      uint64_t v8 = qword_10098F6B8[*v2];
LABEL_5:
      v38[3] = &type metadata for Int;
      v38[0] = v8;
      uint64_t v10 = sub_1003AC444((uint64_t)v38);
      uint64_t v12 = v11;
      sub_10002B770((uint64_t)v38, (uint64_t *)&unk_100ACE0F0);
      if (!v12)
      {
        sub_10096CE20();
        __break(1u);
LABEL_7:
        type metadata accessor for ItemMetadata();
        uint64_t v13 = swift_bridgeObjectRetain();
        uint64_t v14 = sub_10025DBB0(v13);
LABEL_38:
        uint64_t v10 = v14;
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v10;
}

void sub_10085A524(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
    case 3:
    case 10:
    case 11:
    case 12:
    case 17:
    case 18:
    case 21:
    case 22:
    case 27:
      unsigned __int8 v16 = [a2 BOOLAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for Bool;
      goto LABEL_3;
    case 2:
    case 15:
      id v18 = [a2 longLongAtIndex:a3];
      id v19 = (ValueMetadata *)&type metadata for Int;
      goto LABEL_24;
    case 4:
      unsigned int v33 = [a2 intAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for UInt16;
      if ((v33 & 0x80000000) != 0 || v33 >= 0x10000) {
        goto LABEL_41;
      }
      *(_WORD *)a4 = v33;
      return;
    case 5:
    case 6:
    case 7:
      if ([a2 isNullAtIndex:a3])
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
      }
      else
      {
        id v20 = [a2 dateAtIndex:a3];
        sub_10096B0A0();

        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v15, v12, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
        {
          *(void *)(a4 + 24) = v9;
          uint64_t v39 = sub_10009C958((uint64_t *)a4);
          v21((char *)v39, v15, v9);
          return;
        }
      }
      sub_10002B770((uint64_t)v15, (uint64_t *)&unk_100ACB5E0);
LABEL_11:
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return;
    case 8:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      id v18 = (id)sub_10025ECB4(a3);
      if (v4) {
        return;
      }
      id v19 = &type metadata for Tags;
LABEL_24:
      *(void *)(a4 + 24) = v19;
      *(void *)a4 = v18;
      return;
    case 9:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      id v18 = [a2 unsignedLongLongAtIndex:a3];
      id v19 = (ValueMetadata *)&type metadata for UInt64;
      goto LABEL_24;
    case 13:
    case 25:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      unsigned int v17 = [a2 unsignedIntAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for UInt32;
      *(_DWORD *)a4 = v17;
      return;
    case 14:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      uint64_t v37 = sub_10025EB30(a3);
      if (!v4)
      {
        uint64_t v38 = v37;
        *(void *)(a4 + 24) = sub_10002B7CC(&qword_100ACDC10);
        *(void *)a4 = v38;
      }
      return;
    case 16:
      *(void *)(a4 + 24) = &type metadata for EvictionUrgency;
      unsigned __int8 v16 = sub_1003FD334(a3);
      goto LABEL_29;
    case 19:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      id v26 = [a2 stringAtIndex:a3];
      uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v29 = v28;

      uint64_t v30 = &type metadata for Filename;
      goto LABEL_35;
    case 20:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      id v35 = [a2 dataAtIndex:a3];
      uint64_t v27 = sub_10096AF60();
      uint64_t v29 = v36;

      uint64_t v30 = (ValueMetadata *)&type metadata for Data;
      goto LABEL_35;
    case 23:
      unint64_t v34 = (unint64_t)[a2 longLongAtIndex:a3];
      *(void *)(a4 + 24) = &type metadata for UInt64;
      if ((v34 & 0x8000000000000000) != 0)
      {
LABEL_41:
        sub_10096CE10();
        __break(1u);
        JUMPOUT(0x10085AB48);
      }
      *(void *)a4 = v34;
      return;
    case 24:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      unint64_t v22 = (unint64_t)[a2 unsignedLongLongAtIndex:a3];
      int v23 = v22;
      unint64_t v24 = HIDWORD(v22);
      type metadata accessor for NSFileProviderTypeAndCreator(0);
      *(void *)(a4 + 24) = v25;
      *(_DWORD *)a4 = v24;
      *(_DWORD *)(a4 + 4) = v23;
      return;
    case 26:
      if ([a2 isNullAtIndex:a3]) {
        goto LABEL_11;
      }
      id v31 = [a2 stringAtIndex:a3];
      uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v29 = v32;

      uint64_t v30 = (ValueMetadata *)&type metadata for String;
LABEL_35:
      *(void *)(a4 + 24) = v30;
      *(void *)a4 = v27;
      *(void *)(a4 + 8) = v29;
      return;
    default:
      *(void *)(a4 + 24) = &type metadata for FileItemKind;
      unsigned __int8 v16 = sub_1003FD2A4(a3);
LABEL_29:
      if (v4) {
        sub_10017D150(a4);
      }
      else {
LABEL_3:
      }
        *(unsigned char *)a4 = v16;
      return;
  }
}

uint64_t sub_10085ABB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v53 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  LOBYTE(v102[0]) = 0;
  sub_100391750(a1, (uint64_t)&type metadata for FileItemKind);
  uint64_t v84 = a1;
  uint64_t v85 = a2;
  uint64_t result = sub_1006FCBE4((uint64_t)v102, (uint64_t)&type metadata for FileItemKind, a1, (uint64_t)&type metadata for FileItemKind, a2);
  if (!v3)
  {
    uint64_t v82 = v6;
    uint64_t v81 = v9;
    int v16 = v111;
    LOBYTE(v92[0]) = 2;
    uint64_t v18 = v84;
    uint64_t v17 = v85;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Int, v84, (uint64_t)&type metadata for Int, v85);
    uint64_t v79 = v12;
    uint64_t v80 = v14;
    id v19 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v102[0]];
    uint64_t v20 = sub_10096D450();

    LOBYTE(v92[0]) = 15;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Int, v18, (uint64_t)&type metadata for Int, v17);
    id v21 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v102[0]];
    uint64_t v22 = sub_10096D450();

    LOBYTE(v102[0]) = 13;
    uint64_t v23 = sub_10002B7CC(&qword_100AD05D0);
    sub_100391750(v18, v23);
    sub_1006FCBE4((uint64_t)v102, v23, v18, v23, v17);
    uint64_t v77 = v23;
    int v78 = v16;
    uint64_t v24 = v107;
    int v25 = v108;
    LOBYTE(v102[0]) = 4;
    sub_100391750(v18, (uint64_t)&type metadata for UInt16);
    sub_1006FCBE4((uint64_t)v102, (uint64_t)&type metadata for UInt16, v18, (uint64_t)&type metadata for UInt16, v17);
    int v75 = v25;
    uint64_t v76 = v24;
    LODWORD(v21) = v106;
    LOBYTE(v102[0]) = 5;
    uint64_t v26 = v82;
    sub_100391750(v18, v82);
    sub_1006FCBE4((uint64_t)v102, v26, v18, v26, v17);
    uint64_t v74 = v22;
    LOBYTE(v102[0]) = 6;
    sub_1006FCBE4((uint64_t)v102, v26, v18, v26, v17);
    unsigned int v73 = v21;
    LOBYTE(v102[0]) = 3;
    sub_100391750(v18, (uint64_t)&type metadata for Bool);
    sub_1006FCBE4((uint64_t)v102, (uint64_t)&type metadata for Bool, v18, (uint64_t)&type metadata for Bool, v17);
    LOBYTE(v26) = v110;
    LOBYTE(v102[0]) = 11;
    sub_1006FCBE4((uint64_t)v102, (uint64_t)&type metadata for Bool, v18, (uint64_t)&type metadata for Bool, v17);
    LODWORD(v21) = v109;
    LOBYTE(v102[0]) = 12;
    sub_1006FCBE4((uint64_t)v102, (uint64_t)&type metadata for Bool, v18, (uint64_t)&type metadata for Bool, v17);
    int v72 = (int)v21;
    uint64_t v70 = v20;
    int v71 = v105;
    LOBYTE(v102[0]) = 7;
    sub_1006FCBE4((uint64_t)v102, v82, v18, v82, v17);
    LOBYTE(v102[0]) = 8;
    uint64_t v27 = sub_10002B7CC(&qword_100AD05B8);
    uint64_t v29 = v84;
    uint64_t v28 = v85;
    sub_100391750(v84, v27);
    sub_1006FCBE4((uint64_t)v102, v27, v29, v27, v28);
    uint64_t v82 = v104;
    LOBYTE(v102[0]) = 9;
    uint64_t v30 = sub_10002B7CC((uint64_t *)&unk_100AD7520);
    uint64_t v32 = v84;
    uint64_t v31 = v85;
    sub_100391750(v84, v30);
    sub_1006FCBE4((uint64_t)v102, v30, v32, v30, v31);
    uint64_t v69 = v102[3];
    LOBYTE(v18) = v103;
    LOBYTE(v102[0]) = 14;
    uint64_t v33 = sub_10002B7CC(&qword_100AD05E0);
    sub_1006FCBE4((uint64_t)v102, v33, v84, v33, v85);
    uint64_t v68 = v102[2];
    LOBYTE(v92[0]) = 20;
    uint64_t v34 = sub_10002B7CC(&qword_100AD0598);
    uint64_t v36 = v84;
    uint64_t v35 = v85;
    sub_100391750(v84, v34);
    sub_1006FCBE4((uint64_t)v92, v34, v36, v34, v35);
    uint64_t v66 = v102[0];
    unint64_t v67 = v102[1];
    LOBYTE(v92[0]) = 23;
    uint64_t v38 = v84;
    uint64_t v37 = v85;
    sub_100391750(v84, (uint64_t)&type metadata for UInt64);
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for UInt64, v38, (uint64_t)&type metadata for UInt64, v37);
    uint64_t v65 = v101;
    LOBYTE(v92[0]) = 16;
    uint64_t v40 = v84;
    uint64_t v39 = v85;
    sub_100391750(v84, (uint64_t)&type metadata for EvictionUrgency);
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for EvictionUrgency, v40, (uint64_t)&type metadata for EvictionUrgency, v39);
    LOBYTE(v34) = v100;
    LOBYTE(v92[0]) = 21;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    LOBYTE(v20) = v99;
    LOBYTE(v92[0]) = 22;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    int v64 = v98;
    LOBYTE(v92[0]) = 27;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    int v63 = v97;
    LOBYTE(v92[0]) = 17;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    int v62 = v96;
    LOBYTE(v92[0]) = 18;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    int v61 = v95;
    LOBYTE(v92[0]) = 1;
    sub_1006FCBE4((uint64_t)v92, (uint64_t)&type metadata for Bool, v84, (uint64_t)&type metadata for Bool, v85);
    int v60 = v94;
    LOBYTE(v92[0]) = 10;
    uint64_t v41 = sub_10002B7CC((uint64_t *)&unk_100AD7510);
    uint64_t v43 = v84;
    uint64_t v42 = v85;
    sub_100391750(v84, v41);
    sub_1006FCBE4((uint64_t)v92, v41, v43, v41, v42);
    int v59 = v93;
    LOBYTE(v87[0]) = 19;
    uint64_t v44 = sub_10002B7CC(&qword_100ADF5E0);
    uint64_t v46 = v84;
    uint64_t v45 = v85;
    sub_100391750(v84, v44);
    sub_1006FCBE4((uint64_t)v87, v44, v46, v44, v45);
    uint64_t v57 = v92[0];
    uint64_t v58 = v92[1];
    LOBYTE(v87[0]) = 24;
    uint64_t v47 = sub_10002B7CC(&qword_100AD7508);
    uint64_t v49 = v84;
    uint64_t v48 = v85;
    sub_100391750(v84, v47);
    sub_1006FCBE4((uint64_t)v87, v47, v49, v47, v48);
    uint64_t v56 = v90;
    int v55 = v91;
    LOBYTE(v87[0]) = 25;
    sub_1006FCBE4((uint64_t)v87, v77, v84, v77, v85);
    uint64_t v77 = v88;
    int v54 = v89;
    v86[0] = 26;
    uint64_t v50 = sub_10002B7CC(&qword_100ACF700);
    uint64_t v52 = v84;
    uint64_t v51 = v85;
    sub_100391750(v84, v50);
    sub_1006FCBE4((uint64_t)v86, v50, v52, v50, v51);
    v86[0] = v54;
    return ItemMetadata.init(kind:size:physicalSize:childItemCount:posixPermissions:creationDate:contentModificationDate:isLocked:isHidden:isPathExtensionHidden:lastUsedDate:tags:favoriteRank:extendedAttributes:quarantineBlob:closestSyncRoot:evictionUrgency:isSyncRoot:isIgnoreRoot:isDetachedRoot:isPinned:isInPinnedFolder:isDataless:isPackage:hasBundleBit:beforeBounceFilename:osType:linkCount:isResurrected:collaborationIdentifier:isSyncPaused:isSyncResumingWithDropLocalChanges:evictionReason:)(v78, v70, v74, 0, v76 | ((unint64_t)v75 << 32), v73, (uint64_t)v80, (uint64_t)v79, v83, v26, v72, v71, (uint64_t)v81, v82, v69, v18, v68, v66, v67,
             v65,
             v34,
             v20,
             v64,
             v63,
             v62,
             v61,
             v60,
             v59,
             2,
             v57,
             v58,
             v56,
             v55,
             v77 | ((unint64_t)v54 << 32),
             0,
             v87[0],
             v87[1],
             0,
             0,
             0);
  }
  return result;
}

unint64_t sub_10085B7F4(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C617461645F7369;
      break;
    case 2:
      unint64_t result = 1702521203;
      break;
    case 3:
      unint64_t result = 0x656B636F6C5F7369;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0x6573755F7473616CLL;
      break;
    case 8:
      unint64_t result = 0x617461645F676174;
      break;
    case 9:
      unint64_t result = 0x657469726F766166;
      break;
    case 10:
      unint64_t result = 0x616B6361705F7369;
      break;
    case 11:
      unint64_t result = 0x65646469685F7369;
      break;
    case 12:
    case 13:
    case 23:
    case 27:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0x6C61636973796870;
      break;
    case 16:
      unint64_t result = 0x74636976655F7369;
      break;
    case 17:
      unint64_t result = 0x656E6E69705F7369;
      break;
    case 18:
      unint64_t result = 0xD000000000000013;
      break;
    case 19:
      unint64_t result = 0xD000000000000016;
      break;
    case 20:
      unint64_t result = 0x69746E6172617571;
      break;
    case 21:
      unint64_t result = 0x72636E79735F7369;
      break;
    case 22:
      unint64_t result = 0x726F6E67695F7369;
      break;
    case 24:
      unint64_t result = 0x657079745F736FLL;
      break;
    case 25:
      unint64_t result = 0x756F635F6B6E696CLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10085BB78(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10085B7F4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10085B7F4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10085BC04()
{
  char v1 = *v0;
  sub_10096D4B0();
  sub_10085B7F4(v1);
  sub_10096BD50();
  swift_bridgeObjectRelease();
  return sub_10096D500();
}

uint64_t sub_10085BC68()
{
  sub_10085B7F4(*v0);
  sub_10096BD50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10085BCBC()
{
  char v1 = *v0;
  sub_10096D4B0();
  sub_10085B7F4(v1);
  sub_10096BD50();
  swift_bridgeObjectRelease();
  return sub_10096D500();
}

uint64_t sub_10085BD1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10085C1C8();
  *a1 = result;
  return result;
}

unint64_t sub_10085BD4C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10085B7F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10085BD78()
{
  return sub_10085B7F4(*v0);
}

uint64_t sub_10085BD80(char *a1, void *a2)
{
  return sub_100859E30(*a1, a2);
}

void sub_10085BD9C(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_10085BDB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_10085ABB8(a1, a2, a3);
}

unint64_t sub_10085BDD0(uint64_t a1)
{
  unint64_t result = sub_10085BDF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10085BDF8()
{
  unint64_t result = qword_100ADCC40;
  if (!qword_100ADCC40)
  {
    type metadata accessor for ItemMetadata();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCC40);
  }
  return result;
}

uint64_t sub_10085BE54()
{
  return sub_10085C050(&qword_100ADCC48);
}

uint64_t _s9SQLFieldsOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9SQLFieldsOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10085BFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_4()
{
  return &_s9SQLFieldsON_3;
}

uint64_t sub_10085C01C()
{
  return sub_10085C050((unint64_t *)&qword_100AD8B28);
}

uint64_t sub_10085C050(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100033BE8(qword_100AD4F80);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10085C09C()
{
  unint64_t result = qword_100ADCC80;
  if (!qword_100ADCC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCC80);
  }
  return result;
}

unint64_t sub_10085C0F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10085C120();
  unint64_t result = sub_10085C174();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10085C120()
{
  unint64_t result = qword_100ADCC88;
  if (!qword_100ADCC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCC88);
  }
  return result;
}

unint64_t sub_10085C174()
{
  unint64_t result = qword_100ADCC90;
  if (!qword_100ADCC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCC90);
  }
  return result;
}

uint64_t sub_10085C1C8()
{
  unint64_t v0 = sub_10096D350();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C) {
    return 28;
  }
  else {
    return v0;
  }
}

void sub_10085C21C(uint64_t a1)
{
  uint64_t v61 = sub_10096B480();
  int v60 = *(char **)(v61 - 8);
  __chkstk_darwin(v61);
  unint64_t v64 = (unint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10096AE50();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  int v62 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v59 = (char *)&v55 - v6;
  uint64_t v7 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10096AC20();
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v68 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultManager];
  sub_10002B7CC(&qword_100ADCCD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BA0;
  *(void *)(inited + 32) = NSFileOwnerAccountName;
  *(void *)(inited + 40) = 0x656C69626F6DLL;
  *(void *)(inited + 48) = 0xE600000000000000;
  *(void *)(inited + 56) = NSFileGroupOwnerAccountName;
  *(void *)(inited + 64) = 0x656C69626F6DLL;
  *(void *)(inited + 72) = 0xE600000000000000;
  uint64_t v13 = NSFileOwnerAccountName;
  uint64_t v14 = NSFileGroupOwnerAccountName;
  unint64_t v15 = sub_1000962AC(inited);
  sub_1008D4240(v15);
  type metadata accessor for FileAttributeKey(0);
  uint64_t v17 = v16;
  uint64_t v66 = sub_100861AB0((unint64_t *)&unk_100ACAAF0, type metadata accessor for FileAttributeKey);
  uint64_t v67 = v17;
  Class isa = sub_10096B9A0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v19 = a1;
  sub_10096AE10();
  NSString v20 = sub_10096BC00();
  swift_bridgeObjectRelease();
  v70[0] = 0;
  unsigned int v21 = [v11 setAttributes:isa ofItemAtPath:v20 error:v70];

  if (!v21)
  {
    id v37 = v70[0];
    swift_bridgeObjectRelease();
    sub_10096ABF0();

    swift_willThrow();
    return;
  }
  id v22 = v70[0];
  uint64_t v23 = (void *)sub_10096C570();
  if (v23)
  {
    unint64_t v64 = v15;
    id v65 = v11;
    uint64_t v24 = v68;
    id v56 = v23;
    sub_10096C540();
    sub_10096AC10();
    int v25 = v59;
    if (!v71)
    {
LABEL_13:
      (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v58);

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v26 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    int v62 = (char *)(v63 + 32);
    v63 += 8;
    uint64_t v61 = (uint64_t)v27;
    int v60 = (char *)&type metadata for Any + 8;
    while (1)
    {
      int v28 = swift_dynamicCast();
      uint64_t v29 = *v26;
      if (!v28) {
        break;
      }
      v29(v9, 0, 1, v3);
      if ((*v27)(v9, 1, v3) == 1) {
        goto LABEL_6;
      }
      (*(void (**)(char *, char *, uint64_t))v62)(v25, v9, v3);
      sub_1008D4240(v64);
      uint64_t v31 = v3;
      Class v32 = sub_10096B9A0().super.isa;
      swift_bridgeObjectRelease();
      sub_10096AE10();
      uint64_t v33 = v25;
      NSString v34 = sub_10096BC00();
      swift_bridgeObjectRelease();
      id v69 = 0;
      unsigned int v35 = [v65 setAttributes:v32 ofItemAtPath:v34 error:&v69];

      if (!v35)
      {
        id v54 = v69;
        sub_10096ABF0();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v68, v58);
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))v63)(v33, v31);
        return;
      }
      id v36 = v69;
      (*(void (**)(char *, uint64_t))v63)(v33, v31);
      uint64_t v3 = v31;
      int v25 = v33;
      uint64_t v24 = v68;
      uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))v61;
LABEL_7:
      sub_10096AC10();
      if (!v71) {
        goto LABEL_13;
      }
    }
    v29(v9, 1, 1, v3);
LABEL_6:
    sub_10002B770((uint64_t)v9, &qword_100ACA8C0);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  id v38 = (id)fpfs_current_or_default_log();
  uint64_t v39 = v64;
  sub_10096B490();
  uint64_t v40 = v63;
  uint64_t v41 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v19, v3);
  uint64_t v42 = sub_10096B470();
  os_log_type_t v43 = sub_10096C5B0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    id v65 = v11;
    uint64_t v45 = v44;
    uint64_t v68 = (char *)swift_slowAlloc();
    v70[0] = v68;
    *(_DWORD *)uint64_t v45 = 136315138;
    uint64_t v67 = v45 + 4;
    sub_10096AD20((NSURL *)(v45 + 4));
    uint64_t v47 = v46;
    id v48 = objc_msgSend(v46, "fp_shortDescription");

    uint64_t v49 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v66 = v3;
    unint64_t v51 = v50;

    id v69 = (id)sub_100719D44(v49, v51, (uint64_t *)v70);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v62, v66);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to get enumerator for %s", (uint8_t *)v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v52 = (void (*)(uint64_t, uint64_t))*((void *)v60 + 1);
    uint64_t v53 = v64;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v3);
    uint64_t v52 = (void (*)(uint64_t, uint64_t))*((void *)v60 + 1);
    uint64_t v53 = v39;
  }
  v52(v53, v61);
}

id sub_10085CB58(char *a1, char *a2)
{
  uint64_t v5 = sub_10096B480();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  int v59 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10096AE50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v50 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v58 = (char *)&v48 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v48 - v17;
  __chkstk_darwin(v16);
  NSString v20 = (char *)&v48 - v19;
  unsigned int v21 = *(void (**)(void))(v11 + 16);
  uint64_t v52 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL];
  uint64_t v57 = a1;
  v21();
  unint64_t v51 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_outputUserURL];
  v21();
  uint64_t v55 = v2;
  id v56 = a2;
  sub_10096AD50();
  id v22 = [self defaultManager];
  sub_10096AE10();
  NSString v23 = sub_10096BC00();
  swift_bridgeObjectRelease();
  unsigned int v24 = [v22 fileExistsAtPath:v23];

  if (v24)
  {
    sub_10096AD50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    int v25 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      uint64_t v49 = v20;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v26(v18, v9, v10);
      uint64_t v27 = v55;
      ((void (*)(char *, char *, uint64_t))v21)(&v55[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL], v18, v10);
      int v28 = v50;
      sub_10096AD60();
      v26(&v27[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v28, v10);

      uint64_t v29 = (objc_class *)type metadata accessor for FPFSSQLBackupEngine();
      v60.receiver = v27;
      v60.super_class = v29;
      id v30 = objc_msgSendSuper2(&v60, "init");
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v31((uint64_t)v56, v10);
      v31((uint64_t)v57, v10);
      v31((uint64_t)v18, v10);
      v31((uint64_t)v49, v10);
      return v30;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    int v25 = v20;
  }
  sub_10002B770((uint64_t)v9, &qword_100ACA8C0);
  id v32 = (id)fpfs_current_or_default_log();
  uint64_t v33 = v59;
  sub_10096B490();
  NSString v34 = v58;
  ((void (*)(char *, char *, uint64_t))v21)(v58, v25, v10);
  unsigned int v35 = sub_10096B470();
  os_log_type_t v36 = sub_10096C5D0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v49 = v25;
    uint64_t v62 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    unint64_t v50 = (char *)(v37 + 4);
    sub_10096AD20((NSURL *)(v37 + 4));
    uint64_t v40 = v39;
    id v41 = objc_msgSend(v39, "fp_shortDescription");

    uint64_t v42 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v44 = v43;

    uint64_t v61 = sub_100719D44(v42, v44, &v62);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v11 + 8);
    v45(v58, v10);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s does not exist. No need to back up.", (uint8_t *)v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v45(v56, v10);
    v45(v57, v10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v59, v54);
    uint64_t v46 = v49;
  }
  else
  {

    uint64_t v45 = *(void (**)(char *, uint64_t))(v11 + 8);
    v45(v34, v10);
    v45(v56, v10);
    v45(v57, v10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
    uint64_t v46 = v25;
  }
  v45(v46, v10);
  v45(v52, v10);
  v45(v51, v10);

  type metadata accessor for FPFSSQLBackupEngine();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_10085D3DC()
{
  char v1 = v0;
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(uint64_t (***)(char *, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self defaultManager];
  sub_10096AD20((NSURL *)OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL);
  uint64_t v8 = v7;
  id v32 = 0;
  unsigned int v9 = [v6 removeItemAtURL:v7 error:&v32];

  id v10 = v32;
  if (v9)
  {
    return v10;
  }
  else
  {
    uint64_t v29 = (uint64_t (**)(char *, uint64_t))v32;
    id v12 = v32;
    sub_10096ABF0();

    swift_willThrow();
    id v13 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    id v14 = v1;
    swift_errorRetain();
    id v15 = v14;
    swift_errorRetain();
    uint64_t v16 = sub_10096B470();
    os_log_type_t v17 = sub_10096C5B0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      int v28 = (void *)swift_slowAlloc();
      id v32 = v28;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v29 = v3;
      sub_10096AD20((NSURL *)&unk_100975000);
      NSString v20 = v19;
      id v21 = objc_msgSend(v19, "fp_shortDescription");

      uint64_t v22 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v27 = v2;
      unint64_t v24 = v23;

      uint64_t v31 = sub_100719D44(v22, v24, (uint64_t *)&v32);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2112;
      swift_getErrorValue();
      id v25 = Error.prettyDescription.getter(v30);
      uint64_t v31 = (uint64_t)v25;
      sub_10096C8C0();
      void *v26 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to remove directory %s: %@", (uint8_t *)v18, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (id)v29[1](v5, v27);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      return (id)v3[1](v5, v2);
    }
  }
}

id sub_10085D840()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLBackupEngine();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10085D964()
{
  return type metadata accessor for FPFSSQLBackupEngine();
}

uint64_t type metadata accessor for FPFSSQLBackupEngine()
{
  uint64_t result = qword_100ADCCC0;
  if (!qword_100ADCCC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10085D9B8()
{
  uint64_t result = sub_10096AE50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10085DA4C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_10096BD90();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_10096BEE0();
}

unint64_t sub_10085DB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint8_t *a4@<X8>)
{
  id v151 = a3;
  uint64_t v150 = a2;
  uint64_t v153 = a4;
  uint64_t v156 = (void *)sub_10096A7B0();
  os_log_t v155 = (os_log_t)*(v156 - 1);
  __chkstk_darwin(v156);
  uint64_t v154 = (char *)v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096AE50();
  uint64_t v161 = *(void *)(v6 - 8);
  uint64_t v162 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v157 = (uint64_t (**)(char *, uint64_t))((char *)v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v149 = (char *)v144 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v152 = (char *)v144 - v12;
  __chkstk_darwin(v11);
  uint64_t v148 = (char *)v144 - v13;
  uint64_t v158 = sub_10096B480();
  uint64_t v159 = *(void *)(v158 - 8);
  uint64_t v14 = __chkstk_darwin(v158);
  uint64_t v163 = (char *)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v144 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)v144 - v20;
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)v144 - v22;
  uint64_t v24 = sub_10096AA50();
  id v25 = *(uint64_t (***)(char *, uint64_t))(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  int v28 = (char *)v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v144 - v29;
  uint64_t v31 = v160;
  sub_10096ACB0();
  if (v31)
  {
    id v32 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v34 = v161;
    uint64_t v33 = v162;
    unsigned int v35 = v157;
    (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t, uint64_t))(v161 + 16))(v157, a1, v162);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v36 = sub_10096B470();
    os_log_type_t v37 = sub_10096C5B0();
    uint64_t v38 = v34;
    uint64_t v39 = v33;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v156 = (void *)swift_slowAlloc();
      uint64_t v160 = swift_slowAlloc();
      *(void *)&long long v169 = v160;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v154 = (char *)(v40 + 4);
      os_log_t v155 = v36;
      sub_10096AD20(&var20);
      uint64_t v42 = v41;
      id v43 = objc_msgSend(v41, "fp_shortDescription");

      uint64_t v44 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v45 = v35;
      unint64_t v47 = v46;

      *(void *)&long long v167 = sub_100719D44(v44, v47, (uint64_t *)&v169);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v38 + 8))(v45, v39);
      *(_WORD *)(v40 + 12) = 2112;
      swift_getErrorValue();
      id v48 = Error.prettyDescription.getter(v170);
      *(void *)&long long v167 = v48;
      sub_10096C8C0();
      *uint64_t v156 = v48;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v49 = v155;
      _os_log_impl((void *)&_mh_execute_header, v155, v37, "Failed to fetch resource values for %s: %@", (uint8_t *)v40, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v34 + 8))(v35, v33);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v159 + 8))(v163, v158);
    return swift_willThrow();
  }
  uint64_t v146 = v18;
  uint64_t v147 = v21;
  unint64_t v145 = v23;
  uint64_t v160 = a1;
  v144[1] = 0;
  uint64_t v50 = v161;
  ((void (*)(char *, char *, uint64_t))v25[4])(v30, v28, v24);
  uint64_t v51 = sub_10096A9B0();
  if (v52)
  {
    uint64_t v53 = v51;
    unint64_t v54 = v52;
    uint64_t v163 = v30;
    uint64_t v157 = v25;
    uint64_t v55 = sub_10096BD60();
    uint64_t v56 = sub_10096BD60();
    BOOL v57 = __OFSUB__(v55, v56);
    unint64_t result = v55 - v56;
    if (v57)
    {
      __break(1u);
    }
    else
    {
      sub_10085DA4C(result, v53, v54);
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_10096BD10();
      uint64_t v61 = v60;
      swift_bridgeObjectRelease();
      unint64_t result = sub_10096A980();
      if (_kCFURLInodeNumberKey)
      {
        unint64_t v62 = result;
        uint64_t v63 = v153;
        unint64_t v64 = v147;
        if (*(void *)(result + 16))
        {
          id v65 = _kCFURLInodeNumberKey;
          uint64_t v66 = sub_10031F918(v65);
          if (v67)
          {
            sub_1001FAC78(*(void *)(v62 + 56) + 32 * v66, (uint64_t)&v167);
          }
          else
          {
            long long v167 = 0u;
            long long v168 = 0u;
          }
        }
        else
        {
          long long v167 = 0u;
          long long v168 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v168 + 1))
        {
          uint64_t v86 = v59;
          sub_100042A48(&v167, &v169);
          sub_1001FAC78((uint64_t)&v169, (uint64_t)&v167);
          sub_1000A7034();
          if (swift_dynamicCast())
          {
            uint64_t v87 = (void *)v165;
            id v151 = [(id)v165 integerValue];

            uint64_t v88 = sub_10096A9E0();
            LODWORD(v150) = v89;
            uint64_t v90 = (char *)sub_10096BC00();
            uint64_t v91 = sub_10096A980();
            uint64_t v92 = *(void *)(v91 + 16);
            uint64_t v152 = v90;
            if (v92)
            {
              uint64_t v93 = v24;
              unsigned __int8 v94 = v90;
              uint64_t v95 = sub_10031F918(v94);
              if (v96)
              {
                sub_1001FAC78(*(void *)(v91 + 56) + 32 * v95, (uint64_t)&v165);
              }
              else
              {
                long long v165 = 0u;
                long long v166 = 0u;
              }

              uint64_t v24 = v93;
              uint64_t v63 = v153;
            }
            else
            {
              long long v165 = 0u;
              long long v166 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v166 + 1))
            {
              sub_100042A48(&v165, &v167);
              sub_1001FAC78((uint64_t)&v167, (uint64_t)&v165);
              char v119 = swift_dynamicCast();
              uint64_t v120 = v160;
              if (v119)
              {
                id v121 = v164;
                unsigned int v122 = [v164 unsignedIntValue];

                sub_1000268E0((uint64_t)&v167);
                sub_1000268E0((uint64_t)&v169);
                unint64_t result = v157[1](v163, v24);
                *(void *)uint64_t v63 = v86;
                *((void *)v63 + 1) = v61;
                *((void *)v63 + 2) = v151;
                *((void *)v63 + 3) = v88;
                v63[32] = v150 & 1;
                *((_DWORD *)v63 + 9) = v122;
                return result;
              }
              swift_bridgeObjectRelease();
              sub_1000268E0((uint64_t)&v167);
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_10002B770((uint64_t)&v165, (uint64_t *)&unk_100ACE0F0);
              uint64_t v120 = v160;
            }
            id v123 = (id)fpfs_current_or_default_log();
            unint64_t v124 = v145;
            sub_10096B490();
            uint64_t v125 = v50;
            uint64_t v126 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
            uint64_t v127 = v148;
            uint64_t v128 = v162;
            v126(v148, v120, v162);
            uint64_t v129 = sub_10096B470();
            os_log_type_t v130 = sub_10096C5B0();
            if (os_log_type_enabled(v129, v130))
            {
              uint64_t v131 = (uint8_t *)swift_slowAlloc();
              uint64_t v132 = v125;
              uint64_t v160 = swift_slowAlloc();
              *(void *)&long long v167 = v160;
              *(_DWORD *)uint64_t v131 = 136315138;
              uint64_t v153 = v131 + 4;
              sub_10096AD20((NSURL *)(v131 + 4));
              uint64_t v134 = v133;
              uint64_t v135 = v24;
              id v136 = objc_msgSend(v133, "fp_shortDescription");

              uint64_t v137 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
              unint64_t v139 = v138;

              uint64_t v24 = v135;
              *(void *)&long long v165 = sub_100719D44(v137, v139, (uint64_t *)&v167);
              sub_10096C8C0();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v132 + 8))(v148, v162);
              _os_log_impl((void *)&_mh_execute_header, v129, v130, "Failed to get gen count for %s", v131, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v159 + 8))(v145, v158);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v125 + 8))(v127, v128);

              (*(void (**)(char *, uint64_t))(v159 + 8))(v124, v158);
            }
            uint64_t v140 = v156;
            os_log_t v141 = v155;
            uint64_t v142 = v154;
            uint64_t v115 = v157;
            uint64_t v143 = v152;
            LODWORD(v167) = 2;
            sub_100042898((uint64_t)_swiftEmptyArrayStorage);
            sub_100861AB0((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
            sub_10096ABD0();
            sub_10096A790();
            ((void (*)(char *, void *))v141[1].isa)(v142, v140);
            swift_willThrow();

            sub_1000268E0((uint64_t)&v169);
            return v115[1](v163, v24);
          }
          swift_bridgeObjectRelease();
          sub_1000268E0((uint64_t)&v169);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_10002B770((uint64_t)&v167, (uint64_t *)&unk_100ACE0F0);
        }
        uint64_t v97 = v160;
        id v98 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        char v99 = v152;
        uint64_t v100 = v162;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v152, v97, v162);
        uint64_t v101 = sub_10096B470();
        os_log_type_t v102 = sub_10096C5B0();
        if (os_log_type_enabled(v101, v102))
        {
          char v103 = (uint8_t *)swift_slowAlloc();
          uint64_t v104 = v50;
          uint64_t v160 = swift_slowAlloc();
          *(void *)&long long v169 = v160;
          *(_DWORD *)char v103 = 136315138;
          uint64_t v153 = v103 + 4;
          sub_10096AD20((NSURL *)(v103 + 4));
          unsigned __int16 v106 = v105;
          id v107 = objc_msgSend(v105, "fp_shortDescription");

          uint64_t v108 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v109 = v24;
          unint64_t v111 = v110;

          *(void *)&long long v167 = sub_100719D44(v108, v111, (uint64_t *)&v169);
          sub_10096C8C0();
          uint64_t v24 = v109;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v152, v162);
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "Failed to get the inode for %s", v103, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v159 + 8))(v147, v158);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v50 + 8))(v99, v100);

          (*(void (**)(char *, uint64_t))(v159 + 8))(v64, v158);
        }
        int v112 = v156;
        os_log_t v113 = v155;
        uint64_t v114 = v154;
        uint64_t v115 = v157;
        LODWORD(v169) = 2;
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_100861AB0((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10096ABD0();
        sub_10096A790();
        ((void (*)(char *, void *))v113[1].isa)(v114, v112);
        swift_willThrow();
        return v115[1](v163, v24);
      }
    }
    __break(1u);
    return result;
  }
  id v68 = (id)fpfs_current_or_default_log();
  id v69 = v146;
  sub_10096B490();
  uint64_t v70 = v50;
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  int v72 = v149;
  uint64_t v73 = v162;
  v71(v149, v160, v162);
  uint64_t v74 = sub_10096B470();
  os_log_type_t v75 = sub_10096C5B0();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    LODWORD(v163) = v76;
    uint64_t v77 = swift_slowAlloc();
    id v151 = (id)v24;
    uint64_t v78 = v77;
    uint64_t v160 = swift_slowAlloc();
    *(void *)&long long v169 = v160;
    uint64_t v153 = (uint8_t *)v78;
    *(_DWORD *)uint64_t v78 = 136315138;
    uint64_t v152 = (char *)(v78 + 4);
    sub_10096AD20((NSURL *)(v78 + 4));
    uint64_t v80 = v79;
    id v81 = objc_msgSend(v79, "fp_shortDescription");

    uint64_t v82 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v157 = v25;
    uint64_t v83 = v30;
    unint64_t v85 = v84;

    uint64_t v24 = (uint64_t)v151;
    *(void *)&long long v167 = sub_100719D44(v82, v85, (uint64_t *)&v169);
    sub_10096C8C0();
    uint64_t v30 = v83;
    id v25 = v157;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v149, v73);
    _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v163, "Failed to get canonical path for %s", v153, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v159 + 8))(v146, v158);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v73);

    (*(void (**)(char *, uint64_t))(v159 + 8))(v69, v158);
  }
  BOOL v116 = v156;
  os_log_t v117 = v155;
  uint64_t v118 = v154;
  LODWORD(v169) = 2;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_100861AB0((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
  sub_10096ABD0();
  sub_10096A790();
  ((void (*)(char *, void *))v117[1].isa)(v118, v116);
  swift_willThrow();
  return v25[1](v30, v24);
}

void sub_10085ED7C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v101 = a3;
  uint64_t v93 = a1;
  uint64_t v89 = sub_10096A7B0();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10096AC20();
  uint64_t v83 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  char v99 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10096AE50();
  uint64_t v94 = *(void *)(v98 - 8);
  uint64_t v8 = __chkstk_darwin(v98);
  unint64_t v84 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v85 = (char *)&v82 - v11;
  __chkstk_darwin(v10);
  uint64_t v90 = (char *)&v82 - v12;
  uint64_t v92 = (void *)sub_10096B480();
  uint64_t v91 = *(v92 - 1);
  uint64_t v13 = __chkstk_darwin(v92);
  uint64_t v86 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v17 = sub_10096AA50();
  uint64_t v97 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACF740);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = NSURLCanonicalPathKey;
  id v21 = NSURLCanonicalPathKey;
  sub_1000087CC(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v22 = v100;
  sub_10096ACB0();
  if (v22)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v82 = a2;
  uint64_t v100 = v17;
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_10096A9B0();
  if (v24)
  {
    id v25 = v24;
    uint64_t v89 = v23;
    uint64_t v90 = 0;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10097C0C0;
    *(void *)(v26 + 32) = v21;
    uint64_t v27 = (void *)_kCFURLInodeNumberKey;
    uint64_t v28 = v98;
    if (!_kCFURLInodeNumberKey)
    {
      __break(1u);
      return;
    }
    uint64_t v29 = v26;
    *(void *)(v26 + 40) = _kCFURLInodeNumberKey;
    *(void *)(v26 + 48) = NSURLDocumentIdentifierKey;
    uint64_t v30 = v21;
    uint64_t v31 = NSURLDocumentIdentifierKey;
    id v32 = v27;
    *(void *)(v29 + 56) = sub_10096BC00();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1001FA508(v33);
    swift_bridgeObjectRelease();
    id v34 = [self defaultManager];
    uint64_t v35 = (uint64_t)v93;
    os_log_type_t v36 = (void *)sub_10096C570();

    swift_bridgeObjectRelease();
    if (v36)
    {
      os_log_type_t v37 = v90;
      sub_10085DB08(v35, v89, v25, v104);
      if (v37)
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v19, v100);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      sub_1001F48FC((uint64_t)v104);
      uint64_t v92 = v25;
      uint64_t v93 = v19;
      sub_1001FACD4((uint64_t)v104);
      sub_10096C540();
      sub_10096AC10();
      if (v103)
      {
        uint64_t v74 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
        os_log_type_t v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
        uint64_t v91 = v94 + 32;
        v94 += 8;
        while (1)
        {
          uint64_t v77 = (uint64_t)v95;
          char v78 = swift_dynamicCast();
          uint64_t v79 = *v74;
          if (v78)
          {
            v79(v77, 0, 1, v28);
            if ((*v75)(v77, 1, v28) != 1)
            {
              uint64_t v80 = (uint64_t)v84;
              (*(void (**)(void))v91)();
              sub_10085DB08(v80, v89, v92, v105);
              sub_1001F48FC((uint64_t)v105);
              sub_1001FACD4((uint64_t)v105);
              uint64_t v28 = v98;
              (*(void (**)(uint64_t, uint64_t))v94)(v80, v98);
              goto LABEL_22;
            }
          }
          else
          {
            v79(v77, 1, 1, v28);
          }
          sub_10002B770(v77, &qword_100ACA8C0);
LABEL_22:
          sub_10096AC10();
          uint64_t v76 = v96;
          if (!v103) {
            goto LABEL_27;
          }
        }
      }
      uint64_t v76 = v96;
LABEL_27:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v99, v76);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v100);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v54 = (id)fpfs_current_or_default_log();
      uint64_t v55 = v86;
      sub_10096B490();
      uint64_t v56 = v94;
      BOOL v57 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v85, v35, v28);
      uint64_t v58 = sub_10096B470();
      os_log_type_t v59 = sub_10096C5B0();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        char v99 = (char *)swift_slowAlloc();
        v102[0] = (uint64_t)v99;
        *(_DWORD *)uint64_t v60 = 136315138;
        uint64_t v96 = v60 + 4;
        sub_10096AD20((NSURL *)(v60 + 4));
        unint64_t v62 = v61;
        id v63 = objc_msgSend(v61, "fp_shortDescription");
        uint64_t v93 = v19;
        id v64 = v63;

        uint64_t v65 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v66 = v28;
        unint64_t v68 = v67;

        uint64_t v106 = sub_100719D44(v65, v68, v102);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v85, v66);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Failed to get enumerator for %s", (uint8_t *)v60, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void *))(v91 + 8))(v86, v92);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v100);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v28);
        (*(void (**)(char *, void *))(v91 + 8))(v55, v92);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v19, v100);
      }
      swift_release();
    }
  }
  else
  {
    id v38 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v39 = v94;
    uint64_t v40 = v90;
    uint64_t v41 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v90, v82, v98);
    uint64_t v42 = sub_10096B470();
    os_log_type_t v43 = sub_10096C5B0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      char v99 = v16;
      uint64_t v45 = v44;
      uint64_t v96 = swift_slowAlloc();
      v102[0] = v96;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v95 = (char *)(v45 + 4);
      sub_10096AD20((NSURL *)(v45 + 4));
      unint64_t v47 = v46;
      id v48 = objc_msgSend(v46, "fp_shortDescription");
      uint64_t v93 = v19;
      uint64_t v49 = v39;
      id v50 = v48;

      uint64_t v51 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v53 = v52;

      uint64_t v106 = sub_100719D44(v51, v53, v102);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v90, v41);
      uint64_t v19 = v93;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Could not get canonical path for %s", (uint8_t *)v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void *))(v91 + 8))(v99, v92);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);

      (*(void (**)(char *, void *))(v91 + 8))(v16, v92);
    }
    uint64_t v69 = v97;
    uint64_t v70 = v100;
    uint64_t v71 = v89;
    uint64_t v72 = v88;
    uint64_t v73 = v87;
    LODWORD(v102[0]) = 2;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100861AB0((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v70);
    swift_release();
  }
}

uint64_t sub_10085FC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v4 - 8);
  id v48 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = __chkstk_darwin(v6);
  os_log_type_t v36 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v35 - v11;
  sub_10002B7CC((uint64_t *)&unk_100ACA8D0);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v43 = *(void *)(v7 + 72);
  uint64_t v14 = v13 + v43;
  unint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100973BB0;
  uint64_t v39 = a2;
  swift_retain();
  sub_10096AD50();
  if (FPIsCloudDocsWithFPFSEnabled())
  {
    sub_10096AD50();
    unint64_t v15 = sub_1006A2B50(1, 2, 1, v15);
    *(void *)(v15 + 16) = 2;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v6);
  }
  uint64_t v16 = v8;
  uint64_t v17 = v6;
  uint64_t v18 = *(void *)(v15 + 16);
  unint64_t v37 = v15;
  if (v18)
  {
    uint64_t v38 = a1;
    unint64_t v19 = v15 + v13;
    id v21 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    uint64_t v20 = v16 + 16;
    unint64_t v46 = v21;
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v41 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v42 = (void (**)(char *, uint64_t))(v20 - 8);
    swift_bridgeObjectRetain();
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    v35[1] = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v22 = v48;
    uint64_t v23 = v36;
    uint64_t v40 = v20;
    while (1)
    {
      v46(v22, v19, v17);
      uint64_t v24 = *v45;
      (*v45)(v22, 0, 1, v17);
      if ((*v44)(v22, 1, v17) == 1) {
        break;
      }
      uint64_t v25 = v17;
      (*v41)(v23, v22, v17);
      id v27 = [self defaultManager];
      sub_10096AE10();
      NSString v28 = sub_10096BC00();
      swift_bridgeObjectRelease();
      unsigned int v29 = [v27 fileExistsAtPath:v28];

      if (v29)
      {
        uint64_t v30 = v39;
        swift_retain();
        uint64_t v31 = v30;
        uint64_t v32 = v47;
        sub_10085ED7C(v23, v38, v31);
        if (v32)
        {
          (*v42)(v23, v25);
          swift_release();
          return swift_bridgeObjectRelease_n();
        }
        uint64_t v47 = 0;
      }
      uint64_t v17 = v25;
      (*v42)(v23, v25);
      v19 += v43;
      --v18;
      uint64_t v22 = v48;
      if (!v18)
      {
        v24(v48, 1, 1, v25);
        break;
      }
    }
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    v33(v48, 1, 1, v6);
  }
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_1008600D8(char *a1, uint64_t a2)
{
  uint64_t v157 = a2;
  uint64_t v3 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v148 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v149 = (char *)&v137 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v151 = (char *)&v137 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v152 = (id *)((char *)&v137 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v146 = (char *)&v137 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v147 = (char *)&v137 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v143 = (char *)&v137 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v144 = (char *)&v137 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  os_log_t v141 = (char *)&v137 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v142 = (char *)&v137 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v138 = (uint64_t)&v137 - v25;
  __chkstk_darwin(v24);
  id v27 = (char *)&v137 - v26;
  uint64_t v159 = sub_10096AE50();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  unsigned int v29 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10096B480();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v140 = (char *)&v137 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  unint64_t v139 = (char *)&v137 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v153 = (char *)&v137 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  unint64_t v145 = (char *)&v137 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v150 = (uint8_t *)&v137 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v137 - v43;
  __chkstk_darwin(v42);
  unint64_t v46 = (char *)&v137 - v45;
  id v47 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v48 = sub_10096B470();
  os_log_type_t v49 = sub_10096C5D0();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Starting backup...", v50, 2u);
    swift_slowDealloc();
  }

  uint64_t v51 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v155 = v30;
  uint64_t v156 = v31 + 8;
  uint64_t v154 = v51;
  v51(v46, v30);
  unint64_t v52 = self;
  id v53 = [v52 defaultManager];
  uint64_t v54 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL];
  sub_10096AE10();
  NSString v55 = sub_10096BC00();
  swift_bridgeObjectRelease();
  unsigned int v56 = [v53 fileExistsAtPath:v55];

  if (v56)
  {
    id v57 = [v52 defaultManager];
    sub_10096AD20(v58);
    uint64_t v60 = v59;
    id v163 = 0;
    unsigned int v61 = [v57 removeItemAtURL:v59 error:&v163];

    if (!v61)
    {
      id v88 = v163;
      sub_10096ABF0();

      swift_willThrow();
      uint64_t v89 = sub_10096AE10();
      unint64_t v91 = v90;
      id v92 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_errorRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_10096B470();
      os_log_type_t v94 = sub_10096C5B0();
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v95 = swift_slowAlloc();
        uint64_t v96 = (void *)swift_slowAlloc();
        id v163 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v95 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v162 = sub_100719D44(v89, v91, (uint64_t *)&v163);
        sub_10096C8C0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v95 + 12) = 2112;
        swift_getErrorValue();
        id v97 = Error.prettyDescription.getter(v160);
        uint64_t v162 = (uint64_t)v97;
        sub_10096C8C0();
        *uint64_t v96 = v97;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v93, v94, "Unable to delete existing destination directory at %s: %@", (uint8_t *)v95, 0x16u);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();
      }

      v154(v44, v155);
      uint64_t v109 = v159;
      uint64_t v110 = (uint64_t)v148;
      uint64_t v111 = v158;
      id v27 = v149;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v149, 1, 1, v159);
      sub_10016A248((uint64_t)v27, v110);
      int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v110, 1, v109);
      swift_errorRetain();
      if (v112 == 1)
      {
        uint64_t v114 = 0;
      }
      else
      {
        sub_10096AD20(v113);
        uint64_t v114 = v115;
        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v109);
      }
      BOOL v116 = (void *)sub_10096ABE0();
      (*(void (**)(uint64_t, void *, void *))(v157 + 16))(v157, v114, v116);

      swift_errorRelease();
      goto LABEL_24;
    }
    id v62 = v163;
  }
  id v63 = [v52 defaultManager];
  sub_10096AD20(v64);
  uint64_t v66 = v65;
  id v163 = 0;
  unsigned int v67 = [v63 createDirectoryAtURL:v65 withIntermediateDirectories:0 attributes:0 error:&v163];

  id v68 = v163;
  if (!v67)
  {
    id v71 = v163;
    sub_10096ABF0();

    swift_willThrow();
    id v72 = (id)fpfs_current_or_default_log();
    uint64_t v73 = v150;
    sub_10096B490();
    uint64_t v74 = a1;
    os_log_type_t v75 = v73;
    uint64_t v76 = v74;
    swift_errorRetain();
    uint64_t v77 = v76;
    swift_errorRetain();
    char v78 = sub_10096B470();
    os_log_type_t v79 = sub_10096C5B0();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      uint64_t v149 = (char *)swift_slowAlloc();
      uint64_t v153 = (char *)swift_slowAlloc();
      id v163 = v153;
      *(_DWORD *)uint64_t v80 = 136315394;
      sub_10096AD20((NSURL *)&unk_100975000);
      uint64_t v82 = v81;
      id v83 = objc_msgSend(v81, "fp_shortDescription");

      uint64_t v84 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v86 = v85;

      uint64_t v162 = sub_100719D44(v84, v86, (uint64_t *)&v163);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 2112;
      swift_getErrorValue();
      id v87 = Error.prettyDescription.getter(v161);
      uint64_t v162 = (uint64_t)v87;
      sub_10096C8C0();
      *(void *)uint64_t v149 = v87;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Unable to create destination directory %s: %@", (uint8_t *)v80, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    v154((char *)v75, v155);
    uint64_t v98 = v158;
    id v27 = (char *)v152;
    uint64_t v99 = (uint64_t)v151;
    uint64_t v100 = v159;
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v152, 1, 1, v159);
    sub_10016A248((uint64_t)v27, v99);
    int v101 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v99, 1, v100);
    swift_errorRetain();
    if (v101 == 1)
    {
      uint64_t v103 = 0;
    }
    else
    {
      sub_10096AD20(v102);
      uint64_t v103 = v104;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v99, v100);
    }
    unsigned __int8 v105 = (void *)sub_10096ABE0();
    (*(void (**)(uint64_t, void *, void *))(v157 + 16))(v157, v103, v105);

    swift_errorRelease();
LABEL_24:
    swift_errorRelease();
    return sub_10002B770((uint64_t)v27, &qword_100ACA8C0);
  }
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  v69(v29, &a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v159);
  type metadata accessor for SQLBackupManifest();
  swift_allocObject();
  id v70 = v68;
  uint64_t v106 = sub_1001F2CB8(v29);
  uint64_t v107 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL];
  swift_retain();
  sub_10085FC30(v107, (uint64_t)v106);
  uint64_t v108 = a1;
  uint64_t v152 = v106;
  swift_release();
  sub_1001F53B8();
  sub_10085C21C(v54);
  id v117 = (id)fpfs_current_or_default_log();
  uint64_t v118 = v139;
  sub_10096B490();
  id v119 = v108;
  uint64_t v120 = sub_10096B470();
  os_log_type_t v121 = sub_10096C5D0();
  int v122 = v121;
  if (os_log_type_enabled(v120, v121))
  {
    LODWORD(v153) = v122;
    uint64_t v123 = swift_slowAlloc();
    id v151 = (char *)swift_slowAlloc();
    id v163 = v151;
    uint64_t v150 = (uint8_t *)v123;
    *(_DWORD *)uint64_t v123 = 136315138;
    uint64_t v149 = (char *)(v123 + 4);
    sub_10096AD20((NSURL *)(v123 + 4));
    uint64_t v125 = v124;
    id v126 = objc_msgSend(v124, "fp_shortDescription");

    uint64_t v127 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v129 = v128;

    uint64_t v130 = v159;
    uint64_t v162 = sub_100719D44(v127, v129, (uint64_t *)&v163);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v153, "Calling completion handler with %s", v150, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v154(v139, v155);
    uint64_t v131 = v158;
  }
  else
  {

    v154(v118, v155);
    uint64_t v131 = v158;
    uint64_t v130 = v159;
  }
  v69(v27, (char *)v54, v130);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v27, 0, 1, v130);
  uint64_t v133 = v138;
  sub_10016A248((uint64_t)v27, v138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v133, 1, v130) == 1)
  {
    uint64_t v135 = 0;
  }
  else
  {
    sub_10096AD20(v134);
    uint64_t v135 = v136;
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v133, v130);
  }
  (*(void (**)(uint64_t, void *, void))(v157 + 16))(v157, v135, 0);
  swift_release();

  return sub_10002B770((uint64_t)v27, &qword_100ACA8C0);
}

uint64_t sub_100861AB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100861AF8()
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v5);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v6 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v5, v6);
  if (!v1)
  {
    unint64_t v9 = v8;
    if (v8 >> 60 != 15)
    {
      uint64_t v10 = result;
      sub_10096AA90();
      swift_allocObject();
      sub_10001EBB0(v10, v9);
      sub_10096AA80();
      sub_1008692E8(&qword_100ADCEE0, (void (*)(uint64_t))type metadata accessor for FPFeedbackManagerState);
      sub_10096AA70();
      uint64_t v11 = v0 + *(void *)(*(void *)v0 + 136);
      swift_beginAccess();
      sub_100869124((uint64_t)v4, v11);
      swift_endAccess();
      sub_1008690A4((uint64_t)v4);
      *(unsigned char *)(v0 + 72) = 1;
      sub_10001E9AC(v10, v9);
      swift_release();
      uint64_t result = sub_10001E9AC(v10, v9);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_100861D00()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  if (!v1)
  {
    unint64_t v6 = v5;
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = result;
      sub_10096AA90();
      swift_allocObject();
      sub_10001EBB0(v7, v6);
      sub_10096AA80();
      sub_10002B7CC(&qword_100AD7558);
      sub_100025500(&qword_100ADCA18, &qword_100AD7558);
      sub_10096AA70();
      swift_beginAccess();
      *(void *)(v0 + 80) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 72) = 1;
      sub_10001E9AC(v7, v6);
      swift_release();
      uint64_t result = sub_10001E9AC(v7, v6);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_100861E9C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10002689C((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  if (!v1)
  {
    unint64_t v6 = v5;
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = result;
      sub_10096AA90();
      swift_allocObject();
      sub_10001EBB0(v7, v6);
      sub_10096AA80();
      sub_10002B7CC(&qword_100AD7080);
      sub_100025500(&qword_100ADCF90, &qword_100AD7080);
      sub_10096AA70();
      swift_beginAccess();
      *(void *)(v0 + 80) = v8;
      *(void *)(v0 + 88) = v9;
      *(void *)(v0 + 96) = v10;
      *(_OWORD *)(v0 + 104) = v11;
      *(unsigned char *)(v0 + 120) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 72) = 1;
      sub_10001E9AC(v7, v6);
      swift_release();
      uint64_t result = sub_10001E9AC(v7, v6);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_1008620E0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100ADD020);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_10086AFC8();
  sub_10096D590();
  long long v9 = v3[1];
  long long v12 = *v3;
  long long v13 = v9;
  __int16 v14 = *((_WORD *)v3 + 16);
  v11[15] = 0;
  sub_1000A88DC();
  sub_10096D1A0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_10096D150();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_100862260()
{
  sub_10096D4B0();
  long long v6 = *(_OWORD *)(v0 + 16);
  __int16 v7 = *(_WORD *)(v0 + 32);
  sub_100345414((uint64_t *)&v6 + 1, (uint64_t)v8);
  sub_10096BD50();
  sub_10096D4C0(v6);
  sub_100345414(v8, (uint64_t)&v9);
  int v1 = v10;
  switch(v10)
  {
    case 0xFAu:
      Swift::UInt v2 = 5;
      goto LABEL_15;
    case 0xFBu:
      Swift::UInt v2 = 4;
      goto LABEL_15;
    case 0xFCu:
      goto LABEL_14;
    case 0xFDu:
      Swift::UInt v2 = 1;
      goto LABEL_15;
    case 0xFEu:
      Swift::UInt v2 = 0;
      goto LABEL_15;
    default:
      Swift::UInt64 v3 = v9;
      sub_10096D4C0(3uLL);
      if (v1 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v1)
        {
          if (v1 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v3);
          }
          else
          {
            if (v3) {
              Swift::UInt v2 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v2 = 2;
LABEL_15:
            sub_10096D4C0(v2);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v3);
        }
      }
      uint64_t v4 = SHIBYTE(v7);
      if (SHIBYTE(v7) == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v4]);
      }
      sub_10096BD50();
      return sub_10096D500();
  }
}

uint64_t sub_10086243C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100ADCF88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086A3D8();
  sub_10096D590();
  v12[0] = 0;
  sub_10096D150();
  if (!v2)
  {
    v12[0] = 1;
    sub_10096D180();
    sub_100345414((uint64_t *)(v3 + 24), (uint64_t)v14);
    sub_100345414(v14, (uint64_t)v12);
    char v11 = 2;
    sub_10049D7A4();
    sub_10096D1A0();
    sub_10086A42C(v3 + 33, (uint64_t)&v13);
    sub_10086A42C((uint64_t)&v13, (uint64_t)v12);
    char v11 = 3;
    sub_10049D7F8();
    sub_10096D100();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_10086263C()
{
  Swift::UInt v1 = *(void *)(v0 + 16);
  sub_100345414((uint64_t *)(v0 + 24), (uint64_t)v7);
  sub_10096D4B0();
  sub_10096BD50();
  sub_10096D4C0(v1);
  sub_100345414(v7, (uint64_t)&v8);
  int v2 = v9;
  switch(v9)
  {
    case 0xFAu:
      Swift::UInt v3 = 5;
      goto LABEL_15;
    case 0xFBu:
      Swift::UInt v3 = 4;
      goto LABEL_15;
    case 0xFCu:
      goto LABEL_14;
    case 0xFDu:
      Swift::UInt v3 = 1;
      goto LABEL_15;
    case 0xFEu:
      Swift::UInt v3 = 0;
      goto LABEL_15;
    default:
      Swift::UInt64 v4 = v8;
      sub_10096D4C0(3uLL);
      if (v2 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v2)
        {
          if (v2 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v4);
          }
          else
          {
            if (v4) {
              Swift::UInt v3 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v3 = 2;
LABEL_15:
            sub_10096D4C0(v3);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v4);
        }
      }
      uint64_t v5 = *(char *)(v0 + 33);
      if (v5 == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v5]);
      }
      return sub_10096D500();
  }
}

uint64_t sub_1008627F8(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100ADCF70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_10086A384();
  sub_10096D590();
  v8[15] = 0;
  sub_10096D150();
  if (!v1)
  {
    v8[14] = 1;
    sub_10096D170();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100862974(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100ADCF50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt64 v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086A288();
  sub_10096D590();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  __int16 v15 = *((_WORD *)v3 + 16);
  char v12 = 0;
  sub_1000A88DC();
  sub_10096D1A0();
  if (!v2)
  {
    long long v13 = *(long long *)((char *)v3 + 40);
    *(void *)&long long v14 = *((void *)v3 + 7);
    char v12 = 1;
    sub_10086A330();
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100862B14()
{
  return 0x676E696C706D6173;
}

uint64_t sub_100862B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E696C706D6173 && a2 == 0xEE00746C75736552)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10096D2D0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100862BF4(uint64_t a1)
{
  unint64_t v2 = sub_10086B01C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100862C30(uint64_t a1)
{
  unint64_t v2 = sub_10086B01C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100862C6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10002B7CC(&qword_100ADD010);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt64 v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086B01C();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  sub_10096D020();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1000268E0((uint64_t)a1);
  *a2 = v10;
  return result;
}

uint64_t sub_100862DD0(void *a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100ADD028);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086B01C();
  sub_10096D590();
  sub_10096D170();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100862F04()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_100862F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100869460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100862F6C(uint64_t a1)
{
  unint64_t v2 = sub_10086AFC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100862FA8(uint64_t a1)
{
  unint64_t v2 = sub_10086AFC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100862FE4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v2;
  __int16 v10 = *(_WORD *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v5;
  __int16 v12 = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  if (!sub_100868880((uint64_t)v9, (uint64_t)v11)) {
    return 0;
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_10096D2D0();
}

double sub_10086309C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100869550(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1008630EC(void *a1)
{
  return sub_1008620E0(a1);
}

uint64_t sub_100863108()
{
  Swift::UInt v2 = *(void *)(v0 + 16);
  Swift::UInt64 v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v4 = *(char *)(v0 + 33);
  sub_10096BD50();
  sub_10096D4C0(v2);
  switch(v3)
  {
    case 250:
      Swift::UInt v5 = 5;
      goto LABEL_18;
    case 251:
      Swift::UInt v5 = 4;
      goto LABEL_18;
    case 252:
      goto LABEL_17;
    case 253:
      Swift::UInt v5 = 1;
      goto LABEL_18;
    case 254:
      Swift::UInt v5 = 0;
      goto LABEL_18;
    default:
      sub_10096D4C0(3uLL);
      if (v3 == 255)
      {
        sub_10096D4D0(0);
        if (v4 == 70) {
          goto LABEL_19;
        }
LABEL_14:
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v4]);
        goto LABEL_20;
      }
      sub_10096D4D0(1u);
      if (v3)
      {
        if (v3 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v1);
          if (v4 == 70) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v1) {
            Swift::UInt v5 = 3;
          }
          else {
LABEL_17:
          }
            Swift::UInt v5 = 2;
LABEL_18:
          sub_10096D4C0(v5);
          if (v4 == 70) {
            goto LABEL_19;
          }
        }
        goto LABEL_14;
      }
      sub_10096D4C0(0);
      sub_10096D4E0(v1);
      if (v4 != 70) {
        goto LABEL_14;
      }
LABEL_19:
      sub_10096D4D0(0);
LABEL_20:
      return sub_10096BD50();
  }
}

Swift::Int sub_10086328C()
{
  Swift::UInt v2 = *(void *)(v0 + 16);
  Swift::UInt64 v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v4 = *(char *)(v0 + 33);
  sub_10096D4B0();
  sub_10096BD50();
  sub_10096D4C0(v2);
  switch(v3)
  {
    case 250:
      Swift::UInt v5 = 5;
      goto LABEL_15;
    case 251:
      Swift::UInt v5 = 4;
      goto LABEL_15;
    case 252:
      goto LABEL_14;
    case 253:
      Swift::UInt v5 = 1;
      goto LABEL_15;
    case 254:
      Swift::UInt v5 = 0;
      goto LABEL_15;
    default:
      sub_10096D4C0(3uLL);
      if (v3 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v3)
        {
          if (v3 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v1);
          }
          else
          {
            if (v1) {
              Swift::UInt v5 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v5 = 2;
LABEL_15:
            sub_10096D4C0(v5);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v1);
        }
      }
      if (v4 == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v4]);
      }
      sub_10096BD50();
      return sub_10096D500();
  }
}

uint64_t sub_100863450()
{
  uint64_t result = 0x6D6F44726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646F43726F727265;
      break;
    case 2:
      uint64_t result = 0x726944726F727265;
      break;
    case 3:
      uint64_t result = 0x65646F43626F6ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008634F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008697AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100863520(uint64_t a1)
{
  unint64_t v2 = sub_10086A3D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10086355C(uint64_t a1)
{
  unint64_t v2 = sub_10086A3D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_100863598(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  __int16 v6 = *(_WORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  __int16 v8 = *(_WORD *)(a2 + 32);
  return sub_100868880((uint64_t)v5, (uint64_t)v7);
}

double sub_1008635E4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008699B0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_WORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10086362C(void *a1)
{
  return sub_10086243C(a1);
}

Swift::Int sub_100863668()
{
  return sub_10086263C();
}

void sub_1008636A4()
{
  Swift::UInt v2 = *(void *)(v0 + 16);
  Swift::UInt64 v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v4 = *(char *)(v0 + 33);
  sub_10096BD50();
  sub_10096D4C0(v2);
  switch(v3)
  {
    case 250:
      Swift::UInt v5 = 5;
      goto LABEL_18;
    case 251:
      Swift::UInt v5 = 4;
      goto LABEL_18;
    case 252:
      goto LABEL_17;
    case 253:
      Swift::UInt v5 = 1;
      goto LABEL_18;
    case 254:
      Swift::UInt v5 = 0;
      goto LABEL_18;
    default:
      sub_10096D4C0(3uLL);
      if (v3 == 255)
      {
        sub_10096D4D0(0);
        if (v4 == 70) {
          goto LABEL_19;
        }
LABEL_14:
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v4]);
        return;
      }
      sub_10096D4D0(1u);
      if (v3)
      {
        if (v3 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v1);
          if (v4 == 70) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v1) {
            Swift::UInt v5 = 3;
          }
          else {
LABEL_17:
          }
            Swift::UInt v5 = 2;
LABEL_18:
          sub_10096D4C0(v5);
          if (v4 == 70) {
            goto LABEL_19;
          }
        }
        goto LABEL_14;
      }
      sub_10096D4C0(0);
      sub_10096D4E0(v1);
      if (v4 != 70) {
        goto LABEL_14;
      }
LABEL_19:
      sub_10096D4D0(0);
      return;
  }
}

Swift::Int sub_100863800()
{
  Swift::UInt v2 = *(void *)(v0 + 16);
  Swift::UInt64 v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v4 = *(char *)(v0 + 33);
  sub_10096D4B0();
  sub_10096BD50();
  sub_10096D4C0(v2);
  switch(v3)
  {
    case 250:
      Swift::UInt v5 = 5;
      goto LABEL_15;
    case 251:
      Swift::UInt v5 = 4;
      goto LABEL_15;
    case 252:
      goto LABEL_14;
    case 253:
      Swift::UInt v5 = 1;
      goto LABEL_15;
    case 254:
      Swift::UInt v5 = 0;
      goto LABEL_15;
    default:
      sub_10096D4C0(3uLL);
      if (v3 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v3)
        {
          if (v3 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v1);
          }
          else
          {
            if (v1) {
              Swift::UInt v5 = 3;
            }
            else {
LABEL_14:
            }
              Swift::UInt v5 = 2;
LABEL_15:
            sub_10096D4C0(v5);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0(v1);
        }
      }
      if (v4 == 70)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        sub_10096D4C0(qword_100990228[v4]);
      }
      return sub_10096D500();
  }
}

uint64_t sub_1008639A8()
{
  if (*v0) {
    return 0x676E696C706D6173;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1008639EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100869C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100863A14(uint64_t a1)
{
  unint64_t v2 = sub_10086A384();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100863A50(uint64_t a1)
{
  unint64_t v2 = sub_10086A384();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100863A8C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_100869D50(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_100863ABC(void *a1)
{
  return sub_1008627F8(a1);
}

unint64_t sub_100863ADC()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_100863B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100869F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100863B48(uint64_t a1)
{
  unint64_t v2 = sub_10086A288();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100863B84(uint64_t a1)
{
  unint64_t v2 = sub_10086A288();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100863BC0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10086A02C(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100863C04(void *a1)
{
  return sub_100862974(a1);
}

uint64_t sub_100863C1C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  __int16 v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016D1D8(v2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10016D178((uint64_t)v6);
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_10002689C(a1, v11);
    sub_10059A0E8(0xD00000000000001FLL, (void *)0x80000001009BD2A0, v11, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_10002689C(a1, v13);
    uint64_t v23 = 0;
    uint64_t v24 = (void *)0xE000000000000000;
    sub_10096CBD0(30);
    swift_bridgeObjectRelease();
    uint64_t v23 = 0xD00000000000001CLL;
    uint64_t v24 = (void *)0x80000001009BD300;
    sub_1008692E8((unint64_t *)&unk_100ACB700, (void (*)(uint64_t))&type metadata accessor for Date);
    v25._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    sub_10059A0E8(v23, v24, v13, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v15 = *(void *)(*(void *)(v2 + *(int *)(type metadata accessor for FPFeedbackManagerState() + 20)) + 16);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_10002689C(a1, v16);
  if (!v15) {
    return sub_10059A0E8(0xD000000000000018, (void *)0x80000001009BD2E0, v16, v17);
  }
  sub_10059A0E8(0xD000000000000012, (void *)0x80000001009BD2C0, v16, v17);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = sub_10002689C(a1, v18);
  __chkstk_darwin(v20);
  *(&v22 - 2) = v2;
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_100869100, (uint64_t)(&v22 - 4), v18, (uint64_t)&type metadata for () + 8, v19);
}

uint64_t sub_100863FA0()
{
  type metadata accessor for FPFeedbackManagerState();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_100868ACC(v0, (void (*)(_OWORD *, double))sub_10086911C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100864024(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  sub_10002689C(a2, v2);
  v5._uint64_t countAndFlagsBits = 8237;
  v5._object = (void *)0xE200000000000000;
  sub_10096BDC0(v5);
  sub_10096CDF0();
  v6._uint64_t countAndFlagsBits = 8250;
  v6._object = (void *)0xE200000000000000;
  sub_10096BDC0(v6);
  sub_10096CDF0();
  sub_10059A0E8(0, (void *)0xE000000000000000, v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100864128(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100ADCF18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_100869188();
  sub_10096D590();
  char v12 = 0;
  sub_10096B0E0();
  sub_1008692E8(&qword_100ACB9B8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10096D100();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for FPFeedbackManagerState() + 20));
    v10[15] = 1;
    sub_10002B7CC(&qword_100ADCEF8);
    sub_100869330(&qword_100ADCF20, (void (*)(void))sub_1008693B8, (void (*)(void))sub_10086940C);
    sub_10096D1A0();
    v10[14] = 2;
    sub_10096D140();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10086437C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10002B7CC(&qword_100ADCEE8);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FPFeedbackManagerState();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  __int16 v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B0E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = *(int *)(v8 + 28);
  *(void *)&v10[v12] = sub_10009333C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v13 = &v10[*(int *)(v8 + 32)];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  sub_10002689C(a1, a1[3]);
  sub_100869188();
  uint64_t v30 = v6;
  uint64_t v14 = v33;
  sub_10096D570();
  if (v14)
  {
    uint64_t v24 = (uint64_t)a1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)v13;
    uint64_t v27 = v12;
    uint64_t v33 = a1;
    uint64_t v15 = v29;
    char v37 = 0;
    sub_1008692E8(&qword_100ACB9F0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = v30;
    sub_10096CFB0();
    sub_100157A4C(v32, (uint64_t)v10);
    sub_10002B7CC(&qword_100ADCEF8);
    char v36 = 1;
    sub_100869330(&qword_100ADCF00, (void (*)(void))sub_1008691DC, (void (*)(void))sub_100869230);
    sub_10096D040();
    uint64_t v18 = v34;
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    *(void *)&v10[v19] = v18;
    char v35 = 2;
    uint64_t v20 = sub_10096CFF0();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v31);
    uint64_t v23 = v26;
    uint64_t *v26 = v20;
    *((unsigned char *)v23 + 8) = v22 & 1;
    sub_100869284((uint64_t)v10, v28);
    uint64_t v24 = (uint64_t)v33;
  }
  sub_1000268E0(v24);
  return sub_1008690A4((uint64_t)v10);
}

unint64_t sub_10086474C()
{
  unint64_t v1 = 0x676E696C706D6173;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_1008647B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10086AE54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008647E0(uint64_t a1)
{
  unint64_t v2 = sub_100869188();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10086481C(uint64_t a1)
{
  unint64_t v2 = sub_100869188();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100864858@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086437C(a1, a2);
}

uint64_t sub_100864870(void *a1)
{
  return sub_100864128(a1);
}

unint64_t sub_100864888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10096B0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = *(int *)(a1 + 20);
  unint64_t result = sub_10009333C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(a2 + v5) = result;
  uint64_t v7 = a2 + *(int *)(a1 + 24);
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  return result;
}

uint64_t type metadata accessor for RandomSampling()
{
  return self;
}

uint64_t sub_100864940()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1008649A8()
{
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for FPFeedbackManagerState();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + 112);
  sub_100861AF8();
  if (!v1)
  {
    uint64_t v17 = v15 + *(void *)(*(void *)v15 + 136);
    swift_beginAccess();
    sub_100869284(v17, (uint64_t)v14);
    sub_10016D1D8((uint64_t)v14, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1008690A4((uint64_t)v14);
      sub_10016D178((uint64_t)v4);
      char v16 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      sub_10096B0B0();
      char v18 = sub_10096B040();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v19(v9, v5);
      v19(v11, v5);
      sub_1008690A4((uint64_t)v14);
      char v16 = v18 ^ 1;
    }
  }
  return v16 & 1;
}

uint64_t sub_100864C20(uint64_t a1)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(unsigned char **)(v1 + 112);
  uint64_t result = sub_100861AF8();
  if (!v2)
  {
    uint64_t v9 = sub_10096B0E0();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v11 = (uint64_t)&v7[*(void *)(*(void *)v7 + 136)];
    swift_beginAccess();
    sub_100157A4C((uint64_t)v6, v11);
    swift_endAccess();
    v7[72] = 1;
    return sub_1004D24C0();
  }
  return result;
}

uint64_t sub_100864DA4(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = sub_10096B1E0();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v6 = sub_10096B1F0();
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v7 = sub_10096B0E0();
  v3[27] = v7;
  v3[28] = *(void *)(v7 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = v4[12];
  v3[34] = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[35] = v4[13];
  v3[36] = v4[11];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  v3[2] = AssociatedTypeWitness;
  v3[3] = v9;
  v3[4] = AssociatedConformanceWitness;
  v3[5] = v11;
  v3[37] = type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3[38] = TupleTypeMetadata3;
  uint64_t v13 = sub_10096C890();
  v3[39] = v13;
  v3[40] = *(void *)(v13 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = *(void *)(TupleTypeMetadata3 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  return _swift_task_switch(sub_1008651B0, v2, 0);
}

uint64_t sub_1008651B0()
{
  if (!fpfs_supports_tap_to_feedback())
  {
    *(void *)(v0 + 104) = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v2 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = (void *)swift_task_alloc();
    _OWORD v7[2] = v5;
    v7[3] = v3;
    v7[4] = v6;
    v7[5] = v4;
    swift_getTupleTypeMetadata3();
    uint64_t v8 = sub_10096C1C0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v96 = sub_1003FC0AC((void (*)(char *, char *))sub_10086B458, (uint64_t)v7, v8, v2, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
    swift_task_dealloc();
    int v11 = 10;
LABEL_4:
    unsigned int v88 = v11;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v12(v88, v96);
  }
  char v1 = sub_1008649A8();
  uint64_t v15 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 272);
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v18 = *(void *)(v0 + 264);
  if (v1)
  {
    *(void *)(v0 + 120) = *(void *)(v0 + 128);
    uint64_t v19 = (void *)swift_task_alloc();
    v19[2] = v16;
    void v19[3] = v15;
    v19[4] = v18;
    v19[5] = v17;
    swift_getTupleTypeMetadata3();
    uint64_t v20 = sub_10096C1C0();
    uint64_t v21 = swift_getWitnessTable();
    uint64_t v96 = sub_1003FC0AC((void (*)(char *, char *))sub_10086A564, (uint64_t)v19, v20, v14, (uint64_t)&type metadata for Never, v21, (uint64_t)&protocol witness table for Never, v22);
    swift_task_dealloc();
    unsigned int v88 = 0;
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v0 + 144);
  *(void *)(v0 + 72) = *(void *)(v0 + 128);
  uint64_t v24 = (void *)swift_task_alloc();
  v24[2] = v16;
  v24[3] = v15;
  v24[4] = v18;
  v24[5] = v17;
  v24[6] = sub_10086A494;
  v24[7] = v23;
  swift_getTupleTypeMetadata3();
  uint64_t v25 = sub_10096C1C0();
  swift_getWitnessTable();
  uint64_t v26 = sub_10096BF10();
  *(void *)(v0 + 376) = v26;
  uint64_t v92 = *(void *)(v0 + 336);
  uint64_t v89 = *(void *)(v0 + 328);
  uint64_t v83 = *(void *)(v0 + 304);
  uint64_t v27 = *(void *)(v0 + 280);
  uint64_t v28 = *(void *)(v0 + 288);
  uint64_t v95 = v25;
  uint64_t v29 = *(void *)(v0 + 264);
  uint64_t v30 = *(void *)(v0 + 272);
  uint64_t v31 = *(void *)(v0 + 128);
  uint64_t v32 = v26;
  swift_task_dealloc();
  *(void *)(v0 + 80) = v31;
  uint64_t v33 = (void *)swift_task_alloc();
  v33[2] = v30;
  void v33[3] = v28;
  v33[4] = v29;
  v33[5] = v27;
  uint64_t v96 = v32;
  v33[6] = v32;
  uint64_t v34 = (void *)swift_task_alloc();
  v34[2] = v30;
  v34[3] = v28;
  v34[4] = v29;
  v34[5] = v27;
  v34[6] = sub_10086A4DC;
  v34[7] = v33;
  uint64_t v35 = sub_10096BF10();
  *(void *)(v0 + 384) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v0 + 88) = v35;
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096C450();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v89, 1, v83) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
    int v11 = 3;
    goto LABEL_4;
  }
  uint64_t v36 = *(void *)(v0 + 368);
  uint64_t v37 = *(void *)(v0 + 328);
  uint64_t v38 = *(void *)(v0 + 304);
  uint64_t v39 = *(void *)(v0 + 144);
  uint64_t v40 = *(int *)(v38 + 48);
  uint64_t v41 = v36 + v40;
  uint64_t v42 = *(int *)(v38 + 64);
  uint64_t v43 = (uint64_t *)(v36 + v42);
  uint64_t v44 = (uint64_t *)(v37 + v40);
  uint64_t v45 = (uint64_t *)(v37 + v42);
  uint64_t v46 = *(void *)(*(void *)(v0 + 296) - 8);
  *(void *)(v0 + 392) = v46;
  (*(void (**)(void))(v46 + 32))();
  uint64_t v47 = *v44;
  *(void *)(v0 + 400) = *v44;
  uint64_t v48 = v44[1];
  *(void *)(v0 + 408) = v48;
  uint64_t v49 = v44[2];
  *(void *)(v0 + 416) = v49;
  uint64_t v50 = v44[3];
  *(void *)(v0 + 424) = v50;
  char v51 = *((unsigned char *)v44 + 32);
  *(unsigned char *)(v0 + 552) = v51;
  char v52 = *((unsigned char *)v44 + 33);
  *(unsigned char *)(v0 + 553) = v52;
  uint64_t v53 = v44[5];
  *(void *)(v0 + 432) = v53;
  uint64_t v54 = v44[6];
  *(void *)(v0 + 440) = v54;
  uint64_t v55 = v44[7];
  *(void *)(v0 + 448) = v55;
  *(void *)uint64_t v41 = v47;
  *(void *)(v41 + 8) = v48;
  *(void *)(v41 + 16) = v49;
  *(void *)(v41 + 24) = v50;
  *(unsigned char *)(v41 + 32) = v51;
  *(unsigned char *)(v41 + 33) = v52;
  *(void *)(v41 + 40) = v53;
  *(void *)(v41 + 48) = v54;
  *(void *)(v41 + 56) = v55;
  uint64_t v56 = *v45;
  *(void *)(v0 + 456) = *v45;
  uint64_t v57 = v45[1];
  *(void *)(v0 + 464) = v57;
  *uint64_t v43 = v56;
  v43[1] = v57;
  LOBYTE(v39) = *(unsigned char *)(v39 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v39 & 1) == 0 && !fp_shouldObfuscateFilenames())
  {
    uint64_t v94 = *(void *)(v0 + 368);
    uint64_t v73 = *(void *)(v0 + 336);
    uint64_t v91 = *(void *)(v0 + 304);
    uint64_t v74 = *(void *)(v0 + 288);
    uint64_t v75 = *(void *)(v0 + 272);
    uint64_t v85 = *(void *)(v0 + 280);
    uint64_t v87 = *(void *)(v0 + 296);
    uint64_t v76 = *(void *)(v0 + 264);
    uint64_t v77 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = v77;
    char v78 = (void *)swift_task_alloc();
    v78[2] = v75;
    v78[3] = v74;
    v78[4] = v76;
    v78[5] = v85;
    uint64_t v79 = swift_getWitnessTable();
    uint64_t v96 = sub_1003FC0AC((void (*)(char *, char *))sub_10086B458, (uint64_t)v78, v95, v87, (uint64_t)&type metadata for Never, v79, (uint64_t)&protocol witness table for Never, v80);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v94, v91);
    swift_task_dealloc();
    int v11 = 11;
    goto LABEL_4;
  }
  uint64_t v58 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v58 + 161))
  {
    uint64_t v93 = *(void *)(v0 + 368);
    uint64_t v59 = *(void *)(v0 + 336);
    uint64_t v90 = *(void *)(v0 + 304);
    uint64_t v60 = *(void *)(v0 + 288);
    uint64_t v61 = *(void *)(v0 + 272);
    uint64_t v84 = *(void *)(v0 + 280);
    uint64_t v86 = *(void *)(v0 + 296);
    uint64_t v62 = *(void *)(v0 + 264);
    uint64_t v63 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = v63;
    id v64 = (void *)swift_task_alloc();
    v64[2] = v61;
    v64[3] = v60;
    v64[4] = v62;
    v64[5] = v84;
    uint64_t v65 = swift_getWitnessTable();
    uint64_t v96 = sub_1003FC0AC((void (*)(char *, char *))sub_10086B458, (uint64_t)v64, v95, v86, (uint64_t)&type metadata for Never, v65, (uint64_t)&protocol witness table for Never, v66);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v93, v90);
    swift_task_dealloc();
    int v11 = 5;
    goto LABEL_4;
  }
  uint64_t v67 = *(void *)(v58 + 112);
  *(void *)(v0 + 472) = v67;
  uint64_t v68 = *(void *)(*(void *)v67 + 136);
  *(void *)(v0 + 480) = v68;
  uint64_t v69 = v67 + v68;
  swift_beginAccess();
  uint64_t v70 = type metadata accessor for FPFeedbackManagerState();
  *(void *)(v0 + 488) = v70;
  uint64_t v71 = v69 + *(int *)(v70 + 24);
  char v72 = (*(unsigned char *)(v71 + 8) & 1) == 0 && *(void *)v71 > 2uLL;
  id v81 = *(void **)(v0 + 136);
  *(unsigned char *)(v58 + 161) = 1;
  sub_10002689C(v81, v81[3]);
  uint64_t v82 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v82;
  *uint64_t v82 = v0;
  v82[1] = sub_100865B6C;
  return sub_1000927F8(v56, v57, v72);
}

uint64_t sub_100865B6C(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  *(unsigned char *)(*(void *)v1 + 554) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100865C84, v2, 0);
}

uint64_t sub_100865C84()
{
  int v1 = *(unsigned __int8 *)(v0 + 554);
  uint64_t v2 = *(void *)(v0 + 488);
  *(unsigned char *)(*(void *)(v0 + 144) + 161) = 0;
  uint64_t v3 = *(int *)(v2 + 24);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 480);
  if (v1 == 1)
  {
    uint64_t v6 = (uint64_t *)(v5 + v4 + v3);
    if (v6[1])
    {
      uint64_t v7 = 1;
    }
    else
    {
      uint64_t v8 = *v6;
      BOOL v9 = __CFADD__(v8, 1);
      uint64_t v7 = v8 + 1;
      if (v9)
      {
        __break(1u);
        JUMPOUT(0x1008667D8);
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = v5 + v4 + v3;
  *(void *)uint64_t v11 = v7;
  *(unsigned char *)(v11 + 8) = 0;
  *(unsigned char *)(v5 + 72) = 1;
  sub_1004D24C0();
  if (v10)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 304));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    switch(*(unsigned char *)(v0 + 554))
    {
      case 1:
      case 3:
      case 4:
      case 5:
        uint64_t v14 = *(void *)(v0 + 480);
        uint64_t v15 = *(void *)(v0 + 488);
        uint64_t v16 = *(void *)(v0 + 472);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v16 + v14 + *(int *)(v15 + 24);
        if ((*(unsigned char *)(v17 + 8) & 1) != 0 || *(void *)v17 != 1) {
          uint64_t v18 = &selRef_spsFeedbackBackoffAfterOtherResponses_MultipleAttempts_InSeconds;
        }
        else {
          uint64_t v18 = &selRef_spsFeedbackBackoffAfterOtherResponsesInSeconds;
        }
        uint64_t v19 = *(void *)(v0 + 240);
        uint64_t v20 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 208);
        uint64_t v22 = *(void *)(v0 + 192);
        uint64_t v88 = *(void *)(v0 + 216);
        uint64_t v92 = *(void *)(v0 + 184);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v94 = *(void *)(v0 + 176);
        uint64_t v24 = *(void *)(v0 + 152);
        uint64_t v25 = *(void *)(v0 + 160);
        id v26 = [self defaultStore];
        [v26 *v18];

        sub_10096B1D0();
        (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v23, enum case for Calendar.Component.second(_:), v24);
        sub_10096B0B0();
        sub_10096B1C0();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v27(v19, v88);
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v22, v94);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v88) == 1)
        {
          uint64_t v28 = *(void *)(v0 + 368);
          uint64_t v29 = *(void *)(v0 + 336);
          uint64_t v30 = *(void *)(v0 + 304);
          uint64_t v31 = *(void *)(v0 + 208);
          swift_bridgeObjectRelease();
          sub_10016D178(v31);
          uint64_t v89 = sub_10096C110();
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
          goto LABEL_17;
        }
        uint64_t v33 = *(void *)(v0 + 248);
        (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 224) + 32))(v33, *(void *)(v0 + 208), *(void *)(v0 + 216));
        sub_100864C20(v33);
        uint64_t v48 = *(void *)(v0 + 368);
        uint64_t v49 = *(void *)(v0 + 336);
        uint64_t v50 = *(void *)(v0 + 304);
        v27(*(void *)(v0 + 248), *(void *)(v0 + 216));
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        uint64_t v89 = *(void *)(v0 + 376);
        int v32 = 7;
        goto LABEL_23;
      case 2:
        uint64_t v44 = *(void *)(v0 + 256);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10096B000();
        sub_100864C20(v44);
        uint64_t v45 = *(void *)(v0 + 368);
        uint64_t v46 = *(void *)(v0 + 336);
        uint64_t v47 = *(void *)(v0 + 304);
        (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 216));
        uint64_t v89 = sub_10096C110();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        int v32 = 8;
        goto LABEL_23;
      default:
        uint64_t v34 = *(void *)(v0 + 240);
        uint64_t v35 = *(void *)(v0 + 224);
        uint64_t v36 = *(void *)(v0 + 192);
        uint64_t v37 = *(void *)(v0 + 200);
        uint64_t v90 = *(void *)(v0 + 216);
        uint64_t v93 = *(void *)(v0 + 184);
        uint64_t v38 = *(void *)(v0 + 168);
        uint64_t v95 = *(void *)(v0 + 176);
        uint64_t v39 = *(void *)(v0 + 152);
        uint64_t v40 = *(void *)(v0 + 160);
        id v41 = [self defaultStore];
        [v41 spsFeedbackBackoffAfterSayingYesInSeconds];

        sub_10096B1D0();
        (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v38, enum case for Calendar.Component.second(_:), v39);
        sub_10096B0B0();
        sub_10096B1C0();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        *(void *)(v0 + 504) = v42;
        *(void *)(v0 + 512) = (v35 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v42(v34, v90);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
        (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v36, v95);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v90) == 1)
        {
          uint64_t v43 = *(void *)(v0 + 200);
          (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 304));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10016D178(v43);
          uint64_t v89 = *(void *)(v0 + 376);
LABEL_17:
          int v32 = 4;
LABEL_23:
          unsigned int v86 = v32;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v53 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
          uint64_t result = v53(v86, v89);
        }
        else
        {
          uint64_t v51 = *(void *)(v0 + 232);
          (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 224) + 32))(v51, *(void *)(v0 + 200), *(void *)(v0 + 216));
          sub_100864C20(v51);
          uint64_t v52 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 456);
          uint64_t v54 = *(void *)(v0 + 448);
          uint64_t v55 = *(void *)(v0 + 432);
          uint64_t v82 = *(void *)(v0 + 440);
          char v84 = *(unsigned char *)(v0 + 553);
          char v56 = *(unsigned char *)(v0 + 552);
          uint64_t v58 = *(void *)(v0 + 416);
          uint64_t v57 = *(void *)(v0 + 424);
          uint64_t v60 = *(void *)(v0 + 400);
          uint64_t v59 = *(void *)(v0 + 408);
          uint64_t v80 = v59;
          uint64_t v96 = *(void *)(v0 + 392);
          uint64_t v91 = *(void *)(v0 + 368);
          uint64_t v75 = *(void *)(v0 + 360);
          uint64_t v81 = *(void *)(v0 + 352);
          uint64_t v61 = *(void *)(v0 + 304);
          uint64_t v83 = *(void *)(v0 + 296);
          char v78 = *(void **)(v0 + 136);
          uint64_t v79 = *(void *)(v0 + 344);
          uint64_t v62 = v75 + *(int *)(v61 + 48);
          uint64_t v76 = (void *)(v75 + *(int *)(v61 + 64));
          uint64_t v87 = *(void (**)(void))(v96 + 16);
          v87();
          *(void *)uint64_t v62 = v60;
          *(void *)(v62 + 8) = v59;
          *(void *)(v62 + 16) = v58;
          *(void *)(v62 + 24) = v57;
          *(unsigned char *)(v62 + 32) = v56;
          *(unsigned char *)(v62 + 33) = v84;
          *(void *)(v62 + 40) = v55;
          *(void *)(v62 + 48) = v82;
          *(void *)(v62 + 56) = v54;
          *uint64_t v76 = v85;
          v76[1] = v52;
          uint64_t v74 = v61;
          uint64_t v63 = v81 + *(int *)(v61 + 48);
          id v64 = (void *)(v81 + *(int *)(v61 + 64));
          v87();
          *(void *)uint64_t v63 = v60;
          *(void *)(v63 + 8) = v59;
          *(void *)(v63 + 16) = v58;
          *(void *)(v63 + 24) = v57;
          *(unsigned char *)(v63 + 32) = v56;
          *(unsigned char *)(v63 + 33) = v84;
          *(void *)(v63 + 40) = v55;
          *(void *)(v63 + 48) = v82;
          *(void *)(v63 + 56) = v54;
          *id v64 = v85;
          v64[1] = v52;
          id v65 = objc_allocWithZone((Class)NSError);
          swift_bridgeObjectRetain();
          NSString v66 = sub_10096BC00();
          swift_bridgeObjectRelease();
          id v77 = [v65 initWithDomain:v66 code:v58 userInfo:0];
          *(void *)(v0 + 520) = v77;

          uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
          v67(v81, v83);
          v67(v75, v83);
          sub_10002689C(v78, v78[3]);
          uint64_t v68 = v79 + *(int *)(v74 + 48);
          uint64_t v69 = (void *)(v79 + *(int *)(v74 + 64));
          ((void (*)(uint64_t, uint64_t, uint64_t))v87)(v79, v91, v83);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v68 = v60;
          *(void *)(v68 + 8) = v80;
          *(void *)(v68 + 16) = v58;
          *(void *)(v68 + 24) = v57;
          *(unsigned char *)(v68 + 32) = v56;
          *(unsigned char *)(v68 + 33) = v84;
          *(void *)(v68 + 40) = v55;
          *(void *)(v68 + 48) = v82;
          *(void *)(v68 + 56) = v54;
          *uint64_t v69 = v85;
          v69[1] = v52;
          uint64_t v70 = sub_1005EBE40(v83);
          uint64_t v72 = v71;
          *(void *)(v0 + 528) = v71;
          v67(v79, v83);
          uint64_t v73 = (void *)swift_task_alloc();
          *(void *)(v0 + 536) = v73;
          *uint64_t v73 = v0;
          v73[1] = sub_1008667F0;
          uint64_t result = sub_1000963C4(v70, v72, (uint64_t)v77);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1008667F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100866AA0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 144);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100866948;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100866948()
{
  int v1 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v9 = *(void *)(v0 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v7(6, v9);
}

uint64_t sub_100866AA0()
{
  int v1 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100866BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  __int16 v15 = *(_WORD *)(a2 + 32);
  uint64_t result = sub_1007EA5F4((uint64_t)v14, *(void *)(a2 + 40), *(void *)(a2 + 48), *(double *)(a2 + 56));
  if (!v3)
  {
    char v8 = result;
    uint64_t v13 = a1;
    uint64_t v16 = a3;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = v16;
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    if (v8)
    {
      uint64_t v10 = type metadata accessor for ReconciliationID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      uint64_t v11 = type metadata accessor for ReconciliationID();
      uint64_t v12 = *(void *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v13, v11);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return result;
}

uint64_t sub_100866E14(uint64_t a1, uint64_t (*a2)(uint64_t, long long *, void, void))
{
  *(void *)&long long v9 = swift_getAssociatedTypeWitness();
  *((void *)&v9 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v10 = swift_getAssociatedConformanceWitness();
  *((void *)&v10 + 1) = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v4 = (long long *)(a1 + *(int *)(TupleTypeMetadata3 + 48));
  long long v5 = v4[1];
  long long v9 = *v4;
  long long v10 = v5;
  long long v6 = v4[3];
  long long v11 = v4[2];
  long long v12 = v6;
  return a2(a1, &v9, *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64)), *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64) + 8));
}

uint64_t sub_100866F78@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for ReconciliationID();
  sub_10096C1C0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  char v8 = sub_10096BF80();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v10 = TupleTypeMetadata3;
  if (v8) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(a5, 1, 1, TupleTypeMetadata3);
  }
  long long v12 = (_OWORD *)(a5 + *(int *)(TupleTypeMetadata3 + 48));
  uint64_t v13 = (void *)(a5 + *(int *)(TupleTypeMetadata3 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a5, a1, v7);
  long long v14 = a2[1];
  *long long v12 = *a2;
  v12[1] = v14;
  long long v15 = a2[3];
  v12[2] = a2[2];
  v12[3] = v15;
  *uint64_t v13 = a3;
  v13[1] = a4;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 0, 1, v10);
  sub_1000A696C((uint64_t)a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1008671F4(uint64_t a1, uint64_t (*a2)(uint64_t, long long *, void, void))
{
  *(void *)&long long v9 = swift_getAssociatedTypeWitness();
  *((void *)&v9 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v10 = swift_getAssociatedConformanceWitness();
  *((void *)&v10 + 1) = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v4 = (long long *)(a1 + *(int *)(TupleTypeMetadata3 + 48));
  long long v5 = v4[1];
  long long v9 = *v4;
  long long v10 = v5;
  long long v6 = v4[3];
  long long v11 = v4[2];
  long long v12 = v6;
  return a2(a1, &v9, *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64)), *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64) + 8));
}

uint64_t sub_100867358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  __chkstk_darwin(TupleTypeMetadata3 - 8);
  long long v6 = (char *)&v9 - v5;
  uint64_t v7 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v5, a1, v3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10, v6, v3);
}

uint64_t sub_100867520()
{
  swift_release();
  sub_1000268E0(v0 + 120);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100867550()
{
  sub_100867520();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for FPFeedbackManager()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_100867594(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10096B0E0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100867728(uint64_t a1)
{
  uint64_t v2 = sub_10096B0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_1008677F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100867938(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  return a1;
}

char *sub_100867AF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)int v10 = *(void *)v11;
  v10[8] = v11[8];
  return a1;
}

char *sub_100867C30(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

uint64_t sub_100867DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100867DF4);
}

uint64_t sub_100867DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100867EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100867ECC);
}

uint64_t sub_100867ECC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FPFeedbackManagerState()
{
  uint64_t result = qword_100ADCE58;
  if (!qword_100ADCE58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100867FD8()
{
  sub_1001591DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorAndValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorAndValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorAndValue()
{
  return &type metadata for TargetedSPSErrorAndValue;
}

void *sub_10086827C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TargetedSPSErrorValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for TargetedSPSErrorValue(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorValue()
{
  return &type metadata for TargetedSPSErrorValue;
}

uint64_t initializeWithCopy for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 initializeWithTake for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSError()
{
  return &type metadata for TargetedSPSError;
}

unint64_t sub_100868590()
{
  unint64_t result = qword_100ADCE98;
  if (!qword_100ADCE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCE98);
  }
  return result;
}

uint64_t sub_1008685E4()
{
  return v0;
}

uint64_t sub_1008685F0()
{
  return sub_1008685E4();
}

uint64_t sub_10086860C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1008686B4;
  return sub_100864DA4(a1, a2);
}

uint64_t sub_1008686B4(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_1008687C4(void *a1)
{
  return sub_100868C80(a1);
}

uint64_t sub_1008687D4(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  unint64_t result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_1008687D4(v6, a2, a3);
  }
  return result;
}

BOOL sub_100868880(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_10096D2D0(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
    {
      sub_100345414((uint64_t *)(a1 + 24), (uint64_t)v12);
      sub_100345414((uint64_t *)(a2 + 24), (uint64_t)v11);
      sub_100345414(v12, (uint64_t)&v13);
      int v7 = v14;
      switch(v14)
      {
        case 0xFAu:
          sub_100345414(v11, (uint64_t)&v15);
          if (v16 != 250) {
            return 0;
          }
          goto LABEL_21;
        case 0xFBu:
          sub_100345414(v11, (uint64_t)&v15);
          if (v16 != 251) {
            return 0;
          }
          goto LABEL_21;
        case 0xFCu:
          sub_100345414(v11, (uint64_t)&v15);
          if (v16 != 252) {
            return 0;
          }
          goto LABEL_21;
        case 0xFDu:
          sub_100345414(v11, (uint64_t)&v15);
          if (v16 != 253) {
            return 0;
          }
          goto LABEL_21;
        case 0xFEu:
          sub_100345414(v11, (uint64_t)&v15);
          if (v16 != 254) {
            return 0;
          }
          goto LABEL_21;
        default:
          uint64_t v8 = v13;
          sub_100345414(v11, (uint64_t)&v15);
          if ((v16 + 6) < 5u) {
            return 0;
          }
          if (v7 == 255)
          {
            if (v16 != 255) {
              return 0;
            }
          }
          else
          {
            if (v16 == 255) {
              return 0;
            }
            if (v7)
            {
              if (v7 == 1)
              {
                BOOL result = 0;
                if (v16 != 1 || v8 != v15) {
                  return result;
                }
              }
              else
              {
                BOOL result = 0;
                if (v8)
                {
                  if (v16 != 2 || v15 != 1) {
                    return result;
                  }
                }
                else if (v16 != 2 || v15)
                {
                  return result;
                }
              }
            }
            else
            {
              BOOL result = 0;
              if (v16 || v8 != v15) {
                return result;
              }
            }
          }
LABEL_21:
          uint64_t v9 = *(char *)(a1 + 33);
          uint64_t v10 = *(char *)(a2 + 33);
          if (v9 == 70) {
            return v10 == 70;
          }
          if (v10 != 70 && qword_100990228[v9] == qword_100990228[v10]) {
            return 1;
          }
          break;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100868ACC(uint64_t a1, void (*a2)(_OWORD *, double))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v8) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v4 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v4 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v4 + 8 * v10);
        if (!v20)
        {
          int64_t v10 = v19 + 3;
          if (v19 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v4 + 8 * v10);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 48) + 56 * v12;
    long long v16 = *(_OWORD *)(v14 + 16);
    long long v15 = *(_OWORD *)(v14 + 32);
    long long v17 = *(_OWORD *)v14;
    uint64_t v23 = *(void *)(v14 + 48);
    v22[1] = v16;
    v22[2] = v15;
    v22[0] = v17;
    double v18 = *(double *)(v13 + 8 * v12);
    sub_1000A696C((uint64_t)v22);
    a2(v22, v18);
    uint64_t result = sub_1000A6F7C((uint64_t)v22);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v8) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v4 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v4 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100868C80(void *a1)
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  __chkstk_darwin(v2);
  uint64_t v4 = v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  uint64_t v5 = type metadata accessor for GlobalResourceStore();
  swift_allocObject();
  uint64_t v6 = sub_100437034();
  v14[3] = v5;
  v14[4] = &off_100A89B40;
  v14[0] = v6;
  sub_10009CA78((uint64_t)v14, (uint64_t)v13);
  sub_10002B7CC(&qword_100AD64B0);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 72) = 0;
  sub_10009CA78((uint64_t)v13, v7 + 16);
  uint64_t v8 = sub_10096B0E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = *(int *)(v2 + 20);
  *(void *)&v4[v9] = sub_10009333C((uint64_t)_swiftEmptyArrayStorage);
  int64_t v10 = &v4[*(int *)(v2 + 24)];
  *(void *)int64_t v10 = 0;
  v10[8] = 1;
  sub_1000268E0((uint64_t)v13);
  sub_100869040((uint64_t)v4, v7 + *(void *)(*(void *)v7 + 136));
  *(void *)(v7 + 56) = 0xD000000000000016;
  *(void *)(v7 + 64) = 0x800000010098F7F0;
  swift_retain();
  sub_100861AF8();
  sub_1000268E0((uint64_t)v14);
  swift_release();
  swift_beginAccess();
  sub_100863C1C(a1);
  swift_setDeallocating();
  sub_1000268E0(v7 + 16);
  swift_bridgeObjectRelease();
  sub_1008690A4(v7 + *(void *)(*(void *)v7 + 136));
  return swift_deallocClassInstance();
}

uint64_t sub_100869040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008690A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100869100()
{
  return sub_100863FA0();
}

uint64_t sub_10086911C(uint64_t a1)
{
  return sub_100864024(a1, *(void **)(v1 + 16));
}

uint64_t sub_100869124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_100869188()
{
  unint64_t result = qword_100ADCEF0;
  if (!qword_100ADCEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCEF0);
  }
  return result;
}

unint64_t sub_1008691DC()
{
  unint64_t result = qword_100ADCF08;
  if (!qword_100ADCF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF08);
  }
  return result;
}

unint64_t sub_100869230()
{
  unint64_t result = qword_100ADCF10;
  if (!qword_100ADCF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF10);
  }
  return result;
}

uint64_t sub_100869284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008692E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100869330(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100033BE8(&qword_100ADCEF8);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008693B8()
{
  unint64_t result = qword_100ADCF28;
  if (!qword_100ADCF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF28);
  }
  return result;
}

unint64_t sub_10086940C()
{
  unint64_t result = qword_100ADCF30;
  if (!qword_100ADCF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF30);
  }
  return result;
}

uint64_t sub_100869460(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100996110 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100869550@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002B7CC(&qword_100ADD000);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086AFC8();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  char v27 = 0;
  sub_1000A87E0();
  sub_10096D040();
  uint64_t v9 = v21;
  uint64_t v18 = v22;
  uint64_t v19 = v20;
  uint64_t v17 = v23;
  int v26 = v24;
  int v16 = v25;
  LOBYTE(v20) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10096D000();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  sub_1000268E0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v9;
  uint64_t v14 = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v26;
  *(unsigned char *)(a2 + 33) = v16;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v12;
  return result;
}

uint64_t sub_1008697AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726944726F727265 && a2 == 0xEE006E6F69746365 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F43626F6ALL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1008699B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002B7CC(&qword_100ADCF78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086A3D8();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_10096D000();
  uint64_t v11 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10096D030();
  char v23 = 2;
  sub_1004A7968();
  sub_10096D040();
  uint64_t v17 = v19;
  int v16 = v20;
  char v21 = 3;
  sub_1004A79BC();
  sub_10096CFB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v22;
  sub_1000268E0((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  uint64_t v14 = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 33) = v12;
  return result;
}

uint64_t sub_100869C44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C706D6173 && a2 == 0xEC00000065746152)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_100869D50(void *a1)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ADCF60);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086A384();
  sub_10096D570();
  if (v1)
  {
    sub_1000268E0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_10096D000();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_10096D020();
    double v2 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000268E0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100869F40(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100996110 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001009BD360)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10086A02C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002B7CC(&qword_100ADCF38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10086A288();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  char v21 = 0;
  sub_1000A87E0();
  sub_10096D040();
  uint64_t v9 = v23;
  uint64_t v10 = v24;
  uint64_t v19 = v25;
  uint64_t v20 = v22;
  int v17 = v27;
  int v18 = v26;
  char v21 = 1;
  sub_10086A2DC();
  swift_bridgeObjectRetain();
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v22;
  uint64_t v11 = v23;
  uint64_t v13 = v24;
  swift_bridgeObjectRetain();
  sub_1000268E0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v9;
  uint64_t v15 = v19;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 33) = v17;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v13;
  return result;
}

unint64_t sub_10086A288()
{
  unint64_t result = qword_100ADCF40;
  if (!qword_100ADCF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF40);
  }
  return result;
}

unint64_t sub_10086A2DC()
{
  unint64_t result = qword_100ADCF48;
  if (!qword_100ADCF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF48);
  }
  return result;
}

unint64_t sub_10086A330()
{
  unint64_t result = qword_100ADCF58;
  if (!qword_100ADCF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF58);
  }
  return result;
}

unint64_t sub_10086A384()
{
  unint64_t result = qword_100ADCF68;
  if (!qword_100ADCF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF68);
  }
  return result;
}

unint64_t sub_10086A3D8()
{
  unint64_t result = qword_100ADCF80;
  if (!qword_100ADCF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF80);
  }
  return result;
}

uint64_t sub_10086A42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACE0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10086A494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100866BF0(a1, a2, a3);
}

uint64_t sub_10086A4B0(uint64_t a1)
{
  return sub_10086A538(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100866E14);
}

uint64_t sub_10086A4DC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_100866F78(a1, a2, a3, a4, a5);
}

uint64_t sub_10086A50C(uint64_t a1)
{
  return sub_10086A538(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1008671F4);
}

uint64_t sub_10086A538(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10086A564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100867358(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for TargetedSPSError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086A654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSError.CodingKeys()
{
  return &type metadata for TargetedSPSError.CodingKeys;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorValue.CodingKeys()
{
  return &type metadata for TargetedSPSErrorValue.CodingKeys;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorAndValue.CodingKeys()
{
  return &type metadata for TargetedSPSErrorAndValue.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FPFeedbackManagerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086A77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFeedbackManagerState.CodingKeys()
{
  return &type metadata for FPFeedbackManagerState.CodingKeys;
}

ValueMetadata *type metadata accessor for FPDiagnosticsSamplingResult()
{
  return &type metadata for FPDiagnosticsSamplingResult;
}

uint64_t _s9libfssync27TargetedSPSErrorWithVersionVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorWithVersion(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorWithVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorWithVersion()
{
  return &type metadata for TargetedSPSErrorWithVersion;
}

unint64_t sub_10086A9E0()
{
  unint64_t result = qword_100ADCF98;
  if (!qword_100ADCF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCF98);
  }
  return result;
}

unint64_t sub_10086AA38()
{
  unint64_t result = qword_100ADCFA0;
  if (!qword_100ADCFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFA0);
  }
  return result;
}

unint64_t sub_10086AA90()
{
  unint64_t result = qword_100ADCFA8;
  if (!qword_100ADCFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFA8);
  }
  return result;
}

unint64_t sub_10086AAE8()
{
  unint64_t result = qword_100ADCFB0;
  if (!qword_100ADCFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFB0);
  }
  return result;
}

unint64_t sub_10086AB40()
{
  unint64_t result = qword_100ADCFB8;
  if (!qword_100ADCFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFB8);
  }
  return result;
}

unint64_t sub_10086AB98()
{
  unint64_t result = qword_100ADCFC0;
  if (!qword_100ADCFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFC0);
  }
  return result;
}

unint64_t sub_10086ABF0()
{
  unint64_t result = qword_100ADCFC8;
  if (!qword_100ADCFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFC8);
  }
  return result;
}

unint64_t sub_10086AC48()
{
  unint64_t result = qword_100ADCFD0;
  if (!qword_100ADCFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFD0);
  }
  return result;
}

unint64_t sub_10086ACA0()
{
  unint64_t result = qword_100ADCFD8;
  if (!qword_100ADCFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFD8);
  }
  return result;
}

unint64_t sub_10086ACF8()
{
  unint64_t result = qword_100ADCFE0;
  if (!qword_100ADCFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFE0);
  }
  return result;
}

unint64_t sub_10086AD50()
{
  unint64_t result = qword_100ADCFE8;
  if (!qword_100ADCFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFE8);
  }
  return result;
}

unint64_t sub_10086ADA8()
{
  unint64_t result = qword_100ADCFF0;
  if (!qword_100ADCFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFF0);
  }
  return result;
}

unint64_t sub_10086AE00()
{
  unint64_t result = qword_100ADCFF8;
  if (!qword_100ADCFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADCFF8);
  }
  return result;
}

uint64_t sub_10086AE54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001009BD320 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C706D6173 && a2 == 0xEF73746C75736552 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001009BD340)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_10086AFC8()
{
  unint64_t result = qword_100ADD008;
  if (!qword_100ADD008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD008);
  }
  return result;
}

unint64_t sub_10086B01C()
{
  unint64_t result = qword_100ADD018;
  if (!qword_100ADD018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD018);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FPDiagnosticsSamplingResult.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10086B10CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FPDiagnosticsSamplingResult.CodingKeys()
{
  return &type metadata for FPDiagnosticsSamplingResult.CodingKeys;
}

unsigned char *_s9libfssync21TargetedSPSErrorValueV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086B210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorWithVersion.CodingKeys()
{
  return &type metadata for TargetedSPSErrorWithVersion.CodingKeys;
}

unint64_t sub_10086B24C()
{
  unint64_t result = qword_100ADD030;
  if (!qword_100ADD030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD030);
  }
  return result;
}

unint64_t sub_10086B2A4()
{
  unint64_t result = qword_100ADD038;
  if (!qword_100ADD038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD038);
  }
  return result;
}

unint64_t sub_10086B2FC()
{
  unint64_t result = qword_100ADD040;
  if (!qword_100ADD040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD040);
  }
  return result;
}

unint64_t sub_10086B354()
{
  unint64_t result = qword_100ADD048;
  if (!qword_100ADD048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD048);
  }
  return result;
}

unint64_t sub_10086B3AC()
{
  unint64_t result = qword_100ADD050;
  if (!qword_100ADD050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD050);
  }
  return result;
}

unint64_t sub_10086B404()
{
  unint64_t result = qword_100ADD058[0];
  if (!qword_100ADD058[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100ADD058);
  }
  return result;
}

uint64_t sub_10086B458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10086A564(a1, a2);
}

uint64_t sub_10086B478(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096BAA0();
  uint64_t v9 = v15;
  if (v15)
  {
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v10(v8, a2, v5);
    uint64_t v14 = sub_10096C160();
    unsigned __int8 v15 = 0;
    sub_10096BA80();
    sub_10096BAB0();
    sub_1006F0030(v5, v5);
    swift_allocObject();
    uint64_t v11 = sub_10096C0D0();
    v10(v12, a2, v5);
    sub_1003FC080(v11);
    sub_10096C140();
    swift_bridgeObjectRelease();
    v10(a1, a2, v5);
  }
  else
  {
    sub_10096C210();
  }
  return v9;
}

uint64_t sub_10086B66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v23 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_10096BAA0();
  if (v30) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a3, 1, 1, v4);
  }
  uint64_t v23 = v8;
  uint64_t v25 = v13;
  uint64_t v26 = a3;
  uint64_t v15 = v29;
  sub_10096C210();
  sub_10096C1C0();
  sub_10096C190();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v28 = v5 + 8;
  uint64_t v24 = v16;
  v16(v11, v4);
  sub_10096BA80();
  sub_10096B9E0();
  uint64_t result = sub_10096C160();
  if (result < v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = result;
    uint64_t v27 = v5;
    if (v15 == result)
    {
LABEL_8:
      uint64_t v22 = v26;
      uint64_t v21 = v27;
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v26, v25, v4);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v4);
    }
    if (v15 < result)
    {
      int v18 = (void (**)(char *, char *, uint64_t))(v27 + 16);
      uint64_t v20 = v23;
      uint64_t v19 = v24;
      do
      {
        sub_10096C210();
        (*v18)(v20, v11, v4);
        uint64_t v29 = v15;
        char v30 = 0;
        sub_10096BAB0();
        v19(v11, v4);
        ++v15;
      }
      while (v17 != v15);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10086B94C()
{
  return sub_10096C1D0();
}

uint64_t sub_10086B95C()
{
  return sub_10096C1E0();
}

uint64_t sub_10086B974()
{
  uint64_t v0 = sub_10096B960();
  sub_10096B970();
  return v0;
}

uint64_t sub_10086B9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OrderedSet();
  sub_10086B478(v7, a1, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a3);
}

uint64_t sub_10086BAA0()
{
  return sub_10096C1A0();
}

uint64_t sub_10086BAAC()
{
  return sub_10096C210();
}

Swift::Int sub_10086BAB8()
{
  return sub_10096D500();
}

void *sub_10086BB18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result - 1;
  }
  return result;
}

void *sub_10086BB30(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

Swift::Int sub_10086BB54()
{
  return sub_10086BAB8();
}

uint64_t sub_10086BB60()
{
  return sub_10086B94C();
}

Swift::Int sub_10086BB6C()
{
  return sub_10096D500();
}

uint64_t sub_10086BBB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10086C2E0();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_10086BC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10086BAA0();
  *a1 = result;
  return result;
}

void (*sub_10086BC30(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_10086BCA4(v7, *a2, *v3, v3[1], *(void *)(a3 + 16));
  return sub_100042C08;
}

void (*sub_10086BCA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void *a1)
{
  uint64_t v5 = *(void *)(a5 - 8);
  *a1 = a5;
  a1[1] = v5;
  a1[2] = malloc(*(void *)(v5 + 64));
  sub_10096C210();
  return sub_10086BD60;
}

void sub_10086BD60(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void sub_10086BDBC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_10086BDCC()
{
  swift_getWitnessTable();

  return sub_10096BB20();
}

uint64_t sub_10086BE48()
{
  swift_getWitnessTable();

  return sub_10096BB10();
}

uint64_t sub_10086BECC()
{
  swift_getWitnessTable();

  return sub_10096BB30();
}

uint64_t sub_10086BF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086C568(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t sub_10086BF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086C568(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

void *sub_10086BFBC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_10086BFD4(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_10086BFEC()
{
  return sub_10086B95C();
}

__n128 sub_10086C004@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_10086C014(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_10086C068()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_10086C2DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10086C0D0(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_10096C4E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_10096BB70();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_10096BB70();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_10086C2E0()
{
  uint64_t v1 = sub_10096B960();
  sub_10096B970();
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096BF60();
  return v1;
}

uint64_t sub_10086C3A4(uint64_t a1)
{
  return sub_10086B9B8(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t type metadata accessor for OrderedSet()
{
  return sub_10014D080();
}

uint64_t sub_10086C3DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C3F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C414()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C430()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C44C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C468()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C484()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C4A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C504()
{
  return swift_getWitnessTable();
}

uint64_t sub_10086C568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  int v18 = (char *)&v22 - v17;
  char v19 = sub_10096BB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_10086C7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086C80C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

uint64_t sub_10086C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086C80C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

uint64_t sub_10086C80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  uint64_t v6 = sub_1008AA778(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_10086C890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 160) = v9;
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 192) = *(void *)(a1 + 48);
  return sub_100610514(a2, a3, a4);
}

uint64_t sub_10086C908(uint64_t (*a1)(char *, uint64_t, uint64_t), uint64_t a2, int a3, int a4, int a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v106 = a7;
  uint64_t v107 = a8;
  int v105 = a5;
  LODWORD(v91) = a4;
  int v115 = a3;
  uint64_t v108 = a2;
  os_log_t v113 = a1;
  uint64_t v11 = *a6;
  uint64_t v12 = *(void *)(*a6 + 96);
  uint64_t v13 = *(void *)(*a6 + 80);
  uint64_t v103 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v88 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v114 = (char *)&v85 - v16;
  uint64_t v110 = sub_10096B480();
  uint64_t v92 = *(void *)(v110 - 8);
  uint64_t v17 = __chkstk_darwin(v110);
  uint64_t v89 = (unint64_t *)((char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v104 = (char *)&v85 - v19;
  uint64_t v120 = v13;
  uint64_t v121 = v13;
  uint64_t v122 = v12;
  uint64_t v123 = v12;
  uint64_t v20 = type metadata accessor for ItemChange();
  uint64_t v87 = sub_10096C890();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v21 = __chkstk_darwin(v87);
  uint64_t v109 = (unint64_t *)((char *)&v85 - v22);
  uint64_t v111 = v20;
  uint64_t v98 = *(uint64_t (***)(uint64_t, uint64_t))(v20 - 8);
  __chkstk_darwin(v21);
  uint64_t v116 = (uint64_t)&v85 - v23;
  uint64_t v24 = *(void *)(v11 + 88);
  uint64_t v25 = *(void *)(v11 + 104);
  uint64_t v120 = v13;
  uint64_t v121 = v24;
  uint64_t v122 = v12;
  uint64_t v123 = v25;
  uint64_t v26 = type metadata accessor for PersistenceTrigger();
  os_log_type_t v102 = *(unsigned int (***)(unint64_t *, uint64_t, uint64_t))(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v85 - v27;
  uint64_t v94 = v13;
  uint64_t v95 = v12;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  uint64_t v30 = sub_10096C890();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v85 - v32;
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v31 + 16))((char *)&v85 - v32, v113, v30);
  LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v33, 1, v29);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (v29 == 1)
  {
    uint64_t v34 = v103;
    if ((v103 & 0x80000000000) != 0)
    {
      uint64_t v35 = *(void (**)(uint64_t))(**(void **)(a6[4] + 16) + 848);
      uint64_t v36 = swift_retain();
      v35(v36);
      swift_release();
    }
  }
  else
  {
    int v101 = (void (**)(void, void, void))v26;
    uint64_t v34 = v103;
    if ((v103 & 0x80000000000) != 0)
    {
      uint64_t v37 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v28, v108, AssociatedTypeWitness);
      uint64_t v38 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v40 = swift_getAssociatedConformanceWitness();
      uint64_t v120 = v37;
      uint64_t v121 = v38;
      uint64_t v122 = AssociatedConformanceWitness;
      uint64_t v123 = v40;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      id v41 = v101;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *))(*a6 + 312))(v28);
      ((void (*)(char *, void (**)(void, void, void)))v102[1])(v28, v41);
    }
  }
  uint64_t v124 = 0;
  swift_beginAccess();
  if (v124 > 1)
  {
    uint64_t v44 = v108;
LABEL_23:
    id v71 = (id)fpfs_current_or_default_log();
    uint64_t v72 = v44;
    uint64_t v73 = v89;
    sub_10096B490();
    uint64_t v74 = v93;
    uint64_t v75 = v88;
    uint64_t v76 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v88, v72, AssociatedTypeWitness);
    id v77 = sub_10096B470();
    os_log_type_t v78 = sub_10096C5B0();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v116 = swift_slowAlloc();
      uint64_t v119 = v116;
      *(_DWORD *)uint64_t v79 = 136315138;
      swift_getAssociatedConformanceWitness();
      uint64_t v80 = sub_10096D220();
      uint64_t v118 = sub_100719D44(v80, v81, &v119);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Transform could not converge for item %s", v79, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v82 = *(uint64_t (**)(unint64_t *, uint64_t))(v92 + 8);
      uint64_t v83 = v89;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);

      uint64_t v82 = *(uint64_t (**)(unint64_t *, uint64_t))(v92 + 8);
      uint64_t v83 = v73;
    }
    uint64_t v84 = v110;
    return v82(v83, v84);
  }
  else
  {
    uint64_t v100 = a10;
    os_log_type_t v102 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v98 + 6);
    uint64_t v99 = (void (**)(uint64_t, unint64_t *, uint64_t))(v98 + 4);
    int v101 = (void (**)(void, void, void))(v93 + 16);
    uint64_t v97 = (void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v96 = (void (**)(char *, uint64_t))(v92 + 8);
    ++v98;
    LODWORD(v103) = v91 & 1;
    *(void *)&long long v42 = 136315394;
    long long v91 = v42;
    uint64_t v90 = (char *)&type metadata for Any + 8;
    uint64_t v44 = v108;
    uint64_t v43 = v109;
    uint64_t v45 = v111;
    while (1)
    {
      uint64_t v46 = v117;
      uint64_t result = sub_100886C6C(v113, v44, v115, v103, v34, a6, v43);
      uint64_t v117 = v46;
      if (v46) {
        break;
      }
      if ((*v102)(v43, 1, v45) == 1)
      {
        uint64_t v82 = *(uint64_t (**)(unint64_t *, uint64_t))(v86 + 8);
        uint64_t v83 = v43;
        uint64_t v84 = v87;
        return v82(v83, v84);
      }
      (*v99)(v116, v43, v45);
      if ((v105 & 1) == 0)
      {
        uint64_t v48 = a6[4];
        uint64_t v49 = *(uint64_t (**)(uint64_t))(**(void **)(v48 + 16) + 304);
        uint64_t v50 = swift_retain();
        char v51 = v49(v50);
        uint64_t v52 = swift_release();
        if ((v51 & 1) != 0 && ((*(uint64_t (**)(uint64_t))(*a6 + 152))(v52) & 0x40) != 0)
        {
          uint64_t v53 = *(void (**)(void))(*(void *)(v48 + 16) + 16);
          if (v53)
          {
            type metadata accessor for FileTreeWriter.FileTreeChange();
            sub_10096D230();
            swift_allocObject();
            swift_retain();
            uint64_t v54 = sub_10096C0D0();
            (*v101)(v55, v108, AssociatedTypeWitness);
            uint64_t v44 = v108;
            swift_storeEnumTagMultiPayload();
            sub_1003FC080(v54);
            v53();
            sub_1000705CC((uint64_t)v53);
            swift_bridgeObjectRelease();
          }
        }
      }
      uint64_t v56 = v117;
      unsigned __int8 v57 = sub_1008774B8(v116);
      uint64_t v117 = v56;
      if (v56) {
        return (*v98)(v116, v111);
      }
      unsigned __int8 v58 = v57;
      uint64_t result = (*(uint64_t (**)(void))(*a6 + 152))();
      if ((((result & 0x4000) != 0) & v58) == 0) {
        return (*v98)(v116, v111);
      }
      if (__OFADD__(v124, 1))
      {
        __break(1u);
        return result;
      }
      uint64_t v59 = v34;
      ++v124;
      uint64_t v60 = (*(uint64_t (**)(void))(*(void *)a6[2] + 504))();
      uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)a6[4] + 696))(v60);
      (*(void (**)(uint64_t))(*(void *)a6[5] + 696))(v61);
      id v62 = (id)fpfs_current_or_default_log();
      uint64_t v63 = v104;
      sub_10096B490();
      id v64 = v114;
      uint64_t v65 = AssociatedTypeWitness;
      (*v101)(v114, v44, AssociatedTypeWitness);
      NSString v66 = sub_10096B470();
      os_log_type_t v67 = sub_10096C590();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = v91;
        swift_getAssociatedConformanceWitness();
        uint64_t v69 = sub_10096D220();
        *(void *)(v68 + 4) = sub_100719D44(v69, v70, &v119);
        swift_bridgeObjectRelease();
        (*v97)(v114, v65);
        *(_WORD *)(v68 + 12) = 2048;
        *(void *)(v68 + 14) = v124;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Ingesting %s, retries %ld", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        uint64_t v34 = v59;
        swift_slowDealloc();
        uint64_t v44 = v108;
        swift_slowDealloc();

        (*v96)(v63, v110);
        uint64_t v45 = v111;
        (*v98)(v116, v111);
      }
      else
      {

        (*v97)(v64, v65);
        (*v96)(v63, v110);
        uint64_t v45 = v111;
        (*v98)(v116, v111);
        uint64_t v34 = v59;
      }
      uint64_t v43 = v109;
      if (v124 >= 2) {
        goto LABEL_23;
      }
    }
  }
  return result;
}

uint64_t sub_10086D7F4(uint64_t a1, uint64_t a2, char *a3, void **a4, uint64_t a5, int a6)
{
  uint64_t v229 = a1;
  int v194 = a6;
  uint64_t v208 = a5;
  uint64_t v215 = a3;
  uint64_t v226 = a2;
  uint64_t v7 = *a4;
  uint64_t v8 = (*a4)[13];
  uint64_t v9 = (*a4)[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_10096C890();
  uint64_t v197 = *(void *)(v11 - 8);
  uint64_t v198 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v220 = (char *)&v191 - v13;
  uint64_t v203 = AssociatedTypeWitness;
  uint64_t v199 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v12);
  v193 = (char *)&v191 - v14;
  uint64_t v15 = v7[10];
  uint64_t v227 = a4;
  uint64_t v16 = v7[12];
  uint64_t v236 = v15;
  uint64_t v237 = v9;
  uint64_t v238 = v16;
  uint64_t v239 = v8;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v18 = sub_10096C890();
  uint64_t v195 = *(void *)(v18 - 8);
  uint64_t v196 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  v221 = (char *)&v191 - v20;
  uint64_t v211 = v17;
  uint64_t v209 = *(void *)(v17 - 8);
  __chkstk_darwin(v19);
  uint64_t v202 = (char *)&v191 - v21;
  uint64_t v236 = v15;
  uint64_t v212 = v9;
  uint64_t v213 = v8;
  uint64_t v237 = v9;
  uint64_t v238 = v16;
  uint64_t v239 = v8;
  uint64_t v22 = type metadata accessor for ReconciliationMutation();
  uint64_t v200 = *(void *)(v22 - 8);
  uint64_t v201 = v22;
  __chkstk_darwin(v22);
  uint64_t v204 = (char *)&v191 - v23;
  uint64_t v207 = sub_10096B0E0();
  uint64_t v205 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v206 = (char *)&v191 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = swift_getAssociatedTypeWitness();
  uint64_t v219 = *(void *)(v222 - 8);
  uint64_t v25 = __chkstk_darwin(v222);
  v210 = (char *)&v191 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v216 = (uint64_t)&v191 - v27;
  uint64_t v217 = v16;
  uint64_t v218 = v15;
  uint64_t v28 = type metadata accessor for SnapshotItem();
  uint64_t v29 = sub_10096C890();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v191 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v191 - v34;
  uint64_t WitnessTable = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  WitnessTable((char *)&v191 - v34, v229, v29);
  uint64_t v36 = *(void *)(v28 - 8);
  uint64_t v224 = *(void *)(v36 + 48);
  int v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v224)(v35, 1, v28);
  uint64_t v214 = v30;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
    uint64_t v223 = 0;
    uint64_t v38 = v28;
  }
  else
  {
    sub_10001AE98((uint64_t)&v35[*(int *)(v28 + 52)], (uint64_t)v235, &qword_100AD0EA0);
    sub_1003A9A58(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v28);
    sub_10001AE98((uint64_t)v235, (uint64_t)&v236, &qword_100AD0EA0);
    uint64_t v38 = v28;
    if (sub_1000DBD64((uint64_t)&v236) == 1)
    {
      uint64_t v223 = 0;
    }
    else
    {
      sub_1003A9A58(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      uint64_t v223 = v240;
    }
  }
  uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v224;
  WitnessTable(v33, v229, v29);
  if (v39(v33, 1, v38) == 1)
  {
    (*(void (**)(char *, uint64_t))(v214 + 8))(v33, v29);
    uint64_t v40 = v228;
    uint64_t v41 = v226;
  }
  else
  {
    sub_10001AE98((uint64_t)&v33[*(int *)(v38 + 52)], (uint64_t)v235, &qword_100AD0EA0);
    sub_1003A9A58(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009C6EC);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v38);
    sub_10001AE98((uint64_t)v235, (uint64_t)&v236, &qword_100AD0EA0);
    int v42 = sub_1000DBD64((uint64_t)&v236);
    uint64_t v41 = v226;
    if (v42 != 1)
    {
      sub_1003A9A58(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
      uint64_t v229 = v241;
      goto LABEL_13;
    }
    uint64_t v40 = v228;
  }
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*v227[4] + 328))(v41);
  if (v40) {
    return v44 & 1;
  }
  uint64_t v228 = 0;
  uint64_t v229 = v43;
LABEL_13:
  uint64_t v45 = v41 + *(int *)(v38 + 52);
  sub_10001AE98(v45, (uint64_t)v235, &qword_100AD0EA0);
  sub_10001AE98((uint64_t)v235, (uint64_t)&v236, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)&v236) == 1) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = *(void *)(v45 + 208);
  }
  char v47 = *v215;
  uint64_t v224 = v38;
  uint64_t v214 = v46;
  if ((v47 & 2) == 0)
  {
    uint64_t v48 = v229;
    uint64_t v50 = v220;
    uint64_t v49 = (uint64_t)v221;
    uint64_t v51 = v223;
    goto LABEL_21;
  }
  uint64_t v52 = *(int *)(v38 + 36);
  uint64_t v53 = v219;
  uint64_t v54 = *(void (**)(uint64_t))(v219 + 16);
  uint64_t v55 = v216;
  uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))(v41 + v52);
  uint64_t v56 = v222;
  v54(v216);
  unsigned __int8 v57 = v210;
  ((void (*)(char *, uint64_t, uint64_t))v54)(v210, v41, v56);
  swift_getAssociatedConformanceWitness();
  char v58 = sub_10096BBE0();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v56);
  v59((char *)v55, v56);
  if (v58)
  {
    uint64_t v48 = v229;
    uint64_t v51 = v223;
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    uint64_t v49 = (uint64_t)v221;
LABEL_20:
    uint64_t v46 = v214;
    uint64_t v41 = v226;
    goto LABEL_21;
  }
  uint64_t v61 = v228;
  uint64_t v62 = (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t)))(*v227[4] + 336))(WitnessTable);
  if (v61) {
    return v44 & 1;
  }
  uint64_t v48 = v62;
  uint64_t v228 = 0;
  uint64_t v49 = (uint64_t)v221;
  uint64_t v51 = v223;
  if (v62 == v229)
  {
    uint64_t v48 = v229;
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    goto LABEL_20;
  }
  sub_10001AE98(v45, (uint64_t)v230, &qword_100AD0EA0);
  sub_10001AE98((uint64_t)v230, (uint64_t)&v231, &qword_100AD0EA0);
  int v133 = sub_1000DBD64((uint64_t)&v231);
  uint64_t v38 = v224;
  uint64_t v46 = v214;
  uint64_t v41 = v226;
  if (v133 != 1) {
    *(void *)(v45 + 216) = v48;
  }
  uint64_t v50 = v220;
  if ((*(void *)v215 & 0x400000000000000) == 0) {
    *(void *)v215 |= 0x400000000000000uLL;
  }
LABEL_21:
  uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))swift_getWitnessTable();
  if (FileItem.kind.getter(v38, (uint64_t)WitnessTable) != 1) {
    goto LABEL_44;
  }
  uint64_t v60 = v229;
  if (v51)
  {
    if (v51 == 500)
    {
      if (v229 > 2)
      {
        if (v229 == 3)
        {
          uint64_t v60 = 1002;
          goto LABEL_34;
        }
        if (v229 == 502)
        {
          uint64_t v60 = 1003;
          goto LABEL_34;
        }
      }
      else
      {
        if (v229 == 1)
        {
          uint64_t v60 = 1000;
          goto LABEL_34;
        }
        if (v229 == 2)
        {
          uint64_t v60 = 1001;
          goto LABEL_34;
        }
      }
      uint64_t v60 = 500;
    }
    else if (v51 == 501)
    {
      uint64_t v60 = v229;
    }
    else
    {
      uint64_t v60 = v51;
    }
  }
LABEL_34:
  uint64_t v63 = v48;
  switch(v46)
  {
    case 0:
      break;
    case 500:
      if (v48 > 2)
      {
        if (v48 == 3)
        {
          uint64_t v63 = 1002;
          break;
        }
        if (v48 == 502)
        {
          uint64_t v63 = 1003;
          break;
        }
      }
      else
      {
        if (v48 == 1)
        {
          uint64_t v63 = 1000;
          break;
        }
        if (v48 == 2)
        {
          uint64_t v63 = 1001;
          break;
        }
      }
      uint64_t v63 = 500;
      break;
    case 501:
      uint64_t v63 = v48;
      break;
    default:
      uint64_t v63 = v46;
      break;
  }
  if (v60 != v63)
  {
    uint64_t v87 = v41;
    if ((unint64_t)(v63 - 501) < 2 || v63 == 1003)
    {
      uint64_t v89 = v217;
      uint64_t v88 = v218;
      uint64_t v231 = v218;
      uint64_t v91 = v212;
      uint64_t v90 = v213;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v192 = type metadata accessor for JobResult();
      uint64_t v231 = v88;
      uint64_t v232 = v91;
      uint64_t v233 = v89;
      uint64_t v234 = v90;
      type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16))(v216, v87, v222);
      uint64_t v92 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v94 = v93;
      uint64_t v95 = *(uint64_t (**)(char *, uint64_t))(v205 + 8);
      uint64_t result = v95(v92, v207);
      double v96 = v94 * 1000000000.0;
      if ((~COERCE__INT64(v94 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_175:
        __break(1u);
        goto LABEL_176;
      }
      if (v96 <= -9.22337204e18)
      {
LABEL_176:
        __break(1u);
        goto LABEL_177;
      }
      uint64_t v215 = (char *)v48;
      if (v96 >= 9.22337204e18)
      {
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
      uint64_t v97 = v46;
      uint64_t v98 = v216;
      sub_1003A9380(v216, 0, (uint64_t)v96, 0);
      uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v219 + 8);
      v99(v98, v222);
      uint64_t v100 = sub_10058364C(0x800000);
      swift_retain();
      swift_release();
      sub_1004D4360(v208, v100);
      swift_release();
      if ((v194 & 1) == 0)
      {
        LODWORD(v192) = 1;
        uint64_t v41 = v226;
        uint64_t v50 = v220;
        uint64_t v49 = (uint64_t)v221;
        uint64_t v46 = v97;
        uint64_t v51 = v223;
        uint64_t v38 = v224;
        uint64_t v48 = (uint64_t)v215;
        goto LABEL_45;
      }
      uint64_t v231 = v218;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy();
      sub_10085378C();
      int v101 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v103 = v102;
      uint64_t result = v95(v101, v207);
      double v104 = v103 * 1000000000.0;
      if ((~COERCE__INT64(v103 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_178:
        __break(1u);
        goto LABEL_179;
      }
      if (v104 <= -9.22337204e18)
      {
LABEL_179:
        __break(1u);
        goto LABEL_180;
      }
      uint64_t v49 = (uint64_t)v221;
      if (v104 >= 9.22337204e18)
      {
LABEL_180:
        __break(1u);
        goto LABEL_181;
      }
      uint64_t v46 = v97;
      uint64_t v105 = v216;
      sub_1003A9380(v216, 0, (uint64_t)v104, 0);
      v99(v105, v222);
      uint64_t v106 = sub_10058364C(0x1000000);
      swift_retain();
      swift_release();
      sub_1004D4360(v208, v106);
      LODWORD(v192) = 1;
      uint64_t v41 = v226;
      uint64_t v51 = v223;
      uint64_t v48 = (uint64_t)v215;
    }
    else
    {
      uint64_t v124 = v217;
      uint64_t v123 = v218;
      uint64_t v231 = v218;
      uint64_t v126 = v212;
      uint64_t v125 = v213;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v215 = (char *)type metadata accessor for JobResult();
      uint64_t v231 = v123;
      uint64_t v232 = v126;
      uint64_t v233 = v124;
      uint64_t v234 = v125;
      type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16))(v216, v87, v222);
      uint64_t v127 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v129 = v128;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v127, v207);
      double v130 = v129 * 1000000000.0;
      if ((~COERCE__INT64(v129 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      if (v130 <= -9.22337204e18)
      {
LABEL_182:
        __break(1u);
        goto LABEL_183;
      }
      uint64_t v49 = (uint64_t)v221;
      if (v130 >= 9.22337204e18)
      {
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      uint64_t v131 = v216;
      uint64_t v132 = sub_1003A9380(v216, 0, (uint64_t)v130, 0);
      (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v131, v222);
      sub_1004D4360(v208, v132);
      LODWORD(v192) = 0;
      uint64_t v41 = v87;
    }
    swift_release();
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v192) = 0;
LABEL_45:
  int v194 = ((uint64_t (*)(void))(*v227)[65])();
  if ((FileItem.kind.getter(v38, (uint64_t)WitnessTable) - 1) >= 2u)
  {
    uint64_t v215 = (char *)v48;
    id v64 = WitnessTable;
    uint64_t v65 = v41;
    unsigned __int8 v66 = FileItem.kind.getter(v38, (uint64_t)WitnessTable) == 1;
    char v67 = v194 & 1;
    int v68 = sub_1005EBA68(v51, v229, v194 & 1, v66);
    uint64_t v69 = (uint64_t)v64;
    uint64_t v48 = (uint64_t)v215;
    unsigned __int8 v70 = FileItem.kind.getter(v224, v69) == 1;
    BOOL v134 = v68 == sub_1005EBA68(v46, v48, v67, v70);
    uint64_t v41 = v65;
    if (!v134)
    {
      uint64_t v231 = v218;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v191 = type metadata accessor for JobResult();
      uint64_t v71 = v222;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v73 = v203;
      uint64_t v74 = swift_getAssociatedConformanceWitness();
      uint64_t v231 = v71;
      uint64_t v232 = v73;
      uint64_t v233 = AssociatedConformanceWitness;
      uint64_t v234 = v74;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v75 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v204, v226, v71);
      swift_storeEnumTagMultiPayload();
      uint64_t v76 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v78 = v77;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v76, v207);
      double v80 = v78 * 1000000000.0;
      if ((~COERCE__INT64(v78 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v80 > -9.22337204e18)
        {
          uint64_t v50 = v220;
          uint64_t v49 = (uint64_t)v221;
          uint64_t v51 = v223;
          uint64_t v48 = (uint64_t)v215;
          if (v80 < 9.22337204e18)
          {
            uint64_t v81 = (uint64_t)v204;
            uint64_t v82 = &v204[v75];
            *(_OWORD *)uint64_t v82 = xmmword_100980D40;
            *((void *)v82 + 2) = (uint64_t)v80;
            swift_storeEnumTagMultiPayload();
            uint64_t v83 = v201;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v208, v81);
            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v81, v83);
            uint64_t v41 = v226;
            goto LABEL_51;
          }
          goto LABEL_174;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
  }
LABEL_51:
  uint64_t v84 = v228;
  sub_1000DEDD8(v41, v49);
  if (v84) {
    return v44 & 1;
  }
  uint64_t v228 = 0;
  uint64_t v85 = v209;
  uint64_t v86 = v211;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v209 + 48))(v49, 1, v211) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v49, v196);
LABEL_130:
    char v44 = v192;
    return v44 & 1;
  }
  uint64_t v223 = v51;
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
  uint64_t v108 = v202;
  v107(v202, v49, v86);
  uint64_t v109 = &v108[*(int *)(v86 + 52)];
  uint64_t v111 = v197;
  uint64_t v110 = v198;
  (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v50, v109, v198);
  uint64_t v112 = v199;
  uint64_t v113 = v203;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v50, 1, v203) != 1)
  {
    uint64_t v118 = v193;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v193, v50, v113);
    uint64_t v119 = v113;
    if (v109[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] != 6)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v108, v211);
      goto LABEL_130;
    }
    uint64_t v120 = v112;
    uint64_t v121 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v122 = v211;
    if (v108[*(int *)(v121 + 52)] == 2)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v119);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v108, v122);
      goto LABEL_130;
    }
    uint64_t v215 = (char *)v48;
    uint64_t v137 = *(void *)&v108[*(int *)(v211 + 76)];
    uint64_t v138 = v224;
    unint64_t v139 = WitnessTable;
    unsigned __int8 v140 = FileItem.kind.getter(v224, (uint64_t)WitnessTable) == 1;
    uint64_t v141 = sub_1005EBAF8(v223, v229, 0, v194 & 1, v140, v137 != 0);
    char v142 = FileItem.kind.getter(v138, (uint64_t)v139);
    if (v141 > 999)
    {
      if ((unint64_t)(v141 - 1000) > 2)
      {
LABEL_165:
        BOOL v170 = v141 == 3;
        goto LABEL_141;
      }
    }
    else if (v141 != 500)
    {
      if (v141 == 501)
      {
        uint64_t v143 = v142;
        uint64_t v144 = &unk_100990B80;
        goto LABEL_146;
      }
      if (v141 == 502)
      {
        uint64_t v143 = v142;
        uint64_t v144 = &unk_100990BA0;
LABEL_146:
        uint64_t v172 = v144[v143];
        goto LABEL_147;
      }
      goto LABEL_165;
    }
    BOOL v170 = v142 == 1;
LABEL_141:
    unsigned int v171 = v170;
    uint64_t v172 = 4 * v171;
LABEL_147:
    uint64_t v173 = v224;
    uint64_t v174 = WitnessTable;
    unsigned __int8 v175 = FileItem.kind.getter(v224, (uint64_t)WitnessTable) == 1;
    uint64_t v176 = sub_1005EBAF8(v214, (uint64_t)v215, 0, v194 & 1, v175, v137 != 0);
    char v177 = FileItem.kind.getter(v173, (uint64_t)v174);
    uint64_t v229 = v172;
    if (v176 <= 501)
    {
      if (v176 == 3)
      {
        uint64_t v178 = 4;
        goto LABEL_168;
      }
      if (v176 != 500)
      {
        if (v176 == 501)
        {
          if ((v137 & 3) == 0 && v177 == 0) {
            uint64_t v178 = 16;
          }
          else {
            uint64_t v178 = 0;
          }
          uint64_t v180 = v202;
          if ((v137 & 2) != 0)
          {
            uint64_t v231 = v218;
            uint64_t v232 = v212;
            uint64_t v233 = v217;
            uint64_t v234 = v213;
            uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for JobResult();
            uint64_t v181 = v222;
            uint64_t v182 = swift_getAssociatedConformanceWitness();
            uint64_t v119 = v203;
            uint64_t v183 = swift_getAssociatedConformanceWitness();
            uint64_t v231 = v181;
            uint64_t v232 = v119;
            uint64_t v233 = v182;
            uint64_t v234 = v183;
            type metadata accessor for ReconciliationID();
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            uint64_t v185 = *(int *)(TupleTypeMetadata3 + 48);
            uint64_t v186 = *(int *)(TupleTypeMetadata3 + 64);
            uint64_t v187 = (uint64_t)v204;
            (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v204, v226, v181);
            uint64_t v180 = v202;
            swift_storeEnumTagMultiPayload();
            *(void *)(v187 + v185) = 1;
            uint64_t v120 = v199;
            *(void *)(v187 + v186) = 0;
            uint64_t v188 = v201;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v208, v187);
            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v187, v188);
          }
          goto LABEL_169;
        }
LABEL_167:
        uint64_t v178 = 0;
        goto LABEL_168;
      }
    }
    else if ((unint64_t)(v176 - 1000) >= 3)
    {
      if (v176 == 502)
      {
        if ((0xEu >> (v177 & 0xF)) & 1 | ((v137 & 2) != 0)) {
          uint64_t v178 = 0;
        }
        else {
          uint64_t v178 = 64;
        }
        goto LABEL_168;
      }
      goto LABEL_167;
    }
    uint64_t v178 = 4 * (v177 == 1);
LABEL_168:
    uint64_t v180 = v202;
LABEL_169:
    uint64_t v189 = v228;
    v190 = v193;
    (*(void (**)(char *, uint64_t, void))(*v227[3] + 392))(v193, (v178 ^ v229) & v229, v178 & (v178 ^ v229) & 0x3F);
    if (v189)
    {
      (*(void (**)(char *, uint64_t))(v120 + 8))(v190, v119);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v180, v211);
      return v44 & 1;
    }
    (*(void (**)(char *, uint64_t))(v120 + 8))(v190, v119);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v180, v211);
    goto LABEL_130;
  }
  (*(void (**)(char *, uint64_t))(v111 + 8))(v50, v110);
  char v114 = FileItem.kind.getter(v224, (uint64_t)WitnessTable);
  if (v223 > 999)
  {
    uint64_t v115 = v211;
    if ((unint64_t)(v223 - 1000) > 2)
    {
LABEL_131:
      BOOL v134 = v223 == 3;
      goto LABEL_92;
    }
  }
  else
  {
    uint64_t v115 = v211;
    if (v223 != 500)
    {
      if (v223 == 501)
      {
        uint64_t v116 = v114;
        uint64_t v117 = &unk_100990B80;
        goto LABEL_109;
      }
      if (v223 == 502)
      {
        uint64_t v116 = v114;
        uint64_t v117 = &unk_100990BA0;
LABEL_109:
        uint64_t v136 = v117[v116];
        goto LABEL_110;
      }
      goto LABEL_131;
    }
  }
  BOOL v134 = v114 == 1;
LABEL_92:
  unsigned int v135 = v134;
  uint64_t v136 = 4 * v135;
LABEL_110:
  uint64_t v145 = *(void *)&v202[*(int *)(v115 + 76)];
  char v146 = FileItem.kind.getter(v224, (uint64_t)WitnessTable);
  if (v214 > 999)
  {
    uint64_t v147 = v209;
    if ((unint64_t)(v214 - 1000) >= 3)
    {
LABEL_138:
      BOOL v149 = v214 == 3;
      goto LABEL_119;
    }
LABEL_118:
    BOOL v149 = v146 == 1;
LABEL_119:
    unsigned int v150 = v149;
    uint64_t v148 = 4 * v150;
    goto LABEL_123;
  }
  uint64_t v147 = v209;
  if (v214 == 500) {
    goto LABEL_118;
  }
  if (v214 != 501)
  {
    if (v214 == 502)
    {
      uint64_t v148 = 64;
      if ((0xEu >> (v146 & 0xF)) & 1 | ((v145 & 2) != 0)) {
        uint64_t v148 = 0;
      }
      goto LABEL_123;
    }
    goto LABEL_138;
  }
  BOOL v169 = (v145 & 3) == 0 && (v146 & 0xF) == 0;
  uint64_t v148 = 16;
  if (!v169) {
    uint64_t v148 = 0;
  }
LABEL_123:
  uint64_t v151 = v226;
  if ((v148 & ~v136) == 0) {
    goto LABEL_129;
  }
  uint64_t v152 = v219;
  uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16);
  uint64_t v154 = v216;
  uint64_t v155 = v222;
  v153(v216, v226, v222);
  uint64_t v156 = v210;
  uint64_t v229 = v151 + *(int *)(v224 + 36);
  ((void (*)(char *))v153)(v210);
  swift_getAssociatedConformanceWitness();
  char v157 = sub_10096BBE0();
  uint64_t v158 = *(void (**)(char *, uint64_t))(v152 + 8);
  v158(v156, v155);
  uint64_t v219 = v152 + 8;
  v158((char *)v154, v155);
  uint64_t v147 = v209;
  if (v157) {
    goto LABEL_129;
  }
  uint64_t v160 = v217;
  uint64_t v159 = v218;
  uint64_t v231 = v218;
  uint64_t v162 = v212;
  uint64_t v161 = v213;
  uint64_t v232 = v212;
  uint64_t v233 = v217;
  uint64_t v234 = v213;
  type metadata accessor for JobResult();
  uint64_t v231 = v159;
  uint64_t v232 = v162;
  uint64_t v233 = v160;
  uint64_t v234 = v161;
  type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy();
  v153(v216, v229, v222);
  id v163 = v206;
  sub_10096B0D0();
  sub_10096B080();
  double v165 = v164;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v163, v207);
  double v166 = v165 * 1000000000.0;
  if ((~COERCE__INT64(v165 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_184;
  }
  if (v166 <= -9.22337204e18)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  uint64_t v167 = v216;
  if (v166 < 9.22337204e18)
  {
    uint64_t v168 = sub_1008BCD7C(v216, 0, (uint64_t)v166, 0);
    v158((char *)v167, v222);
    sub_1004D4360(v208, v168);
    swift_release();
    uint64_t v147 = v209;
LABEL_129:
    (*(void (**)(char *, uint64_t))(v147 + 8))(v202, v211);
    goto LABEL_130;
  }
LABEL_186:
  __break(1u);
  return result;
}

unint64_t sub_10086F2C4(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  unint64_t result = sub_100886070(a1, (uint64_t)a4);
  if (!v4)
  {
    if (result) {
      return 0;
    }
    else {
      return sub_10088636C(a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_10086F330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1008AA8E0(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t sub_10086F3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10087262C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008AAA34);
}

uint64_t sub_10086F3CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v123 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 104);
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v110 = sub_10096C890();
  uint64_t v108 = *(void *)(v110 - 8);
  uint64_t v8 = __chkstk_darwin(v110);
  uint64_t v105 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v107 = (char *)&v101 - v11;
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v115 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v104 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v106 = (uint64_t)&v101 - v14;
  uint64_t v15 = *(void *)(v3 + 96);
  uint64_t v16 = *(void *)(v3 + 80);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v117 = sub_10096C890();
  uint64_t v119 = *(void *)(v117 - 8);
  uint64_t v18 = __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  char v114 = (char *)&v101 - v21;
  uint64_t v120 = v17;
  uint64_t v118 = *(void *)(v17 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v116 = (uint64_t)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v109 = (uint64_t)&v101 - v24;
  uint64_t v124 = v16;
  uint64_t v125 = v6;
  uint64_t v121 = v6;
  uint64_t v122 = v5;
  uint64_t v126 = v15;
  uint64_t v127 = v5;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v113 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v101 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v101 - v33;
  if (((*(uint64_t (**)(uint64_t))(v4 + 152))(v32) & 0x4000) == 0) {
    goto LABEL_5;
  }
  uint64_t v103 = v26;
  uint64_t v35 = v123;
  if (!sub_100827AAC(v25)) {
    goto LABEL_5;
  }
  uint64_t v36 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v37 = v35;
  uint64_t v38 = *(int *)(v36 + 36);
  uint64_t v39 = *(void *)(v35 + v38);
  uint64_t v40 = v103;
  double v102 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
  v102(v34, v37, v25);
  if ((v39 & 0x80) != 0)
  {
    int v101 = *(void (**)(char *, uint64_t))(v40 + 8);
    v101(v34, v25);
LABEL_8:
    if (sub_1005152D8())
    {
      uint64_t v45 = *(void *)(v123 + v38);
      uint64_t v46 = v123;
      if ((v45 & 0x80) == 0)
      {
        uint64_t v47 = v128;
        goto LABEL_20;
      }
      v102(v31, v123, v25);
      if (v45)
      {
        v101(v31, v25);
        uint64_t v49 = v114;
      }
      else
      {
        uint64_t v48 = *(void *)&v31[*(int *)(v36 + 36)];
        v101(v31, v25);
        uint64_t v49 = v114;
        if ((v48 & 8) == 0) {
          goto LABEL_19;
        }
      }
      uint64_t v50 = v119;
      uint64_t v51 = v123;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v49, v123, v117);
      uint64_t v53 = v118;
      uint64_t v54 = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v49, 1, v120) == 1)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
        uint64_t v47 = v128;
        uint64_t v46 = v51;
        goto LABEL_20;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v109, v49, v54);
      uint64_t v56 = v107;
      uint64_t v55 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v51 + *(int *)(v25 + 52), v110);
      uint64_t v57 = v115;
      uint64_t v58 = v111;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v56, 1, v111) != 1)
      {
        uint64_t v76 = v106;
        uint64_t v77 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v106, v56, v58);
        double v78 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*a2 + 176))(v77);
        uint64_t v79 = v128;
        char v80 = sub_10042A000(v76, v78);
        uint64_t v47 = v79;
        if (v79)
        {
          swift_release();
          uint64_t v75 = v111;
          uint64_t v82 = v115;
          uint64_t v66 = v120;
          uint64_t v70 = v118;
          uint64_t v83 = v106;
          uint64_t v84 = v109;
          goto LABEL_35;
        }
        char v87 = v80;
        uint64_t v88 = v81;
        swift_release();
        if (v87)
        {
          uint64_t v46 = v123;
          if (v88)
          {
            swift_retain();
            uint64_t v89 = v106;
            sub_100876B40(a2, v106, v88);
            uint64_t v90 = v118;
            uint64_t v95 = v109;
            sub_100876D90(a2, v109, v89);
            uint64_t v96 = v115;
            uint64_t v97 = v120;
            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v89, v111);
            (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v95, v97);
            char v43 = 1;
            return v43 & 1;
          }
        }
        else
        {
          swift_release();
          uint64_t v46 = v123;
        }
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v106, v111);
        (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v109, v120);
LABEL_20:
        if (!sub_1005152D8()) {
          goto LABEL_24;
        }
        uint64_t v59 = v46 + *(int *)(v25 + 52);
        uint64_t v60 = type metadata accessor for ItemReconciliationHalf();
        uint64_t v61 = *(void *)(v59 + *(int *)(v60 + 36));
        if ((v61 & 0x80) == 0) {
          goto LABEL_24;
        }
        uint64_t v62 = v60;
        uint64_t v63 = v113;
        v102(v113, v46, v25);
        if (v61)
        {
          v101(v63, v25);
          uint64_t v65 = v119;
          uint64_t v66 = v120;
          uint64_t v67 = v116;
          int v68 = v112;
        }
        else
        {
          uint64_t v64 = *(void *)&v63[*(int *)(v25 + 52) + *(int *)(v62 + 36)];
          v101(v63, v25);
          uint64_t v65 = v119;
          uint64_t v66 = v120;
          uint64_t v67 = v116;
          int v68 = v112;
          if ((v64 & 8) == 0)
          {
LABEL_24:
            char v43 = 0;
            return v43 & 1;
          }
        }
        uint64_t v69 = v117;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v68, v123, v117);
        uint64_t v70 = v118;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v68, 1, v66) == 1)
        {
          (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v69);
LABEL_30:
          char v43 = 0;
          return v43 & 1;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v67, v68, v66);
        uint64_t v71 = v108;
        uint64_t v72 = v105;
        uint64_t v73 = v110;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v105, v59, v110);
        uint64_t v74 = v115;
        uint64_t v75 = v111;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v72, 1, v111) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v116, v66);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
          goto LABEL_30;
        }
        uint64_t v83 = v104;
        (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v104, v72, v75);
        uint64_t v84 = v116;
        char v85 = sub_10042A000(v116, a2);
        if (!v47)
        {
          uint64_t v91 = v86;
          if (v85)
          {
            if (v86)
            {
              uint64_t v92 = *(uint64_t (**)(uint64_t))(*a2 + 176);
              uint64_t v93 = swift_retain();
              double v94 = (uint64_t *)v92(v93);
              sub_100876B40(v94, v84, v91);
              uint64_t v98 = swift_release();
              uint64_t v99 = (void *)v92(v98);
              uint64_t v100 = v104;
              sub_100876D90(v99, v104, v84);
              swift_release();
              swift_release_n();
              (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v100, v111);
              (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v84, v66);
              char v43 = 1;
              return v43 & 1;
            }
          }
          else
          {
            swift_release();
          }
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v83, v75);
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v84, v66);
          char v43 = 0;
          return v43 & 1;
        }
        uint64_t v82 = v115;
LABEL_35:
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v75);
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v84, v66);
        return v43 & 1;
      }
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v109, v54);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v110);
    }
LABEL_19:
    uint64_t v47 = v128;
    uint64_t v46 = v123;
    goto LABEL_20;
  }
  uint64_t v41 = &v34[*(int *)(v25 + 52)];
  uint64_t v42 = *(void *)&v41[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)];
  int v101 = *(void (**)(char *, uint64_t))(v40 + 8);
  v101(v34, v25);
  if ((v42 & 0x80) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  char v43 = 0;
  return v43 & 1;
}

uint64_t sub_10087009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008700B4(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

uint64_t sub_1008700B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  uint64_t v6 = sub_1008AA69C(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

unint64_t sub_100870138(void (*a1)(void, void, void), void (*a2)(char *, unint64_t), uint64_t a3, void *a4)
{
  uint64_t v277 = a3;
  uint64_t v286 = a2;
  uint64_t v301 = a1;
  uint64_t v5 = *a4;
  uint64_t v6 = *(void *)(*a4 + 96);
  uint64_t v7 = *(void *)(*a4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v279 = sub_10096C890();
  uint64_t v246 = *(void *)(v279 - 8);
  __chkstk_darwin(v279);
  uint64_t v248 = (char *)&v241 - v9;
  uint64_t v283 = type metadata accessor for JobLockRule();
  uint64_t v278 = *(void *)(v283 - 8);
  uint64_t v10 = __chkstk_darwin(v283);
  uint64_t v268 = (char *)&v241 - v11;
  unint64_t v287 = AssociatedTypeWitness;
  uint64_t v285 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v245 = (char *)&v241 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v252 = (char *)&v241 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v253 = (char *)&v241 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v251 = (char *)&v241 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v249 = (char *)&v241 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v254 = (char *)&v241 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v255 = (char *)&v241 - v25;
  __chkstk_darwin(v24);
  uint64_t v266 = (char *)&v241 - v26;
  uint64_t v261 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v257 = *((void *)v261 - 1);
  __chkstk_darwin(v261);
  uint64_t v256 = (char *)&v241 - v27;
  uint64_t v292 = *(void *)(v5 + 88);
  uint64_t v28 = *(unsigned int (**)(void, void, void))(v5 + 104);
  uint64_t v294 = v7;
  uint64_t v295 = v292;
  uint64_t v296 = v6;
  uint64_t v297 = v28;
  uint64_t v29 = type metadata accessor for ItemReconciliation();
  uint64_t v30 = sub_10096C890();
  uint64_t v262 = *(void *)(v30 - 8);
  uint64_t v263 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v250 = (uint64_t)&v241 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v258 = (char *)&v241 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v260 = (uint64_t)&v241 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  BOOL v267 = (char *)&v241 - v38;
  uint64_t v264 = v29;
  uint64_t v265 = *(void *)(v29 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  char v247 = (char *)&v241 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v259 = (char *)&v241 - v42;
  uint64_t v284 = *(void *)(v7 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v269 = (char *)&v241 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v272 = (uint64_t)&v241 - v45;
  uint64_t v46 = type metadata accessor for SnapshotItem();
  uint64_t v47 = sub_10096C890();
  TupleTypeMetadata2 = *(void *)(v47 - 8);
  v271 = (void (*)(char *, void (*)(void, void), uint64_t))v47;
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v275 = v46;
  v276 = (char *)&v241 - v49;
  uint64_t v274 = *(void *)(v46 - 8);
  __chkstk_darwin(v48);
  uint64_t v273 = (char *)&v241 - v50;
  uint64_t v51 = sub_10096C890();
  uint64_t v281 = *(void *)(v51 - 8);
  uint64_t v282 = v51;
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v241 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v241 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v241 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v241 - v61;
  uint64_t v280 = a4;
  unint64_t v63 = a4[3];
  uint64_t v289 = v6;
  uint64_t v290 = v7;
  uint64_t v294 = v7;
  uint64_t v295 = v292;
  uint64_t v296 = v6;
  v288 = v28;
  uint64_t v297 = v28;
  uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
  uint64_t v65 = *(uint64_t (**)(void, uint64_t, void))(*(void *)v63 + 288);
  unint64_t v66 = v63;
  uint64_t v67 = v291;
  char v68 = v65(v301, ItemMetadata, 0);
  if (v67) {
    return v66;
  }
  uint64_t v243 = v54;
  uint64_t v244 = v62;
  uint64_t v241 = v57;
  uint64_t v242 = v60;
  uint64_t v70 = v288;
  uint64_t v291 = 0;
  if (v68)
  {
    uint64_t v294 = 0;
    uint64_t v295 = 0xE000000000000000;
    sub_10096CBD0(32);
    v302._object = (void *)0x80000001009A6400;
    v302._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    sub_10096BDC0(v302);
    swift_getAssociatedConformanceWitness();
    sub_10096D270();
LABEL_5:
    unint64_t v66 = v294;
    sub_10058DE40(v294, v295, 0, 2);
    swift_bridgeObjectRelease();
    return v66;
  }
  uint64_t v71 = v289;
  uint64_t v294 = v290;
  uint64_t v72 = v292;
  uint64_t v295 = v292;
  uint64_t v296 = v289;
  uint64_t v297 = v288;
  uint64_t v73 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
  unint64_t v66 = v63;
  uint64_t v74 = v291;
  char v75 = v65(v301, v73, 0);
  if (v74) {
    return v66;
  }
  uint64_t v291 = 0;
  if (v75)
  {
    sub_10096D230();
    swift_allocObject();
    uint64_t v76 = 1;
    uint64_t v77 = sub_10096C0D0();
    uint64_t v79 = v78;
    unint64_t v80 = v287;
    uint64_t v81 = v78 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, void, unint64_t))(v285 + 16))(v79, v301, v80);
    uint64_t v82 = v244;
    (*(void (**)(char *, void (*)(char *, unint64_t), uint64_t))(v281 + 16))(v244, v286, v282);
    uint64_t v83 = v284;
    uint64_t v84 = v290;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v82, 1, v290) == 1)
    {
      uint64_t v83 = v281;
      uint64_t v85 = v282;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v289 + 72))(v84, v289);
      uint64_t v76 = 0;
      uint64_t v85 = v84;
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v85);
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v285 + 56))(v81, v76, 1, v287);
    swift_storeEnumTagMultiPayload();
    uint64_t v91 = sub_1003FC080(v77);
    uint64_t v92 = *(uint64_t (**)(uint64_t))(**(void **)(v280[4] + 16) + 304);
    uint64_t v93 = swift_retain();
    LOBYTE(v92) = v92(v93);
    swift_release();
    unint64_t v66 = sub_1008879B8(v91, v277, v92 & 1);
    swift_bridgeObjectRelease();
    return v66;
  }
  uint64_t v86 = *(unsigned int (**)(void (*)(void, void), uint64_t, uint64_t))(v284 + 48);
  uint64_t v87 = v290;
  if (v86((void (*)(void, void))v286, 1, v290) == 1)
  {
    uint64_t v294 = v87;
    uint64_t v295 = v72;
    uint64_t v296 = v71;
    uint64_t v297 = v70;
    type metadata accessor for Propagation.DeleteItem();
    uint64_t v88 = sub_1007B3004();
    unint64_t v66 = v63;
    uint64_t v89 = v291;
    char v90 = (*(uint64_t (**)(uint64_t, void))(*(void *)v63 + 240))(v88, 0);
    if (v89) {
      return v66;
    }
    if (v90)
    {
      unint64_t v66 = 0xD000000000000041;
      sub_10058DE40(0xD000000000000041, 0x80000001009A63B0, 0, 2);
      return v66;
    }
  }
  else
  {
    uint64_t v89 = v291;
  }
  unint64_t v94 = v280[4];
  unint64_t v66 = v94;
  (*(void (**)(void (*)(void, void, void), uint64_t))(*(void *)v94 + 240))(v301, 1);
  if (v89) {
    return v66;
  }
  uint64_t v291 = 0;
  uint64_t v95 = v274;
  uint64_t v96 = v275;
  uint64_t v97 = v276;
  int v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v274 + 48))(v276, 1, v275);
  uint64_t v99 = (char *)(v281 + 16);
  if (v98 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v273, v97, v96);
    uint64_t v113 = *(void (**)(char *, void (*)(void, void), uint64_t))v99;
    char v114 = v242;
    v276 = v99;
    v271 = v113;
    v113(v242, (void (*)(void, void))v286, v282);
    uint64_t v115 = v290;
    v288 = (unsigned int (*)(void, void, void))v86;
    unsigned int v116 = v86((void (*)(void, void))v114, 1, v290);
    uint64_t v117 = v284;
    uint64_t v118 = v285;
    if (v116 == 1)
    {
      uint64_t v292 = v94;
      (*(void (**)(char *, uint64_t))(v281 + 8))(v114, v282);
LABEL_27:
      uint64_t v119 = v278;
LABEL_28:
      sub_10096D230();
      uint64_t v272 = *(void *)(v119 + 72);
      swift_allocObject();
      uint64_t v280 = (void *)sub_10096C0D0();
      uint64_t v121 = v120;
      unint64_t v122 = v287;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v123 = v121 + *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v124 = *(void (**)(void))(v118 + 16);
      uint64_t v125 = v301;
      ((void (*)(uint64_t, void, unint64_t))v124)(v121, v301, v122);
      uint64_t v269 = &v273[*(int *)(v275 + 36)];
      v124(v123);
      uint64_t v278 = *(void *)(v118 + 56);
      uint64_t v279 = v118 + 56;
      ((void (*)(uint64_t, void, uint64_t, unint64_t))v278)(v123, 0, 1, v122);
      swift_storeEnumTagMultiPayload();
      uint64_t v126 = v121 + v272;
      v272 += v121 + *(int *)(TupleTypeMetadata2 + 48);
      ((void (*)(uint64_t, void, unint64_t))v124)(v126, v125, v122);
      uint64_t v127 = v241;
      v271(v241, (void (*)(void, void))v286, v282);
      uint64_t v128 = v290;
      if (v288(v127, 1, v290) == 1)
      {
        (*(void (**)(char *, uint64_t))(v281 + 8))(v127, v282);
        uint64_t v129 = v272;
        ((void (*)(uint64_t, char *, unint64_t))v124)(v272, v269, v122);
      }
      else
      {
        uint64_t v137 = v266;
        (*(void (**)(uint64_t, uint64_t))(v289 + 72))(v128, v289);
        unint64_t v122 = v287;
        (*(void (**)(char *, uint64_t))(v284 + 8))(v127, v128);
        uint64_t v129 = v272;
        (*(void (**)(uint64_t, char *, unint64_t))(v285 + 32))(v272, v137, v122);
      }
      ((void (*)(uint64_t, void, uint64_t, unint64_t))v278)(v129, 0, 1, v122);
      swift_storeEnumTagMultiPayload();
      uint64_t v138 = sub_1003FC080((uint64_t)v280);
      unint64_t v139 = *(uint64_t (**)(uint64_t))(**(void **)(v292 + 16) + 304);
      uint64_t v140 = swift_retain();
      LOBYTE(v139) = v139(v140);
      swift_release();
      unint64_t v66 = sub_1008879B8(v138, v277, v139 & 1);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v274 + 8))(v273, v275);
      return v66;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v284 + 32))(v272, v114, v115);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v71 + 120))(v298, v115, v71);
    sub_1003A9A58(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
    sub_10001AE98((uint64_t)v298, (uint64_t)v300, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)v300) == 1)
    {
      BOOL v134 = v291;
      unsigned int v135 = v301;
      uint64_t v136 = (uint64_t)v267;
    }
    else
    {
      uint64_t v141 = (uint64_t)&v273[*(int *)(v96 + 52)];
      sub_10001AE98(v141, (uint64_t)v293, &qword_100AD0EA0);
      sub_10001AE98((uint64_t)v293, (uint64_t)&v294, &qword_100AD0EA0);
      int v142 = sub_1000DBD64((uint64_t)&v294);
      unsigned int v135 = v301;
      uint64_t v136 = (uint64_t)v267;
      if (v142 == 1)
      {
        BOOL v134 = v291;
        (*(void (**)(void *__return_ptr, void (*)(void, void, void)))(*(void *)v94
                                                                                                  + 264))(v299, v301);
        unint64_t v66 = (unint64_t)v134;
        if (v134)
        {
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v272, v115);
          (*(void (**)(char *, uint64_t))(v274 + 8))(v273, v275);
          return v66;
        }
        sub_10001AE98((uint64_t)v299, v141, &qword_100AD0EA0);
      }
      else
      {
        BOOL v134 = v291;
      }
    }
    unint64_t v147 = v280[2];
    unint64_t v66 = v147;
    sub_1000DEDD8((uint64_t)v135, v136);
    uint64_t v291 = v134;
    if (v134)
    {
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v272, v115);
      uint64_t v148 = v273;
      BOOL v149 = *(void (**)(char *, uint64_t))(v274 + 8);
    }
    else
    {
      uint64_t v292 = v94;
      uint64_t v150 = v264;
      uint64_t v151 = v265;
      uint64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48);
      uint64_t v280 = (void *)(v265 + 48);
      TupleTypeMetadata2 = (uint64_t)v152;
      if (v152(v136, 1, v264) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v136, v263);
        uint64_t v153 = v273;
      }
      else
      {
        uint64_t v154 = v259;
        (*(void (**)(char *, uint64_t, uint64_t))(v151 + 32))(v259, v136, v150);
        char v155 = v154[v261[19]];
        uint64_t v153 = v273;
        uint64_t v156 = &v273[*(int *)(v275 + 48)];
        uint64_t v157 = type metadata accessor for ItemMetadata();
        uint64_t v158 = v150;
        uint64_t v159 = v157;
        v156[*(int *)(v157 + 92)] = (v155 & 4) != 0;
        (*(void (**)(char *, uint64_t))(v265 + 8))(v154, v158);
        v156[*(int *)(v159 + 96)] = (v155 & 8) != 0;
        uint64_t v117 = v284;
      }
      swift_getWitnessTable();
      uint64_t v160 = v272;
      uint64_t v161 = v290;
      if (FileItem.unappliedFields<A>(from:)(v272))
      {
        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v160, v161);
        uint64_t v119 = v278;
        uint64_t v118 = v285;
        goto LABEL_28;
      }
      uint64_t v162 = v260;
      unint64_t v66 = v147;
      id v163 = v291;
      sub_1000DEDD8((uint64_t)v301, v260);
      uint64_t v291 = v163;
      if (!v163)
      {
        uint64_t v164 = v262;
        double v165 = v258;
        (*(void (**)(char *, uint64_t, uint64_t))(v262 + 16))(v258, v162, v263);
        uint64_t v166 = v264;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))TupleTypeMetadata2)(v165, 1, v264) == 1)
        {
          uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
          uint64_t v168 = v263;
          v167(v260, v263);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v272, v290);
          v167((uint64_t)v165, v168);
        }
        else
        {
          uint64_t v176 = v256;
          uint64_t v175 = v257;
          char v177 = v261;
          (*(void (**)(char *, char *, int *))(v257 + 16))(v256, v165, v261);
          (*(void (**)(char *, uint64_t))(v265 + 8))(v165, v166);
          uint64_t v178 = *(void *)&v176[v177[9]];
          (*(void (**)(char *, int *))(v175 + 8))(v176, v177);
          (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v260, v263);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v272, v290);
          if (v178)
          {
            uint64_t v118 = v285;
            goto LABEL_27;
          }
        }
        (*(void (**)(char *, uint64_t))(v274 + 8))(v273, v275);
        return 0;
      }
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v272, v290);
      BOOL v149 = *(void (**)(char *, uint64_t))(v274 + 8);
      uint64_t v148 = v153;
    }
    v149(v148, v275);
    return v66;
  }
  uint64_t v292 = v94;
  (*(void (**)(char *, void (*)(char *, void (*)(void, void), uint64_t)))(TupleTypeMetadata2 + 8))(v97, v271);
  uint64_t v100 = v243;
  uint64_t v101 = v282;
  (*(void (**)(char *, void (*)(char *, unint64_t), uint64_t))v99)(v243, v286, v282);
  uint64_t v102 = v290;
  unsigned int v103 = v86((void (*)(void, void))v100, 1, v290);
  uint64_t v104 = v284;
  uint64_t v105 = v285;
  if (v103 == 1)
  {
    uint64_t v106 = (*(uint64_t (**)(char *, uint64_t))(v281 + 8))(v100, v101);
    (*(void (**)(uint64_t))(*v280 + 216))(v106);
    unint64_t v107 = v287;
    uint64_t v108 = swift_getTupleTypeMetadata2();
    uint64_t v109 = v268;
    uint64_t v110 = &v268[*(int *)(v108 + 48)];
    (*(void (**)(char *, void, unint64_t))(v105 + 16))(v268, v301, v107);
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v105 + 56))(v110, 1, 1, v107);
    uint64_t v111 = v283;
    swift_storeEnumTagMultiPayload();
    LOBYTE(v110) = sub_1001E57C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v278 + 8))(v109, v111);
    if ((v110 & 1) == 0) {
      return 0xD000000000000018;
    }
    uint64_t v294 = 0;
    uint64_t v295 = 0xE000000000000000;
    sub_10096CBD0(74);
    v303._uint64_t countAndFlagsBits = 0xD000000000000048;
    v303._object = (void *)0x80000001009A6230;
    sub_10096BDC0(v303);
    if (*(unsigned char *)(v292 + 32)) {
      v112._uint64_t countAndFlagsBits = 20550;
    }
    else {
      v112._uint64_t countAndFlagsBits = 21318;
    }
    v112._object = (void *)0xE200000000000000;
    sub_10096BDC0(v112);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  double v130 = v269;
  (*(void (**)(char *, char *, uint64_t))(v284 + 32))(v269, v100, v102);
  uint64_t v131 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 144))(v102, v71);
  unsigned int v133 = v131;
  if (!(v132 >> 62))
  {
    sub_1000CF144(v131, v132);
    uint64_t v294 = 0;
    uint64_t v295 = 0xE000000000000000;
    sub_10096CBD0(27);
    swift_bridgeObjectRelease();
    uint64_t v294 = 0xD000000000000019;
    uint64_t v295 = 0x80000001009A6440;
    v304._uint64_t countAndFlagsBits = fpfs_tempfile_pattern_t.description.getter(v133);
    sub_10096BDC0(v304);
LABEL_66:
    swift_bridgeObjectRelease();
    unint64_t v66 = v294;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v130, v102);
    return v66;
  }
  if (v132 >> 62 == 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v130, v102);
    return v133;
  }
  uint64_t v143 = *(uint64_t (**)(uint64_t, uint64_t))(v71 + 80);
  uint64_t v145 = v143(v102, v71);
  uint64_t v146 = v144;
  if (v145 == 11822 && v144 == 0xE200000000000000
    || (sub_10096D2D0() & 1) != 0
    || v145 == 46 && v146 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_65:
    uint64_t v294 = 0;
    uint64_t v295 = 0xE000000000000000;
    sub_10096CBD0(32);
    swift_bridgeObjectRelease();
    uint64_t v294 = 0xD00000000000001ELL;
    uint64_t v295 = 0x80000001009A6390;
    v143(v102, v71);
    NSString v170 = sub_10096BC00();
    id v171 = objc_msgSend(v170, "fp_obfuscatedFilename");

    uint64_t v172 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v174 = v173;

    v305._uint64_t countAndFlagsBits = v172;
    v305._object = v174;
    sub_10096BDC0(v305);
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  char v169 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if (v169) {
    goto LABEL_65;
  }
  uint64_t v179 = v255;
  uint64_t v282 = *(void *)(v71 + 64);
  ((void (*)(uint64_t, uint64_t))v282)(v102, v71);
  unint64_t v180 = v287;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v182 = (*(uint64_t (**)(unint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v180, AssociatedConformanceWitness);
  uint64_t v183 = *(void (**)(char *, unint64_t))(v285 + 8);
  v288 = (unsigned int (*)(void, void, void))(v285 + 8);
  uint64_t v286 = v183;
  v183(v179, v180);
  if ((v182 & 1) != 0 && sub_1005152D8())
  {
    unint64_t v66 = 0xD000000000000024;
    BOOL v184 = "item is root and not in the snapshot";
LABEL_76:
    sub_10058DE40(v66, (unint64_t)(v184 - 32) | 0x8000000000000000, 0, 2);
    (*(void (**)(char *, uint64_t))(v284 + 8))(v269, v290);
    return v66;
  }
  uint64_t v185 = v254;
  ((void (*)(uint64_t, uint64_t))v282)(v290, v289);
  unint64_t v186 = v287;
  char v187 = (*(uint64_t (**)(unint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v287, AssociatedConformanceWitness);
  v286(v185, v186);
  if ((v187 & 1) != 0 && sub_1005152D8())
  {
    unint64_t v66 = 0xD000000000000025;
    BOOL v184 = "item is trash and not in the snapshot";
    goto LABEL_76;
  }
  uint64_t v188 = *(uint64_t (**)(uint64_t))(**(void **)(v292 + 16) + 304);
  uint64_t v189 = swift_retain();
  char v190 = v188(v189);
  uint64_t v191 = swift_release();
  if ((v190 & 1) == 0)
  {
    if (v277)
    {
      unint64_t v192 = v287;
      uint64_t v193 = swift_getTupleTypeMetadata2();
      int v194 = v268;
      uint64_t v195 = &v268[*(int *)(v193 + 48)];
      uint64_t v196 = v285;
      (*(void (**)(char *, void, unint64_t))(v285 + 16))(v268, v301, v192);
      uint64_t v281 = *(void *)(v289 + 72);
      ((void (*)(uint64_t))v281)(v290);
      (*(void (**)(char *, void, uint64_t, unint64_t))(v196 + 56))(v195, 0, 1, v192);
      uint64_t v197 = v283;
      swift_storeEnumTagMultiPayload();
      char v198 = sub_1001E0808();
      uint64_t v191 = (*(uint64_t (**)(char *, uint64_t))(v278 + 8))(v194, v197);
      if (v198)
      {
        uint64_t v294 = 0;
        uint64_t v295 = 0xE000000000000000;
        sub_10096CBD0(53);
        v306._uint64_t countAndFlagsBits = 0xD000000000000033;
        v306._object = (void *)0x80000001009A62F0;
        sub_10096BDC0(v306);
        uint64_t v199 = v249;
        uint64_t v200 = v269;
        uint64_t v201 = v290;
        ((void (*)(uint64_t, uint64_t))v281)(v290, v289);
        unint64_t v202 = v287;
        sub_10096D270();
        v286(v199, v202);
        unint64_t v66 = v294;
        sub_10058DE40(v294, v295, 0, 2);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v284 + 8))(v200, v201);
        return v66;
      }
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v280 + 256))(v191) & 1) == 0 || !sub_1005152D8()) {
    goto LABEL_93;
  }
  unint64_t v203 = v280[2];
  uint64_t v204 = *(void (**)(uint64_t))(v289 + 72);
  uint64_t v205 = (uint64_t)v251;
  v204(v290);
  unint64_t v66 = v203;
  uint64_t v206 = v291;
  sub_1000DEDD8(v205, v250);
  uint64_t v291 = v206;
  if (v206)
  {
    v286(v251, v287);
    (*(void (**)(char *, uint64_t))(v284 + 8))(v269, v290);
    return v66;
  }
  v286(v251, v287);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v250, 1, v264) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v250, v263);
    goto LABEL_93;
  }
  uint64_t v207 = v247;
  (*(void (**)(char *, uint64_t, uint64_t))(v265 + 32))(v247, v250, v264);
  if (v207[v261[14]] != 3 || (int v208 = v247[v261[13]], v208 == 2))
  {
    (*(void (**)(char *, uint64_t))(v265 + 8))(v247, v264);
LABEL_93:
    uint64_t v214 = (uint64_t)v253;
    uint64_t v216 = v289;
    uint64_t v215 = v290;
    ((void (*)(uint64_t, uint64_t))v282)(v290, v289);
    uint64_t v217 = (uint64_t)v252;
    (*(void (**)(uint64_t, uint64_t))(v216 + 72))(v215, v216);
    uint64_t v218 = v291;
    unint64_t v219 = sub_10086F2C4(v214, v217, 0, v280);
    if (v218)
    {
      unint64_t v66 = v287;
      v221 = v286;
      v286(v252, v287);
      v221(v253, v66);
      (*(void (**)(char *, uint64_t))(v284 + 8))(v269, v290);
    }
    else
    {
      unint64_t v66 = v219;
      uint64_t v222 = v220;
      unint64_t v223 = v287;
      uint64_t v224 = v286;
      v286(v252, v287);
      v224(v253, v223);
      if (v222)
      {
        (*(void (**)(char *, uint64_t))(v284 + 8))(v269, v290);
      }
      else
      {
        uint64_t v294 = sub_10096C110();
        unint64_t v225 = v287;
        uint64_t v282 = swift_getTupleTypeMetadata2();
        uint64_t v226 = &v268[*(int *)(v282 + 48)];
        uint64_t v227 = v285;
        uint64_t v228 = v301;
        uint64_t v301 = *(void (**)(void, void, void))(v285 + 16);
        v301(v268, v228, v225);
        uint64_t v291 = *(void (**)(void, void, void, void))(v227 + 56);
        v291(v226, 1, 1, v225);
        swift_storeEnumTagMultiPayload();
        uint64_t v281 = sub_10096C1C0();
        sub_10096C180();
        uint64_t v229 = *(void (**)(char *, uint64_t, uint64_t))(**(void **)(v292 + 16) + 512);
        swift_retain();
        uint64_t v230 = v248;
        v229(v269, v290, v289);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v227 + 48))(v230, 1, v225) == 1)
        {
          (*(void (**)(char *, uint64_t))(v246 + 8))(v248, v279);
        }
        else
        {
          uint64_t v231 = v245;
          unint64_t v232 = v287;
          (*(void (**)(char *, char *, unint64_t))(v285 + 32))(v245, v248, v287);
          uint64_t v233 = &v268[*(int *)(v282 + 48)];
          v301(v268, v231, v232);
          v291(v233, 1, 1, v232);
          swift_storeEnumTagMultiPayload();
          sub_10096C180();
          v286(v231, v232);
        }
        uint64_t v234 = v294;
        int v235 = *(uint64_t (**)(uint64_t))(**(void **)(v292 + 16) + 304);
        uint64_t v236 = swift_retain();
        char v237 = v235(v236);
        swift_release();
        uint64_t v238 = v290;
        unint64_t v66 = sub_1008879B8(v234, v277, v237 & 1);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v284 + 8))(v269, v238);
      }
    }
    return v66;
  }
  uint64_t v294 = 0;
  uint64_t v295 = 0xE000000000000000;
  if (v208)
  {
    sub_10096CBD0(56);
    v308._uint64_t countAndFlagsBits = 0x6620746E65726170;
    v308._object = (void *)0xEE00207265646C6FLL;
    sub_10096BDC0(v308);
    uint64_t v239 = v249;
    v210 = v269;
    uint64_t v211 = v290;
    ((void (*)(uint64_t, uint64_t))v204)(v290, v289);
    unint64_t v240 = v287;
    sub_10096D270();
    v286(v239, v240);
    v213._uint64_t countAndFlagsBits = 0xD000000000000028;
    v213._object = (void *)0x80000001009A6280;
  }
  else
  {
    sub_10096CBD0(72);
    v307._uint64_t countAndFlagsBits = 0x6620746E65726170;
    v307._object = (void *)0xEE00207265646C6FLL;
    sub_10096BDC0(v307);
    uint64_t v209 = v249;
    v210 = v269;
    uint64_t v211 = v290;
    ((void (*)(uint64_t, uint64_t))v204)(v290, v289);
    unint64_t v212 = v287;
    sub_10096D270();
    v286(v209, v212);
    v213._uint64_t countAndFlagsBits = 0xD000000000000038;
    v213._object = (void *)0x80000001009A62B0;
  }
  sub_10096BDC0(v213);
  unint64_t v66 = v294;
  (*(void (**)(char *, uint64_t))(v265 + 8))(v247, v264);
  (*(void (**)(char *, uint64_t))(v284 + 8))(v210, v211);
  return v66;
}

uint64_t sub_1008725FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008700B4(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_100872614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10087262C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008AA604);
}

uint64_t sub_10087262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_1008726B4(NSObject *a1, int a2, NSObject *a3, void *a4)
{
  uint64_t v333 = a1;
  uint64_t v323 = a4;
  LODWORD(v322) = a2;
  Class isa = a3->isa;
  uint64_t v4 = (uint8_t *)isa[10];
  uint64_t v316 = a3;
  uint64_t v5 = (uint8_t *)isa[12];
  type metadata accessor for SnapshotItem();
  uint64_t v300 = sub_10096C890();
  uint64_t v299 = *(void *)(v300 - 8);
  __chkstk_darwin(v300);
  uint64_t v312 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v279 - v6);
  uint64_t v295 = type metadata accessor for JobLockRule();
  uint64_t v292 = *(void *)(v295 - 8);
  uint64_t v7 = __chkstk_darwin(v295);
  uint64_t v291 = (char *)&v279 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = v8;
  __chkstk_darwin(v7);
  uint64_t v296 = (char *)&v279 - v9;
  uint64_t v319 = sub_10096B0E0();
  uint64_t v318 = *(void *)(v319 - 8);
  __chkstk_darwin(v319);
  v317 = (char *)&v279 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10096B480();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v320 = v11;
  uint64_t v321 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v313 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v279 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v309 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v279 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v311 = (char *)&v279 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v307 = (char *)&v279 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v297 = (char *)&v279 - v22;
  __chkstk_darwin(v21);
  uint64_t v310 = (uint8_t *)&v279 - v23;
  uint64_t v24 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  Swift::String v305 = (char *)&v279 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v27);
  Swift::String v304 = (char *)&v279 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v301 = (char *)&v279 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v293 = (char *)&v279 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v315 = (char *)&v279 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  Swift::String v303 = (char *)&v279 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v279 - v38);
  uint64_t v40 = sub_10096C890();
  uint64_t v326 = *(void *)(v40 - 8);
  uint64_t v327 = v40;
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v298 = (char *)&v279 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  Swift::String v308 = (char *)&v279 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  Swift::String v302 = (char *)&v279 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v294 = (char *)&v279 - v48;
  __chkstk_darwin(v47);
  uint64_t v328 = (char *)&v279 - v49;
  v324 = v5;
  uint64_t v325 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v329 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v330 = AssociatedTypeWitness;
  uint64_t v51 = __chkstk_darwin(AssociatedTypeWitness);
  Swift::String v306 = (char *)&v279 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v55 = (char *)&v279 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  uint64_t v58 = (char *)&v279 - v57;
  uint64_t v59 = __chkstk_darwin(v56);
  uint64_t v61 = (char *)&v279 - v60;
  __chkstk_darwin(v59);
  uint64_t v331 = (char *)&v279 - v62;
  uint64_t v63 = v25;
  unint64_t v66 = *(void (**)(char *, NSObject *, uint64_t))(v25 + 16);
  uint64_t v64 = v25 + 16;
  uint64_t v65 = v66;
  v66((char *)v39, v333, v24);
  uint64_t v332 = v39;
  if (swift_getEnumCaseMultiPayload()) {
    return (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v63 + 8))(v332, v24);
  }
  uint64_t v283 = v55;
  uint64_t v285 = v58;
  uint64_t v284 = v61;
  uint64_t v282 = v26;
  uint64_t v289 = v65;
  uint64_t v286 = v64;
  uint64_t v288 = v24;
  uint64_t v287 = v63;
  type metadata accessor for JobLockAggregator();
  sub_10096C890();
  uint64_t v68 = v327;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v70 = v331;
  uint64_t v71 = (char *)v332 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v72 = *(void *)((char *)v332 + *(int *)(TupleTypeMetadata3 + 64));
  (*(void (**)(char *))(v329 + 32))(v331);
  uint64_t v73 = v326;
  uint64_t v74 = (void (*)(char *, unint64_t))v328;
  (*(void (**)(char *, char *, uint64_t))(v326 + 32))(v328, v71, v68);
  char v75 = v70;
  uint64_t v76 = v323;
  uint64_t v77 = v334;
  unint64_t v78 = sub_100870138((void (*)(void, void, void))v75, v74, v72, v323);
  uint64_t v82 = v73;
  uint64_t v83 = v68;
  if (v77)
  {
    swift_release();
    uint64_t v84 = v330;
    uint64_t v85 = (uint64_t)v331;
    uint64_t v86 = v328;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v329 + 8))(v85, v84);
  }
  uint64_t v87 = v78;
  unint64_t v88 = v79;
  uint64_t v89 = (uint64_t)v80;
  uint64_t v90 = v288;
  uint64_t v91 = v289;
  switch(v81)
  {
    case 1:
      uint64_t v108 = v287;
      uint64_t v334 = 0;
      uint64_t v281 = v72;
      if (!v79) {
        goto LABEL_36;
      }
      if ((v322 & 1) == 0)
      {
        uint64_t v109 = *(uint64_t (**)(void))(*v76 + 152);
        uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
        char v110 = v109();
        uint64_t v87 = (uint64_t)v332;
        if ((v110 & 4) == 0)
        {
          uint64_t v322 = (uint8_t *)v89;
          id v111 = (id)fpfs_current_or_default_log();
          sub_10096B490();
          Swift::String v112 = v293;
          uint64_t v113 = (void (*)(char *, char *, uint64_t))v289;
          v289(v293, v333, v90);
          swift_bridgeObjectRetain();
          char v114 = sub_10096B470();
          os_log_type_t v115 = sub_10096C590();
          uint64_t v316 = v114;
          LODWORD(v313) = v115;
          if (os_log_type_enabled(v114, v115))
          {
            uint64_t v116 = swift_slowAlloc();
            uint64_t v312 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
            uint64_t v335 = v312;
            *(_DWORD *)uint64_t v116 = 136446466;
            uint64_t v311 = (char *)(v116 + 4);
            uint64_t v117 = v315;
            v113(v315, v112, v90);
            uint64_t v118 = *(void (**)(char *, uint64_t))(v287 + 8);
            v118(v112, v90);
            unint64_t v119 = sub_10045016C(v90);
            unint64_t v121 = v120;
            v118(v117, v90);
            uint64_t v108 = v287;
            uint64_t v339 = sub_100719D44(v119, v121, (uint64_t *)&v335);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v116 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v122 = (uint64_t)v332;
            uint64_t v339 = sub_100719D44((uint64_t)v332, v88, (uint64_t *)&v335);
            sub_10096C8C0();
            uint64_t v123 = v322;
            sub_1008AB0B8(v122, v88, (uint64_t)v322, 1);
            sub_1008AB0B8(v122, v88, (uint64_t)v123, 1);
            swift_bridgeObjectRelease();
            uint64_t v124 = v316;
            _os_log_impl((void *)&_mh_execute_header, v316, (os_log_type_t)v313, "defer ingestion of %{public}s: %s", (uint8_t *)v116, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v108 + 8))(v112, v90);
            uint64_t v246 = (uint64_t)v332;
            char v247 = v322;
            sub_1008AB0B8((uint64_t)v332, v88, (uint64_t)v322, 1);
            sub_1008AB0B8(v246, v88, (uint64_t)v247, 1);
          }
          (*(void (**)(char *, uint64_t))(v321 + 8))(v297, v320);
          uint64_t v248 = v329;
          uint64_t v249 = v319;
          uint64_t v250 = v318;
          uint64_t v251 = v317;
          uint64_t v252 = v294;
          sub_10096B0D0();
          sub_10096B080();
          double v254 = v253;
          (*(void (**)(char *, uint64_t))(v250 + 8))(v251, v249);
          double v255 = v254 * 1000000000.0;
          uint64_t v256 = v295;
          uint64_t v257 = (uint64_t)v296;
          if ((~COERCE__INT64(v254 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v255 > -9.22337204e18)
            {
              if (v255 < 9.22337204e18)
              {
                uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))(uint64_t)v255;
                uint64_t v258 = v330;
                sub_10096C890();
                v259 = (uint8_t *)(v257 + *(int *)(swift_getTupleTypeMetadata2() + 48));
                (*(void (**)(uint64_t, char *, uint64_t))(v248 + 16))(v257, v331, v258);
                (*(void (**)(char *, char *, uint64_t))(v326 + 16))(v252, v328, v327);
                uint64_t v260 = *((void *)v325 - 1);
                uint64_t v261 = 1;
                if ((*(unsigned int (**)(char *, uint64_t))(v260 + 48))(v252, 1) == 1)
                {
                  uint64_t v260 = v326;
                  uint64_t v262 = (uint8_t *)v327;
                }
                else
                {
                  uint64_t v263 = (void (*)(uint8_t *))*((void *)v324 + 9);
                  uint64_t v322 = v259;
                  uint64_t v264 = v256;
                  uint64_t v265 = v248;
                  uint64_t v266 = v325;
                  v263(v325);
                  uint64_t v261 = 0;
                  uint64_t v262 = v266;
                  uint64_t v248 = v265;
                  uint64_t v256 = v264;
                  v259 = v322;
                }
                (*(void (**)(char *, uint8_t *))(v260 + 8))(v252, v262);
                (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v248 + 56))(v259, v261, 1, v330);
                uint64_t v267 = swift_storeEnumTagMultiPayload();
                uint64_t v268 = v323;
                (*(void (**)(uint64_t))(*v323 + 216))(v267);
                sub_1001E4FD4(v257);
                swift_release();
                LODWORD(v322) = *(unsigned __int8 *)(v268[4] + 32);
                uint64_t v269 = v257;
                uint64_t v270 = v292;
                v271 = v291;
                (*(void (**)(char *, uint64_t, uint64_t))(v292 + 16))(v291, v269, v256);
                v289(v315, v333, v90);
                unint64_t v272 = (*(unsigned __int8 *)(v270 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v270 + 80);
                unint64_t v273 = (v290 + *(unsigned __int8 *)(v108 + 80) + v272) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
                unint64_t v274 = (v282 + v273 + 7) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v275 = (char *)swift_allocObject();
                *((void *)v275 + 2) = v325;
                v276 = isa;
                uint64_t v277 = v324;
                *((void *)v275 + 3) = isa[11];
                *((void *)v275 + 4) = v277;
                *((void *)v275 + 5) = v276[13];
                *((void *)v275 + 6) = v268;
                (*(void (**)(char *, char *, uint64_t))(v270 + 32))(&v275[v272], v271, v256);
                (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v275[v273], v315, v288);
                *(void *)&v275[v274] = v332;
                uint64_t v278 = *(void (**)(const char *, uint64_t, uint64_t, void, uint64_t, libfssync::Filename (__swiftcall *)(Swift::String), void, uint64_t (*)(), char *))(*v268 + 424);
                swift_retain();
                v278("ingest(itemChange:ignoreAfterFlush:result:db:)", 46, 2, v322, 1, Filename.init(rawValue:), 0, sub_1008AB640, v275);
                swift_release();
                swift_release();
                (*(void (**)(char *, uint64_t))(v270 + 8))(v296, v256);
                (*(void (**)(char *, uint64_t))(v326 + 8))(v328, v327);
                return (*(uint64_t (**)(char *, uint64_t))(v329 + 8))(v331, v330);
              }
LABEL_69:
              __break(1u);
              JUMPOUT(0x100874AD4);
            }
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
      }
      sub_1008AB0B8(v87, v88, v89, 1);
      uint64_t v91 = v289;
LABEL_36:
      id v201 = (id)fpfs_current_or_default_log();
      unint64_t v202 = v307;
      sub_10096B490();
      unint64_t v203 = v301;
      v91(v301, v333, v90);
      uint64_t v204 = sub_10096B470();
      os_log_type_t v205 = sub_10096C590();
      if (os_log_type_enabled(v204, v205))
      {
        uint64_t v333 = v204;
        uint64_t v206 = (uint8_t *)swift_slowAlloc();
        uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v335 = v332;
        uint64_t v322 = v206;
        *(_DWORD *)uint64_t v206 = 136446210;
        Class isa = v206 + 4;
        uint64_t v207 = v315;
        v91(v315, v203, v90);
        uint64_t v208 = v90;
        uint64_t v209 = *(void (**)(char *, uint64_t))(v108 + 8);
        v209(v203, v90);
        unint64_t v210 = sub_10045016C(v90);
        unint64_t v212 = v211;
        v209(v207, v208);
        uint64_t v339 = sub_100719D44(v210, v212, (uint64_t *)&v335);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        Swift::String v213 = v333;
        _os_log_impl((void *)&_mh_execute_header, v333, v205, "%{public}s", v322, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v321 + 8))(v307, v320);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v203, v90);

        (*(void (**)(char *, uint64_t))(v321 + 8))(v202, v320);
      }
      uint64_t v84 = v330;
      uint64_t v85 = (uint64_t)v331;
      uint64_t v86 = v328;
      uint64_t v214 = (uint64_t)v324;
      uint64_t v215 = v325;
      uint64_t v216 = v319;
      uint64_t v217 = v318;
      uint64_t v218 = v317;
      uint64_t v219 = (uint64_t)v302;
      (*(void (**)(char *, char *, uint64_t))(v326 + 16))(v302, v328, v327);
      sub_10060A8A0(v219, (uint64_t)v215, v214, (uint64_t)v312);
      sub_10096B0D0();
      sub_10096B080();
      double v221 = v220;
      (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v216);
      double v222 = v221 * 1000000000.0;
      if ((~COERCE__INT64(v221 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_64;
      }
      uint64_t v223 = v300;
      uint64_t v224 = v299;
      if (v222 <= -9.22337204e18) {
        goto LABEL_65;
      }
      uint64_t v82 = v326;
      uint64_t v83 = v327;
      unint64_t v225 = v312;
      if (v222 < 9.22337204e18)
      {
        sub_10086C908(v312, v85, 0, 0, 0, v323, 0x2000000000000000, (uint64_t)v222, 2048, (uint64_t)v316);
        swift_release();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v224 + 8))(v225, v223);
        goto LABEL_5;
      }
      goto LABEL_66;
    case 2:
      uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v334 = 0;
      id v125 = (id)fpfs_current_or_default_log();
      uint64_t v126 = v310;
      sub_10096B490();
      uint64_t v127 = v303;
      v91(v303, v333, v90);
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_10096B470();
      os_log_type_t v129 = sub_10096C590();
      uint64_t v333 = v128;
      LODWORD(v323) = v129;
      BOOL v130 = os_log_type_enabled(v128, v129);
      uint64_t v281 = v72;
      if (v130)
      {
        uint64_t v131 = swift_slowAlloc();
        uint64_t v313 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v335 = v313;
        *(_DWORD *)uint64_t v131 = 136446466;
        uint64_t v312 = (uint64_t (*)(char *, uint64_t, uint64_t))(v131 + 4);
        unint64_t v132 = v315;
        v91(v315, v127, v90);
        uint64_t v133 = v90;
        BOOL v134 = *(void (**)(char *, uint64_t))(v287 + 8);
        v134(v127, v133);
        unint64_t v135 = sub_10045016C(v133);
        uint64_t v322 = (uint8_t *)v89;
        unint64_t v137 = v136;
        v134(v132, v133);
        uint64_t v339 = sub_100719D44(v135, v137, (uint64_t *)&v335);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v131 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v138 = (uint64_t)v332;
        uint64_t v339 = sub_100719D44((uint64_t)v332, v88, (uint64_t *)&v335);
        uint64_t v89 = (uint64_t)v322;
        sub_10096C8C0();
        sub_1008AB0B8(v138, v88, v89, 2);
        sub_1008AB0B8(v138, v88, v89, 2);
        swift_bridgeObjectRelease();
        unint64_t v139 = v333;
        _os_log_impl((void *)&_mh_execute_header, v333, (os_log_type_t)v323, "%{public}s force fetch: %{public}s", (uint8_t *)v131, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint8_t *, uint64_t))(v321 + 8))(v310, v320);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v287 + 8))(v127, v90);
        uint64_t v177 = (uint64_t)v332;
        sub_1008AB0B8((uint64_t)v332, v88, v89, 2);
        sub_1008AB0B8(v177, v88, v89, 2);

        (*(void (**)(uint8_t *, uint64_t))(v321 + 8))(v126, v320);
      }
      uint64_t v178 = v329;
      uint64_t v179 = v319;
      uint64_t v180 = v318;
      uint64_t v181 = v317;
      uint64_t v182 = (uint64_t)v284;
      (*(void (**)(char *, char *, uint64_t))(v329 + 16))(v284, v331, v330);
      sub_10096B0D0();
      sub_10096B080();
      double v184 = v183;
      (*(void (**)(char *, uint64_t))(v180 + 8))(v181, v179);
      double v185 = v184 * 1000000000.0;
      if ((~COERCE__INT64(v184 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_59;
      }
      if (v185 <= -9.22337204e18)
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      if (v185 >= 9.22337204e18) {
        goto LABEL_60;
      }
      uint64_t v186 = (uint64_t)v185;
      if ((v89 & 0xFFFFFFFFFFFFF7FFLL) != 0) {
        uint64_t v187 = v89 | 0x800;
      }
      else {
        uint64_t v187 = 2048;
      }
      uint64_t v188 = isa[11];
      uint64_t v189 = isa[13];
      uint64_t v191 = v324;
      char v190 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
      uint64_t v335 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
      uint64_t v336 = v188;
      v337 = v324;
      uint64_t v338 = v189;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v192 = sub_1008AA778(v182, 0x2000000000000000, v186, v187, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      uint64_t v193 = *(void (**)(uint64_t, uint64_t))(v178 + 8);
      uint64_t v194 = v330;
      v193(v182, v330);
      uint64_t v195 = *(void *)(v192 + 96);
      uint64_t v196 = *(void *)(v192 + 104);
      *(_OWORD *)(v192 + 96) = xmmword_100984970;
      char v197 = *(unsigned char *)(v192 + 112);
      *(unsigned char *)(v192 + 112) = 0;
      sub_1000D31F8(v195, v196, v197);
      uint64_t v335 = v190;
      uint64_t v336 = v188;
      v337 = v191;
      uint64_t v338 = v189;
      type metadata accessor for JobResult();
      sub_1004D4360((uint64_t)v316, v192);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v326 + 8))(v328, v327);
      return ((uint64_t (*)(char *, uint64_t))v193)(v331, v194);
    case 3:
      uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v322 = v80;
      uint64_t v281 = v72;
      uint64_t v334 = 0;
      id v140 = (id)fpfs_current_or_default_log();
      uint64_t v141 = v311;
      sub_10096B490();
      int v142 = v308;
      uint64_t v315 = *(char **)(v82 + 16);
      ((void (*)(char *, char *, uint64_t))v315)(v308, v328, v83);
      uint64_t v143 = v329;
      uint64_t v144 = v330;
      uint64_t v145 = *(void **)(v329 + 16);
      uint64_t v146 = v285;
      uint64_t v333 = (v329 + 16);
      uint64_t v323 = v145;
      ((void (*)(char *, char *, uint64_t))v145)(v285, v331, v330);
      unint64_t v147 = sub_10096B470();
      LODWORD(v313) = sub_10096C590();
      BOOL v148 = os_log_type_enabled(v147, (os_log_type_t)v313);
      unint64_t v280 = v88;
      if (!v148)
      {
        uint64_t v315 = *(char **)(v82 + 8);
        ((void (*)(char *, uint64_t))v315)(v142, v327);
        char v198 = *(void (**)(char *, uint64_t))(v143 + 8);
        v198(v146, v144);

        (*(void (**)(char *, uint64_t))(v321 + 8))(v141, v320);
        uint64_t v199 = isa;
        uint64_t v200 = v144;
        goto LABEL_46;
      }
      uint64_t v312 = (uint64_t (*)(char *, uint64_t, uint64_t))v147;
      BOOL v149 = (uint8_t *)swift_slowAlloc();
      uint64_t v309 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      uint64_t v335 = v309;
      uint64_t v310 = v149;
      *(_DWORD *)BOOL v149 = 136315138;
      uint64_t v150 = v298;
      uint64_t v151 = v327;
      ((void (*)(char *, char *, uint64_t))v315)(v298, v142, v327);
      uint64_t v152 = v325;
      uint64_t v153 = *((void *)v325 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v153 + 48))(v150, 1, v325) == 1)
      {
        (*(void (**)(char *, uint64_t))(v326 + 8))(v150, v151);
        uint64_t v154 = v283;
        char v155 = v285;
        uint64_t v156 = v330;
        ((void (*)(char *, char *, uint64_t))v323)(v283, v285, v330);
      }
      else
      {
        uint64_t v226 = sub_10096D220();
        unint64_t v228 = v227;
        (*(void (**)(char *, uint8_t *))(v153 + 8))(v150, v152);
        uint64_t v154 = v283;
        char v155 = v285;
        uint64_t v156 = v330;
        ((void (*)(char *, char *, uint64_t))v323)(v283, v285, v330);
        if (v228) {
          goto LABEL_45;
        }
      }
      swift_getAssociatedConformanceWitness();
      uint64_t v226 = sub_10096D220();
      unint64_t v228 = v229;
LABEL_45:
      uint64_t v230 = v310;
      char v198 = *(void (**)(char *, uint64_t))(v329 + 8);
      v198(v154, v156);
      uint64_t v339 = sub_100719D44(v226, v228, (uint64_t *)&v335);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      uint64_t v315 = *(char **)(v326 + 8);
      ((void (*)(char *, uint64_t))v315)(v308, v327);
      v198(v155, v156);
      uint64_t v231 = v312;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v312, (os_log_type_t)v313, "delay tracking of temporary item %s", v230, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v321 + 8))(v311, v320);
      uint64_t v199 = isa;
      uint64_t v200 = v156;
LABEL_46:
      uint64_t v232 = v199[11];
      uint64_t v233 = v199[13];
      uint64_t v335 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
      uint64_t v336 = v232;
      v337 = v324;
      uint64_t v338 = v233;
      type metadata accessor for Ingestion.TrackTemporaryItem();
      uint64_t v234 = (uint64_t)v306;
      ((void (*)(char *, char *, uint64_t))v323)(v306, v331, v200);
      int v235 = v317;
      sub_10096B0D0();
      sub_10096B080();
      double v237 = v236;
      (*(void (**)(char *, uint64_t))(v318 + 8))(v235, v319);
      double v238 = v237 * 1000000000.0;
      if ((~COERCE__INT64(v237 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_61;
      }
      if (v238 <= -9.22337204e18) {
        goto LABEL_62;
      }
      uint64_t v239 = v330;
      if (v238 >= 9.22337204e18) {
        goto LABEL_63;
      }
      uint64_t v240 = (uint64_t)v238;
      swift_allocObject();
      uint64_t v241 = sub_100610B30(v234, 0x2000000000000000, v240, 2048);
      v198((char *)v234, v239);
      uint64_t v243 = *(void *)(v241 + 96);
      uint64_t v242 = *(void *)(v241 + 104);
      *(void *)(v241 + 96) = 256;
      uint64_t v244 = v280;
      *(void *)(v241 + 104) = v280;
      char v245 = *(unsigned char *)(v241 + 112);
      *(unsigned char *)(v241 + 112) = 0;
      swift_retain();
      sub_1000D31F8(v243, v242, v245);
      uint64_t v335 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
      uint64_t v336 = v232;
      v337 = v324;
      uint64_t v338 = v233;
      type metadata accessor for JobResult();
      sub_1004D4360((uint64_t)v316, v241);
      swift_release();
      swift_release();
      sub_1008AB0B8((uint64_t)v332, v244, (uint64_t)v322, 3);
      ((void (*)(char *, uint64_t))v315)(v328, v327);
      return ((uint64_t (*)(char *, uint64_t))v198)(v331, v239);
    case 4:
      id v157 = (id)fpfs_current_or_default_log();
      uint64_t v158 = v309;
      sub_10096B490();
      uint64_t v159 = v304;
      v91(v304, v333, v90);
      uint64_t v160 = sub_10096B470();
      os_log_type_t v161 = sub_10096C5A0();
      if (os_log_type_enabled(v160, v161))
      {
        uint64_t v333 = v160;
        uint64_t v162 = swift_slowAlloc();
        uint64_t v281 = v72;
        id v163 = (uint8_t *)v162;
        uint64_t v164 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v334 = 0;
        uint64_t v335 = v164;
        uint64_t v332 = v164;
        *(_DWORD *)id v163 = 136315138;
        v324 = v163 + 4;
        uint64_t v325 = v163;
        double v165 = v315;
        v91(v315, v159, v90);
        uint64_t v166 = v90;
        uint64_t v167 = *(void (**)(char *, uint64_t))(v287 + 8);
        v167(v159, v90);
        unint64_t v168 = sub_10045016C(v90);
        unint64_t v170 = v169;
        v167(v165, v166);
        uint64_t v339 = sub_100719D44(v168, v170, (uint64_t *)&v335);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        id v171 = v333;
        _os_log_impl((void *)&_mh_execute_header, v333, v161, "⛔️  already known %s", v325, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        uint64_t v172 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v321 + 8);
        uint64_t v173 = &v340;
LABEL_23:
        uint64_t v176 = (uint64_t (*)(char *, uint64_t, uint64_t))*(v173 - 32);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v287 + 8))(v159, v90);

        swift_release();
        uint64_t v172 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v321 + 8);
        uint64_t v176 = v158;
      }
      v172(v176, v320);
      (*(void (**)(char *, uint64_t))(v326 + 8))(v328, v327);
      return (*(uint64_t (**)(char *, uint64_t))(v329 + 8))(v331, v330);
    default:
      uint64_t v332 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v322 = v80;
      id v92 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v93 = v305;
      v91(v305, v333, v90);
      swift_bridgeObjectRetain();
      unint64_t v94 = v88;
      uint64_t v95 = sub_10096B470();
      os_log_type_t v96 = sub_10096C5A0();
      int v97 = v96;
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v98 = swift_slowAlloc();
        uint64_t v281 = v72;
        uint64_t v99 = v98;
        uint64_t v333 = swift_slowAlloc();
        uint64_t v334 = 0;
        uint64_t v335 = (uint64_t (*)(char *, uint64_t, uint64_t))v333;
        *(_DWORD *)uint64_t v99 = 136315394;
        v324 = (uint8_t *)(v99 + 4);
        LODWORD(v325) = v97;
        uint64_t v100 = v315;
        v91(v315, v93, v90);
        uint64_t v101 = v90;
        uint64_t v102 = *(void (**)(char *, uint64_t))(v287 + 8);
        v102(v93, v101);
        unint64_t v103 = sub_10045016C(v101);
        unint64_t v105 = v104;
        v102(v100, v101);
        uint64_t v339 = sub_100719D44(v103, v105, (uint64_t *)&v335);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v99 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v106 = (uint64_t)v332;
        uint64_t v339 = sub_100719D44((uint64_t)v332, v94, (uint64_t *)&v335);
        sub_10096C8C0();
        unint64_t v107 = v322;
        sub_1008AB0B8(v106, v94, (uint64_t)v322, 0);
        sub_1008AB0B8(v106, v94, (uint64_t)v107, 0);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v325, "⛔️  discarded %s: %s", (uint8_t *)v99, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v287 + 8))(v93, v90);

        swift_release();
        uint64_t v174 = (uint64_t)v332;
        uint64_t v175 = v322;
        sub_1008AB0B8((uint64_t)v332, v94, (uint64_t)v322, 0);
        sub_1008AB0B8(v174, v94, (uint64_t)v175, 0);
      }
      uint64_t v172 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v321 + 8);
      uint64_t v173 = &v341;
      goto LABEL_23;
  }
}

id sub_100874AE8()
{
  id result = sub_100874B08();
  qword_100B0B618 = (uint64_t)result;
  return result;
}

id sub_100874B08()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_DELAY, 0);
  xpc_dictionary_set_int64(v0, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_HOUR);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_BOOL(v0, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  xpc_dictionary_set_string(v0, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  id v1 = objc_allocWithZone((Class)FPDSharedScheduler);
  NSString v2 = sub_10096BC00();
  id v3 = [v1 initWithLabel:v2 criteria:v0];

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_100874C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, ValueMetadata *a11)
{
  uint64_t v88 = a6;
  uint64_t v89 = a7;
  int v84 = a5;
  LODWORD(v86) = a4;
  uint64_t v85 = a3;
  id v92 = a9;
  uint64_t v93 = a1;
  uint64_t v90 = a8;
  uint64_t v91 = a11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v13 = *(char **)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v87 = (void (**)(char *, uint64_t))((char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v82 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v82 - v19;
  uint64_t v21 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v23 = __chkstk_darwin(TupleTypeMetadata2 - 8);
  uint64_t v25 = (char *)&v82 - v24;
  uint64_t v26 = (char *)&v82 + *(int *)(v23 + 56) - v24;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v27((char *)&v82 - v24, v93, v21);
  uint64_t v28 = a2;
  uint64_t v29 = v13;
  v27(v26, v28, v21);
  uint64_t v30 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v13 + 6);
  LODWORD(v13) = v30(v25, 1, v12);
  uint64_t v93 = v12;
  int v31 = v30(v26, 1, v12);
  if (v13 != 1)
  {
    uint64_t v40 = v18;
    uint64_t v41 = (uint64_t)v87;
    uint64_t v42 = (void (*)(char *, char *, uint64_t))*((void *)v29 + 4);
    if (v31 != 1)
    {
      uint64_t v61 = v40;
      uint64_t v62 = v93;
      v42(v40, v25, v93);
      uint64_t v63 = v41;
      v42((char *)v41, v26, v62);
      swift_getWitnessTable();
      unint64_t v64 = FileItem.unappliedFields<A>(from:)(v41);
      if ((v64 == 0 || (v86 & 1) == 0) | (v64 >> 43) & 1) {
        uint64_t v65 = v64;
      }
      else {
        uint64_t v65 = v64 | 0x80000000000;
      }
      __chkstk_darwin(v64);
      strcpy((char *)&v82 - 48, "oldItem newItem diffs reason ");
      uint64_t v94 = v62;
      uint64_t v95 = v62;
      os_log_type_t v96 = &type metadata for Fields;
      int v97 = (ValueMetadata *)&type metadata for String;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v67 = v92;
      uint64_t v68 = (char *)v92 + TupleTypeMetadata[12];
      uint64_t v69 = TupleTypeMetadata[16];
      uint64_t v70 = (void *)((char *)v92 + TupleTypeMetadata[20]);
      v42((char *)v92, v61, v62);
      v42(v68, (char *)v63, v62);
      *(void *)((char *)v67 + v69) = v65;
      uint64_t v71 = v89;
      void *v70 = v88;
      v70[1] = v71;
      uint64_t v94 = v90;
      uint64_t v95 = v90;
      os_log_type_t v96 = v91;
      int v97 = v91;
      type metadata accessor for ItemChange();
      goto LABEL_17;
    }
    uint64_t v87 = (void (**)(char *, uint64_t))v29;
    uint64_t v43 = v93;
    uint64_t v83 = v42;
    v42(v20, v25, v93);
    uint64_t v44 = v90;
    uint64_t v45 = v91;
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    uint64_t v48 = swift_checkMetadataState();
    uint64_t v86 = v20;
    uint64_t v49 = v43;
    uint64_t v50 = v44;
    uint64_t v51 = v48;
    uint64_t v52 = v47(v48, AssociatedConformanceWitness);
    uint64_t v53 = v92;
    if (v52)
    {
      v87[1](v86, v49);
      *uint64_t v53 = 0xD00000000000001ALL;
      v53[1] = 0x80000001009A5BA0;
      uint64_t v94 = v50;
      uint64_t v95 = v50;
      os_log_type_t v96 = v45;
      int v97 = v45;
      goto LABEL_8;
    }
    __chkstk_darwin(v52);
    strcpy((char *)&v82 - 32, "  isRecursive reason ");
    uint64_t v94 = v51;
    uint64_t v95 = v21;
    os_log_type_t v96 = (ValueMetadata *)&type metadata for Bool;
    int v97 = (ValueMetadata *)&type metadata for String;
    uint64_t v77 = (int *)swift_getTupleTypeMetadata();
    unint64_t v78 = (char *)v53 + v77[12];
    uint64_t v79 = v77[16];
    unint64_t v80 = (void *)((char *)v53 + v77[20]);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v53, v85, v51);
    v83(v78, v86, v49);
    ((void (*)(char *, void, uint64_t, uint64_t))v87[7])(v78, 0, 1, v49);
    *((unsigned char *)v53 + v79) = v84 & 1;
    uint64_t v81 = v89;
    void *v80 = v88;
    v80[1] = v81;
    uint64_t v94 = v50;
    uint64_t v95 = v50;
    os_log_type_t v96 = v45;
    int v97 = v45;
    goto LABEL_16;
  }
  if (v31 == 1)
  {
    uint64_t v33 = v90;
    uint64_t v32 = v91;
    swift_getAssociatedTypeWitness();
    uint64_t v34 = swift_getAssociatedConformanceWitness();
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 64);
    uint64_t v36 = swift_checkMetadataState();
    uint64_t v37 = v85;
    uint64_t v38 = v35(v36, v34);
    uint64_t v39 = v92;
    if (v38)
    {
      *id v92 = 0xD00000000000001ALL;
      v39[1] = 0x80000001009A5BA0;
      uint64_t v94 = v33;
      uint64_t v95 = v33;
      os_log_type_t v96 = v32;
      int v97 = v32;
LABEL_8:
      type metadata accessor for ItemChange();
      return swift_storeEnumTagMultiPayload();
    }
    __chkstk_darwin(v38);
    strcpy((char *)&v82 - 32, "  isRecursive reason ");
    uint64_t v94 = v36;
    uint64_t v95 = v21;
    os_log_type_t v96 = (ValueMetadata *)&type metadata for Bool;
    int v97 = (ValueMetadata *)&type metadata for String;
    uint64_t v72 = (int *)swift_getTupleTypeMetadata();
    uint64_t v73 = (char *)v39 + v72[12];
    uint64_t v74 = v72[16];
    char v75 = (void *)((char *)v39 + v72[20]);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v39, v37, v36);
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v29 + 7))(v73, 1, 1, v93);
    *((unsigned char *)v39 + v74) = v84 & 1;
    uint64_t v76 = v89;
    *char v75 = v88;
    v75[1] = v76;
    uint64_t v94 = v33;
    uint64_t v95 = v33;
    os_log_type_t v96 = v32;
    int v97 = v32;
LABEL_16:
    type metadata accessor for ItemChange();
    goto LABEL_17;
  }
  uint64_t v55 = v93;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v57 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v58 = v92;
  uint64_t v59 = (void *)((char *)v92 + *(int *)(TupleTypeMetadata3 + 64));
  (*((void (**)(void *, char *, uint64_t))v29 + 4))(v92, v26, v55);
  *((unsigned char *)v58 + v57) = v86 & 1;
  uint64_t v60 = v89;
  *uint64_t v59 = v88;
  v59[1] = v60;
  uint64_t v94 = v90;
  uint64_t v95 = v90;
  os_log_type_t v96 = v91;
  int v97 = v91;
  type metadata accessor for ItemChange();
LABEL_17:
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1008754D4(uint64_t a1, void *a2)
{
  uint64_t v153 = a1;
  NSString v2 = (void *)*a2;
  uint64_t v3 = sub_10096B0E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v139 = v3;
  uint64_t v140 = v4;
  __chkstk_darwin(v3);
  uint64_t v138 = (char *)v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v2[12];
  uint64_t v7 = v2[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v146 = (uint64_t)v119 - v8;
  uint64_t v9 = v2[11];
  uint64_t v10 = v2[13];
  uint64_t v132 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  BOOL v130 = (char *)v119 - v11;
  uint64_t v142 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v148 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v141 = (char *)v119 - v12;
  uint64_t v155 = v7;
  uint64_t v156 = v9;
  uint64_t v157 = v6;
  uint64_t v158 = v10;
  uint64_t v150 = type metadata accessor for ItemReconciliation();
  uint64_t v149 = sub_10096C890();
  uint64_t v151 = *(void *)(v149 - 8);
  uint64_t v13 = __chkstk_darwin(v149);
  uint64_t v127 = (char *)v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v129 = (char *)v119 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v128 = (char *)v119 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v143 = (char *)v119 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v133 = (char *)v119 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v144 = (char *)v119 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)v119 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)v119 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v119 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v119 - v34;
  uint64_t v155 = v7;
  uint64_t v156 = v9;
  uint64_t v136 = v9;
  uint64_t v157 = v6;
  uint64_t v158 = v10;
  uint64_t v135 = v10;
  uint64_t v36 = type metadata accessor for Job();
  uint64_t v154 = sub_10096C110();
  uint64_t v134 = v7;
  uint64_t v37 = v153;
  uint64_t v137 = v6;
  uint64_t v38 = type metadata accessor for SnapshotItem();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (FileItem.kind.getter(v38, WitnessTable) != 1) {
    return v154;
  }
  uint64_t v40 = v152;
  sub_1000DEDD8(v37, (uint64_t)v35);
  if (v40) {
    return swift_bridgeObjectRelease();
  }
  v119[1] = v36;
  uint64_t v42 = v151 + 16;
  uint64_t v43 = v149;
  id v125 = *(void (**)(char *, char *, uint64_t))(v151 + 16);
  v125(v33, v35, v149);
  uint64_t v44 = *(void *)(v150 - 8);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  uint64_t v123 = v44 + 48;
  uint64_t v124 = v45;
  int v46 = ((uint64_t (*)(char *, uint64_t))v45)(v33, 1);
  uint64_t v126 = v35;
  uint64_t v152 = v42;
  uint64_t v122 = v44;
  if (v46 == 1)
  {
    uint64_t v47 = v151;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v33, v43);
    uint64_t v48 = v150;
  }
  else
  {
    uint64_t v49 = v141;
    uint64_t v50 = v142;
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v33, v142);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v150);
    int v51 = v49[*(int *)(v50 + 56)];
    uint64_t v48 = v150;
    (*(void (**)(char *, uint64_t))(v148 + 8))(v49, v50);
    uint64_t v47 = v151;
    if (v51 != 6)
    {
      unint64_t v80 = v126;
      uint64_t v81 = v125;
      v125(v30, v126, v43);
      uint64_t v82 = *(void (**)(char *, uint64_t))(v47 + 8);
      v82(v30, v43);
      uint64_t v83 = v144;
      uint64_t v65 = v80;
      v81(v144, v80, v43);
      uint64_t v54 = v43;
      v82(v83, v43);
      goto LABEL_19;
    }
  }
  uint64_t v52 = v126;
  uint64_t v53 = v125;
  v125(v30, v126, v43);
  unint64_t v120 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v121 = v47 + 32;
  v120(v27, v30, v43);
  uint64_t v54 = v43;
  if (v124(v27, 1, v48) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v43);
    uint64_t v55 = v144;
    v53(v144, v52, v54);
    uint64_t v56 = v150;
    goto LABEL_13;
  }
  uint64_t v57 = v148;
  uint64_t v58 = v141;
  uint64_t v59 = v142;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v27, v142);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v27, v150);
  int v60 = v58[*(int *)(v59 + 52)];
  uint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v62 = v58;
  uint64_t v53 = v125;
  uint64_t v56 = v150;
  v61(v62, v59);
  uint64_t v63 = v144;
  v53(v144, v52, v54);
  BOOL v64 = v60 == 3;
  uint64_t v55 = v63;
  if (v64)
  {
    uint64_t v65 = v126;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v63, v54);
LABEL_19:
    uint64_t v67 = v65;
    uint64_t v53 = v125;
    goto LABEL_20;
  }
LABEL_13:
  unint64_t v66 = v133;
  v120(v133, v55, v54);
  if (v124(v66, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v66, v54);
    uint64_t v67 = v126;
    goto LABEL_16;
  }
  uint64_t v68 = &v66[*(int *)(v56 + 52)];
  uint64_t v69 = v131;
  uint64_t v70 = v56;
  uint64_t v71 = v130;
  uint64_t v72 = v66;
  uint64_t v73 = v132;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v130, v68, v132);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v72, v70);
  LODWORD(v72) = v71[*(int *)(v73 + 56)];
  uint64_t v74 = v69;
  uint64_t v53 = v125;
  char v75 = v71;
  uint64_t v56 = v70;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
  uint64_t v67 = v126;
  if (v72 != 6)
  {
LABEL_20:
    int v84 = v143;
    v53(v143, v67, v54);
    uint64_t v85 = *(void (**)(char *, uint64_t))(v151 + 8);
    v85(v84, v54);
    v85(v67, v54);
    return v154;
  }
LABEL_16:
  uint64_t v76 = v143;
  v53(v143, v67, v54);
  uint64_t v77 = v128;
  v120(v128, v76, v54);
  if (v124(v77, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v77, v54);
    uint64_t v78 = v145;
    uint64_t v79 = v129;
    goto LABEL_23;
  }
  uint64_t v86 = &v77[*(int *)(v56 + 52)];
  uint64_t v87 = v77;
  uint64_t v88 = v131;
  uint64_t v89 = v56;
  uint64_t v90 = v130;
  uint64_t v91 = v132;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v130, v86, v132);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v87, v89);
  LODWORD(v87) = v90[*(int *)(v91 + 52)];
  id v92 = v90;
  uint64_t v56 = v89;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v92, v91);
  uint64_t v78 = v145;
  uint64_t v79 = v129;
  if (v87 == 3)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v126, v54);
    return v154;
  }
LABEL_23:
  uint64_t v155 = v134;
  uint64_t v156 = v136;
  uint64_t v157 = v137;
  uint64_t v158 = v135;
  type metadata accessor for Ingestion.ReSnapshotChildren();
  uint64_t v144 = *(char **)(v78 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v146, v153, AssociatedTypeWitness);
  uint64_t v93 = v138;
  sub_10096B0D0();
  sub_10096B080();
  double v95 = v94;
  uint64_t v96 = v140 + 8;
  uint64_t v143 = *(char **)(v140 + 8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v143)(v93, v139);
  double v97 = v95 * 1000000000.0;
  if ((~COERCE__INT64(v95 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v97 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v140 = v96;
  if (v97 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v98 = v146;
  uint64_t v99 = sub_1008AA69C(v146, 0, (uint64_t)v97, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
  uint64_t v100 = *(char **)(v78 + 8);
  uint64_t v145 = v78 + 8;
  uint64_t v133 = v100;
  ((void (*)(uint64_t, uint64_t))v100)(v98, AssociatedTypeWitness);
  uint64_t v155 = v99;
  sub_10096C1C0();
  sub_10096C180();
  BOOL v101 = sub_1005152D8();
  uint64_t v102 = v149;
  v125(v79, v126, v149);
  if (v101)
  {
    uint64_t v103 = v151;
    uint64_t v104 = v153;
LABEL_30:
    (*(void (**)(char *, uint64_t))(v103 + 8))(v79, v149);
    goto LABEL_31;
  }
  unint64_t v105 = v127;
  v120(v127, v79, v102);
  unsigned int v106 = v124(v105, 1, v56);
  uint64_t v104 = v153;
  if (v106 == 1)
  {
    uint64_t v79 = v105;
    uint64_t v103 = v151;
    goto LABEL_30;
  }
  uint64_t v114 = v56;
  uint64_t v115 = v148;
  uint64_t v117 = v141;
  uint64_t v116 = v142;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v105, v142);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v105, v114);
  int v118 = v117[*(int *)(v116 + 52)];
  (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v116);
  uint64_t v103 = v151;
  if (!v118)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v126, v149);
    return v154;
  }
LABEL_31:
  uint64_t v155 = v134;
  uint64_t v156 = v136;
  uint64_t v157 = v137;
  uint64_t v158 = v135;
  type metadata accessor for Ingestion.FetchChildrenMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v146, v104, AssociatedTypeWitness);
  unint64_t v107 = v138;
  sub_10096B0D0();
  sub_10096B080();
  double v109 = v108;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v143)(v107, v139);
  double v110 = v109 * 1000000000.0;
  if ((~COERCE__INT64(v109 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v111 = v149;
  if (v110 <= -9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v110 < 9.22337204e18)
  {
    uint64_t v112 = v146;
    uint64_t v113 = sub_1008AA778(v146, 0, (uint64_t)v110, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    ((void (*)(uint64_t, uint64_t))v133)(v112, AssociatedTypeWitness);
    uint64_t v155 = v113;
    sub_10096C180();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v126, v111);
    return v154;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1008764AC(void (*a1)(char *), void *a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v50 = a3;
  uint64_t v45 = (void *)*a2;
  uint64_t v52 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  int v51 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (**)(uint64_t, char *, uint64_t))v45[12];
  int v46 = (uint64_t (**)(char *, uint64_t))v45[10];
  uint64_t v47 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v54 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v41 - v12;
  uint64_t v13 = sub_10096C890();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = a2[4];
  uint64_t result = sub_1005152D8();
  if (result)
  {
    uint64_t v42 = v10;
    uint64_t v43 = v5;
    uint64_t v19 = type metadata accessor for SnapshotItem();
    uint64_t v48 = (char *)v49 + *(int *)(v19 + 36);
    uint64_t v20 = (uint64_t *)((char *)v49 + *(int *)(v19 + 44));
    uint64_t v21 = *v20;
    uint64_t ItemMetadata = v20[1];
    uint64_t v49 = *(void (**)(char *))(v9 + 16);
    v49(v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *))(*(void *)v17 + 256))(v48, v21, ItemMetadata, v16);
    if (v3)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      uint64_t v23 = v22;
      uint64_t v48 = (char *)(v9 + 16);
      uint64_t v41 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      if (sub_10096C1A0())
      {
        uint64_t v24 = v46;
        uint64_t v25 = v45[11];
        uint64_t v26 = v45[13];
        uint64_t v55 = (uint64_t (**)(void, uint64_t))v46;
        uint64_t v56 = v25;
        uint64_t v27 = v47;
        uint64_t v57 = v47;
        uint64_t v58 = v26;
        uint64_t v45 = (void *)type metadata accessor for JobResult();
        uint64_t v55 = (uint64_t (**)(void, uint64_t))v24;
        uint64_t v56 = v25;
        uint64_t v57 = v27;
        uint64_t v58 = v26;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v28 = 0;
        int v46 = (uint64_t (**)(char *, uint64_t))(v43 + 8);
        uint64_t v47 = (void (**)(uint64_t, char *, uint64_t))(v9 + 32);
        uint64_t v29 = (void (**)(uint64_t, uint64_t))(v9 + 8);
        while (1)
        {
          BOOL v30 = sub_10096C130();
          sub_10096C0E0();
          if (v30)
          {
            uint64_t v31 = v9;
            uint64_t v32 = v53;
            ((void (*)(char *, unint64_t, uint64_t))v49)(v53, v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, AssociatedTypeWitness);
            uint64_t v33 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_17;
            }
          }
          else
          {
            uint64_t result = sub_10096CC20();
            uint64_t v32 = v53;
            if (v42 != 8) {
              goto LABEL_23;
            }
            uint64_t v31 = v9;
            uint64_t v55 = (uint64_t (**)(void, uint64_t))result;
            ((void (*)(char *, uint64_t (***)(void, uint64_t), uint64_t))v49)(v53, &v55, AssociatedTypeWitness);
            swift_unknownObjectRelease();
            uint64_t v33 = v28 + 1;
            if (__OFADD__(v28, 1))
            {
LABEL_17:
              __break(1u);
              return swift_bridgeObjectRelease();
            }
          }
          (*v47)(v54, v32, AssociatedTypeWitness);
          uint64_t v34 = v51;
          sub_10096B0D0();
          sub_10096B080();
          double v36 = v35;
          uint64_t result = (*v46)(v34, v52);
          double v37 = v36 * 1000000000.0;
          if ((~COERCE__INT64(v36 * 1000000000.0) & 0x7FF0000000000000) == 0) {
            break;
          }
          if (v37 <= -9.22337204e18) {
            goto LABEL_21;
          }
          if (v37 >= 9.22337204e18) {
            goto LABEL_22;
          }
          uint64_t v38 = v54;
          uint64_t v39 = sub_1008AA778(v54, 0x2000000000000000, (uint64_t)v37, 0, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          (*v29)(v38, AssociatedTypeWitness);
          sub_1004D4360(v50, v39);
          swift_release();
          ++v28;
          BOOL v40 = v33 == sub_10096C1A0();
          uint64_t v9 = v31;
          if (v40) {
            return swift_bridgeObjectRelease();
          }
        }
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

BOOL sub_100876A78(uint64_t a1, uint64_t a2, int a3)
{
  if (!sub_1005152D8()) {
    return 0;
  }
  uint64_t v5 = a2 + *(int *)(type metadata accessor for SnapshotItem() + 48);
  uint64_t v6 = (int *)type metadata accessor for ItemMetadata();
  return (*(unsigned char *)(v5 + v6[20]) & 1) == 0
      && !*(unsigned char *)(v5 + v6[21])
      && (*(unsigned char *)(v5 + v6[16]) & 1) == 0
      && (*(unsigned char *)(v5 + v6[17]) & 1) == 0
      && (*(void *)&a3 & 0x10008) == 0x10000;
}

uint64_t sub_100876B40(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *a1;
  uint64_t v8 = sub_10096B0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1[5] + 368))(a2, 1);
  if (!v3 && (result & 1) != 0)
  {
    long long v13 = *(_OWORD *)(v7 + 96);
    v18[0] = *(_OWORD *)(v7 + 80);
    v18[1] = v13;
    type metadata accessor for Propagation.DeletionAcked();
    uint64_t v14 = sub_1003A9380(a2, a3[15], a3[16], a3[17]);
    (*(void (**)(void))(*a1 + 176))();
    sub_10096B0D0();
    sub_10096B080();
    double v16 = v15;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    double v17 = v16 * 1000000000.0;
    if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        if (v17 < 9.22337204e18)
        {
          sub_10059C450(v14);
          swift_release();
          return swift_release();
        }
LABEL_10:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100876D90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v60 = a2;
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = sub_10096B0E0();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  __chkstk_darwin(v5);
  BOOL v64 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[12];
  uint64_t v9 = type metadata accessor for SnapshotMutation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v63 = v10;
  __chkstk_darwin(v9);
  uint64_t v59 = &v47[-v11];
  uint64_t v61 = a1;
  uint64_t v12 = v4[11];
  uint64_t v13 = v4[13];
  uint64_t v56 = type metadata accessor for SnapshotMutation();
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = &v47[-v14];
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  uint64_t v15 = type metadata accessor for ReconciliationMutation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  uint64_t v68 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = &v47[-v17];
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  type metadata accessor for ConcreteJobResult();
  uint64_t v53 = sub_100591720();
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  uint64_t v52 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v54 = v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  uint64_t v70 = v20;
  uint64_t v71 = AssociatedConformanceWitness;
  uint64_t v72 = v22;
  uint64_t v51 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v48 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  uint64_t v24 = v57;
  v48(v18, v57, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(void *)&v18[v23] = 0;
  uint64_t v25 = v67;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v53;
  sub_100591758(v53, (uint64_t)v18);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v68 + 8);
  v68 += 8;
  uint64_t v49 = v27;
  v27(v18, v25);
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = (uint64_t)v55;
  BOOL v30 = &v55[*(int *)(v28 + 48)];
  v48(v55, v24, AssociatedTypeWitness);
  strcpy(v30, "lazily deleted");
  v30[15] = -18;
  uint64_t v31 = v56;
  swift_storeEnumTagMultiPayload();
  sub_1005917A0(v26, v29);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v29, v31);
  uint64_t v32 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v33 = v54;
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
  uint64_t v35 = v60;
  v34(v18, v60, v54);
  swift_storeEnumTagMultiPayload();
  *(void *)&v18[v32] = 2;
  uint64_t v36 = v67;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v26, (uint64_t)v18);
  v49(v18, v36);
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = (uint64_t)v59;
  uint64_t v39 = &v59[*(int *)(v37 + 48)];
  v34(v59, v35, v33);
  strcpy(v39, "lazily deleted");
  v39[15] = -18;
  uint64_t v40 = v62;
  swift_storeEnumTagMultiPayload();
  sub_1005917E8(v26, v38);
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v38, v40);
  (*(void (**)(uint64_t))(*v61 + 176))(v41);
  uint64_t v42 = v64;
  sub_10096B0D0();
  sub_10096B080();
  double v44 = v43;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v65 + 8))(v42, v66);
  double v46 = v44 * 1000000000.0;
  if ((~COERCE__INT64(v44 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v46 < 9.22337204e18)
  {
    sub_10059C6F4(v26, (uint64_t)v46);
    swift_release();
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1008774B8(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t ItemMetadata = v1;
  v1829 = v3;
  uint64_t v1782 = v4;
  uint64_t v1806 = v5;
  unint64_t v1805 = v6;
  uint64_t v8 = v7;
  v1831 = v9;
  uint64_t v1828 = v2;
  uint64_t v10 = (void *)*v7;
  LODWORD(v1825) = v11;
  v1795 = (int *)type metadata accessor for ItemMetadata();
  __chkstk_darwin(v1795);
  uint64_t v1662 = (uint64_t)&v1661 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v10[12];
  uint64_t v14 = v10[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1680 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = __chkstk_darwin(AssociatedTypeWitness);
  v1679 = (char *)&v1661 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v1682 = (char *)&v1661 - v18;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v1843 = v19;
  uint64_t v1711 = AssociatedTypeWitness;
  *((void *)&v1843 + 1) = AssociatedTypeWitness;
  uint64_t v1705 = AssociatedConformanceWitness;
  uint64_t v1706 = v21;
  *(void *)&long long v1844 = AssociatedConformanceWitness;
  *((void *)&v1844 + 1) = v21;
  v1742 = (int *)type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_10096C890();
  uint64_t v1694 = *(void *)(v22 - 8);
  uint64_t v1695 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  v1691 = (char *)&v1661 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v1690 = (char *)&v1661 - v26;
  uint64_t v1710 = v19;
  uint64_t v1678 = *(void *)(v19 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  v1675 = (char *)&v1661 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v1681 = (char *)&v1661 - v29;
  uint64_t v1932 = swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v1689 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v1723 = (char *)&v1661 - v31;
  v1839 = v8;
  uint64_t v32 = (void (*)(void, void))v10[11];
  uint64_t v33 = v10[13];
  uint64_t v34 = type metadata accessor for SnapshotItem();
  uint64_t v1721 = sub_10096C890();
  uint64_t v1696 = *(void *)(v1721 - 8);
  uint64_t v35 = __chkstk_darwin(v1721);
  v1671 = (char *)&v1661 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v1665 = (char *)&v1661 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v1672 = (char *)&v1661 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v1734 = (char *)&v1661 - v42;
  uint64_t v1733 = v34;
  v1700 = *(char **)(v34 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  v1666 = (char *)&v1661 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v43);
  v1667 = (char *)&v1661 - v46;
  __chkstk_darwin(v45);
  v1720 = (char *)&v1661 - v47;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v1766 = *(void *)(v48 - 8);
  uint64_t v49 = __chkstk_darwin(v48);
  v1701 = (char *)&v1661 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  v1664 = (char *)&v1661 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v1674 = (uint64_t)&v1661 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v1673 = (char *)&v1661 - v56;
  __chkstk_darwin(v55);
  v1738 = (char *)&v1661 - v57;
  v1743 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v1736 = *((void *)v1743 - 1);
  __chkstk_darwin(v1743);
  v1735 = (char *)&v1661 - v58;
  *(void *)&long long v1843 = v14;
  *((void *)&v1843 + 1) = v32;
  *(void *)&long long v1844 = v13;
  *((void *)&v1844 + 1) = v33;
  v1792 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v1791 = *(v1792 - 1);
  __chkstk_darwin(v1792);
  v1790 = (char *)&v1661 - v59;
  v1816 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10096B480();
  uint64_t v1815 = *((void *)v1816 - 1);
  uint64_t v60 = __chkstk_darwin(v1816);
  v1807 = (uint64_t (*)(uint64_t))((char *)&v1661 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = __chkstk_darwin(v60);
  v1804 = (char *)&v1661 - v63;
  __chkstk_darwin(v62);
  v1809 = (char *)&v1661 - v64;
  uint64_t v1768 = sub_10096C890();
  uint64_t v1764 = *(void *)(v1768 - 8);
  uint64_t v65 = __chkstk_darwin(v1768);
  v1697 = (char *)&v1661 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  v1668 = (char *)&v1661 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v1685 = (char *)&v1661 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v1687 = (char *)&v1661 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v1739 = (char *)&v1661 - v74;
  __chkstk_darwin(v73);
  v1781 = (char *)&v1661 - v75;
  *(void *)&long long v1843 = v14;
  *((void *)&v1843 + 1) = v32;
  *(void *)&long long v1844 = v13;
  *((void *)&v1844 + 1) = v33;
  uint64_t v1823 = type metadata accessor for ReconciliationMutation();
  uint64_t v1827 = *(void *)(v1823 - 8);
  uint64_t v76 = __chkstk_darwin(v1823);
  v1728 = (char *)&v1661 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __chkstk_darwin(v76);
  v1709 = (char *)&v1661 - v79;
  __chkstk_darwin(v78);
  v1822 = (char *)&v1661 - v80;
  uint64_t v1812 = type metadata accessor for SnapshotMutation();
  uint64_t v1811 = *(void *)(v1812 - 8);
  uint64_t v81 = __chkstk_darwin(v1812);
  v1810 = (char *)&v1661 - v82;
  uint64_t v1773 = v30;
  uint64_t v1703 = *(void *)(v30 - 8);
  uint64_t v1772 = v1703;
  uint64_t v83 = __chkstk_darwin(v81);
  v1704 = (char *)&v1661 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __chkstk_darwin(v83);
  v1718 = (char *)&v1661 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v1729 = (char *)&v1661 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v1719 = (char *)&v1661 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v1775 = (char *)&v1661 - v92;
  uint64_t v1833 = *(void *)(v1932 - 8);
  uint64_t v93 = __chkstk_darwin(v91);
  v1725 = (char *)&v1661 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __chkstk_darwin(v93);
  v1756 = (char *)&v1661 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  v1747 = (char *)&v1661 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  v1793 = (char *)&v1661 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  v1820 = (uint64_t (**)(uint64_t))((char *)&v1661 - v102);
  __chkstk_darwin(v101);
  v1784 = (char *)&v1661 - v103;
  uint64_t v104 = (int *)type metadata accessor for SnapshotItem();
  v1824 = (void *)sub_10096C890();
  v1821 = (char *)*(v1824 - 1);
  uint64_t v105 = __chkstk_darwin(v1824);
  v1776 = (char *)&v1661 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __chkstk_darwin(v105);
  v1797 = (char *)&v1661 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  v1802 = (void (*)(char *, char *, uint64_t))((char *)&v1661 - v110);
  uint64_t v111 = __chkstk_darwin(v109);
  v1787 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v1661 - v112);
  uint64_t v113 = __chkstk_darwin(v111);
  v1813 = (uint64_t *)((char *)&v1661 - v114);
  uint64_t v115 = __chkstk_darwin(v113);
  v1826 = (char *)&v1661 - v116;
  uint64_t v117 = __chkstk_darwin(v115);
  v1785 = (char *)&v1661 - v118;
  uint64_t v1814 = v119;
  __chkstk_darwin(v117);
  v1770 = (char *)&v1661 - v120;
  v1786 = (int *)type metadata accessor for ItemReconciliationHalf();
  v1780 = (void (**)(char *, char *, int *))*((void *)v1786 - 1);
  uint64_t v121 = __chkstk_darwin(v1786);
  v1677 = (char *)&v1661 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __chkstk_darwin(v121);
  v1676 = (char *)&v1661 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  v1745 = (char *)&v1661 - v126;
  __chkstk_darwin(v125);
  v1779 = (char *)&v1661 - v127;
  *(void *)&long long v1843 = v14;
  v1834 = v32;
  *((void *)&v1843 + 1) = v32;
  *(void *)&long long v1844 = v13;
  uint64_t v1830 = v33;
  *((void *)&v1844 + 1) = v33;
  uint64_t v128 = type metadata accessor for ItemReconciliation();
  uint64_t v1799 = sub_10096C890();
  uint64_t v1798 = *(void *)(v1799 - 8);
  uint64_t v129 = __chkstk_darwin(v1799);
  v1737 = (char *)&v1661 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __chkstk_darwin(v129);
  v1751 = (char *)&v1661 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  v1752 = (char *)&v1661 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  v1722 = (char *)&v1661 - v136;
  uint64_t v137 = __chkstk_darwin(v135);
  v1754 = (char *)&v1661 - v138;
  uint64_t v139 = __chkstk_darwin(v137);
  v1714 = (char *)&v1661 - v140;
  uint64_t v141 = __chkstk_darwin(v139);
  v1713 = (char *)&v1661 - v142;
  uint64_t v143 = __chkstk_darwin(v141);
  v1753 = (char *)&v1661 - v144;
  uint64_t v145 = __chkstk_darwin(v143);
  v1731 = (char *)&v1661 - v146;
  uint64_t v147 = __chkstk_darwin(v145);
  v1730 = (char *)&v1661 - v148;
  uint64_t v149 = __chkstk_darwin(v147);
  v1669 = (char *)&v1661 - v150;
  uint64_t v151 = __chkstk_darwin(v149);
  v1663 = (char *)&v1661 - v152;
  uint64_t v153 = __chkstk_darwin(v151);
  v1670 = (char *)&v1661 - v154;
  uint64_t v155 = __chkstk_darwin(v153);
  v1683 = (char *)&v1661 - v156;
  uint64_t v157 = __chkstk_darwin(v155);
  v1684 = (char *)&v1661 - v158;
  uint64_t v159 = __chkstk_darwin(v157);
  v1686 = (char *)&v1661 - v160;
  uint64_t v161 = __chkstk_darwin(v159);
  v1726 = (char *)&v1661 - v162;
  uint64_t v163 = __chkstk_darwin(v161);
  v1732 = (char *)&v1661 - v164;
  uint64_t v165 = __chkstk_darwin(v163);
  v1716 = (char *)&v1661 - v166;
  uint64_t v167 = __chkstk_darwin(v165);
  v1708 = (char *)&v1661 - v168;
  uint64_t v169 = __chkstk_darwin(v167);
  v1707 = (char *)&v1661 - v170;
  uint64_t v171 = __chkstk_darwin(v169);
  v1698 = (char *)&v1661 - v172;
  uint64_t v173 = __chkstk_darwin(v171);
  v1758 = (char *)&v1661 - v174;
  uint64_t v175 = __chkstk_darwin(v173);
  v1765 = (char *)&v1661 - v176;
  uint64_t v177 = __chkstk_darwin(v175);
  v1692 = (char *)&v1661 - v178;
  uint64_t v179 = __chkstk_darwin(v177);
  v1748 = (char *)&v1661 - v180;
  uint64_t v181 = __chkstk_darwin(v179);
  v1740 = (char *)&v1661 - v182;
  uint64_t v183 = __chkstk_darwin(v181);
  v1771 = (char *)&v1661 - v184;
  uint64_t v185 = __chkstk_darwin(v183);
  v1699 = (char *)&v1661 - v186;
  uint64_t v187 = __chkstk_darwin(v185);
  v1767 = (char *)&v1661 - v188;
  uint64_t v189 = __chkstk_darwin(v187);
  v1769 = (char *)&v1661 - v190;
  uint64_t v191 = __chkstk_darwin(v189);
  v1755 = (char *)&v1661 - v192;
  uint64_t v193 = __chkstk_darwin(v191);
  v1749 = (char *)&v1661 - v194;
  uint64_t v195 = __chkstk_darwin(v193);
  v1759 = (char *)&v1661 - v196;
  uint64_t v197 = __chkstk_darwin(v195);
  v1693 = (char *)&v1661 - v198;
  uint64_t v199 = __chkstk_darwin(v197);
  v1761 = (char *)&v1661 - v200;
  uint64_t v201 = __chkstk_darwin(v199);
  v1727 = (char *)&v1661 - v202;
  uint64_t v203 = __chkstk_darwin(v201);
  v1760 = (char *)&v1661 - v204;
  uint64_t v205 = __chkstk_darwin(v203);
  v1750 = (char *)&v1661 - v206;
  uint64_t v207 = __chkstk_darwin(v205);
  v1777 = (char *)&v1661 - v208;
  uint64_t v209 = __chkstk_darwin(v207);
  v1774 = (char *)&v1661 - v210;
  uint64_t v211 = __chkstk_darwin(v209);
  v1796 = (uint64_t)&v1661 - v212;
  uint64_t v213 = __chkstk_darwin(v211);
  v1801 = (uint64_t *)((char *)&v1661 - v214);
  uint64_t v215 = __chkstk_darwin(v213);
  uint64_t v1808 = (uint64_t)&v1661 - v216;
  uint64_t v217 = __chkstk_darwin(v215);
  v1778 = (void (**)(char *, uint64_t))((char *)&v1661 - v218);
  uint64_t v219 = __chkstk_darwin(v217);
  double v221 = (char *)&v1661 - v220;
  uint64_t v222 = __chkstk_darwin(v219);
  uint64_t v224 = (char *)&v1661 - v223;
  uint64_t v1803 = v128;
  uint64_t v1800 = *(void *)(v128 - 8);
  uint64_t v225 = __chkstk_darwin(v222);
  v1741 = (char *)&v1661 - ((v226 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = __chkstk_darwin(v225);
  v1746 = (char *)&v1661 - v228;
  uint64_t v229 = __chkstk_darwin(v227);
  v1724 = (char *)&v1661 - v230;
  uint64_t v231 = __chkstk_darwin(v229);
  v1715 = (char *)&v1661 - v232;
  uint64_t v233 = __chkstk_darwin(v231);
  v1702 = (char *)&v1661 - v234;
  uint64_t v235 = __chkstk_darwin(v233);
  v1717 = (char *)&v1661 - v236;
  uint64_t v237 = __chkstk_darwin(v235);
  v1688 = (char *)&v1661 - v238;
  uint64_t v239 = __chkstk_darwin(v237);
  v1762 = (char *)&v1661 - v240;
  uint64_t v241 = __chkstk_darwin(v239);
  v1763 = (char *)&v1661 - v242;
  uint64_t v243 = __chkstk_darwin(v241);
  v1788 = (void (**)(char *, uint64_t))((char *)&v1661 - v244);
  uint64_t v245 = __chkstk_darwin(v243);
  v1757 = (char *)&v1661 - v246;
  uint64_t v247 = __chkstk_darwin(v245);
  uint64_t v249 = (char *)&v1661 - v248;
  v1835 = v104;
  uint64_t v1832 = *((void *)v104 - 1);
  uint64_t v250 = __chkstk_darwin(v247);
  v1744 = (char *)&v1661 - ((v251 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = __chkstk_darwin(v250);
  v1817 = (char *)&v1661 - v253;
  uint64_t v254 = __chkstk_darwin(v252);
  uint64_t v1819 = (uint64_t)&v1661 - v255;
  uint64_t v256 = __chkstk_darwin(v254);
  v1789 = (char *)&v1661 - v257;
  uint64_t v258 = __chkstk_darwin(v256);
  v1783 = (char *)&v1661 - v259;
  __chkstk_darwin(v258);
  v1818 = (char *)&v1661 - v260;
  *(void *)&long long v1843 = v14;
  uint64_t v1837 = v14;
  *((void *)&v1843 + 1) = v14;
  *(void *)&long long v1844 = v13;
  uint64_t v1836 = v13;
  *((void *)&v1844 + 1) = v13;
  uint64_t v261 = type metadata accessor for ItemChange();
  __chkstk_darwin(v261);
  uint64_t v263 = (uint64_t *)((char *)&v1661 - v262);
  uint64_t v265 = v1839[3];
  uint64_t v264 = (void **)v1839[4];
  (*(void (**)(char *, uint64_t, uint64_t))(v266 + 16))((char *)&v1661 - v262, v1828, v261);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      v1794 = v264;
      uint64_t v1828 = v48;
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v1661 - 32, "  isRecursive reason ");
      uint64_t v304 = v1932;
      *(void *)&long long v1843 = v1932;
      Swift::String v305 = v1824;
      *((void *)&v1843 + 1) = v1824;
      *(void *)&long long v1844 = &type metadata for Bool;
      *((void *)&v1844 + 1) = &type metadata for String;
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      Swift::String v307 = (char *)v263 + *(int *)(TupleTypeMetadata + 48);
      int v308 = *((unsigned __int8 *)v263 + *(int *)(TupleTypeMetadata + 64));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t (**)(uint64_t), uint64_t *, uint64_t))(v1833 + 32))(v1820, v263, v304);
      uint64_t v309 = v1821;
      uint64_t v310 = (uint64_t)(v1821 + 32);
      uint64_t v311 = v1826;
      uint64_t v1812 = *((void *)v1821 + 4);
      ((void (*)(char *, char *, void *))v1812)(v1826, v307, v305);
      v1818 = (char *)(v310 - 16);
      uint64_t v1661 = v265;
      LODWORD(v1784) = v308;
      v1796 = v310;
      if (v308 == 1)
      {
        sub_1006A75AC();
        uint64_t v312 = (unsigned int (*)(void, void, void))v1813;
        v1817 = (char *)*((void *)v309 + 2);
        ((void (*)(uint64_t *, char *, void *))v1817)(v1813, v311, v305);
        unint64_t v313 = v309[80];
        uint64_t v314 = (v313 + 48) & ~v313;
        v1793 = (char *)v313;
        uint64_t v315 = (void *)swift_allocObject();
        uint64_t v316 = v1834;
        v315[2] = v1837;
        v315[3] = v316;
        uint64_t v317 = v1830;
        v315[4] = v1836;
        v315[5] = v317;
        ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1812)((char *)v315 + v314, v312, v305);
        uint64_t v318 = sub_10096B470();
        int v319 = sub_10096C5A0();
        uint64_t v320 = swift_allocObject();
        *(unsigned char *)(v320 + 16) = 32;
        uint64_t v321 = swift_allocObject();
        *(unsigned char *)(v321 + 16) = 8;
        uint64_t v322 = swift_allocObject();
        *(void *)(v322 + 16) = sub_1008AAA9C;
        *(void *)(v322 + 24) = v315;
        uint64_t v323 = swift_allocObject();
        *(void *)(v323 + 16) = sub_100121318;
        *(void *)(v323 + 24) = v322;
        sub_10002B7CC(&qword_100ACD798);
        uint64_t v324 = swift_allocObject();
        sub_10038FCB0(v324, 3);
        *uint64_t v325 = sub_10012133C;
        v325[1] = v320;
        v325[2] = sub_10012133C;
        v325[3] = v321;
        v325[4] = sub_100121338;
        v325[5] = v323;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v1819) = v319;
        if (!os_log_type_enabled(v318, (os_log_type_t)v319))
        {

          swift_release();
          swift_release();
          swift_release();
          uint64_t v331 = *(char **)(v1815 + 8);
          uint64_t v332 = v1809;
LABEL_29:
          v1785 = v331;
          ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v331)(v332, v1816);
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          uint64_t v1819 = type metadata accessor for JobResult();
          uint64_t v375 = v1932;
          uint64_t v376 = swift_getAssociatedConformanceWitness();
          uint64_t v377 = v1828;
          uint64_t v378 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1843 = v375;
          *((void *)&v1843 + 1) = v377;
          *(void *)&long long v1844 = v376;
          *((void *)&v1844 + 1) = v378;
          type metadata accessor for ReconciliationID();
          uint64_t v379 = type metadata accessor for ReconciliationSideMutation();
          v1810 = (char *)swift_getTupleTypeMetadata2();
          uint64_t v380 = (uint64_t)v1822;
          v381 = &v1822[*((int *)v1810 + 12)];
          uint64_t v1811 = *(void *)(v1833 + 16);
          ((void (*)(char *, void, uint64_t))v1811)(v1822, v1831, v375);
          swift_storeEnumTagMultiPayload();
          char *v381 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v382 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v380);
          v1809 = *(char **)(v1827 + 8);
          uint64_t v383 = ((uint64_t (*)(uint64_t, uint64_t))v1809)(v380, v382);
          uint64_t v384 = (*(uint64_t (**)(uint64_t))(*v1839 + 152))(v383);
          if (sub_1006A7344(0x4000, v384))
          {
            uint64_t v385 = v1827;
            uint64_t v386 = v1837;
            if (v1825 == 4 || !sub_1005152D8())
            {
              v361 = v1834;
LABEL_38:
              *(void *)&long long v1843 = v386;
              *((void *)&v1843 + 1) = v361;
              *(void *)&long long v1844 = v1836;
              *((void *)&v1844 + 1) = v1830;
              uint64_t v1819 = type metadata accessor for JobResult();
              uint64_t v393 = v1932;
              uint64_t v394 = swift_getAssociatedConformanceWitness();
              uint64_t v395 = v1828;
              uint64_t v396 = swift_getAssociatedConformanceWitness();
              *(void *)&long long v1843 = v393;
              *((void *)&v1843 + 1) = v395;
              *(void *)&long long v1844 = v394;
              *((void *)&v1844 + 1) = v396;
              uint64_t v397 = type metadata accessor for ReconciliationID();
              uint64_t v398 = type metadata accessor for ReconciliationSideMutation();
              v1810 = (char *)swift_getTupleTypeMetadata2();
              uint64_t v399 = (uint64_t)v1822;
              v400 = &v1822[*((int *)v1810 + 12)];
              v401 = (char *)(v1833 + 16);
              v402 = *(uint64_t **)(v1833 + 16);
              ((void (*)(char *, void, uint64_t))v402)(v1822, v1831, v393);
              swift_storeEnumTagMultiPayload();
              char *v400 = 0;
              uint64_t v1828 = v398;
              swift_storeEnumTagMultiPayload();
              uint64_t v403 = v1823;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v1829, v399);
              v404 = *(uint8_t **)(v385 + 8);
              uint64_t v1827 = v385 + 8;
              uint64_t v1811 = (uint64_t)v404;
              ((void (*)(uint64_t, uint64_t))v404)(v399, v403);
              BOOL v405 = sub_1005152D8();
              v406 = v1839;
              if (v405)
              {
                v407 = (void *)(v399 + *((int *)v1810 + 12));
                ((void (*)(uint64_t, void, uint64_t))v402)(v399, v1831, v1932);
                uint64_t v408 = swift_storeEnumTagMultiPayload();
                void *v407 = (*(uint64_t (**)(uint64_t))(*v406 + 272))(v408);
                uint64_t v409 = v1823;
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                sub_100591758((uint64_t)v1829, v399);
                ((void (*)(uint64_t, uint64_t))v1811)(v399, v409);
              }
              v1801 = v402;
              v1809 = v401;
              v1804 = (char *)v397;
              uint64_t v410 = ItemMetadata;
              uint64_t v411 = v1661;
              uint64_t v412 = v1808;
              if (v1825 == 4)
              {
                v413 = v1835;
                uint64_t v414 = v1832;
                v415 = v1824;
                v416 = v1807;
                v417 = v1834;
LABEL_42:
                uint64_t v418 = (uint64_t)v1802;
                ((void (*)(void, char *, void *))v1817)(v1802, v1826, v415);
                v1825 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v414 + 48);
                if (v1825(v418, 1, v413) == 1)
                {
                  (*((void (**)(uint64_t, void *))v1821 + 1))(v418, v415);
                }
                else
                {
                  uint64_t WitnessTable = swift_getWitnessTable();
                  int v420 = FileItem.kind.getter((uint64_t)v413, WitnessTable);
                  (*(void (**)(uint64_t, int *))(v414 + 8))(v418, v413);
                  if (v420 == 1)
                  {
                    *(void *)&long long v1843 = v1837;
                    *((void *)&v1843 + 1) = v417;
                    *(void *)&long long v1844 = v1836;
                    *((void *)&v1844 + 1) = v1830;
                    type metadata accessor for Ingestion.ReSnapshotChildren();
                    uint64_t v421 = sub_1008AA69C((uint64_t)v1820, v1805, v1806, 8, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
                    v422 = v1829;
                    sub_1004D4360((uint64_t)v1829, v421);
                    swift_release();
                    v423 = v1810;
                    uint64_t v424 = (uint64_t)v1822;
                    v425 = &v1822[*((int *)v1810 + 12)];
                    v426 = (void (*)(uint64_t, void, uint64_t))v1801;
                    ((void (*)(char *, void, uint64_t))v1801)(v1822, v1831, v1932);
                    swift_storeEnumTagMultiPayload();
                    char *v425 = (char)v1784;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v427 = v1823;
                    swift_storeEnumTagMultiPayload();
                    sub_100591758((uint64_t)v422, v424);
                    v428 = (uint8_t *)v1811;
                    ((void (*)(uint64_t, uint64_t))v1811)(v424, v427);
                    v429 = (unsigned char *)(v424 + *((int *)v423 + 12));
                    uint64_t v430 = v1932;
                    v426(v424, v1831, v1932);
                    swift_storeEnumTagMultiPayload();
                    unsigned char *v429 = 1;
                    swift_storeEnumTagMultiPayload();
                    swift_storeEnumTagMultiPayload();
                    v431 = v1829;
                    sub_100591758((uint64_t)v1829, v424);
                    ((void (*)(uint64_t, uint64_t))v428)(v424, v427);
                    *(void *)&long long v1843 = v1837;
                    *((void *)&v1843 + 1) = v1834;
                    *(void *)&long long v1844 = v1836;
                    *((void *)&v1844 + 1) = v1830;
                    type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
                    swift_allocObject();
                    uint64_t v432 = (uint64_t)v1820;
                    sub_100610B30((uint64_t)v1820, v1805, v1806, 8);
                    uint64_t v433 = sub_10058364C(8);
                    swift_retain();
                    swift_release();
                    sub_1004D4360((uint64_t)v431, v433);
                    swift_release();
                    (*((void (**)(char *, void *))v1821 + 1))(v1826, v1824);
                    (*(void (**)(uint64_t, uint64_t))(v1833 + 8))(v432, v430);
                    goto LABEL_11;
                  }
                }
                sub_1006A75AC();
                v434 = (unsigned int (*)(void, void, void))v1813;
                ((void (*)(uint64_t *, char *, void *))v1817)(v1813, v1826, v415);
                unint64_t v435 = (v1793 + 48) & ~(unint64_t)v1793;
                v436 = (void *)swift_allocObject();
                v436[2] = v1837;
                v436[3] = v417;
                uint64_t v437 = v1830;
                v436[4] = v1836;
                v436[5] = v437;
                ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1812)((char *)v436 + v435, v434, v415);
                v438 = sub_10096B470();
                LODWORD(v435) = sub_10096C5A0();
                uint64_t v439 = swift_allocObject();
                *(unsigned char *)(v439 + 16) = 32;
                uint64_t v440 = swift_allocObject();
                *(unsigned char *)(v440 + 16) = 8;
                uint64_t v441 = swift_allocObject();
                *(void *)(v441 + 16) = sub_1008AAAC4;
                *(void *)(v441 + 24) = v436;
                v442 = v416;
                uint64_t v443 = swift_allocObject();
                *(void *)(v443 + 16) = sub_100121318;
                *(void *)(v443 + 24) = v441;
                sub_10002B7CC(&qword_100ACD798);
                uint64_t v444 = swift_allocObject();
                sub_10038FCB0(v444, 3);
                void *v445 = sub_10012133C;
                v445[1] = v439;
                v445[2] = sub_10012133C;
                v445[3] = v440;
                v445[4] = sub_100121338;
                v445[5] = v443;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                LODWORD(v1837) = v435;
                if (!os_log_type_enabled(v438, (os_log_type_t)v435))
                {

                  swift_release();
                  swift_release();
                  swift_release();
                  ((void (*)(uint64_t (*)(void), uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1785)(v442, v1816);
                  v450 = v1835;
                  v449 = v1831;
LABEL_53:
                  uint64_t v451 = (uint64_t)v1822;
                  v452 = (unint64_t *)&v1822[*((int *)v1810 + 12)];
                  v453 = v449;
                  v454 = (void (*)(void, void))v1801;
                  ((void (*)(char *, void, uint64_t))v1801)(v1822, v453, v1932);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v455 = v1806;
                  unint64_t *v452 = v1805;
                  v452[1] = v455;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v456 = v1823;
                  swift_storeEnumTagMultiPayload();
                  sub_100591758((uint64_t)v1829, v451);
                  ((void (*)(uint64_t, uint64_t))v1811)(v451, v456);
                  v457 = v1797;
                  v458 = v1826;
                  v459 = v1824;
                  ((void (*)(char *, char *, void *))v1817)(v1797, v1826, v1824);
                  if (v1825((uint64_t)v457, 1, v450) == 1)
                  {
                    v460 = (void (*)(char *, void *))*((void *)v1821 + 1);
                    v460(v458, v459);
                    (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1833 + 8))(v1820, v1932);
                    v460(v457, v459);
                  }
                  else
                  {
                    v461 = v1789;
                    (*(void (**)(void))(v1832 + 32))();
                    uint64_t v462 = swift_getTupleTypeMetadata2();
                    v463 = v1790;
                    v464 = &v1790[*(int *)(v462 + 48)];
                    uint64_t v465 = v1932;
                    v454(v1790, v1831);
                    swift_storeEnumTagMultiPayload();
                    ((void (*)(char *, char *, uint64_t))v454)(v464, &v461[v450[9]], v465);
                    swift_storeEnumTagMultiPayload();
                    v466 = v1792;
                    swift_storeEnumTagMultiPayload();
                    (*(void (**)(char *))(*v1839 + 312))(v463);
                    (*(void (**)(char *, void *))(v1791 + 8))(v463, v466);
                    (*(void (**)(char *, int *))(v1832 + 8))(v461, v450);
                    (*((void (**)(char *, void *))v1821 + 1))(v1826, v1824);
                    (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1833 + 8))(v1820, v465);
                  }
                  goto LABEL_11;
                }
                v446 = (uint8_t *)sub_100719B90();
                uint64_t v447 = swift_slowAlloc();
                v1841[0] = 0;
                v1840[0] = v447;
                *(_WORD *)v446 = 258;
                v1842[0] = (uint64_t)(v446 + 2);
                *(void *)&long long v1843 = sub_10012133C;
                *((void *)&v1843 + 1) = v439;
                uint64_t v448 = ItemMetadata;
                sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
                if (!v448)
                {
                  swift_release();
                  *(void *)&long long v1843 = sub_10012133C;
                  *((void *)&v1843 + 1) = v440;
                  sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
                  swift_release();
                  *(void *)&long long v1843 = sub_100121338;
                  *((void *)&v1843 + 1) = v443;
                  sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
                  uint64_t ItemMetadata = 0;
                  v449 = v1831;
                  swift_release();
                  _os_log_impl((void *)&_mh_execute_header, 0, (os_log_type_t)v1837, "Mark reconciliation as needs delete because %s", v446, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  sub_100719B98();

                  ((void (*)(uint64_t (*)(uint64_t), uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1785)(v1807, v1816);
                  v450 = v1835;
                  goto LABEL_53;
                }
LABEL_726:
                swift_errorRelease();
                __break(1u);
                JUMPOUT(0x100885DE4);
              }
              sub_1000DEDD8((uint64_t)v1831, v1808);
              v413 = v1835;
              v417 = v1834;
              if (v410)
              {
                (*((void (**)(char *, void *))v1821 + 1))(v1826, v1824);
LABEL_46:
                (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1833 + 8))(v1820, v1932);
                return v284 & 1;
              }
              uint64_t ItemMetadata = 0;
              uint64_t v468 = v1800;
              uint64_t v469 = v1803;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1800 + 48))(v412, 1, v1803) == 1)
              {
                (*(void (**)(uint64_t, uint64_t))(v1798 + 8))(v412, v1799);
                uint64_t v414 = v1832;
                v415 = v1824;
                v416 = v1807;
                goto LABEL_42;
              }
              v474 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v468 + 32);
              v475 = v1788;
              v474(v1788, v412, v469);
              if (sub_100827AAC(v469) || *((unsigned char *)v475 + v1786[16] + 16) != 2)
              {
                uint64_t v478 = ItemMetadata;
                v415 = v1824;
                v416 = v1807;
              }
              else
              {
                uint64_t v476 = ItemMetadata;
                uint64_t v477 = (*(uint64_t (**)(void (*)(void, void, void)))(*(void *)v411 + 256))(v1831);
                uint64_t v478 = v476;
                if (v476)
                {
                  (*(void (**)(void, uint64_t))(v1800 + 8))(v1788, v1803);
                  (*((void (**)(char *, void *))v1821 + 1))(v1826, v1824);
                  goto LABEL_46;
                }
                v415 = v1824;
                v416 = v1807;
                if (v477)
                {
                  *(void *)&long long v1843 = v1837;
                  *((void *)&v1843 + 1) = v417;
                  *(void *)&long long v1844 = v1836;
                  *((void *)&v1844 + 1) = v1830;
                  type metadata accessor for Propagation.CreateItem();
                  uint64_t v710 = swift_dynamicCastClass();
                  if (v710)
                  {
                    uint64_t v711 = *(void *)(v710 + 96);
                    uint64_t v712 = *(void *)(v710 + 104);
                    char v713 = *(unsigned char *)(v710 + 112);
                    if (sub_1008B05E0(v711, v712, v713) || sub_1008B05AC(v711, v712, v713))
                    {
                      swift_release();
                    }
                    else
                    {
                      uint64_t v871 = sub_100610C18();
                      swift_retain();
                      v872 = v1829;
                      sub_1004D7588((uint64_t)v1829, v871);
                      swift_release();
                      uint64_t v873 = (uint64_t)v1822;
                      v874 = &v1822[*((int *)v1810 + 12)];
                      ((void (*)(char *, void, uint64_t))v1801)(v1822, v1831, v1932);
                      swift_storeEnumTagMultiPayload();
                      *(_OWORD *)v874 = xmmword_10097B210;
                      v874[16] = 4;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v875 = v1823;
                      swift_storeEnumTagMultiPayload();
                      sub_100591758((uint64_t)v872, v873);
                      swift_release();
                      ((void (*)(uint64_t, uint64_t))v1811)(v873, v875);
                    }
                    v413 = v1835;
                    v406 = v1839;
                    v417 = v1834;
                  }
                  else
                  {
                    swift_release();
                    v413 = v1835;
                  }
                }
                else
                {
                  v413 = v1835;
                }
              }
              uint64_t v482 = (*(uint64_t (**)(void))(*v406 + 152))();
              if (sub_1006A7344(0x4000, v482) && !sub_1005152D8())
              {
                v605 = v1788;
                char v606 = sub_10086F3CC((uint64_t)v1788, v406);
                if (v478)
                {
                  (*(void (**)(void, uint64_t))(v1800 + 8))(v605, v1803);
                  (*((void (**)(char *, void *))v1821 + 1))(v1826, v415);
                  goto LABEL_46;
                }
                char v714 = v606;
                (*(void (**)(void, uint64_t))(v1800 + 8))(v605, v1803);
                if (v714)
                {
                  (*((void (**)(char *, void *))v1821 + 1))(v1826, v415);
                  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1833 + 8))(v1820, v1932);
                  char v284 = 1;
                  return v284 & 1;
                }
                uint64_t ItemMetadata = 0;
              }
              else
              {
                uint64_t ItemMetadata = v478;
                (*(void (**)(void, uint64_t))(v1800 + 8))(v1788, v1803);
              }
              uint64_t v414 = v1832;
              goto LABEL_42;
            }
            v1804 = (char *)v379;
            v387 = (char *)v1787;
            v388 = v1824;
            ((void (*)(unsigned int (**)(char *, uint64_t, uint64_t), char *, void *))v1817)(v1787, v1826, v1824);
            uint64_t v389 = v1832;
            v390 = v1835;
            int v391 = (*(uint64_t (**)(char *, uint64_t, int *))(v1832 + 48))(v387, 1, v1835);
            v392 = v1821;
            if (v391 == 1)
            {
              (*((void (**)(char *, void *))v1821 + 1))(v387, v388);
              goto LABEL_34;
            }
            v483 = v1783;
            (*(void (**)(char *, char *, int *))(v389 + 32))(v1783, v387, v390);
            v484 = &v483[v390[12]];
            if (v484[v1795[16]] == 1 && (v484[v1795[15]] & 1) != 0)
            {
              uint64_t v485 = v1832;
              uint64_t v486 = v1827;
LABEL_219:
              (*(void (**)(char *, int *))(v485 + 8))(v483, v1835);
LABEL_220:
              v361 = v1834;
              uint64_t v385 = v486;
              goto LABEL_36;
            }
            v489 = v1778;
            uint64_t v490 = ItemMetadata;
            sub_1000DEDD8((uint64_t)v1831, (uint64_t)v1778);
            uint64_t ItemMetadata = v490;
            uint64_t v491 = v1833;
            if (v490)
            {
              (*(void (**)(char *, int *))(v1832 + 8))(v483, v1835);
              (*((void (**)(char *, void *))v392 + 1))(v1826, v1824);
              (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v491 + 8))(v1820, v1932);
              return v284 & 1;
            }
            uint64_t v607 = v1800;
            uint64_t v608 = v1803;
            int v609 = (*(uint64_t (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v1800 + 48))(v489, 1, v1803);
            v610 = v1824;
            if (v609 == 1)
            {
              (*(void (**)(void, uint64_t))(v1798 + 8))(v489, v1799);
              uint64_t v486 = v1827;
            }
            else
            {
              v703 = v1757;
              (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v607 + 32))(v1757, v489, v608);
              BOOL v704 = sub_1006A0450(16, *(void *)&v703[v1786[9]]);
              uint64_t v705 = v608;
              BOOL v706 = v704;
              v707 = v703;
              v610 = v1824;
              (*(void (**)(char *, uint64_t))(v607 + 8))(v707, v705);
              uint64_t v486 = v1827;
              if (v706)
              {
LABEL_218:
                uint64_t v485 = v1832;
                v483 = v1783;
                goto LABEL_219;
              }
            }
            uint64_t v708 = ItemMetadata;
            char v709 = ((uint64_t (*)(void (*)(void, void, void)))(*v1794)[58])(v1831);
            if (v708)
            {
              (*(void (**)(char *, int *))(v1832 + 8))(v1783, v1835);
              (*((void (**)(char *, void *))v1821 + 1))(v1826, v610);
              (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v491 + 8))(v1820, v1932);
              return v284 & 1;
            }
            uint64_t ItemMetadata = 0;
            if ((v709 & 1) == 0)
            {
              uint64_t v756 = (uint64_t)v1822;
              v757 = &v1822[*((int *)v1810 + 12)];
              ((void (*)(char *, void, uint64_t))v1811)(v1822, v1831, v1932);
              swift_storeEnumTagMultiPayload();
              char *v757 = 1;
              swift_storeEnumTagMultiPayload();
              uint64_t v758 = v1823;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v1829, v756);
              ((void (*)(uint64_t, uint64_t))v1809)(v756, v758);
              (*(void (**)(char *, int *))(v1832 + 8))(v1783, v1835);
              goto LABEL_220;
            }
            goto LABEL_218;
          }
LABEL_34:
          uint64_t v385 = v1827;
          v361 = v1834;
LABEL_36:
          uint64_t v386 = v1837;
          goto LABEL_38;
        }
        uint64_t v326 = v318;
        uint64_t v327 = (uint8_t *)sub_100719B90();
        uint64_t v328 = swift_slowAlloc();
        v1841[0] = 0;
        v1840[0] = v328;
        uint64_t v1811 = (uint64_t)v327;
        *(_WORD *)uint64_t v327 = 258;
        v1842[0] = (uint64_t)(v327 + 2);
        *(void *)&long long v1843 = sub_10012133C;
        *((void *)&v1843 + 1) = v320;
        uint64_t v329 = ItemMetadata;
        sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
        if (!v329)
        {
          swift_release();
          *(void *)&long long v1843 = sub_10012133C;
          *((void *)&v1843 + 1) = v321;
          sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
          swift_release();
          *(void *)&long long v1843 = sub_100121338;
          *((void *)&v1843 + 1) = v323;
          sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
          uint64_t ItemMetadata = 0;
          uint64_t v330 = v1809;
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v326, (os_log_type_t)v1819, "Recursive delete of %s", (uint8_t *)v1811, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_100719B98();

          uint64_t v331 = *(char **)(v1815 + 8);
          uint64_t v332 = v330;
          goto LABEL_29;
        }
LABEL_725:
        swift_errorRelease();
        __break(1u);
        swift_errorRelease();
        __break(1u);
        goto LABEL_726;
      }
      v356 = v1804;
      sub_1006A75AC();
      v357 = (unsigned int (*)(void, void, void))v1813;
      v1817 = (char *)*((void *)v309 + 2);
      ((void (*)(uint64_t *, char *, void *))v1817)(v1813, v311, v305);
      unint64_t v358 = v309[80];
      uint64_t v359 = (v358 + 48) & ~v358;
      v1793 = (char *)v358;
      v360 = (void *)swift_allocObject();
      v361 = v1834;
      v360[2] = v1837;
      v360[3] = v361;
      uint64_t v362 = v1830;
      v360[4] = v1836;
      v360[5] = v362;
      ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1812)((char *)v360 + v359, v357, v305);
      v363 = v356;
      v364 = sub_10096B470();
      int v365 = sub_10096C5A0();
      uint64_t v366 = swift_allocObject();
      *(unsigned char *)(v366 + 16) = 32;
      uint64_t v367 = swift_allocObject();
      *(unsigned char *)(v367 + 16) = 8;
      uint64_t v368 = swift_allocObject();
      *(void *)(v368 + 16) = sub_1008AAA9C;
      *(void *)(v368 + 24) = v360;
      uint64_t v369 = swift_allocObject();
      *(void *)(v369 + 16) = sub_10010DB94;
      *(void *)(v369 + 24) = v368;
      sub_10002B7CC(&qword_100ACD798);
      uint64_t v370 = swift_allocObject();
      sub_10038FCB0(v370, 3);
      void *v371 = sub_10010DB7C;
      v371[1] = v366;
      v371[2] = sub_10012133C;
      v371[3] = v367;
      v371[4] = sub_10010DB9C;
      v371[5] = v369;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v364, (os_log_type_t)v365))
      {

        swift_release();
        swift_release();
        swift_release();
        v1785 = *(char **)(v1815 + 8);
        ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1785)(v363, v1816);
        uint64_t v385 = v1827;
        goto LABEL_36;
      }
      LODWORD(v1819) = v365;
      v372 = (uint8_t *)sub_100719B90();
      uint64_t v373 = swift_slowAlloc();
      v1841[0] = 0;
      v1840[0] = v373;
      *(_WORD *)v372 = 258;
      v1842[0] = (uint64_t)(v372 + 2);
      *(void *)&long long v1843 = sub_10010DB7C;
      *((void *)&v1843 + 1) = v366;
      uint64_t v374 = ItemMetadata;
      sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
      if (!v374)
      {
        swift_release();
        *(void *)&long long v1843 = sub_10012133C;
        *((void *)&v1843 + 1) = v367;
        sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
        swift_release();
        *(void *)&long long v1843 = sub_10010DB9C;
        *((void *)&v1843 + 1) = v369;
        sub_100719BB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1843, (uint64_t)v1842, (uint64_t)v1841, (uint64_t)v1840);
        uint64_t ItemMetadata = 0;
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v364, (os_log_type_t)v1819, "Delete of %s", v372, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_100719B98();

        v1785 = *(char **)(v1815 + 8);
        ((void (*)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1785)(v1804, v1816);
        goto LABEL_34;
      }
      goto LABEL_724;
    case 2:
      uint64_t v1661 = v265;
      uint64_t v1828 = v48;
      uint64_t v285 = v1835;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      LODWORD(v1819) = *((unsigned __int8 *)v263 + *(int *)(TupleTypeMetadata3 + 48));
      uint64_t v287 = (char **)((char *)v263 + *(int *)(TupleTypeMetadata3 + 64));
      uint64_t v289 = *v287;
      uint64_t v288 = v287[1];
      v1817 = v289;
      v1826 = v288;
      uint64_t v290 = v1832;
      uint64_t v291 = v1818;
      (*(void (**)(char *, uint64_t *, int *))(v1832 + 32))(v1818, v263, v285);
      uint64_t v292 = v1932;
      uint64_t v293 = swift_getAssociatedConformanceWitness();
      uint64_t v294 = *(uint64_t (**)(uint64_t))(v293 + 64);
      uint64_t v295 = v292;
      uint64_t v296 = v291;
      v1820 = (uint64_t (**)(uint64_t))v293;
      if ((v294(v295) & 1) != 0 || (v1820[9](v1932)) && !sub_1005152D8() && v1825 != 4)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, int *))(v290 + 8))(v291, v1835);
        goto LABEL_11;
      }
      uint64_t v333 = (*(uint64_t (**)(void))(*v1839 + 152))();
      BOOL v334 = sub_1006A7344(0x4000, v333);
      uint64_t v335 = ItemMetadata;
      if (v334)
      {
        uint64_t v336 = v1835;
        if (v1825 != 4)
        {
          sub_1000DEDD8((uint64_t)v1831, (uint64_t)v224);
          if (v335)
          {
LABEL_62:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, int *))(v1832 + 8))(v296, v336);
            return v284 & 1;
          }
          uint64_t v337 = v1800;
          uint64_t v338 = v1803;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1800 + 48))(v224, 1, v1803) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1798 + 8))(v224, v1799);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v337 + 32))(v249, v224, v338);
            char v487 = sub_10086F3CC((uint64_t)v249, v1839);
            uint64_t v488 = v338;
            char v588 = v487;
            (*(void (**)(char *, uint64_t))(v337 + 8))(v249, v488);
            if (v588)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v1832 + 8))(v1818, v336);
              char v284 = 1;
              return v284 & 1;
            }
          }
          uint64_t v335 = 0;
          uint64_t v296 = v1818;
        }
      }
      else
      {
        uint64_t v336 = v1835;
      }
      v1794 = v264;
      BOOL v470 = sub_1005152D8();
      v471 = v1839;
      int v472 = (int)v1825;
      if (!v470) {
        goto LABEL_85;
      }
      v473 = v221;
      sub_1000DEDD8((uint64_t)&v296[v336[9]], (uint64_t)v221);
      if (v335) {
        goto LABEL_62;
      }
      uint64_t ItemMetadata = 0;
      uint64_t v479 = v1800;
      uint64_t v480 = v1803;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1800 + 48))(v221, 1, v1803) == 1)
      {
        (*(void (**)(char *, uint64_t))(v1798 + 8))(v221, v1799);
        LODWORD(v1815) = 0;
        uint64_t v335 = ItemMetadata;
        uint64_t v296 = v1818;
      }
      else
      {
        v492 = v471;
        v493 = v1780;
        v494 = v1779;
        v495 = v473;
        v496 = v473;
        v497 = v1786;
        v1780[2](v1779, v495, v1786);
        (*(void (**)(char *, uint64_t))(v479 + 8))(v496, v480);
        uint64_t v498 = *(void *)&v494[v497[9]];
        ((void (*)(char *, int *))v493[1])(v494, v497);
        if (sub_1006A0450(16, v498))
        {
          uint64_t v335 = ItemMetadata;
          uint64_t v336 = v1835;
          v471 = v492;
          if (v472 == 3)
          {
            LODWORD(v1815) = 1;
            uint64_t v296 = v1818;
          }
          else
          {
            uint64_t v296 = v1818;
            if (v472 != 4)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v1832 + 8))(v296, v336);
LABEL_156:
              char v284 = 0;
              return v284 & 1;
            }
LABEL_85:
            LODWORD(v1815) = 0;
          }
        }
        else
        {
          LODWORD(v1815) = 0;
          uint64_t v335 = ItemMetadata;
          uint64_t v296 = v1818;
          uint64_t v336 = v1835;
          v471 = v492;
        }
      }
      v499 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_getWitnessTable();
      char v500 = FileItem.kind.getter((uint64_t)v336, (uint64_t)v499);
      BOOL v501 = sub_10025C338(v500, 1);
      v1816 = v499;
      if (!v501) {
        goto LABEL_98;
      }
      if (v472 == 3)
      {
        if ((v1815 & 1) == 0 && (v296[v336[12] + v1795[20]] & 1) == 0)
        {
          v502 = v1770;
          ((void (*)(char *, uint64_t))(*v1794)[30])(&v296[v336[9]], 1);
          if (v335) {
            goto LABEL_62;
          }
          uint64_t v503 = v1832;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v1832 + 48))(v502, 1, v336) == 1)
          {
            (*((void (**)(char *, void *))v1821 + 1))(v502, v1824);
LABEL_225:
            int v514 = 0;
            goto LABEL_140;
          }
          char v737 = FileItem.isDataless.getter((uint64_t)v336, (uint64_t)v499);
          (*(void (**)(char *, int *))(v503 + 8))(v502, v336);
          if ((v737 & 1) == 0) {
            goto LABEL_225;
          }
          uint64_t v738 = v1837;
          *(void *)&long long v1843 = v1837;
          v739 = v1834;
          *((void *)&v1843 + 1) = v1834;
          uint64_t v740 = v1836;
          *(void *)&long long v1844 = v1836;
          uint64_t v741 = v1830;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for JobResult();
          *(void *)&long long v1843 = v738;
          *((void *)&v1843 + 1) = v739;
          *(void *)&long long v1844 = v740;
          *((void *)&v1844 + 1) = v741;
          type metadata accessor for Ingestion.FaultDirectoryInTree();
          uint64_t v742 = sub_1003A9384((uint64_t)v1831, v1805, v1806, 0x10000);
          v515 = v1829;
          sub_1004D4360((uint64_t)v1829, v742);
          swift_release();
          int v514 = 0;
          v513 = v1839;
LABEL_101:
          if (sub_1005152D8())
          {
            v516 = v1835;
          }
          else
          {
            sub_10002B7CC((uint64_t *)&unk_100AD6FD0);
            uint64_t v517 = swift_allocObject();
            v518._uint64_t countAndFlagsBits = sub_10038FCB0(v517, 2);
            *(_OWORD *)v518._object = xmmword_100984990;
            uint64_t countAndFlagsBits = Filename.init(rawValue:)(v518).rawValue._countAndFlagsBits;
            uint64_t v520 = sub_1006F2F28(countAndFlagsBits);
            swift_bridgeObjectRelease();
            *(void *)&long long v1843 = v520;
            uint64_t v521 = v1832;
            uint64_t v522 = (uint64_t)v1785;
            v516 = v1835;
            (*(void (**)(char *, uint64_t, uint64_t, int *))(v1832 + 56))(v1785, 1, 1, v1835);
            sub_10086D7F4(v522, (uint64_t)v296, (char *)&v1843, (void **)v513, (uint64_t)v515, 1);
            if (v335)
            {
              swift_bridgeObjectRelease();
              (*((void (**)(uint64_t, void *))v1821 + 1))(v522, v1824);
              (*(void (**)(char *, int *))(v521 + 8))(v296, v516);
              return v284 & 1;
            }
            (*((void (**)(uint64_t, void *))v1821 + 1))(v522, v1824);
          }
          sub_1003B0264((uint64_t)v296, (uint64_t)v513, v515);
          if (v335)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, int *))(v1832 + 8))(v296, v516);
            return v284 & 1;
          }
          LODWORD(v1814) = v514;
          uint64_t ItemMetadata = 0;
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          v529 = (char *)type metadata accessor for JobResult();
          uint64_t v530 = swift_getTupleTypeMetadata2();
          uint64_t v531 = (uint64_t)v1810;
          v532 = &v1810[*(int *)(v530 + 48)];
          (*(void (**)(char *, char *, int *))(v1832 + 16))(v1810, v296, v516);
          v533 = v1826;
          *(void *)v532 = v1817;
          *((void *)v532 + 1) = v533;
          uint64_t v534 = v1812;
          swift_storeEnumTagMultiPayload();
          sub_1005917A0((uint64_t)v1829, v531);
          (*(void (**)(uint64_t, uint64_t))(v1811 + 8))(v531, v534);
          uint64_t v535 = v1828;
          uint64_t v536 = swift_getAssociatedConformanceWitness();
          v537 = v296;
          uint64_t v538 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v535;
          *(void *)&long long v1844 = v1820;
          *((void *)&v1844 + 1) = v536;
          v539 = (void (*)(void, void, void))type metadata accessor for ReconciliationID();
          uint64_t v540 = *(int *)(swift_getTupleTypeMetadata2() + 48);
          v541 = v1822;
          v542 = v537;
          uint64_t v543 = v538;
          v544 = v1829;
          v1826 = *(char **)(v1833 + 16);
          uint64_t v545 = v1833 + 16;
          ((void (*)(char *, char *, uint64_t))v1826)(v1822, v542, v543);
          v1831 = v539;
          swift_storeEnumTagMultiPayload();
          v541[v540] = FileItem.kind.getter((uint64_t)v516, (uint64_t)v1816);
          uint64_t v546 = (uint64_t)v541;
          uint64_t v547 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v544, v546);
          v548 = *(void **)(v1827 + 8);
          v1827 += 8;
          v1824 = v548;
          ((void (*)(uint64_t, uint64_t))v548)(v546, v547);
          if (sub_1005152D8())
          {
            type metadata accessor for ReconciliationSideMutation();
            v549 = &v1822[*(int *)(swift_getTupleTypeMetadata2() + 48)];
            ((void (*)(char *, char *, uint64_t))v1826)(v1822, v1818, v1932);
            uint64_t v550 = swift_storeEnumTagMultiPayload();
            *(void *)v549 = (*(uint64_t (**)(uint64_t))(*v1839 + 272))(v550);
            uint64_t v551 = v1823;
            uint64_t v552 = (uint64_t)v1822;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v544, v552);
            ((void (*)(uint64_t, uint64_t))v1824)(v552, v551);
          }
          v1817 = v529;
          v1842[0] = *Fields.all.unsafeMutableAddressor();
          int v553 = (int)v1825;
          int v554 = v1819;
          if (v1825 == 3) {
            int v554 = 0;
          }
          v555 = v1781;
          if (v554 == 1) {
            sub_10064EC78(&v1843, 0x80000000000);
          }
          uint64_t v556 = v1795[35];
          v1821 = &v1818[v1835[12]];
          uint64_t v557 = ItemMetadata;
          uint64_t v558 = v1830;
          if (v1821[v556] == 1) {
            sub_10064EC78(&v1843, 0x8000);
          }
          v559 = (void (*)(char *))v1818;
          char v560 = FileItem.kind.getter((uint64_t)v1835, (uint64_t)v1816);
          if (FileItemKind.hasContent.getter(v560))
          {
            uint64_t v1833 = v545;
          }
          else
          {
            (*(void (**)(void (*)(void, void)))(*(void *)v1839[2] + 160))((void (*)(void, void))v559);
            if (v557) {
              goto LABEL_142;
            }
            int v693 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1766 + 48))(v555, 1, v1828);
            (*(void (**)(char *, uint64_t))(v1764 + 8))(v555, v1768);
            uint64_t ItemMetadata = 0;
            uint64_t v1833 = v545;
            if (v693 != 1) {
              sub_1008D2D38(8);
            }
          }
          uint64_t v561 = type metadata accessor for ReconciliationSideMutation();
          v1820 = (uint64_t (**)(uint64_t))swift_getTupleTypeMetadata2();
          uint64_t v562 = (uint64_t)v1822;
          v563 = &v1822[*((int *)v1820 + 12)];
          ((void (*)(char *, char *, uint64_t))v1826)(v1822, v1818, v1932);
          swift_storeEnumTagMultiPayload();
          unint64_t v564 = v1805;
          *(void *)v563 = v1842[0];
          *((void *)v563 + 1) = v564;
          *((void *)v563 + 2) = v1806;
          uint64_t v1828 = v561;
          swift_storeEnumTagMultiPayload();
          uint64_t v565 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v562);
          v566 = (void (*)(uint64_t, uint64_t))v1824;
          ((void (*)(uint64_t, uint64_t))v1824)(v562, v565);
          unsigned int v567 = v553 - 3;
          if (v553 == 3 && ((v1815 | v1821[v1795[16]]) & 1) == 0)
          {
            uint64_t v694 = (uint64_t)v1822;
            v695 = &v1822[*((int *)v1820 + 12)];
            v696 = v1818;
            ((void (*)(char *, char *, uint64_t))v1826)(v1822, v1818, v1932);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)v695 = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v697 = v1823;
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v1829, v694);
            v566(v694, v697);
            if (v1821[v1795[20]] == 1)
            {
              uint64_t v698 = (uint64_t)v1822;
              ((void (*)(char *, char *, uint64_t))v1826)(v1822, v696, v1932);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v699 = v1823;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v1829, v698);
              v566(v698, v699);
            }
            char v700 = FileItem.kind.getter((uint64_t)v1835, (uint64_t)v1816);
            BOOL v701 = sub_1006B3ED8(v700);
            uint64_t v579 = ItemMetadata;
            v581 = v1829;
            uint64_t v580 = v1823;
            uint64_t v577 = (uint64_t)v1822;
            if (v701 || !sub_1005152D8()) {
              goto LABEL_135;
            }
            v702 = (unsigned char *)(v577 + *((int *)v1820 + 12));
            ((void (*)(uint64_t, char *, uint64_t))v1826)(v577, v1818, v1932);
            swift_storeEnumTagMultiPayload();
            unsigned char *v702 = 2;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (sub_1005152D8()
              || (char v568 = FileItem.kind.getter((uint64_t)v1835, (uint64_t)v1816),
                  !FileItemKind.supportsMaterialization.getter(v568)))
            {
              uint64_t v569 = (uint64_t)v1822;
              v570 = &v1822[*((int *)v1820 + 12)];
              ((void (*)(char *, char *, uint64_t))v1826)(v1822, v1818, v1932);
              swift_storeEnumTagMultiPayload();
              char *v570 = 2;
              swift_storeEnumTagMultiPayload();
              uint64_t v571 = v1823;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v1829, v569);
              v566(v569, v571);
            }
            if (v567 >= 2
              && sub_1005152D8()
              && (FileItem.isDataless.getter((uint64_t)v1835, (uint64_t)v1816) & 1) != 0
              && (char v572 = FileItem.kind.getter((uint64_t)v1835, (uint64_t)v1816), FileItemKind.hasContent.getter(v572))
              || v1815 && (FileItem.isDataless.getter((uint64_t)v1835, (uint64_t)v1816) & 1) != 0)
            {
              *(void *)&long long v1843 = v1837;
              *((void *)&v1843 + 1) = v1834;
              *(void *)&long long v1844 = v1836;
              *((void *)&v1844 + 1) = v558;
              uint64_t v573 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
              uint64_t v574 = sub_100437D58(v573);
              uint64_t v576 = sub_1008AAA34((uint64_t)v1818, v574, v575, 0x10000000);
              sub_1004D4360((uint64_t)v1829, v576);
              swift_release();
            }
            uint64_t v577 = (uint64_t)v1822;
            v578 = &v1822[*((int *)v1820 + 12)];
            ((void (*)(char *, char *, uint64_t))v1826)(v1822, v1818, v1932);
            swift_storeEnumTagMultiPayload();
            char *v578 = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v579 = ItemMetadata;
          }
          uint64_t v580 = v1823;
          swift_storeEnumTagMultiPayload();
          v581 = v1829;
          sub_100591758((uint64_t)v1829, v577);
          v566(v577, v580);
LABEL_135:
          v582 = (unsigned char *)(v577 + *((int *)v1820 + 12));
          v583 = (void (*)(char *))v1818;
          ((void (*)(uint64_t, char *, uint64_t))v1826)(v577, v1818, v1932);
          swift_storeEnumTagMultiPayload();
          unsigned char *v582 = v1821[v1795[16]];
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          v584 = (void (*)(uint64_t, uint64_t))v1824;
          sub_100591758((uint64_t)v581, v577);
          v584(v577, v580);
          if (!v1814)
          {
            v559 = v583;
            goto LABEL_146;
          }
          sub_1008764AC(v583, v1839, (uint64_t)v581);
          v559 = v583;
          if (!v579)
          {
LABEL_146:
            if (sub_1006A7344(1, v1782) && !sub_1005152D8())
            {
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v589 = swift_getTupleTypeMetadata2();
              uint64_t v590 = (uint64_t)v1822;
              v591 = &v1822[*(int *)(v589 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1826)(v1822, v559, v1932);
              swift_storeEnumTagMultiPayload();
              *(_WORD *)v591 = 515;
              uint64_t v592 = v1806;
              *((void *)v591 + 1) = v1805;
              *((void *)v591 + 2) = v592;
              uint64_t v580 = v1823;
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v581, v590);
              ((void (*)(uint64_t, uint64_t))v1824)(v590, v580);
            }
            if (static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1821[v1795[22]], 2))
            {
              uint64_t v593 = swift_getTupleTypeMetadata3();
              uint64_t v594 = *(int *)(v593 + 48);
              uint64_t v595 = *(int *)(v593 + 64);
              uint64_t v596 = (uint64_t)v1822;
              ((void (*)(char *, void (*)(char *), uint64_t))v1826)(v1822, v559, v1932);
              swift_storeEnumTagMultiPayload();
              *(void *)(v596 + v594) = 2;
              v597 = sub_100325498(0);
              uint64_t v598 = sub_1006F2F28((uint64_t)v597);
              swift_bridgeObjectRelease();
              *(void *)(v596 + v595) = v598;
              uint64_t v580 = v1823;
              v581 = v1829;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v581, v596);
              ((void (*)(uint64_t, uint64_t))v1824)(v596, v580);
            }
            if (v1821[v1795[23]] == 1)
            {
              uint64_t v599 = swift_getTupleTypeMetadata2();
              uint64_t v600 = (uint64_t)v1822;
              v601 = &v1822[*(int *)(v599 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1826)(v1822, v559, v1932);
              swift_storeEnumTagMultiPayload();
              *(void *)v601 = 4;
              v601[8] = 0;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v581, v600);
              ((void (*)(uint64_t, uint64_t))v1824)(v600, v580);
            }
            if (v1821[v1795[24]] == 1)
            {
              uint64_t v602 = swift_getTupleTypeMetadata2();
              uint64_t v603 = (uint64_t)v1822;
              v604 = &v1822[*(int *)(v602 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1826)(v1822, v559, v1932);
              swift_storeEnumTagMultiPayload();
              *(void *)v604 = 8;
              v604[8] = 0;
              swift_storeEnumTagMultiPayload();
              sub_100591758((uint64_t)v581, v603);
              ((void (*)(uint64_t, uint64_t))v1824)(v603, v580);
            }
            (*(void (**)(void (*)(char *), int *))(v1832 + 8))(v559, v1835);
            goto LABEL_156;
          }
LABEL_142:
          (*(void (**)(void (*)(char *), int *))(v1832 + 8))(v559, v1835);
          return v284 & 1;
        }
      }
      else
      {
        if (sub_1005152D8())
        {
          if (v472 == 4) {
            goto LABEL_99;
          }
          uint64_t ItemMetadata = sub_100732960(v1805, 0x2000000000000000uLL);
          sub_10002B7CC(&qword_100ADA2F0);
          uint64_t v504 = swift_allocObject();
          v505._uint64_t countAndFlagsBits = sub_10038FCB0(v504, 2);
          *(void *)v505._object = v1782;
          *((void *)v505._object + 1) = 4;
          uint64_t v506 = Filename.init(rawValue:)(v505).rawValue._countAndFlagsBits;
          uint64_t v507 = sub_1006F2F28(v506);
          swift_bridgeObjectRelease();
          v1842[0] = v507;
          if (v296[v1835[12] + v1795[15]] == 1)
          {
            sub_10064F8A4(&v1843, 0x1000000000);
            uint64_t v507 = v1842[0];
          }
          uint64_t v508 = v1837;
          *(void *)&long long v1843 = v1837;
          v509 = v1834;
          *((void *)&v1843 + 1) = v1834;
          uint64_t v510 = v1836;
          *(void *)&long long v1844 = v1836;
          uint64_t v511 = v1830;
          *((void *)&v1844 + 1) = v1830;
          uint64_t v1814 = type metadata accessor for JobResult();
          *(void *)&long long v1843 = v508;
          *((void *)&v1843 + 1) = v509;
          *(void *)&long long v1844 = v510;
          *((void *)&v1844 + 1) = v511;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          uint64_t v512 = sub_1008AA778((uint64_t)v1831, ItemMetadata, v1806, v507, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_1004D4360((uint64_t)v1829, v512);
          swift_release();
          uint64_t v336 = v1835;
          v471 = v1839;
          int v472 = (int)v1825;
        }
LABEL_98:
        if (!v472)
        {
          char v523 = FileItem.kind.getter((uint64_t)v336, (uint64_t)v499);
          if (!sub_10025C338(v523, 0))
          {
            int v514 = 1;
LABEL_140:
            v513 = v1839;
            goto LABEL_100;
          }
          v524 = *(void (**)(char *, int *, void *))(*v1794[2] + 512);
          swift_retain();
          v525 = v1775;
          v524(v296, v336, v499);
          swift_release();
          uint64_t v526 = v1833;
          uint64_t v527 = v1932;
          int v528 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1833 + 48))(v525, 1, v1932);
          v515 = v1829;
          if (v528 == 1)
          {
            (*(void (**)(char *, uint64_t))(v1772 + 8))(v525, v1773);
            int v514 = 1;
            v513 = v1839;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v526 + 32))(v1784, v525, v527);
            *(void *)&long long v1843 = v1837;
            *((void *)&v1843 + 1) = v1834;
            *(void *)&long long v1844 = v1836;
            uint64_t v611 = v1830;
            *((void *)&v1844 + 1) = v1830;
            uint64_t v612 = type metadata accessor for ItemJob();
            uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
            sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
            swift_allocObject();
            uint64_t v614 = sub_10096C0D0();
            *(void *)&long long v1843 = v1837;
            *((void *)&v1843 + 1) = v1834;
            *(void *)&long long v1844 = v1836;
            *((void *)&v1844 + 1) = v611;
            uint64_t *v615 = type metadata accessor for Ingestion.TrackTemporaryItem();
            uint64_t v616 = sub_1003FC080(v614);
            uint64_t v617 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1661 + 272))(v1784, v616);
            if (v335)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v526 + 8))(v1784, v1932);
              (*(void (**)(char *, int *))(v1832 + 8))(v296, v1835);
              return v284 & 1;
            }
            uint64_t v715 = v617;
            swift_bridgeObjectRelease();
            uint64_t v716 = sub_10096C1A0();
            v717 = v1784;
            uint64_t v718 = v715;
            if (v716)
            {
              uint64_t v719 = 0;
              uint64_t ItemMetadata = 0;
              while (1)
              {
                v720 = sub_10010D86C(&v1843, v719, v718, v612);
                uint64_t v722 = *v721;
                swift_retain();
                ((void (*)(long long *, void))v720)(&v1843, 0);
                uint64_t v723 = v719 + 1;
                if (__OFADD__(v719, 1)) {
                  break;
                }
                if (*(unsigned __int8 *)(v722 + 112) <= 1u)
                {
                  *(void *)&long long v1843 = v1837;
                  *((void *)&v1843 + 1) = v1834;
                  *(void *)&long long v1844 = v1836;
                  *((void *)&v1844 + 1) = v1830;
                  type metadata accessor for JobResult();
                  uint64_t v724 = v612;
                  uint64_t v725 = v718;
                  uint64_t v726 = sub_100610C18();
                  swift_retain();
                  uint64_t v335 = ItemMetadata;
                  sub_1004D4360((uint64_t)v1829, v726);
                  uint64_t v718 = v725;
                  uint64_t v612 = v724;
                  v717 = v1784;
                  swift_release();
                }
                swift_release();
                ++v719;
                if (v723 == sub_10096C1A0()) {
                  goto LABEL_210;
                }
              }
              __break(1u);
              goto LABEL_448;
            }
LABEL_210:
            v513 = v1839;
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v1833 + 8))(v717, v1932);
            int v514 = 1;
            v515 = v1829;
            uint64_t v296 = v1818;
          }
          goto LABEL_101;
        }
      }
LABEL_99:
      v513 = v471;
      int v514 = 0;
LABEL_100:
      v515 = v1829;
      goto LABEL_101;
    case 3:
      uint64_t v297 = *v263;
      uint64_t v298 = v263[1];
      *(void *)&long long v1843 = v1837;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v1830;
      type metadata accessor for JobResult();
      uint64_t v299 = v1932;
      uint64_t v300 = swift_getTupleTypeMetadata2();
      uint64_t v301 = (uint64_t)v1810;
      Swift::String v302 = &v1810[*(int *)(v300 + 48)];
      (*(void (**)(char *, void, uint64_t))(v1833 + 16))(v1810, v1831, v299);
      *(void *)Swift::String v302 = v297;
      *((void *)v302 + 1) = v298;
      uint64_t v303 = v1812;
      swift_storeEnumTagMultiPayload();
      sub_1005917A0((uint64_t)v1829, v301);
      (*(void (**)(uint64_t, uint64_t))(v1811 + 8))(v301, v303);
      goto LABEL_11;
    default:
      uint64_t v1661 = v265;
      v1794 = v264;
      uint64_t v1828 = v48;
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v1661 - 48, "oldItem newItem diffs reason ");
      uint64_t v268 = v1835;
      *(void *)&long long v1843 = v1835;
      *((void *)&v1843 + 1) = v1835;
      *(void *)&long long v1844 = &type metadata for Fields;
      *((void *)&v1844 + 1) = &type metadata for String;
      uint64_t v269 = (int *)swift_getTupleTypeMetadata();
      uint64_t v270 = (char *)v263 + v269[12];
      uint64_t v271 = *(uint64_t *)((char *)v263 + v269[16]);
      unint64_t v272 = (char **)((char *)v263 + v269[20]);
      uint64_t v273 = (uint64_t)v272[1];
      v1826 = *v272;
      unint64_t v274 = *(void (**)(uint64_t, uint64_t *, int *))(v1832 + 32);
      uint64_t v275 = v1819;
      v274(v1819, v263, v268);
      v276 = v1817;
      v274((uint64_t)v1817, (uint64_t *)v270, v268);
      uint64_t v277 = v276;
      uint64_t v1860 = v271;
      uint64_t v278 = swift_getWitnessTable();
      LOBYTE(v274) = FileItem.kind.getter((uint64_t)v268, v278);
      char v279 = FileItem.kind.getter((uint64_t)v268, v278);
      if ((sub_1006B3EE8(v279, (char)v274) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (v1825 != 4)
        {
          *(void *)&long long v1843 = 0;
          *((void *)&v1843 + 1) = 0xE000000000000000;
          sub_10096CBD0(45);
          v1933._object = (void *)0x80000001009A59E0;
          v1933._uint64_t countAndFlagsBits = 0x1000000000000025;
          sub_10096D280(v1933);
          swift_getWitnessTable();
          sub_10096D270();
          v1934._uint64_t countAndFlagsBits = 544175136;
          v1934._object = (void *)0xE400000000000000;
          sub_10096D280(v1934);
          sub_10096D270();
          v1935._uint64_t countAndFlagsBits = 0;
          v1935._object = (void *)0xE000000000000000;
          sub_10096D280(v1935);
          uint64_t v339 = v1829;
          (*(void (**)(void, void))(*v1829 + 168))(v1843, *((void *)&v1843 + 1));
          swift_bridgeObjectRelease();
          uint64_t v340 = v1837;
          *(void *)&long long v1843 = v1837;
          uint64_t v341 = v1834;
          *((void *)&v1843 + 1) = v1834;
          uint64_t v342 = v1836;
          *(void *)&long long v1844 = v1836;
          uint64_t v343 = v1830;
          *((void *)&v1844 + 1) = v1830;
          v1839 = (uint64_t *)type metadata accessor for JobResult();
          *(void *)&long long v1843 = v340;
          *((void *)&v1843 + 1) = v341;
          *(void *)&long long v1844 = v342;
          *((void *)&v1844 + 1) = v343;
          uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v344 = v1833;
          uint64_t v345 = (uint64_t)v1793;
          uint64_t v346 = v1932;
          (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1793, v277, v1932);
          uint64_t v347 = sub_100437D5C();
          uint64_t v349 = v348;
          v350 = sub_10032548C(0);
          uint64_t v351 = sub_1006F2F28((uint64_t)v350);
          swift_bridgeObjectRelease();
          uint64_t v352 = v351;
          uint64_t v275 = v1819;
          uint64_t v353 = sub_1008AA778(v345, v347, v349, v352, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          uint64_t v277 = v1817;
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v345, v346);
          sub_1004D4360((uint64_t)v339, v353);
          swift_release();
        }
        type metadata accessor for FileTreeError();
        swift_getWitnessTable();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        v354 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v355 = v1835;
        v354(v275, v1835);
        v354((uint64_t)v277, v355);
        return v284 & 1;
      }
      v1820 = (uint64_t (**)(uint64_t))v273;
      unint64_t v280 = (uint64_t *)v1839[2];
      uint64_t v281 = &v277[v268[9]];
      uint64_t v282 = ItemMetadata;
      sub_1000DEDD8((uint64_t)v281, (uint64_t)v1801);
      if (v282)
      {
        swift_bridgeObjectRelease();
        uint64_t v283 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v283(v1819, v268);
        v283((uint64_t)v277, v268);
        return v284 & 1;
      }
      v1818 = v281;
      uint64_t v467 = v1796;
      sub_1000DEDD8((uint64_t)v277, v1796);
      v1813 = v280;
      if (sub_1005152D8())
      {
        uint64_t v1815 = v278;
        uint64_t v481 = v1803;
      }
      else
      {
        uint64_t v585 = v1832;
        uint64_t v586 = (uint64_t)v1776;
        v587 = v1835;
        (*(void (**)(char *, uint64_t, int *))(v1832 + 16))(v1776, v1819, v1835);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v585 + 56))(v586, 0, 1, v587);
        sub_10086D7F4(v586, (uint64_t)v1817, (char *)&v1860, (void **)v1839, (uint64_t)v1829, 1);
        uint64_t v481 = v1803;
        uint64_t v1815 = v278;
        (*((void (**)(uint64_t, void *))v1821 + 1))(v586, v1824);
        uint64_t v467 = v1796;
      }
      v619 = (char *)(v1800 + 48);
      v1816 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1800 + 48);
      uint64_t v620 = v1816(v467, 1, v481);
      int v621 = (int)v1825;
      v1821 = v619;
      uint64_t ItemMetadata = 0;
      if (v620 == 1)
      {
        if ((v1825 - 3) >= 2
          && sub_1005152D8()
          && (FileItem.isDataless.getter((uint64_t)v1835, v1815) & 1) != 0)
        {
          char v622 = FileItem.kind.getter((uint64_t)v1835, v1815);
          if (FileItemKind.hasContent.getter(v622))
          {
            swift_bridgeObjectRelease();
            uint64_t v623 = v1837;
            *(void *)&long long v1843 = v1837;
            v624 = v1834;
            *((void *)&v1843 + 1) = v1834;
            uint64_t v625 = v1836;
            *(void *)&long long v1844 = v1836;
            uint64_t v626 = v1830;
            *((void *)&v1844 + 1) = v1830;
            type metadata accessor for JobResult();
            v627 = v1835;
            *(void *)&long long v1843 = v623;
            *((void *)&v1843 + 1) = v624;
            *(void *)&long long v1844 = v625;
            *((void *)&v1844 + 1) = v626;
            uint64_t v628 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
            uint64_t v629 = sub_100437D58(v628);
            v630 = v1817;
            uint64_t v632 = sub_1008AAA34((uint64_t)v1817, v629, v631, 0x10000000);
            sub_1004D4360((uint64_t)v1829, v632);
            swift_release();
            v633 = *(void (**)(uint64_t, int *))(v1832 + 8);
            v634 = v627;
            v633(v1819, v627);
            v635 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
            uint64_t v636 = v1799;
            v635(v1796, v1799);
            v635((uint64_t)v1801, v636);
            v633((uint64_t)v630, v634);
            char v284 = 0;
            return v284 & 1;
          }
        }
        *(void *)&long long v1843 = v1837;
        *((void *)&v1843 + 1) = v1834;
        *(void *)&long long v1844 = v1836;
        *((void *)&v1844 + 1) = v1830;
        uint64_t v637 = type metadata accessor for JobResult();
        uint64_t v638 = v1932;
        uint64_t v639 = swift_getAssociatedConformanceWitness();
        uint64_t v640 = v1828;
        uint64_t v641 = swift_getAssociatedConformanceWitness();
        *(void *)&long long v1843 = v638;
        uint64_t v642 = v638;
        *((void *)&v1843 + 1) = v640;
        v1809 = (char *)v637;
        *(void *)&long long v1844 = v639;
        *((void *)&v1844 + 1) = v641;
        uint64_t v643 = type metadata accessor for ReconciliationID();
        uint64_t v644 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        v645 = (uint64_t (*)(void))(v1833 + 16);
        v1824 = *(void **)(v1833 + 16);
        uint64_t v646 = (uint64_t)v1822;
        v647 = v1817;
        ((void (*)(char *, char *, uint64_t))v1824)(v1822, v1817, v642);
        swift_storeEnumTagMultiPayload();
        *(unsigned char *)(v646 + v644) = FileItem.kind.getter((uint64_t)v1835, v1815);
        uint64_t v648 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v646);
        uint64_t v1814 = *(void *)(v1827 + 8);
        ((void (*)(uint64_t, uint64_t))v1814)(v646, v648);
        uint64_t v649 = type metadata accessor for ReconciliationSideMutation();
        v1802 = (void (*)(char *, char *, uint64_t))swift_getTupleTypeMetadata2();
        v650 = (uint64_t *)(v646 + *((int *)v1802 + 12));
        v651 = v647;
        v652 = v1829;
        v1807 = v645;
        ((void (*)(uint64_t, char *, uint64_t))v1824)(v646, v651, v1932);
        uint64_t v1808 = v643;
        swift_storeEnumTagMultiPayload();
        uint64_t v653 = *Fields.all.unsafeMutableAddressor();
        uint64_t v654 = sub_100437D5C();
        uint64_t *v650 = v653;
        v650[1] = v654;
        v650[2] = v655;
        v1804 = (char *)v649;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v652, v646);
        uint64_t v656 = v648;
        uint64_t v657 = (uint64_t)v1802;
        ((void (*)(uint64_t, uint64_t))v1814)(v646, v656);
        if (sub_1005152D8())
        {
          uint64_t v658 = (uint64_t)v1822;
          v659 = &v1822[*(int *)(v657 + 48)];
          ((void (*)(char *, char *, uint64_t))v1824)(v1822, v1817, v1932);
          uint64_t v660 = swift_storeEnumTagMultiPayload();
          *(void *)v659 = (*(uint64_t (**)(uint64_t))(*v1839 + 272))(v660);
          swift_storeEnumTagMultiPayload();
          uint64_t v661 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v652, v658);
          ((void (*)(uint64_t, uint64_t))v1814)(v658, v661);
        }
        BOOL v662 = sub_1005152D8();
        int v621 = (int)v1825;
        uint64_t v467 = v1796;
        if (v662
          || (char v663 = FileItem.kind.getter((uint64_t)v1835, v1815),
              uint64_t v620 = FileItemKind.supportsMaterialization.getter(v663),
              (v620 & 1) == 0))
        {
          uint64_t v664 = *(int *)(v657 + 48);
          uint64_t v665 = (uint64_t)v1822;
          v666 = &v1822[v664];
          ((void (*)(char *, char *, uint64_t))v1824)(v1822, v1817, v1932);
          swift_storeEnumTagMultiPayload();
          char *v666 = 2;
          swift_storeEnumTagMultiPayload();
          uint64_t v667 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v665);
          uint64_t v668 = v667;
          int v621 = (int)v1825;
          uint64_t v620 = ((uint64_t (*)(uint64_t, uint64_t))v1814)(v665, v668);
        }
      }
      v669 = v1839;
      v670 = *(uint64_t (**)(uint64_t))(*v1839 + 152);
      v1809 = (char *)(*v1839 + 152);
      uint64_t v671 = v670(v620);
      if (!sub_1006A7344(0x4000, v671)) {
        goto LABEL_179;
      }
      uint64_t v672 = v1798;
      v673 = v1774;
      uint64_t v674 = v467;
      uint64_t v675 = v1799;
      (*(void (**)(char *, uint64_t, uint64_t))(v1798 + 16))(v1774, v674, v1799);
      uint64_t v676 = v1803;
      if (v1816((uint64_t)v673, 1, v1803) == 1)
      {
        (*(void (**)(char *, uint64_t))(v672 + 8))(v673, v675);
LABEL_179:
        v677 = v1817;
      }
      else
      {
        v690 = v670;
        uint64_t v691 = v1800;
        uint64_t v692 = (uint64_t)v1763;
        (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1763, v673, v676);
        if (v621 == 4)
        {
          (*(void (**)(uint64_t, uint64_t))(v691 + 8))(v692, v676);
        }
        else
        {
          uint64_t v727 = ItemMetadata;
          char v728 = sub_10086F3CC(v692, v669);
          if (v727)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v692, v1803);
            v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
            v730 = v1835;
            v729(v1819, v1835);
            uint64_t v731 = v675;
            v732 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
            v732(v1796, v731);
LABEL_646:
            v732((uint64_t)v1801, v731);
            v1467 = (void (*)(char *))v1817;
            goto LABEL_647;
          }
          char v759 = v728;
          (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v692, v1803);
          v760 = (void (*)(void, void, void))v1801;
          v761 = v1835;
          if (v759)
          {
            swift_bridgeObjectRelease();
            v762 = *(void (**)(uint64_t, int *))(v1832 + 8);
            v762(v1819, v761);
            v763 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
            uint64_t v764 = v1799;
            v763(v1796, v1799);
            v763((uint64_t)v760, v764);
            v762((uint64_t)v1817, v761);
            char v284 = 1;
            return v284 & 1;
          }
          uint64_t ItemMetadata = 0;
        }
        v670 = v690;
        v677 = v1817;
      }
      uint64_t v1814 = swift_getAssociatedConformanceWitness();
      uint64_t v1808 = *(void *)(*(void *)(v1814 + 32) + 8);
      char v678 = sub_10096BBE0();
      v679 = v1777;
      if ((v678 & 1) != 0 || !sub_1006A7344(2, v1860)) {
        goto LABEL_242;
      }
      v1807 = v670;
      v680 = (void (*)(void, void, void))v1801;
      int v681 = v1816((uint64_t)v1801, 1, v1803);
      uint64_t v682 = v1798;
      v683 = (char *)(v1798 + 16);
      v684 = *(void (**)(char *, void, uint64_t))(v1798 + 16);
      uint64_t v685 = v1799;
      v684(v679, (char *)v680, v1799);
      if (v681 == 1)
      {
        v686 = *(void (**)(char *, uint64_t))(v682 + 8);
        v686(v679, v685);
        v687 = v1760;
        v684(v1760, (char *)v680, v685);
        v688 = (void (*)(char *, char *, uint64_t))v684;
        v689 = v686;
        v686(v687, v685);
LABEL_234:
        v755 = v1761;
        v688(v1761, (char *)v680, v685);
        v670 = v1807;
        goto LABEL_235;
      }
      v1824 = v684;
      v1804 = v683;
      v733 = *(void (**)(char *, char *, uint64_t))(v682 + 32);
      v734 = v679;
      v735 = v1750;
      v733(v1750, v734, v685);
      if (v1816((uint64_t)v735, 1, v1803) == 1)
      {
        v689 = *(void (**)(char *, uint64_t))(v682 + 8);
        v689(v735, v685);
        v736 = v1760;
        v680 = (void (*)(void, void, void))v1801;
        v688 = (void (*)(char *, char *, uint64_t))v1824;
        ((void (*)(char *, uint64_t *, uint64_t))v1824)(v1760, v1801, v685);
        v689(v736, v685);
        goto LABEL_234;
      }
      v1802 = v733;
      v743 = v1780;
      v744 = v1780[2];
      v745 = v1779;
      v746 = v1786;
      v744(v1779, v735, v1786);
      v747 = *(void **)(v1800 + 8);
      v1797 = (char *)(v1800 + 8);
      v1792 = v747;
      ((void (*)(char *, uint64_t))v747)(v735, v1803);
      v748 = v743 + 1;
      v749 = (char *)v743[1];
      LOBYTE(v743) = v745[v746[13]];
      uint64_t v1791 = (uint64_t)v748;
      v1790 = v749;
      ((void (*)(char *, int *))v749)(v745, v746);
      LOBYTE(v743) = static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)((char)v743, 2);
      v750 = v1760;
      ((void (*)(char *, uint64_t *, uint64_t))v1824)(v1760, v1801, v685);
      if ((v743 & 1) == 0)
      {
        v689 = *(void (**)(char *, uint64_t))(v1798 + 8);
        v680 = (void (*)(void, void, void))v1801;
        v688 = (void (*)(char *, char *, uint64_t))v1824;
        v689(v750, v685);
        goto LABEL_234;
      }
      v1789 = (char *)v744;
      v751 = v1727;
      v1802(v1727, v750, v685);
      uint64_t v752 = v1803;
      int v753 = v1816((uint64_t)v751, 1, v1803);
      v670 = v1807;
      if (v753 == 1)
      {
        v754 = v751;
        v689 = *(void (**)(char *, uint64_t))(v1798 + 8);
        v689(v754, v685);
        v755 = v1761;
        v688 = (void (*)(char *, char *, uint64_t))v1824;
        ((void (*)(char *, uint64_t *, uint64_t))v1824)(v1761, v1801, v685);
LABEL_235:
        v765 = v1759;
        v689(v755, v685);
LABEL_236:
        BOOL v766 = sub_1005152D8();
        uint64_t v767 = v1799;
        v688(v765, (char *)v1796, v1799);
        if (v766)
        {
          v689(v765, v767);
LABEL_241:
          uint64_t v771 = v1837;
          *(void *)&long long v1843 = v1837;
          v772 = v1834;
          *((void *)&v1843 + 1) = v1834;
          uint64_t v773 = v1836;
          *(void *)&long long v1844 = v1836;
          uint64_t v774 = v1830;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for JobResult();
          *(void *)&long long v1843 = v771;
          v677 = v1817;
          *((void *)&v1843 + 1) = v772;
          *(void *)&long long v1844 = v773;
          *((void *)&v1844 + 1) = v774;
          type metadata accessor for Materialization.MaterializeParentHierarchy();
          uint64_t v775 = sub_1003A9380(v1818, v1805, v1806, v1782);
          sub_1004D4360((uint64_t)v1829, v775);
          swift_release();
          goto LABEL_242;
        }
        v768 = v1749;
        v688(v1749, v765, v767);
        uint64_t v769 = v1803;
        if (v1816((uint64_t)v768, 1, v1803) == 1)
        {
          v689(v765, v767);
          v689(v768, v767);
          v677 = v1817;
          goto LABEL_242;
        }
        BOOL v770 = sub_100827AAC(v769);
        v689(v765, v767);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v768, v769);
        v677 = v1817;
        if (v770) {
          goto LABEL_241;
        }
        goto LABEL_242;
      }
      v876 = &v751[*(int *)(v752 + 52)];
      uint64_t v877 = v1736;
      v878 = v751;
      v879 = v1735;
      v880 = v1743;
      (*(void (**)(char *, char *, int *))(v1736 + 16))(v1735, v876, v1743);
      ((void (*)(char *, uint64_t))v1792)(v878, v752);
      v881 = *(void (**)(char *, int *))(v877 + 8);
      LOBYTE(v877) = v879[v880[13]];
      v881(v879, v880);
      LOBYTE(v877) = static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v877, 2);
      v755 = v1761;
      v688 = (void (*)(char *, char *, uint64_t))v1824;
      ((void (*)(char *, uint64_t *, uint64_t))v1824)(v1761, v1801, v685);
      if ((v877 & 1) == 0)
      {
        v689 = *(void (**)(char *, uint64_t))(v1798 + 8);
        uint64_t v685 = v1799;
        goto LABEL_235;
      }
      v882 = v688;
      v883 = v1693;
      uint64_t v884 = v1799;
      v882(v1693, v755, v1799);
      v885 = v755;
      if (v1816((uint64_t)v883, 1, v1803) == 1)
      {
        v886 = *(void (**)(char *, uint64_t))(v1798 + 8);
        v886(v755, v884);
        v886(v883, v884);
        v677 = v1817;
        v670 = v1807;
        goto LABEL_242;
      }
      v992 = v1779;
      v993 = v1786;
      ((void (*)(char *, char *, int *))v1789)(v1779, v883, v1786);
      ((void (*)(char *, uint64_t))v1792)(v883, v1803);
      uint64_t v994 = *(void *)&v992[v993[9]];
      ((void (*)(char *, int *))v1790)(v992, v993);
      LOBYTE(v994) = sub_1006A0450(16, v994);
      v995 = v885;
      v689 = *(void (**)(char *, uint64_t))(v1798 + 8);
      v689(v995, v884);
      v677 = v1817;
      v670 = v1807;
      v765 = v1759;
      v688 = (void (*)(char *, char *, uint64_t))v1824;
      if (v994) {
        goto LABEL_236;
      }
LABEL_242:
      uint64_t v776 = v1819;
      v777 = v1829;
      uint64_t v778 = ItemMetadata;
      sub_1003B0370(v1819, (uint64_t)v677, &v1860, (uint64_t)v1839, v1829);
      if (v778)
      {
        swift_bridgeObjectRelease();
        v779 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v780 = v1835;
        v779(v776, v1835);
        v781 = v677;
        goto LABEL_244;
      }
      v1807 = v670;
      uint64_t ItemMetadata = 0;
      *(void *)&long long v1843 = v1837;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v1830;
      v1824 = (void *)type metadata accessor for JobResult();
      __chkstk_darwin(v1824);
      strcpy((char *)&v1661 - 32, "from to  reason ");
      v784 = v1835;
      *(void *)&long long v1843 = v1835;
      *((void *)&v1843 + 1) = v1835;
      *(void *)&long long v1844 = &type metadata for Fields;
      *((void *)&v1844 + 1) = &type metadata for String;
      v785 = (int *)swift_getTupleTypeMetadata();
      uint64_t v786 = (uint64_t)v1810;
      v1804 = &v1810[v785[12]];
      uint64_t v787 = (uint64_t)v777;
      uint64_t v788 = v785[16];
      v789 = &v1810[v785[20]];
      v790 = (char *)(v1832 + 16);
      v791 = *(void (**)(char *, uint64_t, int *))(v1832 + 16);
      v791(v1810, v776, v784);
      v1797 = v790;
      v1792 = v791;
      v791(v1804, (uint64_t)v1817, v784);
      v792 = (void (*)(char *))v1817;
      *(void *)(v786 + v788) = v1860;
      uint64_t v793 = (uint64_t)v1820;
      *(void *)v789 = v1826;
      *((void *)v789 + 1) = v793;
      uint64_t v794 = v1812;
      swift_storeEnumTagMultiPayload();
      sub_1005917A0(v787, v786);
      (*(void (**)(uint64_t, uint64_t))(v1811 + 8))(v786, v794);
      BOOL v795 = sub_1005152D8();
      v796 = *(uint64_t (***)(uint64_t))(v1798 + 16);
      uint64_t v797 = v1799;
      v798 = (void (*)(void, void, void))v1801;
      v1826 = (char *)(v1798 + 16);
      v1820 = v796;
      v799 = v1769;
      if (v795)
      {
        v800 = v1755;
        ((void (*)(char *, char *, uint64_t))v796)(v1755, (char *)v1796, v1799);
        uint64_t v801 = v1803;
        if (v1816((uint64_t)v800, 1, v1803) != 1)
        {
          uint64_t v802 = (uint64_t)v792;
          v803 = (char *)v1780;
          v804 = v1745;
          uint64_t v805 = (uint64_t)v1786;
          v1780[2](v1745, v800, v1786);
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v800, v801);
          if (qword_100ACC0F0 == -1) {
            goto LABEL_249;
          }
          goto LABEL_698;
        }
        (*(void (**)(char *, uint64_t))(v1798 + 8))(v800, v797);
      }
      break;
  }
LABEL_251:
  ((void (*)(char *, void, uint64_t))v796)(v799, v798, v797);
  uint64_t v816 = v1803;
  int v817 = v1816((uint64_t)v799, 1, v1803);
  uint64_t v818 = ItemMetadata;
  if (v817 == 1)
  {
    (*(void (**)(char *, uint64_t))(v1798 + 8))(v799, v797);
    v819 = v1835;
  }
  else
  {
    v820 = v1780;
    v821 = v1779;
    v822 = v1786;
    v1780[2](v1779, v799, v1786);
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v799, v816);
    uint64_t v823 = *(void *)&v821[v822[9]];
    ((void (*)(char *, int *))v820[1])(v821, v822);
    BOOL v824 = sub_1006A0450(4, v823);
    v819 = v1835;
    if (v824)
    {
      uint64_t v825 = v1837;
      *(void *)&long long v1843 = v1837;
      v826 = v1834;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      uint64_t v827 = v1830;
      *((void *)&v1844 + 1) = v1830;
      uint64_t v828 = type metadata accessor for ItemJob();
      uint64_t v829 = swift_getMetatypeMetadata();
      sub_1006F0030(v829, v829);
      swift_allocObject();
      uint64_t v830 = sub_10096C0D0();
      *(void *)&long long v1843 = v825;
      v792 = (void (*)(char *))v1817;
      *((void *)&v1843 + 1) = v826;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v827;
      uint64_t *v831 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
      uint64_t v832 = sub_1003FC080(v830);
      uint64_t v833 = (*(uint64_t (**)(void (*)(char *), uint64_t))(*(void *)v1661 + 272))(v792, v832);
      uint64_t ItemMetadata = v818;
      if (v818)
      {
        swift_bridgeObjectRelease();
        v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v730 = v1835;
        v729(v1819, v1835);
        v834 = v792;
        uint64_t v835 = v1798;
        goto LABEL_629;
      }
      uint64_t v854 = v833;
      swift_bridgeObjectRelease();
      uint64_t v855 = sub_10096C1A0();
      v819 = v1835;
      if (v855)
      {
        uint64_t v856 = v828;
        uint64_t v857 = 0;
        uint64_t v1811 = v1833 + 16;
        v1810 = (char *)(v1827 + 8);
        v1804 = (char *)v828;
        v1802 = (void (*)(char *, char *, uint64_t))v854;
        v858 = v1829;
        uint64_t v859 = (uint64_t)v1822;
        do
        {
          v860 = sub_10010D86C(&v1843, v857, v854, v856);
          uint64_t v862 = *v861;
          swift_retain();
          ((void (*)(long long *, void))v860)(&v1843, 0);
          uint64_t v1812 = v857 + 1;
          if (__OFADD__(v857, 1))
          {
            __break(1u);
            goto LABEL_667;
          }
          uint64_t v863 = sub_100610C18();
          swift_retain();
          sub_1004D4360((uint64_t)v858, v863);
          swift_release();
          uint64_t v864 = v1828;
          uint64_t v865 = swift_getAssociatedConformanceWitness();
          uint64_t v866 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v864;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v865;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v867 = (unsigned char *)(v859 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))v1811)(v859, v862 + *(void *)(*(void *)v862 + 576), v866);
          swift_storeEnumTagMultiPayload();
          unsigned char *v867 = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v868 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v858, v859);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))v1810)(v859, v868);
          uint64_t v854 = (uint64_t)v1802;
          v869 = v1804;
          uint64_t v870 = sub_10096C1A0();
          ++v857;
          uint64_t v856 = (uint64_t)v869;
        }
        while (v1812 != v870);
        swift_bridgeObjectRelease();
        uint64_t v818 = ItemMetadata;
        v819 = v1835;
        uint64_t v797 = v1799;
        uint64_t v816 = v1803;
        v792 = (void (*)(char *))v1817;
        v796 = v1820;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v797 = v1799;
        uint64_t v816 = v1803;
        v796 = v1820;
        uint64_t v818 = ItemMetadata;
      }
    }
    else
    {
      uint64_t v816 = v1803;
      v796 = v1820;
      v792 = (void (*)(char *))v1817;
    }
  }
  v836 = v1767;
  ((void (*)(char *, char *, uint64_t))v796)(v1767, (char *)v1796, v797);
  if (v1816((uint64_t)v836, 1, v816) == 1)
  {
    uint64_t ItemMetadata = v818;
    (*(void (**)(char *, uint64_t))(v1798 + 8))(v836, v797);
    uint64_t v837 = v1782;
LABEL_300:
    v844 = v1771;
    goto LABEL_301;
  }
  uint64_t v838 = v818;
  uint64_t v839 = v1800;
  v840 = v1762;
  (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1762, v836, v816);
  uint64_t v841 = v1786[9];
  uint64_t v842 = v816;
  uint64_t v843 = *(void *)&v840[v841];
  if (!sub_100607B88(v843))
  {
    if (sub_1006A0450(4, v843))
    {
      uint64_t v1791 = v841;
      uint64_t v845 = v1837;
      *(void *)&long long v1843 = v1837;
      v846 = v1834;
      *((void *)&v1843 + 1) = v1834;
      uint64_t v847 = v1836;
      *(void *)&long long v1844 = v1836;
      uint64_t v848 = v1830;
      *((void *)&v1844 + 1) = v1830;
      uint64_t v1811 = type metadata accessor for ItemJob();
      uint64_t v849 = swift_getMetatypeMetadata();
      sub_1006F0030(v849, v849);
      swift_allocObject();
      uint64_t v850 = sub_10096C0D0();
      *(void *)&long long v1843 = v845;
      *((void *)&v1843 + 1) = v846;
      *(void *)&long long v1844 = v847;
      v781 = v1817;
      *((void *)&v1844 + 1) = v848;
      uint64_t *v851 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
      uint64_t v852 = sub_1003FC080(v850);
      uint64_t v853 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1661 + 272))(v781, v852);
      if (v838)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1762, v1803);
        v779 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v780 = v1835;
        v779(v1819, v1835);
        goto LABEL_244;
      }
      uint64_t v887 = v853;
      uint64_t ItemMetadata = 0;
      swift_bridgeObjectRelease();
      uint64_t v888 = v1811;
      if (sub_10096C1A0())
      {
        uint64_t v889 = v888;
        uint64_t v890 = 0;
        v1810 = (char *)(v1833 + 16);
        v1804 = (char *)(v1827 + 8);
        v1802 = (void (*)(char *, char *, uint64_t))v887;
        v891 = v1829;
        uint64_t v892 = (uint64_t)v1822;
        do
        {
          v893 = sub_10010D86C(&v1843, v890, v887, v889);
          uint64_t v862 = *v894;
          swift_retain();
          ((void (*)(long long *, void))v893)(&v1843, 0);
          uint64_t v1812 = v890 + 1;
          if (__OFADD__(v890, 1))
          {
            __break(1u);
            goto LABEL_688;
          }
          uint64_t v895 = sub_100610C18();
          swift_retain();
          sub_1004D4360((uint64_t)v891, v895);
          swift_release();
          uint64_t v896 = v1828;
          uint64_t v897 = swift_getAssociatedConformanceWitness();
          uint64_t v898 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v896;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v897;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v899 = (unsigned char *)(v892 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))v1810)(v892, v862 + *(void *)(*(void *)v862 + 576), v898);
          swift_storeEnumTagMultiPayload();
          unsigned char *v899 = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v900 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v891, v892);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))v1804)(v892, v900);
          uint64_t v901 = (uint64_t)v1802;
          uint64_t v902 = v1811;
          uint64_t v903 = sub_10096C1A0();
          ++v890;
          uint64_t v889 = v902;
          uint64_t v887 = v901;
        }
        while (v1812 != v903);
      }
      swift_bridgeObjectRelease();
      uint64_t v838 = ItemMetadata;
      v792 = (void (*)(char *))v1817;
      v840 = v1762;
      uint64_t v841 = v1791;
    }
    uint64_t ItemMetadata = v838;
    BOOL v904 = sub_1005152D8();
    uint64_t v837 = v1782;
    v819 = v1835;
    if (v904)
    {
      uint64_t v1791 = v841;
      uint64_t v905 = v1828;
      uint64_t v906 = swift_getAssociatedConformanceWitness();
      uint64_t v907 = v1932;
      *(void *)&long long v1843 = v1932;
      *((void *)&v1843 + 1) = v905;
      *(void *)&long long v1844 = v1814;
      *((void *)&v1844 + 1) = v906;
      type metadata accessor for ReconciliationID();
      uint64_t v908 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v909 = swift_getTupleTypeMetadata2();
      uint64_t v910 = (uint64_t)v1822;
      v911 = &v1822[*(int *)(v909 + 48)];
      uint64_t v912 = v907;
      v913 = *(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16);
      v913(v1822, v792, v912);
      swift_storeEnumTagMultiPayload();
      char *v911 = 0;
      uint64_t v1812 = v908;
      swift_storeEnumTagMultiPayload();
      uint64_t v914 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v910);
      uint64_t v1811 = *(void *)(v1827 + 8);
      uint64_t v915 = ((uint64_t (*)(uint64_t, uint64_t))v1811)(v910, v914);
      uint64_t v916 = v1807(v915);
      if (sub_1006A7344(0x4000, v916))
      {
        uint64_t v917 = (uint64_t)v1822;
        v918 = &v1822[*(int *)(v909 + 48)];
        v913(v1822, (void (*)(char *))v1817, v1932);
        swift_storeEnumTagMultiPayload();
        char *v918 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v919 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v917);
        ((void (*)(uint64_t, uint64_t))v1811)(v917, v919);
      }
      BOOL v920 = sub_1006A0450(8, *(void *)&v1762[v1791]);
      v1810 = (char *)v913;
      if (v920)
      {
        uint64_t v921 = (uint64_t)v1709;
        v792 = (void (*)(char *))v1817;
        v913(v1709, (void (*)(char *))v1817, v1932);
        swift_storeEnumTagMultiPayload();
        char v922 = FileItem.kind.getter((uint64_t)v1835, v1815);
        uint64_t v837 = v1782;
        if (qword_100ACC0F0 != -1) {
          swift_once();
        }
        unint64_t v923 = static Fields.all;
        if ((static Fields.all & 8) != 0 && v922 == 1) {
          unint64_t v923 = static Fields.all & 0xFFFFFFFFFFFFFFF7;
        }
        v925 = (char *)(v921 + *(int *)(v909 + 48));
        *(void *)v925 = v923;
        uint64_t v926 = v1823;
      }
      else
      {
        uint64_t v921 = (uint64_t)v1822;
        v925 = &v1822[*(int *)(v909 + 48)];
        v792 = (void (*)(char *))v1817;
        v913(v1822, (void (*)(char *))v1817, v1932);
        swift_storeEnumTagMultiPayload();
        v927 = sub_1003253AC(0);
        uint64_t v928 = sub_1006F2F28((uint64_t)v927);
        swift_bridgeObjectRelease();
        *(void *)v925 = v928;
        uint64_t v926 = v1823;
        uint64_t v837 = v1782;
      }
      uint64_t v929 = v1806;
      *((void *)v925 + 1) = v1805;
      *((void *)v925 + 2) = v929;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v921);
      ((void (*)(uint64_t, uint64_t))v1811)(v921, v926);
      v819 = v1835;
      char v930 = FileItem.kind.getter((uint64_t)v1835, v1815);
      BOOL v931 = sub_10025C338(v930, 1);
      v840 = v1762;
      if (v931
        && (FileItem.isDataless.getter((uint64_t)v819, v1815) & 1) == 0
        && (*((unsigned char *)v792 + v819[12] + v1795[16]) & 1) == 0)
      {
        *(void *)&long long v1843 = v1837;
        *((void *)&v1843 + 1) = v1834;
        *(void *)&long long v1844 = v1836;
        *((void *)&v1844 + 1) = v1830;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v932 = (uint64_t)v1793;
        ((void (*)(char *, void (*)(char *), uint64_t))v1810)(v1793, v792, v1932);
        sub_10002B7CC(&qword_100ADA2F0);
        uint64_t v933 = swift_allocObject();
        v934._uint64_t countAndFlagsBits = sub_10038FCB0(v933, 2);
        *(void *)v934._object = v837;
        *((void *)v934._object + 1) = 0x80000000;
        uint64_t v935 = Filename.init(rawValue:)(v934).rawValue._countAndFlagsBits;
        uint64_t v936 = sub_1006F2F28(v935);
        swift_bridgeObjectRelease();
        uint64_t v937 = v936;
        v840 = v1762;
        uint64_t v938 = sub_1008AA778(v932, v1805, v1806, v937, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        (*(void (**)(uint64_t, uint64_t))(v1833 + 8))(v932, v1932);
        sub_1004D4360((uint64_t)v1829, v938);
        swift_release();
      }
    }
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v840, v1803);
    goto LABEL_300;
  }
  uint64_t ItemMetadata = v838;
  (*(void (**)(char *, uint64_t))(v839 + 8))(v840, v842);
  uint64_t v837 = v1782;
  v844 = v1771;
  v819 = v1835;
LABEL_301:
  if (sub_1006A7344(0x4000000, v837))
  {
    char v939 = FileItem.kind.getter((uint64_t)v819, v1815);
    if (sub_10025C338(v939, 1))
    {
      *(void *)&long long v1843 = v1837;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v1830;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      v940 = v792;
      uint64_t v941 = v1833;
      uint64_t v942 = (uint64_t)v1793;
      uint64_t v943 = v837;
      uint64_t v944 = v1932;
      (*(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16))(v1793, v940, v1932);
      sub_10002B7CC(&qword_100ADA2F0);
      uint64_t v945 = swift_allocObject();
      v946._uint64_t countAndFlagsBits = sub_10038FCB0(v945, 2);
      *(void *)v946._object = v943;
      *((void *)v946._object + 1) = 0x1000000000;
      uint64_t v947 = Filename.init(rawValue:)(v946).rawValue._countAndFlagsBits;
      uint64_t v948 = sub_1006F2F28(v947);
      swift_bridgeObjectRelease();
      uint64_t v949 = sub_1008AA778(v942, v1805, v1806, v948, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
      uint64_t v950 = v941;
      v792 = v940;
      uint64_t v951 = v942;
      v844 = v1771;
      uint64_t v952 = v944;
      uint64_t v837 = v943;
      v819 = v1835;
      (*(void (**)(uint64_t, uint64_t))(v950 + 8))(v951, v952);
      sub_1004D4360((uint64_t)v1829, v949);
      swift_release();
    }
  }
  int v953 = sub_1006A7344(0x1000000000, v837);
  BOOL v954 = sub_1006A7344(0x2000000000, v837);
  if (!sub_1005152D8()) {
    goto LABEL_315;
  }
  char v955 = FileItem.kind.getter((uint64_t)v819, v1815);
  if (!sub_10025C338(v955, 1)) {
    goto LABEL_315;
  }
  if (!sub_1006A7344(0x100000000000, v1860)) {
    goto LABEL_315;
  }
  v956 = (char *)v792 + v819[12];
  if (v956[v1795[16]]) {
    goto LABEL_315;
  }
  if (v956[v1795[15]] == 1)
  {
    v957 = v1699;
    ((void (*)(char *, char *, uint64_t))v1820)(v1699, (char *)v1796, v1799);
    if (v1816((uint64_t)v957, 1, v1803) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1798 + 8))(v957, v1799);
      uint64_t v837 = v1782;
      v844 = v1771;
    }
    else
    {
      uint64_t v958 = v1800;
      v959 = v1688;
      uint64_t v960 = v1803;
      (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1688, v957, v1803);
      BOOL v961 = sub_1006A0450(16, *(void *)&v959[v1786[9]]);
      (*(void (**)(char *, uint64_t))(v958 + 8))(v959, v960);
      uint64_t v837 = v1782;
      v844 = v1771;
      if (v961) {
        goto LABEL_315;
      }
    }
  }
  int v953 = 1;
LABEL_315:
  if (!sub_1005152D8() || !sub_1006A7344(2, v1860)) {
    goto LABEL_346;
  }
  v962 = v819;
  uint64_t v963 = v1819;
  v964 = (char *)(v1819 + v819[9]);
  uint64_t v965 = ItemMetadata;
  uint64_t v966 = ((uint64_t (*)(char *, char *))(*v1794)[66])(v964, v1818);
  uint64_t ItemMetadata = v965;
  if (v965)
  {
    v967 = *(void (**)(uint64_t, int *))(v1832 + 8);
    v967(v963, v962);
    v968 = v962;
    goto LABEL_319;
  }
  uint64_t v972 = v966;
  LODWORD(v1785) = v954;
  v1784 = v964;
  *(void *)&long long v1843 = v966;
  sub_10096C1C0();
  swift_getWitnessTable();
  if (sub_10096C460())
  {
    swift_bridgeObjectRelease();
    if (v953 & v1785)
    {
      char v973 = 1;
      LOBYTE(v953) = 1;
      v792 = (void (*)(char *))v1817;
      v844 = v1771;
      v819 = v1835;
      goto LABEL_348;
    }
    v792 = (void (*)(char *))v1817;
    goto LABEL_339;
  }
  if (!sub_10096C1A0())
  {
LABEL_336:
    swift_bridgeObjectRelease();
    int v953 = 1;
    char v973 = 1;
    v819 = v1835;
    uint64_t v837 = v1782;
    v792 = (void (*)(char *))v1817;
    v844 = v1771;
    if (v1785) {
      goto LABEL_348;
    }
LABEL_339:
    sub_10002B7CC(&qword_100ADA2F0);
    uint64_t v985 = swift_allocObject();
    v986._uint64_t countAndFlagsBits = sub_10038FCB0(v985, 2);
    *(_OWORD *)v986._object = xmmword_1009849D0;
    uint64_t v987 = Filename.init(rawValue:)(v986).rawValue._countAndFlagsBits;
    uint64_t v988 = sub_1006F2F28(v987);
    swift_bridgeObjectRelease();
    uint64_t v989 = ItemMetadata;
    uint64_t v990 = ((uint64_t (*)(char *, uint64_t))(*v1794)[56])(v1784, v988);
    uint64_t ItemMetadata = v989;
    if (v989)
    {
      v967 = *(void (**)(uint64_t, int *))(v1832 + 8);
      v968 = v1835;
      v967(v1819, v1835);
LABEL_319:
      v969 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
      uint64_t v970 = v1799;
      v969(v1796, v1799);
      v969((uint64_t)v1801, v970);
      v971 = (char *)v792;
LABEL_320:
      v967((uint64_t)v971, v968);
      return v284 & 1;
    }
    uint64_t v991 = v990;
    v953 |= sub_1006A7344(0x1000000000, v990);
    if (sub_1006A7344(0x2000000000, v991))
    {
      char v973 = 1;
      goto LABEL_655;
    }
    v819 = v1835;
    uint64_t v837 = v1782;
    v792 = (void (*)(char *))v1817;
    v844 = v1771;
    BOOL v954 = (int)v1785;
LABEL_346:
    if ((v953 | v954))
    {
      char v973 = v953 ^ 1 | v954;
      goto LABEL_348;
    }
LABEL_352:
    uint64_t v1012 = v1799;
    goto LABEL_353;
  }
  uint64_t v797 = 0;
  uint64_t v974 = *v1813;
  uint64_t v1812 = v1833 + 16;
  v1810 = (char *)(v1833 + 32);
  uint64_t v1791 = v1766 + 48;
  v1789 = (char *)(v1766 + 32);
  v1790 = (char *)(v1766 + 8);
  v1804 = *(char **)(v974 + 160);
  v1802 = (void (*)(char *, char *, uint64_t))(v974 + 160);
  uint64_t v1811 = v1833 + 8;
  v1787 = (unsigned int (**)(char *, uint64_t, uint64_t))(v1700 + 48);
  v1783 = v1700 + 32;
  v1781 = v1700 + 8;
  v1778 = (void (**)(char *, uint64_t))(v1696 + 8);
  v1788 = (void (**)(char *, uint64_t))(v1764 + 8);
  uint64_t v802 = v1932;
  v804 = v1738;
  v799 = v1739;
  v803 = v1747;
  while (1)
  {
    uint64_t v975 = v972;
    v976 = sub_10010D86C(&v1843, v797, v972, v802);
    (*(void (**)(char *))v1812)(v803);
    ((void (*)(long long *, void))v976)(&v1843, 0);
    uint64_t v805 = v797 + 1;
    if (__OFADD__(v797, 1))
    {
      __break(1u);
LABEL_698:
      swift_once();
LABEL_249:
      BOOL v806 = sub_10082A8D4(static Fields.all | 0x10, 0, v805);
      (*((void (**)(char *, uint64_t))v803 + 1))(v804, v805);
      v796 = v1820;
      v792 = (void (*)(char *))v802;
      v798 = (void (*)(void, void, void))v1801;
      if (!v806)
      {
        uint64_t v807 = v1828;
        uint64_t v808 = swift_getAssociatedConformanceWitness();
        uint64_t v809 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v807;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v808;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v810 = swift_getTupleTypeMetadata2();
        uint64_t v811 = (uint64_t)v1822;
        v812 = &v1822[*(int *)(v810 + 48)];
        (*(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16))(v1822, v792, v809);
        uint64_t v813 = swift_storeEnumTagMultiPayload();
        *(void *)v812 = (*(uint64_t (**)(uint64_t))(*v1839 + 272))(v813);
        uint64_t v797 = v1799;
        v798 = (void (*)(void, void, void))v1801;
        swift_storeEnumTagMultiPayload();
        uint64_t v814 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v811);
        uint64_t v815 = v814;
        v796 = v1820;
        (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v811, v815);
      }
      goto LABEL_251;
    }
    v977 = v1756;
    (*(void (**)(char *, char *, uint64_t))v1810)(v1756, v803, v802);
    uint64_t v978 = ItemMetadata;
    ((void (*)(char *))v1804)(v977);
    uint64_t ItemMetadata = v978;
    if (v978) {
      goto LABEL_445;
    }
    uint64_t v979 = v1828;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v1791)(v799, 1, v1828) != 1) {
      break;
    }
    uint64_t v802 = v1932;
    (*(void (**)(char *, uint64_t))v1811)(v1756, v1932);
    (*v1788)(v799, v1768);
LABEL_327:
    uint64_t v972 = v975;
    ++v797;
    if (v805 == sub_10096C1A0()) {
      goto LABEL_336;
    }
  }
  (*(void (**)(char *, char *, uint64_t))v1789)(v804, v799, v979);
  v980 = v1734;
  uint64_t v981 = ItemMetadata;
  (*(void (**)(char *, uint64_t))(*(void *)v1839[5] + 240))(v804, 1);
  uint64_t ItemMetadata = v981;
  if (v981)
  {
    (*(void (**)(char *, uint64_t))v1790)(v804, v979);
LABEL_445:
    (*(void (**)(char *, uint64_t))v1811)(v1756, v1932);
    swift_bridgeObjectRelease();
LABEL_446:
    v967 = *(void (**)(uint64_t, int *))(v1832 + 8);
    v968 = v1835;
    v967(v1819, v1835);
    v1205 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
    uint64_t v1206 = v1799;
    v1205(v1796, v1799);
    v1205((uint64_t)v1801, v1206);
LABEL_663:
    v971 = v1817;
    goto LABEL_320;
  }
  (*(void (**)(char *, uint64_t))v1790)(v804, v979);
  (*(void (**)(char *, uint64_t))v1811)(v1756, v1932);
  uint64_t v982 = v1733;
  if ((*v1787)(v980, 1, v1733) == 1)
  {
    (*v1778)(v980, v1721);
    uint64_t v802 = v1932;
    v804 = v1738;
    v799 = v1739;
    goto LABEL_327;
  }
  v983 = v1720;
  (*(void (**)(char *, char *, uint64_t))v1783)(v1720, v980, v982);
  int v984 = v983[*(int *)(v982 + 48) + v1795[15]];
  (*(void (**)(char *, uint64_t))v1781)(v983, v982);
  v799 = v1739;
  if (v984 != 1)
  {
    uint64_t v802 = v1932;
    v804 = v1738;
    goto LABEL_327;
  }
  swift_bridgeObjectRelease();
  char v973 = 1;
  LOBYTE(v953) = 1;
LABEL_655:
  v819 = v1835;
  uint64_t v837 = v1782;
  v792 = (void (*)(char *))v1817;
  v844 = v1771;
LABEL_348:
  if (!sub_1005152D8()) {
    goto LABEL_352;
  }
  char v996 = FileItem.kind.getter((uint64_t)v819, v1815);
  if (sub_10025C338(v996, 1))
  {
    v997 = sub_10032548C(0);
    uint64_t v998 = sub_1006F2F28((uint64_t)v997);
    swift_bridgeObjectRelease();
    v1842[0] = v998;
    sub_10061C54C(0x1000000000, v953 & 1);
    sub_10061C54C(0x2000000000, v973 & 1);
    uint64_t v999 = v1837;
    *(void *)&long long v1843 = v1837;
    v1000 = v1834;
    *((void *)&v1843 + 1) = v1834;
    uint64_t v1001 = v1836;
    *(void *)&long long v1844 = v1836;
    uint64_t v1002 = v1830;
    *((void *)&v1844 + 1) = v1830;
    uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v1004 = sub_100437D58(ChildrenMetadata);
    v1813 = (uint64_t *)v1842[0];
    uint64_t v1006 = sub_1008AA778((uint64_t)v1817, v1004, v1005, v1842[0], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    v1007 = v1829;
    sub_1004D4360((uint64_t)v1829, v1006);
    swift_release();
    *(void *)&long long v1843 = v999;
    v792 = (void (*)(char *))v1817;
    *((void *)&v1843 + 1) = v1000;
    *(void *)&long long v1844 = v1001;
    *((void *)&v1844 + 1) = v1002;
    uint64_t v1008 = type metadata accessor for Ingestion.ReSnapshotChildren();
    uint64_t v1009 = sub_100437D58(v1008);
    uint64_t v1011 = sub_1008AA69C((uint64_t)v792, v1009, v1010, (uint64_t)v1813, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
    sub_1004D4360((uint64_t)v1007, v1011);
    swift_release();
    goto LABEL_351;
  }
  uint64_t v1017 = v1799;
  ((void (*)(char *, char *, uint64_t))v1820)(v844, (char *)v1796, v1799);
  uint64_t v1018 = v1803;
  if (v1816((uint64_t)v844, 1, v1803) == 1)
  {
    (*(void (**)(char *, uint64_t))(v1798 + 8))(v844, v1017);
    uint64_t v1012 = v1017;
    goto LABEL_381;
  }
  v1055 = v1717;
  (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1717, v844, v1018);
  if (sub_100827AAC(v1018) && sub_100607B88(*(void *)&v1055[v1786[9]]))
  {
    if (!sub_100607B88(*(void *)&v1055[*(int *)(v1803 + 52) + v1743[9]])) {
      goto LABEL_422;
    }
    if (v953)
    {
      char v1056 = FileItem.kind.getter((uint64_t)v1835, v1815);
      if (_s9libfssync12FileItemKindO23supportsMaterializationSbvg_0(v1056)
        && !static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1817[v1835[12] + v1795[21]], 0))
      {
        uint64_t v1057 = v1828;
        uint64_t v1058 = swift_getAssociatedConformanceWitness();
        uint64_t v1059 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v1057;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1058;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1060 = swift_getTupleTypeMetadata2();
        uint64_t v1061 = (uint64_t)v1822;
        v1062 = &v1822[*(int *)(v1060 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1059);
        uint64_t v1063 = swift_storeEnumTagMultiPayload();
        uint64_t v1064 = sub_100437D58(v1063);
        *(void *)v1062 = 0x10000;
        *((void *)v1062 + 1) = v1064;
        *((void *)v1062 + 2) = v1065;
        swift_storeEnumTagMultiPayload();
        uint64_t v1066 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1061);
        (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1061, v1066);
      }
    }
    if ((v973 & 1) != 0
      && (v1817[v1835[12] + v1795[20]] & 1) == 0
      && (char v1067 = FileItem.kind.getter((uint64_t)v1835, v1815), FileItemKind.hasContent.getter(v1067)))
    {
      uint64_t v1068 = v1828;
      uint64_t v1069 = swift_getAssociatedConformanceWitness();
      uint64_t v1070 = v1932;
      *(void *)&long long v1843 = v1932;
      *((void *)&v1843 + 1) = v1068;
      *(void *)&long long v1844 = v1814;
      *((void *)&v1844 + 1) = v1069;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v1071 = swift_getTupleTypeMetadata2();
      uint64_t v1072 = (uint64_t)v1822;
      v1073 = &v1822[*(int *)(v1071 + 48)];
      v792 = (void (*)(char *))v1817;
      (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1070);
      uint64_t v1074 = swift_storeEnumTagMultiPayload();
      uint64_t v1075 = sub_100437D58(v1074);
      *(void *)v1073 = 8;
      *((void *)v1073 + 1) = v1075;
      *((void *)v1073 + 2) = v1076;
      swift_storeEnumTagMultiPayload();
      uint64_t v1077 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v1072);
      (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1072, v1077);
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1717, v1803);
LABEL_351:
      uint64_t v1012 = v1799;
      uint64_t v837 = v1782;
    }
    else
    {
LABEL_422:
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1717, v1803);
      uint64_t v1012 = v1799;
      uint64_t v837 = v1782;
      v792 = (void (*)(char *))v1817;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v1055, v1803);
    uint64_t v1012 = v1799;
LABEL_381:
    uint64_t v837 = v1782;
  }
LABEL_353:
  BOOL v1013 = sub_1006A7344(1, v837);
  v1014 = v1820;
  LODWORD(v1812) = v1013;
  if (v1013 && !sub_1005152D8())
  {
    v1015 = v1740;
    ((void (*)(char *, char *, uint64_t))v1014)(v1740, (char *)v1796, v1012);
    uint64_t v1016 = v1803;
    if (v1816((uint64_t)v1015, 1, v1803) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1798 + 8))(v1015, v1012);
    }
    else
    {
      uint64_t v1019 = v1016;
      BOOL v1020 = sub_100827AAC(v1016);
      uint64_t v1021 = v1019;
      v1014 = v1820;
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1015, v1021);
      if (!v1020)
      {
        uint64_t v1022 = v1828;
        uint64_t v1023 = swift_getAssociatedConformanceWitness();
        uint64_t v1024 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v1022;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1023;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1025 = swift_getTupleTypeMetadata2();
        uint64_t v1026 = (uint64_t)v1822;
        v1027 = &v1822[*(int *)(v1025 + 48)];
        uint64_t v1028 = v1024;
        uint64_t v1012 = v1799;
        (*(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16))(v1822, v792, v1028);
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v1027 = 515;
        uint64_t v1029 = v1806;
        *((void *)v1027 + 1) = v1805;
        *((void *)v1027 + 2) = v1029;
        swift_storeEnumTagMultiPayload();
        uint64_t v1030 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1026);
        uint64_t v1031 = v1030;
        v1014 = v1820;
        (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1026, v1031);
      }
    }
  }
  if (sub_1006A7344(8, v1860))
  {
    v1032 = v1748;
    ((void (*)(char *, char *, uint64_t))v1014)(v1748, (char *)v1796, v1012);
    uint64_t v1033 = v1803;
    if (v1816((uint64_t)v1032, 1, v1803) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1798 + 8))(v1032, v1012);
    }
    else
    {
      v1034 = v1780;
      v1035 = v1779;
      v1036 = v1786;
      v1780[2](v1779, v1032, v1786);
      v1037 = *(void (**)(char *, uint64_t))(v1800 + 8);
      v1037(v1032, v1033);
      int v1038 = v1035[v1036[11]];
      v1039 = v1036;
      v1014 = v1820;
      ((void (*)(char *, int *))v1034[1])(v1035, v1039);
      if (v1038 != 3 && static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1038, 1))
      {
        uint64_t v1040 = v1828;
        uint64_t v1041 = swift_getAssociatedConformanceWitness();
        uint64_t v1042 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v1040;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1041;
        v1043 = (uint64_t *)type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1044 = swift_getTupleTypeMetadata2();
        uint64_t v1045 = (uint64_t)v1822;
        v1046 = &v1822[*(int *)(v1044 + 48)];
        v1047 = *(char **)(v1833 + 16);
        uint64_t v1811 = v1833 + 16;
        v1810 = v1047;
        ((void (*)(char *, char *, uint64_t))v1047)(v1822, v1817, v1042);
        v1813 = v1043;
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v1046 = 769;
        uint64_t v1048 = v1806;
        *((void *)v1046 + 1) = v1805;
        *((void *)v1046 + 2) = v1048;
        swift_storeEnumTagMultiPayload();
        uint64_t v1049 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1045);
        v1050 = *(void (**)(uint64_t, uint64_t))(v1827 + 8);
        uint64_t v1051 = v1049;
        uint64_t v1052 = v1799;
        v1050(v1045, v1051);
        v1014 = v1820;
        char v1053 = FileItem.kind.getter((uint64_t)v1835, v1815);
        if (sub_10025C338(v1053, 0))
        {
          v1054 = v1692;
          ((void (*)(char *, char *, uint64_t))v1014)(v1692, (char *)v1796, v1052);
          if (v1816((uint64_t)v1054, 1, v1803) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1798 + 8))(v1054, v1052);
          }
          else
          {
            v1078 = v1054;
            uint64_t v1079 = *(void *)&v1054[*(int *)(v1803 + 76)];
            ((void (*)(char *))v1037)(v1078);
            if (!sub_1006A7344(1, v1079))
            {
              sub_10001AE98(v1819 + v1835[13], (uint64_t)v1842, &qword_100AD0EA0);
              sub_10001AE98((uint64_t)v1842, (uint64_t)&v1843, &qword_100AD0EA0);
              if (sub_1000DBD64((uint64_t)&v1843) != 1)
              {
                long long v1927 = v1855;
                long long v1928 = v1856;
                long long v1929 = v1857;
                long long v1923 = v1851;
                long long v1924 = v1852;
                long long v1925 = v1853;
                long long v1926 = v1854;
                long long v1919 = v1847;
                long long v1920 = v1848;
                long long v1921 = v1849;
                long long v1922 = v1850;
                long long v1915 = v1843;
                long long v1916 = v1844;
                long long v1917 = v1845;
                uint64_t v1930 = v1858;
                long long v1918 = v1846;
                v1080 = *(uint64_t (**)(uint64_t))(*v1839 + 520);
                sub_10001AE98((uint64_t)v1842, (uint64_t)v1841, &qword_100AD0EA0);
                uint64_t v1081 = sub_1002677EC((uint64_t)v1841);
                char v1082 = v1080(v1081);
                uint64_t v1083 = sub_1006A045C(v1082 & 1, 0, 0);
                sub_1003A9A58(v1842, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
                if (sub_10025BE54(v1083, 501))
                {
                  uint64_t v1084 = swift_getTupleTypeMetadata3();
                  uint64_t v1085 = *(int *)(v1084 + 48);
                  uint64_t v1086 = *(int *)(v1084 + 64);
                  uint64_t v1087 = (uint64_t)v1822;
                  ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1817, v1932);
                  swift_storeEnumTagMultiPayload();
                  *(void *)(v1087 + v1085) = 1;
                  v1088 = sub_100325498(0);
                  uint64_t v1089 = sub_1006F2F28((uint64_t)v1088);
                  swift_bridgeObjectRelease();
                  *(void *)(v1087 + v1086) = v1089;
                  uint64_t v1090 = v1823;
                  swift_storeEnumTagMultiPayload();
                  sub_100591758((uint64_t)v1829, v1087);
                  v1050(v1087, v1090);
                }
              }
              v1014 = v1820;
            }
          }
        }
      }
    }
  }
  if (v1825)
  {
    uint64_t v1091 = (uint64_t)v1822;
    goto LABEL_389;
  }
  v1094 = v1835;
  uint64_t v862 = v1815;
  char v1095 = FileItem.kind.getter((uint64_t)v1835, v1815);
  BOOL v1096 = sub_10025C338(v1095, 0);
  uint64_t v1091 = (uint64_t)v1822;
  v1092 = v1765;
  v1093 = v1758;
  if (!v1096 || !sub_1006A7344(8, v1860))
  {
LABEL_394:
    v1014 = v1820;
    goto LABEL_395;
  }
  v1097 = *(void (**)(char *, int *, uint64_t))(*v1794[2] + 512);
  swift_retain();
  v1098 = v1719;
  v1097(v1817, v1094, v862);
  v1099 = v1098;
  swift_release();
  v1813 = *(uint64_t **)(v1833 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1813)(v1098, 1, v1932) == 1)
  {
    (*(void (**)(char *, uint64_t))(v1772 + 8))(v1098, v1773);
    uint64_t v1091 = (uint64_t)v1822;
    goto LABEL_394;
  }
  uint64_t v1146 = v1833;
  v1147 = *(char **)(v1833 + 32);
  v1148 = v1725;
  uint64_t v1149 = v1932;
  v1810 = (char *)(v1833 + 32);
  v1804 = v1147;
  ((void (*)(char *, char *, uint64_t))v1147)(v1725, v1099, v1932);
  v1150 = *(void (**)(uint64_t, int *, uint64_t))(*v1794[2] + 512);
  swift_retain();
  uint64_t v1815 = v862;
  v1150(v1819, v1835, v862);
  swift_release();
  v1151 = v1718;
  (*(void (**)(char *, char *, uint64_t))(v1146 + 16))(v1718, v1148, v1149);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1146 + 56))(v1151, 0, 1, v1149);
  v1152 = v1723;
  v1153 = (uint8_t *)&v1723[*(int *)(TupleTypeMetadata2 + 48)];
  v1154 = *(void (**)(char *, char *, uint64_t))(v1772 + 16);
  uint64_t v1155 = v1773;
  v1154(v1723, v1729, v1773);
  uint64_t v1811 = (uint64_t)v1153;
  v1154((char *)v1153, v1151, v1155);
  v1156 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v1813;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1813)(v1152, 1, v1149) != 1)
  {
    v1154(v1704, v1723, v1155);
    if (v1156(v1811, 1, v1149) != 1)
    {
      v1157 = v1793;
      uint64_t v1158 = v1932;
      ((void (*)(char *, uint64_t, uint64_t))v1804)(v1793, v1811, v1932);
      v1159 = v1704;
      char v1160 = sub_10096BBE0();
      v1161 = *(void (**)(char *, uint64_t))(v1833 + 8);
      v1161(v1157, v1158);
      v1162 = *(void (**)(char *, uint64_t))(v1772 + 8);
      uint64_t v1163 = v1773;
      v1162(v1718, v1773);
      v1161(v1159, v1158);
      v1810 = (char *)v1162;
      v1162(v1723, v1163);
      if (v1160) {
        goto LABEL_433;
      }
      goto LABEL_424;
    }
    v1810 = *(char **)(v1772 + 8);
    ((void (*)(char *, uint64_t))v1810)(v1718, v1773);
    (*(void (**)(char *, uint64_t))(v1833 + 8))(v1704, v1932);
LABEL_421:
    (*(void (**)(char *, uint64_t))(v1689 + 8))(v1723, TupleTypeMetadata2);
LABEL_424:
    uint64_t v1164 = v1837;
    *(void *)&long long v1843 = v1837;
    v1165 = v1834;
    *((void *)&v1843 + 1) = v1834;
    uint64_t v1166 = v1836;
    *(void *)&long long v1844 = v1836;
    uint64_t v1167 = v1830;
    *((void *)&v1844 + 1) = v1830;
    uint64_t v1168 = type metadata accessor for ItemJob();
    uint64_t v1169 = swift_getMetatypeMetadata();
    sub_1006F0030(v1169, v1169);
    swift_allocObject();
    uint64_t v1170 = sub_10096C0D0();
    *(void *)&long long v1843 = v1164;
    *((void *)&v1843 + 1) = v1165;
    *(void *)&long long v1844 = v1166;
    *((void *)&v1844 + 1) = v1167;
    uint64_t *v1171 = type metadata accessor for Ingestion.TrackTemporaryItem();
    uint64_t v1172 = sub_1003FC080(v1170);
    BOOL v1173 = v1661;
    uint64_t v1174 = ItemMetadata;
    uint64_t v1175 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1661 + 272))(v1725, v1172);
    uint64_t ItemMetadata = v1174;
    if (!v1174)
    {
      uint64_t v1176 = v1175;
      swift_bridgeObjectRelease();
      if (sub_10096C1A0())
      {
        uint64_t v1177 = 0;
        do
        {
          v1178 = sub_10010D86C(&v1843, v1177, v1176, v1168);
          uint64_t v1180 = *v1179;
          swift_retain();
          ((void (*)(long long *, void))v1178)(&v1843, 0);
          uint64_t v1181 = v1177 + 1;
          if (__OFADD__(v1177, 1))
          {
            __break(1u);
            goto LABEL_700;
          }
          if (*(unsigned __int8 *)(v1180 + 112) <= 1u)
          {
            v1165 = (void (*)(uint64_t, uint64_t))sub_100610C18();
            swift_retain();
            BOOL v1173 = (char)v1824;
            sub_1004D4360((uint64_t)v1829, (uint64_t)v1165);
            swift_release();
          }
          swift_release();
          ++v1177;
        }
        while (v1181 != sub_10096C1A0());
      }
      swift_bridgeObjectRelease();
      goto LABEL_433;
    }
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v1810)(v1729, v1773);
    (*(void (**)(char *, uint64_t))(v1833 + 8))(v1725, v1932);
    goto LABEL_446;
  }
  v1810 = *(char **)(v1772 + 8);
  ((void (*)(char *, uint64_t))v1810)(v1718, v1155);
  if (v1156(v1811, 1, v1149) != 1) {
    goto LABEL_421;
  }
  ((void (*)(char *, uint64_t))v1810)(v1723, v1773);
LABEL_433:
  ((void (*)(char *, uint64_t))v1810)(v1729, v1773);
  (*(void (**)(char *, uint64_t))(v1833 + 8))(v1725, v1932);
  uint64_t v1091 = (uint64_t)v1822;
  v1014 = v1820;
LABEL_389:
  uint64_t v862 = v1815;
  v1092 = v1765;
  v1093 = v1758;
LABEL_395:
  BOOL v1100 = sub_100607B88(v1860);
  uint64_t v1101 = v1799;
  ((void (*)(char *, char *, uint64_t))v1014)(v1092, (char *)v1796, v1799);
  if (v1100)
  {
    ((void (*)(char *, char *, uint64_t))v1014)(v1093, v1092, v1101);
    uint64_t v1102 = v1803;
    if (v1816((uint64_t)v1093, 1, v1803) == 1)
    {
      v1103 = *(void (**)(char *, uint64_t))(v1798 + 8);
      v1103(v1092, v1101);
      v1103(v1093, v1101);
LABEL_404:
      uint64_t v1128 = v1828;
      uint64_t v1129 = swift_getAssociatedConformanceWitness();
      uint64_t v1130 = v1932;
      *(void *)&long long v1843 = v1932;
      *((void *)&v1843 + 1) = v1128;
      uint64_t v1131 = v1814;
      *(void *)&long long v1844 = v1814;
      *((void *)&v1844 + 1) = v1129;
      type metadata accessor for ReconciliationID();
      v1132 = (unint64_t *)(v1091 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(uint64_t, char *, uint64_t))(v1833 + 16))(v1091, v1817, v1130);
      swift_storeEnumTagMultiPayload();
      uint64_t v1133 = v1806;
      unint64_t *v1132 = v1805;
      v1132[1] = v1133;
      uint64_t v1134 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v1091);
      (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1091, v1134);
      v1135 = (void (*)(void, void, void))v1801;
      v1136 = v1795;
      unsigned int v1137 = v1825;
      goto LABEL_591;
    }
    uint64_t v1122 = v862;
    v1123 = v1780;
    v1124 = v1779;
    v1125 = v1786;
    v1780[2](v1779, v1093, v1786);
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v1093, v1102);
    uint64_t v1126 = *(void *)&v1124[v1125[9]];
    v1127 = v1123;
    uint64_t v862 = v1122;
    ((void (*)(char *, int *))v1127[1])(v1124, v1125);
    LOBYTE(v1126) = sub_100607B88(v1126);
    v1813 = *(uint64_t **)(v1798 + 8);
    ((void (*)(char *, uint64_t))v1813)(v1765, v1101);
    if (v1126) {
      goto LABEL_404;
    }
  }
  else
  {
    v1813 = *(uint64_t **)(v1798 + 8);
    ((void (*)(char *, uint64_t))v1813)(v1092, v1101);
  }
  uint64_t v1104 = v1814;
  v1105 = v1817;
  uint64_t v1106 = v1932;
  char v1107 = (*(uint64_t (**)(uint64_t, uint64_t))(v1814 + 64))(v1932, v1814);
  uint64_t v1815 = v862;
  if (v1107 & 1) != 0 || ((*(uint64_t (**)(uint64_t, uint64_t))(v1104 + 72))(v1106, v1104))
  {
    uint64_t v1108 = v1860;
    sub_10002B7CC((uint64_t *)&unk_100AD6FD0);
    uint64_t v1109 = swift_allocObject();
    v1110._uint64_t countAndFlagsBits = sub_10038FCB0(v1109, 3);
    *(_OWORD *)v1110._object = xmmword_100981AE0;
    *((void *)v1110._object + 2) = 256;
    uint64_t v1111 = Filename.init(rawValue:)(v1110).rawValue._countAndFlagsBits;
    uint64_t v1112 = sub_1006F2F28(v1111);
    swift_bridgeObjectRelease();
    uint64_t v1113 = sub_1006B499C(v1112, v1108);
    if (!sub_100607B88(v1113))
    {
      uint64_t v1114 = v1828;
      uint64_t v1115 = swift_getAssociatedConformanceWitness();
      *(void *)&long long v1843 = v1106;
      *((void *)&v1843 + 1) = v1114;
      *(void *)&long long v1844 = v1814;
      *((void *)&v1844 + 1) = v1115;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v1116 = swift_getTupleTypeMetadata2();
      uint64_t v1117 = (uint64_t)v1822;
      v1118 = v1105;
      v1119 = (uint64_t *)&v1822[*(int *)(v1116 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1118, v1106);
      swift_storeEnumTagMultiPayload();
      unint64_t v1120 = v1805;
      uint64_t *v1119 = v1113;
      v1119[1] = v1120;
      v1119[2] = v1806;
      swift_storeEnumTagMultiPayload();
      uint64_t v1121 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v1117);
      (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1117, v1121);
      goto LABEL_526;
    }
    goto LABEL_525;
  }
  uint64_t v1138 = v1860;
  unint64_t v1859 = v1860;
  if (sub_1006A7344(0x200000000000, v1860) && !sub_1006A7344(8, v1138)) {
    sub_1008D2D38(0x200000000000);
  }
  if (sub_1006A7344(16, v1138) && (FileItem.isDataless.getter((uint64_t)v1835, v862) & 1) != 0)
  {
    uint64_t v1139 = v862;
    unsigned __int8 v1140 = FileItem.kind.getter((uint64_t)v1835, v862);
    if (FileItemKind.canConflict.getter(v1140) && ((*(uint64_t (**)(void))(*v1839 + 528))() & 1) != 0)
    {
      *(void *)&long long v1843 = v1837;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v1830;
      uint64_t v1141 = type metadata accessor for RemoteVersion.CleanRemoteVersions();
      uint64_t v1142 = sub_100437D58(v1141);
      uint64_t v1144 = sub_1003A9384((uint64_t)v1817, v1142, v1143, 2);
      sub_1004D4360((uint64_t)v1829, v1144);
      swift_release();
    }
    if (sub_1006A7344(8, v1138))
    {
      v1145 = v1698;
      ((void (*)(char *, char *, uint64_t))v1820)(v1698, (char *)v1796, v1799);
      if (v1816((uint64_t)v1145, 1, v1803) == 1)
      {
        ((void (*)(char *, uint64_t))v1813)(v1698, v1799);
      }
      else
      {
        uint64_t v1182 = v1803;
        v1183 = v1698;
        BOOL v1184 = sub_100827AAC(v1803);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1183, v1182);
        v1185 = v1817;
        if (v1184)
        {
          uint64_t v1186 = v1828;
          uint64_t v1187 = swift_getAssociatedConformanceWitness();
          uint64_t v1188 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v1186;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1187;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v1189 = swift_getTupleTypeMetadata2();
          uint64_t v1190 = (uint64_t)v1822;
          v1191 = &v1822[*(int *)(v1189 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1185, v1188);
          swift_storeEnumTagMultiPayload();
          v1192 = v1742;
          uint64_t v1193 = swift_getTupleTypeMetadata3();
          uint64_t v1194 = *(int *)(v1193 + 48);
          uint64_t v1195 = *(int *)(v1193 + 64);
          (*(void (**)(char *, char *, int *))(*((void *)v1192 - 1) + 16))(v1191, &v1185[v1835[10]], v1192);
          v1191[v1194] = 1;
          v1191[v1195] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v1196 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1190);
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1190, v1196);
        }
      }
    }
    sub_1008D2D38(8);
    uint64_t v862 = v1139;
  }
  if (sub_1006A7344(8, v1860))
  {
    uint64_t v1197 = v1835[10];
    v1198 = (uint8_t *)&v1817[v1197];
    uint64_t v612 = v1742[13];
    if (*(void *)&v1817[v1197 + v612])
    {
      *(void *)&long long v1843 = *(void *)&v1817[v1197 + v612];
      sub_10096C1C0();
      swift_getWitnessTable();
      if (sub_10096BF80())
      {
        uint64_t v1811 = (uint64_t)v1198;
        v1199 = v1707;
        ((void (*)(char *, char *, uint64_t))v1820)(v1707, (char *)v1796, v1799);
        if (v1816((uint64_t)v1199, 1, v1803) == 1)
        {
          ((void (*)(char *, uint64_t))v1813)(v1707, v1799);
          goto LABEL_452;
        }
        v1200 = v1780;
        v1201 = v1676;
        v1202 = v1707;
        v1203 = v1786;
        v1780[2](v1676, v1707, v1786);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1202, v1803);
        v1204 = v1690;
        (*(void (**)(char *, char *, uint64_t))(v1694 + 16))(v1690, &v1201[v1203[12]], v1695);
        ((void (*)(char *, int *))v1200[1])(v1201, v1203);
        v1810 = (char *)*((void *)v1742 - 1);
        if ((*((unsigned int (**)(char *, uint64_t))v1810 + 6))(v1204, 1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1694 + 8))(v1690, v1695);
          goto LABEL_452;
        }
LABEL_448:
        uint64_t v1207 = v1678;
        v1208 = v1675;
        v1209 = v1690;
        uint64_t v1210 = v1710;
        (*(void (**)(char *, char *, uint64_t))(v1678 + 16))(v1675, v1690, v1710);
        (*((void (**)(char *, int *))v1810 + 1))(v1209, v1742);
        (*(void (**)(char *, char *, uint64_t))(v1207 + 32))(v1681, v1208, v1210);
        if (*(void *)(v1811 + v612))
        {
          *(void *)&long long v1843 = *(void *)(v1811 + v612);
          if (sub_10096BF80())
          {
            uint64_t v1211 = v1828;
            uint64_t v1212 = swift_getAssociatedConformanceWitness();
            uint64_t v1213 = v1932;
            *(void *)&long long v1843 = v1932;
            *((void *)&v1843 + 1) = v1211;
            *(void *)&long long v1844 = v1814;
            *((void *)&v1844 + 1) = v1212;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v1214 = swift_getTupleTypeMetadata2();
            uint64_t v1215 = (uint64_t)v1822;
            v1216 = &v1822[*(int *)(v1214 + 48)];
            (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1213);
            swift_storeEnumTagMultiPayload();
            v1217 = v1742;
            uint64_t v1218 = swift_getTupleTypeMetadata3();
            uint64_t v1219 = *(int *)(v1218 + 48);
            uint64_t v1220 = *(int *)(v1218 + 64);
            (*((void (**)(char *, uint64_t, int *))v1810 + 2))(v1216, v1811, v1217);
            v1216[v1219] = 1;
            v1216[v1220] = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v1221 = v1823;
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v1829, v1215);
            (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1215, v1221);
          }
        }
        (*(void (**)(char *, uint64_t))(v1678 + 8))(v1681, v1710);
LABEL_452:
        sub_1008D2D38(8);
        uint64_t v862 = v1815;
      }
    }
  }
  if (sub_1006A7344(0x20000000000, v1860))
  {
    uint64_t v1222 = v1835[10];
    v1223 = (uint8_t *)&v1817[v1222];
    uint64_t v1224 = v1742[15];
    if (*(void *)&v1817[v1222 + v1224])
    {
      *(void *)&long long v1843 = *(void *)&v1817[v1222 + v1224];
      sub_10096C1C0();
      swift_getWitnessTable();
      if (sub_10096BF80())
      {
        uint64_t v1811 = (uint64_t)v1223;
        v1225 = v1708;
        ((void (*)(char *, char *, uint64_t))v1820)(v1708, (char *)v1796, v1799);
        if (v1816((uint64_t)v1225, 1, v1803) == 1)
        {
          ((void (*)(char *, uint64_t))v1813)(v1708, v1799);
        }
        else
        {
          v1226 = v1780;
          v1227 = v1677;
          v1228 = v1708;
          v1229 = v1786;
          v1780[2](v1677, v1708, v1786);
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1228, v1803);
          v1230 = v1691;
          (*(void (**)(char *, char *, uint64_t))(v1694 + 16))(v1691, &v1227[v1229[12]], v1695);
          ((void (*)(char *, int *))v1226[1])(v1227, v1229);
          v1810 = (char *)*((void *)v1742 - 1);
          if ((*((unsigned int (**)(char *, uint64_t))v1810 + 6))(v1230, 1) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1694 + 8))(v1691, v1695);
          }
          else
          {
            v1231 = v1742;
            v1232 = v1691;
            uint64_t v1233 = v1680;
            uint64_t v1234 = v1711;
            (*(void (**)(char *, char *, uint64_t))(v1680 + 16))(v1679, &v1691[v1742[14]], v1711);
            (*((void (**)(char *, int *))v1810 + 1))(v1232, v1231);
            (*(void (**)(char *, char *, uint64_t))(v1233 + 32))(v1682, v1679, v1234);
            if (*(void *)(v1811 + v1224))
            {
              *(void *)&long long v1843 = *(void *)(v1811 + v1224);
              if (sub_10096BF80())
              {
                uint64_t v1235 = v1828;
                uint64_t v1236 = swift_getAssociatedConformanceWitness();
                uint64_t v1237 = v1932;
                *(void *)&long long v1843 = v1932;
                *((void *)&v1843 + 1) = v1235;
                *(void *)&long long v1844 = v1814;
                *((void *)&v1844 + 1) = v1236;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v1238 = swift_getTupleTypeMetadata2();
                uint64_t v1239 = (uint64_t)v1822;
                v1240 = &v1822[*(int *)(v1238 + 48)];
                (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1237);
                swift_storeEnumTagMultiPayload();
                v1241 = v1742;
                uint64_t v1242 = swift_getTupleTypeMetadata3();
                uint64_t v1243 = *(int *)(v1242 + 48);
                uint64_t v1244 = *(int *)(v1242 + 64);
                (*((void (**)(char *, uint64_t, int *))v1810 + 2))(v1240, v1811, v1241);
                v1240[v1243] = 0;
                v1240[v1244] = 1;
                swift_storeEnumTagMultiPayload();
                uint64_t v1245 = v1823;
                swift_storeEnumTagMultiPayload();
                sub_100591758((uint64_t)v1829, v1239);
                (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1239, v1245);
              }
            }
            (*(void (**)(char *, uint64_t))(v1680 + 8))(v1682, v1711);
          }
        }
        sub_1008D2D38(0x20000000000);
        uint64_t v862 = v1815;
      }
    }
  }
  uint64_t v1246 = sub_1006B69B0(0x160000000010000, v1860);
  BOOL v1247 = sub_10025BE54(v1246, 0x20000000000);
  uint64_t v1248 = v1799;
  v1249 = v1820;
  v1250 = v1732;
  if (v1247)
  {
    v1251 = v1716;
    ((void (*)(char *, char *, uint64_t))v1820)(v1716, (char *)v1796, v1799);
    uint64_t v1252 = v1803;
    if (v1816((uint64_t)v1251, 1, v1803) == 1)
    {
      ((void (*)(char *, uint64_t))v1813)(v1251, v1248);
    }
    else
    {
      uint64_t v1253 = v1800;
      v1254 = v1702;
      (*(void (**)(void))(v1800 + 32))();
      if (sub_100827AAC(v1252)
        && sub_1004AF154(0x160000000010000, *(void *)&v1254[v1786[10]])
        && !sub_1008B02A0(*(void *)&v1254[v1786[16]], *(void *)&v1254[v1786[16] + 8], v1254[v1786[16] + 16]))
      {
        v1255 = &v1254[*(int *)(v1803 + 52) + v1743[16]];
        if (!sub_1008B02A0(*(void *)v1255, *((void *)v1255 + 1), v1255[16]))
        {
          uint64_t v1256 = v1828;
          uint64_t v1257 = swift_getAssociatedConformanceWitness();
          uint64_t v1258 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v1256;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1257;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v1259 = swift_getTupleTypeMetadata2();
          uint64_t v1260 = (uint64_t)v1822;
          v1261 = &v1822[*(int *)(v1259 + 48)];
          v1262 = v1817;
          (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1258);
          swift_storeEnumTagMultiPayload();
          v1263 = v1742;
          uint64_t v1264 = swift_getTupleTypeMetadata3();
          uint64_t v1265 = *(int *)(v1264 + 48);
          uint64_t v1811 = *(int *)(v1264 + 64);
          (*(void (**)(char *, char *, int *))(*((void *)v1263 - 1) + 16))(v1261, &v1262[v1835[10]], v1263);
          v1261[v1265] = 0;
          v1261[v1811] = 1;
          uint64_t v1248 = v1799;
          swift_storeEnumTagMultiPayload();
          uint64_t v1266 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1260);
          uint64_t v1267 = v1260;
          v1254 = v1702;
          uint64_t v1253 = v1800;
          uint64_t v1268 = v1266;
          v1249 = v1820;
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1267, v1268);
          sub_1008D2D38(0x20000000000);
        }
      }
      (*(void (**)(char *, uint64_t))(v1253 + 8))(v1254, v1803);
    }
  }
  if (sub_100876A78((uint64_t)v1794, (uint64_t)v1817, v1860))
  {
    sub_1008D2D38(0x10000);
    ((void (*)(char *, char *, uint64_t))v1249)(v1250, (char *)v1796, v1248);
    uint64_t v1269 = v1803;
    if (v1816((uint64_t)v1250, 1, v1803) == 1)
    {
      ((void (*)(char *, uint64_t))v1813)(v1250, v1248);
    }
    else
    {
      BOOL v1270 = sub_100827AAC(v1269);
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1250, v1269);
      if (v1270)
      {
        uint64_t v1271 = v1828;
        uint64_t v1272 = swift_getAssociatedConformanceWitness();
        uint64_t v1273 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v1271;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1272;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1274 = swift_getTupleTypeMetadata2();
        uint64_t v1275 = (uint64_t)v1822;
        v1276 = &v1822[*(int *)(v1274 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1273);
        swift_storeEnumTagMultiPayload();
        *(void *)v1276 = 0x10000;
        uint64_t v1277 = v1806;
        *((void *)v1276 + 1) = v1805;
        *((void *)v1276 + 2) = v1277;
        swift_storeEnumTagMultiPayload();
        uint64_t v1278 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1275);
        (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1275, v1278);
      }
    }
  }
  uint64_t v1279 = v1859;
  if (sub_1006A7344(0x2000000, v1859))
  {
    sub_10064EC78(&v1843, 0x100000D000000);
    uint64_t v1279 = v1859;
  }
  unint64_t v1280 = Fields.removingNonPropagatedFields.getter(v1279);
  unint64_t v1859 = v1280;
  uint64_t v1281 = sub_1006B69B0(0x100000000000, v1280);
  BOOL v1282 = sub_100607B88(v1281);
  uint64_t v1283 = v1932;
  if (!v1282
    || sub_1006A7344(0x100000000000, v1280) && v1817[v1835[12] + v1795[15]] != 1
    || sub_1006A7344(0x800000, v1860))
  {
    uint64_t v1284 = v1283;
    uint64_t v1285 = v862;
    uint64_t v1286 = v1828;
    uint64_t v1287 = swift_getAssociatedConformanceWitness();
    *(void *)&long long v1843 = v1284;
    *((void *)&v1843 + 1) = v1286;
    *(void *)&long long v1844 = v1814;
    *((void *)&v1844 + 1) = v1287;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v1288 = swift_getTupleTypeMetadata2();
    uint64_t v1289 = (uint64_t)v1822;
    v1290 = &v1822[*(int *)(v1288 + 48)];
    v1291 = v1817;
    (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1284);
    swift_storeEnumTagMultiPayload();
    v1292 = &v1291[v1835[12]];
    uint64_t v1293 = v1795[16];
    char *v1290 = v1292[v1293];
    swift_storeEnumTagMultiPayload();
    uint64_t v1294 = v1823;
    swift_storeEnumTagMultiPayload();
    sub_100591758((uint64_t)v1829, v1289);
    (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1289, v1294);
    v1295 = v1726;
    uint64_t v1296 = v1799;
    ((void (*)(char *, char *, uint64_t))v1820)(v1726, (char *)v1796, v1799);
    uint64_t v1297 = v1803;
    if (v1816((uint64_t)v1295, 1, v1803) == 1)
    {
      ((void (*)(char *, uint64_t))v1813)(v1295, v1296);
      BOOL v1298 = 0;
    }
    else
    {
      v1299 = v1780;
      v1300 = v1779;
      v1301 = v1295;
      v1302 = v1295;
      v1303 = v1786;
      v1780[2](v1779, v1301, v1786);
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1302, v1297);
      uint64_t v1304 = *(void *)&v1300[v1303[9]];
      ((void (*)(char *, int *))v1299[1])(v1300, v1303);
      BOOL v1298 = sub_1006A0450(16, v1304);
    }
    char v1305 = v1292[v1293];
    uint64_t v862 = v1285;
    char v1306 = FileItem.kind.getter((uint64_t)v1835, v1285);
    BOOL v1307 = sub_10025C338(v1306, 1);
    uint64_t v1283 = v1932;
    if (v1307 && v1298 && (v1305 & 1) == 0)
    {
      v1308 = v1793;
      (*(void (**)(uint64_t))(v1814 + 48))(v1932);
      char v1309 = sub_10096BBE0();
      v1310 = *(void (**)(char *, uint64_t))(v1833 + 8);
      v1310(v1308, v1283);
      if ((v1309 & 1) == 0)
      {
        v1311 = v1793;
        (*(void (**)(uint64_t))(v1814 + 56))(v1283);
        char v1312 = sub_10096BBE0();
        v1310(v1311, v1283);
        if ((v1312 & 1) == 0) {
          sub_10064EC78(&v1843, 0x100000000000);
        }
      }
    }
  }
  BOOL v1313 = sub_1006A7344(0x10000000000000, v1860);
  v1314 = v1835;
  if (v1313 && (v1817[v1835[12] + v1795[18]] & 1) == 0)
  {
    sub_10002B7CC((uint64_t *)&unk_100AD6FD0);
    uint64_t v1315 = swift_allocObject();
    v1316._uint64_t countAndFlagsBits = sub_10038FCB0(v1315, 3);
    *(_OWORD *)v1316._object = xmmword_100984A00;
    *((void *)v1316._object + 2) = 1;
    uint64_t v1317 = Filename.init(rawValue:)(v1316).rawValue._countAndFlagsBits;
    uint64_t v1318 = sub_1006F2F28(v1317);
    swift_bridgeObjectRelease();
    uint64_t v1319 = v1318;
    v1314 = v1835;
    sub_10064EC78(&v1843, v1319);
  }
  v1320 = v1839;
  uint64_t v1808 = v1839[5];
  if (!sub_1005152D8()) {
    goto LABEL_506;
  }
  unsigned __int8 v1321 = FileItem.kind.getter((uint64_t)v1314, v862);
  if (!FileItemKind.canConflict.getter(v1321)) {
    goto LABEL_506;
  }
  char v1322 = (*(uint64_t (**)(void))(*v1320 + 160))();
  if (!j___s9libfssync14ScanReturnCodeO21__derived_enum_equalsySbAC_ACtFZ(v1322 & 1, 0)) {
    goto LABEL_506;
  }
  if (!sub_1006A7344(0x4000000000000, v1860)) {
    goto LABEL_505;
  }
  v1323 = v1686;
  ((void (*)(char *, char *, uint64_t))v1820)(v1686, (char *)v1796, v1799);
  if (v1816((uint64_t)v1323, 1, v1803) == 1)
  {
    ((void (*)(char *, uint64_t))v1813)(v1686, v1799);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1766 + 56))(v1687, 1, 1, v1828);
    goto LABEL_504;
  }
  uint64_t v1324 = v1803;
  v1325 = v1686;
  uint64_t v1326 = v1736;
  v1327 = v1735;
  v1328 = v1743;
  (*(void (**)(char *, char *, int *))(v1736 + 16))(v1735, &v1686[*(int *)(v1803 + 52)], v1743);
  (*(void (**)(char *, uint64_t))(v1800 + 8))(v1325, v1324);
  v1329 = v1687;
  (*(void (**)(char *, char *, uint64_t))(v1764 + 16))(v1687, v1327, v1768);
  (*(void (**)(char *, int *))(v1326 + 8))(v1327, v1328);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1766 + 48))(v1329, 1, v1828) != 1)
  {
    v1594 = v1673;
    (*(void (**)(char *, char *, uint64_t))(v1766 + 32))(v1673, v1687, v1828);
    uint64_t v1595 = ItemMetadata;
    (*(void (**)(char *, uint64_t))(*(void *)v1808 + 240))(v1594, 1);
    uint64_t ItemMetadata = v1595;
    if (!v1595) {
      goto LABEL_668;
    }
    (*(void (**)(char *, uint64_t))(v1766 + 8))(v1673, v1828);
LABEL_662:
    v967 = *(void (**)(uint64_t, int *))(v1832 + 8);
    v968 = v1835;
    v967(v1819, v1835);
    uint64_t v1599 = v1799;
    v1600 = (void (*)(uint64_t *, uint64_t))v1813;
    ((void (*)(char *, uint64_t))v1813)((char *)v1796, v1799);
    v1600(v1801, v1599);
    goto LABEL_663;
  }
LABEL_504:
  (*(void (**)(char *, uint64_t))(v1764 + 8))(v1687, v1768);
LABEL_505:
  v1314 = v1835;
  uint64_t v1283 = v1932;
LABEL_506:
  uint64_t v1330 = v1828;
  while (2)
  {
    if (sub_1005152D8())
    {
      unsigned __int8 v1331 = FileItem.kind.getter((uint64_t)v1314, v862);
      if (FileItemKind.canConflict.getter(v1331) && sub_1006A7344(16, v1860))
      {
        if (FileItem.isDataless.getter((uint64_t)v1314, v862)) {
          goto LABEL_521;
        }
        v1332 = v1684;
        ((void (*)(char *, char *, uint64_t))v1820)(v1684, (char *)v1796, v1799);
        if (v1816((uint64_t)v1332, 1, v1803) == 1)
        {
          ((void (*)(char *, uint64_t))v1813)(v1684, v1799);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1766 + 56))(v1685, 1, 1, v1828);
          goto LABEL_520;
        }
        uint64_t v1350 = v1803;
        v1351 = v1684;
        uint64_t v1352 = v1736;
        v1353 = v1735;
        v1354 = v1743;
        (*(void (**)(char *, char *, int *))(v1736 + 16))(v1735, &v1684[*(int *)(v1803 + 52)], v1743);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1351, v1350);
        v1355 = v1685;
        (*(void (**)(char *, char *, uint64_t))(v1764 + 16))(v1685, v1353, v1768);
        (*(void (**)(char *, int *))(v1352 + 8))(v1353, v1354);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1766 + 48))(v1355, 1, v1828) == 1)
        {
LABEL_520:
          (*(void (**)(char *, uint64_t))(v1764 + 8))(v1685, v1768);
LABEL_521:
          uint64_t v1283 = v1932;
          uint64_t v1330 = v1828;
        }
        else
        {
          uint64_t v1597 = v1674;
          (*(void (**)(uint64_t, char *, uint64_t))(v1766 + 32))(v1674, v1685, v1828);
          uint64_t v1598 = ItemMetadata;
          (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v1808 + 264))(v1861, v1597);
          uint64_t ItemMetadata = v1598;
          if (v1598)
          {
            (*(void (**)(uint64_t, uint64_t))(v1766 + 8))(v1674, v1828);
            goto LABEL_662;
          }
          sub_10001AE98((uint64_t)v1861, (uint64_t)v1881, &qword_100AD0EA0);
          if (sub_1000DBD64((uint64_t)v1881) == 1) {
            goto LABEL_677;
          }
          long long v1895 = v1881[12];
          long long v1896 = v1881[13];
          long long v1897 = v1881[14];
          long long v1891 = v1881[8];
          long long v1892 = v1881[9];
          long long v1893 = v1881[10];
          long long v1894 = v1881[11];
          long long v1887 = v1881[4];
          long long v1888 = v1881[5];
          long long v1889 = v1881[6];
          long long v1890 = v1881[7];
          long long v1883 = v1881[0];
          long long v1884 = v1881[1];
          long long v1885 = v1881[2];
          uint64_t v1898 = v1882;
          long long v1886 = v1881[3];
          sub_10001AE98((uint64_t)&v1897, (uint64_t)v1899, &qword_100AD0698);
          sub_100130300((uint64_t)v1899);
          sub_1003A9A58(v1861, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
          sub_10001AE98((uint64_t)v1899, (uint64_t)v1931, &qword_100AD0698);
          if (!v1931[0]
            || (BOOL v1609 = sub_1006A0440(v1931[0]), sub_100130294((uint64_t)v1899), v1609)
            || (char v1610 = v1817[v1835[12] + v1795[21]],
                static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1610, 3))
            || static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1610, 2))
          {
LABEL_677:
            uint64_t v1330 = v1828;
            (*(void (**)(uint64_t, uint64_t))(v1766 + 8))(v1674, v1828);
            uint64_t v1283 = v1932;
          }
          else
          {
            *(void *)&long long v1843 = v1834;
            *((void *)&v1843 + 1) = v1837;
            *(void *)&long long v1844 = v1830;
            *((void *)&v1844 + 1) = v1836;
            uint64_t v1651 = type metadata accessor for Conflict.PopulateConflicts();
            uint64_t v1652 = sub_100437D58(v1651);
            uint64_t v1653 = v1674;
            uint64_t v1655 = sub_1008AA8E0(v1674, v1652, v1654, 1);
            sub_1004D7588((uint64_t)v1829, v1655);
            swift_release();
            uint64_t v1330 = v1828;
            (*(void (**)(uint64_t, uint64_t))(v1766 + 8))(v1653, v1828);
            uint64_t v1283 = v1932;
          }
        }
      }
    }
    uint64_t v1333 = swift_getAssociatedConformanceWitness();
    *(void *)&long long v1843 = v1283;
    *((void *)&v1843 + 1) = v1330;
    *(void *)&long long v1844 = v1814;
    *((void *)&v1844 + 1) = v1333;
    v1334 = (uint8_t *)type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v1335 = swift_getTupleTypeMetadata2();
    uint64_t v1336 = (uint64_t)v1822;
    v1337 = (unint64_t *)&v1822[*(int *)(v1335 + 48)];
    v1338 = v1817;
    v1810 = *(char **)(v1833 + 16);
    ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1817, v1283);
    uint64_t v1811 = (uint64_t)v1334;
    swift_storeEnumTagMultiPayload();
    unint64_t v1339 = Fields.removingNonPropagatedFields.getter(v1859);
    unint64_t v1340 = v1805;
    unint64_t *v1337 = v1339;
    v1337[1] = v1340;
    v1337[2] = v1806;
    swift_storeEnumTagMultiPayload();
    uint64_t v1341 = v1823;
    swift_storeEnumTagMultiPayload();
    sub_100591758((uint64_t)v1829, v1336);
    uint64_t v1342 = v1341;
    v1343 = v1338;
    v1165 = *(void (**)(uint64_t, uint64_t))(v1827 + 8);
    v1165(v1336, v1342);
    char v1344 = FileItem.kind.getter((uint64_t)v1835, v1815);
    if (FileItemKind.hasContent.getter(v1344) && sub_1006A7344(8, v1860))
    {
      uint64_t v1345 = (uint64_t)v1822;
      v1346 = &v1822[*(int *)(v1335 + 48)];
      ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1343, v1932);
      swift_storeEnumTagMultiPayload();
      *(void *)v1346 = 0;
      *((void *)v1346 + 1) = 0;
      *((void *)v1346 + 2) = 0xB000000000000000;
      *(_OWORD *)(v1346 + 24) = 0u;
      *(_OWORD *)(v1346 + 40) = 0u;
      v1346[56] = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v1347 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v1345);
      v1165(v1345, v1347);
      if (!sub_1005152D8())
      {
        char v1348 = FileItem.kind.getter((uint64_t)v1835, v1815);
        if (sub_1006B3EB4(1, v1348))
        {
          v1349 = v1683;
          ((void (*)(char *, char *, uint64_t))v1820)(v1683, (char *)v1796, v1799);
          if (v1816((uint64_t)v1349, 1, v1803) == 1)
          {
            ((void (*)(char *, uint64_t))v1813)(v1683, v1799);
            goto LABEL_523;
          }
          v1356 = v1780;
          v1357 = v1779;
          v1358 = v1683;
          v1359 = v1786;
          v1780[2](v1779, v1683, v1786);
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1358, v1803);
          v1360 = v1356[1];
          LOBYTE(v1356) = v1357[v1359[13]];
          ((void (*)(char *, int *))v1360)(v1357, v1359);
          if (!static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)((char)v1356, 0))
          {
LABEL_523:
            if (static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1817[v1835[12] + v1795[21]], 0)) {
              goto LABEL_524;
            }
            uint64_t v1592 = v1819 + v1835[13];
            sub_10001AE98(v1592, (uint64_t)v1842, &qword_100AD0EA0);
            sub_10001AE98((uint64_t)v1842, (uint64_t)&v1843, &qword_100AD0EA0);
            int v1593 = sub_1000DBD64((uint64_t)&v1843);
            LODWORD(v1804) = v1593 == 1;
            if (v1593 == 1)
            {
              v1802 = 0;
            }
            else
            {
              long long v1911 = v1855;
              long long v1912 = v1856;
              long long v1913 = v1857;
              long long v1907 = v1851;
              long long v1908 = v1852;
              long long v1909 = v1853;
              long long v1910 = v1854;
              long long v1903 = v1847;
              long long v1904 = v1848;
              long long v1905 = v1849;
              long long v1906 = v1850;
              *(_OWORD *)&v1899[8] = v1843;
              long long v1900 = v1844;
              long long v1901 = v1845;
              uint64_t v1914 = v1858;
              long long v1902 = v1846;
              v1601 = *(uint64_t (**)(uint64_t))(*v1839 + 520);
              sub_10001AE98((uint64_t)v1842, (uint64_t)v1841, &qword_100AD0EA0);
              uint64_t v1602 = sub_1002677EC((uint64_t)v1841);
              char v1603 = v1601(v1602);
              char v1604 = FileItem.kind.getter((uint64_t)v1835, v1815);
              BOOL v1605 = sub_10025C338(v1604, 1);
              v1606 = v1670;
              ((void (*)(char *, char *, uint64_t))v1820)(v1670, (char *)v1796, v1799);
              int v1607 = v1816((uint64_t)v1606, 1, v1803);
              if (v1607 == 1)
              {
                ((void (*)(char *, uint64_t))v1813)(v1670, v1799);
                BOOL v1608 = 1;
              }
              else
              {
                uint64_t v1611 = *(void *)&v1670[*(int *)(v1803 + 76)];
                (*(void (**)(void))(v1800 + 8))();
                BOOL v1608 = sub_1006A7344(1, v1611);
              }
              v1802 = (void (*)(char *, char *, uint64_t))sub_1006A045C(v1603 & 1, v1605, v1608);
              sub_1003A9A58(v1842, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
            }
            if (sub_1006A7344(2, v1860))
            {
              sub_10001AE98(v1592, (uint64_t)v1840, &qword_100AD0EA0);
              sub_10001AE98((uint64_t)v1840, (uint64_t)v1841, &qword_100AD0EA0);
              if (sub_1000DBD64((uint64_t)v1841) != 1 && sub_10025BE54(v1841[26], 0))
              {
                uint64_t v1612 = ItemMetadata;
                ((void (*)(void *__return_ptr, char *))(*v1794)[33])(v1862, v1818);
                uint64_t ItemMetadata = v1612;
                if (v1612) {
                  goto LABEL_662;
                }
                sub_10001AE98((uint64_t)v1862, (uint64_t)v1863, &qword_100AD0EA0);
                if (sub_1000DBD64((uint64_t)v1863) != 1)
                {
                  long long v1877 = v1863[12];
                  long long v1878 = v1863[13];
                  long long v1879 = v1863[14];
                  long long v1873 = v1863[8];
                  long long v1874 = v1863[9];
                  long long v1875 = v1863[10];
                  long long v1876 = v1863[11];
                  long long v1869 = v1863[4];
                  long long v1870 = v1863[5];
                  long long v1871 = v1863[6];
                  long long v1872 = v1863[7];
                  long long v1865 = v1863[0];
                  long long v1866 = v1863[1];
                  long long v1867 = v1863[2];
                  uint64_t v1880 = v1864;
                  long long v1868 = v1863[3];
                  LOBYTE(v1177) = (*(uint64_t (**)(void))(*v1839 + 520))();
                  char v1613 = FileItem.kind.getter((uint64_t)v1835, v1815);
                  BOOL v1173 = sub_10025C338(v1613, 1);
                  v1614 = v1663;
                  ((void (*)(char *, char *, uint64_t))v1820)(v1663, (char *)v1796, v1799);
                  if (v1816((uint64_t)v1614, 1, v1803) == 1)
                  {
                    ((void (*)(char *, uint64_t))v1813)(v1663, v1799);
                    BOOL v1615 = 1;
                  }
                  else
                  {
LABEL_700:
                    uint64_t v1635 = *(void *)&v1663[*(int *)(v1803 + 76)];
                    (*(void (**)(void))(v1800 + 8))();
                    BOOL v1615 = sub_1006A7344(1, v1635);
                  }
                  v1802 = (void (*)(char *, char *, uint64_t))sub_1006A045C(v1177 & 1, v1173, v1615);
                  sub_1003A9A58(v1862, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000DBE04);
                  LODWORD(v1804) = 0;
                }
              }
            }
            uint64_t v1636 = ((uint64_t (*)(void))v1807)();
            if (sub_1006A7344(4096, v1636))
            {
              if (v1804) {
                goto LABEL_524;
              }
              if (sub_10025BE54((uint64_t)v1802, 1003) || sub_10025BE54((uint64_t)v1802, 502))
              {
                v1637 = v1669;
                ((void (*)(char *, char *, uint64_t))v1820)(v1669, (char *)v1796, v1799);
                if (v1816((uint64_t)v1637, 1, v1803) == 1)
                {
                  ((void (*)(char *, uint64_t))v1813)(v1669, v1799);
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1766 + 56))(v1668, 1, 1, v1828);
                  goto LABEL_711;
                }
                uint64_t v1638 = v1803;
                v1639 = v1669;
                uint64_t v1640 = v1736;
                v1641 = v1735;
                v1642 = v1743;
                (*(void (**)(char *, char *, int *))(v1736 + 16))(v1735, &v1669[*(int *)(v1803 + 52)], v1743);
                (*(void (**)(char *, uint64_t))(v1800 + 8))(v1639, v1638);
                v1643 = v1668;
                (*(void (**)(char *, char *, uint64_t))(v1764 + 16))(v1668, v1641, v1768);
                (*(void (**)(char *, int *))(v1640 + 8))(v1641, v1642);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1766 + 48))(v1643, 1, v1828) == 1)
                {
LABEL_711:
                  (*(void (**)(char *, uint64_t))(v1764 + 8))(v1668, v1768);
                  goto LABEL_712;
                }
                v1649 = v1664;
                (*(void (**)(char *, char *, uint64_t))(v1766 + 32))(v1664, v1668, v1828);
                uint64_t v1650 = ItemMetadata;
                (*(void (**)(char *, uint64_t))(*(void *)v1808 + 240))(v1649, 1);
                uint64_t ItemMetadata = v1650;
                if (v1650)
                {
                  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1664, v1828);
                  goto LABEL_662;
                }
                if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1700 + 6))(v1665, 1, v1733) == 1)
                {
                  (*(void (**)(char *, uint64_t))(v1696 + 8))(v1665, v1721);
                  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1664, v1828);
                  goto LABEL_712;
                }
                uint64_t v1656 = v1733;
                v1657 = v1665;
                uint64_t v1658 = v1662;
                sub_10010DA98((uint64_t)&v1665[*(int *)(v1733 + 48)], v1662);
                (*((void (**)(char *, uint64_t))v1700 + 1))(v1657, v1656);
                char v1659 = *(unsigned char *)(v1658 + v1795[21]);
                sub_10010DAFC(v1658);
                if (static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1659, 3))
                {
                  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1664, v1828);
                }
                else
                {
                  BOOL v1660 = static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1659, 2);
                  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1664, v1828);
                  if (!v1660) {
                    goto LABEL_712;
                  }
                }
LABEL_713:
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v1644 = swift_getTupleTypeMetadata2();
                uint64_t v1645 = (uint64_t)v1822;
                v1646 = &v1822[*(int *)(v1644 + 48)];
                ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1817, v1932);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)v1646 = 259;
                uint64_t v1647 = v1806;
                *((void *)v1646 + 1) = v1805;
                *((void *)v1646 + 2) = v1647;
                swift_storeEnumTagMultiPayload();
                uint64_t v1648 = v1823;
                swift_storeEnumTagMultiPayload();
                sub_100591758((uint64_t)v1829, v1645);
                v1165(v1645, v1648);
                goto LABEL_524;
              }
            }
            else if (v1804)
            {
              goto LABEL_524;
            }
LABEL_712:
            if (!sub_10025BE54((uint64_t)v1802, 2)) {
              goto LABEL_524;
            }
            goto LABEL_713;
          }
        }
      }
    }
LABEL_524:
    uint64_t v1106 = v1932;
LABEL_525:
    uint64_t v1117 = (uint64_t)v1822;
LABEL_526:
    v1361 = v1753;
    if (sub_1006A7344(16, v1860) && (FileItem.isDataless.getter((uint64_t)v1835, v1815) & 1) != 0)
    {
      uint64_t v1362 = v1828;
      uint64_t v1363 = swift_getAssociatedConformanceWitness();
      *(void *)&long long v1843 = v1106;
      *((void *)&v1843 + 1) = v1362;
      *(void *)&long long v1844 = v1814;
      *((void *)&v1844 + 1) = v1363;
      v1364 = (uint8_t *)type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      v1365 = (unsigned char *)(v1117 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      v1366 = *(void (**)(uint64_t, char *, uint64_t))(v1833 + 16);
      v1366(v1117, v1817, v1106);
      swift_storeEnumTagMultiPayload();
      unsigned char *v1365 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v1367 = v1823;
      swift_storeEnumTagMultiPayload();
      sub_100591758((uint64_t)v1829, v1117);
      v1818 = *(char **)(v1827 + 8);
      ((void (*)(uint64_t, uint64_t))v1818)(v1117, v1367);
      v1368 = v1730;
      uint64_t v1369 = v1799;
      ((void (*)(char *, char *, uint64_t))v1820)(v1730, (char *)v1796, v1799);
      uint64_t v1370 = v1803;
      if (v1816((uint64_t)v1368, 1, v1803) == 1)
      {
        ((void (*)(char *, uint64_t))v1813)(v1368, v1369);
        v1361 = v1753;
      }
      else
      {
        v1810 = (char *)v1366;
        uint64_t v1811 = (uint64_t)v1364;
        uint64_t v1371 = v1106;
        v1372 = v1780;
        v1373 = v1779;
        v1374 = v1368;
        v1375 = v1368;
        v1376 = v1786;
        v1780[2](v1779, v1374, v1786);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1375, v1370);
        int v1377 = v1373[v1376[14]];
        ((void (*)(char *, int *))v1372[1])(v1373, v1376);
        v1361 = v1753;
        if (v1377 != 6
          && static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1377, 0)
          && v1825 != 3)
        {
          type metadata accessor for ReconciliationSideMutation();
          swift_getTupleTypeMetadata2();
          ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1817, v1371);
          swift_storeEnumTagMultiPayload();
          uint64_t v1378 = (uint64_t)v1822;
          swift_storeEnumTagMultiPayload();
          uint64_t v1379 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1378);
          ((void (*)(uint64_t, uint64_t))v1818)(v1378, v1379);
        }
      }
    }
    v1380 = v1361;
    BOOL v1381 = sub_1006A7344(16, v1860);
    v1382 = v1835;
    v1383 = v1795;
    uint64_t v1384 = v1799;
    v1385 = (void (*)(char *))v1817;
    if (v1381 && (FileItem.isDataless.getter((uint64_t)v1835, v1815) & 1) == 0)
    {
      v1386 = v1731;
      ((void (*)(char *, char *, uint64_t))v1820)(v1731, (char *)v1796, v1384);
      uint64_t v1387 = v1803;
      if (v1816((uint64_t)v1386, 1, v1803) == 1)
      {
        ((void (*)(char *, uint64_t))v1813)(v1386, v1384);
      }
      else
      {
        v1388 = v1715;
        (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1715, v1386, v1387);
        if (sub_100827AAC(v1387))
        {
          if (sub_10082BF38(v1388[*(int *)(v1387 + 52) + v1743[13]]))
          {
            uint64_t v1389 = v1828;
            uint64_t v1390 = swift_getAssociatedConformanceWitness();
            *(void *)&long long v1843 = v1932;
            *((void *)&v1843 + 1) = v1389;
            *(void *)&long long v1844 = v1814;
            *((void *)&v1844 + 1) = v1390;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            v1391 = &v1822[*(int *)(swift_getTupleTypeMetadata2() + 48)];
            (*(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16))(v1822, v1385, v1932);
            swift_storeEnumTagMultiPayload();
            char *v1391 = 2;
            uint64_t v1392 = (uint64_t)v1822;
            swift_storeEnumTagMultiPayload();
            uint64_t v1393 = v1823;
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v1829, v1392);
            (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1392, v1393);
          }
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1388, v1387);
          v1382 = v1835;
          v1383 = v1795;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1388, v1387);
        }
      }
    }
    if (sub_1006A7344(0x2000000000000, v1860))
    {
      char v1394 = FileItem.kind.getter((uint64_t)v1382, v1815);
      BOOL v1395 = sub_10025C338(v1394, 0);
      v1396 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
      v1397 = v1754;
      if (v1395)
      {
        ((void (*)(char *, char *, uint64_t))v1820)(v1380, (char *)v1796, v1384);
        uint64_t v1398 = v1803;
        if (v1396(v1380, 1, v1803) == 1)
        {
          ((void (*)(char *, uint64_t))v1813)(v1380, v1384);
          goto LABEL_552;
        }
        v1399 = v1724;
        (*(void (**)(void))(v1800 + 32))();
        if (sub_100827AAC(v1398))
        {
          v1400 = &v1399[*(int *)(v1398 + 52)];
          uint64_t v1401 = v1764;
          v1402 = v1697;
          uint64_t v1403 = v1768;
          (*(void (**)(char *, char *, uint64_t))(v1764 + 16))(v1697, v1400, v1768);
          uint64_t v1404 = v1766;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1766 + 48))(v1402, 1, v1828) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1724, v1803);
            (*(void (**)(char *, uint64_t))(v1401 + 8))(v1402, v1403);
            goto LABEL_552;
          }
          (*(void (**)(char *, char *, uint64_t))(v1404 + 32))(v1701, v1402, v1828);
          uint64_t v1440 = (uint64_t)v1385 + v1835[13];
          sub_10001AE98(v1440, (uint64_t)v1842, &qword_100AD0EA0);
          sub_10001AE98((uint64_t)v1842, (uint64_t)&v1843, &qword_100AD0EA0);
          if (sub_1000DBD64((uint64_t)&v1843) == 1
            || !sub_10025BE54(*(void *)(v1440 + 208), 501)
            || sub_1006A7344(1, *(void *)&v1724[*(int *)(v1803 + 76)]))
          {
LABEL_572:
            (*(void (**)(char *, uint64_t))(v1766 + 8))(v1701, v1828);
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1724, v1803);
            goto LABEL_573;
          }
          uint64_t v1596 = ItemMetadata;
          (*(void (**)(char *, uint64_t))(*(void *)v1839[5] + 240))(v1701, 1);
          uint64_t ItemMetadata = v1596;
          if (v1596)
          {
            (*(void (**)(char *, uint64_t))(v1766 + 8))(v1701, v1828);
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1724, v1803);
            goto LABEL_662;
          }
          if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1700 + 6))(v1671, 1, v1733) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1766 + 8))(v1701, v1828);
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1724, v1803);
            (*(void (**)(char *, uint64_t))(v1696 + 8))(v1671, v1721);
LABEL_573:
            v1382 = v1835;
            v1383 = v1795;
            v1385 = (void (*)(char *))v1817;
            v1397 = v1754;
          }
          else
          {
            uint64_t v1623 = v1733;
            (*((void (**)(char *, char *, uint64_t))v1700 + 4))(v1666, v1671, v1733);
            uint64_t v1624 = swift_getWitnessTable();
            if (FileItem.isDataless.getter(v1623, v1624))
            {
              (*((void (**)(char *, uint64_t))v1700 + 1))(v1666, v1733);
              goto LABEL_572;
            }
            uint64_t v1625 = v1828;
            uint64_t v1626 = swift_getAssociatedConformanceWitness();
            uint64_t v1627 = v1932;
            v1841[0] = v1932;
            v1841[1] = v1625;
            v1841[2] = v1814;
            v1841[3] = v1626;
            type metadata accessor for ReconciliationID();
            uint64_t v1628 = swift_getTupleTypeMetadata3();
            uint64_t v1629 = *(int *)(v1628 + 48);
            uint64_t v1630 = *(int *)(v1628 + 64);
            uint64_t v1631 = (uint64_t)v1822;
            v1385 = (void (*)(char *))v1817;
            (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1627);
            swift_storeEnumTagMultiPayload();
            *(void *)(v1631 + v1629) = 1;
            v1632 = sub_100325498(0);
            uint64_t v1633 = sub_1006F2F28((uint64_t)v1632);
            swift_bridgeObjectRelease();
            *(void *)(v1631 + v1630) = v1633;
            uint64_t v1634 = v1823;
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v1829, v1631);
            (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1631, v1634);
            (*((void (**)(char *, uint64_t))v1700 + 1))(v1666, v1733);
            (*(void (**)(char *, uint64_t))(v1766 + 8))(v1701, v1625);
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1724, v1803);
            v1382 = v1835;
            v1383 = v1795;
            v1397 = v1754;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1399, v1398);
LABEL_552:
          v1382 = v1835;
        }
      }
    }
    else
    {
      v1397 = v1754;
    }
    if (sub_1006A7344(0x100000000000, v1860))
    {
      v1405 = (char *)v1385 + v1382[12];
      v1136 = v1383;
      uint64_t v1406 = v1383[16];
      if (v1405[v1406] == 1)
      {
        uint64_t v1407 = v1828;
        uint64_t v1408 = swift_getAssociatedConformanceWitness();
        uint64_t v1409 = v1932;
        *(void *)&long long v1843 = v1932;
        *((void *)&v1843 + 1) = v1407;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1408;
        uint64_t v1410 = type metadata accessor for ReconciliationID();
        uint64_t v1411 = (uint64_t)v1822;
        v1412 = (uint8_t *)v1410;
        v1413 = (char *)type metadata accessor for ReconciliationSideMutation();
        v1809 = (char *)swift_getTupleTypeMetadata2();
        v1414 = (unsigned char *)(v1411 + *((int *)v1809 + 12));
        v1810 = *(char **)(v1833 + 16);
        ((void (*)(uint64_t, void (*)(char *), uint64_t))v1810)(v1411, v1385, v1409);
        uint64_t v1811 = (uint64_t)v1412;
        swift_storeEnumTagMultiPayload();
        unsigned char *v1414 = 1;
        v1818 = v1413;
        swift_storeEnumTagMultiPayload();
        uint64_t v1415 = v1823;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1411);
        v1416 = *(void (**)(uint64_t, uint64_t))(v1827 + 8);
        v1416(v1411, v1415);
        if (v1405[v1406] == 1)
        {
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          uint64_t v1417 = type metadata accessor for Materialization.MaterializeIgnoredItem();
          uint64_t v1418 = sub_100437D58(v1417);
          v1385 = (void (*)(char *))v1817;
          uint64_t v1420 = sub_1008BCD08((uint64_t)v1817, v1418, v1419, 0x2000000);
          sub_1004D4360((uint64_t)v1829, v1420);
          swift_release();
          v1421 = v1713;
          uint64_t v1422 = v1799;
          ((void (*)(char *, char *, uint64_t))v1820)(v1713, (char *)v1796, v1799);
          if (v1816((uint64_t)v1421, 1, v1803) == 1)
          {
            ((void (*)(char *, uint64_t))v1813)(v1421, v1422);
            goto LABEL_565;
          }
          v1428 = v1780;
          v1429 = v1779;
          v1430 = v1786;
          v1780[2](v1779, v1421, v1786);
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1421, v1803);
          int v1431 = v1429[v1430[14]];
          ((void (*)(char *, int *))v1428[1])(v1429, v1430);
          if (v1431 == 6)
          {
LABEL_565:
            uint64_t v1423 = v1823;
            goto LABEL_568;
          }
          uint64_t v1441 = ItemMetadata;
          sub_1003E1168((uint64_t)v1385, v1796, v1805, v1806, v1782, (uint64_t)v1839, (uint64_t)v1829);
          uint64_t ItemMetadata = v1441;
          if (v1441) {
            goto LABEL_662;
          }
          goto LABEL_575;
        }
        char v1424 = FileItem.kind.getter((uint64_t)v1835, v1815);
        if (sub_10025C338(v1424, 1))
        {
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          uint64_t v1425 = sub_1008AA778((uint64_t)v1817, v1805, v1806, 0x4000000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_1004D4360((uint64_t)v1829, v1425);
          swift_release();
        }
        v1426 = v1714;
        uint64_t v1427 = v1799;
        ((void (*)(char *, char *, uint64_t))v1820)(v1714, (char *)v1796, v1799);
        if (v1816((uint64_t)v1426, 1, v1803) == 1)
        {
          ((void (*)(char *, uint64_t))v1813)(v1426, v1427);
          goto LABEL_575;
        }
        v1432 = v1416;
        uint64_t v1433 = v1803;
        BOOL v1434 = sub_100827AAC(v1803);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1426, v1433);
        if (v1434)
        {
LABEL_575:
          uint64_t v1423 = v1823;
          v1136 = v1795;
          unsigned int v1137 = v1825;
          v1385 = (void (*)(char *))v1817;
        }
        else
        {
          uint64_t v1435 = (uint64_t)v1822;
          v1436 = (uint64_t *)&v1822[*((int *)v1809 + 12)];
          v1437 = (void (*)(char *))v1817;
          ((void (*)(char *, char *, uint64_t))v1810)(v1822, v1817, v1932);
          v1385 = v1437;
          swift_storeEnumTagMultiPayload();
          v1438 = Fields.all.unsafeMutableAddressor();
          unint64_t v1439 = v1805;
          uint64_t *v1436 = *v1438;
          v1436[1] = v1439;
          v1436[2] = v1806;
          swift_storeEnumTagMultiPayload();
          uint64_t v1423 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1435);
          v1432(v1435, v1423);
LABEL_568:
          v1136 = v1795;
          unsigned int v1137 = v1825;
        }
        v1135 = (void (*)(void, void, void))v1801;
        v1397 = v1754;
      }
      else
      {
        uint64_t v1423 = v1823;
        unsigned int v1137 = v1825;
        v1135 = (void (*)(void, void, void))v1801;
      }
    }
    else
    {
      uint64_t v1423 = v1823;
      unsigned int v1137 = v1825;
      v1135 = (void (*)(void, void, void))v1801;
      v1136 = v1383;
    }
    if (sub_1006A7344(2, v1860))
    {
      uint64_t v1442 = v1799;
      ((void (*)(char *, char *, uint64_t))v1820)(v1397, (char *)v1796, v1799);
      uint64_t v1443 = v1803;
      if (v1816((uint64_t)v1397, 1, v1803) == 1)
      {
        (*(void (**)(char *, uint64_t))(v1798 + 8))(v1397, v1442);
        v1135 = (void (*)(void, void, void))v1801;
        unsigned int v1137 = v1825;
      }
      else
      {
        v1444 = &v1397[*(int *)(v1443 + 52)];
        v1445 = v1397;
        uint64_t v1446 = v1736;
        v1447 = v1735;
        v1448 = v1743;
        (*(void (**)(char *, char *, int *))(v1736 + 16))(v1735, v1444, v1743);
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1445, v1443);
        int v1449 = v1447[v1448[11]];
        v1136 = v1795;
        (*(void (**)(char *, int *))(v1446 + 8))(v1447, v1448);
        v1135 = (void (*)(void, void, void))v1801;
        unsigned int v1137 = v1825;
        if (v1449 != 3 && !(v1812 & 1 | !static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1449, 2)))
        {
          uint64_t v1450 = v1828;
          uint64_t v1451 = swift_getAssociatedConformanceWitness();
          uint64_t v1452 = v1932;
          *(void *)&long long v1843 = v1932;
          *((void *)&v1843 + 1) = v1450;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1451;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v1453 = &v1822[*(int *)(swift_getTupleTypeMetadata2() + 48)];
          (*(void (**)(char *, void (*)(char *), uint64_t))(v1833 + 16))(v1822, v1385, v1452);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)v1453 = 770;
          uint64_t v1454 = v1806;
          *((void *)v1453 + 1) = v1805;
          *((void *)v1453 + 2) = v1454;
          uint64_t v1455 = (uint64_t)v1822;
          v1136 = v1795;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1455);
          uint64_t v1456 = v1455;
          unsigned int v1137 = v1825;
          v1135 = (void (*)(void, void, void))v1801;
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1456, v1423);
        }
      }
    }
    if (!v1137)
    {
      uint64_t v1457 = v1860;
      sub_10002B7CC((uint64_t *)&unk_100AD6FD0);
      uint64_t v1458 = swift_allocObject();
      v1459._uint64_t countAndFlagsBits = sub_10038FCB0(v1458, 2);
      *(_OWORD *)v1459._object = xmmword_100973BB0;
      uint64_t v1460 = Filename.init(rawValue:)(v1459).rawValue._countAndFlagsBits;
      uint64_t v1461 = sub_1006F2F28(v1460);
      swift_bridgeObjectRelease();
      if (!sub_10083418C(v1461, v1457))
      {
        uint64_t v1462 = ItemMetadata;
        sub_1008764AC(v1385, v1839, (uint64_t)v1829);
        if (v1462)
        {
          v1463 = v1385;
          uint64_t v1464 = v1798;
          v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
          v730 = v1835;
          v729(v1819, v1835);
          v1465 = *(void (**)(uint64_t, uint64_t))(v1464 + 8);
          uint64_t v1466 = v1799;
          v1465(v1796, v1799);
          v1465((uint64_t)v1801, v1466);
          v1467 = v1463;
          goto LABEL_647;
        }
        uint64_t ItemMetadata = 0;
      }
      v1135 = (void (*)(void, void, void))v1801;
      uint64_t v1131 = v1814;
      v1136 = v1795;
      unsigned int v1137 = v1825;
      goto LABEL_590;
    }
    uint64_t v1131 = v1814;
LABEL_590:
    uint64_t v1130 = v1932;
LABEL_591:
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v1131 + 72))(v1130, v1131) & 1) != 0
      && sub_1006A7344(8, v1860))
    {
      uint64_t v1468 = v1803;
      if (v1137 < 2)
      {
        v1469 = v1722;
        uint64_t v1470 = v1799;
        ((void (*)(char *, char *, uint64_t))v1820)(v1722, (char *)v1796, v1799);
        v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
        v1472 = v1136;
        if (v1816((uint64_t)v1469, 1, v1468) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1798 + 8))(v1469, v1470);
        }
        else
        {
          uint64_t v1489 = v1468;
          BOOL v1490 = sub_100827AAC(v1468);
          uint64_t v1491 = v1489;
          v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1469, v1491);
          if (v1490)
          {
            uint64_t v1492 = v1828;
            uint64_t v1493 = swift_getAssociatedConformanceWitness();
            uint64_t v1494 = v1932;
            *(void *)&long long v1843 = v1932;
            *((void *)&v1843 + 1) = v1492;
            *(void *)&long long v1844 = v1814;
            *((void *)&v1844 + 1) = v1493;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v1495 = swift_getTupleTypeMetadata2();
            uint64_t v1496 = (uint64_t)v1822;
            v1497 = &v1822[*(int *)(v1495 + 48)];
            v1498 = v1817;
            (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1494);
            swift_storeEnumTagMultiPayload();
            v1499 = v1742;
            uint64_t v1500 = swift_getTupleTypeMetadata3();
            uint64_t v1501 = *(int *)(v1500 + 48);
            uint64_t v1502 = *(int *)(v1500 + 64);
            (*(void (**)(char *, char *, int *))(*((void *)v1499 - 1) + 16))(v1497, &v1498[v1835[10]], v1499);
            v1497[v1501] = 1;
            v1497[v1502] = 0;
            uint64_t v1470 = v1799;
            v1472 = v1795;
            v1135 = (void (*)(void, void, void))v1801;
            swift_storeEnumTagMultiPayload();
            uint64_t v1503 = v1823;
            swift_storeEnumTagMultiPayload();
            sub_100591758((uint64_t)v1829, v1496);
            (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1496, v1503);
          }
        }
        v1488 = v1135;
        if (sub_1005152D8())
        {
          uint64_t v1504 = v1837;
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          v1505 = v1831;
          uint64_t v1506 = v1805;
          uint64_t v1507 = v1806;
          uint64_t v1508 = sub_1008AA778((uint64_t)v1831, v1805, v1806, 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_1004D4360((uint64_t)v1829, v1508);
          swift_release();
          *(void *)&long long v1843 = v1504;
          v1472 = v1795;
          *((void *)&v1843 + 1) = v1834;
          v1509 = v1816;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for Ingestion.ReSnapshotChildren();
          uint64_t v1510 = (uint64_t)v1505;
          uint64_t v1470 = v1799;
          uint64_t v1511 = v1507;
          v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1509;
          uint64_t v1512 = sub_1008AA69C(v1510, v1506, v1511, 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
          sub_1004D4360((uint64_t)v1829, v1512);
          swift_release();
        }
        uint64_t v1468 = v1803;
LABEL_612:
        v1513 = v1752;
        ((void (*)(char *, char *, uint64_t))v1820)(v1752, (char *)v1796, v1470);
        if (v1471(v1513, 1, v1468) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1798 + 8))(v1513, v1470);
          v1514 = v1472;
          goto LABEL_624;
        }
        uint64_t v1515 = v1932;
        uint64_t v1516 = v1800;
        uint64_t v1517 = (uint64_t)v1746;
        (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1746, v1513, v1468);
        BOOL v1518 = sub_1006A7344(4, *(void *)(v1517 + v1786[19]));
        uint64_t v1519 = v1468;
        int v1520 = v1817[v1835[12] + v1472[23]];
        if (v1518 == v1520)
        {
          v1514 = v1472;
          (*(void (**)(uint64_t, uint64_t))(v1516 + 8))(v1517, v1519);
          uint64_t v1468 = v1519;
          v1488 = (void (*)(void, void, void))v1801;
          v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
          goto LABEL_624;
        }
        uint64_t v1521 = v1828;
        uint64_t v1522 = swift_getAssociatedConformanceWitness();
        if (!v1520)
        {
          *(void *)&long long v1843 = v1515;
          *((void *)&v1843 + 1) = v1521;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1522;
          type metadata accessor for ReconciliationID();
          uint64_t v1537 = swift_getTupleTypeMetadata2();
          uint64_t v1538 = (uint64_t)v1822;
          v1539 = &v1822[*(int *)(v1537 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1515);
          swift_storeEnumTagMultiPayload();
          *(void *)v1539 = 4;
          v1539[8] = 1;
          uint64_t v1540 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1538);
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1538, v1540);
          uint64_t v1541 = ItemMetadata;
          sub_100110DCC(v1517, v1839);
          uint64_t v1542 = v1800;
          uint64_t ItemMetadata = v1541;
          if (!v1541)
          {
            uint64_t v1468 = v1803;
            v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
            v1514 = v1795;
            uint64_t v1534 = v1517;
            goto LABEL_623;
          }
          (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v1517, v1803);
          v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
          v730 = v1835;
          v729(v1819, v1835);
          v1543 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
          uint64_t v1544 = v1799;
          v1543(v1796, v1799);
          v1543((uint64_t)v1801, v1544);
          v1467 = (void (*)(char *))v1817;
          goto LABEL_647;
        }
        uint64_t v1523 = v1515;
        *(void *)&long long v1843 = v1515;
        *((void *)&v1843 + 1) = v1521;
        *(void *)&long long v1844 = v1814;
        *((void *)&v1844 + 1) = v1522;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1524 = swift_getTupleTypeMetadata2();
        uint64_t v1525 = (uint64_t)v1822;
        v1526 = &v1822[*(int *)(v1524 + 48)];
        v1831 = *(void (**)(void, void, void))(v1833 + 16);
        v1527 = v1817;
        v1831(v1822, v1817, v1523);
        swift_storeEnumTagMultiPayload();
        *(void *)v1526 = 0;
        *((void *)v1526 + 1) = 0;
        *((void *)v1526 + 2) = 0xB000000000000000;
        *(_OWORD *)(v1526 + 24) = 0u;
        *(_OWORD *)(v1526 + 40) = 0u;
        v1526[56] = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        v1528 = v1829;
        sub_100591758((uint64_t)v1829, v1525);
        v1825 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v1827 + 8);
        ((void (*)(uint64_t, uint64_t))v1825)(v1525, v1823);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1529 = v1525 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        v1530 = v1527;
        v1531 = (void (*)(uint64_t, char *, uint64_t))v1831;
        v1831(v1525, v1530, v1932);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v1529 = 0;
        *(void *)(v1529 + 8) = 0;
        *(void *)(v1529 + 16) = 0xB000000000000000;
        *(_OWORD *)(v1529 + 24) = 0u;
        *(_OWORD *)(v1529 + 40) = 0u;
        *(unsigned char *)(v1529 + 56) = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1528, v1525);
        v1532 = (void (*)(uint64_t, uint64_t))v1825;
        ((void (*)(uint64_t, uint64_t))v1825)(v1525, v1823);
        uint64_t v1533 = v1525 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        v1531(v1525, v1817, v1932);
        uint64_t v1534 = (uint64_t)v1746;
        uint64_t v1535 = v1823;
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v1533 = 4;
        *(unsigned char *)(v1533 + 8) = 0;
        swift_storeEnumTagMultiPayload();
        sub_100591758((uint64_t)v1829, v1525);
        v1532(v1525, v1535);
        uint64_t v1536 = ItemMetadata;
        sub_100110DCC(v1534, v1839);
        if (v1536)
        {
          (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v1534, v1803);
          goto LABEL_645;
        }
        uint64_t ItemMetadata = 0;
        v1514 = v1795;
        uint64_t v1468 = v1803;
        uint64_t v1542 = v1800;
        v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
LABEL_623:
        (*(void (**)(uint64_t, uint64_t))(v1542 + 8))(v1534, v1468);
        uint64_t v1470 = v1799;
        v1488 = (void (*)(void, void, void))v1801;
LABEL_624:
        v1545 = v1751;
        ((void (*)(char *, char *, uint64_t))v1820)(v1751, (char *)v1796, v1470);
        if (v1471(v1545, 1, v1468) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1798 + 8))(v1545, v1470);
          goto LABEL_632;
        }
        uint64_t v1546 = v1800;
        uint64_t v1547 = (uint64_t)v1741;
        (*(void (**)(char *, char *, uint64_t))(v1800 + 32))(v1741, v1545, v1468);
        BOOL v1548 = sub_1006A7344(8, *(void *)(v1547 + v1786[19]));
        v1549 = v1817;
        v1550 = v1514;
        int v1551 = v1817[v1835[12] + v1514[24]];
        if (v1548 == v1551)
        {
          (*(void (**)(uint64_t, uint64_t))(v1546 + 8))(v1547, v1468);
          v1488 = (void (*)(void, void, void))v1801;
          v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
          v1514 = v1550;
        }
        else
        {
          uint64_t v1552 = (uint64_t)v1728;
          uint64_t v1553 = v1932;
          (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1728, v1817, v1932);
          uint64_t v1554 = v1828;
          uint64_t v1555 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1843 = v1553;
          *((void *)&v1843 + 1) = v1554;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1555;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v1556 = v1552 + *(int *)(swift_getTupleTypeMetadata2() + 48);
          *(void *)uint64_t v1556 = 8;
          *(unsigned char *)(v1556 + 8) = v1551 ^ 1;
          uint64_t v1557 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758((uint64_t)v1829, v1552);
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1552, v1557);
          uint64_t v1558 = ItemMetadata;
          sub_100110DCC(v1547, v1839);
          uint64_t ItemMetadata = v1558;
          if (v1558)
          {
            (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v1547, v1803);
            v834 = (void (*)(char *))v1549;
            uint64_t v835 = v1798;
            v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
            v730 = v1835;
            v729(v1819, v1835);
LABEL_629:
            v1559 = *(void (**)(uint64_t, uint64_t))(v835 + 8);
            uint64_t v1560 = v1799;
            v1559(v1796, v1799);
            v1559((uint64_t)v1801, v1560);
            v1467 = v834;
LABEL_647:
            v729((uint64_t)v1467, v730);
            return v284 & 1;
          }
          (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v1547, v1803);
          v1514 = v1795;
          uint64_t v1470 = v1799;
          v1488 = (void (*)(void, void, void))v1801;
          v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
        }
LABEL_632:
        if (sub_1005152D8())
        {
          v1561 = v1737;
          ((void (*)(char *, char *, uint64_t))v1820)(v1737, (char *)v1796, v1470);
          uint64_t v1562 = v1803;
          if (v1471(v1561, 1, v1803) == 1)
          {
            uint64_t v1563 = ItemMetadata;
            (*(void (**)(char *, uint64_t))(v1798 + 8))(v1561, v1470);
            int v1564 = 2;
          }
          else
          {
            uint64_t v1563 = ItemMetadata;
            uint64_t v1567 = v1562;
            uint64_t v1568 = *(void *)&v1561[*(int *)(v1562 + 76)];
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1561, v1567);
            int v1564 = sub_1006A7344(2, v1568);
          }
          uint64_t v1569 = v1932;
          v1566 = v1835;
          BOOL v1570 = static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1817[v1835[12] + v1514[22]], 2);
          BOOL v1571 = v1570;
          if (v1564 != 2 && ((v1570 ^ (v1564 != 0)) & 1) == 0)
          {
            uint64_t ItemMetadata = v1563;
            goto LABEL_649;
          }
          *(void *)&long long v1843 = v1837;
          *((void *)&v1843 + 1) = v1834;
          *(void *)&long long v1844 = v1836;
          *((void *)&v1844 + 1) = v1830;
          type metadata accessor for ConcreteJobResult();
          uint64_t v1572 = sub_100591720();
          uint64_t v1573 = v1828;
          uint64_t v1574 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1843 = v1569;
          *((void *)&v1843 + 1) = v1573;
          *(void *)&long long v1844 = v1814;
          *((void *)&v1844 + 1) = v1574;
          type metadata accessor for ReconciliationID();
          uint64_t v1575 = swift_getTupleTypeMetadata3();
          if (v1571)
          {
            uint64_t v1576 = *(int *)(v1575 + 48);
            uint64_t v1577 = *(int *)(v1575 + 64);
            uint64_t v1578 = (uint64_t)v1822;
            (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1569);
            swift_storeEnumTagMultiPayload();
            *(void *)(v1578 + v1576) = 2;
            v1579 = sub_100325498(0);
            uint64_t v1580 = sub_1006F2F28((uint64_t)v1579);
            swift_bridgeObjectRelease();
            *(void *)(v1578 + v1577) = v1580;
          }
          else
          {
            uint64_t v1581 = *(int *)(v1575 + 48);
            uint64_t v1582 = v1569;
            uint64_t v1583 = *(int *)(v1575 + 64);
            uint64_t v1578 = (uint64_t)v1822;
            (*(void (**)(char *, char *, uint64_t))(v1833 + 16))(v1822, v1817, v1582);
            swift_storeEnumTagMultiPayload();
            v1584 = sub_100325498(0);
            uint64_t v1585 = sub_1006F2F28((uint64_t)v1584);
            swift_bridgeObjectRelease();
            *(void *)(v1578 + v1581) = v1585;
            *(void *)(v1578 + v1583) = 2;
          }
          uint64_t v1586 = v1823;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v1572, v1578);
          (*(void (**)(uint64_t, uint64_t))(v1827 + 8))(v1578, v1586);
          uint64_t v1587 = sub_10063ADA8();
          sub_10059C6F4(v1572, v1587);
          if (v1563)
          {
            swift_release();
LABEL_645:
            v729 = *(void (**)(uint64_t, int *))(v1832 + 8);
            v730 = v1835;
            v729(v1819, v1835);
            v732 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
            uint64_t v731 = v1799;
            v732(v1796, v1799);
            goto LABEL_646;
          }
          uint64_t ItemMetadata = 0;
          swift_release();
          v1566 = v1835;
LABEL_649:
          v1488 = (void (*)(void, void, void))v1801;
          uint64_t v1565 = v1796;
        }
        else
        {
          uint64_t v1565 = v1796;
          v1566 = v1835;
        }
        v1588 = *(void (**)(uint64_t, int *))(v1832 + 8);
        v1588(v1819, v1566);
        v1589 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
        uint64_t v1590 = v1565;
        uint64_t v1591 = v1799;
        v1589(v1590, v1799);
        v1589((uint64_t)v1488, v1591);
        v1588((uint64_t)v1817, v1566);
LABEL_11:
        char v284 = 0;
        return v284 & 1;
      }
      uint64_t v1470 = v1799;
      if (v1137 != 2)
      {
LABEL_606:
        v1472 = v1136;
        v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
        v1488 = v1135;
        goto LABEL_612;
      }
    }
    else
    {
      uint64_t v1470 = v1799;
      uint64_t v1468 = v1803;
      if (v1137 != 2) {
        goto LABEL_606;
      }
    }
    uint64_t v1473 = (uint64_t)v1744;
    v1474 = v1817;
    ((void (*)(char *, char *, int *))v1792)(v1744, v1817, v1835);
    uint64_t Strong = (void *)swift_weakLoadStrong();
    if (!Strong)
    {
      __break(1u);
LABEL_724:
      swift_errorRelease();
      __break(1u);
      swift_errorRelease();
      __break(1u);
      goto LABEL_725;
    }
    uint64_t v1476 = ItemMetadata;
    uint64_t v1477 = sub_1008754D4(v1473, Strong);
    uint64_t v1478 = v1830;
    uint64_t v862 = v1476;
    if (!v1476)
    {
      uint64_t v1480 = v1477;
      (*(void (**)(uint64_t, int *))(v1832 + 8))(v1473, v1835);
      swift_release();
      *(void *)&long long v1843 = v1837;
      *((void *)&v1843 + 1) = v1834;
      *(void *)&long long v1844 = v1836;
      *((void *)&v1844 + 1) = v1478;
      uint64_t v1481 = type metadata accessor for Job();
      uint64_t v1482 = sub_10096C1A0();
      uint64_t ItemMetadata = 0;
      if (!v1482)
      {
LABEL_604:
        swift_bridgeObjectRelease();
        v1472 = v1795;
        uint64_t v1470 = v1799;
        uint64_t v1468 = v1803;
        v1488 = (void (*)(void, void, void))v1801;
        v1471 = (unsigned int (*)(char *, uint64_t, uint64_t))v1816;
        goto LABEL_612;
      }
      uint64_t v1483 = 0;
      while (1)
      {
        v1484 = sub_10010D86C(&v1843, v1483, v1480, v1481);
        uint64_t v1486 = *v1485;
        swift_retain();
        ((void (*)(long long *, void))v1484)(&v1843, 0);
        uint64_t v1487 = v1483 + 1;
        if (__OFADD__(v1483, 1)) {
          break;
        }
        sub_1004D4360((uint64_t)v1829, v1486);
        swift_release();
        ++v1483;
        if (v1487 == sub_10096C1A0()) {
          goto LABEL_604;
        }
      }
LABEL_667:
      __break(1u);
LABEL_668:
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1700 + 6))(v1672, 1, v1733) == 1)
      {
        uint64_t v1330 = v1828;
        (*(void (**)(char *, uint64_t))(v1766 + 8))(v1673, v1828);
        (*(void (**)(char *, uint64_t))(v1696 + 8))(v1672, v1721);
      }
      else
      {
LABEL_688:
        uint64_t v1616 = v1733;
        (*((void (**)(char *, char *, uint64_t))v1700 + 4))(v1667, v1672, v1733);
        uint64_t v1617 = swift_getWitnessTable();
        if ((FileItem.isDataless.getter(v1616, v1617) & 1) == 0)
        {
          char v1618 = v1667[*(int *)(v1733 + 48) + v1795[21]];
          if (!static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1618, 3)
            && !static PackageInternalLookupPolicy.__derived_enum_equals(_:_:)(v1618, 2))
          {
            *(void *)&long long v1843 = v1837;
            *((void *)&v1843 + 1) = v1834;
            *(void *)&long long v1844 = v1836;
            *((void *)&v1844 + 1) = v1830;
            uint64_t v1619 = type metadata accessor for Conflict.PopulateConflicts();
            uint64_t v1620 = sub_100437D58(v1619);
            uint64_t v1622 = sub_1008AA8E0((uint64_t)v1817, v1620, v1621, 0x8000000);
            sub_1004D4360((uint64_t)v1829, v1622);
            swift_release();
          }
        }
        (*((void (**)(char *, uint64_t))v1700 + 1))(v1667, v1733);
        uint64_t v1330 = v1828;
        (*(void (**)(char *, uint64_t))(v1766 + 8))(v1673, v1828);
      }
      v1314 = v1835;
      uint64_t v1283 = v1932;
      continue;
    }
    break;
  }
  swift_release();
  v779 = *(void (**)(uint64_t, int *))(v1832 + 8);
  uint64_t v1479 = v1473;
  v781 = v1474;
  v780 = v1835;
  v779(v1479, v1835);
  v779(v1819, v780);
LABEL_244:
  v782 = *(void (**)(uint64_t, uint64_t))(v1798 + 8);
  uint64_t v783 = v1799;
  v782(v1796, v1799);
  v782((uint64_t)v1801, v783);
  v779((uint64_t)v781, v780);
  return v284 & 1;
}

uint64_t sub_100885DF4(uint64_t a1)
{
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_10096C890();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, v2);
  return sub_10096BCC0();
}

uint64_t sub_100885ECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnapshotItem();
  uint64_t v3 = sub_10096C890();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-v5];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(&v11[-v5], a1, v3);
  uint64_t v7 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1)
  {
    char v8 = 4;
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v8 = FileItem.kind.getter(v2, WitnessTable);
    uint64_t v4 = v7;
    uint64_t v3 = v2;
  }
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  v11[15] = v8;
  sub_10002B7CC((uint64_t *)&unk_100AD6840);
  return sub_10096BCC0();
}

uint64_t sub_100886070(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(*(void *)a2 + 96);
  long long v20 = *(_OWORD *)(*(void *)a2 + 80);
  long long v21 = v3;
  long long v22 = v20;
  long long v23 = v3;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v4 = sub_10096C890();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  if (!sub_1005152D8()) {
    goto LABEL_5;
  }
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, AssociatedTypeWitness);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
LABEL_5:
    char v13 = 1;
    return v13 & 1;
  }
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  if (v13) {
    goto LABEL_5;
  }
  uint64_t v15 = v24;
  sub_1000DEDD8(a1, (uint64_t)v6);
  if (!v15)
  {
    char v13 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1) != 1;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  }
  return v13 & 1;
}

unint64_t sub_10088636C(uint64_t a1, int a2, void *a3)
{
  LODWORD(v69) = a2;
  uint64_t v76 = a1;
  uint64_t v5 = (void *)*a3;
  uint64_t v6 = sub_10096B480();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(char *, uint64_t))v5[11];
  uint64_t v9 = v5[12];
  uint64_t v10 = v5[13];
  unint64_t v77 = v5[10];
  unint64_t v78 = (unint64_t)v8;
  uint64_t v70 = v10;
  uint64_t v71 = v8;
  uint64_t v79 = v9;
  uint64_t v80 = v10;
  uint64_t v11 = type metadata accessor for ItemReconciliation();
  uint64_t v12 = sub_10096C890();
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v75 = v11;
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v63 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  long long v22 = (char *)&v63 - v21;
  __chkstk_darwin(v20);
  uint64_t v73 = (char *)&v63 - v23;
  if (!sub_1005152D8()) {
    return 0;
  }
  unint64_t v24 = a3[2];
  sub_1000DEDD8(v76, (uint64_t)v15);
  if (!v3)
  {
    uint64_t v25 = v74;
    uint64_t v26 = v75;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v15, 1, v75) == 1)
    {
      unint64_t v24 = 0xD000000000000025;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v15, v12);
      return v24;
    }
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v28 = v25;
    uint64_t v29 = v73;
    v27(v73, v15, v26);
    uint64_t v30 = v29;
    uint64_t v31 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v32 = *(void *)&v29[*(int *)(v31 + 36)];
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
      return 0xD000000000000022;
    }
    uint64_t v33 = v31;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v76 = v28 + 16;
    v34(v22, v30, v26);
    if ((v32 & 0x10) != 0)
    {
      BOOL v37 = sub_100827AAC(v26);
      uint64_t v38 = v22;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v38, v26);
      if (!v37)
      {
        v36(v73, v26);
        return 0xD000000000000023;
      }
      uint64_t v30 = v73;
    }
    else
    {
      uint64_t v35 = v22;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v35, v26);
    }
    if (v30[*(int *)(v33 + 52)])
    {
      uint64_t v39 = (uint64_t *)v75;
      uint64_t v40 = &v30[*(int *)(v75 + 52)];
      int v41 = v40[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)];
      if (v41 != 3)
      {
        if (v41 != 4)
        {
          unint64_t v77 = 0;
          unint64_t v78 = 0xE000000000000000;
          uint64_t v39 = (uint64_t *)&v77;
          sub_10096CBD0(40);
          swift_bridgeObjectRelease();
          unint64_t v77 = 0xD000000000000025;
          unint64_t v78 = 0x80000001009A5A40;
          uint64_t v46 = (void *)0xE700000000000000;
          v47._uint64_t countAndFlagsBits = 0x676E69646E6570;
          switch(v41)
          {
            case 0:
              goto LABEL_33;
            case 1:
              uint64_t v46 = (void *)0xE600000000000000;
              v47._uint64_t countAndFlagsBits = 0x746E65726170;
              goto LABEL_33;
            case 2:
              uint64_t v46 = (void *)0xE600000000000000;
              v47._uint64_t countAndFlagsBits = 0x7463656C6573;
              goto LABEL_33;
            case 3:
            case 4:
              __break(1u);
              JUMPOUT(0x100886C54);
            case 5:
              v47._uint64_t countAndFlagsBits = 0x70756E61656C63;
LABEL_33:
              v47._object = v46;
              sub_10096BDC0(v47);
              swift_bridgeObjectRelease();
              v82._uint64_t countAndFlagsBits = 41;
              v82._object = (void *)0xE100000000000000;
              sub_10096BDC0(v82);
              unint64_t v24 = v77;
              v36(v30, v75);
              return v24;
            default:
              break;
          }
        }
        uint64_t v42 = v30;
        uint64_t v43 = v39;
        goto LABEL_18;
      }
      int v45 = v69;
      v36(v30, (uint64_t)v39);
      if (v45 == 4) {
        return 0;
      }
      else {
        return 0xD00000000000003FLL;
      }
    }
    else
    {
      if (!sub_1005152D8())
      {
        v36(v30, v75);
        return 0xD00000000000002BLL;
      }
      if (v69 == 4)
      {
        uint64_t v42 = v30;
        uint64_t v43 = (uint64_t *)v75;
LABEL_18:
        v36(v42, (uint64_t)v43);
        return 0;
      }
      if ((v30[*(int *)(v33 + 56)] | 2) == 6)
      {
        uint64_t v71 = v36;
        uint64_t v72 = 0;
        id v48 = (id)fpfs_current_or_default_log();
        uint64_t v49 = v68;
        sub_10096B490();
        uint64_t v50 = v65;
        uint64_t v51 = v75;
        v34(v65, v30, v75);
        uint64_t v52 = sub_10096B470();
        os_log_type_t v53 = sub_10096C5C0();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = v50;
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          unint64_t v77 = v70;
          uint64_t v69 = v55;
          *(_DWORD *)uint64_t v55 = 136315138;
          uint64_t v63 = v55 + 4;
          uint64_t v56 = v64;
          v34(v64, v54, v51);
          uint64_t v57 = v54;
          uint64_t v58 = v71;
          v71(v57, v51);
          uint64_t v59 = sub_10082F470(v51);
          unint64_t v61 = v60;
          v58(v56, v51);
          uint64_t v81 = sub_100719D44(v59, v61, (uint64_t *)&v77);
          sub_10096C8C0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "🤦🏼‍♂️  inconsistent children status for item %s", v69, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v67);
          v58(v73, v51);
        }
        else
        {
          uint64_t v62 = v71;
          v71(v50, v51);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
          v62(v30, v51);
        }
        return 0;
      }
      else
      {
        v36(v30, v75);
        return 0xD000000000000054;
      }
    }
  }
  return v24;
}

uint64_t sub_100886C6C@<X0>(uint64_t (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v133 = a5;
  LODWORD(v130) = a4;
  int v132 = a3;
  uint64_t v154 = a2;
  uint64_t v138 = a1;
  uint64_t v140 = a7;
  uint64_t v8 = *a6;
  uint64_t v127 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v127);
  uint64_t v128 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(ValueMetadata **)(v8 + 96);
  uint64_t v135 = *(void *)(v8 + 80);
  uint64_t v136 = v10;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v143 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v123 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v141 = (char *)&v118 - v14;
  uint64_t v139 = v15;
  uint64_t v144 = sub_10096C890();
  uint64_t v142 = *(void *)(v144 - 8);
  uint64_t v16 = __chkstk_darwin(v144);
  uint64_t v129 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v137 = (char **)((char *)&v118 - v19);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v126 = (char *)&v118 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v134 = (unint64_t)&v118 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v125 = (char *)&v118 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v124 = (char *)&v118 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v118 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v118 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v118 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v118 - v38;
  __chkstk_darwin(v37);
  int v41 = (char *)&v118 - v40;
  uint64_t v42 = a6[4];
  uint64_t v43 = v145;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v42 + 240))(v154, 1);
  if (!v43)
  {
    uint64_t v118 = v36;
    uint64_t v119 = v30;
    uint64_t v120 = v33;
    uint64_t v121 = a6;
    uint64_t v145 = 0;
    uint64_t v131 = v41;
    uint64_t v45 = v142;
    uint64_t v47 = v142 + 16;
    uint64_t v46 = *(char ***)(v142 + 16);
    ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v46)(v39, v138, v144);
    uint64_t v48 = v143;
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 48);
    uint64_t v50 = v139;
    uint64_t v122 = v143 + 48;
    uint64_t v138 = v49;
    if (v49(v39, 1, v139) == 1)
    {
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v142 = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v52 = v39;
      uint64_t v53 = v144;
      v51(v52, v144);
      ((void (*)(char **, char *, uint64_t))v46)(v137, v131, v53);
      uint64_t v54 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v129, 1, 1, v50);
      BOOL v55 = sub_1005152D8();
      uint64_t v56 = v136;
      uint64_t v57 = v140;
      uint64_t v58 = (char *)v137;
      uint64_t v59 = v135;
      sub_100874C20((uint64_t)v137, v54, v154, 0, v55 && (v133 & 0x400000) == 0, 0x6C6564206D657469, 0xEC00000064657465, v135, v140, v117, v136);
      v51((char *)v54, v53);
      v51(v58, v53);
      uint64_t v149 = v59;
      uint64_t v150 = v59;
      uint64_t v151 = v56;
      uint64_t v152 = v56;
      uint64_t v60 = type metadata accessor for ItemChange();
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v57, 0, 1, v60);
      return ((uint64_t (*)(char *, uint64_t))v51)(v131, v53);
    }
    uint64_t v137 = v46;
    uint64_t v61 = (uint64_t)v141;
    uint64_t v129 = *(char **)(v48 + 32);
    ((void (*)(char *, char *, uint64_t))v129)(v141, v39, v50);
    if (v130)
    {
      uint64_t v130 = v47;
      uint64_t v62 = v50;
    }
    else
    {
      uint64_t v71 = v145;
      unint64_t v72 = sub_10086F2C4(v61, v61 + *(int *)(v50 + 36), v132, v121);
      if (v71)
      {
        (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v61, v50);
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v131, v144);
      }
      uint64_t v74 = v73;
      uint64_t v62 = v50;
      uint64_t v145 = 0;
      if (v73)
      {
        unint64_t v134 = v72;
        if (!sub_1005152D8()
          || (uint64_t v75 = v118,
              uint64_t v76 = v144,
              ((void (*)(char *, char *, uint64_t))v137)(v118, v131, v144),
              LODWORD(v138) = v138(v75, 1, v50),
              unint64_t v77 = *(void (**)(char *, uint64_t))(v142 + 8),
              v77(v75, v76),
              v138 == 1))
        {
          uint64_t v78 = (uint64_t)v120;
          uint64_t v79 = v144;
          ((void (*)(char *, char *, uint64_t))v137)(v120, v131, v144);
          uint64_t v80 = v143;
          uint64_t v81 = (uint64_t)v119;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v119, 1, 1, v62);
          BOOL v82 = sub_1005152D8();
          uint64_t v83 = v135;
          sub_100874C20(v78, v81, v154, 0, v82, v134, v74, v135, v140, v117, v136);
          swift_bridgeObjectRelease();
          uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
          v84(v81, v79);
          v84((uint64_t)v120, v79);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v141, v139);
          uint64_t v149 = v83;
          uint64_t v150 = v83;
          uint64_t v151 = v136;
          uint64_t v152 = v136;
          uint64_t v85 = type metadata accessor for ItemChange();
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v140, 0, 1, v85);
          return ((uint64_t (*)(char *, uint64_t))v84)(v131, v79);
        }
        (*(void (**)(char *, uint64_t))(v143 + 8))(v141, v62);
        uint64_t v114 = v140;
        uint64_t v115 = v135;
        *uint64_t v140 = v134;
        v114[1] = v74;
        uint64_t v149 = v115;
        uint64_t v150 = v115;
        uint64_t v151 = v136;
        uint64_t v152 = v136;
        uint64_t v116 = type metadata accessor for ItemChange();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v114, 0, 1, v116);
        uint64_t v112 = v144;
        return ((uint64_t (*)(char *, uint64_t))v77)(v131, v112);
      }
      uint64_t v130 = v47;
    }
    uint64_t v63 = v144;
    uint64_t v64 = v131;
    uint64_t v65 = v134;
    uint64_t v66 = v128;
    sub_10001AE98((uint64_t)&v141[*(int *)(v62 + 52)], (uint64_t)v148, &qword_100AD0EA0);
    sub_10001AE98((uint64_t)v148, (uint64_t)&v149, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)&v149) != 1)
    {
      uint64_t v67 = v124;
      ((void (*)(char *, char *, uint64_t))v137)(v124, v64, v63);
      int v68 = v138(v67, 1, v62);
      uint64_t v69 = v63;
      uint64_t v70 = *(void (**)(char *, uint64_t))(v142 + 8);
      v70(v67, v69);
      if (v68 != 1
        && (v138(v64, 1, v62)
         || (sub_10001AE98((uint64_t)&v64[*(int *)(v62 + 52)], (uint64_t)v146, &qword_100AD0EA0),
             sub_10001AE98((uint64_t)v146, (uint64_t)v147, &qword_100AD0EA0),
             sub_1000DBD64((uint64_t)v147) == 1)))
      {
        if (!v138(v64, 1, v62))
        {
          uint64_t v113 = v145;
          (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v42 + 264))(v153, v154);
          uint64_t v145 = v113;
          uint64_t v66 = v128;
          if (v113)
          {
            (*(void (**)(char *, uint64_t))(v143 + 8))(v141, v62);
            return ((uint64_t (*)(char *, uint64_t))v70)(v131, v144);
          }
          sub_1003A99F0((uint64_t)v153, (uint64_t)&v131[*(int *)(v62 + 52)]);
          uint64_t v63 = v144;
          uint64_t v65 = v134;
          goto LABEL_20;
        }
        uint64_t v63 = v144;
      }
      else
      {
        uint64_t v63 = v144;
      }
      uint64_t v65 = v134;
      uint64_t v66 = v128;
    }
LABEL_20:
    uint64_t v86 = v125;
    ((void (*)(void))v137)();
    int v87 = v138(v86, 1, v62);
    uint64_t v88 = v127;
    uint64_t v89 = v63;
    if (v87 == 1)
    {
      uint64_t v90 = v142;
      uint64_t v91 = v89;
      (*(void (**)(char *, uint64_t))(v142 + 8))(v86, v89);
      uint64_t v92 = v136;
      uint64_t v93 = v143;
      uint64_t v94 = v141;
    }
    else
    {
      uint64_t v95 = (uint64_t)v66;
      uint64_t v91 = v89;
      uint64_t v96 = v86;
      uint64_t v97 = v123;
      ((void (*)(char *, char *, uint64_t))v129)(v123, v96, v62);
      sub_10010DA98((uint64_t)&v97[*(int *)(v62 + 48)], v95);
      uint64_t v93 = v143;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v97, v62);
      uint64_t v98 = v88;
      char v99 = *(unsigned char *)(v95 + *(int *)(v88 + 48));
      sub_10010DAFC(v95);
      uint64_t v90 = v142;
      uint64_t v94 = v141;
      v141[*(int *)(v62 + 48) + *(int *)(v98 + 48)] = v99;
      uint64_t v65 = v134;
      uint64_t v92 = v136;
    }
    ((void (*)(uint64_t, char *, uint64_t))v137)(v65, v131, v91);
    uint64_t v100 = v65;
    uint64_t v101 = (uint64_t)v126;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v126, v94, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v101, 0, 1, v62);
    BOOL v102 = sub_1005152D8();
    if (v132 == 4) {
      uint64_t v103 = 0x6F7270206D657469;
    }
    else {
      uint64_t v103 = 0x616863206D657469;
    }
    if (v132 == 4) {
      uint64_t v104 = 0xEF64657461676170;
    }
    else {
      uint64_t v104 = 0xEC0000006465676ELL;
    }
    int v105 = v102;
    uint64_t v106 = v100;
    uint64_t v107 = v135;
    sub_100874C20(v106, v101, v154, (v133 & 0x800400000) != 0, v105, v103, v104, v135, v140, v117, v92);
    swift_bridgeObjectRelease();
    unint64_t v77 = *(void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v108 = v101;
    uint64_t v109 = v62;
    uint64_t v110 = v144;
    v77((char *)v108, v144);
    v77((char *)v134, v110);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v141, v109);
    v147[0] = v107;
    v147[1] = v107;
    v147[2] = v92;
    v147[3] = v92;
    uint64_t v111 = type metadata accessor for ItemChange();
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v140, 0, 1, v111);
    uint64_t v112 = v110;
    return ((uint64_t (*)(char *, uint64_t))v77)(v131, v112);
  }
  return result;
}

uint64_t sub_1008879B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v35 = a2;
  if (!a2)
  {
LABEL_14:
    unint64_t v23 = 0xD000000000000016;
    sub_10058DE40(0xD000000000000016, 0x80000001009A6420, 0, 2);
    return v23;
  }
  if (a3) {
    return 0;
  }
  uint64_t v31 = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0())
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10096C1A0();
    uint64_t v25 = v32;
    if (v24)
    {
      uint64_t v26 = 0;
      uint64_t v27 = (void (**)(char *, uint64_t))(v7 + 8);
      while (1)
      {
        BOOL v28 = sub_10096C130();
        sub_10096C0E0();
        if (v28)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v34, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v26, v6);
          uint64_t v29 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t result = sub_10096CC20();
          if (v31 != 8) {
            goto LABEL_32;
          }
          uint64_t v36 = result;
          (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v34, &v36, v6);
          swift_unknownObjectRelease();
          uint64_t v29 = v26 + 1;
          if (__OFADD__(v26, 1))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v34, v6);
        if (sub_1001E0924()) {
          break;
        }
        (*v27)(v25, v6);
        ++v26;
        if (v29 == sub_10096C1A0()) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
      uint64_t v37 = 0xE000000000000000;
      v40._uint64_t countAndFlagsBits = 0x20656C7572;
      v40._object = (void *)0xE500000000000000;
      sub_10096BDC0(v40);
      swift_getWitnessTable();
      sub_10096D270();
      v41._uint64_t countAndFlagsBits = 0x7973756220736920;
      v41._object = (void *)0xE800000000000000;
      sub_10096BDC0(v41);
      swift_release();
      unint64_t v23 = v36;
      (*v27)(v25, v6);
      return v23;
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v18 = 0;
  uint64_t v33 = (void (**)(char *, uint64_t *, uint64_t))(v7 + 16);
  uint64_t v19 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    BOOL v20 = sub_10096C130();
    sub_10096C0E0();
    if (v20)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v17, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v18, v6);
      uint64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
    uint64_t result = sub_10096CC20();
    if (v31 != 8) {
      break;
    }
    uint64_t v36 = result;
    (*v33)(v17, &v36, v6);
    swift_unknownObjectRelease();
    uint64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v17, v6);
    if (sub_1001E0808())
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
      uint64_t v37 = 0xE000000000000000;
      v38._uint64_t countAndFlagsBits = 0x20656C7572;
      v38._object = (void *)0xE500000000000000;
      sub_10096BDC0(v38);
      swift_getWitnessTable();
      sub_10096D270();
      v39._uint64_t countAndFlagsBits = 0x7973756220736920;
      v39._object = (void *)0xE800000000000000;
      sub_10096BDC0(v39);
      unint64_t v23 = v36;
      sub_10058DE40(v36, v37, 0, 2);
      swift_bridgeObjectRelease();
      swift_release();
      (*v19)(v14, v6);
      return v23;
    }
    (*v19)(v14, v6);
    ++v18;
    if (v21 == sub_10096C1A0()) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100887F44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v41 = a4;
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v8 = *(void *)(*a1 + 96);
  uint64_t v9 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v42 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v36 - v13;
  uint64_t v15 = sub_10096B480();
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(uint64_t))(v6 + 216);
  v6 += 216;
  uint64_t v43 = a1;
  v19(v16);
  sub_1001E5564(a2);
  swift_release();
  uint64_t v20 = *(void *)(v6 - 128);
  uint64_t v21 = *(void *)(v6 - 112);
  v49[0] = v7;
  v49[1] = v20;
  v49[2] = v8;
  v49[3] = v21;
  type metadata accessor for ConcreteJobResult();
  uint64_t v22 = sub_100591720();
  id v23 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v14, v48, v9);
  uint64_t v44 = v18;
  uint64_t v25 = sub_10096B470();
  os_log_type_t v26 = sub_10096C590();
  if (os_log_type_enabled(v25, v26))
  {
    os_log_t v39 = v25;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v49[0] = v38;
    uint64_t v40 = v22;
    *(_DWORD *)uint64_t v27 = 136446210;
    v36[1] = v27 + 4;
    uint64_t v37 = v27;
    BOOL v28 = v42;
    v24(v42, (uint64_t)v14, v9);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v14, v9);
    unint64_t v30 = sub_10045016C(v9);
    unint64_t v32 = v31;
    v29(v28, v9);
    v49[5] = sub_100719D44(v30, v32, v49);
    uint64_t v22 = v40;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    os_log_t v33 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, v26, "%{public}s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
  uint64_t v34 = v47;
  sub_1008726B4(v48, 1, v22, v43);
  if (!v34) {
    sub_10059C6F4(v22, v41);
  }
  return swift_release();
}

uint64_t sub_100888370()
{
  return 0x656D2D6863746566;
}

uint64_t sub_100888394()
{
  if ((*(void *)(v0 + 136) & 0x10000) != 0) {
    return 3;
  }
  else {
    return 2 * ((*(void *)(v0 + 136) & 0x8008) != 0);
  }
}

uint64_t sub_1008883B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v28 = a1;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_10096C890();
  uint64_t v24 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void ***)(a2 + 32);
  uint64_t v14 = *(uint64_t (**)(uint64_t))(*v13[2] + 304);
  uint64_t v15 = swift_retain();
  LOBYTE(v14) = v14(v15);
  swift_release();
  if (v14) {
    return 0;
  }
  uint64_t v17 = (char *)v4 + *(void *)(*v4 + 576);
  uint64_t v16 = (uint64_t)v13;
  ((void (*)(char *))(*v13)[35])(v17);
  if (!v3)
  {
    swift_beginAccess();
    sub_1003B32B0((uint64_t)(v4 + 7), (uint64_t)v27);
    uint64_t v18 = v4[15];
    uint64_t v19 = &v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v8, v17, AssociatedTypeWitness);
    uint64_t v20 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v19, v12, v10);
    uint64_t v21 = v26;
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = sub_1001E3E98((uint64_t)v27, v18, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v21);
    sub_1003B3318((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v10);
  }
  return v16;
}

uint64_t sub_10088872C(void *a1, uint64_t a2, uint64_t a3, void (**a4)(char *, char *, void *, uint64_t, void, uint64_t (*)(uint64_t a1), void *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v8 = *v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v39 = sub_10096C890();
  uint64_t v9 = *(void *)(v39 - 8);
  uint64_t v10 = __chkstk_darwin(v39);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v33 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = v8;
  uint64_t v19 = (void *)a1[4];
  uint64_t v36 = (void *)v19[2];
  uint64_t v20 = (char *)v6 + *(void *)(v18 + 576);
  (*(void (**)(char *))(*v19 + 616))(v20);
  uint64_t v21 = v15;
  uint64_t v22 = v39;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v21, v39);
  uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v35 = v12;
  uint64_t v24 = v23(v12, v17, v22);
  uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t))(*a1 + 272))(v24);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a1;
  void v26[3] = v6;
  uint64_t v27 = v41;
  v26[4] = v40;
  v26[5] = v27;
  uint64_t v28 = v36;
  v26[6] = v37;
  uint64_t v40 = (void (**)(char *, char *, void *, uint64_t, void, uint64_t (*)(uint64_t), void *))(*v28 + 504);
  uint64_t v34 = *v40;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = v35;
  v34(v20, v35, v25, v38, 0, sub_1008AEA64, v26);
  swift_release();

  unint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v39;
  v30(v29, v39);
  return ((uint64_t (*)(char *, uint64_t))v30)(v17, v31);
}

uint64_t sub_100888B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v11 = *(void **)a2;
  uint64_t v33 = *(void *)(*(void *)a2 + 80);
  uint64_t v34 = v11[12];
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v12 = sub_10096D510();
  uint64_t v29 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a2;
  uint64_t v18 = swift_allocObject();
  uint64_t v35 = v18;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v33;
  *((void *)v23 + 3) = v11[11];
  *((void *)v23 + 4) = v34;
  *((void *)v23 + 5) = v11[13];
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v19], v16, v29);
  uint64_t v24 = &v23[v20];
  uint64_t v25 = v30;
  *(void *)uint64_t v24 = v31;
  *((void *)v24 + 1) = v25;
  *(void *)&v23[v21] = v32;
  *(void *)&v23[v22] = a2;
  *(void *)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8] = v37;
  uint64_t v26 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v36, (uint64_t)sub_1003B377C, v35, (uint64_t)sub_1008AEC6C, (uint64_t)v23, v26, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100888E54(char *a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a3, uint64_t *a4, void *a5, uint64_t a6)
{
  uint64_t v289 = a1;
  uint64_t v284 = a6;
  uint64_t v285 = a3;
  unint64_t v280 = a5;
  uint64_t v286 = a2;
  uint64_t v267 = (void *)*a4;
  uint64_t v7 = v267;
  uint64_t v251 = type metadata accessor for ItemMetadata();
  uint64_t v8 = __chkstk_darwin(v251);
  uint64_t v262 = (uint64_t *)((char *)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = v267[75];
  uint64_t v295 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v263 = (char *)&v239 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v266 = (char *)&v239 - v13;
  uint64_t v288 = a4;
  uint64_t v14 = v7[77];
  uint64_t v15 = type metadata accessor for FileTreeError();
  uint64_t v268 = sub_10096C890();
  uint64_t v269 = *(void *)(v268 - 8);
  __chkstk_darwin(v268);
  uint64_t v270 = (uint64_t)&v239 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v271 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v250 = (char *)&v239 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v242 = (char *)&v239 - v21;
  __chkstk_darwin(v20);
  uint64_t v261 = (char *)&v239 - v22;
  uint64_t v283 = v23;
  uint64_t v24 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v244 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v259 = (char *)&v239 - v26;
  uint64_t v254 = v24;
  uint64_t v256 = *(void *)(v24 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v243 = (char *)&v239 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v255 = (char *)&v239 - v30;
  uint64_t v282 = v15;
  unint64_t v275 = *(void *)(v15 - 8);
  __chkstk_darwin(v29);
  uint64_t v277 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))((char *)&v239 - v31);
  uint64_t v248 = sub_10096A650();
  uint64_t v247 = *(void *)(v248 - 8);
  __chkstk_darwin(v248);
  uint64_t v246 = (char *)&v239 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10096A630();
  uint64_t v278 = *(void (***)(char *, uint64_t))(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v239 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SnapshotItem();
  uint64_t v273 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v258 = (char *)&v239 - v37;
  uint64_t v274 = v38;
  uint64_t v279 = sub_10096C890();
  uint64_t v281 = *(char **)(v279 - 8);
  uint64_t v39 = __chkstk_darwin(v279);
  uint64_t v249 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v239 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v241 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v239 - v42);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v260 = (char *)&v239 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v239 - v46;
  __chkstk_darwin(v45);
  unint64_t v272 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v239 - v48);
  uint64_t v292 = v14;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v276 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v49 = sub_10096D510();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v252 = (char *)&v239 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v54 = (uint64_t *)((char *)&v239 - v53);
  uint64_t v291 = sub_10096C890();
  uint64_t v294 = *(uint64_t (***)(char *, uint64_t))(v291 - 8);
  uint64_t v55 = __chkstk_darwin(v291);
  uint64_t v264 = (char *)&v239 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v265 = (char *)&v239 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v61 = (char *)&v239 - v60;
  __chkstk_darwin(v59);
  uint64_t v62 = *(void (**)(void))(v295 + 56);
  uint64_t v293 = (char *)&v239 - v63;
  uint64_t v287 = v10;
  v62();
  uint64_t v245 = v50;
  uint64_t v64 = *(void (**)(uint64_t *, char *, uint64_t))(v50 + 16);
  v64(v54, v289, v49);
  uint64_t v253 = v49;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v76 = swift_retain();
      v286(v76, 0, 0, 0);
      swift_release_n();
      return v294[1](v293, v291);
    }
    uint64_t v240 = (void (*)(char *, char *, uint64_t))v64;
    uint64_t v100 = v287;
    uint64_t v277 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v295 + 48);
    if (v277(v54, 1, v287) == 1)
    {
      uint64_t v101 = v283;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v101, AssociatedConformanceWitness))
      {
        v294[1]((char *)v54, v291);
        uint64_t v103 = v100;
        uint64_t v69 = v292;
        goto LABEL_17;
      }
    }
    uint64_t v113 = v293;
    uint64_t v112 = v294;
    uint64_t v114 = (char *)v294[1];
    uint64_t v115 = v291;
    uint64_t v276 = (uint64_t)(v294 + 1);
    uint64_t v289 = v114;
    ((void (*)(char *, uint64_t))v114)(v293, v291);
    ((void (*)(char *, uint64_t *, uint64_t))v112[4])(v113, v54, v115);
    uint64_t v116 = (void (**)(char *, uint64_t))v112[2];
    uint64_t v294 = v112 + 2;
    uint64_t v278 = v116;
    ((void (*)(char *, char *, uint64_t))v116)(v61, v113, v115);
    uint64_t v117 = v272;
    sub_10060A8A0((uint64_t)v61, v100, v292, (uint64_t)v272);
    uint64_t v118 = v281;
    uint64_t v119 = v279;
    (*((void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v281 + 2))(v47, v117, v279);
    uint64_t v120 = v273;
    uint64_t v121 = v274;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v47, 1, v274) == 1)
    {
      (*((void (**)(char *, uint64_t))v118 + 1))(v47, v119);
      unint64_t v275 = 0xEA00000000003E6CLL;
      uint64_t v270 = 0x696E3A6D6574693CLL;
    }
    else
    {
      uint64_t v122 = v258;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v258, v47, v121);
      uint64_t v296 = 0;
      unint64_t v297 = 0xE000000000000000;
      v301._uint64_t countAndFlagsBits = 0x3A6D6574693CLL;
      v301._object = (void *)0xE600000000000000;
      sub_10096BDC0(v301);
      swift_getWitnessTable();
      sub_10096D270();
      v302._uint64_t countAndFlagsBits = 62;
      v302._object = (void *)0xE100000000000000;
      sub_10096BDC0(v302);
      uint64_t v270 = v296;
      unint64_t v275 = v297;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v121);
    }
    uint64_t v123 = v284;
    uint64_t v124 = v266;
    uint64_t v125 = (uint64_t (*)(char *, uint64_t, uint64_t))v277;
    uint64_t v126 = v265;
    ((void (*)(char *, char *, uint64_t))v278)(v265, v293, v115);
    int v127 = v125(v126, 1, v100);
    uint64_t v128 = v292;
    if (v127 == 1)
    {
      ((void (*)(char *, uint64_t))v289)(v126, v115);
      uint64_t v129 = v264;
    }
    else
    {
      uint64_t v130 = v295;
      (*(void (**)(char *, char *, uint64_t))(v295 + 32))(v124, v126, v100);
      uint64_t v131 = *(char **)(v128 + 64);
      uint64_t v132 = v100;
      uint64_t v133 = v261;
      unint64_t v134 = v124;
      uint64_t v268 = v128 + 64;
      uint64_t v265 = v131;
      ((void (*)(uint64_t, uint64_t))v131)(v132, v128);
      uint64_t v135 = v288;
      uint64_t v136 = (uint64_t)v288 + *(void *)(*v288 + 576);
      uint64_t v137 = v283;
      swift_getAssociatedConformanceWitness();
      uint64_t v269 = v136;
      LOBYTE(v136) = sub_10096BBE0();
      uint64_t v260 = *(char **)(v271 + 8);
      ((void (*)(char *, uint64_t))v260)(v133, v137);
      if ((v136 & 1) == 0)
      {
        uint64_t v164 = v249;
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v273 + 56))(v249, 1, 1, v274);
        uint64_t v165 = v290;
        sub_10086C908(v164, v269, 0, 0, 0, v280, v135[15], v135[16], v135[17], v284);
        uint64_t v166 = v281;
        if (v165)
        {
          swift_bridgeObjectRelease();
          uint64_t v167 = (void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))*((void *)v166 + 1);
          uint64_t v168 = v279;
          v167(v164, v279);
          (*(void (**)(char *, uint64_t))(v130 + 8))(v266, v132);
          v167(v272, v168);
        }
        else
        {
          uint64_t v195 = v135;
          uint64_t v196 = (uint64_t (**)(char *, uint64_t))*((void *)v281 + 1);
          v281 += 8;
          uint64_t v294 = v196;
          ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v196)(v164, v279);
          unint64_t v197 = v267[76];
          uint64_t v198 = v267[78];
          uint64_t v296 = v132;
          unint64_t v297 = v197;
          uint64_t v199 = v292;
          uint64_t v298 = v292;
          uint64_t v299 = v198;
          uint64_t v290 = type metadata accessor for JobResult();
          uint64_t v296 = v132;
          unint64_t v297 = v197;
          uint64_t v298 = v199;
          uint64_t v299 = v198;
          type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v200 = (uint64_t)v261;
          ((void (*)(uint64_t, uint64_t))v265)(v132, v199);
          uint64_t v201 = sub_1008AA778(v200, v195[15], v195[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          uint64_t v202 = v283;
          ((void (*)(uint64_t, uint64_t))v260)(v200, v283);
          sub_1004D4360(v284, v201);
          swift_release();
          swift_getWitnessTable();
          uint64_t v203 = swift_allocError();
          uint64_t v205 = v204;
          swift_getTupleTypeMetadata2();
          uint64_t v206 = v271;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v205, v269, v202);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v206 + 56))(v205, 0, 1, v202);
          uint64_t v207 = v266;
          ((void (*)(uint64_t, uint64_t))v265)(v132, v199);
          swift_storeEnumTagMultiPayload();
          v286(0, v270, v275, v203);
          swift_errorRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v295 + 8))(v207, v132);
          ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v294)(v272, v279);
        }
        uint64_t v190 = v293;
        uint64_t v191 = v291;
        return ((uint64_t (*)(char *, uint64_t))v289)(v190, v191);
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v132);
      uint64_t v115 = v291;
      uint64_t v128 = v292;
      uint64_t v100 = v132;
      uint64_t v129 = v264;
      uint64_t v123 = v284;
      uint64_t v125 = (uint64_t (*)(char *, uint64_t, uint64_t))v277;
    }
    ((void (*)(char *, char *, uint64_t))v278)(v129, v293, v115);
    if (v125(v129, 1, v100) == 1)
    {
      ((void (*)(char *, uint64_t))v289)(v129, v115);
      uint64_t v138 = v290;
      uint64_t v139 = v288;
LABEL_42:
      uint64_t v180 = (uint64_t)v139 + *(void *)(*v139 + 576);
      if ((v139[17] & 0x10000) != 0) {
        int v181 = 3;
      }
      else {
        int v181 = 2 * ((v139[17] & 0x8008) != 0);
      }
      uint64_t v182 = v272;
      sub_10086C908(v272, v180, v181, 0, 0, v280, v139[15], v139[16], v139[17], v123);
      if (v138)
      {
        (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v281 + 1))(v182, v279);
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v289)(v293, v115);
      }
      uint64_t v183 = v100;
      uint64_t v184 = v139[17];
      if ((v184 & 0x20000) != 0)
      {
        unint64_t v185 = v267[76];
        uint64_t v295 = v267[78];
        uint64_t v296 = v183;
        uint64_t v186 = v183;
        unint64_t v297 = v185;
        uint64_t v298 = v128;
        uint64_t v299 = v295;
        type metadata accessor for JobResult();
        uint64_t v296 = v186;
        unint64_t v297 = v185;
        uint64_t v298 = v128;
        uint64_t v299 = v295;
        uint64_t v115 = v291;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v187 = sub_1008AA778(v180, v139[15], v139[16], v184, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        sub_1004D4360(v284, v187);
        swift_release();
      }
      v286(0, v270, v275, 0);
      swift_bridgeObjectRelease();
      uint64_t v188 = *(void (**)(uint64_t))(**(void **)(v280[4] + 16) + 848);
      uint64_t v189 = swift_retain();
      v188(v189);
      swift_release();
      (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v281 + 1))(v182, v279);
      uint64_t v190 = v293;
      uint64_t v191 = v115;
      return ((uint64_t (*)(char *, uint64_t))v289)(v190, v191);
    }
    (*(void (**)(char *, char *, uint64_t))(v295 + 32))(v263, v129, v100);
    (*(void (**)(uint64_t, uint64_t))(v128 + 104))(v100, v128);
    uint64_t result = sub_10096B080();
    uint64_t v138 = v290;
    uint64_t v139 = v288;
    if ((~*(void *)&v140 & 0x7FF0000000000000) != 0)
    {
      if (v140 > -9.22337204e18)
      {
        if (v140 < 9.22337204e18)
        {
          int is_busy_date = fpfs_is_busy_date();
          sub_10010DAFC((uint64_t)v262);
          if (is_busy_date)
          {
            uint64_t v142 = v281;
            swift_getWitnessTable();
            uint64_t v143 = swift_allocError();
            swift_storeEnumTagMultiPayload();
            v286(0, v270, v275, v143);
            swift_errorRelease();
            swift_bridgeObjectRelease();
            uint64_t v144 = *(void (**)(uint64_t))(**(void **)(v280[4] + 16) + 848);
            uint64_t v145 = swift_retain();
            v144(v145);
            swift_release();
            (*(void (**)(char *, uint64_t))(v295 + 8))(v263, v287);
            (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v142 + 1))(v272, v279);
            return ((uint64_t (*)(char *, uint64_t))v289)(v293, v115);
          }
          uint64_t v100 = v287;
          (*(void (**)(char *, uint64_t))(v295 + 8))(v263, v287);
          goto LABEL_42;
        }
LABEL_73:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v240 = (void (*)(char *, char *, uint64_t))v64;
  uint64_t v65 = *v54;
  swift_errorRetain();
  sub_10096A500();
  sub_1008AC7C4((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
  char v66 = sub_10096AA60();
  swift_errorRelease();
  v278[1](v35, v33);
  uint64_t v68 = v287;
  uint64_t v67 = v288;
  uint64_t v69 = v292;
  if (v66)
  {
    uint64_t v70 = (uint64_t)v288 + *(void *)(*v288 + 576);
    uint64_t v71 = v283;
    uint64_t v72 = swift_getAssociatedConformanceWitness();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v72 + 72))(v71, v72))
    {
      swift_errorRelease();
      uint64_t v73 = (uint64_t (*)(char *, uint64_t, uint64_t))v260;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v273 + 56))(v260, 1, 1, v274);
      uint64_t v74 = v280;
      uint64_t v75 = v290;
      sub_10086C908(v73, v70, 0, 0, 0, v280, v67[15], v67[16], v67[17], v284);
      (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v281 + 1))(v73, v279);
      if (!v75)
      {
        sub_10096A5C0();
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_1008AC7C4((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
        uint64_t v159 = v246;
        uint64_t v160 = v248;
        sub_10096ABD0();
        uint64_t v161 = (void *)sub_10096A4D0();
        (*(void (**)(char *, uint64_t))(v247 + 8))(v159, v160);
        v286(0, 0, 0, (uint64_t)v161);

        uint64_t v162 = *(void (**)(uint64_t))(**(void **)(v74[4] + 16) + 848);
        uint64_t v163 = swift_retain();
        v162(v163);
        swift_release();
      }
      return v294[1](v293, v291);
    }
  }
  uint64_t v300 = v65;
  swift_errorRetain();
  uint64_t v78 = (char *)v277;
  uint64_t v79 = v282;
  if (!swift_dynamicCast()) {
    goto LABEL_60;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v146 = swift_getAssociatedTypeWitness();
    uint64_t v147 = swift_getAssociatedTypeWitness();
    uint64_t v148 = swift_getAssociatedConformanceWitness();
    uint64_t v149 = swift_getAssociatedConformanceWitness();
    uint64_t v296 = v146;
    unint64_t v297 = v147;
    uint64_t v298 = v148;
    uint64_t v299 = v149;
    type metadata accessor for FileItemVersion();
    uint64_t v150 = sub_10096C890();
    sub_100033BE8(&qword_100AD7360);
    uint64_t v151 = v283;
    uint64_t v295 = v150;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v153 = (char *)v277;
    uint64_t v281 = (char *)v277 + *(int *)(TupleTypeMetadata3 + 48);
    swift_errorRelease();
    uint64_t v154 = v271;
    uint64_t v155 = v250;
    (*(void (**)(char *, char *, uint64_t))(v271 + 32))(v250, v153, v151);
    uint64_t v156 = swift_getAssociatedConformanceWitness();
    char v157 = sub_10096BBE0();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v155, v151);
    if ((v157 & 1) == 0)
    {
      (*(void (**)(char *))(*(void *)(v295 - 8) + 8))(v281);
      uint64_t v68 = v287;
      uint64_t v67 = v288;
      uint64_t v79 = v282;
      goto LABEL_60;
    }
    uint64_t v158 = v295;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v156 + 64))(v151, v156) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(*(void *)(v158 - 8) + 8))(v281, v158);
      uint64_t v68 = v287;
      uint64_t v79 = v282;
      goto LABEL_59;
    }
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(v158 - 8) + 8))(v281, v158);
    swift_errorRelease();
    uint64_t v103 = v287;
LABEL_17:
    uint64_t v104 = v288;
    unint64_t v105 = v267[76];
    uint64_t v106 = v267[78];
    uint64_t v296 = v103;
    unint64_t v297 = v105;
    uint64_t v298 = v69;
    uint64_t v299 = v106;
    type metadata accessor for JobResult();
    uint64_t v296 = v103;
    unint64_t v297 = v105;
    uint64_t v298 = v69;
    uint64_t v299 = v106;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v107 = (uint64_t)v104 + *(void *)(*v104 + 576);
    uint64_t v108 = sub_1008AA778(v107, v104[15], v104[16], v104[17], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_1004D4360(v284, v108);
    swift_release();
    uint64_t v109 = (uint64_t *)v252;
    uint64_t v110 = v253;
    v240(v252, v289, v253);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v111 = *v109;
      swift_errorRetain();
      v286(0, 0, 0, v111);
      swift_errorRelease();
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v245 + 8))(v109, v110);
      swift_getWitnessTable();
      uint64_t v295 = swift_allocError();
      uint64_t v170 = v169;
      uint64_t v171 = swift_getAssociatedTypeWitness();
      uint64_t v172 = swift_getAssociatedTypeWitness();
      uint64_t v173 = swift_getAssociatedConformanceWitness();
      uint64_t v174 = swift_getAssociatedConformanceWitness();
      uint64_t v296 = v171;
      unint64_t v297 = v172;
      uint64_t v298 = v173;
      uint64_t v299 = v174;
      uint64_t v175 = type metadata accessor for FileItemVersion();
      sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v176 = v283;
      uint64_t v177 = swift_getTupleTypeMetadata3();
      uint64_t v178 = v170 + *(int *)(v177 + 48);
      uint64_t v179 = *(int *)(v177 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v170, v107, v176);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v178, 1, 1, v175);
      *(void *)(v170 + v179) = 0;
      swift_storeEnumTagMultiPayload();
      v286(0, 0, 0, v295);
    }
    goto LABEL_63;
  }
  if (EnumCaseMultiPayload != 4)
  {
    (*(void (**)(char *, uint64_t))(v275 + 8))(v78, v79);
    goto LABEL_60;
  }
  uint64_t v81 = v254;
  uint64_t v82 = v283;
  uint64_t v264 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v289 = &v78[*((int *)v264 + 12)];
  uint64_t v83 = v271;
  uint64_t v84 = *(char **)(v271 + 16);
  uint64_t v85 = v255;
  unint64_t v272 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v67 + *(void *)(*v67 + 576));
  uint64_t v266 = (char *)(v271 + 16);
  uint64_t v265 = v84;
  ((void (*)(char *))v84)(v255);
  uint64_t v86 = *(void **)(v83 + 56);
  uint64_t v263 = (char *)(v83 + 56);
  uint64_t v262 = v86;
  ((void (*)(char *, void, uint64_t, uint64_t))v86)(v85, 0, 1, v82);
  int v87 = v259;
  uint64_t v88 = &v259[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v89 = v256;
  uint64_t v278 = *(void (***)(char *, uint64_t))(v256 + 16);
  ((void (*)(char *, char *, uint64_t))v278)(v259, v85, v81);
  uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  uint64_t v295 = (uint64_t)v88;
  uint64_t v91 = v88;
  uint64_t v92 = v81;
  uint64_t v93 = v87;
  v90(v91, (char *)v277, v92);
  uint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  if (v94((uint64_t)v93, 1, v82) != 1)
  {
    uint64_t v192 = v243;
    ((void (*)(char *, char *, uint64_t))v278)(v243, v93, v92);
    uint64_t v193 = v295;
    if (v94(v295, 1, v82) != 1)
    {
      uint64_t v217 = v271;
      uint64_t v218 = v261;
      uint64_t v278 = *(void (***)(char *, uint64_t))(v271 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v278)(v261, v193, v82);
      swift_getAssociatedConformanceWitness();
      uint64_t v219 = v82;
      LODWORD(v295) = sub_10096BBE0();
      uint64_t v194 = *(void (**)(char *, uint64_t))(v217 + 8);
      v194(v218, v82);
      uint64_t v220 = v92;
      double v221 = *(void (**)(char *, uint64_t))(v256 + 8);
      v221(v255, v220);
      v194(v192, v219);
      v221(v259, v220);
      if (v295)
      {
        swift_errorRelease();
        uint64_t v82 = v283;
        uint64_t v98 = v289;
        char v99 = v278;
        goto LABEL_67;
      }
      uint64_t v82 = v283;
      uint64_t v98 = v289;
      goto LABEL_53;
    }
    (*(void (**)(char *, uint64_t))(v256 + 8))(v255, v92);
    uint64_t v97 = v271;
    (*(void (**)(char *, uint64_t))(v271 + 8))(v192, v82);
    uint64_t v98 = v289;
LABEL_52:
    (*(void (**)(char *, uint64_t))(v244 + 8))(v259, TupleTypeMetadata2);
    uint64_t v194 = *(void (**)(char *, uint64_t))(v97 + 8);
LABEL_53:
    v194(v98, v82);
    uint64_t v68 = v287;
    uint64_t v79 = v282;
    uint64_t v69 = v292;
LABEL_59:
    uint64_t v67 = v288;
LABEL_60:
    swift_errorRelease();
    uint64_t v296 = v65;
    swift_errorRetain();
    uint64_t v208 = v270;
    int v209 = swift_dynamicCast();
    uint64_t v210 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56);
    uint64_t v211 = (void (**)(uint64_t, uint64_t))(v269 + 8);
    if (v209)
    {
      v210(v208, 0, 1, v79);
      (*v211)(v208, v268);
      swift_errorRetain();
      v286(0, 0, 0, v65);
      swift_errorRelease();
      uint64_t v212 = *(void (**)(uint64_t))(**(void **)(v280[4] + 16) + 848);
      uint64_t v213 = swift_retain();
      v212(v213);
      swift_release();
    }
    else
    {
      v210(v208, 1, 1, v79);
      (*v211)(v208, v268);
      unint64_t v214 = v267[76];
      uint64_t v215 = v267[78];
      uint64_t v296 = v68;
      unint64_t v297 = v214;
      uint64_t v298 = v69;
      uint64_t v299 = v215;
      type metadata accessor for JobResult();
      uint64_t v296 = v68;
      unint64_t v297 = v214;
      uint64_t v298 = v69;
      uint64_t v299 = v215;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v216 = sub_1008AA778((uint64_t)v67 + *(void *)(*v67 + 576), v67[15], v67[16], v67[17], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_1004D4360(v284, v216);
      swift_release();
      swift_errorRetain();
      v286(0, 0, 0, v65);
      swift_errorRelease();
    }
LABEL_63:
    swift_errorRelease();
    return v294[1](v293, v291);
  }
  uint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
  v95(v85, v92);
  unsigned int v96 = v94(v295, 1, v82);
  uint64_t v97 = v271;
  uint64_t v98 = v289;
  if (v96 != 1) {
    goto LABEL_52;
  }
  v95(v259, v92);
  swift_errorRelease();
  char v99 = *(void (***)(char *, uint64_t))(v97 + 32);
LABEL_67:
  uint64_t v222 = (uint64_t)v242;
  ((void (*)(char *, char *, uint64_t))v99)(v242, v98, v82);
  uint64_t v223 = v241;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v273 + 56))(v241, 1, 1, v274);
  uint64_t v224 = v82;
  uint64_t v225 = v288;
  uint64_t v226 = v284;
  uint64_t v227 = v272;
  uint64_t v228 = v290;
  sub_10086C908(v223, (uint64_t)v272, 0, 0, 0, v280, v288[15], v288[16], v288[17], v284);
  uint64_t v290 = v228;
  (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v281 + 1))(v223, v279);
  if (!v228)
  {
    unint64_t v229 = v267[76];
    uint64_t v230 = v267[78];
    uint64_t v231 = v287;
    uint64_t v296 = v287;
    unint64_t v297 = v229;
    uint64_t v232 = v292;
    uint64_t v298 = v292;
    uint64_t v299 = v230;
    uint64_t v295 = type metadata accessor for JobResult();
    uint64_t v296 = v231;
    unint64_t v297 = v229;
    uint64_t v298 = v232;
    uint64_t v299 = v230;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v233 = sub_1008AA778(v222, v225[15], v225[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_1004D4360(v226, v233);
    swift_release();
    swift_getWitnessTable();
    uint64_t v234 = swift_allocError();
    uint64_t v236 = v235;
    uint64_t v237 = v235 + *((int *)v264 + 12);
    uint64_t v238 = (void (*)(uint64_t, uint64_t, uint64_t))v265;
    ((void (*)(uint64_t, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v265)(v235, v227, v224);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v262)(v236, 0, 1, v224);
    v238(v237, v222, v224);
    swift_storeEnumTagMultiPayload();
    v286(0, 0, 0, v234);
    swift_errorRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v222, v224);
  v294[1](v293, v291);
  return swift_errorRelease();
}

uint64_t sub_10088B660@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A2538(a1);
}

uint64_t type metadata accessor for Ingestion.FetchItemMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10088B684()
{
  return 0x6F632D6863746566;
}

uint64_t sub_10088B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a1;
  uint64_t v5 = *v2;
  uint64_t v38 = type metadata accessor for JobLockRule();
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v36 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_10096C890();
  uint64_t v39 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_10096C890();
  uint64_t v37 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v36 - v13;
  uint64_t v15 = v5;
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = (char *)v3 + *(void *)(v15 + 576);
  uint64_t v18 = v44;
  (*(void (**)(char *, uint64_t))(*(void *)v16 + 240))(v17, 1);
  if (!v18)
  {
    v36[0] = v17;
    v36[1] = 0;
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v44 = v10;
    uint64_t v20 = v38;
    uint64_t v21 = (char *)v3 + *(void *)(*v3 + 632);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v21, v14, v12);
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v21, 1, v11))
    {
      uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
      uint64_t v23 = 1;
      uint64_t v24 = v20;
      uint64_t v25 = v8;
      uint64_t v26 = v44;
    }
    else
    {
      uint64_t v27 = &v21[*(int *)(v11 + 36)];
      uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
      uint64_t v26 = v44;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v44, v27, AssociatedTypeWitness);
      uint64_t v23 = 0;
      uint64_t v24 = v20;
      uint64_t v25 = v8;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v26, v23, 1, v19);
    uint64_t v28 = v26;
    swift_beginAccess();
    sub_1003B32B0((uint64_t)(v3 + 7), (uint64_t)v43);
    uint64_t v29 = v19;
    uint64_t v30 = v3[15];
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v32 = (uint64_t)v40;
    uint64_t v33 = &v40[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, void, uint64_t))(v22 + 16))(v40, v36[0], v29);
    uint64_t v34 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v33, v28, v25);
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = sub_1001E3E98((uint64_t)v43, v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v32, v24);
    sub_1003B3318((uint64_t)v43);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v25);
  }
  return v8;
}

uint64_t sub_10088BBB8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v60 = a6;
  uint64_t v61 = a8;
  uint64_t v64 = a7;
  uint64_t v59 = a4;
  int v62 = a3;
  int v63 = a2;
  uint64_t v55 = a1;
  uint64_t v66 = a11;
  uint64_t v12 = *v11;
  uint64_t v57 = a5;
  uint64_t v58 = v12;
  uint64_t v56 = *(void *)(v12 + 616);
  uint64_t v13 = *(void *)(v12 + 600);
  uint64_t v48 = a10;
  uint64_t v49 = a9;
  uint64_t v52 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v68 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v70 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v14 = sub_10096C890();
  uint64_t v46 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v51 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v47 = (char *)&v43 - v16;
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_10096C890();
  uint64_t v45 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v43 - v21;
  BOOL v50 = (a9 & 0x4400000000) != 0;
  uint64_t v23 = swift_allocObject();
  uint64_t v54 = v23;
  uint64_t v24 = v64;
  uint64_t v25 = v65;
  *(void *)(v23 + 16) = v65;
  *(void *)(v23 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  uint64_t v53 = v26;
  uint64_t v27 = v66;
  *(void *)(v26 + 16) = a10;
  *(void *)(v26 + 24) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v55, v18);
  uint64_t v28 = v15;
  uint64_t v44 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v57, v14);
  unint64_t v29 = (*(unsigned __int8 *)(v19 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v30 = (v20 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + v33 + 20) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v58;
  *((void *)v35 + 2) = v52;
  *((void *)v35 + 3) = *(void *)(v36 + 608);
  *((void *)v35 + 4) = v56;
  *((void *)v35 + 5) = *(void *)(v36 + 624);
  *((void *)v35 + 6) = v25;
  *((void *)v35 + 7) = v59;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v35[v29], v22, v45);
  uint64_t v37 = v60;
  *(void *)&v35[v30] = v60;
  *(void *)&v35[v31] = v64;
  *(void *)&v35[v32] = v61;
  uint64_t v38 = &v35[v33];
  uint64_t v39 = v66;
  *(void *)uint64_t v38 = v48;
  *((void *)v38 + 1) = v39;
  v38[16] = BYTE3(v49) & 1;
  v38[17] = v50;
  v38[18] = v62;
  v38[19] = v63;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v35[v34], v47, v46);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_errorRetain();
  uint64_t v40 = type metadata accessor for Continuation();
  id v41 = v37;
  swift_retain();
  sub_10035F220((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)sub_1003B3398, v54, (uint64_t)sub_1003B377C, v53, (uint64_t)sub_1008AE228, (uint64_t)v35, v40, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10088C0E0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t (*a7)(void, uint64_t, uint64_t, uint64_t), uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11, char a12, uint64_t a13)
{
  uint64_t v621 = a8;
  uint64_t v631 = a7;
  uint64_t v636 = a6;
  v651 = a5;
  id v625 = a4;
  uint64_t v648 = a2;
  uint64_t v649 = a3;
  uint64_t v13 = a1;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 616);
  uint64_t v16 = *(void **)(*a1 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v564 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = __chkstk_darwin(AssociatedTypeWitness);
  v563 = (char *)&v548 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v569 = (char *)&v548 - v21;
  uint64_t v626 = *(v16 - 1);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v561 = (char *)&v548 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v570 = (char *)&v548 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v566 = AssociatedTypeWitness;
  uint64_t v654 = AssociatedTypeWitness;
  unint64_t v655 = v25;
  uint64_t v562 = AssociatedConformanceWitness;
  uint64_t v656 = AssociatedConformanceWitness;
  uint64_t v657 = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v590 = sub_10096C890();
  uint64_t v589 = *(void *)(v590 - 8);
  uint64_t v29 = __chkstk_darwin(v590);
  char v572 = (char *)&v548 - v30;
  uint64_t v578 = v28;
  uint64_t v576 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v565 = (char *)&v548 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v575 = (char *)&v548 - v33;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v640 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v35 = __chkstk_darwin(TupleTypeMetadata2);
  char v606 = (_OWORD *)((char *)&v548 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v35);
  uint64_t v611 = (uint64_t *)((char *)&v548 - v37);
  uint64_t v38 = sub_10096C890();
  __chkstk_darwin(v38 - 8);
  v610 = (char *)&v548 - v39;
  uint64_t v592 = sub_10096B480();
  uint64_t v591 = *(void *)(v592 - 8);
  uint64_t v40 = __chkstk_darwin(v592);
  v584 = (char *)&v548 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v581 = (char *)&v548 - v42;
  uint64_t v43 = *(void (**)(void))(v14 + 624);
  unint64_t v44 = *(void *)(v14 + 608);
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t v601 = *(void *)(v45 - 8);
  uint64_t v46 = __chkstk_darwin(v45);
  unsigned int v567 = (char *)&v548 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v560 = v47;
  __chkstk_darwin(v46);
  uint64_t v571 = (char *)&v548 - v48;
  uint64_t v605 = type metadata accessor for SnapshotItem();
  uint64_t v617 = sub_10096C890();
  uint64_t v618 = *(void *)(v617 - 8);
  uint64_t v49 = __chkstk_darwin(v617);
  uint64_t v603 = (char *)&v548 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  v624 = (char *)&v548 - v52;
  __chkstk_darwin(v51);
  uint64_t v577 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v548 - v53);
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v55 = sub_10096C890();
  uint64_t v593 = swift_getTupleTypeMetadata2();
  uint64_t v580 = *(void *)(v593 - 8);
  uint64_t v56 = __chkstk_darwin(v593);
  uint64_t v619 = (uint64_t)&v548 - v57;
  uint64_t v602 = v55;
  uint64_t v594 = *(void *)(v55 - 8);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v579 = (char *)&v548 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v595 = (char *)&v548 - v61;
  uint64_t v643 = v54;
  uint64_t v642 = *(void (**)(char *, char *, uint64_t))(v54 - 8);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v582 = (uint64_t)&v548 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __chkstk_darwin(v62);
  v604 = (char *)&v548 - v65;
  __chkstk_darwin(v64);
  v587 = (char *)&v548 - v66;
  uint64_t v620 = type metadata accessor for FileTreeError();
  uint64_t v586 = *(void *)(v620 - 8);
  __chkstk_darwin(v620);
  char v622 = (char *)&v548 - v67;
  uint64_t v633 = v45;
  uint64_t v600 = sub_10096C890();
  uint64_t v599 = *(void *)(v600 - 8);
  uint64_t v68 = __chkstk_darwin(v600);
  uint64_t v574 = (char *)&v548 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v68);
  uint64_t v598 = (char *)&v548 - v70;
  uint64_t v641 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v616 = *(void *)(v641 - 8);
  uint64_t v71 = __chkstk_darwin(v641);
  v597 = (char *)&v548 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  uint64_t v607 = (char *)&v548 - v73;
  uint64_t v654 = (uint64_t)v16;
  unint64_t v655 = v44;
  uint64_t v656 = v15;
  uint64_t v657 = (uint64_t)v43;
  uint64_t v628 = type metadata accessor for ReconciliationMutation();
  uint64_t v629 = *(void *)(v628 - 8);
  __chkstk_darwin(v628);
  v627 = (char *)&v548 - v74;
  uint64_t v614 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v613 = *(void *)(v614 - 8);
  __chkstk_darwin(v614);
  v615 = (char *)&v548 - v75;
  v650 = (void (*)(void, void, void))v16;
  uint64_t v654 = (uint64_t)v16;
  unint64_t v655 = v44;
  unint64_t v638 = v44;
  uint64_t v639 = v43;
  uint64_t v645 = v15;
  uint64_t v656 = v15;
  uint64_t v657 = (uint64_t)v43;
  uint64_t v646 = (void *)type metadata accessor for ItemReconciliation();
  uint64_t v76 = sub_10096C890();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v573 = (char *)&v548 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v585 = (char *)&v548 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v596 = (char *)&v548 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  v630 = (char *)&v548 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  uint64_t v612 = (char *)&v548 - v87;
  uint64_t v88 = __chkstk_darwin(v86);
  *(void *)&long long v623 = (char *)&v548 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  uint64_t v92 = (char *)&v548 - v91;
  __chkstk_darwin(v90);
  v652 = (char *)&v548 - v93;
  uint64_t v644 = TupleTypeMetadata2;
  uint64_t v635 = sub_10096C890();
  uint64_t v94 = *(void *)(v635 - 8);
  uint64_t v95 = __chkstk_darwin(v635);
  char v588 = (char *)&v548 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __chkstk_darwin(v95);
  v559 = (char *)&v548 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  uint64_t v100 = __chkstk_darwin(v99);
  v583 = (char *)&v548 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  uint64_t v104 = (char *)&v548 - v103;
  uint64_t v105 = __chkstk_darwin(v102);
  int v609 = (char *)&v548 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v608 = (char *)&v548 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v111 = (char *)&v548 - v110;
  uint64_t v112 = __chkstk_darwin(v109);
  uint64_t v114 = (char *)&v548 - v113;
  __chkstk_darwin(v112);
  uint64_t v116 = (char *)&v548 - v115;
  char v117 = *((unsigned char *)v13 + 136);
  uint64_t v632 = v94;
  uint64_t v568 = v118;
  if ((v117 & 1) == 0) {
    goto LABEL_2;
  }
  if (v648)
  {
    if (v625)
    {
      BOOL v119 = [v625 requestedExtent] != (id)-1;
      goto LABEL_6;
    }
LABEL_2:
    BOOL v119 = 0;
LABEL_6:
    uint64_t v120 = v651;
    uint64_t v121 = (uint64_t)v652;
    goto LABEL_7;
  }
  v555 = v104;
  uint64_t v556 = v13;
  uint64_t v634 = v76;
  uint64_t v637 = v77;
  uint64_t v135 = v649;
  uint64_t v136 = v635;
  id v625 = *(id *)(v94 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v625)((char *)&v548 - v115, v649, v635);
  uint64_t v558 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v640 + 48);
  if (v558(v116, 1, v644) == 1)
  {
    uint64_t v137 = *(void (**)(char *, uint64_t))(v94 + 8);
    v137(v116, v136);
    ((void (*)(char *, uint64_t, uint64_t))v625)(v114, v135, v136);
LABEL_19:
    uint64_t v77 = v637;
    v137(v114, v136);
    BOOL v119 = 0;
    goto LABEL_20;
  }
  uint64_t v151 = *((void *)v116 + 1);
  unint64_t v152 = *((void *)v116 + 2);
  LODWORD(v557) = v116[40];
  sub_10001E9AC(v151, v152);
  uint64_t v153 = *(void (**)(void, void))(v626 + 8);
  v153(&v116[*(int *)(v644 + 48)], v650);
  ((void (*)(char *, uint64_t, uint64_t))v625)(v114, v135, v136);
  if (v557 == 1)
  {
    uint64_t v137 = *(void (**)(char *, uint64_t))(v632 + 8);
    goto LABEL_19;
  }
  uint64_t v198 = v153;
  uint64_t v199 = v632;
  (*(void (**)(char *, char *, uint64_t))(v632 + 32))(v111, v114, v136);
  if (v558(v111, 1, v644) != 1)
  {
    uint64_t v222 = *((void *)v111 + 3);
    char v223 = v111[40];
    sub_10001E9AC(*((void *)v111 + 1), *((void *)v111 + 2));
    v198(&v111[*(int *)(v644 + 48)], v650);
    uint64_t v76 = v634;
    uint64_t v121 = (uint64_t)v652;
    BOOL v119 = (v223 & 1) != 0 || v222 != -1;
    uint64_t v77 = v637;
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v199 + 8))(v111, v136);
  BOOL v119 = 1;
  uint64_t v77 = v637;
LABEL_20:
  uint64_t v76 = v634;
  uint64_t v121 = (uint64_t)v652;
LABEL_21:
  uint64_t v13 = v556;
  uint64_t v120 = v651;
  uint64_t v104 = v555;
LABEL_7:
  uint64_t v122 = v647;
  uint64_t v123 = v120[2];
  uint64_t v124 = (uint64_t *)((char *)v13 + *(void *)(*v13 + 576));
  uint64_t result = sub_1000DEDD8((uint64_t)v124, v121);
  if (v122) {
    return result;
  }
  BOOL v551 = v119;
  uint64_t v549 = v123;
  v647 = (void (*)(void, void))v124;
  uint64_t v556 = v13;
  id v625 = 0;
  int v550 = a10;
  uint64_t v126 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  uint64_t v127 = v121;
  uint64_t v558 = (unsigned int (*)(char *, uint64_t, uint64_t))(v77 + 16);
  uint64_t v557 = v126;
  v126(v92, v121, v76);
  uint64_t v128 = v646;
  uint64_t v129 = *(v646 - 1);
  uint64_t v130 = *(unsigned int (**)(char *, uint64_t, void *))(v129 + 48);
  uint64_t v554 = v129 + 48;
  int v553 = v130;
  unsigned int v131 = v130(v92, 1, v646);
  uint64_t v637 = v77;
  uint64_t v634 = v76;
  v555 = v104;
  uint64_t v552 = v129;
  if (v131 == 1)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v92, v76);
    uint64_t v133 = v649;
    uint64_t v132 = (uint64_t)v650;
    unint64_t v134 = (char *)v127;
  }
  else
  {
    uint64_t v138 = v613;
    uint64_t v139 = v76;
    double v140 = v615;
    uint64_t v141 = v614;
    (*(void (**)(char *, char *, uint64_t))(v613 + 16))(v615, v92, v614);
    (*(void (**)(char *, void *))(v129 + 8))(v92, v128);
    int v142 = v140[*(int *)(v141 + 52)];
    uint64_t v143 = v140;
    uint64_t v76 = v139;
    (*(void (**)(char *, uint64_t))(v138 + 8))(v143, v141);
    uint64_t v133 = v649;
    uint64_t v132 = (uint64_t)v650;
    uint64_t v144 = v641;
    unint64_t v134 = (char *)v127;
    if (!v142) {
      goto LABEL_27;
    }
  }
  BOOL v145 = sub_1005152D8();
  uint64_t v146 = v623;
  uint64_t v147 = v557;
  v557((char *)v623, (uint64_t)v134, v76);
  if (v145)
  {
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v146, v76);
    goto LABEL_25;
  }
  uint64_t v148 = v612;
  v147(v612, v146, v76);
  uint64_t v149 = v646;
  if (v553(v148, 1, v646) == 1)
  {
    uint64_t v150 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v150(v146, v76);
    v150((uint64_t)v148, v76);
    uint64_t v133 = v649;
  }
  else
  {
    int v154 = v148[*((int *)v149 + 14)];
    (*(void (**)(char *, void *))(v552 + 8))(v148, v149);
    if (v154 == 4)
    {
      __break(1u);
      goto LABEL_190;
    }
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v146, v76);
    if (v154 == 2) {
      goto LABEL_25;
    }
  }
  if ((v556[17] & 1) == 0)
  {
LABEL_25:
    uint64_t v654 = v132;
    unint64_t v655 = v638;
    uint64_t v656 = v645;
    uint64_t v657 = (uint64_t)v639;
    type metadata accessor for JobResult();
    uint64_t v155 = v643;
    uint64_t v156 = swift_getAssociatedConformanceWitness();
    unint64_t v157 = v633;
    uint64_t v158 = swift_getAssociatedConformanceWitness();
    uint64_t v654 = v155;
    unint64_t v655 = v157;
    uint64_t v656 = v156;
    uint64_t v657 = v158;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v159 = swift_getTupleTypeMetadata2();
    uint64_t v160 = (uint64_t)v627;
    uint64_t v161 = &v627[*(int *)(v159 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v155);
    swift_storeEnumTagMultiPayload();
    char v162 = 2;
LABEL_26:
    char *v161 = v162;
    swift_storeEnumTagMultiPayload();
    uint64_t v163 = v628;
    swift_storeEnumTagMultiPayload();
    sub_100591758(v636, v160);
    (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v160, v163);
    unint64_t v134 = v652;
    uint64_t v76 = v634;
    uint64_t v77 = v637;
    uint64_t v133 = v649;
    uint64_t v132 = (uint64_t)v650;
    uint64_t v144 = v641;
LABEL_27:
    uint64_t v164 = v648;
    uint64_t v165 = v630;
    if (v648) {
      goto LABEL_28;
    }
    goto LABEL_70;
  }
  if (v551)
  {
    uint64_t v654 = v132;
    unint64_t v655 = v638;
    uint64_t v656 = v645;
    uint64_t v657 = (uint64_t)v639;
    type metadata accessor for JobResult();
    uint64_t v193 = v643;
    uint64_t v194 = swift_getAssociatedConformanceWitness();
    unint64_t v195 = v633;
    uint64_t v196 = swift_getAssociatedConformanceWitness();
    uint64_t v654 = v193;
    unint64_t v655 = v195;
    uint64_t v656 = v194;
    uint64_t v657 = v196;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v197 = swift_getTupleTypeMetadata2();
    uint64_t v160 = (uint64_t)v627;
    uint64_t v161 = &v627[*(int *)(v197 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v193);
    swift_storeEnumTagMultiPayload();
    char v162 = 4;
    goto LABEL_26;
  }
  uint64_t v210 = v648;
  if (v648)
  {
    uint64_t v654 = v132;
    unint64_t v655 = v638;
    uint64_t v656 = v645;
    uint64_t v657 = (uint64_t)v639;
    uint64_t v649 = type metadata accessor for JobResult();
    uint64_t v211 = v643;
    uint64_t v212 = v132;
    uint64_t v213 = swift_getAssociatedConformanceWitness();
    unint64_t v214 = v633;
    uint64_t v215 = swift_getAssociatedConformanceWitness();
    uint64_t v654 = v211;
    unint64_t v655 = v214;
    uint64_t v656 = v213;
    uint64_t v657 = v215;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v216 = swift_getTupleTypeMetadata2();
    uint64_t v217 = (uint64_t)v627;
    uint64_t v218 = &v627[*(int *)(v216 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v211);
    swift_storeEnumTagMultiPayload();
    char *v218 = 0;
    uint64_t v132 = v212;
    uint64_t v164 = v210;
    uint64_t v219 = v637;
    swift_storeEnumTagMultiPayload();
    uint64_t v220 = v628;
    swift_storeEnumTagMultiPayload();
    sub_100591758(v636, v217);
    uint64_t v221 = v217;
    uint64_t v77 = v219;
    (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v221, v220);
    unint64_t v134 = v652;
    uint64_t v76 = v634;
    uint64_t v144 = v641;
    uint64_t v165 = v630;
LABEL_28:
    v557(v165, (uint64_t)v134, v76);
    uint64_t v166 = v646;
    if (v553(v165, 1, v646) == 1)
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v165, v76);
      uint64_t v167 = v631;
      goto LABEL_34;
    }
    uint64_t v168 = v616;
    uint64_t v169 = *(void (**)(char *, char *, uint64_t))(v616 + 16);
    uint64_t v170 = v607;
    v169(v607, &v165[*((int *)v166 + 13)], v144);
    uint64_t v171 = *(void (**)(char *, void *))(v552 + 8);
    v171(v165, v166);
    uint64_t v172 = v166;
    int v173 = v170[*(int *)(v144 + 44)];
    uint64_t v174 = v144;
    uint64_t v177 = *(void (**)(char *, uint64_t))(v168 + 8);
    uint64_t v176 = v168 + 8;
    uint64_t v175 = v177;
    v177(v170, v174);
    if (v173)
    {
      uint64_t v167 = v631;
      uint64_t v76 = v634;
      unint64_t v134 = v652;
      goto LABEL_32;
    }
    uint64_t v616 = v176;
    uint64_t v649 = v651[3];
    uint64_t v200 = v596;
    v557(v596, (uint64_t)v652, v634);
    if (v553(v200, 1, v172) != 1)
    {
      uint64_t v201 = v597;
      uint64_t v202 = v641;
      v169(v597, &v200[*((int *)v172 + 13)], v641);
      v171(v200, v172);
      uint64_t v203 = v598;
      (*(void (**)(char *, char *, uint64_t))(v599 + 16))(v598, v201, v600);
      v175(v201, v202);
      uint64_t v204 = v601;
      unint64_t v205 = v633;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v601 + 48))(v203, 1, v633) != 1)
      {
        uint64_t v654 = v638;
        unint64_t v655 = (unint64_t)v650;
        uint64_t v206 = v645;
        uint64_t v656 = (uint64_t)v639;
        uint64_t v657 = v645;
        uint64_t v207 = type metadata accessor for Materialization.MaterializeItem();
        id v208 = v625;
        char v209 = (*(uint64_t (**)(char *, uint64_t, void))(*(void *)v649 + 280))(v203, v207, 0);
        unint64_t v134 = v652;
        id v625 = v208;
        if (v208)
        {
          (*(void (**)(char *, uint64_t))(v637 + 8))(v652, v634);
          return (*(uint64_t (**)(char *, unint64_t))(v204 + 8))(v203, v205);
        }
        char v257 = v209;
        (*(void (**)(char *, unint64_t))(v204 + 8))(v203, v205);
        if ((v257 & 1) == 0)
        {
          uint64_t v421 = v650;
          uint64_t v654 = (uint64_t)v650;
          unint64_t v655 = v638;
          uint64_t v656 = v206;
          uint64_t v657 = (uint64_t)v639;
          uint64_t v649 = type metadata accessor for JobResult();
          uint64_t v422 = v643;
          uint64_t v423 = swift_getAssociatedConformanceWitness();
          uint64_t v424 = swift_getAssociatedConformanceWitness();
          uint64_t v654 = v422;
          unint64_t v655 = v205;
          uint64_t v656 = v423;
          uint64_t v657 = v424;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v425 = swift_getTupleTypeMetadata2();
          uint64_t v426 = (uint64_t)v627;
          uint64_t v427 = &v627[*(int *)(v425 + 48)];
          (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v422);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)uint64_t v427 = 768;
          *(_OWORD *)(v427 + 8) = *(_OWORD *)(v556 + 15);
          swift_storeEnumTagMultiPayload();
          uint64_t v428 = v628;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v636, v426);
          (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v426, v428);
          uint64_t v167 = v631;
          uint64_t v76 = v634;
          uint64_t v132 = (uint64_t)v421;
          goto LABEL_33;
        }
        uint64_t v167 = v631;
        uint64_t v76 = v634;
LABEL_32:
        uint64_t v132 = (uint64_t)v650;
LABEL_33:
        uint64_t v164 = v648;
LABEL_34:
        v653._uint64_t countAndFlagsBits = v164;
        swift_errorRetain();
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        uint64_t v178 = v620;
        int v179 = swift_dynamicCast();
        uint64_t v180 = v619;
        if (v179)
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              sub_100033BE8(&qword_100AD7360);
              uint64_t v181 = v643;
              uint64_t v182 = v590;
              TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
              uint64_t v184 = v622;
              uint64_t v649 = (uint64_t)&v622[*(int *)(TupleTypeMetadata3 + 48)];
              swift_errorRelease();
              unint64_t v185 = (void (**)(char *, uint64_t))v642;
              uint64_t v186 = v587;
              (*((void (**)(char *, unsigned char *, uint64_t))v642 + 4))(v587, v184, v181);
              uint64_t v187 = v645;
              swift_getAssociatedConformanceWitness();
              uint64_t v188 = v647;
              LOBYTE(v184) = sub_10096BBE0();
              v185[1](v186, v181);
              if (v184)
              {
                uint64_t v189 = v650;
                unint64_t v191 = v638;
                uint64_t v190 = v639;
                uint64_t v654 = (uint64_t)v650;
                unint64_t v655 = v638;
                uint64_t v656 = v187;
                uint64_t v657 = (uint64_t)v639;
                type metadata accessor for JobResult();
                uint64_t v654 = (uint64_t)v189;
                unint64_t v655 = v191;
                uint64_t v656 = v187;
                uint64_t v657 = (uint64_t)v190;
                type metadata accessor for Ingestion.FetchItemMetadata();
                uint64_t v192 = sub_1008AA778((uint64_t)v188, v556[15], v556[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
                sub_1004D4360(v636, v192);
                swift_release();
                v631(0, 0, 0, v648);
                (*(void (**)(char *, uint64_t))(v637 + 8))(v652, v76);
                (*(void (**)(uint64_t, uint64_t))(v589 + 8))(v649, v182);
                return swift_errorRelease();
              }
              (*(void (**)(uint64_t, uint64_t))(v589 + 8))(v649, v182);
              unint64_t v134 = v652;
              uint64_t v164 = v648;
              uint64_t v167 = v631;
              uint64_t v132 = (uint64_t)v650;
              break;
            case 4u:
              uint64_t v224 = v602;
              uint64_t v225 = v643;
              uint64_t v646 = &v622[*(int *)(swift_getTupleTypeMetadata2() + 48)];
              uint64_t v226 = v642;
              uint64_t v227 = v595;
              (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v595, v647, v225);
              (*((void (**)(char *, void, uint64_t, uint64_t))v226 + 7))(v227, 0, 1, v225);
              uint64_t v228 = v180 + *(int *)(v593 + 48);
              unint64_t v229 = v227;
              uint64_t v230 = v594;
              uint64_t v644 = *(void *)(v594 + 16);
              ((void (*)(uint64_t, char *, uint64_t))v644)(v180, v229, v224);
              uint64_t v231 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v230 + 32);
              uint64_t v649 = v228;
              uint64_t v232 = v224;
              uint64_t v233 = v180;
              v231(v228, v622, v232);
              uint64_t v234 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v226 + 6);
              if (v234(v233, 1, v225) == 1)
              {
                uint64_t v235 = *(void (**)(char *, uint64_t))(v230 + 8);
                uint64_t v236 = v602;
                v235(v595, v602);
                if (v234(v649, 1, v643) == 1)
                {
                  v235((char *)v619, v236);
                  uint64_t v237 = (void (*)(uint64_t, void *, uint64_t))*((void *)v642 + 4);
                  uint64_t v238 = v646;
LABEL_146:
                  uint64_t v439 = v582;
                  uint64_t v440 = v643;
                  v237(v582, v238, v643);
                  uint64_t v441 = v577;
                  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v605 - 8) + 56))(v577, 1, 1);
                  v442 = v556;
                  uint64_t v443 = v636;
                  id v444 = v625;
                  sub_10086C908(v441, (uint64_t)v647, 0, 0, 0, v651, v556[15], v556[16], v556[17], v636);
                  v445 = v652;
                  id v625 = v444;
                  if (v444)
                  {
                    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 8))(v441, v617);
                    (*((void (**)(uint64_t, uint64_t))v642 + 1))(v439, v440);
                    v392 = *(void (**)(char *, uint64_t))(v637 + 8);
                    uint64_t v393 = v445;
LABEL_125:
                    uint64_t v394 = v76;
LABEL_126:
                    v392(v393, v394);
                    return swift_errorRelease();
                  }
                  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 8))(v441, v617);
                  v460 = v650;
                  unint64_t v462 = v638;
                  v461 = v639;
                  uint64_t v654 = (uint64_t)v650;
                  unint64_t v655 = v638;
                  uint64_t v463 = v645;
                  uint64_t v656 = v645;
                  uint64_t v657 = (uint64_t)v639;
                  type metadata accessor for JobResult();
                  uint64_t v654 = (uint64_t)v460;
                  unint64_t v655 = v462;
                  uint64_t v656 = v463;
                  uint64_t v657 = (uint64_t)v461;
                  type metadata accessor for Ingestion.FetchItemMetadata();
                  uint64_t v464 = v582;
                  uint64_t v465 = sub_1008AA778(v582, v442[15], v442[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
                  sub_1004D4360(v443, v465);
                  swift_release();
                  v631(0, 0, 0, v648);
                  (*((void (**)(uint64_t, uint64_t))v642 + 1))(v464, v440);
                  v392 = *(void (**)(char *, uint64_t))(v637 + 8);
                  uint64_t v393 = v445;
LABEL_177:
                  uint64_t v394 = v634;
                  goto LABEL_126;
                }
              }
              else
              {
                v360 = v579;
                uint64_t v361 = v602;
                ((void (*)(char *, uint64_t, uint64_t))v644)(v579, v233, v602);
                uint64_t v362 = v649;
                uint64_t v363 = v643;
                if (v234(v649, 1, v643) != 1)
                {
                  v436 = v642;
                  uint64_t v437 = v604;
                  uint64_t v644 = *((void *)v642 + 4);
                  ((void (*)(char *, uint64_t, uint64_t))v644)(v604, v362, v363);
                  swift_getAssociatedConformanceWitness();
                  LODWORD(v649) = sub_10096BBE0();
                  v364 = (void (*)(char *, uint64_t))*((void *)v436 + 1);
                  v364(v437, v363);
                  v438 = *(void (**)(char *, uint64_t))(v594 + 8);
                  v438(v595, v361);
                  v364(v360, v363);
                  v438((char *)v619, v361);
                  if (v649)
                  {
                    uint64_t v76 = v634;
                    uint64_t v238 = v646;
                    uint64_t v237 = (void (*)(uint64_t, void *, uint64_t))v644;
                    goto LABEL_146;
                  }
                  uint64_t v76 = v634;
LABEL_111:
                  uint64_t v132 = (uint64_t)v650;
                  v364((char *)v646, v643);
                  uint64_t v167 = v631;
                  unint64_t v134 = v652;
                  uint64_t v164 = v648;
                  break;
                }
                (*(void (**)(char *, uint64_t))(v594 + 8))(v595, v361);
                (*((void (**)(char *, uint64_t))v642 + 1))(v360, v363);
              }
              (*(void (**)(uint64_t, uint64_t))(v580 + 8))(v619, v593);
              v364 = (void (*)(char *, uint64_t))*((void *)v642 + 1);
              goto LABEL_111;
            case 5u:
              char v239 = *v622;
              if (sub_1005152D8())
              {
                uint64_t v240 = v637;
              }
              else
              {
                if ((v239 & a9) == 1)
                {
                  if (v550)
                  {
                    uint64_t v397 = v636;
                    (*(void (**)(unint64_t, unint64_t))(*(void *)v636 + 168))(0xD000000000000053, 0x80000001009BD7C0);
                    uint64_t v654 = (uint64_t)v650;
                    unint64_t v655 = v638;
                    uint64_t v656 = v645;
                    uint64_t v657 = (uint64_t)v639;
                    uint64_t v649 = type metadata accessor for JobResult();
                    uint64_t v398 = v76;
                    uint64_t v399 = v643;
                    uint64_t v400 = swift_getAssociatedConformanceWitness();
                    unint64_t v401 = v633;
                    uint64_t v402 = swift_getAssociatedConformanceWitness();
                    uint64_t v654 = v399;
                    unint64_t v655 = v401;
                    uint64_t v656 = v400;
                    uint64_t v657 = v402;
                    type metadata accessor for ReconciliationID();
                    uint64_t v403 = swift_getTupleTypeMetadata3();
                    uint64_t v404 = *(int *)(v403 + 48);
                    uint64_t v405 = *(int *)(v403 + 64);
                    uint64_t v406 = (uint64_t)v627;
                    uint64_t v407 = v399;
                    uint64_t v76 = v398;
                    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v407);
                    swift_storeEnumTagMultiPayload();
                    *(void *)(v406 + v404) = 1;
                    unint64_t v134 = v652;
                    *(void *)(v406 + v405) = 0;
                    uint64_t v408 = v628;
                    swift_storeEnumTagMultiPayload();
                    sub_100591758(v397, v406);
                    (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v406, v408);
                  }
                  uint64_t v409 = v574;
                  id v410 = v625;
                  (*(void (**)(void (*)(void, void)))(*(void *)v549 + 160))(v647);
                  id v625 = v410;
                  if (v410)
                  {
LABEL_62:
                    uint64_t v240 = v637;
LABEL_151:
                    (*(void (**)(char *, uint64_t))(v240 + 8))(v134, v76);
                    return swift_errorRelease();
                  }
                  uint64_t v411 = v601;
                  unint64_t v412 = v633;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v601 + 48))(v409, 1, v633) != 1)
                  {
                    v502 = *(void (**)(char *, char *, unint64_t))(v411 + 32);
                    uint64_t v646 = (void *)(v411 + 32);
                    uint64_t v649 = (uint64_t)v502;
                    v502(v571, v409, v412);
                    uint64_t v503 = v650;
                    uint64_t v654 = (uint64_t)v650;
                    unint64_t v655 = v638;
                    uint64_t v656 = v645;
                    uint64_t v657 = (uint64_t)v639;
                    uint64_t v644 = type metadata accessor for JobResult();
                    uint64_t v504 = v643;
                    uint64_t v505 = swift_getAssociatedConformanceWitness();
                    uint64_t v506 = swift_getAssociatedConformanceWitness();
                    uint64_t v654 = v504;
                    unint64_t v655 = v412;
                    uint64_t v656 = v505;
                    uint64_t v657 = v506;
                    type metadata accessor for ReconciliationID();
                    uint64_t v507 = swift_getTupleTypeMetadata3();
                    uint64_t v508 = *(int *)(v507 + 48);
                    uint64_t v509 = *(int *)(v507 + 64);
                    uint64_t v510 = (uint64_t)v627;
                    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v504);
                    swift_storeEnumTagMultiPayload();
                    *(void *)(v510 + v508) = 2;
                    *(void *)(v510 + v509) = 0;
                    uint64_t v511 = v628;
                    swift_storeEnumTagMultiPayload();
                    sub_100591758(v636, v510);
                    (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v510, v511);
                    v647 = *(void (**)(void, void))(v651[5] + 16);
                    uint64_t v512 = v601;
                    uint64_t v513 = v633;
                    (*(void (**)(char *, char *, uint64_t))(v601 + 16))(v567, v571, v633);
                    unint64_t v514 = (*(unsigned __int8 *)(v512 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v512 + 80);
                    unint64_t v515 = (v560 + v514 + 7) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v516 = (v515 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v517 = (v516 + 23) & 0xFFFFFFFFFFFFFFF8;
                    Swift::String v518 = v503;
                    unint64_t v519 = (v517 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v520 = (void *)swift_allocObject();
                    unint64_t v521 = v638;
                    v520[2] = v518;
                    v520[3] = v521;
                    uint64_t v522 = v639;
                    v520[4] = v645;
                    v520[5] = v522;
                    ((void (*)(char *, char *, uint64_t))v649)((char *)v520 + v514, v567, v513);
                    *(void *)((char *)v520 + v515) = v651;
                    char v523 = (void *)((char *)v520 + v516);
                    uint64_t v524 = v621;
                    *char v523 = v631;
                    v523[1] = v524;
                    *(void *)((char *)v520 + v517) = v636;
                    *(void *)((char *)v520 + v519) = v556;
                    v525 = v647;
                    *(void *)((char *)v520 + ((v519 + 15) & 0xFFFFFFFFFFFFFFF8)) = v648;
                    uint64_t v526 = *(void (**)(char *, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v525 + 736);
                    swift_errorRetain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    uint64_t v527 = v571;
                    v526(v571, 2, sub_1008AE554, v520);
                    swift_release();
                    swift_release();
                    (*(void (**)(char *, uint64_t))(v601 + 8))(v527, v633);
                    v392 = *(void (**)(char *, uint64_t))(v637 + 8);
                    uint64_t v393 = v652;
                    goto LABEL_177;
                  }
                  (*(void (**)(char *, uint64_t))(v599 + 8))(v409, v600);
                  v413 = v639;
                  uint64_t v132 = (uint64_t)v650;
                }
                else
                {
                  v413 = v639;
                }
                uint64_t v654 = v132;
                unint64_t v655 = v638;
                uint64_t v656 = v645;
                uint64_t v657 = (uint64_t)v413;
                type metadata accessor for JobResult();
                uint64_t v446 = v643;
                uint64_t v447 = swift_getAssociatedConformanceWitness();
                unint64_t v448 = v633;
                uint64_t v449 = swift_getAssociatedConformanceWitness();
                uint64_t v654 = v446;
                unint64_t v655 = v448;
                uint64_t v656 = v447;
                uint64_t v657 = v449;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v450 = swift_getTupleTypeMetadata2();
                uint64_t v451 = (uint64_t)v627;
                v452 = &v627[*(int *)(v450 + 48)];
                (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v446);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)v452 = 768;
                *(_OWORD *)(v452 + 8) = *(_OWORD *)(v556 + 15);
                swift_storeEnumTagMultiPayload();
                uint64_t v453 = v628;
                swift_storeEnumTagMultiPayload();
                sub_100591758(v636, v451);
                (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v451, v453);
                uint64_t v167 = v631;
                uint64_t v240 = v637;
                uint64_t v76 = v634;
                uint64_t v164 = v648;
              }
              v167(0, 0, 0, v164);
              goto LABEL_151;
            case 0x14u:
              if (!sub_1005152D8() && (v550 & 1) != 0)
              {
                uint64_t v241 = v167;
                id v242 = (id)fpfs_current_or_default_log();
                uint64_t v243 = v581;
                sub_10096B490();
                uint64_t v244 = sub_10096B470();
                os_log_type_t v245 = sub_10096C590();
                if (os_log_type_enabled(v244, v245))
                {
                  uint64_t v246 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v246 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v244, v245, "download got canceled since we are out of space", v246, 2u);
                  swift_slowDealloc();
                }

                (*(void (**)(char *, uint64_t))(v591 + 8))(v243, v592);
                uint64_t v654 = v132;
                unint64_t v655 = v638;
                uint64_t v656 = v645;
                uint64_t v657 = (uint64_t)v639;
                type metadata accessor for JobResult();
                uint64_t v247 = v643;
                uint64_t v248 = swift_getAssociatedConformanceWitness();
                unint64_t v249 = v633;
                uint64_t v250 = swift_getAssociatedConformanceWitness();
                uint64_t v654 = v247;
                unint64_t v655 = v249;
                uint64_t v656 = v248;
                uint64_t v657 = v250;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v251 = swift_getTupleTypeMetadata2();
                uint64_t v252 = (uint64_t)v627;
                uint64_t v253 = &v627[*(int *)(v251 + 48)];
                (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v247);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)uint64_t v253 = 768;
                *(_OWORD *)(v253 + 8) = *(_OWORD *)(v556 + 15);
                swift_storeEnumTagMultiPayload();
                uint64_t v254 = v628;
                swift_storeEnumTagMultiPayload();
                sub_100591758(v636, v252);
                (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v252, v254);
                uint64_t v167 = v241;
                unint64_t v134 = v652;
                uint64_t v76 = v634;
                uint64_t v164 = v648;
              }
              v167(0, 0, 0, v164);
              goto LABEL_62;
            case 0x16u:
              uint64_t v255 = v585;
              v557(v585, (uint64_t)v134, v76);
              uint64_t v256 = (uint64_t)v646;
              if (v553(v255, 1, v646) == 1)
              {
                (*(void (**)(char *, uint64_t))(v637 + 8))(v255, v76);
              }
              else
              {
                BOOL v414 = sub_100827AAC(v256);
                v415 = *(void (**)(char *, uint64_t))(v552 + 8);
                v552 += 8;
                v415(v255, v256);
                if (!v414)
                {
                  v454 = v573;
                  v557(v573, (uint64_t)v134, v76);
                  if (v553(v454, 1, (void *)v256) == 1)
                  {
                    (*(void (**)(char *, uint64_t))(v637 + 8))(v454, v76);
                  }
                  else
                  {
                    uint64_t v472 = v613;
                    uint64_t v473 = v614;
                    (*(void (**)(char *, char *, uint64_t))(v613 + 16))(v615, v454, v614);
                    v415(v454, v256);
                    int v474 = v615[*(int *)(v473 + 56)];
                    (*(void (**)(void))(v472 + 8))();
                    if (!v474) {
                      goto LABEL_137;
                    }
                  }
                  uint64_t v654 = v132;
                  unint64_t v655 = v638;
                  uint64_t v656 = v645;
                  uint64_t v657 = (uint64_t)v639;
                  v651 = (void *)type metadata accessor for JobResult();
                  uint64_t v475 = v76;
                  uint64_t v476 = v643;
                  uint64_t v477 = swift_getAssociatedConformanceWitness();
                  unint64_t v478 = v633;
                  uint64_t v479 = swift_getAssociatedConformanceWitness();
                  uint64_t v654 = v476;
                  unint64_t v655 = v478;
                  uint64_t v656 = v477;
                  uint64_t v657 = v479;
                  type metadata accessor for ReconciliationID();
                  type metadata accessor for ReconciliationSideMutation();
                  uint64_t v480 = swift_getTupleTypeMetadata2();
                  uint64_t v481 = (uint64_t)v627;
                  uint64_t v482 = &v627[*(int *)(v480 + 48)];
                  uint64_t v483 = v476;
                  uint64_t v76 = v475;
                  uint64_t v484 = v648;
                  (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v483);
                  swift_storeEnumTagMultiPayload();
                  *uint64_t v482 = 1;
                  uint64_t v485 = v631;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v486 = v628;
                  swift_storeEnumTagMultiPayload();
                  sub_100591758(v636, v481);
                  (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v481, v486);
                  v485(0, 0, 0, v484);
LABEL_165:
                  (*(void (**)(char *, uint64_t))(v637 + 8))(v652, v76);
                  return swift_errorRelease();
                }
              }
LABEL_137:
              uint64_t v654 = v132;
              uint64_t v416 = v132;
              unint64_t v418 = v638;
              v417 = v639;
              uint64_t v419 = v645;
              unint64_t v655 = v638;
              uint64_t v656 = v645;
              uint64_t v657 = (uint64_t)v639;
              type metadata accessor for JobResult();
              uint64_t v654 = v416;
              unint64_t v655 = v418;
              uint64_t v656 = v419;
              uint64_t v657 = (uint64_t)v417;
              type metadata accessor for Ingestion.FetchItemMetadata();
              uint64_t v420 = sub_1008AA778((uint64_t)v647, v556[15], v556[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
              sub_1004D4360(v636, v420);
              swift_release();
              v167(0, 0, 0, v164);
              goto LABEL_165;
            default:
              (*(void (**)(unsigned char *, uint64_t))(v586 + 8))(v622, v178);
              break;
          }
        }
        swift_errorRelease();
        v653._uint64_t countAndFlagsBits = v164;
        swift_errorRetain();
        sub_100033BA8();
        if (!swift_dynamicCast())
        {
          uint64_t v373 = v637;
          v372 = v167;
LABEL_128:
          swift_errorRelease();
          v372(0, 0, 0, v164);
          uint64_t v395 = *(uint64_t (**)(char *, uint64_t))(v373 + 8);
          uint64_t v396 = v134;
          return v395(v396, v76);
        }
        uint64_t v365 = v132;
        id v366 = v658;
        id v367 = [v658 domain];
        uint64_t v368 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v370 = v369;

        if (v368 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v370 == v371)
        {
          swift_bridgeObjectRelease_n();
          v372 = v631;
        }
        else
        {
          char v374 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v372 = v631;
          if ((v374 & 1) == 0)
          {
LABEL_127:

            uint64_t v373 = v637;
            goto LABEL_128;
          }
        }
        id v375 = [v366 code];
        if (v375 == (id)NSFileProviderErrorSpeculativeCanceledByProvider)
        {
          if (!sub_1005152D8() && (v550 & 1) != 0)
          {
            id v376 = (id)fpfs_current_or_default_log();
            uint64_t v377 = v584;
            sub_10096B490();
            uint64_t v378 = sub_10096B470();
            os_log_type_t v379 = sub_10096C590();
            if (os_log_type_enabled(v378, v379))
            {
              uint64_t v380 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v380 = 0;
              _os_log_impl((void *)&_mh_execute_header, v378, v379, "speculative download got canceled by the provider going to update speculative fulfilled", v380, 2u);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v591 + 8))(v377, v592);
            uint64_t v654 = v365;
            unint64_t v655 = v638;
            uint64_t v656 = v645;
            uint64_t v657 = (uint64_t)v639;
            type metadata accessor for JobResult();
            uint64_t v381 = v643;
            uint64_t v382 = swift_getAssociatedConformanceWitness();
            unint64_t v383 = v633;
            uint64_t v384 = swift_getAssociatedConformanceWitness();
            uint64_t v654 = v381;
            unint64_t v655 = v383;
            uint64_t v656 = v382;
            uint64_t v657 = v384;
            type metadata accessor for ReconciliationID();
            uint64_t v385 = swift_getTupleTypeMetadata3();
            uint64_t v386 = *(int *)(v385 + 48);
            uint64_t v387 = *(int *)(v385 + 64);
            v650 = (void (*)(void, void, void))*((void *)v642 + 2);
            uint64_t v388 = (uint64_t)v627;
            v650(v627, v647, v381);
            swift_storeEnumTagMultiPayload();
            *(void *)(v388 + v386) = 1;
            *(void *)(v388 + v387) = 0;
            uint64_t v389 = v628;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v636, v388);
            v651 = *(void **)(v629 + 8);
            ((void (*)(uint64_t, uint64_t))v651)(v388, v389);
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v390 = v388 + *(int *)(swift_getTupleTypeMetadata2() + 48);
            v650(v388, v647, v643);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)uint64_t v390 = 768;
            *(_OWORD *)(v390 + 8) = *(_OWORD *)(v556 + 15);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_100591758(v636, v388);
            ((void (*)(uint64_t, uint64_t))v651)(v388, v389);
            v372 = v631;
            unint64_t v134 = v652;
            uint64_t v76 = v634;
          }
          id v391 = v366;
          v372(0, 0, 0, (uint64_t)v366);

          v392 = *(void (**)(char *, uint64_t))(v637 + 8);
          uint64_t v393 = v134;
          goto LABEL_125;
        }
        goto LABEL_127;
      }
LABEL_191:
      __break(1u);
      JUMPOUT(0x1008914CCLL);
    }
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  uint64_t v654 = v132;
  unint64_t v655 = v638;
  uint64_t v656 = v645;
  uint64_t v657 = (uint64_t)v639;
  uint64_t v648 = type metadata accessor for JobResult();
  uint64_t v258 = v643;
  uint64_t v259 = swift_getAssociatedConformanceWitness();
  unint64_t v260 = v633;
  uint64_t v261 = swift_getAssociatedConformanceWitness();
  uint64_t v654 = v258;
  unint64_t v655 = v260;
  uint64_t v656 = v259;
  uint64_t v657 = v261;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v262 = swift_getTupleTypeMetadata2();
  uint64_t v263 = (uint64_t)v627;
  uint64_t v264 = &v627[*(int *)(v262 + 48)];
  (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v258);
  swift_storeEnumTagMultiPayload();
  *uint64_t v264 = 2;
  swift_storeEnumTagMultiPayload();
  uint64_t v265 = v628;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v636, v263);
  uint64_t v266 = v263;
  uint64_t v132 = (uint64_t)v650;
  (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v266, v265);
  uint64_t v76 = v634;
LABEL_70:
  uint64_t v267 = v632;
  uint64_t v268 = *(void **)(v632 + 16);
  uint64_t v269 = v608;
  uint64_t v270 = v635;
  uint64_t v648 = v632 + 16;
  uint64_t v646 = v268;
  ((void (*)(char *, uint64_t, uint64_t))v268)(v608, v133, v635);
  uint64_t v271 = *(char **)(v640 + 48);
  uint64_t v272 = v644;
  uint64_t v641 = v640 + 48;
  v630 = v271;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v271)(v269, 1, v644) == 1)
  {
    (*(void (**)(char *, uint64_t))(v267 + 8))(v269, v270);
    uint64_t v273 = 1;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
    uint64_t v275 = v626;
    uint64_t v276 = (uint64_t)v610;
  }
  else
  {
    sub_10001E9AC(*((void *)v269 + 1), *((void *)v269 + 2));
    uint64_t v275 = v626;
    uint64_t v276 = (uint64_t)v610;
    (*(void (**)(char *, char *, uint64_t))(v626 + 32))(v610, &v269[*(int *)(v272 + 48)], v132);
    uint64_t v273 = 0;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
  }
  LODWORD(v622) = a11;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56))(v276, v273, 1, v132);
  sub_10060A8A0(v276, v132, v645, (uint64_t)v274);
  uint64_t v277 = v609;
  ((void (*)(char *, uint64_t, uint64_t))v646)(v609, v133, v270);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v630)(v277, 1, v272) == 1)
  {
    (*(void (**)(char *, uint64_t))(v632 + 8))(v277, v270);
    *(void *)&long long v623 = 0xEA00000000003E6CLL;
    uint64_t v619 = 0x696E3A6D6574693CLL;
    uint64_t v278 = v133;
  }
  else
  {
    uint64_t v279 = *(int *)(v272 + 48);
    unint64_t v280 = v611;
    uint64_t v281 = (char *)v611 + v279;
    uint64_t v282 = &v277[v279];
    uint64_t v284 = *(void **)v277;
    uint64_t v283 = *((void *)v277 + 1);
    uint64_t v285 = *((void *)v277 + 4);
    char v286 = v277[40];
    uint64_t v287 = *((void *)v277 + 6);
    *uint64_t v611 = *(void *)v277;
    v280[1] = v283;
    long long v623 = *((_OWORD *)v277 + 1);
    *((_OWORD *)v280 + 1) = v623;
    v280[4] = v285;
    *((unsigned char *)v280 + 40) = v286;
    v280[6] = v287;
    (*(void (**)(char *, char *, uint64_t))(v275 + 32))(v281, v282, v132);
    uint64_t v654 = 0;
    unint64_t v655 = 0xE000000000000000;
    unint64_t v288 = v623;
    sub_10002D830(v283, v623);
    sub_10096CBD0(33);
    v659._uint64_t countAndFlagsBits = 0x3A6D6574693CLL;
    v659._object = (void *)0xE600000000000000;
    sub_10096BDC0(v659);
    uint64_t v289 = v618;
    uint64_t v290 = v603;
    uint64_t v291 = v274;
    uint64_t v292 = v617;
    (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 16))(v603, v291, v617);
    uint64_t v293 = (int *)v605;
    uint64_t v294 = *(void *)(v605 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v290, 1, v605) == 1)
    {
      uint64_t v295 = v290;
      uint64_t v296 = 0x3E6C696E3CLL;
      uint64_t v294 = v289;
      unint64_t v297 = (int *)v292;
      uint64_t v298 = (void *)0xE500000000000000;
    }
    else
    {
      uint64_t v299 = SnapshotItem.description.getter(v293);
      uint64_t v295 = v290;
      uint64_t v296 = v299;
      uint64_t v298 = v300;
      unint64_t v297 = v293;
    }
    (*(void (**)(char *, int *))(v294 + 8))(v295, v297);
    v660._uint64_t countAndFlagsBits = v296;
    v660._object = v298;
    sub_10096BDC0(v660);
    swift_bridgeObjectRelease();
    v661._uint64_t countAndFlagsBits = 0x746E65746E6F6320;
    v661._object = (void *)0xE90000000000003ALL;
    sub_10096BDC0(v661);
    v653._uint64_t countAndFlagsBits = 677669222;
    v653._object = (void *)0xE400000000000000;
    id v658 = v284;
    v662._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v662);
    swift_bridgeObjectRelease();
    v663._uint64_t countAndFlagsBits = 41;
    v663._object = (void *)0xE100000000000000;
    sub_10096BDC0(v663);
    sub_10096BDC0(v653);
    swift_bridgeObjectRelease();
    sub_10001E9AC(v283, v288);
    v664._uint64_t countAndFlagsBits = 0x676E6168636E7520;
    v664._object = (void *)0xEB000000003A6465;
    sub_10096BDC0(v664);
    if (v622) {
      v301._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v301._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v622) {
      Swift::String v302 = (void *)0xE400000000000000;
    }
    else {
      Swift::String v302 = (void *)0xE500000000000000;
    }
    v301._object = v302;
    sub_10096BDC0(v301);
    swift_bridgeObjectRelease();
    v665._uint64_t countAndFlagsBits = 62;
    v665._object = (void *)0xE100000000000000;
    sub_10096BDC0(v665);
    uint64_t v619 = v654;
    *(void *)&long long v623 = v655;
    uint64_t v272 = v644;
    (*(void (**)(void *, uint64_t))(v640 + 8))(v611, v644);
    uint64_t v77 = v637;
    uint64_t v76 = v634;
    uint64_t v278 = v649;
    uint64_t v132 = (uint64_t)v650;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
    uint64_t v275 = v626;
    uint64_t v270 = v635;
  }
  uint64_t v303 = v555;
  uint64_t v304 = v278;
  ((void (*)(char *))v646)(v555);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v630)(v303, 1, v272) == 1)
  {
    (*(void (**)(char *, uint64_t))(v632 + 8))(v303, v270);
  }
  else
  {
    uint64_t v305 = *(int *)(v272 + 48);
    Swift::String v306 = v303;
    uint64_t v307 = v272;
    int v308 = v606;
    uint64_t v309 = (char *)v606 + v305;
    uint64_t v310 = &v306[v305];
    uint64_t v311 = *((void *)v306 + 4);
    char v312 = v306[40];
    uint64_t v313 = *((void *)v306 + 6);
    long long v314 = *((_OWORD *)v306 + 1);
    *char v606 = *(_OWORD *)v306;
    v308[1] = v314;
    *((void *)v308 + 4) = v311;
    *((unsigned char *)v308 + 40) = v312;
    *((void *)v308 + 6) = v313;
    (*(void (**)(char *, char *, uint64_t))(v275 + 32))(v309, v310, v132);
    uint64_t v315 = *(void (**)(uint64_t, uint64_t))(v645 + 64);
    uint64_t v316 = v604;
    v315(v132, v645);
    uint64_t v317 = v643;
    swift_getAssociatedConformanceWitness();
    char v318 = sub_10096BBE0();
    uint64_t v319 = (*((uint64_t (**)(char *, uint64_t))v642 + 1))(v316, v317);
    if ((v318 & 1) == 0)
    {
      if (*(void *)v308)
      {
        uint64_t v346 = *(void *)(*(void *)(v651[5] + 16) + 136);
        __chkstk_darwin(v319);
        *(&v548 - 4) = v346;
        *((_DWORD *)&v548 - 6) = 0;
        uint64_t v547 = v347;
        swift_retain();
        id v348 = v625;
        sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
        if (v348)
        {
          uint64_t v349 = v315;
          swift_errorRelease();
          swift_release();
          id v625 = 0;
        }
        else
        {
          id v625 = 0;
          *(unsigned char *)(v346 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
          uint64_t v349 = v315;
          if (*(void *)(v346 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_10096C7F0(1uLL);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
      else
      {
        uint64_t v349 = v315;
      }
      swift_getWitnessTable();
      uint64_t v455 = swift_allocError();
      uint64_t v457 = v456;
      uint64_t v458 = v643;
      swift_getTupleTypeMetadata2();
      v459 = v642;
      (*((void (**)(uint64_t, void (*)(void, void), uint64_t))v642 + 2))(v457, v647, v458);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v459 + 7))(v457, 0, 1, v458);
      v349((uint64_t)v650, v645);
      swift_storeEnumTagMultiPayload();
      v631(0, v619, v623, v455);
      swift_errorRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v618 + 8))(v624, v617);
      (*(void (**)(char *, uint64_t))(v637 + 8))(v652, v634);
      return (*(uint64_t (**)(_OWORD *, uint64_t))(v640 + 8))(v606, v644);
    }
    (*(void (**)(_OWORD *, uint64_t))(v640 + 8))(v308, v307);
    uint64_t v77 = v637;
    uint64_t v76 = v634;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
    uint64_t v272 = v307;
    uint64_t v304 = v649;
  }
  uint64_t v320 = v647;
  id v321 = v625;
  char v322 = (*(uint64_t (**)(void (*)(void, void)))(*(void *)v651[4] + 288))(v647);
  if (v321)
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 8))(v274, v617);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v652, v76);
  }
  id v625 = 0;
  if ((v322 & 1) == 0)
  {
    uint64_t v350 = v623;
    uint64_t v351 = v588;
    uint64_t v352 = v635;
    ((void (*)(char *, uint64_t, uint64_t))v646)(v588, v304, v635);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v630)(v351, 1, v272) == 1)
    {
      (*(void (**)(char *, uint64_t))(v632 + 8))(v351, v352);
      uint64_t v353 = v77;
    }
    else
    {
      uint64_t v354 = *(void *)v351;
      uint64_t v355 = *((void *)v351 + 1);
      unint64_t v356 = *((void *)v351 + 2);
      uint64_t v357 = (*(uint64_t (**)(char *, void (*)(void, void, void)))(v626 + 8))(&v351[*(int *)(v272 + 48)], v650);
      uint64_t v358 = *(void *)(*(void *)(v651[5] + 16) + 136);
      if (v354)
      {
        __chkstk_darwin(v357);
        *(&v548 - 4) = v358;
        *((_DWORD *)&v548 - 6) = 0;
        uint64_t v547 = v354;
        swift_retain();
        id v359 = v625;
        sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
        if (v359)
        {
          swift_errorRelease();
          sub_10001E9AC(v355, v356);
          swift_release();
          id v625 = 0;
          uint64_t v353 = v77;
        }
        else
        {
          id v625 = 0;
          *(unsigned char *)(v358 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
          uint64_t v353 = v77;
          if (*(void *)(v358 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_10096C7F0(1uLL);
            swift_unknownObjectRelease();
          }
          sub_10001E9AC(v355, v356);
          swift_release();
        }
      }
      else
      {
        swift_retain();
        sub_10001E9AC(v355, v356);
        swift_release();
        uint64_t v353 = v77;
      }
    }
    uint64_t v466 = v617;
    uint64_t v467 = v650;
    unint64_t v469 = v638;
    uint64_t v468 = v639;
    uint64_t v654 = (uint64_t)v650;
    unint64_t v655 = v638;
    uint64_t v470 = v645;
    uint64_t v656 = v645;
    uint64_t v657 = (uint64_t)v639;
    type metadata accessor for JobResult();
    uint64_t v654 = (uint64_t)v467;
    unint64_t v655 = v469;
    uint64_t v656 = v470;
    uint64_t v657 = (uint64_t)v468;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v471 = sub_1008AA778((uint64_t)v647, v556[15], v556[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_1004D4360(v636, v471);
    swift_release();
    v631(0, v619, v350, 0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v618 + 8))(v624, v466);
    uint64_t v395 = *(uint64_t (**)(char *, uint64_t))(v353 + 8);
    uint64_t v396 = v652;
    return v395(v396, v76);
  }
  if (!sub_1005152D8())
  {
    uint64_t v323 = v645;
    unint64_t v324 = v638;
    if (v550)
    {
      uint64_t v654 = (uint64_t)v650;
      unint64_t v655 = v638;
      uint64_t v656 = v645;
      uint64_t v657 = (uint64_t)v639;
      type metadata accessor for JobResult();
      uint64_t v325 = v643;
      uint64_t v326 = swift_getAssociatedConformanceWitness();
      unint64_t v327 = v633;
      uint64_t v328 = swift_getAssociatedConformanceWitness();
      uint64_t v654 = v325;
      unint64_t v655 = v327;
      uint64_t v656 = v326;
      uint64_t v657 = v328;
      type metadata accessor for ReconciliationID();
      uint64_t v329 = swift_getTupleTypeMetadata3();
      uint64_t v330 = *(int *)(v329 + 48);
      uint64_t v331 = *(int *)(v329 + 64);
      uint64_t v332 = (uint64_t)v627;
      (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v325);
      swift_storeEnumTagMultiPayload();
      *(void *)(v332 + v330) = 1;
      *(void *)(v332 + v331) = 0;
      uint64_t v333 = v628;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v636, v332);
      (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v332, v333);
    }
    uint64_t v654 = (uint64_t)v650;
    unint64_t v655 = v324;
    uint64_t v656 = v323;
    uint64_t v657 = (uint64_t)v639;
    type metadata accessor for JobResult();
    uint64_t v334 = v643;
    uint64_t v335 = swift_getAssociatedConformanceWitness();
    unint64_t v336 = v633;
    uint64_t v337 = swift_getAssociatedConformanceWitness();
    uint64_t v654 = v334;
    unint64_t v655 = v336;
    uint64_t v656 = v335;
    uint64_t v657 = v337;
    type metadata accessor for ReconciliationID();
    uint64_t v338 = swift_getTupleTypeMetadata3();
    uint64_t v339 = *(int *)(v338 + 48);
    uint64_t v340 = *(int *)(v338 + 64);
    uint64_t v341 = (uint64_t)v627;
    uint64_t v342 = v647;
    (*((void (**)(char *, void (*)(void, void), uint64_t))v642 + 2))(v627, v647, v334);
    swift_storeEnumTagMultiPayload();
    *(void *)(v341 + v339) = 0;
    *(void *)(v341 + v340) = 2;
    uint64_t v320 = v342;
    uint64_t v343 = v628;
    swift_storeEnumTagMultiPayload();
    sub_100591758(v636, v341);
    (*(void (**)(uint64_t, uint64_t))(v629 + 8))(v341, v343);
    uint64_t v77 = v637;
    uint64_t v76 = v634;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
    uint64_t v304 = v649;
  }
  uint64_t v344 = v636;
  id v345 = v625;
  sub_10086C908(v274, (uint64_t)v320, 0, 0, 0, v651, v556[15], v556[16], v556[17], v636);
  id v625 = v345;
  if (v345)
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 8))(v274, v617);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v652, v76);
  }
  unint64_t v429 = (unint64_t)v583;
  uint64_t v430 = v635;
  ((void (*)(char *, uint64_t, uint64_t))v646)(v583, v304, v635);
  if ((a12 & 1) == 0)
  {
LABEL_174:
    sub_100891D88(v622 & 1, v429, v344, (uint64_t)v556, v631, v621, v619, v623);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v632 + 8))(v429, v430);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v618 + 8))(v274, v617);
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v652, v76);
  }
  uint64_t v431 = v589;
  uint64_t v432 = v572;
  uint64_t v433 = v590;
  (*(void (**)(char *, uint64_t, uint64_t))(v589 + 16))(v572, a13, v590);
  uint64_t v434 = v576;
  uint64_t v435 = v578;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v432, 1, v578) == 1)
  {
    (*(void (**)(char *, uint64_t))(v431 + 8))(v432, v433);
LABEL_172:
    uint64_t v430 = v635;
    goto LABEL_173;
  }
  (*(void (**)(char *, char *, uint64_t))(v434 + 32))(v575, v432, v435);
  uint64_t v487 = v568;
  uint64_t v430 = v635;
  ((void (*)(uint64_t, uint64_t, uint64_t))v646)(v568, v649, v635);
  uint64_t v488 = v644;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v630)(v487, 1, v644) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v632 + 8))(v487, v430);
    (*(void (**)(char *, uint64_t))(v434 + 8))(v575, v578);
LABEL_173:
    unint64_t v429 = (unint64_t)v583;
    goto LABEL_174;
  }
  sub_10001E9AC(*(void *)(v487 + 8), *(void *)(v487 + 16));
  uint64_t v489 = v487 + *(int *)(v488 + 48);
  uint64_t v490 = *(void (**)(char *, uint64_t, void))(v626 + 32);
  uint64_t v491 = v561;
  v492 = v650;
  v490(v561, v489, v650);
  v490(v570, (uint64_t)v491, v492);
  uint64_t v493 = v564;
  uint64_t v494 = v564 + 16;
  v495 = *(void (**)(char *, char *, uint64_t))(v564 + 16);
  uint64_t v496 = v566;
  v495(v569, v575, v566);
  v497 = v565;
  uint64_t v639 = *(void (**)(void))(v645 + 112);
  uint64_t v640 = v645 + 112;
  v639(v492);
  uint64_t v498 = v563;
  uint64_t v642 = v495;
  uint64_t v643 = v494;
  v495(v563, v497, v496);
  uint64_t v499 = v576 + 8;
  v647 = *(void (**)(void, void))(v576 + 8);
  v647(v497, v578);
  char v500 = v569;
  LOBYTE(v497) = sub_10096BBE0();
  BOOL v501 = *(void (**)(char *, uint64_t))(v493 + 8);
  v501(v498, v496);
  v501(v500, v496);
  if (v497)
  {
    (*(void (**)(char *, void (*)(void, void, void)))(v626 + 8))(v570, v650);
    v647(v575, v578);
    uint64_t v344 = v636;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v624;
    goto LABEL_172;
  }
  uint64_t v576 = v499;
  int v528 = *(void (**)(char *, uint64_t))(v632 + 8);
  uint64_t v529 = v635;
  v528(v583, v635);
  uint64_t v530 = v559;
  ((void (*)(char *, uint64_t, uint64_t))v646)(v559, v649, v529);
  uint64_t v531 = v644;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v630)(v530, 1, v644) == 1)
  {
    v528(v530, v529);
  }
  else
  {
    uint64_t v532 = *(void *)v530;
    uint64_t v533 = *((void *)v530 + 1);
    uint64_t v534 = v531;
    unint64_t v535 = *((void *)v530 + 2);
    uint64_t v536 = (*(uint64_t (**)(char *, void (*)(void, void, void)))(v626 + 8))(&v530[*(int *)(v534 + 48)], v650);
    uint64_t v537 = *(void *)(*(void *)(v651[5] + 16) + 136);
    if (v532)
    {
      __chkstk_darwin(v536);
      *(&v548 - 4) = v537;
      *((_DWORD *)&v548 - 6) = 0;
      uint64_t v547 = v532;
      swift_retain();
      id v538 = v625;
      sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
      if (v538)
      {
        swift_errorRelease();
        sub_10001E9AC(v533, v535);
        swift_release();
        id v625 = 0;
      }
      else
      {
        id v625 = 0;
        *(unsigned char *)(v537 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(void *)(v537 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_10096C7F0(1uLL);
          swift_unknownObjectRelease();
        }
        sub_10001E9AC(v533, v535);
        swift_release();
        uint64_t v76 = v634;
      }
    }
    else
    {
      swift_retain();
      sub_10001E9AC(v533, v535);
      swift_release();
    }
  }
  swift_getWitnessTable();
  v651 = (void *)swift_allocError();
  uint64_t v540 = v539;
  uint64_t v541 = v566;
  v542 = &v539[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v543 = (void (*)(uint64_t, char *, uint64_t))v642;
  v642(v540, v575, v541);
  v544 = v565;
  ((void (*)(void (*)(void, void, void), uint64_t))v639)(v650, v645);
  v543((uint64_t)v542, v544, v541);
  uint64_t v545 = v578;
  uint64_t v546 = (void (*)(char *, uint64_t))v647;
  v647(v544, v578);
  swift_storeEnumTagMultiPayload();
  v631(0, v619, v623, (uint64_t)v651);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void (*)(void, void, void)))(v626 + 8))(v570, v650);
  v546(v575, v545);
  (*(void (**)(char *, uint64_t))(v618 + 8))(v624, v617);
  return (*(uint64_t (**)(char *, uint64_t))(v637 + 8))(v652, v76);
}

uint64_t sub_100891528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v12 = *(void *)(*(void *)a3 + 104);
  uint64_t v51 = *(void *)(*(void *)a3 + 88);
  uint64_t v52 = v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_10096B480();
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v48 = v21;
    uint64_t v49 = a8;
    uint64_t v50 = a3;
    swift_errorRetain();
    id v24 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v25(v19, a2, AssociatedTypeWitness);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v26 = sub_10096B470();
    os_log_type_t v27 = sub_10096C5B0();
    int v47 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v46 = v20;
      uint64_t v29 = v28;
      unint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v58 = v45;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v43 = v29 + 4;
      v25(v17, (uint64_t)v19, AssociatedTypeWitness);
      uint64_t v30 = *(void (**)(char *, uint64_t))(v14 + 8);
      v30(v19, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      uint64_t v31 = v26;
      uint64_t v32 = sub_10096D220();
      unint64_t v34 = v33;
      v30(v17, AssociatedTypeWitness);
      uint64_t v57 = sub_100719D44(v32, v34, &v58);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2112;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v57 = v35;
      sub_10096C8C0();
      *unint64_t v44 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v47, "updateEvictionReason for %s failed with %@", (uint8_t *)v29, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, AssociatedTypeWitness);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v20);
    }
    a8 = v49;
  }
  uint64_t v36 = swift_allocObject();
  uint64_t v38 = v53;
  uint64_t v37 = v54;
  *(void *)(v36 + 16) = v53;
  *(void *)(v36 + 24) = v37;
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v56;
  v39[2] = v55;
  v39[3] = v40;
  v39[4] = v38;
  v39[5] = v37;
  v39[6] = a8;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v41 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v36, (uint64_t)sub_1008AE654, (uint64_t)v39, v41, (uint64_t)&type metadata for String);
  swift_release();
  return swift_release();
}

uint64_t sub_100891A98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  os_log_type_t v27 = a3;
  uint64_t v21 = a2;
  uint64_t v24 = a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 88);
  uint64_t v6 = *(void *)(*(void *)a1 + 96);
  uint64_t v7 = *(void *)(*(void *)a1 + 104);
  uint64_t v28 = *(void *)(*(void *)a1 + 80);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  uint64_t v8 = type metadata accessor for ReconciliationMutation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  uint64_t v20 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = v13;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = v15;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v16 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v17 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, v21 + *(void *)(*(void *)v21 + 576), AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v16 = 768;
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v22;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v24, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v18);
  return v27(0, 0, 0, v25);
}

uint64_t sub_100891D88(int a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v85 = a6;
  uint64_t v86 = a5;
  unint64_t v89 = a2;
  LODWORD(v80) = a1;
  uint64_t v9 = *(void *)(*(void *)a3 + 80);
  uint64_t v10 = *(void *)(*(void *)a3 + 88);
  uint64_t v11 = *(void *)a3;
  uint64_t v12 = *(void *)(*(void *)a3 + 96);
  uint64_t v91 = a3;
  uint64_t v13 = *(void (**)(void, void))(v11 + 104);
  uint64_t v94 = v9;
  uint64_t v95 = v10;
  uint64_t v92 = v10;
  uint64_t v96 = v12;
  uint64_t v97 = v13;
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for ReconciliationMutation();
  uint64_t v81 = *(void *)(v15 - 8);
  uint64_t v82 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v78 = (char *)&v75 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v88 = sub_10096C890();
  uint64_t v93 = *(void *)(v88 - 8);
  uint64_t v20 = __chkstk_darwin(v88);
  uint64_t v79 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v75 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v25;
  uint64_t v96 = AssociatedConformanceWitness;
  uint64_t v97 = (void (*)(void, void))v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v90 = v14;
  if (v80)
  {
    uint64_t v76 = (char *)&v75 - v32;
    uint64_t v77 = v33;
    uint64_t v80 = a4;
    unint64_t v34 = v18;
    uint64_t v35 = v88;
    (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v23, v89, v88);
    uint64_t v36 = TupleTypeMetadata2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v23, 1, TupleTypeMetadata2) != 1)
    {
      sub_10001E9AC(*((void *)v23 + 1), *((void *)v23 + 2));
      uint64_t v56 = &v23[*(int *)(v36 + 48)];
      (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v9, v12);
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v56, v9);
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v31, v28);
      uint64_t v93 = v28;
      uint64_t v94 = v9;
      uint64_t v95 = v92;
      uint64_t v96 = v12;
      uint64_t v97 = v90;
      type metadata accessor for JobResult();
      uint64_t v57 = swift_getAssociatedTypeWitness();
      uint64_t v58 = swift_getAssociatedTypeWitness();
      uint64_t v59 = swift_getAssociatedConformanceWitness();
      uint64_t v60 = swift_getAssociatedConformanceWitness();
      uint64_t v94 = v57;
      uint64_t v95 = v58;
      uint64_t v96 = v59;
      uint64_t v97 = (void (*)(void, void))v60;
      type metadata accessor for ReconciliationID();
      uint64_t v92 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v61 = swift_getTupleTypeMetadata2();
      uint64_t v62 = (uint64_t)v78;
      uint64_t v63 = &v78[*(int *)(v61 + 48)];
      uint64_t v64 = v80 + *(void *)(*(void *)v80 + 576);
      uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      v65(v78, v64, v57);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v63 = 8;
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = v82;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v91, v62);
      uint64_t v90 = *(void (**)(void, void))(v81 + 8);
      v90(v62, v66);
      uint64_t v67 = v62 + *(int *)(v61 + 48);
      v65((char *)v62, v64, v57);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v93;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v70 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v71 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v72 = v77;
      uint64_t v73 = v76;
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v67, v76, v68);
      *(unsigned char *)(v67 + v70) = 1;
      *(unsigned char *)(v67 + v71) = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758(v91, v62);
      v90(v62, v66);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v68);
      return v86(0, v83, v84, 0);
    }
    (*(void (**)(char *, uint64_t))(v93 + 8))(v23, v35);
    uint64_t v18 = v34;
    a4 = v80;
  }
  uint64_t v37 = a4 + *(void *)(*(void *)a4 + 576);
  uint64_t v38 = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v18, v37, v38);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v80 = v12;
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = v38;
  uint64_t v95 = v39;
  uint64_t v96 = v40;
  uint64_t v97 = (void (*)(void, void))v41;
  type metadata accessor for ReconciliationID();
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v79;
  uint64_t v43 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v79, v89, v88);
  uint64_t v44 = TupleTypeMetadata2;
  BOOL v45 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v42, 1, TupleTypeMetadata2) == 1;
  uint64_t v46 = (uint64_t)v18;
  int v47 = v42;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v42, v43);
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v93 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    unint64_t v89 = 0xB000000000000000;
  }
  else
  {
    uint64_t v48 = *(void *)v42;
    uint64_t v49 = *((void *)v42 + 1);
    unint64_t v89 = *((void *)v42 + 2);
    uint64_t v50 = *((void *)v42 + 4);
    uint64_t v93 = *((void *)v42 + 3);
    uint64_t v51 = v42[40];
    uint64_t v52 = *((void *)v42 + 6);
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(&v47[*(int *)(v44 + 48)], v9);
  }
  uint64_t v94 = v9;
  uint64_t v95 = v92;
  uint64_t v96 = v80;
  uint64_t v97 = v90;
  type metadata accessor for JobResult();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v53 = v46 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(void *)uint64_t v53 = v48;
  *(void *)(v53 + 8) = v49;
  uint64_t v54 = v93;
  *(void *)(v53 + 16) = v89;
  *(void *)(v53 + 24) = v54;
  *(void *)(v53 + 32) = v50;
  *(void *)(v53 + 40) = v51;
  *(void *)(v53 + 48) = v52;
  *(unsigned char *)(v53 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v82;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v91, v46);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v46, v55);
  return v86(0, v83, v84, 0);
}

uint64_t sub_10089277C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v139 = a4;
  uint64_t v140 = a5;
  uint64_t v141 = a3;
  id v144 = a1;
  uint64_t v8 = (void *)*v6;
  uint64_t v9 = *(void *)(*v6 + 600);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_10096C890();
  unint64_t v134 = *(char **)(v10 - 8);
  uint64_t v135 = v10;
  __chkstk_darwin(v10);
  uint64_t v133 = (char *)&v103 - v11;
  uint64_t v12 = v8[76];
  uint64_t v13 = v8[78];
  uint64_t v14 = type metadata accessor for SnapshotItem();
  uint64_t v114 = sub_10096C890();
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v15 = __chkstk_darwin(v114);
  uint64_t v116 = (char *)&v103 - v16;
  uint64_t v130 = v14;
  uint64_t v115 = *(void *)(v14 - 8);
  __chkstk_darwin(v15);
  uint64_t v112 = (char *)&v103 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v124 = sub_10096C890();
  uint64_t v120 = *(void *)(v124 - 8);
  uint64_t v19 = __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v103 - v20;
  uint64_t v122 = AssociatedTypeWitness;
  uint64_t v129 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v19);
  char v117 = (char *)&v103 - v21;
  uint64_t v22 = v8[77];
  uint64_t v145 = v9;
  uint64_t v146 = v12;
  uint64_t v127 = v12;
  uint64_t v147 = v22;
  uint64_t v148 = v13;
  uint64_t v126 = v13;
  uint64_t v23 = type metadata accessor for ItemReconciliation();
  uint64_t v119 = sub_10096C890();
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v24 = __chkstk_darwin(v119);
  uint64_t v128 = (char *)&v103 - v25;
  uint64_t v125 = *(void *)(v23 - 8);
  __chkstk_darwin(v24);
  uint64_t v123 = (char *)&v103 - v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v145 = v27;
  uint64_t v146 = v28;
  uint64_t v147 = AssociatedConformanceWitness;
  uint64_t v148 = v30;
  uint64_t v131 = type metadata accessor for FileItemVersion();
  uint64_t v143 = sub_10096C890();
  uint64_t v138 = *(void *)(v143 - 8);
  uint64_t v31 = *(void *)(v138 + 64);
  uint64_t v32 = __chkstk_darwin(v143);
  uint64_t v137 = (char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  unint64_t v34 = (char *)&v103 - v33;
  uint64_t v35 = v8;
  uint64_t v36 = v6[17];
  int v142 = (void **)a2;
  uint64_t v37 = *(void *)(a2 + 32);
  uint64_t v38 = v35[72];
  uint64_t v136 = v6;
  uint64_t v39 = (uint64_t)v6 + v38;
  (*(void (**)(char *))(*(void *)v37 + 616))((char *)v6 + v38);
  uint64_t v40 = (uint64_t)v128;
  uint64_t v111 = v36;
  uint64_t v109 = v31;
  uint64_t v107 = v23;
  uint64_t v41 = v129;
  uint64_t v110 = v22;
  uint64_t v108 = v9;
  uint64_t v42 = v130;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 624))(v39);
  uint64_t v45 = v37;
  uint64_t v106 = v39;
  if (v44 == 4) {
    unsigned int v46 = 0;
  }
  else {
    unsigned int v46 = v44;
  }
  unsigned int v105 = v46;
  if (v44 == 4) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = v43;
  }
  BOOL v48 = sub_1005152D8();
  uint64_t v49 = 0;
  uint64_t v50 = v34;
  if (v48) {
    goto LABEL_14;
  }
  id v51 = v144;
  uint64_t v52 = v111;
  if (!v144) {
    goto LABEL_16;
  }
  id v53 = v144;
  if ([v53 requestedExtent] == (id)-1)
  {

    uint64_t v49 = 0;
    id v51 = v144;
    goto LABEL_16;
  }
  id v103 = v53;
  uint64_t v54 = v40;
  sub_1000DEDD8(v106, v40);
  uint64_t v55 = v125;
  uint64_t v56 = v40;
  uint64_t v57 = v107;
  int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v56, 1, v107);
  if (v58 != 1)
  {
    uint64_t v104 = v47;
    uint64_t v84 = v54;
    uint64_t v85 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v123, v84, v57);
    uint64_t v86 = &v85[*(int *)(v57 + 52)];
    uint64_t v87 = v120;
    uint64_t v88 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v121, v86, v124);
    uint64_t v89 = v41;
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    uint64_t v91 = v122;
    if (v90(v88, 1, v122) == 1)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v85, v107);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v124);
    }
    else
    {
      uint64_t v92 = v89;
      uint64_t v93 = v117;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v117, v88, v91);
      uint64_t v94 = v116;
      (*(void (**)(char *, uint64_t))(*v142[5] + 240))(v93, 1);
      uint64_t v95 = v91;
      uint64_t v96 = v92;
      uint64_t v97 = v115;
      uint64_t v98 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v94, 1, v42) != 1)
      {
        uint64_t v99 = v96;
        uint64_t v100 = v95;
        uint64_t v101 = v112;
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v112, v94, v98);

        uint64_t v102 = &v101[*(int *)(v98 + 48)];
        LODWORD(v102) = *(void *)&v102[*(int *)(type metadata accessor for ItemMetadata() + 104)] > 0;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v101, v98);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v117, v100);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v107);
        uint64_t v49 = 8 * v102;
        goto LABEL_26;
      }

      (*(void (**)(char *, uint64_t))(v96 + 8))(v117, v95);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v107);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v94, v114);
    }
    uint64_t v49 = 0;
LABEL_26:
    id v51 = v144;
    uint64_t v47 = v104;
    goto LABEL_15;
  }

  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v54, v119);
  uint64_t v49 = 0;
LABEL_14:
  id v51 = v144;
LABEL_15:
  uint64_t v52 = v111;
LABEL_16:
  uint64_t v104 = v47;
  uint64_t v60 = v136;
  uint64_t v59 = v137;
  uint64_t v61 = (v136[17] >> 10) & 0x40 | v49;
  if ((v52 & 0x4400000000) != 0) {
    uint64_t v62 = v61 | 0x100;
  }
  else {
    uint64_t v62 = v61;
  }
  if (v51) {
    uint64_t v63 = v61;
  }
  else {
    uint64_t v63 = v62;
  }
  uint64_t v133 = (char *)v63;
  uint64_t v64 = *(void *)(v45 + 16);
  uint64_t v65 = v142;
  uint64_t v66 = (uint64_t (*)(uint64_t))(*v142)[34];
  id v67 = v51;
  uint64_t v68 = swift_retain();
  uint64_t v135 = v66(v68);
  uint64_t v69 = v138;
  uint64_t v70 = v143;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v59, v50, v143);
  unint64_t v71 = (*(unsigned __int8 *)(v69 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v72 = swift_allocObject();
  unint64_t v134 = v50;
  uint64_t v73 = v72;
  uint64_t v74 = v127;
  *(void *)(v72 + 16) = v108;
  *(void *)(v72 + 24) = v74;
  uint64_t v75 = v126;
  *(void *)(v72 + 32) = v110;
  *(void *)(v72 + 40) = v75;
  *(void *)(v72 + 48) = v67;
  *(void *)(v72 + 56) = v60;
  *(unsigned char *)(v72 + 64) = (v63 & 8) != 0;
  uint64_t v77 = v140;
  uint64_t v76 = v141;
  *(void *)(v72 + 72) = v65;
  *(void *)(v72 + 80) = v76;
  *(void *)(v72 + 88) = v139;
  *(void *)(v72 + 96) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v72 + v71, v59, v70);
  uint64_t v78 = *(void (**)(uint64_t, void, uint64_t, char *, uint64_t, id, char *, uint64_t (*)(uint64_t), uint64_t))(*(void *)v64 + 568);
  id v79 = v144;
  id v80 = v144;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v82 = v134;
  uint64_t v81 = (void *)v135;
  v78(v106, v105, v104, v134, v135, v79, v133, sub_1008AE8B0, v73);
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v82, v143);
}

uint64_t sub_100893654(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v58 = a8;
  uint64_t v59 = a7;
  uint64_t v63 = a6;
  uint64_t v61 = a5;
  int v60 = a4;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v10 = *(void *)(*(void *)a3 + 600);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_10096C890();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v49 - v15;
  uint64_t v62 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t v65 = v17;
  uint64_t v66 = AssociatedConformanceWitness;
  uint64_t v67 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_10096C890();
  uint64_t v50 = *(void *)(v21 - 8);
  uint64_t v51 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = sub_10096C890();
  uint64_t v56 = *(void *)(v25 - 8);
  uint64_t v57 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v49 - v29;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v31 = sub_10096D510();
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v49 - v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))((char *)&v49 - v32, v54, v31);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = *v33;
    if (v55)
    {
      uint64_t v36 = v55;
      if ([v36 requestedExtent] != (id)-1) {
        [v36 setSelectedForMaterialization:0];
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v30, 1, 1, v24);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
    uint64_t v37 = *(void *)(v62 + 136);
    swift_errorRetain();
    sub_10088BBB8((uint64_t)v30, v60 & 1, 0, v35, (uint64_t)v23, 0, v61, v63, v37, v59, v58);
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v30, v57);
  }
  else
  {
    uint64_t v39 = v52;
    uint64_t v40 = v49;
    (*(void (**)(char *, uint64_t *, uint64_t))(v52 + 32))(v49, v33, v11);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v14, v40, v11);
    uint64_t v41 = TupleTypeMetadata2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v11);
      uint64_t v42 = 1;
    }
    else
    {
      uint64_t v43 = *((void *)v14 + 4);
      char v44 = v14[40];
      uint64_t v45 = *((void *)v14 + 6);
      unsigned int v46 = &v14[*(int *)(v41 + 48)];
      uint64_t v47 = &v28[*(int *)(v24 + 48)];
      long long v48 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v14;
      *((_OWORD *)v28 + 1) = v48;
      *((void *)v28 + 4) = v43;
      v28[40] = v44;
      *((void *)v28 + 6) = v45;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v47, v46, v10);
      uint64_t v42 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, v42, 1, v24);
    sub_10088BBB8((uint64_t)v28, v60 & 1, 0, 0, a9, v55, v61, v63, *(void *)(v62 + 136), v59, v58);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v57);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v11);
  }
}

uint64_t sub_100893D2C(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = (uint64_t)v5;
  id v201 = a4;
  uint64_t v202 = a5;
  uint64_t v203 = a3;
  uint64_t v204 = a1;
  unint64_t v205 = a2;
  uint64_t v7 = *v5;
  uint64_t v8 = *((void *)*v5 + 76);
  uint64_t v9 = *((void *)*v5 + 78);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  uint64_t v168 = sub_10096C890();
  uint64_t v167 = *(void *)(v168 - 8);
  uint64_t v11 = __chkstk_darwin(v168);
  uint64_t v166 = (char *)&v148 - v12;
  uint64_t v169 = v10;
  uint64_t v170 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v164 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = v14;
  __chkstk_darwin(v13);
  uint64_t v165 = (char *)&v148 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v178 = (void *)sub_10096C890();
  unint64_t v177 = *(v178 - 1);
  uint64_t v17 = __chkstk_darwin(v178);
  uint64_t v176 = (char *)&v148 - v18;
  uint64_t v181 = AssociatedTypeWitness;
  uint64_t v180 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v17);
  int v179 = (char *)&v148 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  unint64_t v172 = v20;
  uint64_t v206 = v20;
  uint64_t v207 = v21;
  unint64_t v160 = v21;
  uint64_t v171 = AssociatedConformanceWitness;
  uint64_t v208 = AssociatedConformanceWitness;
  uint64_t v209 = v23;
  uint64_t v159 = v23;
  uint64_t v24 = type metadata accessor for FileItemVersion();
  uint64_t v186 = sub_10096C890();
  uint64_t v185 = *(void *)(v186 - 8);
  uint64_t v25 = __chkstk_darwin(v186);
  uint64_t v163 = (char *)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v183 = (char *)&v148 - v28;
  uint64_t v189 = v24;
  unint64_t v184 = *(void *)(v24 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  char v162 = (char *)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v175 = (char *)&v148 - v32;
  uint64_t v157 = v33;
  __chkstk_darwin(v31);
  uint64_t v182 = (char *)&v148 - v34;
  uint64_t v200 = v7;
  uint64_t v35 = *((void *)v7 + 77);
  uint64_t v36 = *((void *)v7 + 75);
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v174 = v37;
  uint64_t v206 = v37;
  uint64_t v207 = v38;
  int v173 = (void *)v39;
  uint64_t v208 = v39;
  uint64_t v209 = v40;
  uint64_t v41 = type metadata accessor for FileItemVersion();
  uint64_t v193 = sub_10096C890();
  unint64_t v191 = *(void (**)(char *, char *, uint64_t))(v193 - 8);
  uint64_t v42 = __chkstk_darwin(v193);
  uint64_t v192 = (char *)&v148 - v43;
  uint64_t v196 = v41;
  uint64_t v197 = *(void *)(v41 - 8);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v161 = (char *)&v148 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = v45;
  __chkstk_darwin(v44);
  uint64_t v190 = (char *)&v148 - v46;
  uint64_t v194 = v36;
  uint64_t v206 = v36;
  uint64_t v207 = v8;
  uint64_t v188 = v8;
  uint64_t v195 = v35;
  uint64_t v208 = v35;
  uint64_t v209 = v9;
  uint64_t v187 = v9;
  uint64_t v47 = type metadata accessor for ItemReconciliation();
  uint64_t v48 = sub_10096C890();
  uint64_t v198 = *(char **)(v48 - 8);
  uint64_t v199 = v48;
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v51 = (char *)&v148 - v50;
  uint64_t v52 = *(void *)(v47 - 8);
  uint64_t v53 = *(void *)(v52 + 64);
  uint64_t v54 = __chkstk_darwin(v49);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v148 - v55;
  uint64_t v57 = v6 + *((void *)v200 + 72);
  sub_1000DEDD8(v57, (uint64_t)v51);
  uint64_t v152 = v57;
  uint64_t v153 = v53;
  uint64_t v200 = (char *)&v148 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v51, 1, v47) == 1)
  {
    (*((void (**)(char *, uint64_t))v198 + 1))(v51, v199);
    return sub_10089277C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v199 = v6;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  int v60 = v155;
  uint64_t v154 = v47;
  v59(v155, v51, v47);
  uint64_t v61 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v62 = v191;
  uint64_t v63 = v192;
  uint64_t v64 = v193;
  (*((void (**)(char *, char *, uint64_t))v191 + 2))(v192, &v60[*(int *)(v61 + 48)], v193);
  uint64_t v65 = v196;
  uint64_t v66 = v197;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v63, 1, v196) == 1)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v60, v154);
    (*((void (**)(char *, uint64_t))v62 + 1))(v63, v64);
    return sub_10089277C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v193 = v52 + 32;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v68 = v190;
  unint64_t v191 = v59;
  uint64_t v192 = (char *)(v66 + 32);
  uint64_t v150 = v67;
  v67(v190, v63, v65);
  uint64_t v69 = &v60[*(int *)(v154 + 52)];
  uint64_t v70 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 48);
  uint64_t v198 = v69;
  unint64_t v71 = &v69[v70];
  uint64_t v72 = v185;
  uint64_t v73 = v183;
  uint64_t v74 = v186;
  (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v183, v71, v186);
  unint64_t v75 = v184;
  uint64_t v76 = v189;
  if ((*(unsigned int (**)(char *, uint64_t))(v184 + 48))(v73, 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v155, v154);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    return sub_10089277C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v151 = v52;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  uint64_t v78 = (uint64_t)v182;
  uint64_t v183 = (char *)(v75 + 32);
  uint64_t v149 = v77;
  v77(v182, v73, v76);
  unint64_t v79 = v177;
  id v80 = v176;
  uint64_t v81 = v178;
  (*(void (**)(char *, char *, void *))(v177 + 16))(v176, v198, v178);
  uint64_t v82 = v180;
  uint64_t v83 = v181;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v80, 1, v181) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, v76);
    (*(void (**)(char *, uint64_t))(v197 + 8))(v190, v65);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v155, v154);
    (*(void (**)(char *, void *))(v79 + 8))(v80, v81);
    return sub_10089277C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v84 = v82;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v179, v80, v83);
  uint64_t v85 = v205;
  uint64_t v86 = (void *)v205[5];
  uint64_t v87 = v173;
  uint64_t v88 = (uint64_t (*)(uint64_t, void *))v173[6];
  uint64_t v198 = (char *)v86[2];
  swift_retain();
  char v89 = v88(v174, v87);
  uint64_t v90 = (uint64_t)v182;
  uint64_t v91 = v189;
  char v92 = v89;
  uint64_t v93 = v175;
  uint64_t v178 = *(void **)(v75 + 16);
  ((void (*)(char *, char *, uint64_t))v178)(v175, v182, v189);
  if (v92)
  {
    uint64_t v94 = *(void (**)(char *, uint64_t))(v75 + 8);
    v94(v93, v91);
    uint64_t v95 = v179;
LABEL_14:
    sub_10089277C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v95, v181);
    v94((char *)v90, v91);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v197 + 8))(v190, v196);
    return (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v155, v154);
  }
  unint64_t v177 = v75 + 16;
  char v96 = (*(uint64_t (**)(unint64_t))(v171 + 48))(v172);
  uint64_t v98 = *(void (**)(char *, uint64_t))(v75 + 8);
  uint64_t v97 = (char *)(v75 + 8);
  uint64_t v94 = v98;
  v98(v93, v91);
  if (v96)
  {
    uint64_t v95 = v179;
    goto LABEL_14;
  }
  uint64_t v176 = v97;
  uint64_t v99 = (void (*)(uint64_t, uint64_t))v94;
  uint64_t v100 = v166;
  uint64_t v101 = v179;
  (*(void (**)(char *, uint64_t))(*v86 + 240))(v179, 1);
  uint64_t v102 = v170;
  uint64_t v103 = v169;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v100, 1, v169) == 1)
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v100, v168);
    sub_10089277C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v181);
    uint64_t v104 = v90;
LABEL_17:
    v99(v104, v189);
    goto LABEL_18;
  }
  uint64_t v106 = *(char **)(v102 + 32);
  uint64_t v105 = v102 + 32;
  uint64_t v107 = v165;
  uint64_t v175 = v106;
  ((void (*)(char *, char *, uint64_t))v106)(v165, v100, v103);
  uint64_t WitnessTable = swift_getWitnessTable();
  if ((FileItem.isDataless.getter(v103, WitnessTable) & 1) != 0
    || !static FileItemVersion.__derived_struct_equals(_:_:)((uint64_t)&v107[*(int *)(v103 + 40)], (uint64_t)v182))
  {
    sub_10089277C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v170 + 8))(v107, v103);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v181);
LABEL_31:
    uint64_t v104 = (uint64_t)v182;
    goto LABEL_17;
  }
  uint64_t v174 = v105;
  uint64_t v109 = (*(uint64_t (**)(uint64_t))(*(void *)v85[4] + 624))(v152);
  LODWORD(v168) = v110 == 4;
  if (v110 == 4) {
    uint64_t v111 = 0;
  }
  else {
    uint64_t v111 = v109;
  }
  uint64_t v167 = v111;
  uint64_t v112 = (uint64_t)v182;
  uint64_t v113 = v154;
  uint64_t v114 = v163;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*v205 + 272))(v109);
  int v173 = (void *)result;
  if (v204) {
    unint64_t v172 = 0;
  }
  else {
    unint64_t v172 = (unint64_t)((*(unsigned char *)(v199 + 140) & 0x44) != 0) << 8;
  }
  uint64_t v115 = v165;
  LODWORD(v171) = v155[*(int *)(v113 + 56)];
  if (v171 != 4)
  {
    uint64_t v116 = v113;
    uint64_t v117 = v103;
    uint64_t v118 = &v165[*(int *)(v103 + 48)];
    uint64_t v166 = *(char **)&v118[*(int *)(type metadata accessor for ItemMetadata() + 100)];
    uint64_t v119 = v189;
    uint64_t v120 = (void (*)(char *, uint64_t, uint64_t))v178;
    ((void (*)(char *, uint64_t))v178)(v114, v112);
    unint64_t v121 = v184 + 56;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v114, 0, 1, v119);
    v120(v162, v112, v119);
    uint64_t v122 = v151;
    (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v200, v155, v116);
    uint64_t v123 = v170;
    (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v164, v115, v117);
    uint64_t v124 = v196;
    uint64_t v125 = v197;
    (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v161, v190, v196);
    unint64_t v126 = (*(unsigned __int8 *)(v121 + 24) + 96) & ~(unint64_t)*(unsigned __int8 *)(v121 + 24);
    uint64_t v178 = (void *)((v157 + v126 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v127 = ((unint64_t)v178 + *(unsigned __int8 *)(v122 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    unint64_t v177 = (v153 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v128 = (*(unsigned __int8 *)(v123 + 80) + v177 + 9) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    unint64_t v160 = (v158 + *(unsigned __int8 *)(v125 + 80) + v128) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
    unint64_t v184 = (v156 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v129 = v124;
    unint64_t v130 = (v184 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v131 = (char *)swift_allocObject();
    uint64_t v132 = v188;
    *((void *)v131 + 2) = v194;
    *((void *)v131 + 3) = v132;
    uint64_t v133 = v187;
    *((void *)v131 + 4) = v195;
    *((void *)v131 + 5) = v133;
    id v134 = v201;
    uint64_t v135 = v202;
    *((void *)v131 + 6) = v205;
    *((void *)v131 + 7) = v134;
    uint64_t v136 = v199;
    *((void *)v131 + 8) = v135;
    *((void *)v131 + 9) = v136;
    uint64_t v137 = &v131[v126];
    uint64_t v138 = v203;
    uint64_t v139 = v204;
    *((void *)v131 + 10) = v204;
    *((void *)v131 + 11) = v138;
    v149(v137, v162, v189);
    uint64_t v140 = v198;
    *(void *)((char *)v178 + (void)v131) = v198;
    v191(&v131[v127], v200, v154);
    uint64_t v141 = &v131[v177];
    *(void *)uint64_t v141 = v167;
    v141[8] = v168;
    ((void (*)(char *, char *, uint64_t))v175)(&v131[v128], v164, v169);
    v150(&v131[v160], v161, v129);
    int v142 = v173;
    *(void *)&v131[v184] = v173;
    unint64_t v143 = v172;
    *(void *)&v131[v130] = v172;
    uint64_t v200 = (char *)(*(void *)v140 + 568);
    id v144 = *(void (**)(char *, void, char *, char *, void *, void *, unint64_t, uint64_t (*)(uint64_t), void *))v200;
    id v201 = v142;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v145 = v139;
    swift_retain();
    uint64_t v146 = v179;
    uint64_t v147 = v163;
    v144(v179, v171, v166, v163, v142, v139, v143, sub_1008AD7FC, v131);
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v185 + 8))(v147, v186);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v165, v169);
    (*(void (**)(char *, uint64_t))(v180 + 8))(v146, v181);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_100895338(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v119 = a8;
  uint64_t v123 = a7;
  uint64_t v124 = a6;
  uint64_t v127 = a5;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v125 = a1;
  uint64_t v17 = *a2;
  uint64_t v18 = *(void *)(*a2 + 88);
  uint64_t v19 = *(void *)(*a2 + 104);
  uint64_t v108 = type metadata accessor for SnapshotItem();
  uint64_t v109 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v107 = (char *)&v101 - v20;
  uint64_t v21 = *(void *)(v17 + 96);
  unint64_t v126 = a2;
  uint64_t v22 = *(void *)(v17 + 80);
  uint64_t v111 = v21;
  uint64_t v110 = v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v112 = (char *)&v101 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v128 = v24;
  *((void *)&v128 + 1) = v25;
  uint64_t v117 = v27;
  uint64_t v118 = AssociatedConformanceWitness;
  *(void *)&long long v129 = AssociatedConformanceWitness;
  *((void *)&v129 + 1) = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v115 = *(void *)(v28 - 8);
  uint64_t v116 = v28;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v101 - v29;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v34 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v106 = (_OWORD *)((char *)&v101 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  uint64_t v120 = (_OWORD *)((char *)&v101 - v35);
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v36 = sub_10096D510();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v101 - v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))((char *)&v101 - v37, v125, v36);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
LABEL_4:
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = v121;
    uint64_t v42 = v122;
    *(void *)(v40 + 16) = v121;
    *(void *)(v40 + 24) = v42;
    uint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v126;
    uint64_t v46 = v123;
    uint64_t v45 = v124;
    v43[2] = v127;
    v43[3] = v45;
    v43[4] = v44;
    v43[5] = v46;
    v43[6] = v41;
    v43[7] = v42;
    uint64_t v47 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    id v48 = v45;
    swift_retain();
    swift_retain();
    sub_10035B9F4((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_1003B377C, v40, (uint64_t)sub_1008ADB68, (uint64_t)v43, v47, (uint64_t)&type metadata for String);
    swift_release();
    return swift_release();
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v38, 1, TupleTypeMetadata2) == 1) {
    goto LABEL_4;
  }
  uint64_t v125 = v32;
  uint64_t v104 = a9;
  uint64_t v105 = TupleTypeMetadata2;
  uint64_t v50 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v51 = v120;
  uint64_t v52 = (char *)v120 + v50;
  uint64_t v53 = &v38[v50];
  uint64_t v54 = *((void *)v38 + 4);
  char v55 = v38[40];
  uint64_t v56 = *((void *)v38 + 6);
  long long v57 = *((_OWORD *)v38 + 1);
  _OWORD *v120 = *(_OWORD *)v38;
  v51[1] = v57;
  *((void *)v51 + 4) = v54;
  *((unsigned char *)v51 + 40) = v55;
  *((void *)v51 + 6) = v56;
  uint64_t v58 = *(void *)(v18 - 8);
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v52, v53, v18);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v19 + 112);
  uint64_t v103 = v52;
  v59(v18, v19);
  BOOL v60 = static FileItemVersion.__derived_struct_equals(_:_:)((uint64_t)v30, v119);
  uint64_t v61 = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v30, v116);
  if (v60)
  {
    uint64_t v119 = *(void *)(v126[4] + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v112, v127 + *(void *)(*(void *)v127 + 576), AssociatedTypeWitness);
    *(void *)&long long v128 = v110;
    *((void *)&v128 + 1) = v18;
    *(void *)&long long v129 = v111;
    *((void *)&v129 + 1) = v19;
    uint64_t result = type metadata accessor for ItemReconciliation();
    int v62 = *(unsigned __int8 *)(a10 + *(int *)(result + 56));
    if (v62 == 4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v116 = a15;
      uint64_t v117 = a16;
      uint64_t v63 = v107;
      uint64_t v64 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v107, a13, v108);
      LODWORD(v118) = v62;
      uint64_t v115 = a14;
      if (a12)
      {
        uint64_t v70 = &v63[*(int *)(v64 + 48)];
        a11 = *(void *)&v70[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      }
      uint64_t v102 = a11;
      unint64_t v71 = v120;
      uint64_t v72 = *(void (**)(char *, uint64_t))(v109 + 8);
      swift_retain();
      v72(v63, v64);
      uint64_t v131 = *((void *)v71 + 6);
      uint64_t v73 = v131;
      long long v74 = v71[1];
      long long v128 = *v71;
      long long v129 = v74;
      long long v130 = v71[2];
      long long v75 = v130;
      uint64_t v76 = v106;
      uint64_t v77 = (char *)v106 + *(int *)(v105 + 48);
      *uint64_t v106 = v128;
      v76[1] = v74;
      v76[2] = v75;
      *((void *)v76 + 6) = v73;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v77, v103, v18);
      unint64_t v78 = (*(unsigned __int8 *)(v125 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      unint64_t v79 = (v33 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v80 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v81 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v83 = (char *)swift_allocObject();
      *((void *)v83 + 2) = v110;
      *((void *)v83 + 3) = v18;
      *((void *)v83 + 4) = v111;
      *((void *)v83 + 5) = v19;
      *((void *)v83 + 6) = v104;
      (*(void (**)(char *, _OWORD *, uint64_t))(v125 + 32))(&v83[v78], v76, v105);
      uint64_t v84 = v124;
      *(void *)&v83[v79] = v124;
      uint64_t v85 = v126;
      *(void *)&v83[v80] = v127;
      *(void *)&v83[v81] = v85;
      *(void *)&v83[v82] = v123;
      uint64_t v86 = &v83[(v82 + 15) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v87 = v122;
      *(void *)uint64_t v86 = v121;
      *((void *)v86 + 1) = v87;
      uint64_t v88 = *(void (**)(char *, void, uint64_t, long long *, uint64_t, uint64_t, void *, uint64_t, uint64_t (*)(uint64_t), char *))(*(void *)v119 + 576);
      id v89 = v84;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100243DB8((uint64_t)&v128);
      uint64_t v90 = v112;
      v88(v112, v118, v102, &v128, v115, v116, v84, v117, sub_1008ADCFC, v83);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v90, AssociatedTypeWitness);
      return (*(uint64_t (**)(_OWORD *, uint64_t))(v125 + 8))(v120, v105);
    }
  }
  else
  {
    uint64_t v66 = v105;
    uint64_t v67 = v125;
    if (*(void *)v51)
    {
      uint64_t v68 = *(void *)(v104 + 136);
      __chkstk_darwin(v61);
      *(&v101 - 4) = v68;
      *((_DWORD *)&v101 - 6) = 0;
      uint64_t v100 = v69;
      sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100243DE8);
      *(unsigned char *)(v68 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v68 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C7F0(1uLL);
        swift_unknownObjectRelease();
      }
    }
    uint64_t v91 = swift_allocObject();
    uint64_t v92 = v121;
    uint64_t v93 = v122;
    *(void *)(v91 + 16) = v121;
    *(void *)(v91 + 24) = v93;
    uint64_t v94 = (void *)swift_allocObject();
    uint64_t v95 = v126;
    uint64_t v97 = v123;
    char v96 = v124;
    v94[2] = v127;
    v94[3] = v96;
    v94[4] = v95;
    v94[5] = v97;
    v94[6] = v92;
    v94[7] = v93;
    uint64_t v98 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    id v99 = v96;
    swift_retain();
    swift_retain();
    sub_10035B9F4((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_1003B377C, v91, (uint64_t)sub_1008ADB68, (uint64_t)v94, v98, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(_OWORD *, uint64_t))(v67 + 8))(v120, v66);
  }
  return result;
}

uint64_t sub_100895EF8(uint64_t a1, void *a2, char *a3, uint64_t (*a4)(char *, uint64_t, uint64_t), void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v131 = a8;
  uint64_t v127 = a7;
  uint64_t v133 = a6;
  uint64_t v117 = a4;
  uint64_t v137 = a3;
  uint64_t v134 = a1;
  uint64_t v11 = *a5;
  uint64_t v136 = *(void *)(*a2 + 192);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v13 = (char *)&v105 - v12;
  uint64_t v14 = *(void *)(v11 + 600);
  uint64_t v135 = swift_getTupleTypeMetadata2();
  uint64_t v15 = sub_10096C890();
  uint64_t v129 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v118 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v105 - v19;
  __chkstk_darwin(v18);
  long long v128 = (char *)&v105 - v21;
  uint64_t v132 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v139 = AssociatedTypeWitness;
  uint64_t v140 = v23;
  uint64_t v141 = AssociatedConformanceWitness;
  uint64_t v142 = v25;
  uint64_t v121 = type metadata accessor for FileItemVersion();
  uint64_t v26 = sub_10096C890();
  uint64_t v125 = *(void *)(v26 - 8);
  uint64_t v126 = v26;
  __chkstk_darwin(v26);
  uint64_t v124 = (char *)&v105 - v27;
  uint64_t v119 = v14;
  uint64_t v120 = swift_getTupleTypeMetadata2();
  uint64_t v123 = sub_10096C890();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v28 = __chkstk_darwin(v123);
  uint64_t v30 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v114 = (char *)&v105 - v31;
  uint64_t v113 = (void (*)(char *, char *, uint64_t))sub_10096B220();
  uint64_t v112 = *((void *)v113 - 1);
  __chkstk_darwin(v113);
  uint64_t v115 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v130 = v15;
  uint64_t v33 = sub_10096D510();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (uint64_t *)((char *)&v105 - v36);
  if (*(void *)v137)
  {
    uint64_t v38 = a2[17];
    __chkstk_darwin(v35);
    sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100248440);
    *(unsigned char *)(v38 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v38 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C7F0(1uLL);
      swift_unknownObjectRelease();
    }
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 16))(v37, v134, v33);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v46 = v128;
    uint64_t v45 = v129;
    uint64_t v47 = v37;
    uint64_t v48 = v130;
    (*(void (**)(char *, uint64_t *, uint64_t))(v129 + 32))(v128, v47, v130);
    uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    uint64_t v114 = (char *)(v45 + 16);
    v113(v20, v46, v48);
    uint64_t v49 = v135;
    uint64_t v50 = *(void *)(v135 - 8);
    uint64_t v117 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    uint64_t v115 = (char *)(v50 + 48);
    int v51 = v117(v20, 1, v135);
    uint64_t v111 = a9;
    uint64_t v110 = v30;
    if (v51 == 1)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v48);
      uint64_t v52 = 0;
      uint64_t v112 = 0;
      uint64_t v108 = 0;
      uint64_t v134 = 0;
      uint64_t v107 = 0;
      uint64_t v109 = 0;
      unint64_t v53 = 0xB000000000000000;
    }
    else
    {
      uint64_t v52 = *(void *)v20;
      uint64_t v112 = *((void *)v20 + 1);
      unint64_t v53 = *((void *)v20 + 2);
      uint64_t v108 = *((void *)v20 + 3);
      uint64_t v134 = *((void *)v20 + 4);
      uint64_t v107 = v20[40];
      uint64_t v109 = *((void *)v20 + 6);
      (*(void (**)(char *))(*(void *)(v119 - 8) + 8))(&v20[*(int *)(v49 + 48)]);
    }
    uint64_t v59 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v60 = v136;
    uint64_t v61 = *(void *)v137;
    uint64_t v62 = *((void *)v137 + 1);
    unint64_t v63 = *((void *)v137 + 2);
    uint64_t v64 = *((void *)v137 + 3);
    uint64_t v65 = *((void *)v137 + 4);
    char v66 = v137[40];
    uint64_t v67 = *((void *)v137 + 6);
    *(void *)uint64_t v13 = *(void *)v137;
    *((void *)v13 + 1) = v62;
    *((void *)v13 + 2) = v63;
    *((void *)v13 + 3) = v64;
    *((void *)v13 + 4) = v65;
    unsigned char v13[40] = v66;
    *((void *)v13 + 6) = v67;
    uint64_t v68 = *(void *)(v60 - 8);
    uint64_t v69 = *(void (**)(void))(v68 + 16);
    uint64_t v137 = v59;
    v69();
    if (v53 >> 60 == 11)
    {
      sub_10002D830(v62, v63);
      sub_1000D35D8(v52, v112, v53);
      uint64_t v70 = v61;
      uint64_t v71 = v62;
      unint64_t v72 = v63;
LABEL_25:
      sub_1000D35D8(v70, v71, v72);
      int v82 = 0;
      uint64_t v75 = v127;
      uint64_t v83 = v128;
      uint64_t v85 = v131;
      uint64_t v84 = v132;
      uint64_t v87 = v129;
      uint64_t v86 = v130;
      uint64_t v73 = v113;
LABEL_26:
      uint64_t v76 = v137;
LABEL_27:
      (*(void (**)(char *, uint64_t))(v68 + 8))(v76, v136);
      uint64_t v88 = v118;
      v73(v118, v83, v86);
      uint64_t v89 = v135;
      if (v117(v88, 1, v135) == 1)
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v86);
        uint64_t v90 = 1;
        uint64_t v91 = v120;
        uint64_t v92 = (uint64_t)v110;
      }
      else
      {
        uint64_t v93 = *((void *)v88 + 4);
        char v94 = v88[40];
        uint64_t v95 = *((void *)v88 + 6);
        char v96 = &v88[*(int *)(v89 + 48)];
        uint64_t v91 = v120;
        uint64_t v92 = (uint64_t)v110;
        uint64_t v97 = (char *)v110 + *(int *)(v120 + 48);
        long long v98 = *((_OWORD *)v88 + 1);
        *uint64_t v110 = *(_OWORD *)v88;
        *(_OWORD *)(v92 + 16) = v98;
        *(void *)(v92 + 32) = v93;
        *(unsigned char *)(v92 + 40) = v94;
        *(void *)(v92 + 48) = v95;
        (*(void (**)(char *, char *))(*(void *)(v119 - 8) + 32))(v97, v96);
        uint64_t v90 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v92, v90, 1, v91);
      uint64_t v99 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v124, 1, 1);
      sub_10088BBB8(v92, 0, v82, 0, v99, 0, v133, v75, v84[17], v85, v111);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v99, v126);
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v92, v123);
      return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v83, v86);
    }
    if (v52 != v61)
    {
      uint64_t v70 = v52;
      uint64_t v71 = v112;
      unint64_t v72 = v53;
      goto LABEL_25;
    }
    if (v53 >> 60 == 15)
    {
      uint64_t v73 = v113;
      if (v63 >> 60 == 15)
      {
        sub_10002D830(v62, v63);
        uint64_t v74 = v107;
        sub_1000D35D8(v52, v112, v53);
        uint64_t v75 = v127;
        uint64_t v76 = v137;
LABEL_35:
        if (v74)
        {
          if (v66)
          {
LABEL_42:
            int v82 = 1;
            goto LABEL_43;
          }
        }
        else if ((v66 & 1) == 0 && v108 == v64 && v134 == v65)
        {
          goto LABEL_42;
        }
LABEL_39:
        int v82 = 0;
LABEL_43:
        uint64_t v85 = v131;
        uint64_t v84 = v132;
        uint64_t v87 = v129;
        uint64_t v86 = v130;
        uint64_t v83 = v128;
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v73 = v113;
      if (v63 >> 60 != 15)
      {
        sub_10002D830(v62, v63);
        uint64_t v100 = v52;
        uint64_t v106 = v52;
        uint64_t v101 = v112;
        uint64_t v102 = v107;
        sub_10009C650(v100, v112, v53);
        LODWORD(TupleTypeMetadata2) = _s9libfssync17FPItemVersionDataV23__derived_struct_equalsySbAC_ACtFZ_0(v101, v53, v62, v63);
        unint64_t v103 = v63;
        uint64_t v74 = v102;
        sub_10001E9AC(v62, v103);
        uint64_t v104 = v106;
        sub_1000D35D8(v106, v101, v53);
        sub_1000D35D8(v104, v101, v53);
        uint64_t v75 = v127;
        uint64_t v76 = v137;
        if ((TupleTypeMetadata2 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
    }
    sub_10002D830(v62, v63);
    sub_10001E9AC(v112, v53);
    sub_10001E9AC(v62, v63);
    int v82 = 0;
    uint64_t v75 = v127;
    uint64_t v83 = v128;
    uint64_t v85 = v131;
    uint64_t v84 = v132;
    uint64_t v87 = v129;
    uint64_t v86 = v130;
    goto LABEL_26;
  }
  uint64_t v39 = *v37;
  uint64_t v41 = v131;
  uint64_t v40 = v132;
  uint64_t v42 = v117;
  uint64_t v43 = v115;
  if (v117)
  {
    uint64_t v44 = v117;
    if ([v44 requestedExtent] != (id)-1) {
      [v44 setSelectedForMaterialization:0];
    }
  }
  uint64_t v139 = v39;
  swift_errorRetain();
  type metadata accessor for NSFileProviderError(0);
  if (swift_dynamicCast())
  {

LABEL_15:
    swift_errorRelease();
    uint64_t v55 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v114, 1, 1);
    uint64_t v56 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v124, 1, 1);
    uint64_t v57 = v40[17];
    swift_errorRetain();
    sub_10088BBB8(v55, 0, 0, v39, v56, 0, v133, v127, v57, v41, a9);
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v56, v126);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v55, v123);
  }
  swift_errorRelease();
  uint64_t v139 = v39;
  swift_errorRetain();
  uint64_t v54 = v113;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v112 + 8))(v43, v54);
    goto LABEL_15;
  }
  swift_errorRelease();
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v41;
  *(void *)(v77 + 24) = a9;
  unint64_t v78 = (void *)swift_allocObject();
  v78[2] = v40;
  v78[3] = v42;
  uint64_t v79 = v127;
  v78[4] = v133;
  v78[5] = v79;
  v78[6] = v41;
  v78[7] = a9;
  uint64_t v80 = type metadata accessor for Continuation();
  swift_retain_n();
  unint64_t v81 = v42;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035B9F4((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_1003B377C, v77, (uint64_t)sub_1008ADB68, (uint64_t)v78, v80, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  return swift_errorRelease();
}

void sub_100896EB0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v14 = a1;
  uint64_t v15 = a3;
  uint64_t v7 = *(void *)v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for ReconciliationID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = v14;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v14 - v10, &v6[*(void *)(v7 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)(*(uint64_t (**)(char *))(*v12 + 472))(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13) {
    [v13 setSelectedForMaterialization:1];
  }
  if (*(unsigned char *)(v12[4] + 32) == 1) {
    sub_100893D2C(v13, v12, v15, v16, v17);
  }
  else {
    sub_10089277C(v13, (uint64_t)v12, v15, (uint64_t)v16, v17);
  }
}

uint64_t sub_100897164@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1008A204C(a1, a2);
}

uint64_t sub_10089717C@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A2538(a1);
}

uint64_t type metadata accessor for Ingestion.FetchContent()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008971A8()
{
  return 0xD000000000000016;
}

uint64_t sub_1008971C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  uint64_t v75 = a3;
  uint64_t v73 = (void *)*v5;
  uint64_t v8 = v73[76];
  uint64_t v9 = v73[77];
  uint64_t v10 = v73[78];
  uint64_t v79 = v73[75];
  uint64_t v7 = v79;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v57 = type metadata accessor for PersistenceTrigger();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v51 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = sub_10096C890();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v13 = __chkstk_darwin(v54);
  uint64_t v64 = (char *)&v51 - v14;
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v59 = (char *)&v51 - v15;
  uint64_t v79 = v7;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v16 = type metadata accessor for ReconciliationMutation();
  uint64_t v78 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v58 = a1;
  uint64_t v71 = *(void ***)(a1 + 32);
  uint64_t v79 = v7;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v19 = type metadata accessor for JobResult();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v62 = v10;
  uint64_t v22 = v16;
  uint64_t v63 = v8;
  uint64_t v23 = v7;
  uint64_t v24 = v72;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = AssociatedTypeWitness;
  uint64_t v80 = v20;
  uint64_t v81 = AssociatedConformanceWitness;
  uint64_t v82 = v25;
  uint64_t v26 = type metadata accessor for ReconciliationID();
  uint64_t v60 = v23;
  uint64_t v61 = v9;
  uint64_t v27 = type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v28 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v29 = v24 + v73[72];
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v68 = AssociatedTypeWitness;
  uint64_t v69 = v30;
  v30(v18, (char *)v29, AssociatedTypeWitness);
  uint64_t v70 = v26;
  swift_storeEnumTagMultiPayload();
  char *v28 = 0;
  uint64_t v66 = v27;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = (void *)v19;
  uint64_t v31 = v71;
  sub_100591758(v75, (uint64_t)v18);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v67 = v18;
  v78 += 8;
  v32(v18, v22);
  if (((uint64_t (*)(uint64_t))(*v31)[36])(v29))
  {
    if (((uint64_t (*)(uint64_t, uint64_t))(*v31)[46])(v29, 1))
    {
      uint64_t v79 = v60;
      uint64_t v80 = v63;
      uint64_t v81 = v61;
      uint64_t v82 = v62;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v33 = sub_1008AA778(v29, *(void *)(v24 + 120), *(void *)(v24 + 128), 16, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_1004D4360(v75, v33);
      swift_release();
    }
    else
    {
      ((void (*)(uint64_t))(*v31)[35])(v29);
      uint64_t v52 = v29;
      uint64_t v37 = v74;
      uint64_t v38 = v64;
      uint64_t v39 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v64, 1, v68) == 1)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v59, v38, v39);
        uint64_t v40 = swift_getTupleTypeMetadata2();
        uint64_t v41 = v55;
        uint64_t v42 = &v55[*(int *)(v40 + 48)];
        uint64_t v43 = v69;
        v69(v55, (char *)v52, v39);
        swift_storeEnumTagMultiPayload();
        v43(v42, v59, v39);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = v57;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v58 + 312))(v41);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v44);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v39);
      }
      if ((*(unsigned char *)(v24 + 139) & 2) == 0)
      {
        uint64_t v45 = (uint64_t)v67;
        uint64_t v46 = &v67[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v47 = v52;
        v69(v67, (char *)v52, v39);
        swift_storeEnumTagMultiPayload();
        *(_OWORD *)uint64_t v46 = *(_OWORD *)(v24 + 120);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v75;
        sub_100591758(v75, v45);
        v32((char *)v45, v22);
        uint64_t v79 = v60;
        uint64_t v80 = v63;
        uint64_t v81 = v61;
        uint64_t v82 = v62;
        type metadata accessor for Ingestion.MarkParentDeleted();
        uint64_t v49 = sub_1003A9384(v47, *(void *)(v24 + 120), *(void *)(v24 + 128), *(void *)(v24 + 136));
        sub_1004D4360(v48, v49);
        uint64_t v50 = swift_release();
        (*(void (**)(uint64_t))(*v31[2] + 848))(v50);
      }
    }
  }
  else
  {
    uint64_t v34 = (uint64_t)v67;
    uint64_t v35 = &v67[*(int *)(TupleTypeMetadata2 + 48)];
    v69(v67, (char *)v29, v68);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v35 = *(_OWORD *)(v24 + 120);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(v75, v34);
    v32((char *)v34, v22);
  }
  return v76(0, 0, 0, 0);
}

uint64_t type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty()
{
  return swift_getGenericMetadata();
}

unint64_t sub_100897B94()
{
  return 0xD000000000000013;
}

uint64_t sub_100897BB0(uint64_t a1, void (**a2)(char *, uint64_t *, uint64_t), uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v95 = a4;
  uint64_t v82 = a3;
  uint64_t v89 = a2;
  uint64_t v8 = *v5;
  uint64_t v10 = *(void *)(*v5 + 608);
  uint64_t v11 = *(void *)(*v5 + 616);
  uint64_t v12 = *(void *)(*v5 + 624);
  uint64_t v98 = *(void *)(*v5 + 600);
  uint64_t v9 = v98;
  uint64_t v99 = v10;
  uint64_t v100 = v11;
  uint64_t v101 = v12;
  uint64_t v78 = type metadata accessor for ReconciliationMutation();
  uint64_t v73 = *(void (***)(char *, uint64_t))(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v62 - v13;
  uint64_t v99 = v10;
  uint64_t v80 = v10;
  uint64_t v100 = v11;
  uint64_t v101 = v12;
  uint64_t v79 = v12;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v86 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v85 = (char *)&v62 - v15;
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v18;
  __chkstk_darwin(v17);
  uint64_t v97 = (char *)&v62 - v19;
  uint64_t v81 = v9;
  uint64_t v76 = v11;
  uint64_t v94 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v20 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v93 = sub_10096C890();
  uint64_t v75 = *(void (***)(uint64_t, uint64_t))(v93 - 8);
  uint64_t v23 = __chkstk_darwin(v93);
  uint64_t v83 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = *(void ***)(a1 + 32);
  uint64_t v28 = (uint64_t)v5 + *(void *)(v8 + 576);
  uint64_t v96 = *(void *)(a1 + 16);
  sub_1000DEDD8(v28, (uint64_t)&v62 - v25);
  uint64_t v68 = v27;
  uint64_t v71 = a5;
  uint64_t v29 = v86;
  uint64_t v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  uint64_t v91 = v86 + 48;
  int v30 = v90(v26, 1, v14);
  uint64_t v74 = v14;
  if (v30 == 1)
  {
    v75[1]((uint64_t)v26, v93);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v31 = v94;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v26, v94);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v14);
    unint64_t v32 = *(void *)&v22[*(int *)(v31 + 36)];
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v31);
    uint64_t v70 = (v32 >> 1) & 1;
  }
  uint64_t v33 = ((uint64_t (*)(uint64_t, void (**)(char *, uint64_t *, uint64_t)))(*v68)[59])(v28, v89);
  uint64_t v34 = v74;
  uint64_t v35 = v33;
  uint64_t v63 = v36;
  uint64_t v37 = sub_10096C1A0();
  uint64_t v39 = v84;
  uint64_t v38 = v85;
  uint64_t v40 = (uint64_t)v92;
  uint64_t v41 = (uint64_t)v83;
  uint64_t v42 = v35;
  if (!v37)
  {
LABEL_18:
    uint64_t v59 = swift_bridgeObjectRelease();
    if (v70)
    {
      uint64_t v60 = v63;
      if (!v63) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v60 = v63;
      if (!v63)
      {
        (*(void (**)(uint64_t))(*v68[2] + 848))(v59);
LABEL_24:
        uint64_t v61 = 0;
        goto LABEL_25;
      }
    }
    uint64_t v61 = v60;
LABEL_25:
    swift_retain();
    v95(v61, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  uint64_t v43 = 0;
  uint64_t v89 = (void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
  uint64_t v87 = (void (**)(uint64_t, char *, uint64_t))(v84 + 32);
  uint64_t v69 = (void (**)(char *, uint64_t, uint64_t))(v86 + 32);
  uint64_t v65 = (void (**)(uint64_t, uint64_t))(v73 + 1);
  uint64_t v73 = (void (**)(char *, uint64_t))(v86 + 8);
  uint64_t v86 = v84 + 8;
  ++v75;
  uint64_t v88 = v35;
  uint64_t v64 = v16;
  while (1)
  {
    BOOL v46 = sub_10096C130();
    sub_10096C0E0();
    if (v46)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v97, v42+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v43, v16);
      uint64_t v47 = v43 + 1;
      if (__OFADD__(v43, 1)) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_10096CC20();
    if (v72 != 8) {
      break;
    }
    uint64_t v98 = result;
    (*v89)(v97, &v98, v16);
    swift_unknownObjectRelease();
    uint64_t v47 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_10:
    (*v87)(v40, v97, v16);
    sub_1000DEDD8(v40, v41);
    if (v90((char *)v41, 1, v34) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))v86)(v40, v16);
      (*v75)(v41, v93);
    }
    else
    {
      (*v69)(v38, v41, v34);
      if ((v38[*(int *)(v94 + 36)] & 2) != 0)
      {
        uint64_t v98 = v81;
        uint64_t v99 = v80;
        uint64_t v100 = v76;
        uint64_t v101 = v79;
        uint64_t v67 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v49 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v50 = swift_getAssociatedConformanceWitness();
        uint64_t v98 = AssociatedTypeWitness;
        uint64_t v99 = v49;
        uint64_t v100 = AssociatedConformanceWitness;
        uint64_t v101 = v50;
        type metadata accessor for ReconciliationID();
        uint64_t v41 = (uint64_t)v83;
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v52 = (uint64_t)v77;
        uint64_t v53 = &v77[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v54 = AssociatedTypeWitness;
        uint64_t v16 = v64;
        (*(void (**)(char *, char *))(*(void *)(v54 - 8) + 16))(v77, v92);
        swift_storeEnumTagMultiPayload();
        *uint64_t v53 = v70;
        uint64_t v34 = v74;
        uint64_t v39 = v84;
        uint64_t v55 = v78;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v82, v52);
        uint64_t v56 = v52;
        uint64_t v40 = (uint64_t)v92;
        uint64_t v57 = v55;
        uint64_t v38 = v85;
        (*v65)(v56, v57);
      }
      (*v73)(v38, v34);
      (*(void (**)(uint64_t, uint64_t))v86)(v40, v16);
    }
    uint64_t v44 = v88;
    ++v43;
    BOOL v45 = v47 == sub_10096C1A0();
    uint64_t v42 = v44;
    if (v45) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.MarkParentDeleted()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100898684()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100898738()
{
  return 0xD000000000000017;
}

uint64_t sub_100898754(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 616);
  uint64_t v7 = *(void *)(*v3 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_10096C890();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v20 = v49;
  (*(void (**)(char *))(*(void *)v18 + 280))(v19);
  uint64_t v49 = v20;
  if (!v20)
  {
    uint64_t v41 = v19;
    uint64_t v42 = v7;
    uint64_t v43 = v6;
    uint64_t v21 = v17;
    uint64_t v22 = v45;
    uint64_t v23 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v15, 1, v45) == 1)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v9);
      return 0;
    }
    else
    {
      uint64_t v24 = v47;
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      uint64_t v40 = v21;
      v25(v21, v15, v22);
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      v39(v12, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v22);
      uint64_t v26 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v26, v12, v23);
      swift_endAccess();
      swift_beginAccess();
      sub_1003B32B0((uint64_t)(v3 + 7), (uint64_t)v48);
      uint64_t v27 = type metadata accessor for JobLockRule();
      sub_10096D230();
      uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 72);
      swift_allocObject();
      uint64_t v46 = sub_10096C0D0();
      int v30 = v29;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      unint64_t v32 = &v30[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v33 = &v30[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v39;
      v39(v30, v41, v22);
      uint64_t v35 = v32;
      uint64_t v36 = v40;
      v34((uint64_t)v35, v40, v22);
      v34((uint64_t)v33, v36, v22);
      swift_storeEnumTagMultiPayload();
      v34((uint64_t)&v30[v28], v36, v22);
      swift_storeEnumTagMultiPayload();
      sub_1003FC080(v46);
      uint64_t v18 = sub_1001E2584();
      swift_bridgeObjectRelease();
      sub_1003B3318((uint64_t)v48);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v22);
    }
  }
  return v18;
}

uint64_t sub_100898C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v55 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v54 = sub_10096C890();
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v10 = __chkstk_darwin(v54);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v57 = v9;
  uint64_t v58 = *(void *)(v9 - 8);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v48 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v62 = v15;
  uint64_t v63 = AssociatedConformanceWitness;
  uint64_t v64 = v17;
  uint64_t v18 = a1;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v48 - v24;
  uint64_t v26 = v8;
  uint64_t v27 = *(void **)(a1 + 32);
  uint64_t v28 = (char *)v6 + *(void *)(v26 + 576);
  (*(void (**)(char *, uint64_t))(*v27 + 240))(v28, 1);
  uint64_t v50 = v28;
  uint64_t v51 = v23;
  uint64_t v29 = v56;
  uint64_t v30 = v57;
  uint64_t v52 = v25;
  uint64_t v31 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v12, 1, v57) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v54);
    return v59(0, 0, 0, 0);
  }
  else
  {
    uint64_t v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v53, v12, v30);
    uint64_t v34 = &v33[*(int *)(v30 + 40)];
    uint64_t v49 = v20;
    uint64_t v35 = v18;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v37 = v52;
    v36(v52, v34, v19);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    uint64_t v38 = (void *)v27[2];
    uint64_t v39 = v51;
    v36(v51, v37, v19);
    uint64_t v40 = *(uint64_t (**)(uint64_t))(*(void *)v35 + 272);
    uint64_t v41 = swift_retain();
    uint64_t v42 = (void *)v40(v41);
    uint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v59;
    uint64_t v45 = v60;
    v43[2] = v35;
    v43[3] = v44;
    v43[4] = v45;
    v43[5] = v6;
    v43[6] = v55;
    uint64_t v59 = (uint64_t (*)(void, void, void, void))(*v38 + 632);
    uint64_t v46 = *(void (**)(char *, uint64_t, char *, void *, uint64_t (*)(uint64_t), void *))v59;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v46(v50, 1, v39, v42, sub_1008ACA18, v43);
    swift_release();
    swift_release();

    uint64_t v47 = *(void (**)(char *, uint64_t))(v49 + 8);
    v47(v39, v19);
    return ((uint64_t (*)(char *, uint64_t))v47)(v52, v19);
  }
}

uint64_t sub_1008991D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v30 = *a2;
  uint64_t v10 = v30;
  uint64_t v28 = *(void *)(v30 + 80);
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v11 = sub_10096D510();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v29 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v28;
  uint64_t v20 = v31;
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v30 + 88);
  *(void *)(v19 + 40) = *(void *)(v10 + 104);
  *(void *)(v19 + 48) = v20;
  *(void *)(v19 + 56) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v17, v15, v11);
  *(void *)(v19 + v18) = a2;
  uint64_t v21 = (void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v26;
  void *v21 = v27;
  v21[1] = v22;
  uint64_t v23 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v29, (uint64_t)sub_1008ACC38, v19, v23, (uint64_t)&type metadata for String);
  swift_release();
  return swift_release();
}

uint64_t sub_1008994C4(void *a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), void *a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v97 = a6;
  uint64_t v98 = a5;
  uint64_t v94 = a4;
  uint64_t v101 = (void *)*a1;
  uint64_t v8 = v101;
  uint64_t v102 = a3;
  uint64_t v9 = (char *)v101[77];
  uint64_t v10 = v101[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v80 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v79 - v14;
  uint64_t v93 = type metadata accessor for FileTreeError();
  uint64_t v82 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v95 = (char *)&v79 - v15;
  uint64_t v85 = type metadata accessor for SnapshotMutation();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v79 - v16;
  uint64_t v91 = type metadata accessor for SnapshotItem();
  uint64_t v89 = sub_10096C890();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v92 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v79 - v17);
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  uint64_t v90 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v104 = (void *)sub_10096D510();
  uint64_t v18 = *(v104 - 1);
  __chkstk_darwin(v104);
  uint64_t v107 = (char *)&v79 - v19;
  uint64_t v20 = v8[76];
  uint64_t v21 = (void *)v8[78];
  uint64_t v110 = v10;
  uint64_t v111 = v20;
  uint64_t v112 = v9;
  uint64_t v113 = v21;
  uint64_t v22 = type metadata accessor for ReconciliationMutation();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v79 - v24;
  uint64_t v108 = (uint64_t)a1;
  uint64_t v26 = a1[17] & 0xA0;
  uint64_t v105 = v20;
  uint64_t v106 = v23;
  uint64_t v103 = a2;
  uint64_t v99 = v27;
  if (v26)
  {
    uint64_t v110 = v10;
    uint64_t v111 = v20;
    uint64_t v112 = v9;
    uint64_t v113 = v21;
    uint64_t v86 = type metadata accessor for JobResult();
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v96 = v18;
    uint64_t v29 = v28;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v87 = (char *)v26;
    uint64_t v31 = AssociatedConformanceWitness;
    uint64_t v32 = swift_getAssociatedConformanceWitness();
    uint64_t v110 = AssociatedTypeWitness;
    uint64_t v111 = v29;
    uint64_t v112 = (char *)v31;
    uint64_t v113 = (void *)v32;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v33 = &v25[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v25, v108 + v101[72], AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v33 = xmmword_10097B210;
    v33[16] = 4;
    a2 = v103;
    uint64_t v26 = (uint64_t)v87;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_100591758(a2, (uint64_t)v25);
    uint64_t v18 = v96;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v106);
  }
  uint64_t v87 = v25;
  uint64_t v34 = v107;
  uint64_t v35 = (uint64_t *)v108;
  uint64_t v101 = v21;
  uint64_t v36 = v104;
  (*(void (**)(char *, void, void *))(v18 + 16))(v107, v102, v104);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = *(void *)v34;
    uint64_t v114 = v37;
    swift_errorRetain();
    uint64_t v38 = v95;
    uint64_t v39 = v93;
    int v40 = swift_dynamicCast();
    uint64_t v41 = v101;
    if (v40)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v82 + 8))(v38, v39);
      }
      else
      {
        uint64_t v87 = (char *)v26;
        uint64_t v60 = swift_getAssociatedTypeWitness();
        uint64_t v61 = swift_getAssociatedTypeWitness();
        uint64_t v107 = (char *)swift_getAssociatedConformanceWitness();
        uint64_t v62 = swift_getAssociatedConformanceWitness();
        uint64_t v110 = v60;
        uint64_t v111 = v61;
        uint64_t v112 = v107;
        uint64_t v113 = (void *)v62;
        type metadata accessor for FileItemVersion();
        uint64_t v63 = sub_10096C890();
        sub_100033BE8(&qword_100AD7360);
        uint64_t v107 = (char *)v63;
        uint64_t v106 = (uint64_t)&v38[*(int *)(swift_getTupleTypeMetadata3() + 48)];
        swift_errorRelease();
        uint64_t v64 = v100;
        uint64_t v65 = v81;
        (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v81, v38, AssociatedTypeWitness);
        uint64_t v66 = (void (*)(char *, uint64_t, uint64_t))((char *)v35 + *(void *)(*v35 + 576));
        swift_getAssociatedConformanceWitness();
        uint64_t v102 = v66;
        LOBYTE(v66) = sub_10096BBE0();
        uint64_t v104 = *(void **)(v64 + 8);
        ((void (*)(char *, uint64_t))v104)(v65, AssociatedTypeWitness);
        if (v66)
        {
          (*(void (**)(uint64_t, void, uint64_t))(v64 + 16))(v80, v102, AssociatedTypeWitness);
          uint64_t v67 = v35[15];
          uint64_t v102 = (void (*)(char *, uint64_t, uint64_t))v35[16];
          uint64_t v68 = v35[17] | 0x100;
          uint64_t v69 = v105;
          uint64_t v110 = v10;
          uint64_t v111 = v105;
          uint64_t v70 = v101;
          uint64_t v112 = v9;
          uint64_t v113 = v101;
          uint64_t v108 = type metadata accessor for JobResult();
          uint64_t v110 = v10;
          uint64_t v111 = v69;
          uint64_t v112 = v9;
          uint64_t v113 = v70;
          type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v71 = v80;
          uint64_t v72 = sub_1008AA778(v80, v67, (uint64_t)v102, v68, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          ((void (*)(uint64_t, uint64_t))v104)(v71, AssociatedTypeWitness);
          sub_1004D4360(v103, v72);
          swift_release();
          (*(void (**)(uint64_t))(*((void *)v107 - 1) + 8))(v106);
          swift_errorRelease();
LABEL_15:
          swift_errorRetain();
          v98(0, 0, 0, v37);
          swift_errorRelease();
          return swift_errorRelease();
        }
        (*(void (**)(uint64_t))(*((void *)v107 - 1) + 8))(v106);
        uint64_t v41 = v101;
        uint64_t v26 = (uint64_t)v87;
      }
    }
    swift_errorRelease();
    if (!v26)
    {
      uint64_t v73 = v105;
      uint64_t v110 = v10;
      uint64_t v111 = v105;
      uint64_t v112 = v9;
      uint64_t v113 = v41;
      type metadata accessor for JobResult();
      uint64_t v110 = v10;
      uint64_t v111 = v73;
      uint64_t v112 = v9;
      uint64_t v113 = v41;
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      uint64_t v74 = (uint64_t)v35 + *(void *)(*v35 + 576);
      uint64_t v75 = v35[15];
      uint64_t v76 = v35[16];
      uint64_t v77 = v35[17];
      swift_allocObject();
      uint64_t v78 = sub_1008AA944(v74, v75, v76, v77);
      sub_1004D4360(v103, v78);
      swift_release();
    }
    goto LABEL_15;
  }
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t v43 = v92;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v91 - 8)
                                                                                             + 56))(v92, 1, 1);
  uint64_t v44 = (uint64_t)v35 + *(void *)(*v35 + 576);
  uint64_t v45 = v109;
  sub_10086C908(v43, v44, 0, 0, 0, v94, v35[15], v35[16], v35[17], a2);
  uint64_t v109 = v45;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v88 + 8))(v43, v89);
  if (v45) {
    return (*(uint64_t (**)(char *, void *))(v18 + 8))(v107, v36);
  }
  uint64_t v110 = v10;
  uint64_t v111 = v105;
  uint64_t v112 = v9;
  uint64_t v113 = v101;
  uint64_t v108 = type metadata accessor for JobResult();
  sub_100033BE8((uint64_t *)&unk_100AD7510);
  uint64_t v47 = v42;
  uint64_t v79 = v42;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v96 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v49 = a2;
  uint64_t v50 = (uint64_t)v83;
  uint64_t v51 = &v83[*(int *)(TupleTypeMetadata3 + 64)];
  uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
  v102(v83, v44, v47);
  *(unsigned char *)(v50 + v96) = 0;
  strcpy(v51, "item rejected");
  *((_WORD *)v51 + 7) = -4864;
  uint64_t v52 = v85;
  swift_storeEnumTagMultiPayload();
  uint64_t v96 = v18;
  sub_1005917A0(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v50, v52);
  uint64_t v53 = (uint64_t)v87;
  uint64_t v54 = v44;
  uint64_t v55 = v79;
  v102(v87, v54, v79);
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  uint64_t v110 = v55;
  uint64_t v111 = v56;
  uint64_t v112 = (char *)v57;
  uint64_t v113 = (void *)v58;
  type metadata accessor for ReconciliationID();
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = v106;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v103, v53);
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v53, v59);
  v98(0, 0, 0, 0);
  return (*(uint64_t (**)(char *, void *))(v96 + 8))(v107, v104);
}

uint64_t sub_10089A2C0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10089A380()
{
  uint64_t v0 = sub_10060F6D4();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10089A448()
{
  return sub_10089A460(sub_10089A380);
}

uint64_t sub_10089A460(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.DeleteRejectedItemInTree()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10089A4D0()
{
  return 0xD000000000000017;
}

uint64_t sub_10089A4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_10096C890();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v17 = v34;
  (*(void (**)(char *))(**(void **)(a2 + 32) + 280))(v16);
  if (!v17)
  {
    uint64_t v18 = v31;
    uint64_t v34 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v19 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v15, v13, AssociatedTypeWitness);
      swift_beginAccess();
      sub_1003B32B0((uint64_t)(v3 + 7), (uint64_t)v33);
      uint64_t v31 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v21 = (uint64_t)v27;
      uint64_t v22 = &v27[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v23 = &v27[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v27, v16, AssociatedTypeWitness);
      v24(v22, v15, AssociatedTypeWitness);
      v24(v23, v15, AssociatedTypeWitness);
      uint64_t v25 = v28;
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = sub_1001E3E98((uint64_t)v33, v31, v21);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v25);
      sub_1003B3318((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v15, AssociatedTypeWitness);
    }
  }
  return v10;
}

uint64_t sub_10089A8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v13 = (char *)v6 + *(void *)(v11 + 576);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a4;
  v14[4] = a5;
  void v14[5] = v6;
  v14[6] = a3;
  uint64_t v15 = *(void (**)(char *, uint64_t (*)(uint64_t), void *))(*(void *)v12 + 720);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v13, sub_1008AC880, v14);
  swift_release();

  return swift_release();
}

uint64_t sub_10089AA1C(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, unint64_t, unint64_t, uint64_t), uint64_t a6)
{
  uint64_t v95 = a3;
  uint64_t v86 = a6;
  uint64_t v87 = a5;
  uint64_t v90 = a4;
  uint64_t v92 = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 616);
  uint64_t v9 = *(void *)(*a2 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 624);
  uint64_t v93 = a2;
  uint64_t v81 = *(void *)(v7 + 608);
  uint64_t v82 = v11;
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v97 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v98 = AssociatedConformanceWitness;
  uint64_t v99 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
  uint64_t v12 = sub_10096C890();
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v80 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v71 - v14;
  uint64_t v77 = AssociatedTypeWitness;
  uint64_t v76 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v71 - v15;
  uint64_t v83 = type metadata accessor for FileTreeError();
  uint64_t v78 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v88 = (char *)&v71 - v16;
  uint64_t v91 = v8;
  uint64_t v17 = type metadata accessor for SnapshotItem();
  uint64_t v18 = sub_10096C890();
  uint64_t v84 = *(void *)(v18 - 8);
  uint64_t v85 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v73 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v71 - v22);
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = __chkstk_darwin(v21);
  uint64_t v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v71 - v28;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v30 = sub_10096D510();
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v71 - v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))((char *)&v71 - v31, v92, v30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v72 = v17;
    uint64_t v92 = v9;
    uint64_t v34 = *v32;
    uint64_t v100 = v34;
    swift_errorRetain();
    uint64_t v35 = v88;
    uint64_t v36 = v83;
    int v37 = swift_dynamicCast();
    uint64_t v39 = v94;
    uint64_t v38 = v95;
    int v40 = v93;
    uint64_t v41 = (uint64_t)v89;
    if (v37)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v42 = v78;
LABEL_13:
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v36);
        goto LABEL_14;
      }
      uint64_t v45 = v35;
      uint64_t v46 = swift_getAssociatedTypeWitness();
      uint64_t v47 = swift_getAssociatedTypeWitness();
      uint64_t v48 = swift_getAssociatedConformanceWitness();
      uint64_t v49 = swift_getAssociatedConformanceWitness();
      uint64_t v96 = v46;
      uint64_t v97 = v47;
      uint64_t v98 = v48;
      uint64_t v99 = v49;
      uint64_t v50 = type metadata accessor for FileItemVersion();
      uint64_t v51 = sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v52 = v77;
      uint64_t v53 = &v45[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_errorRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v53, 1, v50) != 1)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8))(v53, v51);
        uint64_t v42 = v76;
        uint64_t v36 = v52;
        uint64_t v39 = v94;
        uint64_t v38 = v95;
        uint64_t v35 = v88;
        uint64_t v41 = (uint64_t)v89;
        goto LABEL_13;
      }
      uint64_t v54 = v76;
      uint64_t v55 = v74;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v74, v88, v52);
      uint64_t v56 = (uint64_t)v40 + *(void *)(*v40 + 576);
      char v57 = sub_10096BBE0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v52);
      uint64_t v39 = v94;
      uint64_t v38 = v95;
      uint64_t v41 = (uint64_t)v89;
      uint64_t v58 = v90;
      if (v57)
      {
        uint64_t v59 = v73;
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v73, 1, 1);
        sub_10086C908(v59, v56, 0, 0, 0, v38, v40[15], v40[16], v40[17], v58);
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v84 + 8))(v59, v85);
        if (!v39)
        {
          swift_errorRetain();
          v87(0, 0, 0, v34);
          swift_errorRelease();
        }
        swift_errorRelease();
        return swift_errorRelease();
      }
    }
LABEL_14:
    swift_errorRelease();
    if ((*((unsigned char *)v40 + 138) & 1) == 0)
    {
      uint64_t v60 = v91;
LABEL_16:
      uint64_t v62 = v81;
      uint64_t v61 = v82;
      uint64_t v63 = v92;
      uint64_t v96 = v92;
      uint64_t v97 = v81;
      uint64_t v98 = v60;
      uint64_t v99 = v82;
      type metadata accessor for JobResult();
      uint64_t v96 = v63;
      uint64_t v97 = v62;
      uint64_t v98 = v60;
      uint64_t v99 = v61;
      type metadata accessor for Ingestion.FaultDirectoryInTree();
      uint64_t v64 = (uint64_t)v40 + *(void *)(*v40 + 576);
      uint64_t v65 = v40[15];
      uint64_t v66 = v40[16];
      uint64_t v67 = v40[17];
      swift_allocObject();
      uint64_t v68 = sub_100610B30(v64, v65, v66, v67);
      sub_1004D4360(v90, v68);
      swift_release();
      swift_errorRetain();
      v87(0, 0, 0, v34);
      swift_errorRelease();
      return swift_errorRelease();
    }
    sub_10060F8BC(v41);
    BOOL v69 = sub_1003E08B8(v34, v41, (uint64_t)v38);
    if (v39)
    {
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v41, v80);
    }
    else
    {
      BOOL v70 = v69;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v41, v80);
      uint64_t v60 = v91;
      if (!v70) {
        goto LABEL_16;
      }
      swift_errorRetain();
      v87(0, 0xD000000000000020, 0x80000001009BD640, v34);
      swift_errorRelease();
    }
    return swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v24 + 32))(v29, v32, v9);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v9);
  SnapshotItem.init(_:)((uint64_t)v27, v9, v91, (uint64_t)v23);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v23, 0, 1, v17);
  uint64_t v43 = v94;
  sub_10086C908(v23, (uint64_t)v93 + *(void *)(*v93 + 576), 3, 0, 0, v95, v93[15], v93[16], v93[17], v90);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v84 + 8))(v23, v85);
  if (!v43) {
    v87(0, 0, 0, 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v29, v9);
}

uint64_t type metadata accessor for Ingestion.FaultDirectoryInTree()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10089B568()
{
  type metadata accessor for SnapshotItem();
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10089B60C()
{
  return 0xD000000000000019;
}

uint64_t sub_10089B628()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 48));
  }
}

uint64_t sub_10089B700()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 48);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_10089B7E8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_10089B8D8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_10089B9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v7 = v3 + *(int *)(v4 + 36);
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v7, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
}

uint64_t sub_10089BB98(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v41 = a1;
  uint64_t v4 = *v2;
  uint64_t v38 = type metadata accessor for JobLockRule();
  uint64_t v40 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v39 = (char *)&v36 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v42 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_10096C890();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v4 + 576);
  uint64_t v17 = v45;
  (*(void (**)(char *, uint64_t))(**((void **)v43 + 4) + 240))(v16, 1);
  if (!v17)
  {
    uint64_t v36 = v16;
    uint64_t v45 = 0;
    uint64_t v43 = v11;
    uint64_t v18 = (char *)v3 + *(void *)(*v3 + 632);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v18, v15, v12);
    swift_endAccess();
    uint64_t v19 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v18, 1, v42))
    {
      return 0;
    }
    else
    {
      uint64_t v20 = &v18[*(int *)(v19 + 36)];
      uint64_t v21 = v37;
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      uint64_t v23 = v9;
      uint64_t v24 = v9;
      uint64_t v25 = AssociatedTypeWitness;
      v22(v24, v20, AssociatedTypeWitness);
      uint64_t v26 = v43;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v43, v23, v25);
      swift_beginAccess();
      sub_1003B32B0((uint64_t)(v3 + 7), (uint64_t)v44);
      uint64_t v27 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v29 = (uint64_t)v39;
      uint64_t v30 = &v39[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v31 = &v39[*(int *)(TupleTypeMetadata3 + 64)];
      v22(v39, v36, v25);
      v22(v30, v26, v25);
      uint64_t v32 = v31;
      uint64_t v33 = v26;
      v22(v32, v26, v25);
      uint64_t v34 = v38;
      swift_storeEnumTagMultiPayload();
      uint64_t AssociatedTypeWitness = sub_1001E3E98((uint64_t)v44, v27, v29);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v29, v34);
      sub_1003B3318((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v33, v25);
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_10089C048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v13 = (char *)v6 + *(void *)(v11 + 576);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a4;
  v14[4] = a5;
  void v14[5] = v6;
  v14[6] = a3;
  uint64_t v15 = *(void (**)(char *, uint64_t (*)(uint64_t), void *))(*(void *)v12 + 728);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v13, sub_1008AC810, v14);
  swift_release();

  return swift_release();
}

uint64_t sub_10089C174(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v35 = *a2;
  uint64_t v36 = v35;
  uint64_t v37 = a8;
  uint64_t v34 = *(void *)(v35 + 80);
  uint64_t v41 = a9;
  uint64_t v42 = a10;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v14 = sub_10096D510();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v38 = v19;
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, v14);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v35;
  *(void *)(v24 + 16) = v34;
  *(_OWORD *)(v24 + 24) = *(_OWORD *)(v36 + 88);
  *(void *)(v24 + 40) = *(void *)(v25 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v20, v18, v14);
  uint64_t v26 = v40;
  *(void *)(v24 + v21) = v39;
  *(void *)(v24 + v22) = a2;
  *(void *)(v24 + v23) = v26;
  uint64_t v27 = (void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v32;
  *uint64_t v27 = v33;
  v27[1] = v28;
  uint64_t v29 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, v41, v38, v42, v24, v29, (uint64_t)&type metadata for String);
  swift_release();
  return swift_release();
}

uint64_t sub_10089C428(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v72 = a4;
  uint64_t v68 = a6;
  BOOL v69 = a5;
  uint64_t v67 = a3;
  uint64_t v74 = a1;
  uint64_t v62 = (void *)*a2;
  uint64_t v7 = v62[77];
  uint64_t v8 = v62[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v60 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v58 = (char *)&v56 - v10;
  uint64_t v63 = type metadata accessor for FileTreeError();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  BOOL v70 = (char *)&v56 - v11;
  uint64_t v66 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_10096C890();
  uint64_t v64 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  char v57 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v56 - v16);
  uint64_t v18 = *(void *)(v8 - 8);
  uint64_t v19 = __chkstk_darwin(v15);
  unint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v71 = (char *)&v56 - v22;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v23 = sub_10096D510();
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v56 - v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))((char *)&v56 - v24, v74, v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v8;
    uint64_t v28 = *v25;
    uint64_t v79 = v28;
    swift_errorRetain();
    uint64_t v29 = v70;
    uint64_t v30 = v63;
    if (!swift_dynamicCast()) {
      goto LABEL_14;
    }
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v31 = v61;
LABEL_13:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_14;
    }
    uint64_t v35 = swift_getAssociatedTypeWitness();
    uint64_t v36 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v74 = v8;
    uint64_t v38 = swift_getAssociatedConformanceWitness();
    uint64_t v75 = v35;
    uint64_t v76 = v36;
    uint64_t v77 = AssociatedConformanceWitness;
    uint64_t v78 = v38;
    uint64_t v39 = type metadata accessor for FileItemVersion();
    uint64_t v40 = sub_10096C890();
    sub_100033BE8(&qword_100AD7360);
    uint64_t v30 = v60;
    uint64_t v41 = &v70[*(int *)(swift_getTupleTypeMetadata3() + 48)];
    swift_errorRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v41, 1, v39) != 1)
    {
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
      uint64_t v31 = v59;
      uint64_t v29 = v70;
      goto LABEL_13;
    }
    uint64_t v42 = v58;
    uint64_t v43 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v70, v30);
    uint64_t v44 = (char *)a2 + *(void *)(*a2 + 576);
    swift_getAssociatedConformanceWitness();
    char v45 = sub_10096BBE0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v30);
    if ((v45 & 1) == 0)
    {
LABEL_14:
      swift_errorRelease();
      uint64_t v49 = v62[76];
      uint64_t v50 = v62[78];
      uint64_t v75 = v27;
      uint64_t v76 = v49;
      uint64_t v77 = v7;
      uint64_t v78 = v50;
      type metadata accessor for JobResult();
      uint64_t v75 = v27;
      uint64_t v76 = v49;
      uint64_t v77 = v7;
      uint64_t v78 = v50;
      type metadata accessor for Ingestion.UnfaultDirectoryInTree();
      uint64_t v51 = (uint64_t)a2 + *(void *)(*a2 + 576);
      uint64_t v52 = a2[15];
      uint64_t v53 = a2[16];
      uint64_t v54 = a2[17];
      swift_allocObject();
      uint64_t v55 = sub_1008AA800(v51, v52, v53, v54);
      sub_1004D4360(v72, v55);
      swift_release();
      swift_errorRetain();
      v69(0, 0, 0, v28);
      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t v46 = (uint64_t)v44;
    uint64_t v47 = v57;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v66 - 8)
                                                                                               + 56))(v57, 1, 1);
    uint64_t v48 = v73;
    sub_10086C908(v47, v46, 0, 0, 0, v67, a2[15], a2[16], a2[17], v72);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v64 + 8))(v47, v65);
    if (!v48)
    {
      swift_errorRetain();
      v69(0, 0, 0, v28);
      swift_errorRelease();
    }
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v32 = v71;
    (*(void (**)(char *, uint64_t *, uint64_t))(v18 + 32))(v71, v25, v8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v32, v8);
    SnapshotItem.init(_:)((uint64_t)v21, v8, v7, (uint64_t)v17);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t))(*(void *)(v66 - 8)
                                                                                              + 56))(v17, 0, 1);
    uint64_t v33 = v73;
    sub_10086C908(v17, (uint64_t)a2 + *(void *)(*a2 + 576), 3, 0, 0, v67, a2[15], a2[16], a2[17], v72);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v64 + 8))(v17, v65);
    if (!v33) {
      v69(0, 0, 0, 0);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v71, v8);
  }
}

uint64_t sub_10089CD78()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_10096C890();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10089CE28()
{
  uint64_t v0 = sub_10060F6D4();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10089CEE0()
{
  sub_10089CE28();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.UnfaultDirectoryInTree()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10089CF4C()
{
  return 0xD000000000000013;
}

uint64_t sub_10089CF68(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  uint64_t v67 = a3;
  uint64_t v9 = *(void *)v5;
  uint64_t v70 = v9;
  uint64_t v10 = *(void *)(v9 + 616);
  uint64_t v60 = *(void *)(v9 + 600);
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v58 = sub_10096C890();
  uint64_t v71 = *(void *)(v58 - 8);
  uint64_t v12 = __chkstk_darwin(v58);
  uint64_t v14 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v48 - v13);
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v15 = *(void *)(v68 + 64);
  uint64_t v16 = __chkstk_darwin(v12);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = v9;
  char v57 = a1;
  uint64_t v20 = a1[4];
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v20 + 472))(&v6[*(void *)(v19 + 576)], a2);
  uint64_t v50 = v22;
  uint64_t v65 = v18;
  uint64_t v66 = v15;
  uint64_t v49 = v20;
  uint64_t v56 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v14;
  uint64_t v59 = v6;
  uint64_t v23 = v11;
  uint64_t v24 = v21;
  if (!sub_10096C1A0())
  {
    uint64_t v45 = swift_bridgeObjectRelease();
    uint64_t v27 = v59;
LABEL_15:
    uint64_t v46 = v52;
    if (v27[137] < 0)
    {
      if (!v50)
      {
        (*(void (**)(uint64_t))(**(void **)(v49 + 16) + 848))(v45);
LABEL_21:
        uint64_t v47 = 0;
        goto LABEL_22;
      }
    }
    else if (!v50)
    {
      goto LABEL_21;
    }
    uint64_t v47 = v50;
LABEL_22:
    swift_retain();
    v46(v47, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  uint64_t v25 = 0;
  uint64_t v26 = v68;
  BOOL v69 = (void (**)(char *, uint64_t *, uint64_t))(v68 + 16);
  uint64_t v61 = (void (**)(uint64_t, char *, uint64_t))(v68 + 32);
  uint64_t v62 = (void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v53 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v68 + 56);
  uint64_t v54 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v71 + 8);
  uint64_t v27 = v59;
  uint64_t v28 = v56;
  uint64_t v63 = v24;
  uint64_t v64 = v23;
  uint64_t v29 = v66;
  while (1)
  {
    BOOL v35 = sub_10096C130();
    sub_10096C0E0();
    if (v35)
    {
      unint64_t v36 = v24
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(void *)(v26 + 72) * v25;
      uint64_t v37 = *(void (**)(char *, uint64_t *, uint64_t))(v26 + 16);
      uint64_t v38 = v65;
      v37(v65, (uint64_t *)v36, v23);
      uint64_t v39 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_12;
      }
      goto LABEL_7;
    }
    uint64_t result = sub_10096CC20();
    if (v29 != 8) {
      break;
    }
    uint64_t v72 = result;
    uint64_t v37 = *v69;
    uint64_t v38 = v65;
    (*v69)(v65, &v72, v23);
    swift_unknownObjectRelease();
    uint64_t v39 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
LABEL_12:
      __break(1u);
LABEL_13:
      uint64_t v45 = swift_bridgeObjectRelease();
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v71 = v39;
    uint64_t v40 = (uint64_t)v28;
    uint64_t v41 = v10;
    (*v61)(v40, v38, v23);
    uint64_t v42 = *((void *)v27 + 17);
    if ((v42 & 0xFFFFFFCFFFFFFFFFLL) != 0)
    {
      uint64_t v30 = *(void *)(v70 + 608);
      uint64_t v31 = *(void *)(v70 + 624);
      uint64_t v32 = v60;
      uint64_t v72 = v60;
      uint64_t v73 = v30;
      uint64_t v74 = v41;
      uint64_t v75 = v31;
      type metadata accessor for JobResult();
      uint64_t v72 = v32;
      uint64_t v73 = v30;
      uint64_t v10 = v41;
      uint64_t v74 = v41;
      uint64_t v75 = v31;
      uint64_t v27 = v59;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v33 = sub_1008AA778(v40, *((void *)v27 + 15), *((void *)v27 + 16), v42, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_1004D4360(v67, v33);
      swift_release();
      uint64_t v28 = (char *)v40;
    }
    else
    {
      uint64_t v43 = v55;
      v37((char *)v55, (uint64_t *)v40, v23);
      (*v53)(v43, 0, 1, v23);
      sub_10086C908(v43, v40, 0, 0, 0, v57, *((void *)v27 + 15), *((void *)v27 + 16), v42, v67);
      (*v54)(v43, v58);
      uint64_t v10 = v41;
      uint64_t v28 = v56;
    }
    uint64_t v24 = v63;
    uint64_t v23 = v64;
    (*v62)(v28, v64);
    uint64_t v34 = sub_10096C1A0();
    ++v25;
    uint64_t v26 = v68;
    uint64_t v29 = v66;
    if (v71 == v34) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.ReSnapshotChildren()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10089D618()
{
  return 0x6465727265666564;
}

uint64_t sub_10089D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v62 = a3;
  uint64_t v63 = a5;
  uint64_t v9 = *(void **)v5;
  uint64_t v67 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v9[77];
  uint64_t v14 = v9[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v71 = AssociatedTypeWitness;
  uint64_t v72 = v16;
  uint64_t v17 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v66 = (uint64_t)&v57 - v20;
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = v9[76];
  uint64_t v69 = v9[78];
  uint64_t v70 = v14;
  uint64_t v73 = v14;
  uint64_t v74 = v22;
  uint64_t v68 = v22;
  uint64_t v75 = v13;
  uint64_t v76 = v69;
  type metadata accessor for SQLDatabase();
  uint64_t v23 = swift_dynamicCastClass();
  uint64_t v64 = a4;
  uint64_t v61 = v19;
  if (v23)
  {
    uint64_t v58 = v21;
    uint64_t v59 = v12;
    uint64_t v65 = v10;
    uint64_t v60 = *(uint64_t (**)(char *, uint64_t))(*(void *)(sub_100580E80() + 24) + 64);
    uint64_t v24 = swift_getAssociatedTypeWitness();
    uint64_t v25 = v71;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v27 = swift_getAssociatedConformanceWitness();
    uint64_t v73 = v25;
    uint64_t v74 = v24;
    uint64_t v75 = AssociatedConformanceWitness;
    uint64_t v76 = v27;
    type metadata accessor for ThrottlingKey();
    sub_10096D230();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v28 = sub_10096C0D0();
    uint64_t v57 = v13;
    uint64_t v30 = v29;
    uint64_t v73 = v25;
    uint64_t v74 = v24;
    uint64_t v75 = AssociatedConformanceWitness;
    uint64_t v76 = v27;
    type metadata accessor for ReconciliationID();
    uint64_t v31 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v30, &v6[*(void *)(*(void *)v6 + 576)], v25);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v30 + v31) = sub_1007B24CC();
    uint64_t v32 = sub_1003FC080(v28);
    sub_1001744D8(v32);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v10 = v65;
    uint64_t v12 = v59;
    uint64_t v13 = v57;
    uint64_t v21 = v58;
  }
  (*(void (**)(libfssync::Filename (__swiftcall *)(Swift::String), void))(**(void **)(v21 + 16) + 688))(Filename.init(rawValue:), 0);
  sub_10085378C();
  sub_10096B0D0();
  sub_10096B080();
  double v34 = v33;
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v36 = v10 + 8;
  BOOL v35 = v37;
  uint64_t result = v37(v12, v67);
  double v39 = v34 * 1000000000.0;
  if ((~COERCE__INT64(v34 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v40 = (uint64_t)v39;
  uint64_t v41 = *((void *)v6 + 17) | 0x8000;
  uint64_t v42 = v69;
  uint64_t v43 = v70;
  uint64_t v60 = v35;
  uint64_t v44 = v68;
  uint64_t v73 = v70;
  uint64_t v74 = v68;
  uint64_t v75 = v13;
  uint64_t v76 = v69;
  uint64_t v45 = type metadata accessor for JobResult();
  uint64_t v65 = v36;
  uint64_t v46 = v45;
  uint64_t v73 = v43;
  uint64_t v74 = v44;
  uint64_t v75 = v13;
  uint64_t v76 = v42;
  type metadata accessor for Ingestion.FetchItemMetadata();
  uint64_t v47 = v66;
  uint64_t v48 = sub_1008AA778(v66, 0, v40, v41, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
  uint64_t v49 = v71;
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v72 += 8;
  v50(v47, v71);
  uint64_t v51 = v62;
  uint64_t v70 = v46;
  sub_1004D4360(v62, v48);
  uint64_t v52 = (uint64_t)v61;
  swift_release();
  sub_1008537D0();
  sub_10096B0D0();
  sub_10096B080();
  double v54 = v53;
  uint64_t result = v60(v12, v67);
  double v55 = v54 * 1000000000.0;
  if ((~COERCE__INT64(v54 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v55 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v55 < 9.22337204e18)
  {
    uint64_t v56 = sub_1008AA778(v52, 0, (uint64_t)v55, *((void *)v6 + 17) | 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    v50(v52, v49);
    sub_1004D4360(v51, v56);
    swift_release();
    return v64(0, 0, 0, 0);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.DeferredRescan()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10089DD78()
{
  return 0xD000000000000017;
}

uint64_t sub_10089DD94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v3, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_10089DEA0()
{
  if (*(unsigned char *)(v0 + 138)) {
    return 3;
  }
  else {
    return 1;
  }
}

uint64_t sub_10089DEB4()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = v11 - v3 + 22;
  swift_beginAccess();
  sub_1003B32B0((uint64_t)(v0 + 7), (uint64_t)v11);
  uint64_t v5 = v0[15];
  uint64_t v6 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v4, v6, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_1001E3E98((uint64_t)v11, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1003B3318((uint64_t)v11);
  return v8;
}

void sub_10089E094(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v81 = a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v8 = v7[77];
  uint64_t v9 = v7[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = v7[78];
  uint64_t v12 = v7[76];
  uint64_t v83 = AssociatedTypeWitness;
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v13 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v86 = swift_getAssociatedConformanceWitness();
  uint64_t v82 = type metadata accessor for ReconciliationID();
  uint64_t v73 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)&v59 - v14;
  uint64_t v83 = v9;
  uint64_t v84 = v12;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v86 = v11;
  uint64_t v65 = type metadata accessor for ReconciliationMutation();
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v66 = (char *)&v59 - v15;
  uint64_t v83 = v9;
  uint64_t v84 = v12;
  uint64_t v68 = v12;
  uint64_t v69 = v11;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v86 = v11;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v70 = sub_10096C890();
  uint64_t v72 = *(void **)(v70 - 8);
  uint64_t v17 = __chkstk_darwin(v70);
  uint64_t v76 = (char *)&v59 - v18;
  uint64_t v71 = *(void *)(v16 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v9;
  uint64_t v23 = v81;
  uint64_t v24 = v8;
  type metadata accessor for SnapshotItem();
  uint64_t v25 = sub_10096B960();
  uint64_t v77 = v21;
  *(void *)(v21 + 16) = v25;
  uint64_t v26 = v23[4];
  char v27 = (*(uint64_t (**)(void))(*v23 + 256))();
  uint64_t v28 = v13;
  uint64_t v29 = v80;
  if ((v27 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v30 = v72;
  uint64_t v63 = v26;
  uint64_t v31 = v80;
  uint64_t v61 = v20;
  uint64_t v64 = v16;
  uint64_t v62 = v28;
  uint64_t v32 = (uint64_t)v6 + *(void *)(*v6 + 576);
  sub_1000DEDD8(v32, (uint64_t)v76);
  uint64_t v60 = v32;
  uint64_t v33 = v71;
  uint64_t v34 = v64;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v76, 1, v64) != 1)
  {
    uint64_t v72 = v6;
    BOOL v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v61, v76, v34);
    uint64_t v36 = v63;
    if (sub_1005152D8())
    {
      uint64_t v37 = type metadata accessor for ItemReconciliationHalf();
      if (v35[*(int *)(v37 + 56)] - 3 >= 4)
      {
        if (v35[*(int *)(v37 + 52)] == 1)
        {
          uint64_t v83 = v22;
          uint64_t v84 = v68;
          uint64_t AssociatedConformanceWitness = v24;
          uint64_t v86 = v69;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v39 = (uint64_t)v66;
          uint64_t v40 = &v66[*(int *)(TupleTypeMetadata2 + 48)];
          (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v60);
          BOOL v35 = v61;
          swift_storeEnumTagMultiPayload();
          *uint64_t v40 = 0;
          uint64_t v34 = v64;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = v65;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v75, v39);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v39, v41);
        }
        unint64_t v42 = 0x80000001009BD5A0;
        unint64_t v43 = 0xD000000000000036;
LABEL_16:
        v78(0, v43, v42, 0);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v34);
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v44 = &v35[*(int *)(v34 + 52)];
      if ((v44[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] | 2) != 6)
      {
        if (v35[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] == 1)
        {
          uint64_t v83 = v22;
          uint64_t v84 = v68;
          uint64_t AssociatedConformanceWitness = v24;
          uint64_t v86 = v69;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v55 = swift_getTupleTypeMetadata2();
          uint64_t v56 = (uint64_t)v66;
          uint64_t v57 = &v66[*(int *)(v55 + 48)];
          (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v60);
          BOOL v35 = v61;
          swift_storeEnumTagMultiPayload();
          *uint64_t v57 = 3;
          uint64_t v34 = v64;
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = v65;
          swift_storeEnumTagMultiPayload();
          sub_100591758(v75, v56);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v56, v58);
        }
        unint64_t v43 = 0xD000000000000040;
        unint64_t v42 = 0x80000001009BD550;
        goto LABEL_16;
      }
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v34);
    uint64_t v28 = v62;
    uint64_t v6 = v72;
    uint64_t v29 = v31;
    uint64_t v26 = v36;
    goto LABEL_11;
  }
  ((void (*)(char *, uint64_t))v30[1])(v76, v70);
  uint64_t v28 = v62;
  uint64_t v29 = v31;
  uint64_t v26 = v63;
LABEL_11:
  uint64_t v81 = (void *)((char *)v6 + *(void *)(*v6 + 576));
  (*(void (**)(char *))(*(void *)(v28 - 8) + 16))(v29);
  uint64_t v45 = v82;
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = (char *)(*(uint64_t (**)(char *))(*v23 + 472))(v29);
  uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v29, v45);
  uint64_t v47 = *(void *)(v26 + 16);
  uint64_t v82 = (*(uint64_t (**)(uint64_t))(*v23 + 272))(v46);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v77;
  *(void *)(v48 + 16) = v6;
  *(void *)(v48 + 24) = v49;
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v23;
  v50[3] = v6;
  uint64_t v51 = v79;
  v50[4] = v78;
  v50[5] = v51;
  v50[6] = v75;
  v50[7] = v49;
  uint64_t v52 = *(void (**)(void *, uint64_t, uint64_t, char *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t, char), void *))(*(void *)v47 + 144);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  double v53 = (void *)v82;
  double v54 = v76;
  v52(v81, v74, v82, v76, sub_1008AC4F0, v48, sub_1008AC554, v50);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_10089EAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 600);
  uint64_t v7 = *(void *)(*(void *)a2 + 616);
  uint64_t v39 = type metadata accessor for SnapshotItem();
  uint64_t v8 = sub_10096C890();
  __chkstk_darwin(v8 - 8);
  uint64_t v38 = (uint64_t)v34 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = (char *)v34 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v34 - v18;
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)v34 - v20;
  swift_bridgeObjectRetain();
  if (!sub_10096C1A0())
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  v34[0] = v15;
  uint64_t v21 = 0;
  v34[3] = a3 + 16;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v7 + 72);
  uint64_t v44 = a2 + *(void *)(*(void *)a2 + 576);
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
  unint64_t v42 = (void (**)(char *, uint64_t))(v46 + 8);
  unint64_t v43 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v41 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v46 = v7 + 72;
  v34[2] = v7 + 64;
  v34[1] = v39 - 8;
  uint64_t v47 = v14;
  uint64_t v48 = v7;
  uint64_t v35 = a1;
  uint64_t v36 = AssociatedTypeWitness;
  while (1)
  {
    BOOL v23 = sub_10096C130();
    sub_10096C0E0();
    if (v23)
    {
      uint64_t v24 = *(void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
      v24(v50, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v21), v6);
      uint64_t v25 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_11;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_10096CC20();
    if (v34[0] != 8) {
      break;
    }
    v51[0] = result;
    uint64_t v24 = *v49;
    (*v49)(v50, v51, v6);
    swift_unknownObjectRelease();
    uint64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_6:
    (*v43)(v19, v50, v6);
    v45(v6, v7);
    swift_getAssociatedConformanceWitness();
    char v26 = sub_10096BBE0();
    (*v42)(v13, AssociatedTypeWitness);
    if (v26)
    {
      uint64_t v27 = v48;
      (*(void (**)(uint64_t, uint64_t))(v48 + 64))(v6, v48);
      uint64_t v28 = v37;
      v24(v37, (uint64_t *)v19, v6);
      uint64_t v40 = v25;
      uint64_t v29 = v38;
      uint64_t v30 = v39;
      uint64_t v31 = (uint64_t)v28;
      uint64_t v32 = v27;
      a1 = v35;
      uint64_t AssociatedTypeWitness = v36;
      SnapshotItem.init(_:)(v31, v6, v32, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
      swift_beginAccess();
      sub_10096BA80();
      uint64_t v25 = v40;
      sub_10096BAB0();
      swift_endAccess();
    }
    (*v41)(v19, v6);
    ++v21;
    BOOL v22 = v25 == sub_10096C1A0();
    uint64_t v14 = v47;
    uint64_t v7 = v48;
    if (v22) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10089F030(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a4;
    *(void *)(v36 + 24) = a3;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = a5;
    *(void *)(v37 + 24) = a6;
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = a3;
    v38[3] = a4;
    void v38[4] = a7;
    v38[5] = a1;
    v38[6] = a5;
    v38[7] = a6;
    sub_1000D5B30(a1, 1);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    sub_1000D5B30(a1, 1);
    uint64_t v39 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v36, (uint64_t)sub_1003B377C, v37, (uint64_t)sub_1008AC76C, (uint64_t)v38, v39, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
    swift_release();
    return sub_1000D5B18(a1, 1);
  }
  else
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(a8 + 16);
    uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
    type metadata accessor for SnapshotItem();
    swift_getAssociatedConformanceWitness();
    v17._uint64_t countAndFlagsBits = v15;
    v17._object = AssociatedTypeWitness;
    Filename.init(rawValue:)(v17);
    sub_1000D5B30(a1, 0);
    sub_10096BA30();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v18 = sub_10096C1F0();
    uint64_t v19 = sub_10096C160();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = a1;
    void v20[3] = a3;
    v20[4] = a4;
    v20[5] = a7;
    v20[6] = a5;
    v20[7] = a6;
    uint64_t v46 = v20;
    v20[8] = v18;
    swift_retain();
    swift_retain();
    uint64_t v44 = a1;
    sub_1000D5B30(a1, 0);
    uint64_t v45 = a6;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (sub_10096C160() < 1)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      if (v19)
      {
        sub_1000D5B18(v44, 0);
      }
      else
      {
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = a4;
        *(void *)(v40 + 24) = a3;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = a5;
        *(void *)(v41 + 24) = v45;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = sub_1008AC5F0;
        *(void *)(v42 + 24) = v46;
        uint64_t v43 = type metadata accessor for Continuation();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v40, (uint64_t)sub_1003B377C, v41, (uint64_t)sub_10058F394, v42, v43, (uint64_t)&type metadata for String);
        sub_1000D5B18(v44, 0);
        swift_release();
        swift_release();
        swift_release();
      }
      return swift_release();
    }
    else
    {
      uint64_t result = 0;
      if (v19 >= 50) {
        uint64_t v22 = 50;
      }
      else {
        uint64_t v22 = v19;
      }
      while (v22 >= result)
      {
        uint64_t v48 = sub_10096C200();
        uint64_t v50 = v24;
        uint64_t v51 = v23;
        uint64_t v26 = v25;
        BOOL v49 = v22 == v19;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = a4;
        *(void *)(v27 + 24) = a3;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = a5;
        *(void *)(v28 + 24) = v45;
        uint64_t v29 = v19;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = a4;
        *(void *)(v30 + 24) = v48;
        *(void *)(v30 + 32) = v51;
        *(void *)(v30 + 40) = v26;
        *(void *)(v30 + 48) = v50;
        *(void *)(v30 + 56) = a3;
        *(unsigned char *)(v30 + 64) = v49;
        *(void *)(v30 + 72) = sub_1008AC5F0;
        *(void *)(v30 + 80) = v46;
        uint64_t v31 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v27, (uint64_t)sub_1003B377C, v28, (uint64_t)sub_1008AC670, v30, v31, (uint64_t)&type metadata for String);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        uint64_t v32 = v22 + 50;
        if (__OFADD__(v22, 50)) {
          goto LABEL_19;
        }
        if (v29 < v32) {
          uint64_t v32 = v29;
        }
        uint64_t result = v22;
        BOOL v33 = v22 < v29;
        uint64_t v22 = v32;
        uint64_t v19 = v29;
        if (!v33) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
  }
  return result;
}

void sub_10089F6EC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v123 = a6;
  uint64_t v124 = a5;
  uint64_t v131 = a4;
  uint64_t v127 = a3;
  uint64_t v8 = (void *)*a1;
  uint64_t v112 = sub_10096A650();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v110 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v8[10];
  uint64_t v11 = v8[12];
  uint64_t v117 = type metadata accessor for SnapshotItem();
  uint64_t v116 = sub_10096C890();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v118 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v105 - v12);
  uint64_t v130 = sub_10096A630();
  uint64_t v133 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v134 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v114 = (char *)&v105 - v14;
  uint64_t v128 = type metadata accessor for FileTreeError();
  uint64_t v113 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v129 = (char *)&v105 - v15;
  uint64_t v16 = v8[11];
  uint64_t v17 = v8[13];
  uint64_t v140 = v10;
  uint64_t v141 = v16;
  uint64_t v142 = v11;
  uint64_t v143 = v17;
  uint64_t v121 = type metadata accessor for ReconciliationMutation();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = (char *)&v105 - v18;
  uint64_t v138 = v10;
  uint64_t v140 = v10;
  uint64_t v141 = v16;
  uint64_t v125 = v16;
  uint64_t v126 = v17;
  uint64_t v142 = v11;
  uint64_t v143 = v17;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_10096C890();
  uint64_t v132 = *(char **)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v105 - v22;
  uint64_t v136 = *(void *)(v19 - 8);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v105 - v27;
  uint64_t v29 = *(void *)(*a2 + 576);
  uint64_t v135 = a2;
  uint64_t v30 = (uint64_t)a2 + v29;
  uint64_t v31 = v139;
  sub_1000DEDD8(v30, (uint64_t)v23);
  if (v31) {
    return;
  }
  uint64_t v32 = (void (**)(char *, uint64_t))v132;
  uint64_t v105 = v20;
  uint64_t v106 = v26;
  uint64_t v107 = v28;
  uint64_t v139 = v30;
  uint64_t v109 = a1;
  uint64_t v108 = 0;
  uint64_t v33 = v136;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v23, 1, v19) != 1)
  {
    uint64_t v34 = v107;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v107, v23, v19);
    uint64_t v35 = &v34[*(int *)(v19 + 52)];
    uint64_t v36 = v125;
    uint64_t v37 = v126;
    uint64_t v38 = type metadata accessor for ItemReconciliationHalf();
    int v39 = v35[*(int *)(v38 + 56)];
    if (v39 == 6)
    {
      uint64_t v40 = v106;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v106, v34, v19);
    }
    else
    {
      uint64_t v40 = v106;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v106, v34, v19);
      if (v39 == 4)
      {
        uint64_t v41 = *(char **)(v33 + 8);
        uint64_t v136 = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v132 = v41;
        ((void (*)(char *, uint64_t))v41)(v40, v19);
        uint64_t v106 = (char *)v19;
LABEL_10:
        uint64_t v140 = v138;
        uint64_t v141 = v36;
        uint64_t v142 = v11;
        uint64_t v143 = v37;
        type metadata accessor for JobResult();
        uint64_t v46 = swift_getAssociatedTypeWitness();
        uint64_t v47 = AssociatedTypeWitness;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v49 = swift_getAssociatedConformanceWitness();
        uint64_t v140 = v47;
        uint64_t v141 = v46;
        uint64_t v142 = AssociatedConformanceWitness;
        uint64_t v143 = v49;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v51 = (uint64_t)v119;
        uint64_t v52 = &v119[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v119, v139, v47);
        swift_storeEnumTagMultiPayload();
        *uint64_t v52 = 3;
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = v121;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v127, v51);
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v51, v53);
        ((void (*)(char *, char *))v132)(v107, v106);
        goto LABEL_14;
      }
    }
    int v42 = v40[*(int *)(v19 + 52) + *(int *)(v38 + 56)];
    uint64_t v45 = *(char **)(v33 + 8);
    uint64_t v44 = v33 + 8;
    uint64_t v43 = v45;
    ((void (*)(char *, uint64_t))v45)(v40, v19);
    if (v42 != 3)
    {
      uint64_t v54 = v138;
      if (v34[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] == 1)
      {
        uint64_t v140 = v54;
        uint64_t v141 = v36;
        uint64_t v142 = v11;
        uint64_t v143 = v37;
        type metadata accessor for JobResult();
        uint64_t v132 = v43;
        uint64_t v55 = swift_getAssociatedTypeWitness();
        uint64_t v106 = (char *)v19;
        uint64_t v136 = v44;
        uint64_t v56 = AssociatedTypeWitness;
        uint64_t v57 = swift_getAssociatedConformanceWitness();
        uint64_t v58 = swift_getAssociatedConformanceWitness();
        uint64_t v140 = v56;
        uint64_t v141 = v55;
        uint64_t v142 = v57;
        uint64_t v143 = v58;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v59 = swift_getTupleTypeMetadata2();
        uint64_t v60 = (uint64_t)v119;
        uint64_t v61 = &v119[*(int *)(v59 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v119, v139, v56);
        swift_storeEnumTagMultiPayload();
        *uint64_t v61 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = v121;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v127, v60);
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v60, v62);
        ((void (*)(char *, char *))v132)(v107, v106);
      }
      else
      {
        ((void (*)(char *, uint64_t))v43)(v34, v19);
      }
      goto LABEL_14;
    }
    uint64_t v136 = v44 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v106 = (char *)v19;
    uint64_t v132 = v43;
    goto LABEL_10;
  }
  v32[1](v23, v105);
LABEL_14:
  uint64_t v64 = v130;
  uint64_t v63 = v131;
  uint64_t v65 = v134;
  uint64_t v66 = v135;
  uint64_t v67 = v109;
  uint64_t v68 = v133;
  uint64_t v70 = v128;
  uint64_t v69 = v129;
  uint64_t v144 = v131;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  if (swift_dynamicCast())
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 13)
    {
      uint64_t v86 = v138;
      uint64_t v88 = v125;
      uint64_t v87 = v126;
      uint64_t v140 = v138;
      uint64_t v141 = v125;
      uint64_t v142 = v11;
      uint64_t v143 = v126;
      type metadata accessor for JobResult();
      uint64_t v140 = v86;
      uint64_t v141 = v88;
      uint64_t v142 = v11;
      uint64_t v143 = v87;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v89 = sub_1008AA778(v139, v66[15], v66[16], v66[17] | 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
      sub_1004D4360(v127, v89);
      swift_release();
      v124(0, 0, 0, v63);
      goto LABEL_20;
    }
    if (EnumCaseMultiPayload)
    {
      (*(void (**)(char *, uint64_t))(v113 + 8))(v69, v70);
    }
    else
    {
      uint64_t v72 = v138;
      uint64_t v73 = swift_getAssociatedTypeWitness();
      uint64_t v74 = swift_getAssociatedTypeWitness();
      uint64_t v75 = swift_getAssociatedConformanceWitness();
      uint64_t v76 = swift_getAssociatedConformanceWitness();
      uint64_t v140 = v73;
      uint64_t v141 = v74;
      uint64_t v142 = v75;
      uint64_t v143 = v76;
      type metadata accessor for FileItemVersion();
      uint64_t v77 = sub_10096C890();
      sub_100033BE8(&qword_100AD7360);
      uint64_t v78 = AssociatedTypeWitness;
      uint64_t v136 = v77;
      uint64_t v132 = &v69[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_errorRelease();
      uint64_t v79 = v122;
      uint64_t v80 = v114;
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v114, v69, v78);
      swift_getAssociatedConformanceWitness();
      uint64_t v81 = v139;
      char v82 = sub_10096BBE0();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v78);
      if (v82)
      {
        uint64_t v83 = v125;
        uint64_t v84 = v126;
        uint64_t v140 = v72;
        uint64_t v141 = v125;
        uint64_t v142 = v11;
        uint64_t v143 = v126;
        type metadata accessor for JobResult();
        uint64_t v140 = v72;
        uint64_t v141 = v83;
        uint64_t v142 = v11;
        uint64_t v143 = v84;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v85 = sub_1008AA778(v81, v135[15], v135[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        sub_1004D4360(v127, v85);
        swift_release();
        v124(0, 0, 0, v63);
        (*(void (**)(char *))(*(void *)(v136 - 8) + 8))(v132);
LABEL_20:
        swift_errorRelease();
        return;
      }
      (*(void (**)(char *))(*(void *)(v136 - 8) + 8))(v132);
      uint64_t v65 = v134;
      uint64_t v66 = v135;
      uint64_t v67 = v109;
      uint64_t v68 = v133;
    }
  }
  swift_errorRelease();
  sub_10096A500();
  sub_1008AC7C4((unint64_t *)&qword_100ACF7F0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
  char v90 = sub_10096AA60();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v64);
  uint64_t v92 = AssociatedTypeWitness;
  uint64_t v91 = v138;
  uint64_t v93 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = v93;
  uint64_t v95 = v139;
  if (v90 & 1) != 0 && ((*(uint64_t (**)(uint64_t, uint64_t))(v93 + 72))(v92, v93))
  {
    uint64_t v96 = v118;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v117 - 8)
                                                                                               + 56))(v118, 1, 1);
    uint64_t v97 = v108;
    sub_10086C908(v96, v95, 0, 0, 0, v67, v66[15], v66[16], v66[17], v127);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v115 + 8))(v96, v116);
    if (!v97)
    {
      sub_10096A5C0();
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_1008AC7C4((unint64_t *)&qword_100ACB680, (void (*)(uint64_t))&type metadata accessor for CocoaError);
      uint64_t v102 = v110;
      uint64_t v103 = v112;
      sub_10096ABD0();
      uint64_t v104 = (void *)sub_10096A4D0();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v102, v103);
      v124(0, 0, 0, (uint64_t)v104);
    }
  }
  else
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v94 + 72))(v92, v94) & 1) == 0)
    {
      uint64_t v98 = v66[17];
      if ((v98 & 1) == 0)
      {
        uint64_t v100 = v125;
        uint64_t v99 = v126;
        uint64_t v140 = v91;
        uint64_t v141 = v125;
        uint64_t v142 = v11;
        uint64_t v143 = v126;
        type metadata accessor for JobResult();
        uint64_t v140 = v91;
        uint64_t v141 = v100;
        uint64_t v142 = v11;
        uint64_t v143 = v99;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v101 = sub_1008AA778(v95, v66[15], v66[16], v98, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        sub_1004D4360(v127, v101);
        swift_release();
      }
    }
    v124(0, 0, 0, v63);
  }
}

uint64_t sub_1008A083C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, unint64_t, void), uint64_t a6, uint64_t a7)
{
  uint64_t v80 = a5;
  uint64_t v76 = a3;
  uint64_t v77 = a7;
  uint64_t v79 = a6;
  uint64_t v75 = a4;
  unint64_t v8 = *(void *)(*(void *)a2 + 88);
  uint64_t v9 = *(void *)(*(void *)a2 + 96);
  uint64_t v10 = *(void *)(*(void *)a2 + 104);
  uint64_t v83 = *(void *)(*(void *)a2 + 80);
  unint64_t v84 = v8;
  uint64_t v85 = v9;
  uint64_t v86 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationMutation();
  uint64_t v74 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v82 = v83;
  unint64_t v84 = v8;
  uint64_t v85 = v9;
  uint64_t v14 = v9;
  uint64_t v86 = v10;
  uint64_t v15 = type metadata accessor for ItemReconciliation();
  uint64_t v16 = sub_10096C890();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v24 = (char *)&v66 - v23;
  uint64_t v78 = a1;
  if (a1)
  {
    uint64_t v25 = v80;
    uint64_t v26 = v78;
LABEL_10:
    uint64_t v83 = 0x6572646C6968633CLL;
    unint64_t v84 = 0xEA00000000003A6ELL;
    type metadata accessor for SnapshotItem();
    uint64_t v87 = sub_10096C160();
    v88._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v88);
    swift_bridgeObjectRelease();
    v89._uint64_t countAndFlagsBits = 62;
    v89._object = (void *)0xE100000000000000;
    sub_10096BDC0(v89);
    v25(v26, v83, v84, 0);
    return swift_bridgeObjectRelease();
  }
  uint64_t v67 = v22;
  uint64_t v68 = v20;
  uint64_t v69 = (uint64_t)v24;
  uint64_t v70 = v13;
  uint64_t v27 = v21;
  uint64_t v71 = v11;
  uint64_t v72 = v10;
  unint64_t v73 = v8;
  if (sub_1005152D8() || (v76[136] & 1) == 0)
  {
    uint64_t v28 = v14;
    goto LABEL_6;
  }
  uint64_t v49 = (uint64_t)&v76[*(void *)(*(void *)v76 + 576)];
  uint64_t v50 = v81;
  uint64_t result = sub_1000DEDD8(v49, (uint64_t)v19);
  unint64_t v51 = v73;
  if (!v50)
  {
    uint64_t v28 = v14;
    uint64_t v66 = v49;
    uint64_t v52 = v27;
    uint64_t v53 = v15;
    int v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v15);
    uint64_t v81 = 0;
    if (v54 != 1)
    {
      uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
      uint64_t v56 = v69;
      v55(v69, v19, v15);
      uint64_t v57 = v56 + *(int *)(v15 + 52);
      uint64_t v29 = v72;
      if (*(unsigned char *)(v57 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 44)) == 3)
      {
        uint64_t v83 = v82;
        unint64_t v84 = v51;
        uint64_t v85 = v14;
        uint64_t v86 = v29;
        uint64_t v68 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v59 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v61 = swift_getAssociatedConformanceWitness();
        uint64_t v83 = AssociatedTypeWitness;
        unint64_t v84 = v59;
        uint64_t v85 = AssociatedConformanceWitness;
        uint64_t v86 = v61;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v63 = (uint64_t)v70;
        uint64_t v64 = &v70[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v70, v66, AssociatedTypeWitness);
        swift_storeEnumTagMultiPayload();
        *uint64_t v64 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v65 = v71;
        swift_storeEnumTagMultiPayload();
        uint64_t v39 = v75;
        sub_100591758(v75, v63);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v63, v65);
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v69, v53);
        uint64_t v37 = v76;
        uint64_t v40 = *((void *)v76 + 17);
        if ((v40 & 0x80000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v56, v53);
LABEL_7:
      uint64_t v83 = v82;
      unint64_t v84 = v73;
      uint64_t v85 = v28;
      uint64_t v86 = v29;
      uint64_t v69 = type metadata accessor for JobResult();
      uint64_t v30 = swift_getAssociatedTypeWitness();
      uint64_t v31 = swift_getAssociatedTypeWitness();
      uint64_t v32 = swift_getAssociatedConformanceWitness();
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      uint64_t v83 = v30;
      unint64_t v84 = v31;
      uint64_t v85 = v32;
      uint64_t v86 = v33;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v34 = swift_getTupleTypeMetadata2();
      uint64_t v35 = (uint64_t)v70;
      uint64_t v36 = &v70[*(int *)(v34 + 48)];
      uint64_t v37 = v76;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v70, &v37[*(void *)(*(void *)v37 + 576)], v30);
      swift_storeEnumTagMultiPayload();
      *uint64_t v36 = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v71;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v75;
      sub_100591758(v75, v35);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v35, v38);
      uint64_t v40 = *((void *)v37 + 17);
      if ((v40 & 0x80000000) == 0)
      {
LABEL_9:
        uint64_t v25 = v80;
        uint64_t v26 = v78;
        goto LABEL_10;
      }
LABEL_8:
      uint64_t v41 = v82;
      uint64_t v43 = v72;
      unint64_t v42 = v73;
      uint64_t v83 = v82;
      unint64_t v84 = v73;
      uint64_t v85 = v28;
      uint64_t v86 = v72;
      type metadata accessor for JobResult();
      uint64_t v83 = v41;
      unint64_t v84 = v42;
      uint64_t v85 = v28;
      uint64_t v86 = v43;
      type metadata accessor for Ingestion.MarkParentDeleted();
      uint64_t v44 = (uint64_t)&v37[*(void *)(*(void *)v37 + 576)];
      uint64_t v45 = *((void *)v37 + 15);
      uint64_t v46 = *((void *)v37 + 16);
      swift_allocObject();
      uint64_t v47 = sub_100610B30(v44, v45, v46, v40);
      sub_1004D4360(v39, v47);
      swift_release();
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v68);
LABEL_6:
    uint64_t v29 = v72;
    goto LABEL_7;
  }
  return result;
}

void sub_1008A1060(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, int a7, void (*a8)(uint64_t))
{
  uint64_t v60 = a8;
  int v64 = a7;
  uint64_t v66 = a3;
  uint64_t v12 = a1;
  uint64_t v69 = (void *)*a1;
  uint64_t v13 = sub_10096B0E0();
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v63 = v13;
  __chkstk_darwin(v13);
  uint64_t v61 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (void (**)(uint64_t, uint64_t))v69[75];
  uint64_t v67 = v69[77];
  uint64_t v68 = v15;
  uint64_t v65 = type metadata accessor for SnapshotItem();
  uint64_t v74 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  unint64_t v73 = &v55[-v16];
  uint64_t v17 = sub_10096B480();
  uint64_t v71 = *(void *)(v17 - 8);
  uint64_t v72 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = &v55[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v20 = [objc_allocWithZone((Class)FPLoggerScope) init];
  id v21 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v70 = a2;
  swift_unknownObjectRetain_n();
  id v22 = v20;
  swift_retain();
  uint64_t v23 = sub_10096B470();
  os_log_type_t v24 = sub_10096C590();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v76 = v12;
    uint64_t v27 = v26;
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v57 = v28;
    uint64_t v59 = swift_slowAlloc();
    v79[0] = v59;
    *(_DWORD *)uint64_t v27 = 138412802;
    os_log_t v58 = v23;
    id v29 = [v22 enter];
    int v56 = v25;
    id v30 = v29;
    uint64_t v78 = (uint64_t)v29;
    uint64_t v75 = a6;
    sub_10096C8C0();
    void *v28 = v30;

    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v31 = sub_10060FC94();
    uint64_t v78 = sub_100719D44(v31, v32, v79);
    sub_10096C8C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2050;
    uint64_t v33 = sub_10096CA00();
    swift_unknownObjectRelease();
    uint64_t v78 = v33;
    a6 = v75;
    sub_10096C8C0();
    swift_unknownObjectRelease();
    os_log_t v34 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v56, "%@ processing item batch %{public}s -> <items:%{public}ld>", (uint8_t *)v27, 0x20u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v12 = v76;
    swift_slowDealloc();
  }
  else
  {

    swift_release();
    swift_unknownObjectRelease_n();
  }
  (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v19, v72);
  if ((v12[17] & 0x10000) != 0) {
    int v35 = 3;
  }
  else {
    int v35 = 1;
  }
  uint64_t v36 = v77;
  unint64_t v37 = sub_10088636C((uint64_t)v12 + *(void *)(*v12 + 576), v35, a6);
  if (v36)
  {
LABEL_23:
    sub_1008A1838(v22);

    return;
  }
  uint64_t v76 = v12;
  uint64_t v77 = 0;
  uint64_t v70 = v37;
  uint64_t v72 = v38;
  uint64_t v59 = (uint64_t)v22;
  uint64_t v75 = a6;
  uint64_t v39 = v69[76];
  uint64_t v40 = v69[78];
  v79[0] = (uint64_t)v68;
  v79[1] = v39;
  v79[2] = v67;
  v79[3] = v40;
  type metadata accessor for ConcreteJobResult();
  uint64_t v71 = sub_100591720();
  swift_unknownObjectRetain();
  uint64_t v41 = v65;
  uint64_t v42 = v66;
  uint64_t v43 = sub_10096C9E0();
  if (v43 != sub_10096CA10())
  {
    uint64_t v44 = (uint64_t)v73;
    uint64_t v67 = v74 + 16;
    uint64_t v68 = (void (**)(uint64_t, uint64_t))(v74 + 8);
    uint64_t v69 = (void *)(a5 >> 1);
    uint64_t v45 = v43;
    while (1)
    {
      sub_10096C9F0();
      if (v43 < a4 || (uint64_t)v69 <= v45) {
        break;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v44, v42 + *(void *)(v74 + 72) * v45, v41);
      uint64_t v47 = v77;
      sub_1008A1A3C(v70, v72, v44, v75, v76, v71);
      uint64_t v77 = v47;
      if (v47)
      {
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        (*v68)(v44, v41);
        id v22 = (id)v59;
        goto LABEL_23;
      }
      ++v45;
      (*v68)(v44, v41);
      if (v45 == sub_10096CA10()) {
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_14:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = v61;
  sub_10096B0D0();
  sub_10096B080();
  double v50 = v49;
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v48, v63);
  double v51 = v50 * 1000000000.0;
  char v52 = v64;
  if ((~COERCE__INT64(v50 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v51 < 9.22337204e18)
  {
    uint64_t v53 = v77;
    uint64_t v54 = sub_10059C6F4(v71, (uint64_t)v51);
    if (v53)
    {
      swift_release();
      id v22 = (id)v59;
    }
    else
    {
      id v22 = (id)v59;
      if (v52) {
        v60(v54);
      }
      swift_release();
    }
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1008A1838(void *a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v7 = a1;
  unint64_t v8 = sub_10096B470();
  os_log_type_t v9 = sub_10096C590();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v15[0] = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = [v7 leave];
    v15[1] = v13;
    sub_10096C8C0();
    *uint64_t v12 = v13;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%@", v11, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v15[0];
    swift_slowDealloc();
  }
  else
  {

    unint64_t v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1008A1A3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v56 = a6;
  uint64_t v55 = a5;
  double v50 = (void *)*a4;
  uint64_t v9 = v50[10];
  uint64_t v10 = v50[12];
  uint64_t v47 = type metadata accessor for FileTreeError();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v13 = sub_10096C890();
  uint64_t v51 = *(void *)(v13 - 8);
  unint64_t v52 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v44 - v14);
  uint64_t v16 = sub_10096B0E0();
  uint64_t v48 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v54 = AssociatedTypeWitness;
  uint64_t result = __chkstk_darwin(AssociatedTypeWitness);
  id v22 = (char *)&v44 - v21;
  if (a2)
  {
    uint64_t v23 = v57;
    uint64_t result = sub_100886070(a3, (uint64_t)a4);
    uint64_t v24 = v23;
    if (v23 || (result & 1) == 0) {
      return result;
    }
  }
  else
  {
    uint64_t v24 = v57;
  }
  int v25 = (uint64_t *)(a3 + *(int *)(v12 + 68));
  unint64_t v26 = v25[1];
  if (!(v26 >> 62)) {
    return result;
  }
  if (v26 >> 62 == 1)
  {
    uint64_t v57 = v24;
    uint64_t v58 = v9;
    uint64_t v51 = *v25;
    unint64_t v52 = v26;
    uint64_t v27 = v26 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v28 = v50[11];
    uint64_t v29 = v50[13];
    uint64_t v59 = v28;
    uint64_t v60 = v10;
    uint64_t v61 = v29;
    type metadata accessor for Ingestion.TrackTemporaryItem();
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v22, a3, v54);
    swift_retain();
    sub_10096B0D0();
    sub_10096B080();
    double v31 = v30;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v49);
    double v32 = v31 * 1000000000.0;
    if ((~COERCE__INT64(v31 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v32 > -9.22337204e18)
      {
        if (v32 < 9.22337204e18)
        {
          uint64_t v33 = (uint64_t)v32;
          uint64_t v34 = v55[17];
          swift_allocObject();
          uint64_t v35 = sub_100610B30((uint64_t)v22, 0x2000000000000000, v33, v34);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v54);
          uint64_t v37 = *(void *)(v35 + 96);
          uint64_t v36 = *(void *)(v35 + 104);
          *(void *)(v35 + 96) = 256;
          *(void *)(v35 + 104) = v27;
          char v38 = *(unsigned char *)(v35 + 112);
          *(unsigned char *)(v35 + 112) = 0;
          swift_retain();
          sub_1000D31F8(v37, v36, v38);
          uint64_t v58 = v9;
          uint64_t v59 = v28;
          uint64_t v60 = v10;
          uint64_t v61 = v29;
          type metadata accessor for JobResult();
          sub_1004D4360(v56, v35);
          swift_release();
          return sub_1000CF144(v51, v52);
        }
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v39 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v39 + 16))(v15, a3, v12);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v12);
  uint64_t v43 = v55[17];
  if ((v43 & 0x10000) != 0) {
    int v40 = 3;
  }
  else {
    int v40 = 1;
  }
  sub_10086C908(v15, a3, v40, 1, 0, a4, v55[15], v55[16], v43, v56);
  if (!v24) {
    return (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), unint64_t))(v51 + 8))(v15, v52);
  }
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), unint64_t))(v51 + 8))(v15, v52);
  uint64_t v58 = v24;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  uint64_t v42 = v46;
  uint64_t v41 = v47;
  if (swift_dynamicCast())
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      swift_errorRelease();
      return swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v41);
  }
  return swift_errorRelease();
}

uint64_t sub_1008A204C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = *(void *)(*(void *)v3 + 608);
  uint64_t v34 = *(void *)(*(void *)v3 + 624);
  uint64_t v36 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_10096C890();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v31 - v12;
  if (sub_1005152D8())
  {
    uint64_t v14 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v16 = swift_getAssociatedConformanceWitness();
    uint64_t v37 = v14;
    uint64_t v38 = AssociatedTypeWitness;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v16;
    uint64_t v17 = type metadata accessor for ReconciliationID();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v35, 1, 1, v17);
  }
  else
  {
    uint64_t v31 = v7;
    uint64_t v32 = v11;
    uint64_t v19 = v41;
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 160))(v3 + *(void *)(*(void *)v3 + 576));
    if (!v19)
    {
      uint64_t v20 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v31);
        uint64_t v21 = swift_getAssociatedTypeWitness();
        uint64_t v22 = swift_getAssociatedConformanceWitness();
        uint64_t v23 = swift_getAssociatedConformanceWitness();
        uint64_t v37 = v21;
        uint64_t v38 = AssociatedTypeWitness;
        uint64_t v39 = v22;
        uint64_t v40 = v23;
        uint64_t v24 = type metadata accessor for ReconciliationID();
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
      }
      else
      {
        int v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v25(v13, v10, AssociatedTypeWitness);
        unint64_t v26 = v35;
        v25(v35, v13, AssociatedTypeWitness);
        uint64_t v27 = swift_getAssociatedTypeWitness();
        uint64_t v28 = swift_getAssociatedConformanceWitness();
        uint64_t v29 = swift_getAssociatedConformanceWitness();
        uint64_t v37 = v27;
        uint64_t v38 = AssociatedTypeWitness;
        uint64_t v39 = v28;
        uint64_t v40 = v29;
        uint64_t v30 = type metadata accessor for ReconciliationID();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v26, 0, 1, v30);
      }
    }
  }
  return result;
}

uint64_t sub_1008A2530@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A2538(a1);
}

uint64_t sub_1008A2538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 0, 1, v5);
}

uint64_t type metadata accessor for Ingestion.FetchChildrenMetadata()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008A26D8()
{
  return 0xD000000000000012;
}

uint64_t sub_1008A26F4()
{
  return 9;
}

uint64_t sub_1008A26FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for JobLockRule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = v15 - v7 + 22;
  uint64_t v9 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a2 + 32) + 16) + 304);
  uint64_t v10 = swift_retain();
  LOBYTE(v9) = v9(v10);
  swift_release();
  if (v9) {
    return 0;
  }
  swift_beginAccess();
  sub_1003B32B0(v3 + 56, (uint64_t)v15);
  uint64_t v12 = *(void *)(v3 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = sub_1001E3E98((uint64_t)v15, v12, (uint64_t)v8);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1003B3318((uint64_t)v15);
  return v11;
}

void sub_1008A28CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(void))(*a1 + 216))();
  uint64_t v10 = sub_1001E6F00();
  swift_release();
  uint64_t v11 = *(void *)(a1[4] + 16);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(*a1 + 272);
  uint64_t v13 = swift_retain();
  id v16 = (id)v12(v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = v5;
  v14[4] = a4;
  void v14[5] = a5;
  v14[6] = a3;
  v14[7] = v10;
  uint64_t v15 = *(void (**)(id, uint64_t (*)(uint64_t, uint64_t), void *))(*(void *)v11 + 664);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v16, sub_1008AC390, v14);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1008A2A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  id v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a2;
  type metadata accessor for FileTreeWriter.EventStreamBatch();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v17 = sub_10096D510();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + 4, a1, v17);
  v16[9] = a7;
  v16[10] = a4;
  v16[11] = a5;
  v16[12] = a6;
  v16[13] = a8;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1008AC474(a1, (void (*)(void, void, void, void, void))sub_10013032C);
  uint64_t v18 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v14, (uint64_t)sub_1003B377C, v15, (uint64_t)sub_1008AC414, (uint64_t)v16, v18, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1008A2CCC(void *a1, uint64_t a2, void (**a3)(void, void), void *a4, void *a5, void (*a6)(void, uint64_t, unint64_t, uint64_t), uint64_t a7, objc_class *a8)
{
  uint64_t v207 = a8;
  uint64_t v195 = a7;
  uint64_t v196 = a6;
  uint64_t v220 = a4;
  uint64_t v197 = (void *)*a1;
  uint64_t v13 = v197[10];
  uint64_t v14 = v197[12];
  type metadata accessor for FileTreeWriter.EventStreamBatch();
  uint64_t v200 = sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v15 = sub_10096D510();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(void, void))(v16 + 32);
  uint64_t v221 = a3;
  uint64_t v217 = v15;
  unint64_t v214 = (void (*)(void *, void (**)(void, void), uint64_t))v17;
  int64_t v213 = v16 + 32;
  v17(&v233, a3);
  uint64_t v193 = v233;
  uint64_t v199 = type metadata accessor for FileTreeError();
  uint64_t v190 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v198 = (char *)&v186 - v18;
  uint64_t v19 = sub_10096C890();
  uint64_t v208 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v202 = (char *)&v186 - v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v204 = sub_10096C890();
  uint64_t v191 = *(void *)(v204 - 8);
  uint64_t v22 = __chkstk_darwin(v204);
  uint64_t v206 = (char *)&v186 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v203 = (char *)&v186 - v24;
  uint64_t v227 = v19;
  uint64_t v25 = sub_10096C890();
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  char v223 = (char *)&v186 - v27;
  uint64_t v216 = *(void *)(v13 - 8);
  uint64_t v189 = *(void *)(v216 + 64);
  __chkstk_darwin(v26);
  uint64_t v224 = (char *)&v186 - v28;
  uint64_t v29 = sub_10096B0E0();
  uint64_t v210 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v212 = (char *)&v186 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = AssociatedTypeWitness;
  uint64_t v218 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  id v201 = (char *)&v186 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v222 = (char *)&v186 - v35;
  uint64_t v188 = v36;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v225 = (uint64_t *)((char *)&v186 - v38);
  uint64_t v39 = *(uint64_t (**)(uint64_t))(*a1 + 152);
  uint64_t v209 = a1;
  uint64_t v40 = v39(v37);
  uint64_t v226 = v13;
  uint64_t v194 = v40;
  uint64_t v211 = (void (**)(void, void, void, void))v29;
  if ((v40 & 0x40) != 0) {
    goto LABEL_8;
  }
  uint64_t v41 = a2;
  uint64_t v42 = *(void *)(a2 + 16);
  if (!v42)
  {
    a2 = v41;
LABEL_8:
    uint64_t v51 = a5;
    double v50 = v220;
    goto LABEL_9;
  }
  uint64_t v187 = a5;
  uint64_t v215 = v14;
  uint64_t v43 = v209[7];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 8);
  uint64_t v46 = *(void *)(type metadata accessor for SyncState() - 8);
  uint64_t v47 = v41 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
  uint64_t v48 = v41;
  uint64_t v49 = *(void *)(v46 + 72);
  uint64_t v192 = v48;
  swift_bridgeObjectRetain();
  do
  {
    v45(v47, ObjectType, v43);
    if (v8) {
      goto LABEL_103;
    }
    v47 += v49;
    --v42;
  }
  while (v42);
  a2 = v192;
  swift_bridgeObjectRelease();
  uint64_t v13 = v226;
  uint64_t v14 = v215;
  double v50 = v220;
  uint64_t v51 = v187;
LABEL_9:
  v214(v234, v221, v217);
  uint64_t v52 = v234[0];
  uint64_t v217 = v234[0];
  if (v237 == 1)
  {
    type metadata accessor for Code(0);
    uint64_t v228 = -1002;
    swift_errorRetain();
    sub_1008AC7C4((unint64_t *)&qword_100ACC8C0, type metadata accessor for Code);
    char v53 = sub_10096AA60();
    sub_1008AC474((uint64_t)v221, (void (*)(void, void, void, void, void))sub_1001303B8);
    if (v53)
    {
      uint64_t v54 = v220;
      if ((v194 & 0x40) != 0)
      {
        uint64_t v163 = *(void *)(v209[4] + 16);
        uint64_t v164 = *(void (**)(void))(v163 + 16);
        if (v164)
        {
          uint64_t v227 = *(void *)(v163 + 24);
          type metadata accessor for FileTreeWriter.FileTreeChange();
          uint64_t v192 = a2;
          sub_10096D230();
          swift_allocObject();
          swift_retain();
          uint64_t v165 = v51;
          uint64_t v166 = sub_10096C0D0();
          *(unsigned char *)uint64_t v167 = 0;
          *(void *)(v167 + 8) = 7;
          *(unsigned char *)(v167 + 16) = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v168 = v166;
          uint64_t v51 = v165;
          sub_1003FC080(v168);
          v164();
          sub_1000705CC((uint64_t)v164);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v187 = v51;
        uint64_t v193 = v8;
        unint64_t v55 = v197[11];
        uint64_t v56 = v197[13];
        uint64_t v228 = v13;
        unint64_t v229 = v55;
        uint64_t v230 = v14;
        uint64_t v231 = v56;
        uint64_t v227 = type metadata accessor for JobResult();
        uint64_t v228 = v13;
        unint64_t v229 = v55;
        uint64_t v230 = v14;
        uint64_t v215 = v14;
        uint64_t v231 = v56;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        sub_10085378C();
        uint64_t v58 = v212;
        sub_10096B0D0();
        sub_10096B080();
        double v60 = v59;
        uint64_t v61 = *(void (**)(void, void))(v210 + 8);
        uint64_t v62 = v211;
        v61(v58, v211);
        double v63 = v60 * 1000000000.0;
        if ((~COERCE__INT64(v60 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_118;
        }
        if (v63 <= -9.22337204e18) {
          goto LABEL_119;
        }
        if (v63 >= 9.22337204e18) {
          goto LABEL_120;
        }
        uint64_t v64 = (uint64_t)v54;
        uint64_t v65 = (uint64_t)v225;
        uint64_t v224 = (char *)ItemMetadata;
        uint64_t v66 = sub_1008AA778((uint64_t)v225, 0, (uint64_t)v63, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
        v218 += 8;
        v67(v65, v219);
        sub_1004D4360(v64, v66);
        swift_release();
        sub_1008537D0();
        uint64_t v68 = v212;
        sub_10096B0D0();
        sub_10096B080();
        double v70 = v69;
        v61(v68, v62);
        double v71 = v70 * 1000000000.0;
        if ((~COERCE__INT64(v70 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_121;
        }
        uint64_t v14 = v215;
        uint64_t v51 = v187;
        if (v71 <= -9.22337204e18) {
          goto LABEL_122;
        }
        uint64_t v13 = v226;
        if (v71 >= 9.22337204e18) {
          goto LABEL_123;
        }
        uint64_t v54 = (void *)v64;
        uint64_t v72 = (uint64_t)v225;
        uint64_t v73 = sub_1008AA778((uint64_t)v225, 0, (uint64_t)v71, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        v67(v72, v219);
        sub_1004D4360((uint64_t)v54, v73);
        swift_release();
      }
      unint64_t v169 = v197[11];
      uint64_t v170 = v197[13];
      uint64_t v228 = v13;
      unint64_t v229 = v169;
      uint64_t v230 = v14;
      uint64_t v231 = v170;
      type metadata accessor for JobResult();
      uint64_t v228 = v13;
      unint64_t v229 = v169;
      uint64_t v230 = v14;
      uint64_t v231 = v170;
      type metadata accessor for Ingestion.FetchEventStream();
      uint64_t v171 = v51;
      uint64_t v172 = *(void *)(*v51 + 576);
      int v173 = v212;
      sub_10096B0D0();
      sub_10096B080();
      double v175 = v174;
      (*(void (**)(char *, void (**)(void, void, void, void)))(v210 + 8))(v173, v211);
      double v176 = v175 * 1000000000.0;
      if ((~COERCE__INT64(v175 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v176 > -9.22337204e18)
        {
          if (v176 < 9.22337204e18)
          {
            uint64_t v177 = (uint64_t)v171 + v172;
            uint64_t v178 = (uint64_t)v176;
            uint64_t v179 = v171[17];
            swift_allocObject();
            uint64_t v180 = sub_1008AA720(v177, 0x2000000000000000, v178, v179, 0x80000);
            sub_1004D4360((uint64_t)v54, v180);
            swift_release();
            type metadata accessor for NSFileProviderError(0);
            uint64_t v238 = -1002;
            sub_100042898((uint64_t)_swiftEmptyArrayStorage);
            sub_1008AC7C4((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
            sub_10096ABD0();
            uint64_t v181 = (void *)v228;
            v196(0, 0, 0, v228);

            return;
          }
LABEL_116:
          __break(1u);
          goto LABEL_117;
        }
LABEL_115:
        __break(1u);
        goto LABEL_116;
      }
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    unint64_t v139 = v197[11];
    uint64_t v140 = v197[13];
    uint64_t v228 = v13;
    unint64_t v229 = v139;
    uint64_t v230 = v14;
    uint64_t v231 = v140;
    type metadata accessor for JobResult();
    uint64_t v228 = v13;
    unint64_t v229 = v139;
    uint64_t v230 = v14;
    uint64_t v231 = v140;
    type metadata accessor for Ingestion.FetchEventStream();
    uint64_t v141 = v51;
    uint64_t v142 = *(void *)(*v51 + 576);
    swift_errorRetain();
    uint64_t v143 = v212;
    sub_10096B0D0();
    sub_10096B080();
    double v145 = v144;
    (*(void (**)(char *, void (**)(void, void, void, void)))(v210 + 8))(v143, v211);
    double v146 = v145 * 1000000000.0;
    if ((~COERCE__INT64(v145 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v146 > -9.22337204e18)
      {
        if (v146 < 9.22337204e18)
        {
          uint64_t v147 = (uint64_t)v141 + v142;
          uint64_t v148 = (uint64_t)v146;
          uint64_t v149 = v141[17];
          swift_allocObject();
          uint64_t v150 = sub_1008AA720(v147, 0x2000000000000000, v148, v149, 0x80000);
          sub_1004D4360((uint64_t)v220, v150);
          swift_release();
          swift_errorRetain();
          v196(0, 0, 0, v217);
          uint64_t v151 = v221;
          sub_1008AC474((uint64_t)v221, (void (*)(void, void, void, void, void))sub_1001303B8);
          sub_1008AC474((uint64_t)v151, (void (*)(void, void, void, void, void))sub_1001303B8);
          return;
        }
        goto LABEL_113;
      }
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v192 = a2;
  unint64_t v214 = (void (*)(void *, void (**)(void, void), uint64_t))v234[1];
  double v74 = v236;
  LODWORD(v187) = v235;
  if (v235)
  {
    unint64_t v75 = v197[11];
    uint64_t v76 = v197[13];
    uint64_t v228 = v13;
    unint64_t v229 = v75;
    uint64_t v230 = v14;
    uint64_t v231 = v76;
    uint64_t v221 = (void (**)(void, void))type metadata accessor for JobResult();
    uint64_t v228 = v13;
    unint64_t v229 = v75;
    uint64_t v230 = v14;
    uint64_t v231 = v76;
    type metadata accessor for Ingestion.FetchEventStream();
    uint64_t v77 = *(void *)(*v51 + 576);
    uint64_t v78 = v212;
    sub_10096B0D0();
    sub_10096B080();
    double v80 = v79;
    (*(void (**)(char *, void (**)(void, void, void, void)))(v210 + 8))(v78, v211);
    double v81 = v80 * 1000000000.0;
    if ((~COERCE__INT64(v80 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    if (v81 <= -9.22337204e18)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    uint64_t v52 = v217;
    if (v81 >= 9.22337204e18)
    {
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    uint64_t v82 = (uint64_t)v51 + v77;
    uint64_t v83 = (uint64_t)v81;
    uint64_t v84 = v51[17];
    swift_allocObject();
    uint64_t v85 = sub_1008AA720(v82, 0x2000000000000000, v83, v84, 0x80000);
    sub_1004D4360((uint64_t)v50, v85);
    swift_release();
    uint64_t v13 = v226;
  }
  uint64_t v193 = v8;
  swift_getTupleTypeMetadata2();
  sub_10096C110();
  uint64_t v221 = *(void (***)(void, void))(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v238 = sub_10096BA00();
  swift_bridgeObjectRetain();
  uint64_t v86 = sub_10096C1A0();
  uint64_t v215 = v14;
  if (!v86) {
    goto LABEL_34;
  }
  uint64_t v87 = 0;
  uint64_t v212 = *(char **)(v14 + 64);
  int64_t v213 = v14 + 64;
  uint64_t v220 = (void *)(v216 + 16);
  uint64_t v211 = (void (**)(void, void, void, void))(v216 + 56);
  uint64_t v210 = v208 + 56;
  Swift::String v88 = (void (**)(char *, uint64_t))(v216 + 8);
  Swift::String v89 = v224;
  char v90 = v223;
  while (1)
  {
    BOOL v91 = sub_10096C130();
    sub_10096C0E0();
    if (!v91) {
      break;
    }
    unint64_t v92 = v52
        + ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80))
        + *(void *)(v216 + 72) * v87;
    uint64_t v93 = *(void (**)(char *, unint64_t, uint64_t))(v216 + 16);
    v93(v224, v92, v13);
    uint64_t v94 = v87 + 1;
    if (__OFADD__(v87, 1)) {
      goto LABEL_33;
    }
LABEL_28:
    uint64_t v13 = v226;
    ((void (*)(uint64_t, uint64_t))v212)(v226, v215);
    v93(v90, (unint64_t)v89, v13);
    (*v211)(v90, 0, 1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))v210)(v90, 0, 1, v227);
    sub_10096BA80();
    sub_10096BAB0();
    (*v88)(v89, v13);
    uint64_t v52 = v217;
    ++v87;
    if (v94 == sub_10096C1A0()) {
      goto LABEL_34;
    }
  }
  uint64_t v95 = sub_10096CC20();
  if (v189 != 8) {
    goto LABEL_124;
  }
  uint64_t v228 = v95;
  uint64_t v93 = (void (*)(char *, unint64_t, uint64_t))*v220;
  ((void (*)(char *, uint64_t *, uint64_t))*v220)(v224, &v228, v13);
  swift_unknownObjectRelease();
  uint64_t v94 = v87 + 1;
  if (!__OFADD__(v87, 1)) {
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v96 = (void (*)(void, void, void))v214;
  swift_bridgeObjectRetain();
  uint64_t v97 = v219;
  if (!sub_10096C1A0()) {
    goto LABEL_45;
  }
  uint64_t v98 = 0;
  uint64_t v224 = (char *)(v218 + 16);
  uint64_t v99 = (void (**)(uint64_t, char *, uint64_t))(v218 + 32);
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v216 + 56);
  uint64_t v101 = (void (**)(char *, void, uint64_t, uint64_t))(v208 + 56);
  uint64_t v102 = (uint64_t)v225;
  uint64_t v103 = v223;
  while (2)
  {
    BOOL v104 = sub_10096C130();
    sub_10096C0E0();
    if (v104)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v218 + 16))(v222, (unint64_t)v96+ ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80))+ *(void *)(v218 + 72) * v98, v97);
      uint64_t v105 = v98 + 1;
      if (__OFADD__(v98, 1)) {
        break;
      }
      goto LABEL_38;
    }
    uint64_t v108 = sub_10096CC20();
    if (v188 != 8) {
      goto LABEL_125;
    }
    uint64_t v228 = v108;
    (*(void (**)(char *, uint64_t *, uint64_t))v224)(v222, &v228, v97);
    swift_unknownObjectRelease();
    uint64_t v105 = v98 + 1;
    if (!__OFADD__(v98, 1))
    {
LABEL_38:
      (*v99)(v102, v222, v97);
      (*v100)(v103, 1, 1, v226);
      (*v101)(v103, 0, 1, v227);
      sub_10096BA80();
      sub_10096BAB0();
      uint64_t v106 = (void (*)(void, void, void))v214;
      ++v98;
      BOOL v107 = v105 == sub_10096C1A0();
      uint64_t v96 = v106;
      if (v107) {
        goto LABEL_45;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_45:
  uint64_t v109 = swift_bridgeObjectRelease();
  if ((v194 & 0x40) != 0)
  {
    uint64_t v152 = *(void (**)(uint64_t, uint64_t, void, void))(*(void *)(v209[4] + 16) + 16);
    if (v152)
    {
      uint64_t v225 = &v186;
      uint64_t v228 = v238;
      uint64_t v153 = __chkstk_darwin(v109);
      uint64_t v154 = v197[13];
      *(&v186 - 4) = v197[11];
      *(&v186 - 3) = v154;
      *(&v186 - 2) = (uint64_t)v207;
      __chkstk_darwin(v153);
      *(&v186 - 6) = v226;
      *(&v186 - 5) = v155;
      *(&v186 - 4) = v215;
      *(&v186 - 3) = v156;
      *(&v186 - 2) = (uint64_t)sub_1008AC440;
      *(&v186 - 1) = v157;
      sub_100031400((uint64_t)v152);
      uint64_t v158 = sub_10096BA80();
      uint64_t v159 = type metadata accessor for FileTreeWriter.FileTreeChange();
      swift_bridgeObjectRetain();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v162 = sub_1003FC0AC((void (*)(char *, char *))sub_1008AC44C, (uint64_t)(&v186 - 8), v158, v159, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v161);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v152(v162, v192, 0, 0);
      sub_1000705CC((uint64_t)v152);
    }
    swift_bridgeObjectRelease();
LABEL_93:
    if (v74 >= 30.0)
    {
      sub_10017DB74();
      uint64_t v182 = swift_allocError();
      *(void *)uint64_t v183 = 0;
      *(void *)(v183 + 8) = 0;
      *(unsigned char *)(v183 + 16) = -4;
    }
    else
    {
      uint64_t v182 = 0;
    }
    uint64_t v228 = 0;
    unint64_t v229 = 0xE000000000000000;
    swift_errorRetain();
    sub_10096CBD0(36);
    swift_bridgeObjectRelease();
    uint64_t v228 = 0x646574616470753CLL;
    unint64_t v229 = 0xE90000000000003ALL;
    uint64_t v232 = sub_10096C160();
    v239._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v239);
    swift_bridgeObjectRelease();
    v240._uint64_t countAndFlagsBits = 0x6F6974656C656420;
    v240._object = (void *)0xEB000000003A736ELL;
    sub_10096BDC0(v240);
    uint64_t v232 = sub_10096C160();
    v241._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v241);
    swift_bridgeObjectRelease();
    v242._uint64_t countAndFlagsBits = 0x65726F4D73616820;
    v242._object = (void *)0xE90000000000003ALL;
    sub_10096BDC0(v242);
    if (v187) {
      v184._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v184._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v187) {
      uint64_t v185 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v185 = (void *)0xE500000000000000;
    }
    v184._object = v185;
    sub_10096BDC0(v184);
    swift_bridgeObjectRelease();
    v243._uint64_t countAndFlagsBits = 62;
    v243._object = (void *)0xE100000000000000;
    sub_10096BDC0(v243);
    v196(0, v228, v229, v182);
    swift_errorRelease();
    swift_errorRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    return;
  }
  int64_t v110 = 0;
  uint64_t v111 = *(void *)(v238 + 64);
  uint64_t v212 = (char *)(v238 + 64);
  uint64_t v220 = (void *)v238;
  uint64_t v112 = 1 << *(unsigned char *)(v238 + 32);
  uint64_t v113 = -1;
  if (v112 < 64) {
    uint64_t v113 = ~(-1 << v112);
  }
  unint64_t v114 = v113 & v111;
  uint64_t v115 = TupleTypeMetadata2;
  uint64_t v225 = (uint64_t *)(TupleTypeMetadata2 - 8);
  uint64_t v216 = v218 + 16;
  uint64_t v215 = v208 + 16;
  uint64_t v116 = (void (**)(void))(v191 + 32);
  uint64_t v224 = (char *)(v208 + 32);
  char v223 = (char *)(v218 + 32);
  uint64_t v222 = (char *)(v208 + 8);
  uint64_t v221 = (void (**)(void, void))(v218 + 8);
  int64_t v213 = (unint64_t)(v112 + 63) >> 6;
  uint64_t v211 = (void (**)(void, void, void, void))(v213 - 1);
  uint64_t v117 = v193;
  while (2)
  {
    uint64_t v118 = v206;
    if (v114)
    {
      unint64_t v119 = __clz(__rbit64(v114));
      v114 &= v114 - 1;
      int64_t v120 = v110;
      unint64_t v121 = v119 | (v110 << 6);
      uint64_t v122 = v227;
      goto LABEL_53;
    }
    int64_t v125 = v110 + 1;
    uint64_t v122 = v227;
    if (__OFADD__(v110, 1))
    {
      __break(1u);
      goto LABEL_108;
    }
    if (v125 >= v213)
    {
      int64_t v120 = v110;
      goto LABEL_59;
    }
    unint64_t v126 = *(void *)&v212[8 * v125];
    if (v126)
    {
LABEL_57:
      unint64_t v114 = (v126 - 1) & v126;
      unint64_t v121 = __clz(__rbit64(v126)) + (v125 << 6);
      int64_t v120 = v125;
LABEL_53:
      uint64_t v123 = v220;
      (*(void (**)(char *, unint64_t, uint64_t))(v218 + 16))(v206, v220[6] + *(void *)(v218 + 72) * v121, v219);
      (*(void (**)(char *, unint64_t, uint64_t))(v208 + 16))(&v118[*(int *)(v115 + 48)], v123[7] + *(void *)(v208 + 72) * v121, v122);
      uint64_t v124 = 0;
LABEL_60:
      uint64_t v127 = *(void *)(v115 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v118, v124, 1, v115);
      uint64_t v128 = v203;
      (*v116)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v128, 1, v115) == 1)
      {
        swift_release();
        goto LABEL_93;
      }
      uint64_t v129 = &v128[*(int *)(v115 + 48)];
      uint64_t v130 = (uint64_t)v202;
      (*(void (**)(char *, char *, uint64_t))v224)(v202, v129, v122);
      uint64_t v131 = (uint64_t)v201;
      uint64_t v132 = v128;
      uint64_t v133 = v122;
      uint64_t v134 = v219;
      (*(void (**)(char *, char *, uint64_t))v223)(v201, v132, v219);
      sub_1008A4D98(v131, v130, v207, v209);
      if (v117)
      {
        (*(void (**)(uint64_t, uint64_t))v222)(v130, v133);
        (*v221)(v131, v134);
        uint64_t v228 = v117;
        swift_errorRetain();
        uint64_t v136 = v198;
        uint64_t v137 = v199;
        if (swift_dynamicCast())
        {
          if (swift_getEnumCaseMultiPayload() == 14)
          {
            swift_errorRelease();
            swift_errorRelease();
            uint64_t v117 = 0;
            goto LABEL_50;
          }
          swift_release();
          (*(void (**)(char *, uint64_t))(v190 + 8))(v136, v137);
        }
        else
        {
          swift_release();
        }
        swift_errorRelease();
        return;
      }
      (*(void (**)(uint64_t, uint64_t))v222)(v130, v133);
      (*v221)(v131, v134);
LABEL_50:
      uint64_t v115 = TupleTypeMetadata2;
      int64_t v110 = v120;
      continue;
    }
    break;
  }
  int64_t v120 = v110 + 2;
  if (v110 + 2 >= v213)
  {
    unint64_t v114 = 0;
    uint64_t v124 = 1;
    int64_t v120 = v110 + 1;
    goto LABEL_60;
  }
  unint64_t v126 = *(void *)&v212[8 * v120];
  if (v126)
  {
    int64_t v125 = v110 + 2;
    goto LABEL_57;
  }
  uint64_t v138 = v110 + 3;
  if (v110 + 3 >= v213)
  {
LABEL_59:
    unint64_t v114 = 0;
    uint64_t v124 = 1;
    goto LABEL_60;
  }
  unint64_t v126 = *(void *)&v212[8 * v138];
  if (v126)
  {
    int64_t v125 = v110 + 3;
    goto LABEL_57;
  }
  while (1)
  {
    int64_t v125 = v138 + 1;
    if (__OFADD__(v138, 1)) {
      break;
    }
    if (v125 >= v213)
    {
      unint64_t v114 = 0;
      uint64_t v124 = 1;
      int64_t v120 = (int64_t)v211;
      goto LABEL_60;
    }
    unint64_t v126 = *(void *)&v212[8 * v125];
    ++v138;
    if (v126) {
      goto LABEL_57;
    }
  }
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
}

uint64_t sub_1008A4B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_10096C890();
  sub_10096C890();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v11 = a4 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v12 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a4, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v11, a2, v9);
  *(void *)(a4 + v12) = a3;
  type metadata accessor for FileTreeWriter.FileTreeChange();
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_1008A4CE0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1008A4D98(uint64_t a1, uint64_t a2, objc_class *a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v6 = *(void *)a3;
  uint64_t v7 = *a4;
  uint64_t v8 = sub_10096B0E0();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 88);
  uint64_t v12 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v36 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = ((char *)&v30 - v13);
  uint64_t v15 = *(void *)(v7 + 88);
  uint64_t v16 = *(void *)(v7 + 104);
  uint64_t v38 = v10;
  uint64_t v39 = v15;
  uint64_t v40 = v11;
  uint64_t v41 = v16;
  type metadata accessor for ConcreteJobResult();
  uint64_t v17 = sub_100591720();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_10096C890();
  type metadata accessor for JobLockAggregator();
  sub_10096C890();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v21 = (char *)v14 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v22 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(NSObject *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, v34, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v21, v35, v19);
  *(Class *)((char *)&v14->isa + v22) = a3;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v23 = v37;
  sub_1008726B4(v14, 0, v17, a4);
  if (v23)
  {
    swift_release();
    return (*(uint64_t (**)(NSObject *, uint64_t))(v36 + 8))(v14, v12);
  }
  (*(void (**)(NSObject *, uint64_t))(v36 + 8))(v14, v12);
  uint64_t v25 = v31;
  sub_10096B0D0();
  sub_10096B080();
  double v27 = v26;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v25, v33);
  double v28 = v27 * 1000000000.0;
  if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v28 < 9.22337204e18)
  {
    uint64_t v29 = sub_10059C6F4((uint64_t)v17, (uint64_t)v28);
    (*(void (**)(uint64_t))(*a4 + 552))(v29);
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.FetchEventStream()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008A51B8()
{
  return 0xD000000000000014;
}

uint64_t sub_1008A51D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t (*)(), void *))(*(void *)v9 + 584);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_1008AC340, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_1008A52E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v5, (uint64_t)sub_1008AC34C, v6, v7, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for Ingestion.CancelFetchFileContent()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008A540C()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1008A5450()
{
  return 0xD000000000000018;
}

uint64_t sub_1008A546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 160) = v5;
  *(_OWORD *)(v4 + 176) = *(_OWORD *)(a1 + 32);
  *(void *)(v4 + 192) = *(void *)(a1 + 48);
  return sub_100610514(a2, a3, a4);
}

uint64_t sub_1008A5494()
{
  v1._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v1);
  swift_bridgeObjectRelease();
  return 979659110;
}

uint64_t sub_1008A5500@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1008A566C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  long long v10 = *(_OWORD *)(v5 + 160);
  v14[0] = *(_OWORD *)(v5 + 144);
  v14[1] = v10;
  _OWORD v14[2] = *(_OWORD *)(v5 + 176);
  uint64_t v15 = *(void *)(v5 + 192);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(_OWORD *, uint64_t (*)(uint64_t), void *))(*(void *)v9 + 696);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v14, sub_1008AC2C8, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_1008A5780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  swift_errorRetain();
  uint64_t v9 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v7, (uint64_t)sub_10042BC18, (uint64_t)v8, v9, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1008A58A0()
{
  return sub_10001E9AC(*(void *)(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_1008A58A8()
{
  uint64_t v0 = sub_10061056C();
  sub_10001E9AC(*(void *)(v0 + 152), *(void *)(v0 + 160));
  return v0;
}

uint64_t sub_1008A58DC()
{
  uint64_t v0 = sub_10061056C();
  sub_10001E9AC(*(void *)(v0 + 152), *(void *)(v0 + 160));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.CollectCapturedContent()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008A5940()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1008A59E8()
{
  return 0x74692D656772656DLL;
}

uint64_t sub_1008A5A08()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v1._uint64_t countAndFlagsBits = 540945696;
  v1._object = (void *)0xE400000000000000;
  sub_10096BDC0(v1);
  sub_10096D270();
  return 0;
}

uint64_t sub_1008A5B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v41 = a1;
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = *(void *)(*(void *)v4 + 560);
  uint64_t v8 = *(void *)(*(void *)v4 + 544);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_10096C890();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v37 - v12;
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v37 - v14;
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = &v4[*(void *)(v6 + 576)];
  (*(void (**)(char *))(*(void *)v16 + 280))(v17);
  if (!v3)
  {
    uint64_t v18 = v42;
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    uint64_t v19 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v43) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v20 = v45;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v22 = v19;
      uint64_t v40 = v19;
      uint64_t v23 = v43;
      v21(v22, v13, v43);
      swift_beginAccess();
      sub_1003B32B0((uint64_t)(v4 + 56), (uint64_t)v44);
      v37[1] = *((void *)v4 + 15);
      uint64_t v24 = type metadata accessor for JobLockRule();
      uint64_t v42 = v24;
      sub_10096D230();
      uint64_t v38 = *(void *)(*(void *)(v24 - 8) + 72);
      swift_allocObject();
      uint64_t v39 = sub_10096C0D0();
      uint64_t v26 = v25;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v28 = v26 + *(int *)(TupleTypeMetadata3 + 48);
      v37[0] = v26 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
      v29(v26, v17, v23);
      uint64_t v30 = v28;
      uint64_t v31 = v40;
      v29(v30, v40, v23);
      v29(v37[0], v31, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v26 + v38;
      uint64_t v33 = v26 + v38 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v34 = v26 + v38 + *(int *)(TupleTypeMetadata3 + 64);
      v29(v32, &v4[*(void *)(*(void *)v4 + 584)], v23);
      uint64_t v35 = v40;
      v29(v33, v40, v23);
      v29(v34, v35, v23);
      swift_storeEnumTagMultiPayload();
      sub_1003FC080(v39);
      uint64_t v16 = sub_1001E2584();
      swift_bridgeObjectRelease();
      sub_1003B3318((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v23);
    }
  }
  return v16;
}

uint64_t sub_1008A5FE0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v147 = a4;
  uint64_t v148 = a5;
  uint64_t v144 = a3;
  uint64_t v146 = a1;
  uint64_t v6 = *(char **)v5;
  uint64_t v7 = *(void *)(*(void *)v5 + 568);
  uint64_t v8 = *(void *)(*(void *)v5 + 552);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v126 = sub_10096C890();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v133 = (char *)&v110 - v9;
  uint64_t v143 = v6;
  uint64_t v10 = *((void *)v6 + 68);
  uint64_t v11 = *((void *)v6 + 70);
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v128 = sub_10096C890();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v13 = __chkstk_darwin(v128);
  uint64_t v124 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v149 = (char *)&v110 - v16;
  uint64_t v138 = v12;
  uint64_t v139 = *(void *)(v12 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v121 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v136 = (char *)&v110 - v19;
  uint64_t v150 = v10;
  uint64_t v151 = v8;
  uint64_t v152 = v11;
  uint64_t v153 = v7;
  uint64_t v20 = type metadata accessor for ReconciliationMutation();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v141 = v20;
  uint64_t v142 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v110 - v22;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v150 = v24;
  uint64_t v151 = v25;
  uint64_t v152 = AssociatedConformanceWitness;
  uint64_t v153 = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v134 = v28;
  uint64_t v135 = v29;
  uint64_t v30 = __chkstk_darwin(v28);
  int64_t v120 = (char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v122 = (char *)&v110 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v137 = (char *)&v110 - v35;
  __chkstk_darwin(v34);
  uint64_t v123 = (char *)&v110 - v36;
  uint64_t v150 = v10;
  uint64_t v151 = v8;
  uint64_t v152 = v11;
  uint64_t v153 = v7;
  uint64_t v140 = type metadata accessor for JobResult();
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v132 = v7;
  uint64_t v131 = v8;
  uint64_t v39 = AssociatedTypeWitness;
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v150 = v37;
  uint64_t v151 = v39;
  uint64_t v152 = v38;
  uint64_t v153 = v40;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v41 = &v23[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v42 = *((void *)v143 + 73);
  uint64_t v143 = v5;
  uint64_t v43 = &v5[v42];
  uint64_t v44 = *(void *)(v37 - 8);
  uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v129 = v44 + 16;
  v130(v23, &v5[v42], v37);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v41 = xmmword_10097B210;
  v41[16] = 4;
  uint64_t v45 = v144;
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v141;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v45, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v23, v46);
  uint64_t v47 = *(void *)(v146 + 32);
  uint64_t v48 = *(void (**)(char *, uint64_t))(*(void *)v47 + 240);
  uint64_t v49 = *(void *)v47 + 240;
  v48(v43, 1);
  uint64_t v118 = v49;
  unint64_t v119 = v48;
  double v50 = v136;
  uint64_t v141 = v10;
  uint64_t v142 = v11;
  uint64_t v117 = v43;
  uint64_t v140 = v37;
  uint64_t v51 = v138;
  uint64_t v52 = v139;
  char v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
  if (v53(v149, 1, v138) == 1)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v149, v128);
    uint64_t v150 = v141;
    uint64_t v151 = v131;
    uint64_t v152 = v142;
    uint64_t v153 = v132;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v54 = swift_allocError();
    uint64_t v56 = v55;
    uint64_t v57 = v140;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    double v59 = &v56[*(int *)(TupleTypeMetadata2 + 48)];
    v130(v56, &v143[*(void *)(*(void *)v143 + 576)], v57);
    *(void *)double v59 = 0xD000000000000013;
    *((void *)v59 + 1) = 0x80000001009BD480;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v56, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
    double v60 = v147;
    swift_errorRetain();
    v60(0, 0, 0, v54);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v115 = v53;
  uint64_t v116 = v47;
  unint64_t v114 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v114(v50, v149, v51);
  uint64_t v62 = &v50[*(int *)(v51 + 40)];
  uint64_t v63 = v135 + 16;
  uint64_t v149 = *(char **)(v135 + 16);
  ((void (*)(char *, char *, uint64_t))v149)(v137, v62, v134);
  uint64_t WitnessTable = swift_getWitnessTable();
  int v113 = FileItem.kind.getter(v51, WitnessTable);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v139 = v52 + 8;
  v65(v50, v51);
  uint64_t v66 = &v143[*(void *)(*(void *)v143 + 576)];
  (*(void (**)(char *))(**(void **)(v146 + 16) + 160))(v66);
  uint64_t v68 = v141;
  uint64_t v67 = v142;
  uint64_t v110 = WitnessTable;
  uint64_t v111 = v65;
  uint64_t v112 = v63;
  uint64_t v136 = v66;
  double v69 = v149;
  double v70 = v133;
  int v71 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v133, 1);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v70, v126);
  if (v71 != 1)
  {
    uint64_t v150 = v68;
    uint64_t v151 = v131;
    uint64_t v152 = v67;
    uint64_t v153 = v132;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v75 = swift_allocError();
    uint64_t v77 = v76;
    uint64_t v78 = v140;
    uint64_t v79 = swift_getTupleTypeMetadata2();
    double v80 = &v77[*(int *)(v79 + 48)];
    v130(v77, v136, v78);
    *(void *)double v80 = 0xD000000000000019;
    *((void *)v80 + 1) = 0x80000001009BD4D0;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v77, 0, 1, v79);
    swift_willThrow();
    double v81 = v147;
    uint64_t v82 = v134;
    goto LABEL_6;
  }
  uint64_t v72 = v68;
  uint64_t v73 = v67;
  double v74 = v124;
  v119(v136, 1);
  uint64_t v85 = v138;
  if (v115(v74, 1, v138) == 1)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v74, v128);
    double v81 = v147;
    uint64_t v82 = v134;
    if (v113 == 1)
    {
      v147(0, 0, 0, 0);
      return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v137, v82);
    }
    uint64_t v150 = v72;
    uint64_t v151 = v131;
    uint64_t v152 = v73;
    uint64_t v153 = v132;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v75 = swift_allocError();
    uint64_t v101 = v100;
    uint64_t v102 = v140;
    uint64_t v103 = swift_getTupleTypeMetadata2();
    BOOL v104 = &v101[*(int *)(v103 + 48)];
    v130(v101, v136, v102);
    *(void *)BOOL v104 = 0xD00000000000002DLL;
    *((void *)v104 + 1) = 0x80000001009BD4A0;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v101, 0, 1, v103);
    swift_willThrow();
LABEL_6:
    uint64_t v83 = v135;
    uint64_t v84 = v137;
    swift_errorRetain();
    v81(0, 0, 0, v75);
    swift_errorRelease();
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v84, v82);
  }
  uint64_t v86 = v121;
  v114(v121, v74, v85);
  int v87 = FileItem.kind.getter(v85, v110);
  Swift::String v88 = v123;
  uint64_t v89 = v134;
  ((void (*)(char *, char *, uint64_t))v69)(v123, &v86[*(int *)(v85 + 40)], v134);
  v111(v86, v85);
  uint64_t v90 = *(void *)(v116 + 16);
  BOOL v91 = v87 == 1;
  unint64_t v92 = v147;
  uint64_t v93 = v148;
  uint64_t v94 = v135;
  uint64_t v95 = v143;
  uint64_t v96 = v146;
  if (v91)
  {
    uint64_t v97 = (void *)swift_allocObject();
    v97[2] = v96;
    v97[3] = v92;
    uint64_t v98 = v144;
    v97[4] = v93;
    v97[5] = v98;
    v97[6] = v95;
    uint64_t v99 = *(void (**)(char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v90 + 640);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v99(v136, v117, sub_1008AC1B8, v97);
    swift_release();
    swift_release();
    uint64_t v109 = *(void (**)(char *, uint64_t))(v94 + 8);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v69)(v122, v88, v89);
    uint64_t v105 = v120;
    ((void (*)(char *, char *, uint64_t))v69)(v120, v137, v89);
    uint64_t v106 = (void *)swift_allocObject();
    v106[2] = v96;
    v106[3] = v95;
    v106[4] = v92;
    v106[5] = v93;
    v106[6] = v144;
    BOOL v107 = *(void (**)(char *, char *, char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v90 + 648);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v108 = v122;
    v107(v136, v122, v117, v105, sub_1008AC19C, v106);
    swift_release();
    swift_release();
    uint64_t v109 = *(void (**)(char *, uint64_t))(v94 + 8);
    v109(v105, v89);
    v109(v108, v89);
  }
  v109(v137, v89);
  return ((uint64_t (*)(char *, uint64_t))v109)(v123, v89);
}

uint64_t sub_1008A7060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  swift_retain_n();
  swift_errorRetain();
  uint64_t v14 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v12, (uint64_t)sub_1008AC228, (uint64_t)v13, v14, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1008A71B0(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v57 = a4;
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v63 = a1;
  uint64_t v9 = *(void *)(*(void *)a2 + 88);
  uint64_t v10 = *(void *)(*(void *)a2 + 96);
  uint64_t v11 = *(void *)(*(void *)a2 + 104);
  uint64_t v59 = *(void *)(*(void *)a2 + 80);
  uint64_t v8 = v59;
  uint64_t v60 = v9;
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationMutation();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  uint64_t v47 = (char *)&v45 - v13;
  uint64_t v60 = v9;
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_10096C890();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v16);
  uint64_t v52 = (char *)&v45 - v19;
  uint64_t v20 = type metadata accessor for SnapshotItem();
  uint64_t v21 = sub_10096C890();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v54 = (char *)&v45 - v24;
  if (v63)
  {
    uint64_t v45 = v11;
    uint64_t v46 = a2;
    uint64_t v54 = (char *)v14;
    uint64_t v25 = (uint64_t)a3 + *(void *)(*a3 + 576);
    uint64_t v26 = v63;
    swift_errorRetain();
    uint64_t v27 = v58;
    sub_1000DEDD8(v25, (uint64_t)v18);
    if (v27) {
      return swift_errorRelease();
    }
    uint64_t v58 = v25;
    uint64_t v29 = v53;
    uint64_t v28 = (uint64_t)v54;
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v53 + 48))(v18, 1, v54) == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v51);
      swift_errorRetain();
      v56(0, 0, 0, v26);
      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    uint64_t v35 = v52;
    v34(v52, v18, v28);
    if (sub_100827AAC(v28) || *(void *)&v35[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)])
    {
      swift_errorRetain();
      v56(0, 0, 0, v26);
      swift_errorRelease();
      swift_errorRelease();
      return (*(uint64_t (**)(char *, char *))(v53 + 8))(v35, v54);
    }
    else
    {
      uint64_t v51 = 0;
      uint64_t v59 = v8;
      uint64_t v60 = v9;
      uint64_t v61 = v10;
      uint64_t v62 = v45;
      uint64_t v57 = (void *)type metadata accessor for JobResult();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v37 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v39 = swift_getAssociatedConformanceWitness();
      uint64_t v59 = AssociatedTypeWitness;
      uint64_t v60 = v37;
      uint64_t v61 = AssociatedConformanceWitness;
      uint64_t v62 = v39;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v41 = (uint64_t)v47;
      uint64_t v42 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v47, v58, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      if (qword_100ACC0F0 != -1) {
        swift_once();
      }
      *(void *)uint64_t v42 = static Fields.all;
      *(_OWORD *)(v42 + 8) = *(_OWORD *)(a3 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v49;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v46, v41);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v41, v43);
      uint64_t v44 = v63;
      swift_errorRetain();
      v56(0, 0, 0, v44);
      swift_errorRelease();
      swift_errorRelease();
      return (*(uint64_t (**)(char *, char *))(v53 + 8))(v35, v54);
    }
  }
  else
  {
    uint64_t v53 = v23;
    uint64_t v63 = v22;
    uint64_t v59 = v8;
    uint64_t v60 = v9;
    uint64_t v61 = v10;
    uint64_t v62 = v11;
    type metadata accessor for JobResult();
    uint64_t v59 = v8;
    uint64_t v60 = v9;
    uint64_t v61 = v10;
    uint64_t v62 = v11;
    type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v31 = sub_1008AA778((uint64_t)a3 + *(void *)(*a3 + 584), a3[15], a3[16], a3[17] | 0x800, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    sub_1004D4360(a2, v31);
    swift_release();
    uint64_t v32 = (uint64_t (*)(char *, uint64_t, uint64_t))v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v54, 1, 1, v20);
    uint64_t v33 = v58;
    sub_10086C908(v32, (uint64_t)a3 + *(void *)(*a3 + 576), 0, 0, 0, v57, a3[15], a3[16], a3[17] | 0x400, a2);
    if (v33)
    {
      return (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v53 + 8))(v32, v63);
    }
    else
    {
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v53 + 8))(v32, v63);
      return ((uint64_t (*)(void, void, void, void))v56)(0, 0, 0, 0);
    }
  }
}

uint64_t sub_1008A7970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a6;
  _OWORD v14[3] = a3;
  v14[4] = a1;
  void v14[5] = a2;
  v14[6] = a4;
  v14[7] = a5;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_errorRetain();
  uint64_t v15 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_1003B3398, v12, (uint64_t)sub_1003B377C, v13, (uint64_t)sub_1008AC298, (uint64_t)v14, v15, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1008A7AF0(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void (*a5)(void, void, void, uint64_t), uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v54 = a5;
  uint64_t v43 = a4;
  uint64_t v52 = a3;
  uint64_t v48 = a2;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(*(void *)a1 + 80);
  uint64_t v8 = *(void *)(*(void *)a1 + 96);
  uint64_t v41 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_10096C890();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v38 - v11);
  uint64_t v50 = a1;
  uint64_t v12 = *(void *)(v6 + 88);
  uint64_t v13 = *(void *)(v6 + 104);
  uint64_t v55 = v7;
  uint64_t v56 = v12;
  uint64_t v57 = v8;
  uint64_t v58 = v13;
  uint64_t v49 = type metadata accessor for ReconciliationMutation();
  uint64_t v51 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v55 = v7;
  uint64_t v56 = v12;
  uint64_t v57 = v8;
  uint64_t v58 = v13;
  uint64_t v46 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = v13;
  uint64_t v45 = v12;
  uint64_t v19 = v8;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v56 = v17;
  uint64_t v21 = v48;
  uint64_t v57 = AssociatedConformanceWitness;
  uint64_t v58 = v20;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v22 = &v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v23 = *(void (**)(char *))(*(void *)(AssociatedTypeWitness - 8) + 16);
  uint64_t v47 = (uint64_t)v21 + *(void *)(*v21 + 576);
  v23(v15);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v22 = xmmword_10097B210;
  unsigned char v22[16] = 4;
  uint64_t v24 = v50;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v49;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v24, (uint64_t)v15);
  uint64_t v26 = v15;
  uint64_t v27 = v52;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v25);
  if (v27)
  {
    uint64_t v55 = v7;
    uint64_t v56 = v45;
    uint64_t v57 = v19;
    uint64_t v58 = v44;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v28 = v21[15];
    uint64_t v29 = v21[16];
    uint64_t v30 = v21[17] | 0x800;
    swift_errorRetain();
    uint64_t v31 = sub_1008AA778(v47, v28, v29, v30, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_1004D4360(v24, v31);
    swift_release();
    swift_errorRetain();
    v54(0, 0, 0, v27);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v34 = v39;
    uint64_t v33 = v40;
    uint64_t v35 = (uint64_t (*)(void, void, void, void))v54;
    uint64_t v36 = v42;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v41 - 8)
                                                                                               + 56))(v42, 1, 1);
    uint64_t v37 = v59;
    sub_10086C908(v36, v47, 0, 0, 0, v43, v21[15], v21[16], v21[17] | 0x400, v24);
    if (v37)
    {
      return (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v34 + 8))(v36, v33);
    }
    else
    {
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v34 + 8))(v36, v33);
      return v35(0, 0, 0, 0);
    }
  }
}

uint64_t sub_1008A7FF4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v5)((void *)(AssociatedTypeWitness - 8), v1, AssociatedTypeWitness);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 584);

  return v5(v3, AssociatedTypeWitness);
}

uint64_t sub_1008A80F0()
{
  uint64_t v0 = sub_10061056C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v3(v1, AssociatedTypeWitness);
  v3(v0 + *(void *)(*(void *)v0 + 584), AssociatedTypeWitness);
  return v0;
}

uint64_t sub_1008A81E0()
{
  return sub_10089A460(sub_1008A80F0);
}

uint64_t type metadata accessor for Ingestion.MergeItems()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008A8210()
{
  return 0xD000000000000014;
}

uint64_t sub_1008A822C()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = v13 - v3 + 22;
  swift_beginAccess();
  sub_1003B32B0((uint64_t)(v0 + 7), (uint64_t)v13);
  uint64_t v5 = v0[15];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10096C890();
  uint64_t v7 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v8 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(v4, v8, AssociatedTypeWitness);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_1001E3E98((uint64_t)v13, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1003B3318((uint64_t)v13);
  return v10;
}

uint64_t sub_1008A8474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v9 = v8;
  uint64_t v107 = a4;
  uint64_t v108 = a6;
  LODWORD(v100) = a5;
  BOOL v104 = a8;
  uint64_t v105 = a2;
  uint64_t v12 = *v9;
  uint64_t v13 = *v9;
  uint64_t v101 = a3;
  uint64_t v102 = v13;
  uint64_t v103 = *(void *)(*(void *)(v12 + 600) - 8);
  unint64_t v14 = *(void *)(v103 + 64);
  uint64_t v15 = __chkstk_darwin(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v93 - v16;
  uint64_t v19 = *(void *)(v18 + 616);
  uint64_t v106 = v20;
  uint64_t v21 = type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v22 = sub_10096D510();
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v93 - v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v93 - v23, a1, v22);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    unint64_t v96 = v14;
    uint64_t v97 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v98 = v19;
    uint64_t v99 = v17;
    uint64_t v32 = v105;
    uint64_t v31 = v106;
    uint64_t v33 = v108;
    uint64_t v34 = v103;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v21 - 8) + 8))(v24, v21);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v33;
      *(void *)(v35 + 24) = a7;
      uint64_t v36 = (void *)swift_allocObject();
      void v36[2] = v33;
      v36[3] = a7;
      v36[4] = v32;
      uint64_t v37 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain();
      sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v35, (uint64_t)sub_1008ABD14, (uint64_t)v36, v37, (uint64_t)&type metadata for String);
      swift_release();
      swift_release();
      type metadata accessor for TrackingContinuation();
      goto LABEL_16;
    }
    uint64_t v38 = v34;
    uint64_t v39 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48);
    uint64_t v40 = v31;
    if (v39(v24, 1, v31) == 1)
    {
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v33;
      *(void *)(v41 + 24) = a7;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v33;
      *(void *)(v42 + 24) = a7;
      uint64_t v43 = type metadata accessor for Continuation();
      swift_retain_n();
      sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v41, (uint64_t)sub_1008ABCB4, v42, v43, (uint64_t)&type metadata for String);
      swift_release();
      swift_release();
LABEL_15:
      type metadata accessor for TrackingContinuation();
      goto LABEL_16;
    }
    uint64_t v44 = v99;
    uint64_t v94 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
    uint64_t v95 = v38 + 32;
    v94(v99, v24, v31);
    (*(void (**)(uint64_t))(v98 + 144))(v31);
    uint64_t v46 = v45;
    if (v45 >> 62)
    {
      uint64_t v47 = v97;
      if (v45 >> 62 != 1)
      {
        uint64_t v75 = v107;
        uint64_t v76 = swift_allocObject();
        uint64_t v105 = v76;
        *(void *)(v76 + 16) = v33;
        *(void *)(v76 + 24) = a7;
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v47, v44, v40);
        unint64_t v77 = (*(unsigned __int8 *)(v38 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        unint64_t v96 = (v96 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v78 = (v96 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v79 = a7;
        unint64_t v80 = (v78 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        *(void *)(v81 + 16) = v40;
        uint64_t v82 = v102;
        uint64_t v83 = v97;
        uint64_t v84 = v98;
        *(void *)(v81 + 24) = *(void *)(v102 + 608);
        *(void *)(v81 + 32) = v84;
        *(void *)(v81 + 40) = *(void *)(v82 + 624);
        *(unsigned char *)(v81 + 48) = v100 & 1;
        v94((char *)(v81 + v77), (uint64_t *)v83, v40);
        *(void *)(v81 + v96) = v75;
        *(void *)(v81 + v78) = v9;
        *(void *)(v81 + v80) = v101;
        uint64_t v85 = (void *)(v81 + ((v80 + 15) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v85 = v108;
        v85[1] = v79;
        uint64_t v86 = v38;
        uint64_t v87 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v105, (uint64_t)sub_1008ABBD4, v81, v87, (uint64_t)&type metadata for String);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v99, v40);
        goto LABEL_15;
      }
      uint64_t v46 = v45 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v48 = v33;
      if (v32)
      {
LABEL_10:
        uint64_t v49 = v48;
        uint64_t v50 = *(uint64_t (**)(uint64_t))(*(void *)v46 + 112);
        uint64_t v51 = swift_retain();
        uint64_t v52 = v50(v51);
        if (!v53)
        {
          swift_release();
          type metadata accessor for TrackingContinuation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v91 = *(int *)(TupleTypeMetadata2 + 48);
          unint64_t v92 = v104;
          v94(v104, (uint64_t *)v99, v40);
          *(void *)&v92[v91] = v46;
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v92, 0, 1, TupleTypeMetadata2);
        }
        uint64_t v54 = v53;
        uint64_t v100 = v52;
        uint64_t v55 = swift_allocObject();
        uint64_t v101 = v55;
        uint64_t v56 = v49;
        *(void *)(v55 + 16) = v49;
        *(void *)(v55 + 24) = a7;
        uint64_t v57 = v97;
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v97, v99, v40);
        unint64_t v58 = (*(unsigned __int8 *)(v38 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v59 = (char *)swift_allocObject();
        *((void *)v59 + 2) = v40;
        uint64_t v60 = v102;
        uint64_t v61 = v98;
        *((void *)v59 + 3) = *(void *)(v102 + 608);
        *((void *)v59 + 4) = v61;
        *((void *)v59 + 5) = *(void *)(v60 + 624);
        *((void *)v59 + 6) = v56;
        *((void *)v59 + 7) = a7;
        *((void *)v59 + 8) = v46;
        *((void *)v59 + 9) = v100;
        *((void *)v59 + 10) = v54;
        v94(&v59[v58], (uint64_t *)v57, v40);
        uint64_t v62 = v38;
        uint64_t v63 = type metadata accessor for Continuation();
        swift_retain_n();
        sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v101, (uint64_t)sub_1008ABA84, (uint64_t)v59, v63, (uint64_t)&type metadata for String);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v99, v40);
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v48 = v33;
      uint64_t v47 = v97;
      if (v32) {
        goto LABEL_10;
      }
    }
    uint64_t v64 = v48;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v64;
    *(void *)(v65 + 24) = a7;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v47, v44, v40);
    uint64_t v66 = v44;
    unint64_t v67 = (*(unsigned __int8 *)(v38 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v68 = (char *)swift_allocObject();
    double v69 = v47;
    uint64_t v70 = (uint64_t)v68;
    *((void *)v68 + 2) = v40;
    uint64_t v71 = v102;
    uint64_t v72 = v98;
    *((void *)v68 + 3) = *(void *)(v102 + 608);
    *((void *)v68 + 4) = v72;
    *((void *)v68 + 5) = *(void *)(v71 + 624);
    *((void *)v68 + 6) = v64;
    *((void *)v68 + 7) = a7;
    *((void *)v68 + 8) = v46;
    v94(&v68[v67], (uint64_t *)v69, v40);
    uint64_t v73 = v38;
    uint64_t v74 = type metadata accessor for Continuation();
    swift_retain_n();
    sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v65, (uint64_t)sub_1008AB91C, v70, v74, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v66, v40);
    goto LABEL_15;
  }
  uint64_t v26 = *v24;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v108;
  *(void *)(v27 + 16) = v108;
  *(void *)(v27 + 24) = a7;
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v9;
  v29[3] = v26;
  v29[4] = v105;
  v29[5] = v28;
  v29[6] = a7;
  swift_retain_n();
  swift_retain();
  swift_errorRetain();
  uint64_t v30 = type metadata accessor for Continuation();
  swift_retain();
  sub_10035F220((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003B377C, v27, (uint64_t)sub_1008ABD84, (uint64_t)v29, v30, (uint64_t)&type metadata for String);
  swift_errorRelease();
  swift_release();
  swift_release();
  type metadata accessor for TrackingContinuation();
LABEL_16:
  uint64_t v88 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v104, 1, 1, v88);
}

uint64_t sub_1008A9038(void (*a1)(uint64_t, void, void, uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1008AC150((uint64_t)v8);
  sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
  sub_10044211C();
  uint64_t v5 = swift_allocError();
  sub_10001AE98((uint64_t)v8, v6, (uint64_t *)&unk_100ACD9A0);
  a1(a3, 0, 0, v5);
  return swift_errorRelease();
}

uint64_t sub_1008A90E8(int a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, void (*a6)(void, uint64_t, unint64_t, void), uint64_t a7)
{
  uint64_t v40 = a5;
  uint64_t v36 = a7;
  uint64_t v37 = a6;
  uint64_t v39 = a4;
  uint64_t v46 = a2;
  LODWORD(v38) = a1;
  uint64_t v33 = (void *)*a3;
  uint64_t v8 = v33[12];
  uint64_t v9 = v33[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_10096C890();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v32 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v21 = *(void *)(v13 - 8);
  uint64_t v22 = __chkstk_darwin(v18);
  uint64_t v26 = (char *)&v32 - v25;
  if (v38)
  {
    uint64_t v35 = v24;
    uint64_t v38 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, v46, v9);
    SnapshotItem.init(_:)((uint64_t)v20, v9, v8, (uint64_t)v26);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v21 + 16))(v17, v26, v13);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v13);
    uint64_t v27 = v41;
    sub_10086C908(v17, (uint64_t)v26, 0, 0, 0, a3, v39[15], v39[16], v39[17], v40);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v35 + 8))(v17, v38);
    if (!v27)
    {
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      v48._uint64_t countAndFlagsBits = 0x3A64656B63617274;
      v48._object = (void *)0xE800000000000000;
      sub_10096BDC0(v48);
      sub_10096D270();
      v37(0, v42, v43, 0);
      swift_bridgeObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v13);
  }
  else
  {
    unint64_t v28 = v33[11];
    uint64_t v29 = v33[13];
    uint64_t v42 = v9;
    unint64_t v43 = v28;
    uint64_t v44 = v8;
    uint64_t v45 = v29;
    type metadata accessor for JobResult();
    uint64_t v42 = v9;
    unint64_t v43 = v28;
    uint64_t v44 = v8;
    uint64_t v45 = v29;
    type metadata accessor for Ingestion.FetchItemMetadata();
    (*(void (**)(uint64_t, uint64_t))(v8 + 64))(v9, v8);
    uint64_t v30 = sub_1008AA778((uint64_t)v12, v39[15], v39[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
    sub_1004D4360(v40, v30);
    swift_release();
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_10096CBD0(18);
    v47._object = (void *)0x80000001009BD440;
    v47._uint64_t countAndFlagsBits = 0xD000000000000010;
    sub_10096BDC0(v47);
    sub_10096D270();
    v37(0, v42, v43, 0);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008A9624(void (*a1)(uint64_t, void, unint64_t, void), uint64_t a2, uint64_t a3)
{
  v6._uint64_t countAndFlagsBits = 0x2D676E697373696DLL;
  v6._object = (void *)0xED00003A65736162;
  sub_10096BDC0(v6);
  sub_10096D270();
  a1(a3, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008A96E8(void (*a1)(uint64_t, void, unint64_t, void), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v8._uint64_t countAndFlagsBits = a4;
  v8._object = a5;
  sub_10096BDC0(v8);
  v9._uint64_t countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  sub_10096BDC0(v9);
  sub_10096D270();
  a1(a3, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008A97A4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v26 = a3;
  uint64_t v22 = *v5;
  uint64_t v23 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FileItemVersion();
  uint64_t v10 = sub_10096C890();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v24 = v15;
  uint64_t v25 = v11;
  if (a2)
  {
    type metadata accessor for TrackingContinuation();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16) {
      swift_retain();
    }
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v23;
  uint64_t v23 = (char *)v5 + *(void *)(v22 + 576);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 1, 1, v9);
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v5;
  v18[3] = v16;
  v18[4] = v26;
  v18[5] = a1;
  v18[6] = v17;
  v18[7] = a5;
  v18[8] = v14;
  uint64_t v19 = *(void (**)(char *, char *, void, void, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v14 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  v19(v23, v13, 0, 0, 2048, sub_1008AB770, v18);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v25);
}

uint64_t sub_1008A9AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a8;
  uint64_t v36 = a1;
  uint64_t v38 = a5;
  uint64_t v39 = a7;
  uint64_t v37 = a6;
  uint64_t v11 = *(void *)(*(void *)a2 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v43 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  uint64_t v13 = sub_10096C890();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - v14;
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_10096C890();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = v36;
  uint64_t v34 = a3;
  uint64_t v36 = a4;
  sub_1008A8474(v21, a3, a4, v38, 0, v37, v39, (char *)&v30 - v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v20, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17); {
  uint64_t v23 = *(void *)&v20[*(int *)(TupleTypeMetadata2 + 48)];
  }
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v20, v11);
  uint64_t v31 = a2 + *(void *)(*(void *)a2 + 576);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v15, 1, 1, v12);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a2;
  uint64_t v25 = v35;
  v24[3] = v34;
  v24[4] = v23;
  uint64_t v26 = v37;
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  v24[5] = v36;
  v24[6] = v28;
  v24[7] = v26;
  v24[8] = v27;
  uint64_t v29 = *(void (**)(uint64_t, char *, void, void, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v25 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29(v31, v15, 0, 0, 3072, sub_1008AB7E8, v24);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v33);
}

uint64_t sub_1008A9F04(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a5;
  uint64_t v36 = a4;
  uint64_t v39 = *a2;
  uint64_t v10 = *(void *)(v39 + 600);
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_10096C890();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v38 = v10;
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v17 = *(void *)(v40 + 64);
  uint64_t v18 = __chkstk_darwin(v14);
  uint64_t v37 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v41 = (char *)&v36 - v19;
  uint64_t v20 = a3;
  if (!a3)
  {
    uint64_t v20 = (uint64_t)v36;
    swift_retain();
  }
  swift_retain();
  uint64_t v21 = v44;
  uint64_t v22 = v45;
  sub_1008A8474(v42, v20, v43, a6, 1, v44, v45, v16);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12); {
  uint64_t v42 = *(void *)&v16[*(int *)(TupleTypeMetadata2 + 48)];
  }
  uint64_t v43 = a6;
  uint64_t v25 = v40;
  uint64_t v24 = v41;
  uint64_t v26 = v22;
  uint64_t v27 = v21;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v28 = v38;
  v36(v41, v16, v38);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = v26;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v37, v24, v28);
  unint64_t v31 = (*(unsigned __int8 *)(v25 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v28;
  uint64_t v33 = v39;
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v39 + 608);
  *(void *)(v32 + 40) = *(void *)(v33 + 624);
  *(void *)(v32 + 48) = v27;
  uint64_t v34 = v42;
  *(void *)(v32 + 56) = v26;
  *(void *)(v32 + 64) = v34;
  v36((char *)(v32 + v31), v30, v28);
  uint64_t v35 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1003A946C, v29, (uint64_t)sub_1008AB820, v32, v35, (uint64_t)&type metadata for String);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v41, v28);
}

uint64_t sub_1008AA314(void (*a1)(uint64_t, void, unint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  v7._uint64_t countAndFlagsBits = 0x636172742D746F6ELL;
  v7._object = (void *)0xEC0000003A64656BLL;
  sub_10096BDC0(v7);
  sub_10096D270();
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v5 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  a1(a3, 0, 0xE000000000000000, v5);
  swift_errorRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Ingestion.TrackTemporaryItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008AA450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  v13(v11, a1, AssociatedTypeWitness);
  v13(v5 + *(void *)(*(void *)v5 + 584), a2, AssociatedTypeWitness);

  return sub_100610514(a3, a4, a5);
}

uint64_t sub_1008AA57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008AA450(a1, a2, a3, a4, a5);
}

uint64_t sub_1008AA5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA69C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_1008AA604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA720(a1, a2, a3, a4, 0x80000);
}

uint64_t sub_1008AA66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA778(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

uint64_t sub_1008AA684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA69C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

uint64_t sub_1008AA69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  long long v10 = *(_OWORD *)(v5 + 616);
  v12[0] = *(_OWORD *)(v5 + 600);
  v12[1] = v10;
  a5(0, v12);
  swift_allocObject();
  return sub_100610B30(a1, a2, a3, a4);
}

uint64_t sub_1008AA720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_100610B30(a1, a2, a3, a4);
  swift_retain();
  sub_10058364C(a5);
  swift_release();
  return v6;
}

uint64_t sub_1008AA760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA778(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

uint64_t sub_1008AA778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  long long v10 = *(_OWORD *)(v5 + 616);
  v12[0] = *(_OWORD *)(v5 + 600);
  v12[1] = v10;
  a5(0, v12);
  swift_allocObject();
  return sub_1008AA720(a1, a2, a3, a4, 0x2000);
}

uint64_t sub_1008AA800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 632);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);

  return sub_100610B30(a1, a2, a3, a4);
}

uint64_t sub_1008AA8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA800(a1, a2, a3, a4);
}

uint64_t sub_1008AA944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 632);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);

  return sub_100610B30(a1, a2, a3, a4);
}

uint64_t sub_1008AAA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008AA944(a1, a2, a3, a4);
}

uint64_t sub_1008AAAA0()
{
  return swift_deallocObject();
}

uint64_t sub_1008AAAB0()
{
  return swift_deallocObject();
}

uint64_t sub_1008AAAC4()
{
  type metadata accessor for SnapshotItem();
  uint64_t v1 = *(void *)(sub_10096C890() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100885ECC(v2);
}

uint64_t sub_1008AAB68()
{
  return swift_deallocObject();
}

uint64_t sub_1008AAB78()
{
  return swift_deallocObject();
}

uint64_t sub_1008AAB8C()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v2 = *(void *)(sub_10096C890() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v1 - 1) + 48))(v3, 1, v1))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
    v5(v3, AssociatedTypeWitness);
    v5(v3 + v1[9], AssociatedTypeWitness);
    uint64_t v6 = v3 + v1[10];
    uint64_t v7 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v20 = swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v8 = type metadata accessor for FileItemVersion();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v6 + *(int *)(v8 + 56), v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v3 + v1[12];
    uint64_t v10 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v11 = v9 + v10[7];
    uint64_t v12 = sub_10096B0E0();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v14(v11, v12);
    v14(v9 + v10[8], v12);
    swift_bridgeObjectRelease();
    uint64_t v15 = v9 + v10[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12)) {
      v14(v15, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t *)(v9 + v10[33]);
    unint64_t v17 = v16[1];
    if (v17 >> 60 != 15) {
      sub_10001E9C0(*v16, v17);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v3 + v1[13];
    if (*(void *)(v18 + 16) != 1)
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v18 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1000CF144(*(void *)(v3 + v1[17]), *(void *)(v3 + v1[17] + 8));
  }
  return swift_deallocObject();
}

uint64_t sub_1008AB000()
{
  type metadata accessor for SnapshotItem();
  uint64_t v1 = *(void *)(sub_10096C890() - 8);
  return sub_100885DF4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1008AB098()
{
  return swift_deallocObject();
}

uint64_t sub_1008AB0A8()
{
  return swift_deallocObject();
}

uint64_t sub_1008AB0B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008AB10C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for JobLockRule() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for FileTreeWriter.FileTreeChange() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v7, AssociatedTypeWitness);
      break;
    case 1u:
      uint64_t v15 = swift_getAssociatedTypeWitness();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(v7, v15);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v16(v7 + *(int *)(TupleTypeMetadata3 + 48), v15);
      v16(v7 + *(int *)(TupleTypeMetadata3 + 64), v15);
      break;
    case 2u:
      uint64_t v18 = swift_getAssociatedTypeWitness();
      unint64_t v23 = v6;
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v22(v7, v18);
      sub_10096C890();
      uint64_t v20 = v7 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18);
      unint64_t v6 = v23;
      if (!v21) {
        v22(v20, v18);
      }
      break;
    default:
      break;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v6, v13);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v6, v10);
    sub_10096C890();
    type metadata accessor for JobLockAggregator();
    sub_10096C890();
    unint64_t v11 = v0 + v6 + *(int *)(swift_getTupleTypeMetadata3() + 48);
    uint64_t v12 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v11, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v11, v1);
    }
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008AB640()
{
  uint64_t v1 = *(void *)(type metadata accessor for JobLockRule() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FileTreeWriter.FileTreeChange() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_100887F44(*(uint64_t **)(v0 + 48), v0 + v2, v0 + v5, *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008AB758()
{
  return sub_1008AC580((void (*)(void))&_swift_release);
}

uint64_t sub_1008AB770(uint64_t a1)
{
  return sub_1008AB800(a1, sub_1008A9AD8);
}

uint64_t sub_1008AB788()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008AB7E8(uint64_t a1)
{
  return sub_1008AB800(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1008A9F04);
}

uint64_t sub_1008AB800(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1008AB820()
{
  return sub_1008AB948((uint64_t (*)(void, void, void, char *))sub_1008AA314);
}

uint64_t sub_1008AB850()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1008AB91C()
{
  return sub_1008AB948((uint64_t (*)(void, void, void, char *))sub_1008A9624);
}

uint64_t sub_1008AB948(uint64_t (*a1)(void, void, void, char *))
{
  return a1(*((void *)v1 + 6), *((void *)v1 + 7), *((void *)v1 + 8), &v1[(*(unsigned __int8 *)(*(void *)(*((void *)v1 + 2) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*((void *)v1 + 2) - 8) + 80)]);
}

uint64_t sub_1008AB9B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1008ABA84()
{
  return sub_1008A96E8(*(void (**)(uint64_t, void, unint64_t, void))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_1008ABAF4()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ABBD4()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008A90E8(*(unsigned __int8 *)(v0 + 48), v0 + v1, *(void **)(v0 + v2), *(uint64_t **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, unint64_t, void))(v0+ ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1008ABC7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ABCB4()
{
  return (*(uint64_t (**)(void, uint64_t, unint64_t, void))(v0 + 16))(0, 0x3E6C696E3CLL, 0xE500000000000000, 0);
}

uint64_t sub_1008ABCFC()
{
  return sub_1008AC2EC((void (*)(void))&_swift_release);
}

uint64_t sub_1008ABD14()
{
  return sub_1008A9038(*(void (**)(uint64_t, void, void, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1008ABD34()
{
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ABD84()
{
  return sub_1008ABE0C(v0[3], v0[4], v0[5]);
}

uint64_t sub_1008ABE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[0] = a3;
  uint64_t v5 = type metadata accessor for FileTreeError();
  uint64_t v6 = sub_10096C890();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v21 - v8;
  v21[5] = a1;
  swift_errorRetain();
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  int v10 = swift_dynamicCast();
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  if (!v10)
  {
    v11(v9, 1, 1, v5);
    uint64_t v12 = v7;
    uint64_t v5 = v6;
    goto LABEL_5;
  }
  uint64_t v12 = *(void *)(v5 - 8);
  v11(v9, 0, 1, v5);
  if (swift_getEnumCaseMultiPayload())
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v5);
    return ((uint64_t (*)(uint64_t, void, void, uint64_t))v21[0])(a2, 0, 0, a1);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  v21[1] = v14;
  v21[2] = v15;
  v21[3] = AssociatedConformanceWitness;
  _OWORD v21[4] = v17;
  type metadata accessor for FileItemVersion();
  uint64_t v18 = sub_10096C890();
  sub_100033BE8(&qword_100AD7360);
  uint64_t v19 = &v9[*(int *)(swift_getTupleTypeMetadata3() + 48)];
  swift_errorRelease();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v19, v18);
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v9, AssociatedTypeWitness);
  a2 = 0;
  return ((uint64_t (*)(uint64_t, void, void, uint64_t))v21[0])(a2, 0, 0, a1);
}

double sub_1008AC150(uint64_t a1)
{
  *(void *)a1 = 11;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_1008AC184()
{
  return sub_1008AEA04((void (*)(void))&_swift_release);
}

uint64_t sub_1008AC19C(uint64_t a1)
{
  return sub_1008AC1D0(a1, sub_1008A7970);
}

uint64_t sub_1008AC1B8(uint64_t a1)
{
  return sub_1008AC1D0(a1, sub_1008A7060);
}

uint64_t sub_1008AC1D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1008AC1E8()
{
  return sub_1008AC6EC((void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_1008AC228()
{
  return sub_1008AC798((uint64_t (*)(void, void, void, void, void, void))sub_1008A71B0);
}

uint64_t sub_1008AC258()
{
  return sub_1008AC6EC((void (*)(void))&_swift_release, (void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1008AC298()
{
  return sub_1008AC798((uint64_t (*)(void, void, void, void, void, void))sub_1008A7AF0);
}

uint64_t sub_1008AC2C8(uint64_t a1)
{
  return sub_1008A5780(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1008AC2D4()
{
  return sub_1008AC2EC((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1008AC2EC(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_1008AC340()
{
  return sub_1008A52E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1008AC34C()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(0, 0, 0, 0);
}

uint64_t sub_1008AC390(uint64_t a1, uint64_t a2)
{
  return sub_1008A2A80(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1008AC3A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001303B8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1008AC414()
{
  sub_1008A2CCC(*(void **)(v0 + 16), *(void *)(v0 + 24), (void (**)(void, void))(v0 + 32), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void (**)(void, uint64_t, unint64_t, uint64_t))(v0 + 88), *(void *)(v0 + 96), *(objc_class **)(v0 + 104));
}

uint64_t sub_1008AC440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1008A4B34(a1, a2, *(void *)(v3 + 32), a3);
}

uint64_t sub_1008AC44C(uint64_t a1)
{
  return sub_1008A4CE0(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

uint64_t sub_1008AC474(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1008AC4B4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008AC4F0(uint64_t a1)
{
  return sub_10089EAF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1008AC4FC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008AC554(uint64_t a1, char a2)
{
  return sub_10089F030(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1008AC568()
{
  return sub_1008AC580((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1008AC580(void (*a1)(void))
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 64));

  return swift_deallocObject();
}

uint64_t sub_1008AC5F0()
{
  return sub_1008A083C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char **)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t, uint64_t, unint64_t, void))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1008AC620()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1008AC670()
{
  sub_1008A1060(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(uint64_t))(v0 + 72));
}

uint64_t sub_1008AC6AC()
{
  return sub_1008AC6EC((void (*)(void))&_swift_release, (void (*)(void))&_swift_release, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1008AC6EC(void (*a1)(void), void (*a2)(void), void (*a3)(void))
{
  a1(v3[2]);
  swift_release();
  a2(v3[4]);
  a3(v3[5]);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008AC76C()
{
  return sub_1008AC798((uint64_t (*)(void, void, void, void, void, void))sub_10089F6EC);
}

uint64_t sub_1008AC798(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1008AC7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008AC810(uint64_t a1)
{
  return sub_1008AC8BC(a1, (uint64_t)&unk_100AA2F38, (uint64_t)&unk_100AA2F60, (uint64_t)sub_1003B377C, (uint64_t)sub_1008AC850);
}

uint64_t sub_1008AC850()
{
  return sub_1008AC92C((uint64_t (*)(unint64_t, void, void, void, void, void))sub_10089C428);
}

uint64_t sub_1008AC880(uint64_t a1)
{
  return sub_1008AC8BC(a1, (uint64_t)&unk_100AA2FB0, (uint64_t)&unk_100AA2FD8, (uint64_t)sub_1003B377C, (uint64_t)sub_1008AC900);
}

uint64_t sub_1008AC8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10089C174(a1, *(uint64_t **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_1008AC900()
{
  return sub_1008AC92C((uint64_t (*)(unint64_t, void, void, void, void, void))sub_10089AA1C);
}

uint64_t sub_1008AC92C(uint64_t (*a1)(unint64_t, void, void, void, void, void))
{
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v3 = *(void *)(sub_10096D510() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t sub_1008ACA18(uint64_t a1)
{
  return sub_1008ACA30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1008991D4);
}

uint64_t sub_1008ACA30(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1008ACA48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v3 = *(void *)(sub_10096D510() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v5 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v4, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v4, v1);
    }
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ACC38()
{
  sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100AD6860);
  swift_getTupleTypeMetadata2();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008994C4(*(void **)(v0 + 48), *(void *)(v0 + 56), (void (*)(char *, uint64_t, uint64_t))(v0 + v2), *(void **)(v0 + v3), *(void (**)(void, void, void, uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1008ACD30()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for FileItemVersion();
  uint64_t v40 = *(void *)(v3 - 8);
  unint64_t v46 = (*(unsigned __int8 *)(v40 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v4 = (*(void *)(v40 + 64) + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = type metadata accessor for ItemReconciliation();
  uint64_t v44 = *(unsigned __int8 *)(*(void *)(v50 - 8) + 80);
  uint64_t v37 = (v4 + v44 + 8) & ~v44;
  uint64_t v38 = *(void *)(*(void *)(v50 - 8) + 64) + v37;
  uint64_t v52 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v53 = *(unsigned __int8 *)(*((void *)v52 - 1) + 80);
  uint64_t v43 = *(void *)(*((void *)v52 - 1) + 64);
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v49 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v51 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(void *)(v51 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v41 = *(void *)(v5 + 64);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v0 + v46;
  uint64_t v39 = *(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v39(v0 + v46, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v47 = v2;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v45(v6 + *(int *)(v3 + 56), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v0 + v37;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v37, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  int v10 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v11 = v7 + v10[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v51))
  {
    (*(void (**)(uint64_t))(*(void *)(v48 - 8) + 8))(v11);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(v49 - 8) + 8))(v11 + *(int *)(v51 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000D31F8(*(void *)(v7 + v10[16]), *(void *)(v7 + v10[16] + 8), *(unsigned char *)(v7 + v10[16] + 16));
  uint64_t v12 = v7 + v10[17];
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 >> 60 != 11 && v13 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v12 + 8), v13);
  }

  uint64_t v14 = v7 + *(int *)(v50 + 52);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = (int *)type metadata accessor for ItemReconciliationHalf();
  unint64_t v18 = v14 + v17[12];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))(v18, 1, v3))
  {
    v39(v18, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    v45(v18 + *(int *)(v3 + 56), v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (((v38 + 7) & 0xFFFFFFFFFFFFFFF8) + v53 + 9) & ~v53;
  sub_1000D31F8(*(void *)(v14 + v17[16]), *(void *)(v14 + v17[16] + 8), *(unsigned char *)(v14 + v17[16] + 16));
  uint64_t v20 = v14 + v17[17];
  unint64_t v21 = *(void *)(v20 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v20 + 8), v21);
  }

  swift_bridgeObjectRelease();
  uint64_t v22 = v0 + v19;
  unint64_t v23 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v23(v0 + v19, v15);
  v23(v0 + v19 + v52[9], v15);
  unint64_t v24 = v0 + v19 + v52[10];
  v39(v24, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v45(v24 + *(int *)(v3 + 56), v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = v0 + v19 + v52[12];
  uint64_t v26 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v27 = v25 + v26[7];
  uint64_t v28 = sub_10096B0E0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void (**)(unint64_t, uint64_t))(v29 + 8);
  v30(v27, v28);
  v30(v25 + v26[8], v28);
  swift_bridgeObjectRelease();
  unint64_t v31 = v25 + v26[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28)) {
    v30(v31, v28);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = (uint64_t *)(v25 + v26[33]);
  unint64_t v33 = v32[1];
  if (v33 >> 60 != 15) {
    sub_10001E9C0(*v32, v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = v22 + v52[13];
  if (*(void *)(v34 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v34 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v35 = (v19 + v43 + v42) & ~v42;
  sub_1000CF144(*(void *)(v22 + v52[17]), *(void *)(v22 + v52[17] + 8));
  (*(void (**)(unint64_t))(*(void *)(v48 - 8) + 8))(v0 + v35);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v49 - 8) + 8))(v0 + v35 + *(int *)(v51 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008AD7FC(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = (*(void *)(v2 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for ItemReconciliation() - 8);
  unint64_t v13 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100895338(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), v1 + v14, *(void *)(v1 + v3), v1 + v13, *(void *)(v1 + v5), *(unsigned char *)(v1 + v5 + 8), v1 + v7, v1 + v10, *(void *)(v1 + v11), *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008ADB6C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(TupleTypeMetadata2 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  unint64_t v6 = *(void *)(v0 + v3 + 16);
  if (v6 >> 60 != 15) {
    sub_10001E9C0(*(void *)(v5 + 8), v6);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + *(int *)(TupleTypeMetadata2 + 48), v1);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ADCFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getTupleTypeMetadata2() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100895EF8(a1, *(void **)(v1 + 48), (char *)(v1 + v4), *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + v5), *(void **)(v1 + v6), *(void *)(v1 + v7), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1008ADDEC()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ADE44()
{
  return sub_10089277C(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1008ADE78()
{
  uint64_t v1 = *(void *)(v0 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(void *)(sub_10096C890() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v15 = (*(void *)(v3 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(void *)(sub_10096C890() - 8);
  unint64_t v6 = (((((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + *(unsigned __int8 *)(v5 + 80)
      + 20) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_errorRelease();
  uint64_t v7 = v0 + v14;
  int v8 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v0 + v14, 1, TupleTypeMetadata2);
  unint64_t v9 = v15;
  if (!v8)
  {
    unint64_t v10 = *(void *)(v7 + 16);
    if (v10 >> 60 != 15) {
      sub_10001E9C0(*(void *)(v7 + 8), v10);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + *(int *)(TupleTypeMetadata2 + 48), v1);
    unint64_t v9 = v15;
  }

  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v6, 1, v4))
  {
    (*(void (**)(unint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v6);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t))(*(void *)(v13 - 8) + 8))(v0 + v6 + *(int *)(v4 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1008AE228()
{
  swift_getTupleTypeMetadata2();
  uint64_t v1 = *(void *)(sub_10096C890() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v7 = (*(void *)(v1 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v2 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v4 = *(void *)(sub_10096C890() - 8);
  return sub_10088C0E0(*(uint64_t **)(v0 + 48), *(void *)(v0 + 56), v0 + v8, *(void **)(v0 + v7), *(void **)(v0 + v6), *(void *)(v0 + v2), *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(unsigned char *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 17), *(unsigned char *)(v0 + v3 + 18), *(unsigned char *)(v0 + v3 + 19), v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_1008AE444()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1008AE554(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100891528(a1, v1 + v4, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1008AE63C()
{
  return sub_1008AEA04((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1008AE654()
{
  return sub_100891A98(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void, void, void, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1008AE678()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for FileItemVersion();
  uint64_t v4 = *(void *)(sub_10096C890() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v5, 1, v3))
  {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v5, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v0 + v5 + *(int *)(v3 + 56), v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1008AE8B0(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = *(void *)(sub_10096C890() - 8);
  return sub_100893654(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), v1 + ((*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1008AE9EC()
{
  return sub_1008AEA04((void (*)(void))&_swift_release);
}

uint64_t sub_1008AEA04(void (*a1)(void))
{
  swift_release();
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 48));

  return swift_deallocObject();
}

uint64_t sub_1008AEA64(uint64_t a1)
{
  return sub_1008ACA30(a1, sub_100888B38);
}

uint64_t sub_1008AEA80()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v2 = *(void *)(sub_10096D510() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v4 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008AEC6C()
{
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v1 = *(void *)(sub_10096D510() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100888E54((char *)(v0 + v2), *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(uint64_t **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0+ ((((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for Ingestion()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008AEDEC()
{
  type metadata accessor for FPDNetworkMonitor();
  swift_allocObject();
  uint64_t result = sub_1008AEE28();
  qword_100B0B620 = result;
  return result;
}

uint64_t sub_1008AEE28()
{
  uint64_t v0 = sub_10096C690();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  __chkstk_darwin(v0);
  unint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10096C620();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  v20[0] = sub_10096B7D0();
  uint64_t v10 = *(void *)(v20[0] - 8);
  uint64_t v11 = __chkstk_darwin(v20[0]);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)v20 - v14;
  v20[1] = sub_1003B01A8();
  sub_10096B780();
  unint64_t v24 = _swiftEmptyArrayStorage;
  sub_10008174C();
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_10007FBA0();
  sub_10096CA60();
  uint64_t v16 = v20[0];
  (*(void (**)(char *, char *, void))(v10 + 16))(v13, v15, v20[0]);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v22);
  uint64_t v17 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v16);
  uint64_t v18 = v23;
  *(void *)(v23 + 16) = v17;
  sub_10096B6E0();
  swift_allocObject();
  *(void *)(v18 + 24) = sub_10096B6D0();
  sub_100031400((uint64_t)sub_1008AF1A8);
  sub_10096B6B0();
  sub_10096B6C0();
  return v18;
}

uint64_t sub_1008AF1A8(uint64_t a1)
{
  uint64_t v2 = sub_10096B700();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_10096B480();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v7, a1, v2);
  uint64_t v14 = sub_10096B470();
  os_log_type_t v15 = sub_10096C590();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v8;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    uint64_t v24 = v9;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v21 = v17 + 4;
    uint64_t v22 = v17;
    v13(v26, (uint64_t)v7, v2);
    uint64_t v18 = sub_10096BCE0();
    uint64_t v27 = sub_100719D44(v18, v19, &v28);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Network path update %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1008AF4C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_10096B690();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096B700();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B6A0();
  uint64_t v20 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v20(v4, enum case for NWInterface.InterfaceType.wiredEthernet(_:), v1);
  char v9 = sub_10096B6F0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v4, v1);
  if (v9)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = 0x74656E7265687465;
    unint64_t v13 = 0xE800000000000000;
  }
  else
  {
    uint64_t v19 = v5;
    uint64_t v14 = v20;
    v20(v4, enum case for NWInterface.InterfaceType.wifi(_:), v1);
    char v15 = sub_10096B6F0();
    v10(v4, v1);
    if (v15)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
      uint64_t v12 = 1768319351;
      unint64_t v13 = 0xE400000000000000;
    }
    else
    {
      v14(v4, enum case for NWInterface.InterfaceType.cellular(_:), v1);
      char v16 = sub_10096B6F0();
      v10(v4, v1);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
      if (v16)
      {
        uint64_t v12 = 0x72616C756C6C6563;
        unint64_t v13 = 0xE800000000000000;
      }
      else
      {
        uint64_t v12 = 0x726568746FLL;
        unint64_t v13 = 0xE500000000000000;
      }
    }
  }
  uint64_t v17 = v21;
  uint64_t *v21 = v12;
  v17[1] = v13;
  return result;
}

uint64_t sub_1008AF7A8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPDNetworkMonitor()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FileTreeSide(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008AF8D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeSide()
{
  return &type metadata for FileTreeSide;
}

uint64_t sub_1008AF910()
{
  if (*v0) {
    return 20550;
  }
  else {
    return 21318;
  }
}

void sub_1008AF92C(void *a1@<X8>)
{
  *a1 = &off_100A6A590;
}

uint64_t sub_1008AF93C()
{
  return sub_10096C040();
}

unint64_t sub_1008AF9A0()
{
  unint64_t result = qword_100ADD998;
  if (!qword_100ADD998)
  {
    sub_100033BE8(&qword_100ADD9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD998);
  }
  return result;
}

unint64_t sub_1008AFA00()
{
  unint64_t result = qword_100ADD9A8;
  if (!qword_100ADD9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ADD9A8);
  }
  return result;
}

uint64_t sub_1008AFA54()
{
  return sub_10096BFD0();
}

unint64_t sub_1008AFAA4()
{
  unint64_t result = qword_100ADD9B0[0];
  if (!qword_100ADD9B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100ADD9B0);
  }
  return result;
}

uint64_t sub_1008AFAF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096D250();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v39 = (char *)&v34 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v18 = sub_10002B7CC(&qword_100ACDDC8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_10016D1D8(v2, (uint64_t)v21);
  sub_10016D1D8(a1, v22);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v23(v21, 1, v7);
  int v24 = v23((char *)v22, 1, v7);
  if (a1 == 1)
  {
    if (v24 == 1)
    {
      return 1;
    }
    else
    {
      sub_10016D178(v22);
      return 0;
    }
  }
  else if (v24 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
    return 0;
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v17, v21, v7);
    v26(v39, (char *)v22, v7);
    unsigned int v35 = enum case for FloatingPointRoundingRule.towardZero(_:);
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    uint64_t v34 = *(void (**)(char *))(v37 + 104);
    v34(v6);
    sub_1008AFED4((uint64_t)v6);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
    v29(v6, v28);
    ((void (*)(char *, void, uint64_t))v34)(v6, v35, v28);
    uint64_t v30 = v36;
    sub_1008AFED4((uint64_t)v6);
    v29(v6, v28);
    uint64_t v31 = sub_10096B0C0();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
    v32(v30, v7);
    v32(v13, v7);
    BOOL v25 = v31 == 0;
    v32(v39, v7);
    v32(v17, v7);
  }
  return v25;
}

uint64_t sub_1008AFED4(uint64_t a1)
{
  uint64_t v2 = sub_10096D250();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B080();
  v9[1] = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 != enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:)
    && v7 != enum case for FloatingPointRoundingRule.toNearestOrEven(_:)
    && v7 != enum case for FloatingPointRoundingRule.up(_:)
    && v7 != enum case for FloatingPointRoundingRule.down(_:)
    && v7 != enum case for FloatingPointRoundingRule.towardZero(_:)
    && v7 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    sub_10096C2C0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_10096B070();
}

uint64_t destroy for JobSchedulingState(uint64_t a1)
{
  return sub_1000D31F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9libfssync18JobSchedulingStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10009C5FC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10009C5FC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000D31F8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000D31F8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JobSchedulingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JobSchedulingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1008B024C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1008B0264(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingState()
{
  return &type metadata for JobSchedulingState;
}

BOOL sub_1008B028C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (a1 & ~a2) == 0 && a4 == 0;
}

BOOL sub_1008B02A0(uint64_t a1, uint64_t a2, char a3)
{
  return a3 == 2;
}

unint64_t sub_1008B02B0(unint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      if (a2)
      {
        uint64_t v17 = 0;
        swift_retain();
        v20._uint64_t countAndFlagsBits = 0x3C3A6D6F726620;
        v20._object = (void *)0xE700000000000000;
        sub_10096BDC0(v20);
        type metadata accessor for Continuation();
        sub_10096CDF0();
        v21._uint64_t countAndFlagsBits = 8254;
        v21._object = (void *)0xE200000000000000;
        sub_10096BDC0(v21);
        v22._uint64_t countAndFlagsBits = sub_100608C20(a1);
        sub_10096BDC0(v22);
        swift_bridgeObjectRelease();
        uint64_t v7 = a1;
        uint64_t v8 = a2;
        char v9 = 0;
        goto LABEL_11;
      }
      uint64_t v17 = 32;
      v25._uint64_t countAndFlagsBits = sub_100608C20(a1);
      sub_10096BDC0(v25);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 1:
    case 2:
      if (a1)
      {
        uint64_t v17 = 0;
        sub_10009C5FC(a1, a2, a3);
        v18._uint64_t countAndFlagsBits = 0x3C3A6D6F726620;
        v18._object = (void *)0xE700000000000000;
        sub_10096BDC0(v18);
        type metadata accessor for Continuation();
        sub_10096CDF0();
        sub_1000D31F8(a1, a2, a3);
        v19._uint64_t countAndFlagsBits = 62;
        v19._object = (void *)0xE100000000000000;
        sub_10096BDC0(v19);
        goto LABEL_13;
      }
      unint64_t result = 0;
      break;
    case 3:
      swift_errorRetain();
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      char v10 = swift_dynamicCast();
      swift_errorRelease();
      if (v10)
      {
        unint64_t result = 0xD000000000000017;
      }
      else
      {
        uint64_t v17 = 0x3C3A726F72726520;
        swift_getErrorValue();
        sub_10009C5FC(a1, a2, 3);
        id v11 = Error.prettyDescription.getter(v16);
        id v12 = [v11 description];
        uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v15 = v14;

        v23._uint64_t countAndFlagsBits = v13;
        v23._object = v15;
        sub_10096BDC0(v23);

        swift_bridgeObjectRelease();
        v24._uint64_t countAndFlagsBits = 62;
        v24._object = (void *)0xE100000000000000;
        sub_10096BDC0(v24);
        uint64_t v7 = a1;
        uint64_t v8 = a2;
        char v9 = 3;
LABEL_11:
        sub_1000D31F8(v7, v8, v9);
LABEL_13:
        unint64_t result = v17;
      }
      break;
    default:
      return 0;
  }
  return result;
}

BOOL sub_1008B05AC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return a2 != 0;
  }
  BOOL v3 = a1 != 0;
  if (a3 != 2) {
    BOOL v3 = 0;
  }
  if (a3 == 1) {
    return a1 != 0;
  }
  else {
    return v3;
  }
}

BOOL sub_1008B05E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 2 < 2) {
    return 1;
  }
  return a3 == 4 && a1 == 1 && !a2;
}

uint64_t sub_1008B061C()
{
  uint64_t result = 0x208FB8EFBC80E2;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      if (*(void *)v0) {
        uint64_t result = 548966370;
      }
      else {
        uint64_t result = 548376546;
      }
      break;
    case 2:
      uint64_t result = 0x208FB8EFB696E2;
      break;
    case 3:
      return result;
    case 4:
      if (*(_OWORD *)v0 == 0) {
        uint64_t result = 0x208FB8EFB49CE2;
      }
      else {
        uint64_t result = 545627362;
      }
      break;
    default:
      uint64_t result = 548638690;
      break;
  }
  return result;
}

uint64_t sub_1008B06E8(uint64_t a1, uint64_t a2)
{
  return sub_1008B0704(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1008B0704(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_20;
      }
      goto LABEL_19;
    case 2:
      if (a6 != 2) {
        goto LABEL_20;
      }
      goto LABEL_19;
    case 3:
      if (a6 != 3) {
        goto LABEL_20;
      }
      sub_10009C5FC(a1, a2, 3);
      sub_10009C5FC(a1, a2, 3);
      sub_10009C5FC(a4, a5, 3);
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      uint64_t v11 = sub_10096BCC0();
      uint64_t v13 = v12;
      swift_errorRetain();
      if (v11 == sub_10096BCC0() && v13 == v14) {
        char v10 = 1;
      }
      else {
        char v10 = sub_10096D2D0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000D31F8(a4, a5, 3);
      sub_1000D31F8(a1, a2, 3);
      return v10 & 1;
    case 4:
      if (!(a1 | a2))
      {
        if (a6 != 4 || a5 | a4) {
          goto LABEL_20;
        }
LABEL_19:
        char v10 = 1;
        return v10 & 1;
      }
      if (a6 == 4 && a4 == 1 && !a5) {
        goto LABEL_19;
      }
LABEL_20:
      char v10 = 0;
      return v10 & 1;
    default:
      if (a6) {
        goto LABEL_20;
      }
      char v10 = a1 == a4;
      return v10 & 1;
  }
}

uint64_t sub_1008B08F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, uint64_t a6, uint64_t a7)
{
  uint64_t v116 = a7;
  uint64_t v108 = a6;
  uint64_t v109 = a4;
  uint64_t v100 = a2;
  uint64_t v101 = a3;
  uint64_t v124 = a1;
  uint64_t v8 = *a5;
  uint64_t v9 = (*a5)[13];
  uint64_t v10 = (*a5)[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_10096C890();
  uint64_t v103 = *(void *)(v12 - 8);
  uint64_t v104 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v102 = (char *)&v91 - v14;
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v106 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v98 = (char *)&v91 - v15;
  uint64_t v17 = v8[12];
  uint64_t v118 = v8[10];
  uint64_t v16 = v118;
  uint64_t v119 = v10;
  uint64_t v120 = v17;
  uint64_t v121 = v9;
  uint64_t v107 = type metadata accessor for ReconciliationMutation();
  uint64_t v110 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v91 - v18;
  uint64_t v113 = v16;
  uint64_t v114 = v9;
  uint64_t v118 = v16;
  uint64_t v119 = v10;
  uint64_t v115 = v10;
  uint64_t v120 = v17;
  uint64_t v121 = v9;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_10096C890();
  uint64_t v99 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  Swift::String v23 = (char *)&v91 - v22;
  uint64_t v112 = *(void *)(v19 - 8);
  __chkstk_darwin(v21);
  Swift::String v25 = (char *)&v91 - v24;
  uint64_t v26 = v124;
  uint64_t v27 = v117;
  uint64_t result = sub_1000DEDD8(v124, (uint64_t)v23);
  uint64_t v117 = v27;
  if (v27) {
    return result;
  }
  uint64_t v29 = v109;
  uint64_t v95 = a5;
  uint64_t v96 = v17;
  uint64_t v97 = v25;
  uint64_t v30 = v26;
  uint64_t v31 = v116;
  uint64_t v32 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v23, 1, v19) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v23, v20);
  }
  uint64_t v99 = v29 | 1;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  uint64_t v34 = v97;
  uint64_t v94 = (int *)v19;
  v33(v97, v23, v19);
  if (v108)
  {
    uint64_t v109 = v108;
  }
  else
  {
    swift_retain();
    uint64_t v109 = v31;
  }
  uint64_t v35 = v30;
  uint64_t v37 = v114;
  uint64_t v36 = v115;
  uint64_t v38 = v113;
  uint64_t v39 = v96;
  uint64_t v40 = type metadata accessor for ItemReconciliationHalf();
  int v41 = v34[*(int *)(v40 + 56)];
  uint64_t v93 = v40;
  if (v41 == 2)
  {
    uint64_t v118 = v38;
    uint64_t v119 = v36;
    uint64_t v120 = v39;
    uint64_t v121 = v37;
    uint64_t v92 = type metadata accessor for JobResult();
    uint64_t v43 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v45 = v111;
    uint64_t v46 = swift_getAssociatedConformanceWitness();
    uint64_t v118 = v43;
    uint64_t v119 = v45;
    uint64_t v120 = AssociatedConformanceWitness;
    uint64_t v121 = v46;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v42 = (uint64_t)v105;
    uint64_t v48 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v105, v35, v43);
    swift_storeEnumTagMultiPayload();
    *(_WORD *)uint64_t v48 = 3;
    uint64_t v38 = v113;
    uint64_t v37 = v114;
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v107;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v36 = v115;
    sub_100591758(v116, v42);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v42, v49);
  }
  else
  {
    swift_retain();
    uint64_t v42 = (uint64_t)v105;
  }
  uint64_t v118 = v38;
  uint64_t v119 = v36;
  uint64_t v120 = v39;
  uint64_t v121 = v37;
  uint64_t v108 = type metadata accessor for JobResult();
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  uint64_t v52 = v111;
  uint64_t v53 = swift_getAssociatedConformanceWitness();
  uint64_t v118 = v50;
  uint64_t v119 = v52;
  uint64_t v120 = v51;
  uint64_t v121 = v53;
  uint64_t v54 = type metadata accessor for ReconciliationID();
  uint64_t v55 = v113;
  uint64_t v56 = v39;
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v57 = v42 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v42, v124, v50);
  uint64_t v92 = v54;
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v57 = 3;
  uint64_t v59 = v100;
  uint64_t v58 = v101;
  *(void *)(v57 + 8) = v100;
  *(void *)(v57 + 16) = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v107;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v109, v42);
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v110 += 8;
  uint64_t v91 = v61;
  v61(v42, v60);
  uint64_t v118 = v55;
  uint64_t v119 = v115;
  uint64_t v120 = v56;
  uint64_t v121 = v114;
  type metadata accessor for Materialization.MaterializeItem();
  swift_allocObject();
  uint64_t v62 = sub_1008AA720(v124, v59, v58, v99, 32);
  uint64_t v63 = v116;
  sub_1004D4360(v116, v62);
  swift_release();
  uint64_t v64 = v94;
  uint64_t v65 = v97;
  uint64_t v66 = v102;
  uint64_t v67 = v103;
  uint64_t v68 = *(void (**)(char *))(v103 + 16);
  uint64_t v101 = (uint64_t)&v97[v94[13]];
  uint64_t v69 = v104;
  v68(v102);
  uint64_t v70 = v106;
  uint64_t v71 = v111;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v66, 1, v111) == 1)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
    char v72 = 0;
    uint64_t v73 = v96;
    goto LABEL_24;
  }
  uint64_t v74 = v98;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v98, v66, v71);
  uint64_t v75 = v117;
  (*(void (**)(void *__return_ptr, char *))(*v95[5] + 264))(v122, v74);
  uint64_t v117 = v75;
  if (v75)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
    return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
  }
  sub_10016B800((uint64_t)v122, (uint64_t)v123);
  if (sub_1000DBD64((uint64_t)v123) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
    char v72 = 0;
    uint64_t v73 = v96;
  }
  else
  {
    uint64_t v76 = v65;
    uint64_t v77 = v123[26];
    uint64_t v78 = v123[27];
    char v79 = ((uint64_t (*)(void))(*v95)[65])();
    uint64_t v80 = sub_1005EBAF8(v77, v78, 0, v79 & 1, v76[v64[14]] == 1, *(_DWORD *)&v76[v64[19]] & 1);
    if ((unint64_t)(v80 - 500) < 2 || v80 == 3)
    {
      uint64_t v81 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v82 = v111;
      if (*(unsigned char *)(v101 + *(int *)(v81 + 52)) == 4)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v83 = swift_getTupleTypeMetadata2();
        uint64_t v84 = (uint64_t)v105;
        uint64_t v85 = v106;
        uint64_t v86 = &v105[*(int *)(v83 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v105, v98, v82);
        char v72 = 1;
        swift_storeEnumTagMultiPayload();
        *uint64_t v86 = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v87 = v107;
        swift_storeEnumTagMultiPayload();
        uint64_t v88 = v116;
        sub_100591758(v116, v84);
        sub_1000DBD88((uint64_t)v122);
        v91(v84, v87);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v98, v111);
        uint64_t v63 = v88;
        uint64_t v73 = v96;
        uint64_t v65 = v97;
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v98, v111);
      sub_1000DBD88((uint64_t)v122);
      char v72 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v106 + 8))(v98, v111);
      sub_1000DBD88((uint64_t)v122);
      char v72 = 0;
    }
    uint64_t v73 = v96;
    uint64_t v65 = v97;
  }
  uint64_t v63 = v116;
LABEL_24:
  if (!v65[*(int *)(v93 + 44)])
  {
LABEL_27:
    (*(void (**)(char *, int *))(v112 + 8))(v65, v64);
    return swift_release();
  }
  uint64_t v89 = v114;
  if (*(unsigned char *)(v101 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64) + 16) != 2)
  {
    swift_release();
    return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
  }
  if (v72) {
    goto LABEL_27;
  }
  uint64_t v118 = v115;
  uint64_t v119 = v113;
  uint64_t v120 = v89;
  uint64_t v121 = v73;
  type metadata accessor for Propagation.CancelUpdate();
  uint64_t v90 = sub_1003A9380(v124, *(void *)&v65[v64[16]], *(void *)&v65[v64[16] + 8], v99);
  sub_1004D4360(v63, v90);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
}

uint64_t sub_1008B14F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6, int a7, uint64_t a8)
{
  uint64_t v158 = a1;
  uint64_t v138 = a8;
  int v142 = a7;
  uint64_t v130 = a5;
  uint64_t v133 = a4;
  uint64_t v141 = a3;
  int v155 = a2;
  uint64_t v10 = (*a6)[11];
  uint64_t v11 = (*a6)[12];
  uint64_t v12 = (*a6)[13];
  uint64_t v159 = (*a6)[10];
  uint64_t v9 = v159;
  uint64_t v160 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v134 = type metadata accessor for ReconciliationMutation();
  uint64_t v132 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v131 = (char *)&v122 - v13;
  uint64_t v160 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v14 = type metadata accessor for PersistenceTrigger();
  uint64_t v128 = *(void *)(v14 - 8);
  uint64_t v129 = v14;
  __chkstk_darwin(v14);
  uint64_t v127 = (char *)&v122 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v139 = sub_10096C890();
  uint64_t v137 = *(void *)(v139 - 8);
  uint64_t v17 = __chkstk_darwin(v139);
  uint64_t v136 = (char *)&v122 - v18;
  uint64_t v143 = AssociatedTypeWitness;
  uint64_t v140 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v17);
  uint64_t v135 = (char *)&v122 - v19;
  uint64_t v159 = v9;
  uint64_t v160 = v10;
  uint64_t v144 = v12;
  uint64_t v145 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v20 = type metadata accessor for ItemReconciliation();
  uint64_t v21 = sub_10096C890();
  uint64_t v146 = *(void *)(v21 - 8);
  uint64_t v147 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v153 = (uint64_t)&v122 - v23;
  uint64_t v151 = (int *)v20;
  uint64_t v152 = *(void *)(v20 - 8);
  __chkstk_darwin(v22);
  uint64_t v148 = v9;
  uint64_t v149 = (char *)&v122 - v24;
  uint64_t v150 = v11;
  uint64_t v25 = type metadata accessor for SnapshotItem();
  uint64_t v26 = sub_10096C890();
  uint64_t v154 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v122 - v28;
  uint64_t v156 = *(void *)(v25 - 8);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v122 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (uint64_t (*)(char *, uint64_t))((char *)&v122 - v34);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v122 - v36;
  uint64_t v38 = v157;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*a6[4] + 240))(v158, 1);
  uint64_t v40 = v38;
  if (!v38)
  {
    uint64_t v125 = a6;
    uint64_t v126 = v35;
    uint64_t v157 = v37;
    uint64_t v41 = v156;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v29, 1, v25) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v29, v26);
    }
    uint64_t v154 = (uint64_t)v32;
    uint64_t v42 = v157;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v157, v29, v25);
    uint64_t v43 = *(void (**)(void (*)(void, void), char *, uint64_t))(v41 + 16);
    uint64_t v44 = v126;
    v43((void (*)(void, void))v126, v42, v25);
    int v45 = v155;
    if (v155 == 4)
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v40 = 0;
      int v45 = FileItem.kind.getter(v25, WitnessTable);
    }
    uint64_t v47 = (char *)v44;
    uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
    uint64_t v48 = v41 + 8;
    uint64_t v49 = v50;
    v50(v47, v25);
    if (v45 == 2) {
      return v49(v42, v25);
    }
    uint64_t v156 = v48;
    int v155 = v45;
    uint64_t v126 = v49;
    uint64_t v124 = v40;
    uint64_t v51 = v25;
    uint64_t v52 = &v42[*(int *)(v25 + 48)];
    uint64_t v53 = type metadata accessor for ItemMetadata();
    LOBYTE(v52) = v52[*(int *)(v53 + 64)];
    uint64_t v54 = v154;
    v43((void (*)(void, void))v154, v42, v51);
    if (v52)
    {
      uint64_t v55 = v126;
      v126((char *)v54, v51);
      return v55(v157, v51);
    }
    char v56 = *(unsigned char *)(v54 + *(int *)(v51 + 48) + *(int *)(v53 + 68));
    uint64_t v57 = v126;
    v126((char *)v54, v51);
    uint64_t v58 = v51;
    if ((v56 & 1) == 0)
    {
      uint64_t v59 = v124;
      uint64_t v60 = v125;
      uint64_t v61 = v153;
      sub_1000DEDD8(v158, v153);
      if (v59) {
        return v126(v157, v58);
      }
      uint64_t v63 = v151;
      uint64_t v62 = v152;
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v152 + 48))(v61, 1, v151) == 1)
      {
        v126(v157, v58);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 8))(v61, v147);
      }
      uint64_t v64 = v149;
      (*(void (**)(char *, uint64_t, int *))(v62 + 32))(v149, v61, v63);
      uint64_t v65 = v148;
      uint64_t v66 = type metadata accessor for ItemReconciliationHalf();
      if ((v64[*(int *)(v66 + 36)] & 0x10) == 0)
      {
        uint64_t v67 = &v64[*(int *)(v66 + 64)];
        if (v67[16] || (v67[2] & 4) == 0)
        {
          uint64_t v124 = 0;
          if (v142 == 2)
          {
            uint64_t v123 = v58;
            uint64_t v154 = 0x20000000002;
LABEL_26:
            uint64_t v71 = v60[3];
            uint64_t v72 = v144;
            uint64_t v73 = v145;
            uint64_t v159 = v65;
            uint64_t v160 = v145;
            uint64_t v74 = v150;
            uint64_t v161 = v150;
            uint64_t v162 = v144;
            uint64_t v153 = type metadata accessor for ItemJob();
            uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
            sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
            swift_allocObject();
            uint64_t v76 = sub_10096C0D0();
            uint64_t v77 = v65;
            char v79 = v78;
            uint64_t v159 = v77;
            uint64_t v160 = v73;
            uint64_t v161 = v74;
            uint64_t v162 = v72;
            uint64_t v80 = type metadata accessor for Materialization.EvictItem();
            uint64_t *v79 = v80;
            uint64_t v81 = sub_1003FC080(v76);
            uint64_t v82 = v124;
            uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(*v71 + 272))(v158, v81);
            if (v82)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v152 + 8))(v149, v63);
              uint64_t v58 = v123;
              return v126(v157, v58);
            }
            uint64_t v84 = v83;
            uint64_t v147 = v80;
            uint64_t v124 = 0;
            uint64_t v85 = v154 | v130;
            swift_bridgeObjectRelease();
            v164[33] = v84;
            sub_10096C1C0();
            swift_getWitnessTable();
            sub_10096C450();
            swift_bridgeObjectRelease();
            if (v159)
            {
              uint64_t v86 = v158;
              uint64_t v87 = v138;
              uint64_t v88 = v145;
              if (*(unsigned char *)(v159 + 112) == 1)
              {
                uint64_t v159 = v148;
                uint64_t v160 = v145;
                uint64_t v161 = v150;
                uint64_t v162 = v144;
                type metadata accessor for JobResult();
                uint64_t v89 = sub_100610C18();
                swift_retain();
                sub_1004D4360(v87, v89);
                uint64_t v88 = v145;
                swift_release();
              }
              swift_release();
              uint64_t v90 = v141;
              uint64_t v91 = v86;
            }
            else
            {
              uint64_t v91 = v158;
              uint64_t v87 = v138;
              uint64_t v90 = v141;
              uint64_t v88 = v145;
            }
            uint64_t v94 = v148;
            uint64_t v159 = v148;
            uint64_t v160 = v88;
            uint64_t v95 = v150;
            uint64_t v161 = v150;
            uint64_t v162 = v144;
            uint64_t v96 = type metadata accessor for JobResult();
            uint64_t v97 = v91;
            uint64_t v98 = v133;
            uint64_t v99 = sub_1008BCD10(v97, v90, v133, v85, 64);
            uint64_t v154 = v96;
            sub_1004D4360(v87, v99);
            swift_release();
            if (v155 == 1)
            {
              uint64_t v159 = v94;
              uint64_t v160 = v145;
              uint64_t v161 = v95;
              uint64_t v162 = v144;
              type metadata accessor for Materialization.EvictChildren();
              uint64_t v100 = sub_1003A9384(v158, v141, v98, v85);
              sub_1004D4360(v87, v100);
              swift_release();
            }
            uint64_t v101 = swift_getAssociatedTypeWitness();
            uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
            uint64_t v103 = v143;
            uint64_t v104 = swift_getAssociatedConformanceWitness();
            uint64_t v159 = v101;
            uint64_t v160 = v103;
            uint64_t v161 = AssociatedConformanceWitness;
            uint64_t v162 = v104;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v106 = (uint64_t)v131;
            uint64_t v107 = &v131[*(int *)(TupleTypeMetadata2 + 48)];
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v131, v158, v101);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)uint64_t v107 = 259;
            *((void *)v107 + 1) = v141;
            *((void *)v107 + 2) = v98;
            swift_storeEnumTagMultiPayload();
            uint64_t v108 = v134;
            swift_storeEnumTagMultiPayload();
            sub_100591758(v138, v106);
            (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v106, v108);
            goto LABEL_39;
          }
          uint64_t v68 = v136;
          uint64_t v69 = v137;
          (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v136, &v64[v63[13]], v139);
          uint64_t v70 = v140;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v68, 1, v143) == 1)
          {
            uint64_t v123 = v58;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v139);
            goto LABEL_24;
          }
          uint64_t v92 = v135;
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v135, v68, v143);
          uint64_t v93 = v124;
          (*(void (**)(void *__return_ptr, char *))(*v125[5] + 264))(v163, v92);
          if (!v93)
          {
            uint64_t v109 = v143;
            uint64_t v124 = 0;
            sub_10016B800((uint64_t)v163, (uint64_t)v164);
            int v110 = sub_1000DBD64((uint64_t)v164);
            uint64_t v123 = v58;
            if (v110 != 1)
            {
              uint64_t v111 = v164[26];
              uint64_t v112 = v164[27];
              char v113 = ((uint64_t (*)(void))(*v125)[65])();
              unsigned __int8 v114 = 0;
              switch(v64[v63[14]])
              {
                case 1:
                  unsigned __int8 v114 = 1;
                  break;
                case 4:
                  __break(1u);
                  JUMPOUT(0x1008B2594);
                default:
                  break;
              }
              if (sub_1005EBAF8(v111, v112, 0, v113 & 1, v114, v64[v63[19]] & 1) == 3)
              {
                uint64_t v115 = swift_getAssociatedTypeWitness();
                uint64_t v116 = swift_getAssociatedConformanceWitness();
                uint64_t v117 = v143;
                uint64_t v118 = swift_getAssociatedConformanceWitness();
                uint64_t v159 = v115;
                uint64_t v160 = v117;
                uint64_t v161 = v116;
                uint64_t v162 = v118;
                type metadata accessor for ReconciliationID();
                sub_100033BE8((uint64_t *)&unk_100ACB6B0);
                uint64_t v119 = *(int *)(swift_getTupleTypeMetadata2() + 48);
                uint64_t v120 = v127;
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v115 - 8) + 16))(v127, v158, v115);
                swift_storeEnumTagMultiPayload();
                type metadata accessor for FileTreeError();
                swift_getWitnessTable();
                *(void *)&v120[v119] = swift_allocError();
                swift_storeEnumTagMultiPayload();
                uint64_t v121 = v129;
                swift_storeEnumTagMultiPayload();
                ((void (*)(char *))(*v125)[39])(v120);
                sub_1000DBD88((uint64_t)v163);
                (*(void (**)(char *, uint64_t))(v128 + 8))(v120, v121);
                (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v117);
LABEL_39:
                (*(void (**)(char *, int *))(v152 + 8))(v149, v151);
                return v126(v157, v123);
              }
              (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v143);
              sub_1000DBD88((uint64_t)v163);
              uint64_t v154 = 2;
              uint64_t v63 = v151;
              uint64_t v65 = v148;
              goto LABEL_25;
            }
            (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v109);
LABEL_24:
            uint64_t v154 = 2;
LABEL_25:
            uint64_t v60 = v125;
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v140 + 8))(v92, v143);
        }
      }
      (*(void (**)(char *, int *))(v62 + 8))(v64, v63);
      return v126(v157, v58);
    }
    return v57(v157, v51);
  }
  return result;
}

uint64_t sub_1008B25A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008B67EC(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_1008B25B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008B67EC(a1, a2, a3, a4, 32);
}

uint64_t sub_1008B25B8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v167 = a1;
  uint64_t v153 = a3;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v7 = *(void *)(*a2 + 104);
  uint64_t v169 = *(void *)(*a2 + 80);
  uint64_t v4 = v169;
  uint64_t v170 = v5;
  uint64_t v171 = v6;
  uint64_t v172 = v7;
  uint64_t v149 = type metadata accessor for ReconciliationMutation();
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v151 = (char *)&v142 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = sub_10096C890();
  uint64_t v165 = *(void *)(v145 - 8);
  uint64_t v10 = __chkstk_darwin(v145);
  uint64_t v164 = (char *)&v142 - v11;
  uint64_t v157 = AssociatedTypeWitness;
  uint64_t v147 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v10);
  uint64_t v146 = (char *)&v142 - v12;
  uint64_t v169 = v4;
  uint64_t v170 = v5;
  uint64_t v171 = v6;
  uint64_t v172 = v7;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = sub_10096C890();
  uint64_t v162 = *(void *)(v14 - 8);
  uint64_t v163 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v161 = (uint64_t *)((char *)&v142 - v16);
  uint64_t v156 = v13;
  uint64_t v155 = *(void *)(v13 - 8);
  __chkstk_darwin(v15);
  uint64_t v150 = (char *)&v142 - v17;
  uint64_t v18 = sub_10096B480();
  uint64_t v159 = *(void *)(v18 - 8);
  uint64_t v160 = v18;
  __chkstk_darwin(v18);
  uint64_t v158 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2[3];
  uint64_t v169 = v4;
  uint64_t v170 = v5;
  uint64_t v171 = v6;
  uint64_t v172 = v7;
  uint64_t v166 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v22 = sub_10096C0D0();
  uint64_t v152 = v4;
  uint64_t v169 = v4;
  uint64_t v170 = v5;
  uint64_t v154 = v6;
  uint64_t v171 = v6;
  uint64_t v172 = v7;
  *uint64_t v23 = type metadata accessor for Materialization.MaterializeItem();
  uint64_t v24 = sub_1003FC080(v22);
  uint64_t v25 = v168;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v20 + 272))(v167, v24);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v168 = v25;
  if (v25) {
    return result;
  }
  uint64_t v142 = v20;
  uint64_t v143 = v7;
  uint64_t v144 = v5;
  uint64_t v173 = v26;
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096C450();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v169;
  if (!v169) {
    return result;
  }
  uint64_t v29 = *(void *)(v169 + 136);
  if ((v29 & 0x10000) != 0 || (v29 & 0x20000) != 0) {
    return swift_release();
  }
  id v30 = (id)fpfs_current_or_default_log();
  uint64_t v31 = v158;
  sub_10096B490();
  swift_retain();
  uint64_t v32 = sub_10096B470();
  os_log_type_t v33 = sub_10096C5D0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v166 = swift_slowAlloc();
    uint64_t v169 = v166;
    *(_DWORD *)uint64_t v34 = 136446210;
    uint64_t v35 = sub_10060FC94();
    uint64_t v173 = sub_100719D44(v35, v36, &v169);
    sub_10096C8C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "✴️  cancelling materialization %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v159 + 8))(v31, v160);
  uint64_t v38 = v167;
  uint64_t v37 = v168;
  uint64_t v39 = v164;
  uint64_t v40 = v165;
  uint64_t v41 = v161;
  sub_1000DEDD8(v167, (uint64_t)v161);
  uint64_t v43 = v162;
  uint64_t v42 = v163;
  uint64_t v168 = v37;
  if (v37) {
    return swift_release();
  }
  uint64_t v166 = v28;
  uint64_t v45 = v155;
  uint64_t v44 = v156;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v155 + 48))(v41, 1, v156) == 1)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v41, v42);
LABEL_15:
    uint64_t v169 = v152;
    uint64_t v170 = v144;
    uint64_t v171 = v154;
    uint64_t v172 = v143;
    uint64_t v167 = type metadata accessor for JobResult();
    uint64_t v52 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v54 = v157;
    uint64_t v55 = swift_getAssociatedConformanceWitness();
    uint64_t v169 = v52;
    uint64_t v170 = v54;
    uint64_t v171 = AssociatedConformanceWitness;
    uint64_t v172 = v55;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v57 = (uint64_t)v151;
    uint64_t v58 = &v151[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v151, v38, v52);
    swift_storeEnumTagMultiPayload();
    long long v59 = *(_OWORD *)(v166 + 120);
    *(_WORD *)uint64_t v58 = 768;
    *(_OWORD *)(v58 + 8) = v59;
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = v149;
    swift_storeEnumTagMultiPayload();
    sub_100591758(v153, v57);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v148 + 8))(v57, v60);
  }
  uint64_t v46 = v150;
  (*(void (**)(char *, void *, uint64_t))(v45 + 32))(v150, v41, v44);
  uint64_t v47 = *(void (**)(char *))(v40 + 16);
  uint64_t v165 = (uint64_t)&v46[*(int *)(v44 + 52)];
  uint64_t v48 = v145;
  v47(v39);
  uint64_t v49 = v40;
  uint64_t v50 = v147;
  uint64_t v51 = v157;
  if ((*(unsigned int (**)(char *, uint64_t))(v147 + 48))(v39, 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v48);
    goto LABEL_15;
  }
  uint64_t v61 = v50;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v63 = v146;
  v62(v146, v39, v51);
  uint64_t v64 = v144;
  uint64_t v65 = v143;
  uint64_t result = type metadata accessor for ItemReconciliationHalf();
  uint64_t v66 = v153;
  if (*(unsigned char *)(v165 + *(int *)(result + 52)) != 1)
  {
    uint64_t v169 = v152;
    uint64_t v170 = v64;
    uint64_t v171 = v154;
    uint64_t v172 = v65;
    type metadata accessor for JobResult();
    uint64_t v83 = sub_100610C18();
    swift_retain();
    sub_1004D4360(v66, v83);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v150, v156);
  }
  int v67 = v150[*(int *)(v156 + 56)];
  if (v67 == 1)
  {
    uint64_t v84 = v144;
    uint64_t v85 = v152;
    uint64_t v169 = v144;
    uint64_t v170 = v152;
    uint64_t v86 = v154;
    uint64_t v171 = v65;
    uint64_t v172 = v154;
    type metadata accessor for ItemJob();
    uint64_t v87 = swift_getMetatypeMetadata();
    sub_1006F0030(v87, v87);
    swift_allocObject();
    uint64_t v88 = sub_10096C0D0();
    uint64_t v89 = v65;
    uint64_t v90 = v88;
    uint64_t v169 = v84;
    uint64_t v170 = v85;
    uint64_t v171 = v89;
    uint64_t v172 = v86;
    *uint64_t v91 = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v92 = sub_1003FC080(v90);
    uint64_t v93 = v146;
    uint64_t v94 = v168;
    uint64_t v95 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v142 + 264))(v146, v92);
    uint64_t v96 = v167;
    uint64_t v168 = v94;
    if (!v94) {
      goto LABEL_39;
    }
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v68 = v146;
  uint64_t v69 = v152;
  uint64_t v70 = v154;
  uint64_t v71 = v142;
  if (v67 == 4)
  {
    __break(1u);
    return result;
  }
  uint64_t v72 = v144;
  uint64_t v169 = v144;
  uint64_t v170 = v152;
  uint64_t v171 = v65;
  uint64_t v172 = v154;
  uint64_t v163 = type metadata accessor for ItemJob();
  uint64_t v73 = swift_getMetatypeMetadata();
  sub_1006F0030(v73, v73);
  swift_allocObject();
  uint64_t v74 = sub_10096C0D0();
  uint64_t v76 = v75;
  uint64_t v169 = v72;
  uint64_t v170 = v69;
  uint64_t v171 = v65;
  uint64_t v172 = v70;
  uint64_t Content = type metadata accessor for Ingestion.FetchContent();
  *uint64_t v76 = Content;
  uint64_t v78 = sub_1003FC080(v74);
  uint64_t v79 = v168;
  uint64_t v80 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v71 + 264))(v68, v78);
  uint64_t v81 = v147;
  uint64_t v82 = v148;
  uint64_t v168 = v79;
  if (v79)
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v157);
    return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v150, v156);
  }
  uint64_t v97 = v80;
  swift_bridgeObjectRelease();
  uint64_t v93 = (char *)v163;
  if (!sub_10096C1A0())
  {
LABEL_44:
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v146, v157);
    return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v150, v156);
  }
  uint64_t v161 = (void *)(v82 + 8);
  uint64_t v148 = v147 + 16;
  uint64_t v98 = 4;
  uint64_t v162 = Content;
  uint64_t v165 = v97;
  while (1)
  {
    uint64_t v99 = v98 - 4;
    BOOL v100 = sub_10096C130();
    sub_10096C0E0();
    if (!v100) {
      break;
    }
    uint64_t v96 = *(void *)(v97 + 8 * v98);
    uint64_t v95 = swift_retain();
    uint64_t v101 = v98 - 3;
    if (__OFADD__(v99, 1)) {
      goto LABEL_38;
    }
LABEL_31:
    if (*(unsigned char *)(v96 + 136))
    {
      uint64_t v102 = swift_dynamicCastClassUnconditional();
      if (*(unsigned char *)(v102 + 112) == 2)
      {
        uint64_t v104 = *(void *)(v102 + 96);
        uint64_t v103 = *(void *)(v102 + 104);
        uint64_t v105 = v152;
        uint64_t v106 = v144;
        uint64_t v169 = v152;
        uint64_t v170 = v144;
        uint64_t v107 = v154;
        uint64_t v171 = v154;
        uint64_t v172 = v65;
        uint64_t v164 = (char *)type metadata accessor for JobResult();
        uint64_t v169 = v106;
        uint64_t v170 = v105;
        uint64_t v171 = v65;
        uint64_t v172 = v107;
        type metadata accessor for Ingestion.CancelFetchFileContent();
        uint64_t v109 = *(void *)(v96 + 120);
        uint64_t v108 = *(void *)(v96 + 128);
        swift_retain();
        sub_10009C5FC(v104, v103, 2);
        uint64_t v110 = sub_1003A9380(v146, v109, v108, 0x80000);
        sub_1004D7588(v153, v110);
        uint64_t v65 = v143;
        swift_release();
        swift_release_n();
        sub_1000D31F8(v104, v103, 2);
      }
      else
      {
        uint64_t v169 = v152;
        uint64_t v170 = v144;
        uint64_t v159 = v101;
        uint64_t v160 = v102;
        uint64_t v171 = v154;
        uint64_t v172 = v65;
        uint64_t v164 = (char *)type metadata accessor for JobResult();
        uint64_t v111 = swift_getAssociatedTypeWitness();
        uint64_t v112 = swift_getAssociatedConformanceWitness();
        uint64_t v101 = v159;
        uint64_t v113 = v157;
        uint64_t v114 = swift_getAssociatedConformanceWitness();
        uint64_t v169 = v111;
        uint64_t v170 = v113;
        uint64_t v171 = v112;
        uint64_t v172 = v114;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v115 = swift_getTupleTypeMetadata2();
        uint64_t v116 = (uint64_t)v151;
        uint64_t v117 = &v151[*(int *)(v115 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16))(v151, v167, v111);
        swift_storeEnumTagMultiPayload();
        long long v118 = *(_OWORD *)(v166 + 120);
        *(_WORD *)uint64_t v117 = 768;
        *(_OWORD *)(v117 + 8) = v118;
        swift_storeEnumTagMultiPayload();
        uint64_t v119 = v149;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        uint64_t v120 = v153;
        sub_100591758(v153, v116);
        uint64_t v158 = (char *)*v161;
        ((void (*)(uint64_t, uint64_t))v158)(v116, v119);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v121 = (unsigned char *)(v116 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        (*(void (**)(uint64_t, char *, uint64_t))v148)(v116, v146, v157);
        swift_storeEnumTagMultiPayload();
        *uint64_t v121 = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_100591758(v120, v116);
        ((void (*)(uint64_t, uint64_t))v158)(v116, v119);
        uint64_t v122 = sub_100610C18();
        swift_retain();
        sub_1004D7588(v120, v122);
        swift_release();
        uint64_t v123 = sub_100610C18();
        swift_retain();
        sub_1004D4360(v120, v123);
        uint64_t v65 = v143;
        swift_release();
        swift_release_n();
      }
      uint64_t v93 = (char *)v163;
    }
    else
    {
      swift_release();
    }
    uint64_t v97 = v165;
    ++v98;
    if (v101 == sub_10096C1A0()) {
      goto LABEL_44;
    }
  }
  uint64_t v95 = sub_10096CC20();
  uint64_t v96 = v95;
  uint64_t v101 = v98 - 3;
  if (!__OFADD__(v99, 1)) {
    goto LABEL_31;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t v124 = v95;
  swift_bridgeObjectRelease();
  uint64_t v173 = v124;
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096C450();
  swift_bridgeObjectRelease();
  uint64_t v125 = v169;
  if (!v169)
  {
    swift_release();
    goto LABEL_24;
  }
  int v126 = *(unsigned __int8 *)(v169 + 112);
  if (!*(unsigned char *)(v169 + 112))
  {
    uint64_t v127 = (uint64_t)v151;
    uint64_t v128 = v154;
    if (*(void *)(v169 + 104)) {
      goto LABEL_49;
    }
LABEL_43:
    uint64_t v169 = v152;
    uint64_t v170 = v144;
    uint64_t v171 = v128;
    uint64_t v172 = v143;
    uint64_t v165 = v125;
    uint64_t v164 = (char *)type metadata accessor for JobResult();
    uint64_t v129 = swift_getAssociatedTypeWitness();
    uint64_t v130 = swift_getAssociatedConformanceWitness();
    uint64_t v131 = v157;
    uint64_t v132 = swift_getAssociatedConformanceWitness();
    uint64_t v169 = v129;
    uint64_t v170 = v131;
    uint64_t v171 = v130;
    uint64_t v172 = v132;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v133 = v127 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v96, v129);
    swift_storeEnumTagMultiPayload();
    long long v134 = *(_OWORD *)(v166 + 120);
    *(_WORD *)uint64_t v133 = 768;
    *(_OWORD *)(v133 + 8) = v134;
    swift_storeEnumTagMultiPayload();
    uint64_t v135 = v149;
    swift_storeEnumTagMultiPayload();
    sub_100591758(v153, v127);
    uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
    v136(v127, v135);
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v137 = (unsigned char *)(v127 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    uint64_t v138 = v147;
    (*(void (**)(uint64_t, char *, uint64_t))(v147 + 16))(v127, v146, v157);
    swift_storeEnumTagMultiPayload();
    *uint64_t v137 = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v139 = v153;
    sub_100591758(v153, v127);
    v136(v127, v135);
    uint64_t v140 = sub_100610C18();
    swift_retain();
    sub_1004D7588(v139, v140);
    swift_release();
    uint64_t v141 = sub_100610C18();
    swift_retain();
    sub_1004D4360(v139, v141);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v146, v157);
    return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v150, v156);
  }
  uint64_t v127 = (uint64_t)v151;
  uint64_t v128 = v154;
  if (v126 == 1)
  {
    if (*(void *)(v169 + 96)) {
      goto LABEL_49;
    }
    goto LABEL_43;
  }
  if (v126 != 2) {
    goto LABEL_43;
  }
LABEL_49:
  swift_release();
  swift_release();
LABEL_24:
  (*(void (**)(char *, uint64_t))(v147 + 8))(v93, v157);
  return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v150, v156);
}

uint64_t sub_1008B3ADC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v50 = a3;
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = *(void *)(*a2 + 96);
  uint64_t v8 = *(void *)(*a2 + 104);
  uint64_t v54 = *(void *)(*a2 + 80);
  uint64_t v5 = v54;
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  uint64_t v57 = v8;
  uint64_t v47 = type metadata accessor for ReconciliationMutation();
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v48 = (char *)&v40 - v9;
  uint64_t v10 = sub_10096B480();
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  __chkstk_darwin(v10);
  uint64_t v52 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2[3];
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  uint64_t v57 = v8;
  uint64_t v51 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_1006F0030(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v14 = sub_10096C0D0();
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  uint64_t v57 = v8;
  *uint64_t v15 = type metadata accessor for Materialization.EvictItem();
  uint64_t v16 = sub_1003FC080(v14);
  uint64_t v17 = v53;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 272))(a1, v16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v20 = v52;
    uint64_t v53 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v6;
    uint64_t v44 = v7;
    uint64_t v40 = a1;
    uint64_t v41 = v5;
    uint64_t v58 = v18;
    sub_10096C1C0();
    swift_getWitnessTable();
    sub_10096C450();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = v54;
    if (v54)
    {
      id v22 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_retain();
      uint64_t v23 = sub_10096B470();
      os_log_type_t v24 = sub_10096C5D0();
      BOOL v25 = os_log_type_enabled(v23, v24);
      uint64_t v51 = v21;
      if (v25)
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136446210;
        uint64_t v27 = sub_10060FC94();
        uint64_t v58 = sub_100719D44(v27, v28, &v54);
        sub_10096C8C0();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "✴️  cancelling eviction %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v46);
      uint64_t v54 = v41;
      uint64_t v55 = v43;
      uint64_t v56 = v44;
      uint64_t v57 = v42;
      uint64_t v52 = (char *)type metadata accessor for JobResult();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v30 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v32 = swift_getAssociatedConformanceWitness();
      uint64_t v54 = AssociatedTypeWitness;
      uint64_t v55 = v30;
      uint64_t v56 = AssociatedConformanceWitness;
      uint64_t v57 = v32;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v34 = (uint64_t)v48;
      uint64_t v35 = &v48[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v48, v40, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      long long v36 = *(_OWORD *)(v51 + 120);
      *(_WORD *)uint64_t v35 = 769;
      *(_OWORD *)(v35 + 8) = v36;
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v47;
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v50;
      sub_100591758(v50, v34);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v34, v37);
      uint64_t v39 = sub_100610C18();
      swift_retain();
      sub_1004D4360(v38, v39);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1008B40E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008B67EC(a1, a2, a3, a4, 0x400000);
}

uint64_t sub_1008B40EC()
{
  return 0x6C6169726574616DLL;
}

uint64_t sub_1008B4110(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  Swift::String v306 = a4;
  uint64_t v307 = a5;
  uint64_t v292 = a3;
  int v308 = a1;
  uint64_t v305 = *(char **)v5;
  uint64_t v8 = *((void *)v305 + 76);
  uint64_t v9 = *((void *)v305 + 77);
  uint64_t v10 = (void (*)(void, void, void))*((void *)v305 + 78);
  uint64_t v309 = *((void *)v305 + 75);
  uint64_t v7 = (uint64_t (*)(void, void))v309;
  uint64_t v310 = v8;
  uint64_t v311 = v9;
  char v312 = v10;
  uint64_t v268 = type metadata accessor for PersistenceTrigger();
  uint64_t v267 = *(void *)(v268 - 8);
  __chkstk_darwin(v268);
  uint64_t v266 = (char *)&v241 - v11;
  uint64_t v310 = v8;
  uint64_t v311 = v9;
  char v312 = v10;
  uint64_t v276 = type metadata accessor for ReconciliationMutation();
  uint64_t v277 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  unint64_t v280 = (char *)&v241 - v12;
  uint64_t v265 = sub_10096B0E0();
  uint64_t v264 = *(void *)(v265 - 8);
  __chkstk_darwin(v265);
  uint64_t v263 = (char *)&v241 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_10096A630();
  uint64_t v250 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  unint64_t v249 = (char *)&v241 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v309 = AssociatedTypeWitness;
  uint64_t v310 = v16;
  uint64_t v294 = v16;
  uint64_t v285 = AssociatedConformanceWitness;
  uint64_t v311 = AssociatedConformanceWitness;
  char v312 = (void (*)(void, void, void))v18;
  uint64_t v279 = v18;
  uint64_t v254 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v253 = sub_10096C890();
  uint64_t v252 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  uint64_t v255 = (char *)&v241 - v19;
  uint64_t v272 = sub_10096C890();
  uint64_t v271 = *(void *)(v272 - 8);
  uint64_t v20 = __chkstk_darwin(v272);
  uint64_t v270 = (char *)&v241 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v261 = (char *)&v241 - v23;
  uint64_t v291 = AssociatedTypeWitness;
  uint64_t v274 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v259 = (char *)&v241 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v257 = (char *)&v241 - v26;
  uint64_t v283 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v286 = *(void *)(v283 - 8);
  __chkstk_darwin(v283);
  uint64_t v281 = (char *)&v241 - v27;
  uint64_t v290 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v289 = *(void *)(v290 - 8);
  __chkstk_darwin(v290);
  uint64_t v284 = (char *)&v241 - v28;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  unint64_t v288 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10096C890();
  uint64_t v287 = *((void *)v288 - 1);
  uint64_t v30 = __chkstk_darwin(v288);
  uint64_t v301 = v29;
  Swift::String v302 = (char *)&v241 - v31;
  uint64_t v300 = *(void *)(v29 - 8);
  __chkstk_darwin(v30);
  uint64_t v298 = v10;
  uint64_t v299 = (char *)&v241 - v32;
  uint64_t v296 = v7;
  uint64_t v297 = v8;
  uint64_t v309 = (uint64_t)v7;
  uint64_t v310 = v8;
  uint64_t v295 = v9;
  uint64_t v311 = v9;
  char v312 = v10;
  uint64_t v293 = type metadata accessor for ItemReconciliation();
  uint64_t v33 = sub_10096C890();
  uint64_t v303 = *(void *)(v33 - 8);
  uint64_t v304 = v33;
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v258 = (char *)&v241 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v269 = (char *)&v241 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  unint64_t v260 = (char *)&v241 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v262 = (char *)&v241 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v273 = (char *)&v241 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v275 = (char *)&v241 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v278 = (char *)&v241 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v241 - v49;
  uint64_t v51 = __chkstk_darwin(v48);
  uint64_t v53 = (char *)&v241 - v52;
  uint64_t v54 = __chkstk_darwin(v51);
  uint64_t v56 = (char *)&v241 - v55;
  uint64_t v57 = __chkstk_darwin(v54);
  long long v59 = (char *)&v241 - v58;
  uint64_t v60 = __chkstk_darwin(v57);
  uint64_t v62 = (char *)&v241 - v61;
  uint64_t v63 = __chkstk_darwin(v60);
  uint64_t v65 = (char *)&v241 - v64;
  __chkstk_darwin(v63);
  int v67 = (char *)&v241 - v66;
  uint64_t v68 = *((void *)v305 + 72);
  uint64_t v305 = v6;
  uint64_t v69 = (uint64_t)&v6[v68];
  sub_1000DEDD8(v69, (uint64_t)&v241 - v66);
  uint64_t v248 = v65;
  uint64_t v244 = v62;
  os_log_type_t v245 = v59;
  uint64_t v246 = v56;
  uint64_t v247 = v53;
  Swift::String v243 = v50;
  uint64_t v282 = v67;
  uint64_t v70 = v302;
  (*(void (**)(uint64_t, uint64_t))(*v308[4] + 240))(v69, 1);
  uint64_t v71 = v300;
  uint64_t v72 = v301;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v300 + 48))(v70, 1, v301) == 1)
  {
    (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t)))(v287 + 8))(v70, v288);
LABEL_3:
    uint64_t v73 = v305;
    uint64_t v75 = v297;
    uint64_t v74 = v298;
    uint64_t v76 = v295;
    uint64_t v77 = v296;
    if ((v305[138] & 2) != 0)
    {
      uint64_t v309 = (uint64_t)v296;
      uint64_t v310 = v297;
      uint64_t v311 = v295;
      char v312 = v298;
      type metadata accessor for JobResult();
      uint64_t v309 = (uint64_t)v77;
      uint64_t v310 = v75;
      uint64_t v311 = v76;
      char v312 = v74;
      type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone();
      uint64_t v78 = sub_1003A9380(v69, *((void *)v73 + 15), *((void *)v73 + 16), 0x20000);
      sub_1004D4360(v292, v78);
      swift_release();
    }
    type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v79 = swift_allocError();
    uint64_t v81 = v80;
    uint64_t v82 = v69;
    uint64_t v83 = swift_getAssociatedTypeWitness();
    uint64_t v84 = swift_getAssociatedTypeWitness();
    uint64_t v85 = swift_getAssociatedConformanceWitness();
    uint64_t v86 = swift_getAssociatedConformanceWitness();
    uint64_t v309 = v83;
    uint64_t v310 = v84;
    uint64_t v311 = v85;
    char v312 = (void (*)(void, void, void))v86;
    uint64_t v87 = type metadata accessor for FileItemVersion();
    sub_10096C890();
    sub_100033BE8(&qword_100AD7360);
    uint64_t v88 = v294;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v90 = v81 + *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v91 = *(int *)(TupleTypeMetadata3 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v81, v82, v88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v90, 1, 1, v87);
    *(void *)(v81 + v91) = 0;
    swift_storeEnumTagMultiPayload();
    v306(0, 0, 0, v79);
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v303 + 8))(v282, v304);
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v299, v70, v72);
  uint64_t v93 = v303;
  uint64_t v94 = v304;
  uint64_t v95 = v303 + 16;
  uint64_t v96 = (uint64_t)v248;
  uint64_t v287 = *(void *)(v303 + 16);
  ((void (*)(char *, char *, uint64_t))v287)(v248, v282, v304);
  uint64_t v97 = v293;
  uint64_t v98 = *(void *)(v293 - 8);
  uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
  Swift::String v302 = (char *)(v98 + 48);
  unint64_t v288 = v99;
  if (v99((char *)v96, 1, v293) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v96, v94);
    uint64_t v100 = v290;
    uint64_t v101 = v289;
  }
  else
  {
    uint64_t v101 = v289;
    uint64_t v102 = v284;
    uint64_t v100 = v290;
    (*(void (**)(char *, uint64_t, uint64_t))(v289 + 16))(v284, v96, v290);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
    uint64_t v103 = *(void *)&v102[*(int *)(v100 + 36)];
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v100);
    if (v103)
    {
      (*(void (**)(char *, uint64_t))(v300 + 8))(v299, v72);
      goto LABEL_3;
    }
  }
  uint64_t v248 = (char *)v69;
  uint64_t v104 = v244;
  uint64_t v105 = v304;
  uint64_t v106 = (void (*)(char *, char *, uint64_t))v287;
  ((void (*)(char *, char *, uint64_t))v287)(v244, v282, v304);
  uint64_t v107 = v97;
  if (v288(v104, 1, v97) == 1)
  {
    uint64_t v108 = v303;
    (*(void (**)(char *, uint64_t))(v303 + 8))(v104, v105);
    LODWORD(v290) = 6;
  }
  else
  {
    uint64_t v109 = v104;
    uint64_t v110 = v284;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v284, v109, v100);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v109, v107);
    LODWORD(v290) = v110[*(int *)(v100 + 56)];
    (*(void (**)(char *, uint64_t))(v101 + 8))(v110, v100);
    uint64_t v108 = v303;
  }
  uint64_t v111 = v245;
  v106(v245, v282, v105);
  if (v288(v111, 1, v107) == 1)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v111, v105);
    LODWORD(v289) = 0;
  }
  else
  {
    uint64_t v112 = &v111[*(int *)(v107 + 52)];
    uint64_t v113 = v95;
    uint64_t v114 = v286;
    uint64_t v115 = v98;
    uint64_t v116 = v281;
    uint64_t v117 = v107;
    uint64_t v118 = v283;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, v112, v283);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v117);
    LODWORD(v117) = v116[*(int *)(v118 + 52)];
    uint64_t v119 = v114;
    uint64_t v95 = v113;
    uint64_t v120 = v116;
    uint64_t v98 = v115;
    uint64_t v106 = (void (*)(char *, char *, uint64_t))v287;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v118);
    LODWORD(v289) = v117 == 4;
  }
  uint64_t v121 = v247;
  uint64_t v122 = v246;
  int v123 = v290;
  if (v290 == 4)
  {
    v106(v246, v282, v105);
    uint64_t v124 = v105;
  }
  else
  {
    v106(v246, v282, v105);
    uint64_t v124 = v105;
    if (v123 != 6)
    {
      uint64_t v133 = *(void (**)(char *, uint64_t))(v108 + 8);
      v133(v122, v105);
      long long v134 = v278;
      v106(v278, v282, v124);
      goto LABEL_28;
    }
  }
  uint64_t v125 = v122;
  int v126 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
  v126(v121, v125, v124);
  if (v123 == 4)
  {
    uint64_t v242 = v98;
    uint64_t v127 = v243;
    v126(v243, v121, v124);
    uint64_t v128 = v293;
    if (v288(v127, 1, v293) == 1)
    {
      uint64_t v129 = v127;
      uint64_t v130 = *(void (**)(char *, uint64_t))(v108 + 8);
      v130(v129, v124);
      uint64_t v98 = v242;
      goto LABEL_22;
    }
    uint64_t v135 = &v127[*(int *)(v128 + 52)];
    uint64_t v241 = v95;
    uint64_t v136 = v286;
    uint64_t v137 = v281;
    uint64_t v138 = v127;
    uint64_t v139 = v283;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, v135, v283);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v138, v128);
    LODWORD(v138) = v137[*(int *)(v139 + 52)];
    uint64_t v140 = v136;
    uint64_t v95 = v241;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
    long long v134 = v278;
    ((void (*)(char *, char *, uint64_t))v287)(v278, v282, v124);
    if (v138 != 3)
    {
      uint64_t v132 = v275;
      v126(v275, v134, v124);
      uint64_t v98 = v242;
      goto LABEL_30;
    }
    uint64_t v133 = *(void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v98 = v242;
LABEL_28:
    char v141 = v289;
    v133(v134, v124);
    BOOL v142 = 1;
    uint64_t v143 = v124;
    uint64_t v144 = v301;
    uint64_t v145 = (void (*)(void, void, void))v285;
    goto LABEL_35;
  }
  uint64_t v130 = *(void (**)(char *, uint64_t))(v108 + 8);
  v130(v121, v124);
LABEL_22:
  uint64_t v131 = v278;
  v106(v278, v282, v124);
  uint64_t v132 = v275;
  v126(v275, v131, v124);
  if (v290 != 4)
  {
    v130(v132, v124);
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v146 = v132;
  uint64_t v147 = v273;
  v126(v273, v146, v124);
  uint64_t v148 = v293;
  unsigned int v149 = v288(v147, 1, v293);
  uint64_t v150 = v286;
  if (v149 != 1)
  {
    uint64_t v151 = v281;
    uint64_t v152 = v283;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, &v147[*(int *)(v148 + 52)], v283);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v147, v148);
    uint64_t v153 = v150;
    int v154 = v151[*(int *)(v152 + 52)];
    (*(void (**)(char *, uint64_t))(v153 + 8))(v151, v152);
    BOOL v142 = v154 == 1;
    goto LABEL_34;
  }
  (*(void (**)(char *, uint64_t))(v108 + 8))(v147, v124);
LABEL_32:
  BOOL v142 = 0;
LABEL_34:
  uint64_t v143 = v124;
  uint64_t v144 = v301;
  uint64_t v145 = (void (*)(void, void, void))v285;
  char v141 = v289;
LABEL_35:
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v156 = v144;
  uint64_t v157 = v299;
  if (!(v141 & 1 | (((FileItem.isDataless.getter(v156, WitnessTable) | v142) & 1) == 0)))
  {
    uint64_t v170 = v305;
    uint64_t v171 = v280;
    uint64_t v172 = v291;
    if ((v305[138] & 2) == 0)
    {
LABEL_39:
      uint64_t v242 = v98;
      uint64_t v241 = v95;
      uint64_t v309 = (uint64_t)v296;
      uint64_t v310 = v297;
      uint64_t v311 = v295;
      char v312 = v298;
      type metadata accessor for JobResult();
      uint64_t v173 = v294;
      uint64_t v309 = v294;
      uint64_t v310 = v172;
      uint64_t v311 = v279;
      char v312 = (void (*)(void, void, void))v285;
      double v174 = (void **)type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v175 = (uint64_t)v171;
      double v176 = &v171[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v175, v248, v173);
      int v308 = v174;
      swift_storeEnumTagMultiPayload();
      *(_WORD *)double v176 = 768;
      *(_OWORD *)(v176 + 8) = *(_OWORD *)(v170 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v177 = v276;
      swift_storeEnumTagMultiPayload();
      sub_100591758(v292, v175);
      uint64_t v179 = v277 + 8;
      uint64_t v178 = *(void (**)(uint64_t, uint64_t))(v277 + 8);
      v178(v175, v177);
      uint64_t v180 = v269;
      ((void (*)(char *, char *, uint64_t))v287)(v269, v282, v143);
      uint64_t v181 = v293;
      if (v288(v180, 1, v293) == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v180, v143);
        uint64_t v182 = v270;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v274 + 56))(v270, 1, 1, v291);
        uint64_t v183 = v306;
        uint64_t v184 = v272;
        uint64_t v185 = v271;
LABEL_47:
        (*(void (**)(char *, uint64_t))(v185 + 8))(v182, v184);
        uint64_t v200 = v303;
LABEL_48:
        id v201 = v282;
LABEL_49:
        sub_1000DBD10();
        uint64_t v202 = swift_allocError();
        unsigned char *v203 = 3;
        v183(0, 0, 0, v202);
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v300 + 8))(v299, v301);
        return (*(uint64_t (**)(char *, uint64_t))(v200 + 8))(v201, v143);
      }
      uint64_t v305 = (char *)v178;
      uint64_t v277 = v179;
      uint64_t v192 = v286;
      uint64_t v193 = v242;
      uint64_t v194 = v281;
      uint64_t v195 = v283;
      (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, &v180[*(int *)(v181 + 52)], v283);
      uint64_t v196 = *(void (**)(void, void))(v193 + 8);
      uint64_t v242 = v193 + 8;
      uint64_t v296 = (uint64_t (*)(void, void))v196;
      v196(v180, v181);
      uint64_t v185 = v271;
      uint64_t v182 = v270;
      uint64_t v184 = v272;
      (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v270, v194, v272);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v195);
      uint64_t v197 = v274;
      uint64_t v198 = v291;
      int v199 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v274 + 48))(v182, 1, v291);
      uint64_t v183 = v306;
      if (v199 == 1) {
        goto LABEL_47;
      }
      uint64_t v204 = v259;
      (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v259, v182, v198);
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v297 = swift_getTupleTypeMetadata2();
      uint64_t v205 = (uint64_t)v280;
      uint64_t v206 = &v280[*(int *)(v297 + 48)];
      uint64_t v298 = *(void (**)(void, void, void))(v197 + 16);
      v298(v280, v204, v198);
      swift_storeEnumTagMultiPayload();
      *uint64_t v206 = 0;
      uint64_t v207 = v304;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100591758(v292, v205);
      ((void (*)(uint64_t, uint64_t))v305)(v205, v177);
      uint64_t v208 = v258;
      ((void (*)(char *, char *, uint64_t))v287)(v258, v282, v207);
      uint64_t v209 = v293;
      if (v288(v208, 1, v293) == 1)
      {
        uint64_t v200 = v303;
        (*(void (**)(char *, uint64_t))(v303 + 8))(v208, v207);
LABEL_64:
        (*(void (**)(char *, uint64_t))(v197 + 8))(v204, v291);
        uint64_t v183 = v306;
        uint64_t v143 = v304;
        goto LABEL_48;
      }
      int v231 = v208[*(int *)(v209 + 56)];
      uint64_t result = v296(v208, v209);
      uint64_t v200 = v303;
      if (v231 == 1) {
        goto LABEL_64;
      }
      id v201 = v282;
      if (v231 != 4)
      {
        uint64_t v232 = (uint64_t)v280;
        uint64_t v233 = &v280[*(int *)(v297 + 48)];
        v298(v280, v204, v291);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v233 = 0;
        *((void *)v233 + 1) = 0;
        *((void *)v233 + 2) = 0xB000000000000000;
        *(_OWORD *)(v233 + 24) = 0u;
        *(_OWORD *)(v233 + 40) = 0u;
        v233[56] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v234 = v276;
        swift_storeEnumTagMultiPayload();
        sub_100591758(v292, v232);
        ((void (*)(uint64_t, uint64_t))v305)(v232, v234);
        (*(void (**)(char *, uint64_t))(v274 + 8))(v204, v291);
        uint64_t v183 = v306;
        uint64_t v143 = v304;
        goto LABEL_49;
      }
LABEL_75:
      __break(1u);
      return result;
    }
    if ((*(uint64_t (**)(uint64_t))(v279 + 72))(v294))
    {
      uint64_t v187 = v262;
      ((void (*)(char *, char *, uint64_t))v287)(v262, v282, v143);
      uint64_t v188 = v293;
      unsigned int v189 = v288(v187, 1, v293);
      uint64_t v242 = v98;
      if (v189 == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v187, v143);
        uint64_t v190 = v274;
        uint64_t v191 = v283;
      }
      else
      {
        uint64_t v210 = &v187[*(int *)(v188 + 52)];
        uint64_t v211 = v286;
        uint64_t v212 = v98;
        int64_t v213 = v281;
        unint64_t v214 = v187;
        uint64_t v191 = v283;
        (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, v210, v283);
        uint64_t v215 = v214;
        uint64_t v172 = v291;
        (*(void (**)(char *, uint64_t))(v212 + 8))(v215, v188);
        LODWORD(v212) = v213[*(int *)(v191 + 52)];
        (*(void (**)(char *, uint64_t))(v211 + 8))(v213, v191);
        BOOL v216 = v212 == 2;
        uint64_t v157 = v299;
        uint64_t v190 = v274;
        if (v216) {
          goto LABEL_57;
        }
      }
      uint64_t v217 = v260;
      ((void (*)(char *, char *, uint64_t))v287)(v260, v282, v143);
      if (v288(v217, 1, v188) == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v217, v143);
        uint64_t v218 = v261;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v261, 1, 1, v172);
LABEL_56:
        (*(void (**)(char *, uint64_t))(v271 + 8))(v218, v272);
        goto LABEL_57;
      }
      uint64_t v241 = v95;
      uint64_t v219 = &v217[*(int *)(v188 + 52)];
      uint64_t v220 = v286;
      uint64_t v221 = v217;
      uint64_t v222 = v281;
      (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v281, v219, v191);
      char v223 = v221;
      uint64_t v224 = v274;
      (*(void (**)(char *, uint64_t))(v242 + 8))(v223, v188);
      uint64_t v218 = v261;
      (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v261, v222, v272);
      (*(void (**)(char *, uint64_t))(v220 + 8))(v222, v191);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v218, 1, v172) == 1) {
        goto LABEL_56;
      }
      unsigned __int8 v235 = v257;
      (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v257, v218, v172);
      uint64_t v309 = (*(uint64_t (**)(char *, uint64_t))(*v308[3] + 336))(v235, 6);
      uint64_t v236 = TupleTypeMetadata2;
      sub_10096C1C0();
      swift_getWitnessTable();
      char v237 = v255;
      sub_10096C450();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v236 - 8) + 48))(v237, 1, v236) == 1)
      {
        (*(void (**)(char *, uint64_t))(v252 + 8))(v237, v253);
LABEL_71:
        (*(void (**)(char *, uint64_t))(v224 + 8))(v257, v172);
        uint64_t v157 = v299;
        goto LABEL_57;
      }
      uint64_t v238 = *(void *)&v237[*(int *)(v236 + 48) + 40];
      (*(void (**)(char *))(*(void *)(v254 - 8) + 8))(v237);
      if (!v238)
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      swift_errorRetain();
      Swift::String v239 = v249;
      sub_10096A500();
      sub_10042FD38();
      uint64_t v240 = v251;
      LODWORD(v290) = sub_10096AA60();
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v250 + 8))(v239, v240);
      (*(void (**)(char *, uint64_t))(v224 + 8))(v257, v172);
      uint64_t v157 = v299;
      uint64_t v171 = v280;
      uint64_t v170 = v305;
      uint64_t v98 = v242;
      uint64_t v95 = v241;
      if (v290) {
        goto LABEL_39;
      }
    }
LABEL_57:
    uint64_t v225 = v263;
    sub_10096B0D0();
    sub_10096B080();
    double v227 = v226;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v264 + 8))(v225, v265);
    double v228 = v227 * 1000000000.0;
    if ((~COERCE__INT64(v227 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v228 > -9.22337204e18)
      {
        if (v228 < 9.22337204e18)
        {
          sub_1008B08F0((uint64_t)v248, 0x2000000000000000, (uint64_t)v228, 0x20000, v308, 0, v292);
          sub_1000DBD10();
          uint64_t v229 = swift_allocError();
          *uint64_t v230 = 5;
          v306(0, 0, 0, v229);
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v300 + 8))(v157, v301);
          return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v282, v143);
        }
        goto LABEL_74;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v309 = (uint64_t)v296;
  uint64_t v310 = v297;
  uint64_t v311 = v295;
  char v312 = v298;
  uint64_t v158 = type metadata accessor for JobResult();
  uint64_t v159 = v294;
  uint64_t v309 = v294;
  uint64_t v310 = v291;
  uint64_t v311 = v279;
  char v312 = v145;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v160 = swift_getTupleTypeMetadata2();
  uint64_t v161 = (uint64_t)v280;
  uint64_t v162 = &v280[*(int *)(v160 + 48)];
  uint64_t v163 = *(void *)(v159 - 8);
  uint64_t v164 = (uint64_t)v248;
  Swift::String v302 = *(char **)(v163 + 16);
  uint64_t v293 = v163 + 16;
  ((void (*)(char *, char *, uint64_t))v302)(v280, v248, v159);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v162 = 768;
  uint64_t v165 = v305;
  *(_OWORD *)(v162 + 8) = *(_OWORD *)(v305 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v166 = v276;
  swift_storeEnumTagMultiPayload();
  uint64_t v167 = v292;
  uint64_t v303 = v158;
  sub_100591758(v292, v161);
  (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v161, v166);
  if ((v165[138] & 2) != 0)
  {
    uint64_t v309 = (uint64_t)v296;
    uint64_t v310 = v297;
    uint64_t v311 = v295;
    char v312 = v298;
    type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone();
    uint64_t v186 = sub_1003A9380(v164, *((void *)v165 + 15), *((void *)v165 + 16), 0x20000);
    sub_1004D4360(v167, v186);
    swift_release();
  }
  else
  {
    uint64_t v168 = v266;
    ((void (*)(char *, uint64_t, uint64_t))v302)(v266, v164, v159);
    swift_storeEnumTagMultiPayload();
    uint64_t v169 = v268;
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *))(*v308)[39])(v168);
    (*(void (**)(char *, uint64_t))(v267 + 8))(v168, v169);
  }
  v306(0, 0, 0, 0);
  (*(void (**)(char *, uint64_t))(v300 + 8))(v299, v301);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v282, v304);
}

uint64_t type metadata accessor for Materialization.MaterializeItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008B67D0()
{
  return 0x7463697665;
}

uint64_t sub_1008B67E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008B67EC(a1, a2, a3, a4, 64);
}

uint64_t sub_1008B67EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_1008BCD10(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_1008B6870@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1008B69DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, uint64_t), uint64_t a5)
{
  uint64_t v39 = a5;
  uint64_t v40 = a4;
  uint64_t v46 = a3;
  uint64_t v47 = a1;
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(*v5 + 600);
  uint64_t v8 = *(void *)(*v5 + 616);
  uint64_t v38 = type metadata accessor for SnapshotItem();
  uint64_t v9 = sub_10096C890();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v35 - v10;
  uint64_t v42 = v6;
  uint64_t v11 = *(void *)(v6 + 608);
  uint64_t v12 = *(void *)(v6 + 624);
  uint64_t v48 = v7;
  uint64_t v49 = v11;
  uint64_t v50 = v8;
  uint64_t v51 = v12;
  uint64_t v13 = type metadata accessor for ReconciliationMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  uint64_t v45 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v48 = v7;
  uint64_t v49 = v11;
  uint64_t v50 = v8;
  uint64_t v51 = v12;
  uint64_t v43 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v41;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v49 = v18;
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v51 = v21;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v22 = &v16[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v23 = (uint64_t)v5 + *(void *)(v42 + 576);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v16, v23, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v22 = 769;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v5 + 15);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v44;
  swift_storeEnumTagMultiPayload();
  sub_100591758(v46, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v24);
  (*(void (**)(uint64_t, uint64_t))(**(void **)(v47 + 32) + 240))(v23, 1);
  uint64_t v26 = v36;
  uint64_t v25 = v37;
  uint64_t v27 = v40;
  uint64_t v28 = v38;
  uint64_t v29 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 1, v38) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v25);
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v31 = FileItem.isDataless.getter(v28, WitnessTable);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v28);
    if ((v31 & 1) == 0)
    {
      sub_1000DBD10();
      uint64_t v33 = swift_allocError();
      *uint64_t v34 = 4;
      v27(0, 0, 0, v33);
      return swift_errorRelease();
    }
  }
  return ((uint64_t (*)(void, void, void, void))v27)(0, 0, 0, 0);
}

uint64_t type metadata accessor for Materialization.EvictItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008B6F00()
{
  return 0x68632D7463697665;
}

uint64_t sub_1008B6F24(void **a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v36 = a4;
  uint64_t v40 = a3;
  uint64_t v10 = *v5;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v39 = a1;
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(*a1[4] + 472))((char *)v6 + *(void *)(v10 + 576), a2);
  uint64_t v19 = v36;
  uint64_t v44 = v17;
  uint64_t v34 = v13;
  uint64_t v35 = v20;
  if ((v6[17] & 0x20000000000) != 0) {
    int v21 = 2;
  }
  else {
    int v21 = 4;
  }
  int v38 = v21;
  if (sub_10096C1A0())
  {
    uint64_t v37 = v6;
    uint64_t v22 = 0;
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v43 = (void (**)(char *, uint64_t *, uint64_t))(v12 + 16);
    uint64_t v41 = (void (**)(char *, uint64_t))(v12 + 8);
    while (1)
    {
      BOOL v23 = sub_10096C130();
      sub_10096C0E0();
      if (v23)
      {
        uint64_t v24 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v44, v18+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v22, v11);
        uint64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_10096CC20();
        if (v34 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v45 = result;
        uint64_t v30 = v44;
        (*v43)(v44, &v45, v11);
        uint64_t v24 = v30;
        swift_unknownObjectRelease();
        uint64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          char v31 = v36;
          goto LABEL_17;
        }
      }
      uint64_t v26 = a5;
      (*v42)(v15, v24, v11);
      uint64_t WitnessTable = swift_getWitnessTable();
      if (FileItem.kind.getter(v11, WitnessTable) != 2)
      {
        int v28 = FileItem.kind.getter(v11, WitnessTable);
        sub_1008B14F4((uint64_t)v15, v28, v37[15], v37[16], v37[17], v39, v38, v40);
      }
      a5 = v26;
      (*v41)(v15, v11);
      ++v22;
      if (v25 == sub_10096C1A0()) {
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRelease();
  char v31 = v19;
LABEL_17:
  uint64_t v32 = swift_retain();
  v31(v32, 0, 0, 0);
  return swift_release_n();
}

uint64_t type metadata accessor for Materialization.EvictChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008B7364()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1008B7380(char a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v2;
  swift_retain();
  swift_retain();
  sub_10035B320((uint64_t)"requestCompleted(isIgnored:db:)", 31, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1008BD720, v5);

  return swift_release();
}

uint64_t sub_1008B7458(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 88);
  uint64_t v7 = *(void *)(*(void *)a2 + 96);
  uint64_t v8 = *(void *)(*(void *)a2 + 104);
  uint64_t v27 = *(void *)(*(void *)a2 + 80);
  uint64_t v28 = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v9 = type metadata accessor for PersistenceTrigger();
  uint64_t v31 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  if (a1)
  {
    uint64_t v12 = a3 + *(void *)(*(void *)a3 + 576);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v24 = v9;
    uint64_t v14 = AssociatedTypeWitness;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, v12, AssociatedTypeWitness);
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = a3;
    uint64_t v17 = AssociatedConformanceWitness;
    uint64_t v18 = swift_getAssociatedConformanceWitness();
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    uint64_t v26 = v15;
    uint64_t v29 = v17;
    uint64_t v30 = v18;
    uint64_t v19 = v24;
    a3 = v25;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *))(*(void *)a2 + 312))(v11);
    (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v19);
  }
  else
  {
    uint64_t v26 = swift_getAssociatedTypeWitness();
    uint64_t v18 = swift_getAssociatedConformanceWitness();
    uint64_t v19 = v9;
  }
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v27 = v20;
  uint64_t v28 = v26;
  uint64_t v29 = v21;
  uint64_t v30 = v18;
  type metadata accessor for ReconciliationID();
  uint64_t v22 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  unsigned char *v11 = sub_1007B24CC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v22, a3 + *(void *)(*(void *)a3 + 576), v20);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *))(*(void *)a2 + 312))(v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v19);
}

uint64_t sub_1008B78B0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v99 = a5;
  uint64_t v100 = a4;
  uint64_t v83 = a3;
  uint64_t v95 = a2;
  uint64_t v98 = a1;
  uint64_t v82 = (void *)*v5;
  uint64_t v6 = v82;
  uint64_t v7 = v82[76];
  uint64_t v97 = v82[78];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = v82[77];
  uint64_t v10 = v82[75];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v87 = type metadata accessor for ReconciliationID();
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v79 - v14;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v91 = v11;
  uint64_t v101 = v11;
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v15 = v5;
  uint64_t v88 = v13;
  uint64_t v89 = AssociatedConformanceWitness;
  uint64_t v103 = v13;
  uint64_t v104 = AssociatedConformanceWitness;
  uint64_t v86 = type metadata accessor for ReconciliationID();
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)&v79 - v16;
  uint64_t v81 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v79 - v17;
  uint64_t v92 = v10;
  uint64_t v93 = v9;
  uint64_t v101 = v10;
  uint64_t v102 = v7;
  uint64_t v94 = v7;
  uint64_t v103 = v9;
  uint64_t v104 = v97;
  uint64_t v18 = type metadata accessor for ItemReconciliation();
  uint64_t v19 = sub_10096C890();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  BOOL v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v96 = (uint64_t)&v79 - v24;
  uint64_t v25 = v98[4];
  uint64_t v26 = (uint64_t)v15 + v6[72];
  if (((*(uint64_t (**)(uint64_t))(*(void *)v25 + 424))(v26) & 1) == 0
    && ((*(uint64_t (**)(uint64_t))(*(void *)v25 + 432))(v26) & 1) == 0)
  {
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))v100)(0, 0xD000000000000017, 0x80000001009BD9A0, 0);
  }
  if (v95)
  {
    sub_1000DEDD8(v26, v96);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v96, v19);
    uint64_t v27 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v23, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    }
    else
    {
      uint64_t v61 = v80;
      uint64_t v62 = v79;
      uint64_t v63 = v81;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v79, v23, v81);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v18);
      int v64 = v62[*(int *)(v63 + 52)];
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
      if (v64 == 2)
      {
        ((void (*)(void, void, void, void))v100)(0, 0, 0, 0);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v96, v19);
      }
    }
    uint64_t v66 = v92;
    uint64_t v65 = v93;
    uint64_t v67 = v94;
    uint64_t v101 = v92;
    uint64_t v102 = v94;
    uint64_t v68 = v97;
    uint64_t v103 = v93;
    uint64_t v104 = v97;
    type metadata accessor for JobResult();
    uint64_t v101 = v66;
    uint64_t v102 = v67;
    uint64_t v103 = v65;
    uint64_t v104 = v68;
    type metadata accessor for Ingestion.ReSnapshotChildren();
    uint64_t v69 = sub_1008AA684(v26, v15[15], v15[16], v15[17]);
    uint64_t v70 = v19;
    uint64_t v71 = v83;
    sub_1004D4360(v83, v69);
    swift_release();
    uint64_t v72 = v15[15];
    uint64_t v73 = v15[16];
    uint64_t v74 = v26;
    uint64_t v75 = v15[17];
    swift_allocObject();
    uint64_t v76 = sub_100610B30(v74, v72, v73, v75);
    sub_1004D4360(v71, v76);
    swift_release();
    sub_1000DBD10();
    uint64_t v77 = swift_allocError();
    *uint64_t v78 = 3;
    ((void (*)(void, void, void, uint64_t))v100)(0, 0, 0, v77);
    swift_errorRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v96, v70);
  }
  else
  {
    if (sub_1005152D8())
    {
      uint64_t v101 = v92;
      uint64_t v102 = v94;
      uint64_t v103 = v93;
      uint64_t v104 = v97;
      type metadata accessor for ConcreteDatabase();
      uint64_t v29 = v98;
      uint64_t v97 = swift_dynamicCastClassUnconditional();
      uint64_t v30 = v91;
      uint64_t v101 = v91;
      uint64_t v102 = v90;
      uint64_t v103 = v88;
      uint64_t v104 = v89;
      type metadata accessor for FPFSID();
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
      uint64_t v32 = (uint64_t)v84;
      v31(v84, v26, v30);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = sub_10064C8FC(v32);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v35 = swift_allocBox();
      uint64_t v37 = v36;
      uint64_t v38 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v39 = v30;
      uint64_t v40 = v33;
      uint64_t v41 = v35;
      v31(v36, v26, v39);
      swift_storeEnumTagMultiPayload();
      *(void *)&v37[v38] = v15[15];
      id v42 = objc_allocWithZone((Class)NSProgress);
      swift_retain();
      id v43 = [v42 init];
      uint64_t v44 = (void *)swift_allocObject();
      void v44[2] = v97;
      v44[3] = v15;
      v44[4] = v29;
      swift_retain_n();
      swift_retain();
      sub_1000B6E14(v40, 0, 0, 1, v41 | 0x5000000000000002, v43, (uint64_t)sub_1008BD6C4, (uint64_t)v44);
    }
    else
    {
      uint64_t v45 = v26;
      uint64_t v46 = v98;
      uint64_t v96 = (*(uint64_t (**)(void))(*v98 + 176))();
      uint64_t v101 = v94;
      uint64_t v102 = v92;
      uint64_t v103 = v97;
      uint64_t v104 = v93;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = swift_dynamicCastClassUnconditional();
      uint64_t v47 = v91;
      uint64_t v101 = v90;
      uint64_t v102 = v91;
      uint64_t v103 = v89;
      uint64_t v104 = v88;
      type metadata accessor for FPFSID();
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      uint64_t v49 = (uint64_t)v85;
      v48(v85, v45, v47);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = sub_10064C8FC(v49);
      uint64_t v51 = swift_getTupleTypeMetadata2();
      uint64_t v52 = swift_allocBox();
      uint64_t v54 = v53;
      uint64_t v55 = *(int *)(v51 + 48);
      uint64_t v56 = v47;
      uint64_t v57 = v50;
      uint64_t v58 = v52;
      v48(v53, v45, v56);
      swift_storeEnumTagMultiPayload();
      *(void *)&v54[v55] = v15[15];
      id v43 = [objc_allocWithZone((Class)NSProgress) init];
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = v15;
      *(void *)(v59 + 24) = v46;
      swift_retain();
      swift_retain();
      sub_1000B6E14(v57, 0, 0, 1, v58 | 0x5000000000000002, v43, (uint64_t)sub_1008BD64C, v59);
    }
    swift_release();
    uint64_t v60 = v100;
    swift_release();
    swift_release();

    swift_release();
    type metadata accessor for RequestContinuation();
    swift_allocObject();
    v60();
    return swift_release();
  }
}

uint64_t sub_1008B8410(uint64_t a1, uint64_t *a2, char *a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 576);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v31 - v10;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v12 = sub_10096D510();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v31 - v14, a1, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return sub_1008B7380(0, v36);
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v35 = v11;
    v17(v11, v15, v8);
    uint64_t v18 = *(void *)(v7 + 592);
    uint64_t v34 = a2;
    uint64_t v32 = v18;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v20 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    uint64_t v37 = AssociatedTypeWitness;
    uint64_t v38 = v20;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v22;
    type metadata accessor for ReconciliationID();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v24 = swift_allocBox();
    uint64_t v26 = v25;
    uint64_t v27 = *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v25, &a3[*(void *)(*(void *)a3 + 576)], AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(void *)(v26 + v27) = *((void *)a3 + 15);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v36;
    *(void *)(v28 + 16) = a3;
    *(void *)(v28 + 24) = v29;
    swift_retain();
    swift_retain();
    uint64_t v30 = (uint64_t)v35;
    sub_1000C083C((uint64_t)v35, v24 | 0x5000000000000002, (uint64_t (*)(uint64_t, void))sub_1008BD6D4, v28, v8, v32);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v30, v8);
  }
}

uint64_t sub_1008B8808(char a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    swift_willThrowTypedImpl();
    char v5 = 0;
  }
  else
  {
    char v5 = a1 & 1;
  }
  return sub_1008B7380(v5, a4);
}

uint64_t type metadata accessor for Materialization.MaterializeParentHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008B8888()
{
  return 0xD000000000000027;
}

uint64_t sub_1008B88A4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  unint64_t v29 = a4;
  uint64_t v11 = (void *)*v7;
  uint64_t v12 = (void *)*a1;
  uint64_t v26 = sub_10096C890();
  uint64_t v13 = *(void *)(v26 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v26);
  uint64_t v16 = (char *)&v24 - v15;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v24 - v15, a2);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v25 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v11[75];
  *((void *)v19 + 3) = v11[76];
  *((void *)v19 + 4) = v12[72];
  *((void *)v19 + 5) = v12[73];
  *((void *)v19 + 6) = v11[77];
  *((void *)v19 + 7) = v11[78];
  *((void *)v19 + 8) = v12[74];
  *((void *)v19 + 9) = v12[75];
  *((void *)v19 + 10) = a1;
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  *((void *)v19 + 11) = a3;
  *((void *)v19 + 12) = v20;
  *((void *)v19 + 13) = v21;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[v17], v16, v26);
  *(void *)&v19[v25] = v7;
  unint64_t v22 = v29;
  *(void *)&v19[v18] = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000CE628(v22);
  sub_1000BCFEC(a3, v22, (uint64_t)sub_1008BD140, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1008B8B3C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, unint64_t a8)
{
  uint64_t v43 = a5;
  unint64_t v44 = a8;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  unint64_t v35 = a1;
  uint64_t v11 = (void *)*a2;
  uint64_t v39 = (void *)*a7;
  uint64_t v40 = v11;
  uint64_t v12 = sub_10096C890();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v38 = (char *)&v33 - v15;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v37 = v12;
  uint64_t v36 = sub_10096D510();
  uint64_t v17 = *(void *)(v36 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v36);
  uint64_t v20 = (char *)&v33 - v19;
  (*(void (**)(char *, unint64_t))(v17 + 16))((char *)&v33 - v19, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a6, v12);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v35 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + v23 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v34 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (char *)swift_allocObject();
  uint64_t v27 = v39;
  uint64_t v26 = v40;
  *((void *)v25 + 2) = v39[75];
  *((void *)v25 + 3) = v27[76];
  *((void *)v25 + 4) = v26[72];
  *((void *)v25 + 5) = v26[73];
  *((void *)v25 + 6) = v27[77];
  *((void *)v25 + 7) = v27[78];
  *((void *)v25 + 8) = v26[74];
  *((void *)v25 + 9) = v26[75];
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v21], v20, v36);
  uint64_t v28 = v42;
  *(void *)&v25[v35] = v41;
  *(void *)&v25[v22] = a2;
  unint64_t v29 = &v25[v23];
  uint64_t v30 = v43;
  *(void *)unint64_t v29 = v28;
  *((void *)v29 + 1) = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], v38, v37);
  *(void *)&v25[v34] = a7;
  unint64_t v31 = v44;
  *(void *)&v25[v33] = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000CE628(v31);
  sub_10035B320((uint64_t)"backgroundMaterialize(concreteDB:lastMaterializedLevel:id:request:requestCompleted:)", 84, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1008BD4E4, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_1008B8F38(char *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v104 = a8;
  uint64_t v108 = a7;
  uint64_t v109 = a6;
  uint64_t v118 = a4;
  uint64_t v119 = a5;
  uint64_t v113 = a3;
  uint64_t v120 = a1;
  uint64_t v9 = *a2;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 80);
  uint64_t v12 = sub_10096C890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v103 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v112 = (char *)&v93 - v14;
  uint64_t v114 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v107 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v102 = (char *)&v93 - v18;
  __chkstk_darwin(v17);
  uint64_t v110 = (char *)&v93 - v19;
  uint64_t v20 = *(void *)(v9 + 88);
  uint64_t v121 = v11;
  uint64_t v122 = v20;
  long long v101 = *(_OWORD *)(v10 + 96);
  long long v123 = v101;
  uint64_t v115 = type metadata accessor for ReconciliationID();
  uint64_t v21 = sub_10096C890();
  unint64_t v22 = *(void **)(v21 - 8);
  uint64_t v105 = v21;
  uint64_t v106 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v93 - v24;
  uint64_t v117 = v11;
  uint64_t v116 = *(void **)(v11 - 8);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  unint64_t v31 = (char *)&v93 - v30;
  __chkstk_darwin(v29);
  unint64_t v33 = (char *)&v93 - v32;
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v34 = sub_10096D510();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v93 - v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)&v93 - v36, v120, v34);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return v118(v38);
  }
  uint64_t v98 = v31;
  uint64_t v39 = v115;
  uint64_t v99 = v28;
  uint64_t v120 = v33;
  uint64_t v100 = a2;
  uint64_t v41 = v116;
  uint64_t v40 = v117;
  uint64_t v42 = (uint64_t (*)(char *, uint64_t, uint64_t))v116[6];
  uint64_t v38 = v42(v37, 1, v117);
  if (v38 == 1) {
    return v118(v38);
  }
  unint64_t v44 = (void (*)(void, void, void))v41[4];
  uint64_t v45 = v37;
  uint64_t v46 = v40;
  uint64_t v95 = v41 + 4;
  uint64_t v94 = v44;
  v44(v120, v45, v40);
  uint64_t v47 = v25;
  uint64_t v48 = v124;
  sub_10064CA68(v113, 1, (uint64_t)v25);
  uint64_t v97 = (unsigned int (*)(char *, uint64_t))v42;
  if (v48)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v25, 1, 1, v39);
    uint64_t v124 = 0;
    uint64_t v39 = v105;
    uint64_t v49 = v106;
LABEL_8:
    uint64_t v105 = v12;
    uint64_t v51 = v46;
    uint64_t v52 = v114;
    uint64_t v54 = v110;
    uint64_t v53 = TupleTypeMetadata2;
    uint64_t v55 = v47;
    uint64_t v56 = v120;
    ((void (*)(char *, uint64_t))v49[1])(v55, v39);
    goto LABEL_9;
  }
  uint64_t v49 = *(void **)(v39 - 8);
  ((void (*)(char *, void, uint64_t, uint64_t))v49[7])(v47, 0, 1, v39);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v124 = 0;
  if (EnumCaseMultiPayload == 1) {
    goto LABEL_8;
  }
  uint64_t v84 = v98;
  uint64_t v85 = v46;
  v94(v98, v47, v46);
  uint64_t v86 = v120;
  char v87 = sub_10096BBE0();
  uint64_t v88 = v86;
  LOBYTE(v86) = v87;
  uint64_t v89 = (uint64_t (*)(char *, uint64_t))v41[1];
  uint64_t v90 = v84;
  uint64_t v91 = v88;
  uint64_t v92 = v89(v90, v85);
  if ((v86 & 1) == 0)
  {
    uint64_t v105 = v12;
    uint64_t v51 = v85;
    uint64_t v52 = v114;
    uint64_t v56 = v91;
    uint64_t v54 = v110;
    uint64_t v53 = TupleTypeMetadata2;
LABEL_9:
    uint64_t v57 = (void (*)(char *, char *, uint64_t))v41[2];
    uint64_t v106 = v41 + 2;
    uint64_t v96 = v57;
    v57(v54, v56, v51);
    uint64_t v58 = (void (*)(void, void, void, void))v41[7];
    uint64_t v115 = (uint64_t)(v41 + 7);
    uint64_t v98 = (char *)v58;
    v58(v54, 0, 1, v51);
    uint64_t v59 = v112;
    uint64_t v60 = &v112[*(int *)(v53 + 48)];
    uint64_t v61 = v54;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    uint64_t v63 = v105;
    v62(v112, v61, v105);
    v62(v60, v109, v63);
    uint64_t v64 = v51;
    uint64_t v65 = v97;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v97)(v59, 1, v64) == 1)
    {
      uint64_t v66 = *(void (**)(char *, uint64_t))(v52 + 8);
      v66(v61, v63);
      uint64_t v67 = v117;
      if (v65(v60, 1) == 1)
      {
        uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v66)(v112, v63);
        uint64_t v69 = v116;
        uint64_t v70 = v67;
        v118(v68);
        return ((uint64_t (*)(char *, uint64_t))v69[1])(v120, v70);
      }
      uint64_t v73 = v118;
      uint64_t v74 = v107;
      uint64_t v75 = v112;
      uint64_t v69 = v116;
    }
    else
    {
      uint64_t v71 = v102;
      v62(v102, v59, v63);
      uint64_t v67 = v117;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v65)(v60, 1, v117) != 1)
      {
        uint64_t v77 = v99;
        v94(v99, v60, v67);
        LODWORD(TupleTypeMetadata2) = sub_10096BBE0();
        uint64_t v70 = v67;
        uint64_t v78 = v71;
        uint64_t v79 = v116;
        uint64_t v80 = (void (*)(char *, uint64_t))v116[1];
        v80(v77, v70);
        uint64_t v66 = *(void (**)(char *, uint64_t))(v114 + 8);
        v66(v110, v63);
        v80(v78, v70);
        uint64_t v81 = v59;
        uint64_t v69 = v79;
        uint64_t v82 = ((uint64_t (*)(char *, uint64_t))v66)(v81, v63);
        uint64_t v73 = v118;
        uint64_t v76 = v119;
        uint64_t v74 = v107;
        if (TupleTypeMetadata2)
        {
          v118(v82);
          return ((uint64_t (*)(char *, void))v69[1])(v120, v70);
        }
        goto LABEL_19;
      }
      uint64_t v66 = *(void (**)(char *, uint64_t))(v114 + 8);
      v66(v110, v63);
      uint64_t v72 = v116;
      ((void (*)(char *, uint64_t))v116[1])(v71, v67);
      uint64_t v73 = v118;
      uint64_t v74 = v107;
      uint64_t v75 = v59;
      uint64_t v69 = v72;
    }
    uint64_t v70 = v67;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v75, TupleTypeMetadata2);
    uint64_t v76 = v119;
LABEL_19:
    uint64_t v83 = v120;
    v96(v74, v120, v70);
    ((void (*)(char *, void, uint64_t, uint64_t))v98)(v74, 0, 1, v70);
    sub_1008B88A4(v113, v74, v100, v104, v73, v76);
    v66(v74, v105);
    return ((uint64_t (*)(char *, uint64_t))v69[1])(v83, v70);
  }
  v118(v92);
  return v89(v91, v85);
}

uint64_t sub_1008B9978(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v99 = a5;
  uint64_t v100 = a4;
  uint64_t v75 = a3;
  uint64_t v95 = a2;
  uint64_t v98 = a1;
  uint64_t v74 = (void *)*v5;
  uint64_t v6 = v74;
  uint64_t v7 = v74[76];
  uint64_t v97 = (void *)v74[78];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = (void *)v74[77];
  uint64_t v10 = v74[75];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v101 = AssociatedTypeWitness;
  uint64_t v102 = v11;
  uint64_t v103 = (void *)AssociatedConformanceWitness;
  uint64_t v104 = (void *)v13;
  uint64_t v81 = type metadata accessor for ReconciliationID();
  __chkstk_darwin(v81);
  uint64_t v78 = (char *)&v69 - v14;
  uint64_t v83 = sub_10096C890();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  char v87 = (void *)v13;
  uint64_t v88 = (uint64_t)&v69 - v15;
  uint64_t v101 = v11;
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v89 = (void *)AssociatedConformanceWitness;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v16 = v5;
  uint64_t v103 = (void *)v13;
  uint64_t v104 = (void *)AssociatedConformanceWitness;
  uint64_t v77 = type metadata accessor for ReconciliationID();
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v69 - v17;
  uint64_t v91 = v11;
  uint64_t v80 = sub_10096C890();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v86 = (uint64_t)&v69 - v18;
  uint64_t v73 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v69 - v19;
  uint64_t v92 = v10;
  uint64_t v93 = v9;
  uint64_t v101 = v10;
  uint64_t v102 = v7;
  uint64_t v94 = v7;
  uint64_t v103 = v9;
  uint64_t v104 = v97;
  uint64_t v84 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_10096C890();
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v96 = (uint64_t)&v69 - v24;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v98;
  *(void *)(v25 + 16) = v98;
  *(void *)(v25 + 24) = v5;
  uint64_t v27 = *(void *)(v26 + 32);
  uint64_t v28 = (uint64_t)v16 + v6[72];
  uint64_t v29 = *(uint64_t (**)(uint64_t))(*(void *)v27 + 424);
  swift_retain();
  swift_retain();
  char v30 = v29(v28);
  uint64_t v70 = v25;
  if ((v30 & 1) == 0
    && ((*(uint64_t (**)(uint64_t))(*(void *)v27 + 432))(v28) & 1) == 0
    && (*((unsigned char *)v16 + 140) & 0x40) == 0)
  {
    v100(0, 0xD000000000000017, 0x80000001009BD9A0, 0);
    return swift_release();
  }
  if (!v95)
  {
    if (sub_1005152D8())
    {
      uint64_t v101 = v92;
      uint64_t v102 = v94;
      uint64_t v103 = v93;
      uint64_t v104 = v97;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = (void *)swift_dynamicCastClassUnconditional();
      uint64_t v35 = v91;
      uint64_t v36 = *(void *)(v91 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v86, 1, 1, v91);
      uint64_t v101 = v35;
      uint64_t v102 = v90;
      uint64_t v103 = v87;
      uint64_t v104 = v89;
      type metadata accessor for FPFSID();
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      uint64_t v38 = (uint64_t)v76;
      v37(v76, v28, v35);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = sub_10064C8FC(v38);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v41 = swift_allocBox();
      uint64_t v43 = v42;
      uint64_t v44 = *(int *)(TupleTypeMetadata2 + 48);
      v37(v42, v28, v35);
      swift_storeEnumTagMultiPayload();
      *(void *)&v43[v44] = v16[15];
      swift_retain();
      uint64_t v45 = v86;
      sub_1008B88A4(v97, v86, v39, v41 | 0x8000000000000004, (uint64_t)sub_1008BCED4, v70);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v45, v80);
    }
    else
    {
      uint64_t v98 = (*(uint64_t (**)(void))(*(void *)v98 + 176))();
      uint64_t v101 = v94;
      uint64_t v102 = v92;
      uint64_t v103 = v97;
      uint64_t v104 = v93;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = (void *)swift_dynamicCastClassUnconditional();
      uint64_t v46 = v90;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v88, 1, 1, v90);
      uint64_t v47 = v91;
      uint64_t v101 = v46;
      uint64_t v102 = v91;
      uint64_t v103 = v89;
      uint64_t v104 = v87;
      type metadata accessor for FPFSID();
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      uint64_t v49 = (uint64_t)v78;
      v48(v78, v28, v47);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = sub_10064C8FC(v49);
      uint64_t v51 = swift_getTupleTypeMetadata2();
      uint64_t v52 = swift_allocBox();
      uint64_t v54 = v53;
      uint64_t v55 = *(int *)(v51 + 48);
      v48(v53, v28, v47);
      swift_storeEnumTagMultiPayload();
      *(void *)&v54[v55] = v16[15];
      uint64_t v56 = v88;
      sub_1008B88A4(v97, v88, v50, v52 | 0x8000000000000004, (uint64_t)sub_1008BCED4, v70);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v56, v83);
    }
    uint64_t v57 = v100;
    type metadata accessor for RequestContinuation();
    uint64_t v58 = swift_allocObject();
    v57(v58, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  sub_1000DEDD8(v28, v96);
  uint64_t v32 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v23, v96, v20);
  uint64_t v33 = v84;
  uint64_t v34 = *(void *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v23, 1, v84) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v20);
  }
  else
  {
    uint64_t v59 = v72;
    uint64_t v60 = v71;
    uint64_t v61 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v23, v73);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v33);
    int v62 = v60[*(int *)(v61 + 52)];
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    if (v62 == 2)
    {
      v100(0, 0, 0, 0);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v96, v20);
    }
  }
  uint64_t v101 = v92;
  uint64_t v102 = v94;
  uint64_t v103 = v93;
  uint64_t v104 = v97;
  type metadata accessor for JobResult();
  uint64_t v63 = v16[15];
  uint64_t v64 = v16[16];
  uint64_t v65 = v16[17];
  swift_allocObject();
  uint64_t v66 = sub_1008AA720(v28, v63, v64, v65, 0x400000);
  sub_1004D4360(v75, v66);
  swift_release();
  sub_1000DBD10();
  uint64_t v67 = swift_allocError();
  *uint64_t v68 = 3;
  v100(0, 0, 0, v67);
  swift_release();
  swift_errorRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v96, v20);
}

uint64_t sub_1008BA630(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 104);
  uint64_t v22 = *(void *)(*(void *)a1 + 80);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v6 = type metadata accessor for PersistenceTrigger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v23 = v11;
  uint64_t v24 = AssociatedConformanceWitness;
  uint64_t v25 = v13;
  type metadata accessor for ReconciliationID();
  uint64_t v14 = &v9[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v15 = v19;
  unsigned char *v9 = sub_1007B24CC();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, v15 + *(void *)(*(void *)v15 + 576), AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v20;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *))(*(void *)a1 + 312))(v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v21 + 8))(v9, v16);
}

uint64_t type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008BA8F8()
{
  return 0xD000000000000018;
}

void sub_1008BA914(uint64_t a1, uint64_t a2, void (*a3)(void, void), void (*a4)(void, unint64_t, unint64_t, id), uint64_t a5)
{
  uint64_t v226 = a5;
  double v227 = a4;
  int64_t v213 = a3;
  uint64_t v207 = a2;
  uint64_t v224 = (void (*)(char *, uint64_t))*v5;
  uint64_t v7 = *((void *)v224 + 77);
  uint64_t v8 = *((void *)v224 + 75);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *((void *)v224 + 78);
  uint64_t v225 = v5;
  unint64_t v11 = *((void *)v224 + 76);
  uint64_t v12 = v10;
  uint64_t v13 = a1;
  uint64_t v228 = AssociatedTypeWitness;
  uint64_t v229 = swift_getAssociatedTypeWitness();
  uint64_t v205 = v229;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v230 = AssociatedConformanceWitness;
  uint64_t v231 = swift_getAssociatedConformanceWitness();
  uint64_t v203 = v231;
  uint64_t v189 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v188 = sub_10096C890();
  uint64_t v187 = *(void *)(v188 - 8);
  uint64_t v14 = __chkstk_darwin(v188);
  uint64_t v186 = (char *)v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v191 = (char *)v181 - v17;
  uint64_t v209 = AssociatedTypeWitness;
  uint64_t v208 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v16);
  uint64_t v193 = (char *)v181 - v18;
  uint64_t v201 = sub_10096B0E0();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v206 = (char *)v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for SnapshotMutation();
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v197 = (char *)v181 - v20;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  uint64_t v230 = v7;
  uint64_t v231 = v12;
  uint64_t v21 = v12;
  uint64_t v195 = type metadata accessor for ReconciliationMutation();
  uint64_t v196 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v194 = (char *)v181 - v22;
  uint64_t v23 = type metadata accessor for SnapshotItem();
  uint64_t v211 = sub_10096C890();
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  uint64_t v219 = (char *)v181 - v24;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  uint64_t v230 = v7;
  uint64_t v231 = v21;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v26 = sub_10096C890();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  char v30 = (char *)v181 - v29;
  uint64_t v223 = v25;
  uint64_t v222 = *(void *)(v25 - 8);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v212 = (uint64_t)v181 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)v181 - v34;
  uint64_t v218 = *(void *)(v23 - 8);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v202 = (uint64_t)v181 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v190 = (char *)v181 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  BOOL v216 = (char *)v181 - v41;
  __chkstk_darwin(v40);
  uint64_t v217 = (char *)v181 - v42;
  uint64_t v220 = v8;
  uint64_t v221 = v7;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  unint64_t v214 = v11;
  uint64_t v215 = v21;
  uint64_t v230 = v7;
  uint64_t v231 = v21;
  type metadata accessor for ConcreteDatabase();
  uint64_t v43 = swift_dynamicCastClass();
  if (!v43)
  {
    id v46 = (id)FPNotSupportedError();
    v227(0, 0xD000000000000013, 0x80000001009BD880, v46);

    return;
  }
  uint64_t v44 = v43;
  uint64_t v185 = v35;
  uint64_t v184 = v23;
  uint64_t v45 = (uint64_t)v225 + *((void *)v224 + 72);
  swift_retain();
  sub_1000DEDD8(v45, (uint64_t)v30);
  uint64_t v183 = v13;
  uint64_t v47 = v222;
  uint64_t v48 = v223;
  int v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v222 + 48))(v30, 1, v223);
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
    v227(0, 0xD00000000000001BLL, 0x80000001009BD8A0, 0);
    swift_release();
    return;
  }
  uint64_t v182 = v45;
  uint64_t v50 = v185;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v185, v30, v48);
  uint64_t v51 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v52 = (void (*)(void, unint64_t, unint64_t, void))v227;
  if ((v50[*(int *)(v51 + 36)] & 0x10) == 0)
  {
    v227(0, 0xD00000000000001BLL, 0x80000001009BD8C0, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v48);
    return;
  }
  uint64_t v53 = *(void *)(v183 + 32);
  uint64_t v54 = v182;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v53 + 312))(v182);
  if (v56) {
    goto LABEL_11;
  }
  uint64_t v57 = v55;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v53 + 240))(v54, 1);
  uint64_t v58 = v57;
  v181[1] = v53;
  uint64_t v59 = v218;
  uint64_t v60 = v219;
  uint64_t v61 = v184;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v219, 1, v184) == 1)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v60, v211);
LABEL_11:
    v52(0, 0xD00000000000001BLL, 0x80000001009BD8A0, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v185, v48);
    return;
  }
  uint64_t v211 = v44;
  int v62 = v216;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v216, v60, v61);
  uint64_t v219 = *(char **)(v59 + 16);
  v181[0] = v59 + 16;
  ((void (*)(char *, char *, uint64_t))v219)(v217, v62, v61);
  uint64_t v63 = &v62[*(int *)(v61 + 48)];
  uint64_t v210 = type metadata accessor for ItemMetadata();
  LODWORD(v63) = v63[*(int *)(v210 + 60)];
  uint64_t v64 = v212;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v212, v185, v48);
  if (v63 == 1)
  {
    BOOL v65 = sub_100827AAC(v48);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v66(v64, v48);
    if (!v65 && !v58)
    {
      uint64_t v222 = v47 + 8;
      uint64_t v224 = (void (*)(char *, uint64_t))v66;
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for JobResult();
      uint64_t v67 = v209;
      uint64_t v228 = v209;
      uint64_t v229 = v205;
      uint64_t v230 = AssociatedConformanceWitness;
      uint64_t v231 = v203;
      type metadata accessor for ReconciliationID();
      uint64_t v68 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v208 + 16);
      uint64_t v70 = (uint64_t)v194;
      uint64_t v71 = v182;
      v69(v194, v182, v67);
      swift_storeEnumTagMultiPayload();
      *(void *)(v70 + v68) = 3;
      uint64_t v72 = v195;
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = v213;
      sub_100591758((uint64_t)v213, v70);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v70, v72);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v75 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v76 = (uint64_t)v197;
      uint64_t v77 = &v197[*(int *)(TupleTypeMetadata3 + 64)];
      v69(v197, v71, v67);
      *(unsigned char *)(v76 + v75) = 1;
      *(void *)uint64_t v77 = 0xD000000000000029;
      *((void *)v77 + 1) = 0x80000001009BD950;
      uint64_t v78 = v199;
      swift_storeEnumTagMultiPayload();
      sub_1005917A0((uint64_t)v73, v76);
      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v76, v78);
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      uint64_t v79 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v81 = v80;
      uint64_t v82 = *(void (**)(char *, uint64_t))(v200 + 8);
      uint64_t v83 = v201;
      v82(v79, v201);
      double v84 = v81 * 1000000000.0;
      if ((~COERCE__INT64(v81 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v84 > -9.22337204e18)
        {
          if (v84 < 9.22337204e18)
          {
            uint64_t v85 = sub_1003A9380(v182, 0, (uint64_t)v84, 0);
            sub_1004D4360((uint64_t)v213, v85);
            swift_release();
            uint64_t v86 = v225[17];
            if ((v86 & 0x4000) == 0) {
              v225[17] = v86 | 0x4000;
            }
            uint64_t v228 = v220;
            uint64_t v229 = v214;
            uint64_t v230 = v221;
            uint64_t v231 = v215;
            type metadata accessor for DiskImport.ContinueDiskImport();
            char v87 = v193;
            sub_10085378C();
            uint64_t v88 = v206;
            sub_10096B0D0();
            sub_10096B080();
            double v90 = v89;
            v82(v88, v83);
            double v91 = v90 * 1000000000.0;
            if ((~COERCE__INT64(v90 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              uint64_t v92 = v224;
              if (v91 > -9.22337204e18)
              {
                if (v91 < 9.22337204e18)
                {
                  uint64_t v93 = sub_1003A9380(v87, 0x2000000000000000, (uint64_t)v91, 0x4000);
                  (*(void (**)(char *, uint64_t))(v208 + 8))(v87, v209);
                  sub_1004D4360((uint64_t)v213, v93);
                  swift_release();
                  v227(0, 0x6C6169726574616DuLL, 0xEC00000064657A69, 0);
                  swift_release();
                  uint64_t v94 = *(void (**)(char *, uint64_t))(v218 + 8);
                  uint64_t v95 = v184;
                  v94(v216, v184);
                  v92(v185, v223);
LABEL_41:
                  v94(v217, v95);
                  return;
                }
                goto LABEL_63;
              }
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v61 = v184;
    uint64_t v59 = v218;
  }
  else
  {
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v66(v64, v48);
  }
  if (v207)
  {
    if (v58)
    {
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for JobResult();
      uint64_t v96 = sub_1008BCD10(v182, v225[15], v225[16], v225[17], 0x10000);
      sub_1004D4360((uint64_t)v213, v96);
      swift_release();
      sub_1000DBD10();
      uint64_t v97 = swift_allocError();
      unsigned char *v98 = 3;
      v227(0, 0xD000000000000023, 0x80000001009BD8E0, (id)v97);
      swift_errorRelease();
      swift_release();
      uint64_t v99 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v100 = v184;
      v99(v216, v184);
      v66((uint64_t)v185, v223);
      v99(v217, v100);
      return;
    }
    uint64_t v109 = v223;
    uint64_t v110 = v185;
    BOOL v111 = sub_100827AAC(v223);
    uint64_t v112 = (void (*)(void, uint64_t, unint64_t, void))v227;
    if (!v111)
    {
      uint64_t v224 = (void (*)(char *, uint64_t))v66;
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      uint64_t v113 = type metadata accessor for JobResult();
      uint64_t v114 = v209;
      uint64_t v228 = v209;
      uint64_t v229 = v205;
      uint64_t v230 = AssociatedConformanceWitness;
      uint64_t v231 = v203;
      type metadata accessor for ReconciliationID();
      uint64_t v115 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v208 + 16);
      uint64_t v117 = (uint64_t)v194;
      uint64_t v118 = v182;
      v116(v194, v182, v114);
      swift_storeEnumTagMultiPayload();
      *(void *)(v117 + v115) = 3;
      uint64_t v119 = v195;
      swift_storeEnumTagMultiPayload();
      uint64_t v120 = v213;
      sub_100591758((uint64_t)v213, v117);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v117, v119);
      uint64_t v121 = swift_getTupleTypeMetadata3();
      uint64_t v122 = *(int *)(v121 + 48);
      uint64_t v123 = (uint64_t)v197;
      uint64_t v124 = &v197[*(int *)(v121 + 64)];
      v116(v197, v118, v114);
      *(unsigned char *)(v123 + v122) = 1;
      *(void *)uint64_t v124 = 0xD000000000000036;
      *((void *)v124 + 1) = 0x80000001009BD910;
      uint64_t v125 = v199;
      swift_storeEnumTagMultiPayload();
      sub_1005917A0((uint64_t)v120, v123);
      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v123, v125);
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      int v126 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v128 = v127;
      uint64_t v129 = *(void (**)(char *, uint64_t))(v200 + 8);
      uint64_t v130 = v201;
      v129(v126, v201);
      double v131 = v128 * 1000000000.0;
      if ((~COERCE__INT64(v128 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      if (v131 <= -9.22337204e18)
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v109 = v223;
      uint64_t v66 = (void (*)(uint64_t, uint64_t))v224;
      uint64_t v110 = v185;
      if (v131 >= 9.22337204e18)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      uint64_t v132 = sub_1003A9380(v182, 0, (uint64_t)v131, 0);
      uint64_t v219 = (char *)v113;
      sub_1004D4360((uint64_t)v213, v132);
      swift_release();
      uint64_t v133 = v225[17];
      if ((v133 & 0x4000) == 0) {
        v225[17] = v133 | 0x4000;
      }
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for DiskImport.ContinueDiskImport();
      long long v134 = v193;
      sub_10085378C();
      uint64_t v135 = v206;
      sub_10096B0D0();
      sub_10096B080();
      double v137 = v136;
      v129(v135, v130);
      double v138 = v137 * 1000000000.0;
      if ((~COERCE__INT64(v137 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_67;
      }
      if (v138 <= -9.22337204e18)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      if (v138 >= 9.22337204e18)
      {
LABEL_69:
        __break(1u);
        return;
      }
      uint64_t v139 = sub_1003A9380(v134, 0x2000000000000000, (uint64_t)v138, 0x4000);
      (*(void (**)(char *, uint64_t))(v208 + 8))(v134, v209);
      sub_1004D4360((uint64_t)v213, v139);
      swift_release();
      uint64_t v112 = (void (*)(void, uint64_t, unint64_t, void))v227;
    }
    v112(0, 0x6C6169726574616DLL, 0xEC00000064657A69, 0);
    swift_release();
    uint64_t v94 = *(void (**)(char *, uint64_t))(v218 + 8);
    uint64_t v95 = v184;
    v94(v216, v184);
    v66((uint64_t)v110, v109);
    goto LABEL_41;
  }
  uint64_t v101 = *(void (**)(void, void))(v59 + 8);
  uint64_t v218 = v59 + 8;
  int64_t v213 = v101;
  v101(v216, v61);
  v66((uint64_t)v185, v223);
  uint64_t v102 = v209;
  uint64_t v228 = v209;
  uint64_t v229 = v205;
  uint64_t v230 = AssociatedConformanceWitness;
  uint64_t v231 = v203;
  type metadata accessor for ReconciliationID();
  sub_1000D2B88();
  uint64_t v103 = swift_getTupleTypeMetadata2();
  uint64_t v104 = swift_allocBox();
  uint64_t v106 = v105;
  uint64_t v107 = *(int *)(v103 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v105, v182, v102);
  swift_storeEnumTagMultiPayload();
  *(void *)(v106 + v107) = [self requestForSelf];
  unint64_t v214 = v104 | 0x4000000000000000;
  uint64_t v215 = v104;
  uint64_t v108 = *(uint64_t (**)(char *, uint64_t))(**(void **)(v183 + 24) + 344);
  uint64_t v228 = v108(v217, 1);
  uint64_t v140 = TupleTypeMetadata2;
  uint64_t v141 = sub_10096C1C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v143 = v191;
  uint64_t v212 = v141;
  uint64_t v209 = WitnessTable;
  sub_10096C450();
  swift_bridgeObjectRelease();
  uint64_t v144 = *(void *)(v140 - 8);
  uint64_t v208 = *(void *)(v144 + 48);
  uint64_t v207 = v144 + 48;
  int v145 = ((uint64_t (*)(char *, uint64_t, uint64_t))v208)(v143, 1, v140);
  if (v145 == 1)
  {
    (*(void (**)(char *, uint64_t))(v187 + 8))(v143, v188);
    uint64_t v146 = v190;
    ((void (*)(char *, char *, uint64_t))v219)(v190, v217, v184);
    uint64_t v147 = v213;
    goto LABEL_46;
  }
  uint64_t v148 = &v143[*(int *)(TupleTypeMetadata2 + 48)];
  unsigned int v149 = v143;
  unsigned int v150 = *v148;
  uint64_t v152 = (void (*)(void, void))*((void *)v148 + 1);
  uint64_t v151 = *((void *)v148 + 2);
  uint64_t v222 = *((void *)v148 + 3);
  uint64_t v223 = v151;
  uint64_t v153 = *((void *)v148 + 4);
  int v154 = (void (*)(char *, uint64_t))*((void *)v148 + 5);
  int v155 = v148[48];
  uint64_t v157 = *((void *)v148 + 7);
  uint64_t v156 = (char *)*((void *)v148 + 8);
  uint64_t v220 = v157;
  uint64_t v221 = v153;
  BOOL v216 = v156;
  (*(void (**)(char *))(*(void *)(v189 - 8) + 8))(v149);
  uint64_t v146 = v190;
  ((void (*)(char *, char *, uint64_t))v219)(v190, v217, v184);
  uint64_t v224 = v154;
  BOOL v172 = v154 == (void (*)(char *, uint64_t))1;
  uint64_t v147 = v213;
  if (v172)
  {
LABEL_46:
    uint64_t v228 = v108(v146, 0);
    uint64_t v158 = v186;
    sub_10096C450();
    swift_bridgeObjectRelease();
    uint64_t v159 = v147;
    v147((uint64_t)v146, v184);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v208)(v158, 1, TupleTypeMetadata2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v187 + 8))(v158, v188);
      unsigned int v150 = 0;
      uint64_t v152 = 0;
      uint64_t v222 = 0;
      uint64_t v223 = 0;
      uint64_t v220 = 0;
      uint64_t v221 = 0;
      int v155 = 0;
      BOOL v216 = 0;
      uint64_t v160 = 1;
    }
    else
    {
      uint64_t v161 = &v158[*(int *)(TupleTypeMetadata2 + 48)];
      unsigned int v150 = *v161;
      uint64_t v152 = (void (*)(void, void))*((void *)v161 + 1);
      uint64_t v162 = *((void *)v161 + 2);
      uint64_t v222 = *((void *)v161 + 3);
      uint64_t v223 = v162;
      uint64_t v163 = *((void *)v161 + 4);
      uint64_t v160 = *((void *)v161 + 5);
      int v155 = v161[48];
      uint64_t v165 = *((void *)v161 + 7);
      uint64_t v164 = (char *)*((void *)v161 + 8);
      uint64_t v220 = v165;
      uint64_t v221 = v163;
      BOOL v216 = v164;
      (*(void (**)(char *))(*(void *)(v189 - 8) + 8))(v158);
    }
    goto LABEL_49;
  }
  uint64_t v159 = v213;
  v213(v146, v184);
  uint64_t v160 = (uint64_t)v224;
LABEL_49:
  int v166 = v155;
  uint64_t v167 = v150;
  uint64_t v168 = v217;
  uint64_t v169 = v184;
  ((void (*)(uint64_t, char *, uint64_t))v219)(v202, v217, v184);
  char v170 = v168[*(int *)(v169 + 48) + *(int *)(v210 + 64)];
  int64_t v213 = v152;
  uint64_t v212 = v167;
  uint64_t v224 = (void (*)(char *, uint64_t))v160;
  if (v170)
  {
    int v171 = 1;
  }
  else
  {
    BOOL v172 = v160 != 1 && v166 == 6;
    int v171 = v172;
  }
  uint64_t v173 = (void (*)(void))v227;
  double v174 = v225;
  BOOL v175 = v225[17] == 0x40000000;
  double v176 = (void *)swift_allocObject();
  uint64_t v177 = v183;
  v176[2] = v211;
  v176[3] = v177;
  v176[4] = v174;
  swift_retain_n();
  swift_retain();
  uint64_t v178 = v184;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v180 = v202;
  sub_1000BFD68(v202, v171, v175, v214, (uint64_t)sub_1008BCD88, (uint64_t)v176, v178, v179);
  swift_release();
  v159(v180, v178);
  type metadata accessor for RequestContinuation();
  swift_allocObject();
  v173();
  swift_release();
  swift_release();
  sub_1008BCD94(v212, (uint64_t)v213, v223, v222, v221, (uint64_t)v224);
  swift_release();
  v159((uint64_t)v217, v178);
}

uint64_t sub_1008BC660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)(a2 + 32) + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a2;
  v9[4] = a1;
  v9[5] = a4;
  uint64_t v10 = *(void (**)(uint64_t (*)(), void *))(*(void *)v8 + 672);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  v10(sub_1008BCE08, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_1008BC764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a4;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_retain();
  sub_10035B320((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)Filename.init(rawValue:), 0, (uint64_t)sub_1008BCEB0, (uint64_t)v8);

  return swift_release();
}

void sub_1008BC85C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 576);
  uint64_t v9 = *(void *)(*(void *)a1 + 584);
  uint64_t v10 = *(void *)(*(void *)a1 + 600);
  uint64_t v35 = *(void *)(*(void *)a1 + 592);
  uint64_t v36 = v8;
  uint64_t v42 = v8;
  uint64_t v43 = v9;
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v44 = v35;
  uint64_t v45 = v10;
  uint64_t v11 = type metadata accessor for PersistenceTrigger();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  __chkstk_darwin(v11);
  uint64_t v39 = (char *)&v32 - v12;
  uint64_t v13 = sub_10096B0E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006BF104();
  if (!v4)
  {
    if (!a2)
    {
LABEL_7:
      uint64_t v32 = a3;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v25 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v27 = swift_getAssociatedConformanceWitness();
      uint64_t v42 = AssociatedTypeWitness;
      uint64_t v43 = v25;
      uint64_t v44 = AssociatedConformanceWitness;
      uint64_t v45 = v27;
      type metadata accessor for ReconciliationID();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v29 = v39;
      char v30 = &v39[*(int *)(TupleTypeMetadata2 + 48)];
      *uint64_t v29 = sub_1007B24CC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v30, &a4[*(void *)(*(void *)a4 + 576)], AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = v41;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *))(*(void *)v32 + 312))(v29);
      (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v29, v31);
      return;
    }
    uint64_t v17 = (uint64_t)&a4[*(void *)(*(void *)a4 + 576)];
    uint64_t v19 = *((void *)a4 + 15);
    uint64_t v18 = *((void *)a4 + 16);
    uint64_t v33 = *((void *)a4 + 17);
    uint64_t v34 = v18;
    swift_allocObject();
    uint64_t v20 = sub_1008AA720(v17, v19, v34, v33, 0x10000);
    sub_10096B0D0();
    sub_10096B080();
    double v22 = v21;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    double v23 = v22 * 1000000000.0;
    if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v23 > -9.22337204e18)
      {
        if (v23 < 9.22337204e18)
        {
          sub_10059C450(v20);
          swift_release();
          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t type metadata accessor for Materialization.MaterializeIgnoredItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008BCD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008BCD10(a1, a2, a3, a4, 32);
}

uint64_t sub_1008BCD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008BCD10(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_1008BCD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008AA720(a1, a2, a3, a4, a5);
}

uint64_t sub_1008BCD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008BCD10(a1, a2, a3, a4, 0x400000);
}

uint64_t sub_1008BCD88(uint64_t a1)
{
  return sub_1008BC660(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1008BCD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    swift_errorRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008BCDDC()
{
  return sub_1008BCE40((void (*)(void))&_swift_release, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1008BCE08()
{
  return sub_1008BC764(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1008BCE14()
{
  return sub_1008BCE40((void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1008BCE40(void (*a1)(void), void (*a2)(void))
{
  swift_release();
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));
  swift_release();

  return swift_deallocObject();
}

void sub_1008BCEB0()
{
  sub_1008BC85C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1008BCED4()
{
  return sub_1008BA630(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1008BCEDC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(sub_10096C890() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v3, AssociatedTypeWitness); {
  swift_release();
  }
  sub_1008BD058(*(void *)(v0 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

unint64_t sub_1008BD058(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008BD140(unint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(sub_10096C890() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (void *)v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = v1[13];
  uint64_t v10 = *(void **)((char *)v1 + v5);
  unint64_t v11 = *(void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008B8B3C(a1, v6, v7, v8, v9, (uint64_t)v1 + v4, v10, v11);
}

uint64_t sub_1008BD214()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v3 = *(void *)(sub_10096D510() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)
      + ((((((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v10 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v6 = v0 + v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, AssociatedTypeWitness)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, AssociatedTypeWitness);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v5, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v5, AssociatedTypeWitness); {
  swift_release();
  }
  sub_1008BD058(*(void *)(v0 + ((((v10 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_1008BD4E4()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_10096C890();
  sub_100033BE8((uint64_t *)&unk_100ACB6B0);
  uint64_t v2 = *(void *)(sub_10096D510() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + v6 + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v1 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008B8F38((char *)(v0 + v3), *(uint64_t **)(v0 + v4), *(void *)(v0 + v5), *(uint64_t (**)(uint64_t))(v0 + v6), *(void *)(v0 + v6 + 8), (char *)(v0 + v7), *(void *)(v0 + v8), *(void *)(v0 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008BD64C()
{
  return sub_1008B7380(0, *(void *)(v0 + 24));
}

uint64_t sub_1008BD67C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008BD6C4(uint64_t a1)
{
  return sub_1008B8410(a1, *(uint64_t **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1008BD6D4(char a1, char a2)
{
  return sub_1008B8808(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1008BD6E0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008BD720()
{
  return sub_1008B7458(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for Materialization()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008BD75C()
{
  return sub_10096CB30();
}

unint64_t sub_1008BD7B0()
{
  return 0xD000000000000155;
}

unint64_t sub_1008BD7D0()
{
  return 0xD000000000000077;
}

unint64_t sub_1008BD7EC()
{
  return 0xD000000000000058;
}

unint64_t sub_1008BD808()
{
  return 0xD000000000000038;
}

unint64_t sub_1008BD824()
{
  return 0xD0000000000000C5;
}

unint64_t sub_1008BD840()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1008BD85C()
{
  return 0xD000000000000019;
}

uint64_t sub_1008BD878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v18 = 0;
  char v17 = 2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v17;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v18;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CB238;
  *(void *)(v9 + 24) = v8;
  v16[4] = sub_1008CB3DC;
  v16[5] = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1008BE738;
  v16[3] = &unk_100AA4398;
  uint64_t v10 = _Block_copy(v16);
  swift_retain();
  swift_release();
  unsigned int v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    char v14 = v17;
    if (v17 != 2)
    {
      swift_release();
      char v15 = v14 & 1;
      return v15 & 1;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    swift_release();
    return v15 & 1;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1008BDA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v19 = 0;
  unsigned int v17 = 0;
  __int16 v18 = 256;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v17;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CAF30;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1008CB3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1008BE738;
  aBlock[3] = &unk_100AA3E20;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unsigned int v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v19) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if ((v18 & 0x100) == 0)
    {
      uint64_t v14 = v17;
      char v15 = v18;
      swift_release();
      return v14 | ((unint64_t)(v15 & 1) << 32);
    }
    goto LABEL_11;
  }
  if (v19)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1008BDC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v17 = 0;
  char v15 = 0;
  char v16 = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v15;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v17;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CAF60;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1008CB3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1008BE738;
  aBlock[3] = &unk_100AA3E98;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v17) {
    int v13 = 0;
  }
  else {
    int v13 = (int)v11;
  }
  if (v13 == 1)
  {
    if ((v16 & 1) == 0)
    {
      id v11 = v15;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v17)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1008BDE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v18 = 0;
  char v15 = 0;
  unsigned __int8 v17 = 2;
  unsigned int v16 = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v15;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v18;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CB114;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1008CB3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1008BE738;
  aBlock[3] = &unk_100AA4140;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18) {
    int v13 = 0;
  }
  else {
    int v13 = (int)v11;
  }
  if (v13 == 1)
  {
    if (((v16 | ((unint64_t)v17 << 32)) & 0xFF00000000) != 0x200000000)
    {
      id v11 = v15;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1008BE02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v18 = 0;
  char v15 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v15;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v18;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CB288;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_1008CB3DC;
  void v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1008BE738;
  _OWORD v14[3] = &unk_100AA4410;
  uint64_t v10 = _Block_copy(v14);
  swift_retain();
  swift_release();
  unsigned int v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if (v16)
    {
      uint64_t v10 = v15;
      swift_release();
      return (uint64_t)v10;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release();
    return (uint64_t)v10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1008BE220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v16 = 0;
  char v15 = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v15;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v16;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008CAB70;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_1008CB3DC;
  void v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1008BE738;
  _OWORD v14[3] = &unk_100AA3B50;
  uint64_t v10 = _Block_copy(v14);
  swift_retain();
  swift_release();
  unsigned int v11 = [v4 performWithFlags:a1 action:v10];
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v16) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if ((v15 & 1) == 0) {
      return swift_release();
    }
    goto LABEL_11;
  }
  if (v16)
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1008BE3F8(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *a2 = v5;
  return 1;
}

uint64_t sub_1008BE474(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v6);
  int v4 = v6;
  *(unsigned char *)(a2 + 4) = BYTE4(v6);
  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 5) = 0;
  return 1;
}

uint64_t sub_1008BE4FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
  return 1;
}

uint64_t sub_1008BE57C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v7);
  int v4 = v8;
  char v5 = v9;
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 12) = v5;
  *(_DWORD *)(a2 + 8) = v4;
  return 1;
}

uint64_t sub_1008BE608(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr))
{
  a3(&v6);
  int v4 = v7;
  *(_OWORD *)a2 = v6;
  *(_DWORD *)(a2 + 16) = v4;
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1008BE694(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *a2 = 0;
  return 1;
}

uint64_t sub_1008BE70C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_1008BE738(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

id sub_1008BE77C(char *a1)
{
  uint64_t v3 = sub_10096B480();
  uint64_t v62 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v60 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - v9;
  unsigned int v11 = &v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL];
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 16);
  uint64_t v63 = v13;
  v12(&v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL], (uint64_t)a1);
  uint64_t v68 = _swiftEmptyArrayStorage;
  uint64_t v14 = v1;
  sub_10096AD50();
  id v15 = [self defaultManager];
  uint64_t v64 = v10;
  sub_10096AD20(v16);
  uint64_t v18 = v17;
  id v69 = 0;
  id v19 = [v15 contentsOfDirectoryAtURL:v17 includingPropertiesForKeys:0 options:1 error:&v69];

  id v20 = v69;
  if (v19)
  {
    uint64_t v21 = v63;
    uint64_t v22 = sub_10096C0A0();
    id v23 = v20;

    uint64_t v24 = sub_1008C8B98(v22, 0x6573616261746164, 0xEB0000000062642FLL);
    swift_bridgeObjectRelease();
    sub_100016518((size_t)v24);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v64, v21);
    *(void *)&v14[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_fpDatabaseURLs] = v68;

    uint64_t v26 = (objc_class *)type metadata accessor for FPFSSQLRestoreEngine(0);
    v65.receiver = v14;
    v65.super_class = v26;
    id v27 = objc_msgSendSuper2(&v65, "init");
    v25(a1, v21);
  }
  else
  {
    uint64_t v57 = v11;
    uint64_t v58 = v3;
    char v56 = v14;
    uint64_t v59 = a1;
    id v28 = v69;
    sub_10096ABF0();

    swift_willThrow();
    id v29 = (id)fpfs_current_or_default_log();
    char v30 = v61;
    sub_10096B490();
    uint64_t v31 = v60;
    uint64_t v32 = v63;
    uint64_t v33 = v64;
    ((void (*)(char *, char *, uint64_t))v12)(v60, v64, v63);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v34 = sub_10096B470();
    os_log_type_t v35 = sub_10096C5D0();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      id v69 = v55;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v51 = v37 + 4;
      os_log_t v53 = v34;
      sub_10096AD20((NSURL *)&v70);
      uint64_t v39 = v38;
      id v40 = objc_msgSend(v38, "fp_shortDescription");
      int v52 = v36;
      uint64_t v41 = v31;
      id v42 = v40;

      uint64_t v43 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v45 = v44;

      uint64_t v67 = sub_100719D44(v43, v45, (uint64_t *)&v69);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      id v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v41, v32);
      *(_WORD *)(v37 + 12) = 2112;
      swift_getErrorValue();
      id v47 = Error.prettyDescription.getter(v66);
      uint64_t v67 = (uint64_t)v47;
      sub_10096C8C0();
      *uint64_t v54 = v47;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v48 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v52, "Failed to enumerate %s: %@", (uint8_t *)v37, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v46(v59, v32);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v58);
      v46(v64, v32);
      v46(v57, v32);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      int v49 = *(void (**)(char *, uint64_t))(v6 + 8);
      v49(v31, v32);
      swift_errorRelease();
      v49(v59, v32);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v58);
      v49(v33, v32);
      v49(v57, v32);
    }

    type metadata accessor for FPFSSQLRestoreEngine(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v27;
}

uint64_t sub_1008BEF04(uint64_t a1, uint64_t a2)
{
  uint64_t v153 = a2;
  uint64_t v155 = a1;
  Class isa = (objc_class *)sub_10096AE50();
  uint64_t v143 = *((void *)isa - 1);
  uint64_t v3 = __chkstk_darwin(isa);
  uint64_t v5 = (char *)v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  int v154 = (char *)v139 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v157 = (char *)v139 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v169 = (char *)v139 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v139 - v13;
  int v171 = v15;
  __chkstk_darwin(v12);
  uint64_t v180 = (void *)((char *)v139 - v16);
  uint64_t v17 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v161 = (char *)v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v139 - v20;
  uint64_t v179 = sub_10096B480();
  uint64_t v22 = *(void *)(v179 - 8);
  uint64_t v23 = __chkstk_darwin(v179);
  v139[1] = (char *)v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  id v27 = (char *)v139 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v159 = (char *)v139 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  int v166 = (char *)v139 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v165 = (char *)v139 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v156 = (char *)v139 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v139 - v36;
  id v38 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v39 = sub_10096B470();
  os_log_type_t v40 = sub_10096C5D0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Checking if provider is iCloud Drive on FPFS", v41, 2u);
    swift_slowDealloc();
  }

  id v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v177 = v22 + 8;
  double v176 = v42;
  v42(v37, v179);
  uint64_t v43 = *(NSObject **)(v155 + 16);
  BOOL v172 = v14;
  uint64_t v140 = v27;
  v139[0] = v5;
  if (v43)
  {
    v182.super.Class isa = *(Class *)(v143 + 16);
    unint64_t v44 = v43;
    uint64_t v45 = v155 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
    uint64_t v175 = *(void *)(v143 + 72);
    unint64_t v46 = v143 + 56;
    id v47 = (unsigned int (**)(char *, uint64_t, objc_class *))(v143 + 48);
    os_log_t v48 = (void (**)(void *, char *, objc_class *))(v143 + 32);
    uint64_t v181 = (void (*)(char *, uint64_t, objc_class *))(v143 + 16);
    int v49 = (void (**)(void *, objc_class *))(v143 + 8);
    swift_bridgeObjectRetain();
    double v174 = (void (**)(char *, objc_class *))(v46 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    os_log_t v178 = v44;
    uint64_t v50 = v180;
    while (1)
    {
      ((void (*)(char *, uint64_t, objc_class *))v182.super.isa)(v21, v45, isa);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, objc_class *))v46;
      (*(void (**)(char *, void, uint64_t, objc_class *))v46)(v21, 0, 1, isa);
      if ((*v47)(v21, 1, isa) == 1) {
        break;
      }
      (*v48)(v50, v21, isa);
      sub_1008C0D20();
      (*v49)(v50, isa);
      v45 += v175;
      unint64_t v44 = ((char *)v44 - 1);
      if (!v44)
      {
        uint64_t v52 = (uint64_t)v172;
        os_log_t v53 = v161;
        uint64_t v43 = v178;
        goto LABEL_9;
      }
    }
    uint64_t v52 = (uint64_t)v172;
    os_log_t v53 = v161;
    uint64_t v43 = v178;
  }
  else
  {
    uint64_t v52 = (uint64_t)v14;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, objc_class *))(v143 + 56);
    swift_bridgeObjectRetain();
    os_log_t v53 = v161;
LABEL_9:
    v51(v21, 1, 1, isa);
  }
  uint64_t v54 = v155;
  swift_bridgeObjectRelease();
  if (v43)
  {
    uint64_t v181 = *(void (**)(char *, uint64_t, objc_class *))(v143 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v143 + 80);
    uint64_t v56 = v54 + ((v55 + 32) & ~v55);
    uint64_t v163 = *(void *)(v143 + 72);
    uint64_t v168 = v143 + 56;
    uint64_t v167 = (unsigned int (**)(char *, uint64_t, objc_class *))(v143 + 48);
    uint64_t v173 = (void (**)(uint64_t, char *, objc_class *))(v143 + 32);
    v182.super.Class isa = (Class)(v143 + 16);
    double v174 = (void (**)(char *, objc_class *))(v143 + 8);
    p_urlString = &v186._urlString;
    uint64_t v150 = v55 | 7;
    uint64_t v151 = (v55 + 24) & ~v55;
    unint64_t v149 = ((unint64_t)v171 + v151 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v148 = (v149 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v147 = (v148 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v146 = v147 + 8;
    int v145 = v184;
    swift_bridgeObjectRetain();
    int v171 = 0;
    uint64_t v170 = 0;
    uint64_t v164 = 0;
    *(void *)&long long v57 = 136315138;
    long long v152 = v57;
    uint64_t v141 = (char *)&type metadata for Any + 8;
    unint64_t v144 = 0x80000001009BDC30;
    uint64_t v58 = v159;
    uint64_t v162 = v51;
    while (1)
    {
      v181(v53, v56, isa);
      v51(v53, 0, 1, isa);
      if ((*v167)(v53, 1, isa) == 1) {
        break;
      }
      os_log_t v178 = v43;
      uint64_t v60 = *v173;
      (*v173)(v52, v53, isa);
      id v61 = objc_msgSend(self, "defaultManager", v139[0]);
      sub_10096AE10();
      NSString v62 = sub_10096BC00();
      swift_bridgeObjectRelease();
      unsigned int v63 = [v61 fileExistsAtPath:v62];

      id v64 = (id)fpfs_current_or_default_log();
      uint64_t v175 = v56;
      if (v63)
      {
        uint64_t v158 = v60;
        objc_super v65 = v156;
        sub_10096B490();
        uint64_t v66 = v169;
        v181(v169, v52, isa);
        uint64_t v67 = sub_10096B470();
        os_log_type_t v68 = sub_10096C5D0();
        if (os_log_type_enabled(v67, v68))
        {
          id v69 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)id v69 = v152;
          sub_10096AD20(&v186);
          uint64_t v71 = v70;
          id v72 = objc_msgSend(v70, "fp_shortDescription");

          uint64_t v73 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          uint64_t v74 = isa;
          unint64_t v76 = v75;

          v186.super.Class isa = (Class)sub_100719D44(v73, v76, aBlock);
          uint64_t v77 = v164;
          sub_10096C8C0();
          Class isa = v74;
          swift_bridgeObjectRelease();
          uint64_t v160 = *v174;
          v160(v169, v74);
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "Patching database at %s", v69, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v52 = (uint64_t)v172;
          swift_slowDealloc();

          v176(v156, v179);
          uint64_t v78 = v154;
        }
        else
        {
          uint64_t v160 = *v174;
          v160(v66, isa);

          v176(v65, v179);
          uint64_t v78 = v154;
          uint64_t v77 = v164;
        }
        uint64_t v91 = swift_allocObject();
        strcpy((char *)(v91 + 16), "openDatabase");
        *(unsigned char *)(v91 + 29) = 0;
        *(_WORD *)(v91 + 30) = -5120;
        uint64_t v92 = sub_1008C1F0C(v52);
        if (v77)
        {
          swift_bridgeObjectRelease();
          id v115 = (id)fpfs_current_or_default_log();
          uint64_t v116 = v140;
          sub_10096B490();
          v181(v78, v52, isa);
          swift_errorRetain();
          swift_retain();
          swift_errorRetain();
          uint64_t v117 = sub_10096B470();
          os_log_type_t v118 = sub_10096C5B0();
          int v119 = v118;
          if (os_log_type_enabled(v117, v118))
          {
            uint64_t v120 = swift_slowAlloc();
            v182.super.Class isa = isa;
            uint64_t v121 = v120;
            uint64_t v180 = (void *)swift_slowAlloc();
            uint64_t v181 = (void (*)(char *, uint64_t, objc_class *))swift_slowAlloc();
            aBlock[0] = (uint64_t)v181;
            *(_DWORD *)uint64_t v121 = 136315650;
            os_log_t v178 = v117;
            swift_beginAccess();
            uint64_t v122 = v77;
            uint64_t v123 = *(void *)(v91 + 16);
            unint64_t v124 = *(void *)(v91 + 24);
            swift_bridgeObjectRetain();
            uint64_t v185 = sub_100719D44(v123, v124, aBlock);
            LODWORD(v175) = v119;
            sub_10096C8C0();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v121 + 12) = 2080;
            sub_10096AD20((NSURL *)0x820);
            int v126 = v125;
            id v127 = objc_msgSend(v125, "fp_shortDescription");

            uint64_t v128 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
            unint64_t v130 = v129;

            uint64_t v185 = sub_100719D44(v128, v130, aBlock);
            sub_10096C8C0();
            swift_bridgeObjectRelease();
            double v131 = (void (*)(uint64_t, objc_class *))v160;
            v160(v78, v182.super.isa);
            *(_WORD *)(v121 + 22) = 2112;
            swift_getErrorValue();
            id v132 = Error.prettyDescription.getter(v184[8]);
            uint64_t v185 = (uint64_t)v132;
            sub_10096C8C0();
            void *v180 = v132;
            swift_errorRelease();
            swift_errorRelease();
            os_log_t v133 = v178;
            _os_log_impl((void *)&_mh_execute_header, v178, (os_log_type_t)v175, "[%s] Failed to open database at %s: %@", (uint8_t *)v121, 0x20u);
            sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            Class isa = v182.super.isa;
            swift_slowDealloc();

            v176(v140, v179);
          }
          else
          {
            swift_release();
            double v131 = (void (*)(uint64_t, objc_class *))v160;
            v160(v78, isa);
            swift_errorRelease();
            swift_errorRelease();

            v176(v116, v179);
            uint64_t v122 = v77;
          }
          swift_beginAccess();
          uint64_t v136 = *(void *)(v91 + 16);
          uint64_t v137 = *(void *)(v91 + 24);
          swift_errorRetain();
          swift_bridgeObjectRetain();
          uint64_t v138 = (uint64_t)v172;
          sub_1008C122C((uint64_t)v172, v122, -1, v136, v137);
          swift_bridgeObjectRelease();
          swift_errorRelease();
          v131(v138, isa);
          uint64_t v114 = *(void *)(v91 + 16);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1000705CC((uint64_t)v171);
          return v114;
        }
        uint64_t v93 = v92;
        uint64_t v94 = v52;
        uint64_t v95 = qword_100B0B1B0;
        uint64_t v96 = *(void **)((char *)v92 + qword_100B0B1B0);
        swift_beginAccess();
        *(void *)(v91 + 16) = 0xD000000000000010;
        *(void *)(v91 + 24) = v144;
        swift_retain();
        uint64_t v97 = v96;
        swift_bridgeObjectRelease();
        v186.super.Class isa = (Class)-1;
        uint64_t v98 = (char *)v180;
        v181((char *)v180, v94, isa);
        uint64_t v99 = swift_allocObject();
        *(void *)(v99 + 16) = v91;
        v158(v99 + v151, v98, isa);
        *(void *)(v99 + v149) = v93;
        *(void *)(v99 + v148) = v153;
        *(void *)(v99 + v147) = &v186;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1000705CC((uint64_t)v171);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = sub_1008CAA18;
        *(void *)(v100 + 24) = v99;
        v184[2] = sub_1008CAAE0;
        v184[3] = v100;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v184[0] = sub_1008BE738;
        v184[1] = &unk_100AA3AD8;
        uint64_t v101 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        int v171 = v97;
        unsigned __int8 v102 = [v97 performWithFlags:9 action:v101];
        _Block_release(v101);
        LOBYTE(v101) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v101)
        {
          __break(1u);
          return result;
        }
        if ((v102 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v114 = *(void *)(v91 + 16);
          Class v134 = v186.super.isa;
          sub_1008CAB0C();
          swift_allocError();
          Class *v135 = v134;
          swift_bridgeObjectRetain();

          sub_100486B80();
          swift_release_n();
          v160(v172, isa);
          swift_release();
          swift_release();
          return v114;
        }
        id v104 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v105 = sub_10096B470();
        os_log_type_t v106 = sub_10096C5D0();
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v107 = 0;
          _os_log_impl((void *)&_mh_execute_header, v105, v106, "Marking domain as needs-reindexing", v107, 2u);
          swift_slowDealloc();
        }

        v176(v165, v179);
        sub_1008C15E0((uint64_t)v172);
        id v108 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        uint64_t v109 = sub_10096B470();
        os_log_type_t v110 = sub_10096C5A0();
        if (os_log_type_enabled(v109, v110))
        {
          BOOL v111 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)BOOL v111 = 0;
          _os_log_impl((void *)&_mh_execute_header, v109, v110, "Flushing database...", v111, 2u);
          swift_slowDealloc();
        }

        v176(v166, v179);
        strcpy((char *)(v91 + 16), "flushDatabase");
        *(_WORD *)(v91 + 30) = -4864;
        swift_bridgeObjectRelease();
        id v112 = *(void **)((char *)v93 + v95);
        sub_1008BE220(5, (uint64_t)sub_1008C5604, 0);
        uint64_t v164 = 0;

        uint64_t v52 = (uint64_t)v172;
        sub_1008C122C((uint64_t)v172, 0, 0, 1701736292, 0xE400000000000000);

        sub_100486B80();
        swift_release_n();
        v160((char *)v52, isa);
        swift_release();
        int v171 = sub_1008CAA18;
        uint64_t v170 = v99;
        os_log_t v53 = v161;
        uint64_t v58 = v159;
      }
      else
      {
        sub_10096B490();
        uint64_t v79 = v157;
        v181(v157, v52, isa);
        double v80 = sub_10096B470();
        os_log_type_t v81 = sub_10096C5D0();
        if (os_log_type_enabled(v80, v81))
        {
          uint64_t v82 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v82 = v152;
          sub_10096AD20(&v182);
          double v84 = v83;
          id v85 = objc_msgSend(v83, "fp_shortDescription");

          uint64_t v86 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          char v87 = isa;
          uint64_t v88 = v52;
          unint64_t v90 = v89;

          *(void *)(v82 + 4) = sub_100719D44(v86, v90, aBlock);
          uint64_t v52 = v88;
          Class isa = v87;
          uint64_t v58 = v159;
          swift_bridgeObjectRelease();
          uint64_t v59 = *v174;
          (*v174)(v157, isa);
          _os_log_impl((void *)&_mh_execute_header, v80, v81, "No file at %s, so no need to patch.", (uint8_t *)v82, 0xCu);
          swift_arrayDestroy();
          os_log_t v53 = v161;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v59 = *v174;
          (*v174)(v79, isa);
        }
        v176(v58, v179);
        v59((char *)v52, isa);
      }
      uint64_t v51 = v162;
      uint64_t v56 = v175 + v163;
      uint64_t v43 = (os_log_t)((char *)v178 - 1);
      if (v178 == (os_log_t)1) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    int v171 = 0;
    uint64_t v170 = 0;
LABEL_32:
    v51(v53, 1, 1, isa);
  }
  uint64_t v113 = v171;
  swift_bridgeObjectRelease();
  sub_1000705CC((uint64_t)v113);
  return 0;
}

id sub_1008C0BA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLRestoreEngine(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008C0C5C()
{
  return type metadata accessor for FPFSSQLRestoreEngine(0);
}

uint64_t type metadata accessor for FPFSSQLRestoreEngine(uint64_t a1)
{
  return sub_100028978(a1, (uint64_t *)&unk_100ADDD70);
}

uint64_t sub_1008C0C84()
{
  uint64_t result = sub_10096AE50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1008C0D20()
{
  uint64_t v0 = sub_10096B480();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v37 - v9;
  sub_10096AD80();
  sub_10096AD80();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  uint64_t v12 = sub_100169D04((uint64_t)v10, 0);
  v11(v10, v4);
  if (!v12) {
    return;
  }
  NSString v13 = sub_10015A4E8();
  uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v16 = v15;

  if (v14 != 0xD00000000000002BLL || v16 != 0x8000000100997040)
  {
    char v17 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_6;
    }
    NSString v32 = sub_10015A4E8();
    uint64_t v33 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v35 = v34;

    if (v33 != 0xD000000000000032 || v35 != 0x8000000100997070)
    {
      char v36 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {

        return;
      }
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
LABEL_6:
  id v18 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v19 = v12;
  uint64_t v20 = sub_10096B470();
  os_log_type_t v21 = sub_10096C5A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v41 = v38;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v37 = v22 + 4;
    NSString v23 = sub_10015A4E8();
    uint64_t v24 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v39 = v1;
    unint64_t v26 = v25;

    uint64_t v40 = sub_100719D44(v24, v26, &v41);
    sub_10096C8C0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Importing domain in provider %s. Turning on iCloud Drive on FPFS.", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v0);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  id v27 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v28 = sub_10096BC00();
  swift_bridgeObjectRelease();
  id v29 = [v27 initWithSuiteName:v28];

  if (v29)
  {
    uint64_t v30 = (void *)FPICloudDriveOnFPFSEnabledUserDefaultsKey;
    if (([v29 BOOLForKey:FPICloudDriveOnFPFSEnabledUserDefaultsKey] & 1) == 0)
    {
      [v29 setInteger:0 forKey:FPICloudDriveOnFPFSLastBootTimestampUserDefaultsKey];
      id v31 = v30;
      [v29 setBool:1 forKey:v31];
    }
  }
}

void sub_1008C122C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  NSString v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - v14;
  sub_10096AD80();
  sub_10096AD80();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  id v18 = sub_100169D04((uint64_t)v15, 0);
  v16(v15, v9);
  if (v18)
  {
    NSString v19 = sub_10015A4E8();
    uint64_t v20 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v22 = v21;

    strcpy((char *)v27, "d2d_restore_");
    BYTE1(v27[3]) = 0;
    HIWORD(v27[3]) = -5120;
    v28._uint64_t countAndFlagsBits = v20;
    v28._object = v22;
    sub_10096BDC0(v28);
    swift_bridgeObjectRelease();
    NSString v17 = sub_10096BC00();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = sub_10096BC00();
  }
  id v23 = [self defaultManager];
  id v24 = [v23 sessionForProviderID:v17 version:0];

  if (v24)
  {
    sub_10002B7CC(&qword_100AD0BB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100973BA0;
    strcpy((char *)v27, "operationType");
    HIWORD(v27[3]) = -4864;
    sub_10096CB30();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = a4;
    *(void *)(inited + 80) = a5;
    strcpy((char *)v27, "missedItems");
    v27[3] = -352321536;
    swift_bridgeObjectRetain();
    sub_10096CB30();
    *(void *)(inited + 168) = &type metadata for Int;
    *(void *)(inited + 144) = a3;
    sub_1000936F0(inited);
    v26.super.Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    if (a2) {
      a2 = (void *)sub_10096ABE0();
    }
    [v24 postReportWithCategory:1 type:1 payload:v26.super.isa error:a2];
  }
}

uint64_t sub_1008C15E0(uint64_t a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v73 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v67 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  id v69 = (char *)&v62 - v6;
  __chkstk_darwin(v5);
  id v72 = (void (*)(char *, uint64_t))((char *)&v62 - v7);
  uint64_t v8 = sub_10096AE50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v66 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v68 = (char *)&v62 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v62 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v62 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  os_log_type_t v21 = (char *)&v62 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  id v24 = (char *)&v62 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  id v27 = (char *)&v62 - v26;
  __chkstk_darwin(v25);
  id v29 = (char *)&v62 - v28;
  uint64_t v71 = a1;
  sub_10096AD80();
  sub_10096AD80();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v8;
  v30(v27, v8);
  NSString v32 = (void (*)(char *, uint64_t))sub_100169D04((uint64_t)v29, 0);
  id v64 = v18;
  uint64_t v65 = v9;
  unsigned int v63 = v24;
  id v72 = v32;
  v30(v29, v8);
  uint64_t v33 = v9 + 8;
  if (v72)
  {
    uint64_t v34 = (char *)[self defaultManager];
    uint64_t v35 = v30;
    sub_10096AD80();
    sub_10096AD80();
    v30(v21, v8);
    char v36 = v63;
    sub_10096AD80();
    v30(v27, v8);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v37 = v64;
    sub_10096AD50();
    swift_bridgeObjectRelease();
    uint64_t v38 = v70;
    sub_10096AD50();
    sub_10096AE10();
    NSString v39 = sub_10096BC00();
    swift_bridgeObjectRelease();
    uint64_t v67 = v34;
    objc_msgSend(v34, "fp_createPathIfNeeded:", v39);

    id v40 = (id)fpfs_current_or_default_log();
    uint64_t v41 = v69;
    sub_10096B490();
    id v42 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    uint64_t v71 = v33;
    uint64_t v43 = v68;
    v42(v68, v38, v31);
    unint64_t v44 = sub_10096B470();
    os_log_type_t v45 = sub_10096C5D0();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      v76[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v46 = 136315138;
      uint64_t v47 = sub_10096AE10();
      uint64_t v75 = sub_100719D44(v47, v48, v76);
      uint64_t v37 = v64;
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      v30(v43, v31);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Marking domain as needing reindexing at %s", v46, 0xCu);
      swift_arrayDestroy();
      char v36 = v63;
      swift_slowDealloc();
      uint64_t v38 = v70;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v74);
    }
    else
    {
      v30(v43, v31);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v74);
    }
    id v57 = [objc_allocWithZone((Class)NSData) init];
    sub_10096AD20(v58);
    uint64_t v60 = v59;
    [v57 writeToURL:v59 atomically:0];

    v35(v38, v31);
    v35(v37, v31);
    return ((uint64_t (*)(char *, uint64_t))v35)(v36, v31);
  }
  else
  {
    id v72 = v30;
    id v49 = (id)fpfs_current_or_default_log();
    uint64_t v50 = v67;
    sub_10096B490();
    uint64_t v51 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v66, v71, v8);
    uint64_t v52 = sub_10096B470();
    os_log_type_t v53 = sub_10096C5B0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      v76[0] = swift_slowAlloc();
      uint64_t v71 = v33;
      *(_DWORD *)uint64_t v54 = 136315138;
      sub_1008CAB98();
      uint64_t v55 = sub_10096D220();
      uint64_t v75 = sub_100719D44(v55, v56, v76);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      v72(v51, v31);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "No providerID found for url %s", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v72(v51, v31);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v50, v74);
  }
}

void **sub_1008C1F0C(uint64_t a1)
{
  uint64_t v66 = a1;
  uint64_t v1 = sub_10002B7CC((uint64_t *)&unk_100AD63E0);
  __chkstk_darwin(v1 - 8);
  uint64_t v70 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10096AE50();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v71 = (char *)&v60 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - v14;
  __chkstk_darwin(v13);
  id v72 = (char *)&v60 - v16;
  sub_10096ACC0();
  uint64_t v67 = v15;
  sub_10096AD50();
  sub_10096AD50();
  aBlock[4] = sub_10002BFF4;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100006E10;
  aBlock[3] = &unk_100AA4320;
  uint64_t v74 = _Block_copy(aBlock);
  sub_10096AD80();
  uint64_t v65 = v10;
  sub_10096AD80();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  os_log_type_t v68 = v17;
  uint64_t v69 = v4 + 8;
  id v18 = (void *)sub_10096ACF0();
  unint64_t v20 = v19;
  uint64_t v62 = v3;
  v17(v10, v3);
  os_log_type_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v63 = v4 + 16;
  id v64 = v21;
  v21(v7, (uint64_t)v15, v3);
  type metadata accessor for DocumentWharf();
  swift_allocObject();
  uint64_t v22 = v74;
  _Block_copy(v74);
  uint64_t v23 = DocumentWharf.init(label:at:ioContext:targetQueue:reporter:)(v18, v20, (uint64_t)v7, v22, (unint64_t)&_mh_execute_header, 0, 0);
  id v24 = self;
  swift_retain();
  id v25 = [v24 defaultStore];
  uint64_t v26 = (int)[v25 softConcurrentOperationLimit];
  LODWORD(v7) = [v25 hardConcurrentOperationLimit];

  type metadata accessor for JobLimit();
  id v27 = (void *)swift_allocObject();
  v27[2] = 0;
  v27[3] = v26;
  _DWORD v27[4] = v26;
  v27[5] = (int)v7;
  id v28 = [v24 defaultStore];
  uint64_t v29 = (int)[v28 softConcurrentContentUpdateLimit];
  LODWORD(v26) = [v28 hardConcurrentContentUpdateLimit];

  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = 0;
  v30[3] = v29;
  v30[4] = v29;
  v30[5] = (int)v26;
  id v31 = [v24 defaultStore];
  uint64_t v32 = (int)[v31 softConcurrentMetadataOnlyUpdateLimit];
  LODWORD(v29) = [v31 hardConcurrentMetadataOnlyUpdateLimit];

  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = 0;
  void v33[3] = v32;
  v33[4] = v32;
  v33[5] = (int)v29;
  id v34 = [v24 defaultStore];
  uint64_t v35 = (int)[v34 softConcurrentProvideFileLimit];
  LODWORD(v32) = [v34 hardConcurrentProvideFileLimit];

  char v36 = (void *)swift_allocObject();
  void v36[2] = 0;
  v36[3] = v35;
  v36[4] = v35;
  v36[5] = (int)v32;
  type metadata accessor for RestoreUpgradeSchemaVFSFileTree(0);
  swift_allocObject();
  uint64_t v61 = v23;
  uint64_t v37 = (void *)sub_1008D4A84(v23, (uint64_t)v27, (uint64_t)v30, (uint64_t)v33, (uint64_t)v36);
  swift_retain();
  id v38 = [v24 defaultStore];
  uint64_t v39 = (int)[v38 softConcurrentOperationLimit];
  LODWORD(v33) = [v38 hardConcurrentOperationLimit];

  id v40 = (void *)swift_allocObject();
  void v40[2] = 0;
  v40[3] = v39;
  v40[4] = v39;
  void v40[5] = (int)v33;
  id v41 = [v24 defaultStore];
  uint64_t v42 = (int)[v41 softConcurrentContentUpdateLimit];
  LODWORD(v36) = [v41 hardConcurrentContentUpdateLimit];

  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = 0;
  v43[3] = v42;
  v43[4] = v42;
  v43[5] = (int)v36;
  id v44 = [v24 defaultStore];
  uint64_t v45 = (int)[v44 softConcurrentMetadataOnlyUpdateLimit];
  LODWORD(v32) = [v44 hardConcurrentMetadataOnlyUpdateLimit];

  unint64_t v46 = (void *)swift_allocObject();
  v46[2] = 0;
  v46[3] = v45;
  v46[4] = v45;
  void v46[5] = (int)v32;
  id v47 = [v24 defaultStore];
  uint64_t v48 = (int)[v47 softConcurrentProvideFileLimit];
  LODWORD(v32) = [v47 hardConcurrentProvideFileLimit];

  id v49 = (void *)swift_allocObject();
  v49[2] = 0;
  v49[3] = v48;
  v49[4] = v48;
  v49[5] = (int)v32;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  uint64_t v50 = sub_1008D4A50(v61, (uint64_t)v40, (uint64_t)v43, (uint64_t)v46, (uint64_t)v49);
  uint64_t v51 = (uint64_t)v65;
  uint64_t v52 = v62;
  v64(v65, v66, v62);
  uint64_t v53 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v54 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v70, 1, 1, v53);
  swift_retain();
  swift_retain();
  NSString v55 = sub_10096BC00();
  sub_10002B7CC((uint64_t *)&unk_100AD63F0);
  uint64_t v56 = swift_allocObject();
  id v57 = sub_1004F5FA8(v51, v37, v50, v54, 0, (void **)0x65726F74736572, 0xE700000000000000, 0xD000000000000019, 0x80000001009BE550, v55, 0, v56);
  swift_release();
  swift_release();
  swift_release();
  _Block_release(v74);
  uint64_t v58 = v68;
  v68(v71, v52);
  v58(v67, v52);
  v58(v72, v52);
  return v57;
}

uint64_t sub_1008C2760(char *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v192 = a5;
  uint64_t v193 = a6;
  uint64_t v195 = a4;
  uint64_t v197 = a3;
  uint64_t v202 = sub_10096B480();
  uint64_t v8 = *(void *)(v202 - 8);
  uint64_t v9 = __chkstk_darwin(v202);
  uint64_t v184 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  NSURL v186 = (char *)&v180 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v189 = (char *)&v180 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v191 = (char *)&v180 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v194 = (char *)&v180 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v196 = (char *)&v180 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v180 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  NSURL v182 = (char *)&v180 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v181 = (char *)&v180 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v183 = (char *)&v180 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v185 = (char *)&v180 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v187 = (char *)&v180 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v188 = (char *)&v180 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v190 = (char *)&v180 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  id v40 = (char *)&v180 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v180 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v180 - v44;
  uint64_t v201 = a2 + 16;
  id v46 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v47 = sub_10096B470();
  os_log_type_t v48 = sub_10096C5A0();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v199 = a2;
  if (v49)
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Disabling foreign keys...", v50, 2u);
    a2 = v199;
    swift_slowDealloc();
  }

  uint64_t v51 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v198 = v8 + 8;
  uint64_t v200 = v51;
  v51(v45, v202);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000012;
  *(void *)(a2 + 24) = 0x80000001009BDC50;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1008BD85C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA3B78;
  uint64_t v52 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  uint64_t v53 = [a1 executeSwift:v52 error:aBlock];
  _Block_release(v52);
  id v54 = aBlock[0];
  id v55 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_44;
  }
  if (!v53)
  {
    uint64_t v60 = (void *)sub_10096ABF0();

    swift_willThrow();
    id v61 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    uint64_t v62 = sub_10096B470();
    os_log_type_t v63 = sub_10096C5B0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v65 = (void *)swift_slowAlloc();
      uint64_t v196 = (char *)swift_slowAlloc();
      aBlock[0] = v196;
      *(_DWORD *)uint64_t v64 = 136315394;
      swift_beginAccess();
      uint64_t v66 = *(void *)(a2 + 16);
      unint64_t v67 = *(void *)(v199 + 24);
      swift_bridgeObjectRetain();
      v215[0] = (id)sub_100719D44(v66, v67, (uint64_t *)aBlock);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2112;
      swift_getErrorValue();
      id v68 = Error.prettyDescription.getter(v208);
      v215[0] = v68;
      a2 = v199;
      sub_10096C8C0();
      *uint64_t v65 = v68;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[%s] Failed to disable foreign keys: %@", (uint8_t *)v64, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      swift_errorRelease();
    }

    v200(v23, v202);
    swift_beginAccess();
    uint64_t v69 = *(void *)(a2 + 16);
    uint64_t v70 = *(void *)(a2 + 24);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    sub_1008C122C(v197, v60, -1, v69, v70);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  id v56 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v57 = sub_10096B470();
  os_log_type_t v58 = sub_10096C5A0();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Updating history table...", v59, 2u);
    swift_slowDealloc();
  }

  v200(v43, v202);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x80000001009BDC70;
  swift_bridgeObjectRelease();
  sub_1008C4BD8((uint64_t)v195);
  id v71 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  id v72 = sub_10096B470();
  os_log_type_t v73 = sub_10096C5A0();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Patching reconciliation table...", v75, 2u);
    a2 = v199;
    swift_slowDealloc();
  }

  v200(v40, v202);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000018;
  *(void *)(a2 + 24) = 0x80000001009BDC90;
  swift_bridgeObjectRelease();
  uint64_t v76 = v192;
  sub_1008C4D20(a1, v192);
  uint64_t v78 = v77;
  if (v77 >= 1)
  {
    uint64_t *v193 = v77;
    sub_1008CAB0C();
    uint64_t v79 = (void *)swift_allocError();
    uint64_t *v80 = v78;
    swift_willThrow();
    uint64_t v81 = v199;
    id v82 = (id)fpfs_current_or_default_log();
    uint64_t v83 = v194;
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    double v84 = sub_10096B470();
    os_log_type_t v85 = sub_10096C5B0();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      char v87 = (void *)swift_slowAlloc();
      uint64_t v199 = swift_slowAlloc();
      v215[0] = (id)v199;
      *(_DWORD *)uint64_t v86 = 136315394;
      swift_beginAccess();
      uint64_t v196 = a1;
      uint64_t v88 = *(void *)(v81 + 16);
      unint64_t v89 = *(void *)(v81 + 24);
      swift_bridgeObjectRetain();
      v213[0] = (id)sub_100719D44(v88, v89, (uint64_t *)v215);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2112;
      swift_getErrorValue();
      id v90 = Error.prettyDescription.getter(v207);
      v213[0] = v90;
      a1 = v196;
      sub_10096C8C0();
      *char v87 = v90;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%s] Failed to patch the reconciliation_table table: %@", (uint8_t *)v86, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v91 = v194;
    }
    else
    {
      swift_release();
      swift_errorRelease();

      uint64_t v91 = v83;
    }
    v200(v91, v202);
    uint64_t v92 = *v193;
    swift_beginAccess();
    uint64_t v93 = *(void *)(v81 + 16);
    uint64_t v94 = *(void *)(v81 + 24);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    sub_1008C122C(v197, v79, v92, v93, v94);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  id v97 = (id)fpfs_current_or_default_log();
  uint64_t v98 = v190;
  sub_10096B490();
  uint64_t v99 = sub_10096B470();
  os_log_type_t v100 = sub_10096C5A0();
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v101 = 0;
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "Patching FSSnapshot table...", v101, 2u);
    uint64_t v76 = v192;
    swift_slowDealloc();
  }

  v200(v98, v202);
  swift_beginAccess();
  uint64_t v102 = v199;
  *(void *)(v199 + 16) = 0xD000000000000014;
  *(void *)(v102 + 24) = 0x80000001009BDCB0;
  swift_bridgeObjectRelease();
  sub_1008C4FD0(a1, v76);
  id v104 = v191;
  uint64_t v105 = v103;
  if (v103 >= 1)
  {
    uint64_t *v193 = v103;
    sub_1008CAB0C();
    id v54 = (id)swift_allocError();
    *os_log_type_t v106 = v105;
    swift_willThrow();
    uint64_t v107 = v199;
    id v108 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    uint64_t v109 = v104;
    os_log_type_t v110 = sub_10096B470();
    os_log_type_t v111 = sub_10096C5B0();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = swift_slowAlloc();
      uint64_t v113 = (void *)swift_slowAlloc();
      v214[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v112 = 136315394;
      swift_beginAccess();
      uint64_t v196 = a1;
      uint64_t v114 = *(void *)(v199 + 16);
      unint64_t v115 = *(void *)(v199 + 24);
      swift_bridgeObjectRetain();
      v212[0] = (id)sub_100719D44(v114, v115, v214);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2112;
      swift_getErrorValue();
      id v116 = Error.prettyDescription.getter(v206);
      v212[0] = v116;
      a1 = v196;
      sub_10096C8C0();
      *uint64_t v113 = v116;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v110, v111, "[%s] Failed to patch the fs_snapshot table: %@", (uint8_t *)v112, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      a2 = v199;
      swift_slowDealloc();
      swift_slowDealloc();

      v200(v191, v202);
    }
    else
    {
      a2 = v107;
      swift_release();
      swift_errorRelease();

      v200(v109, v202);
    }
    uint64_t v117 = *v193;
    goto LABEL_30;
  }
  id v120 = (id)fpfs_current_or_default_log();
  uint64_t v121 = v188;
  sub_10096B490();
  uint64_t v122 = sub_10096B470();
  os_log_type_t v123 = sub_10096C5A0();
  if (os_log_type_enabled(v122, v123))
  {
    unint64_t v124 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v124 = 0;
    _os_log_impl((void *)&_mh_execute_header, v122, v123, "Patching FSItemJobs table...", v124, 2u);
    swift_slowDealloc();
  }

  v200(v121, v202);
  swift_beginAccess();
  a2 = v199;
  *(void *)(v199 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x80000001009BDCD0;
  swift_bridgeObjectRelease();
  sub_1008C5438(a1, v192, sub_1008BD7EC, &unk_100AA3FD8, 543, sub_1008C6BC0);
  int v126 = v189;
  uint64_t v127 = v125;
  if (v125 >= 1)
  {
    uint64_t *v193 = v125;
    sub_1008CAB0C();
    id v54 = (id)swift_allocError();
    uint64_t *v128 = v127;
    swift_willThrow();
    id v129 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    unint64_t v130 = sub_10096B470();
    os_log_type_t v131 = sub_10096C5B0();
    if (os_log_type_enabled(v130, v131))
    {
      uint64_t v132 = swift_slowAlloc();
      os_log_t v133 = (void *)swift_slowAlloc();
      v213[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v132 = 136315394;
      swift_beginAccess();
      uint64_t v196 = a1;
      uint64_t v134 = *(void *)(v199 + 16);
      unint64_t v135 = *(void *)(v199 + 24);
      swift_bridgeObjectRetain();
      v211[0] = (id)sub_100719D44(v134, v135, (uint64_t *)v213);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v132 + 12) = 2112;
      swift_getErrorValue();
      id v136 = Error.prettyDescription.getter(v205);
      v211[0] = v136;
      a1 = v196;
      sub_10096C8C0();
      void *v133 = v136;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v130, v131, "[%s] Failed to patch the fs_item_jobs table: %@", (uint8_t *)v132, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      a2 = v199;
      swift_slowDealloc();
      swift_slowDealloc();

      v200(v189, v202);
    }
    else
    {
      swift_release();
      swift_errorRelease();

      v200(v126, v202);
    }
    uint64_t v117 = *v193;
    goto LABEL_30;
  }
  id v137 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v138 = sub_10096B470();
  os_log_type_t v139 = sub_10096C5A0();
  if (os_log_type_enabled(v138, v139))
  {
    uint64_t v140 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v140 = 0;
    _os_log_impl((void *)&_mh_execute_header, v138, v139, "Patching FSThrottle table...", v140, 2u);
    swift_slowDealloc();
  }

  v200(v187, v202);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x80000001009BDCF0;
  swift_bridgeObjectRelease();
  uint64_t v141 = sub_1008C5280(a1, v192);
  id v40 = v186;
  uint64_t v142 = v141;
  if (v141 >= 1)
  {
    uint64_t *v193 = v141;
    sub_1008CAB0C();
    id v54 = (id)swift_allocError();
    uint64_t *v143 = v142;
    swift_willThrow();
    id v144 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    uint64_t v53 = sub_10096B470();
    os_log_type_t v145 = sub_10096C5B0();
    if (os_log_type_enabled(v53, v145))
    {
      uint64_t v146 = swift_slowAlloc();
      unint64_t v147 = (void *)swift_slowAlloc();
      v212[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v146 = 136315394;
      swift_beginAccess();
      uint64_t v196 = a1;
      uint64_t v148 = *(void *)(v199 + 16);
      unint64_t v149 = *(void *)(v199 + 24);
      swift_bridgeObjectRetain();
      uint64_t v210 = sub_100719D44(v148, v149, (uint64_t *)v212);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v146 + 12) = 2112;
      swift_getErrorValue();
      id v150 = Error.prettyDescription.getter(v204);
      uint64_t v210 = (uint64_t)v150;
      a1 = v196;
      sub_10096C8C0();
      void *v147 = v150;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v145, "[%s] Failed to patch the fs_throttle table: %@", (uint8_t *)v146, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      a2 = v199;
      swift_slowDealloc();
      swift_slowDealloc();

      v200(v186, v202);
LABEL_45:
      uint64_t v117 = *v193;
LABEL_30:
      swift_beginAccess();
      uint64_t v118 = *(void *)(a2 + 16);
      uint64_t v119 = *(void *)(a2 + 24);
      swift_errorRetain();
      swift_bridgeObjectRetain();
      sub_1008C122C(v197, v54, v117, v118, v119);
      swift_errorRelease();
      swift_bridgeObjectRelease();
LABEL_19:
      swift_errorRelease();
      uint64_t v95 = a1;
LABEL_20:
      sub_1008C47E8(v95);
      return 0;
    }
LABEL_44:
    swift_release();
    swift_errorRelease();

    v200(v40, v202);
    goto LABEL_45;
  }
  id v151 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  long long v152 = sub_10096B470();
  os_log_type_t v153 = sub_10096C5A0();
  if (os_log_type_enabled(v152, v153))
  {
    int v154 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v154 = 0;
    _os_log_impl((void *)&_mh_execute_header, v152, v153, "Patching Jobs table...", v154, 2u);
    swift_slowDealloc();
  }

  v200(v185, v202);
  swift_beginAccess();
  strcpy((char *)(a2 + 16), "patchJobsTable");
  *(unsigned char *)(a2 + 31) = -18;
  swift_bridgeObjectRelease();
  uint64_t v196 = a1;
  sub_1008C5438(a1, v192, sub_1008BD824, &unk_100AA3BC8, 632, sub_1008C778C);
  uint64_t v156 = v155;
  if (v155 >= 1)
  {
    uint64_t *v193 = v155;
    sub_1008CAB0C();
    uint64_t v157 = (void *)swift_allocError();
    uint64_t *v158 = v156;
    swift_willThrow();
    uint64_t v159 = v199;
    id v160 = (id)fpfs_current_or_default_log();
    uint64_t v161 = v184;
    sub_10096B490();
    swift_retain();
    swift_errorRetain();
    uint64_t v162 = sub_10096B470();
    os_log_type_t v163 = sub_10096C5B0();
    if (os_log_type_enabled(v162, v163))
    {
      uint64_t v164 = swift_slowAlloc();
      uint64_t v195 = (void *)swift_slowAlloc();
      uint64_t v199 = swift_slowAlloc();
      v211[0] = (id)v199;
      *(_DWORD *)uint64_t v164 = 136315394;
      swift_beginAccess();
      uint64_t v165 = *(void *)(v159 + 16);
      unint64_t v166 = *(void *)(v159 + 24);
      swift_bridgeObjectRetain();
      uint64_t v209 = sub_100719D44(v165, v166, (uint64_t *)v211);
      sub_10096C8C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v164 + 12) = 2112;
      swift_getErrorValue();
      id v167 = Error.prettyDescription.getter(v203);
      uint64_t v209 = (uint64_t)v167;
      sub_10096C8C0();
      void *v195 = v167;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v162, v163, "[%s] Failed to patch the jobs table: %@", (uint8_t *)v164, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      swift_errorRelease();
    }

    v200(v161, v202);
    uint64_t v168 = *v193;
    swift_beginAccess();
    uint64_t v169 = *(void *)(v159 + 16);
    uint64_t v170 = *(void *)(v159 + 24);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    sub_1008C122C(v197, v157, v168, v169, v170);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v95 = v196;
    goto LABEL_20;
  }
  id v171 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  BOOL v172 = sub_10096B470();
  os_log_type_t v173 = sub_10096C5A0();
  if (os_log_type_enabled(v172, v173))
  {
    double v174 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v174 = 0;
    _os_log_impl((void *)&_mh_execute_header, v172, v173, "Patching Tombstone table...", v174, 2u);
    swift_slowDealloc();
  }

  v200(v183, v202);
  swift_beginAccess();
  uint64_t v175 = v199;
  *(void *)(v199 + 16) = 0xD000000000000013;
  *(void *)(v175 + 24) = 0x80000001009BDD10;
  swift_bridgeObjectRelease();
  sub_1008CABF0(v196);
  id v176 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v177 = sub_10096B470();
  os_log_type_t v178 = sub_10096C5A0();
  if (os_log_type_enabled(v177, v178))
  {
    uint64_t v179 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v179 = 0;
    _os_log_impl((void *)&_mh_execute_header, v177, v178, "Database was updated successfully, commiting changes...", v179, 2u);
    swift_slowDealloc();
  }

  v200(v181, v202);
  sub_1008C47E8(v196);
  return 1;
}

uint64_t sub_1008C47E8(void *a1)
{
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  id v9 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  uint64_t v10 = sub_10096B470();
  os_log_type_t v11 = sub_10096C5A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Reenabling foreign keys...", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  aBlock[4] = sub_1004B1460;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA42F8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v15 = [a1 executeSwift:v14 error:aBlock];
  _Block_release(v14);
  id v16 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v15)
  {
    sub_10096ABF0();

    swift_willThrow();
    id v18 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    uint64_t v19 = sub_10096B470();
    os_log_type_t v20 = sub_10096C5B0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v28 = v13;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v29 = v2;
      uint64_t v24 = (void *)v23;
      *(_DWORD *)uint64_t v22 = 138412290;
      swift_getErrorValue();
      id v25 = Error.prettyDescription.getter(v30);
      aBlock[0] = v25;
      sub_10096C8C0();
      *uint64_t v24 = v25;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to enable foreign keys: %@", v22, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      uint64_t v26 = v29;
      swift_slowDealloc();
      uint64_t v27 = (uint64_t (*)(char *, uint64_t))v28;
      swift_slowDealloc();

      swift_errorRelease();
      return v27(v6, v26);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      return ((uint64_t (*)(char *, uint64_t))v13)(v6, v2);
    }
  }
  return result;
}

id sub_1008C4BD8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  id result = (id)sub_100598A48(ObjectType, v3);
  if (!v1)
  {
    uint64_t v6 = (uint64_t)result;
    uint64_t v7 = *(void *)(a1 + qword_100B0B1F0);
    swift_retain();
    id result = (id)FPVersion();
    if (result)
    {
      uint64_t v8 = result;
      uint64_t v9 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v11 = v10;
      swift_release();

      uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 40) + 16) + 120);
      uint64_t v13 = swift_retain();
      uint64_t v14 = v12(v13);
      uint64_t v16 = v15;
      swift_release();
      sub_10069EE9C(590088, v6, v9, v11, v14, v16, *(void *)(v7 + 24), *(void *)(v7 + 32), 1);
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1008C4D20(void *a1, uint64_t a2)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v16 = (unint64_t (*)())sub_1008BD7AC;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10017090C;
  uint64_t v15 = &unk_100AA4230;
  uint64_t v5 = _Block_copy(&v12);
  swift_release();
  uint64_t v12 = 0;
  unsigned int v6 = [a1 executeSwift:v5 error:&v12];
  _Block_release(v5);
  uint64_t v7 = v12;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v6)
  {
    sub_10096ABF0();

LABEL_11:
    swift_willThrow();
    return;
  }
  uint64_t v16 = sub_1008BD7B0;
  uint64_t v17 = 0;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10017090C;
  uint64_t v15 = &unk_100AA4258;
  uint64_t v8 = _Block_copy(&v12);
  swift_release();
  uint64_t v12 = 0;
  id v9 = [a1 fetchSwift:v8 error:&v12];
  _Block_release(v8);
  uint64_t v10 = v12;
  if (swift_isEscapingClosureAtFileLocation()) {
LABEL_15:
  }
    __break(1u);
  if (!v9)
  {
    sub_10096ABF0();

    goto LABEL_11;
  }
  if ([v9 next])
  {
    while (1)
    {
      sub_1008C5664(v9, a2, &v18, a1);
      if (v2) {
        break;
      }
      if (([v9 next] & 1) == 0) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
  }
}

void sub_1008C4FD0(void *a1, uint64_t a2)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v16 = (unint64_t (*)())sub_1008BD7CC;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10017090C;
  uint64_t v15 = &unk_100AA4168;
  uint64_t v5 = _Block_copy(&v12);
  swift_release();
  uint64_t v12 = 0;
  unsigned int v6 = [a1 executeSwift:v5 error:&v12];
  _Block_release(v5);
  uint64_t v7 = v12;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v6)
  {
    sub_10096ABF0();

LABEL_11:
    swift_willThrow();
    return;
  }
  uint64_t v16 = sub_1008BD7D0;
  uint64_t v17 = 0;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_10017090C;
  uint64_t v15 = &unk_100AA4190;
  uint64_t v8 = _Block_copy(&v12);
  swift_release();
  uint64_t v12 = 0;
  id v9 = [a1 fetchSwift:v8 error:&v12];
  _Block_release(v8);
  uint64_t v10 = v12;
  if (swift_isEscapingClosureAtFileLocation()) {
LABEL_15:
  }
    __break(1u);
  if (!v9)
  {
    sub_10096ABF0();

    goto LABEL_11;
  }
  if ([v9 next])
  {
    while (1)
    {
      sub_1008C6220(v9, a2, &v18, a1);
      if (v2) {
        break;
      }
      if (([v9 next] & 1) == 0) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
  }
}

uint64_t sub_1008C5280(void *a1, uint64_t a2)
{
  aBlock[4] = sub_1008BD808;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA3EC0;
  uint64_t v5 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  id v6 = [a1 fetchSwift:v5 error:aBlock];
  _Block_release(v5);
  id v7 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v6)
  {
    if ([v6 next])
    {
      while (1)
      {
        sub_1008C71A0(v6, a2, a1);
        if (v2) {
          break;
        }
        if (([v6 next] & 1) == 0) {
          goto LABEL_9;
        }
      }
    }
LABEL_9:
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return 0;
}

void sub_1008C5438(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t, uint64_t *, void *))
{
  void v14[5] = 0;
  uint64_t v15 = 0;
  _OWORD v14[3] = a4;
  v14[4] = a3;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = (id)1107296256;
  _OWORD v14[2] = sub_10017090C;
  uint64_t v10 = _Block_copy(v14);
  swift_release();
  v14[0] = 0;
  id v11 = [a1 fetchSwift:v10 error:v14];
  _Block_release(v10);
  id v12 = v14[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v11)
  {
    if ([v11 next])
    {
      while (1)
      {
        a6(v11, a2, &v15, a1);
        if (v6) {
          break;
        }
        if (([v11 next] & 1) == 0) {
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
  }
}

id sub_1008C5604(void *a1)
{
  return [a1 flush];
}

void sub_1008C5648()
{
}

void sub_1008C5664(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  id v52 = a4;
  uint64_t v8 = &selRef_stringWithFormat_;
  id v51 = [a1 longAtIndex:0];
  unsigned __int8 v9 = [a1 isNullAtIndex:1];
  if (v9)
  {
    int v10 = 0;
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v12 = (uint64_t)[a1 longAtIndex:1];
    id v13 = [a1 unsignedIntAtIndex:2];
    if (v12 < 0)
    {
      LODWORD(v43) = 0;
      uint64_t v42 = 3451;
      LOBYTE(v41) = 2;
LABEL_53:
      sub_10096CE10();
      __break(1u);
      return;
    }
    uint64_t v41 = a2;
    uint64_t v42 = v12;
    LODWORD(v43) = __chkstk_darwin(v13);
    uint64_t v14 = sub_1008BDE2C(5, (uint64_t)sub_1008CB3C4, (uint64_t)&v40);
    if (v4) {
      return;
    }
    int v10 = v15;
    if ((v15 & 0x100000000) == 0)
    {
      uint64_t v19 = *a3 + 1;
      if (__OFADD__(*a3, 1)) {
        goto LABEL_50;
      }
      goto LABEL_14;
    }
    uint64_t v50 = v14;
    uint64_t v8 = &selRef_stringWithFormat_;
  }
  if ([a1 isNullAtIndex:3])
  {
    unint64_t v11 = 0;
    int v49 = 255;
    goto LABEL_5;
  }
  id v16 = a1;
  unint64_t v17 = sub_100618D34(v16, 3);
  if (v4)
  {

    return;
  }
  unint64_t v11 = v17;
  int v49 = v18;

  if ((_BYTE)v49)
  {
    if (v49 == 1)
    {
      __chkstk_darwin(v33);
      uint64_t v43 = a2;
      unint64_t v44 = v11;
      uint64_t v34 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v41);
      int v49 = 1;
      unint64_t v11 = v34;
    }
    goto LABEL_37;
  }
  __chkstk_darwin(v33);
  uint64_t v43 = a2;
  LODWORD(v44) = v38;
  unint64_t v39 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)&v41);
  if ((v39 & 0x100000000) != 0)
  {
    uint64_t v19 = *a3 + 1;
    if (__OFADD__(*a3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
LABEL_14:
    *a3 = v19;
    return;
  }
  int v49 = 0;
  unint64_t v11 = v39;
LABEL_37:
  uint64_t v8 = &selRef_stringWithFormat_;
LABEL_5:
  unsigned int v47 = [a1 isNullAtIndex:4];
  unint64_t v48 = v11;
  if (v47)
  {
    uint64_t v46 = 0;
  }
  else
  {
    unint64_t v20 = (unint64_t)objc_msgSend(a1, v8[370], 4);
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_52:
      LODWORD(v43) = 0;
      uint64_t v42 = 3451;
      LOBYTE(v41) = 2;
      goto LABEL_53;
    }
    uint64_t v21 = __chkstk_darwin(v20);
    uint64_t v43 = a2;
    unint64_t v44 = v21;
    uint64_t v46 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v41);
    if (v4) {
      return;
    }
  }
  LOBYTE(a3) = [a1 isNullAtIndex:5];
  if (a3)
  {
    uint64_t v45 = 0;
    goto LABEL_21;
  }
  unint64_t v22 = (unint64_t)objc_msgSend(a1, v8[370], 5);
  if ((v22 & 0x8000000000000000) != 0) {
    goto LABEL_52;
  }
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v43 = a2;
  unint64_t v44 = v23;
  uint64_t v45 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v41);
  if (v4) {
    return;
  }
LABEL_21:
  if ([a1 isNullAtIndex:6])
  {
    unint64_t v24 = 0;
    char v25 = -1;
    goto LABEL_23;
  }
  id v35 = a1;
  unint64_t v24 = sub_100618348(v35, 6);
  char v25 = v36;

  if (v4) {
    return;
  }
  if (!v25)
  {
    __chkstk_darwin(v37);
    uint64_t v43 = a2;
    LODWORD(v44) = v24;
    unint64_t v39 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)&v41);
LABEL_43:
    if ((v39 & (unint64_t)&_mh_execute_header) != 0) {
      unint64_t v24 = 0;
    }
    else {
      unint64_t v24 = v39;
    }
    if ((v39 & (unint64_t)&_mh_execute_header) != 0) {
      char v25 = -1;
    }
    else {
      char v25 = 0;
    }
    goto LABEL_23;
  }
  if (v25 == 1)
  {
    __chkstk_darwin(v37);
    uint64_t v43 = a2;
    unint64_t v44 = v24;
    unint64_t v24 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v41);
    char v25 = 1;
  }
LABEL_23:
  unint64_t v26 = v48;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v50;
  *(unsigned char *)(v27 + 24) = v9;
  *(_DWORD *)(v27 + 28) = v10;
  *(unsigned char *)(v27 + 32) = v9;
  *(void *)(v27 + 40) = v26;
  *(unsigned char *)(v27 + 48) = v49;
  *(void *)(v27 + 56) = v46;
  *(unsigned char *)(v27 + 64) = v47;
  *(void *)(v27 + 72) = v45;
  *(unsigned char *)(v27 + 80) = (_BYTE)a3;
  *(void *)(v27 + 88) = v24;
  *(unsigned char *)(v27 + 96) = v25;
  *(void *)(v27 + 104) = v51;
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = sub_1008CB1A4;
  v28[3] = v27;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA42D0;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v30 = [v52 executeSwift:v29 error:aBlock];
  _Block_release(v29);
  id v31 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_50:
    __break(1u);
  }
  if (!v30)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_1008C5D8C(void *a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, unsigned __int8 a6, uint64_t a7, char a8, uint64_t a9, char a10, unint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  sub_10096CBD0(203);
  v56._uint64_t countAndFlagsBits = 0xD000000000000030;
  v56._object = (void *)0x80000001009BE1D0;
  sub_10096BDC0(v56);
  Class isa = 0;
  if ((a3 & 1) == 0) {
    Class isa = sub_10096D540().super.super.isa;
  }
  id v20 = objc_msgSend(a1, "bindObjectParameter:", isa, 0, 0xE000000000000000);
  swift_unknownObjectRelease();
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v23 = v22;

  v57._uint64_t countAndFlagsBits = v21;
  v57._object = v23;
  sub_10096BDC0(v57);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 0xD000000000000018;
  v58._object = (void *)0x80000001009BE210;
  sub_10096BDC0(v58);
  if ((a4 & 0x100000000) != 0) {
    v24.super.super.Class isa = 0;
  }
  else {
    v24.super.super.Class isa = sub_10096D530().super.super.isa;
  }
  id v25 = [a1 bindObjectParameter:v24.super.super.isa];
  swift_unknownObjectRelease();
  uint64_t v26 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v28 = v27;

  v59._uint64_t countAndFlagsBits = v26;
  v59._object = v28;
  sub_10096BDC0(v59);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0x2064695F73660A2CLL;
  v60._object = (void *)0xEA0000000000203DLL;
  sub_10096BDC0(v60);
  if (a6 > 1u)
  {
    if (a6 == 255)
    {
      id v29 = [a1 bindObjectParameter:0];
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (a6)
  {
    if ((a5 & 0x8000000000000000) == 0) {
      goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    a5 = (unint64_t)(a5 != 0) << 63;
    goto LABEL_14;
  }
  a5 = -(uint64_t)a5;
LABEL_14:
  id v29 = [a1 bindLongParameter:a5];
LABEL_15:
  id v30 = v29;
  uint64_t v31 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v33 = v32;

  v61._uint64_t countAndFlagsBits = v31;
  v61._object = v33;
  sub_10096BDC0(v61);
  swift_bridgeObjectRelease();
  v62._object = (void *)0x80000001009BE230;
  v62._uint64_t countAndFlagsBits = 0xD000000000000020;
  sub_10096BDC0(v62);
  if (a8) {
    v34.super.super.Class isa = 0;
  }
  else {
    v34.super.super.Class isa = sub_10096D540().super.super.isa;
  }
  id v35 = [a1 bindObjectParameter:v34.super.super.isa];
  swift_unknownObjectRelease();
  uint64_t v36 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  int v38 = v37;

  v63._uint64_t countAndFlagsBits = v36;
  v63._object = v38;
  sub_10096BDC0(v63);
  swift_bridgeObjectRelease();
  v64._object = (void *)0x80000001009BE260;
  v64._uint64_t countAndFlagsBits = 0xD000000000000020;
  sub_10096BDC0(v64);
  if (a10) {
    v39.super.super.Class isa = 0;
  }
  else {
    v39.super.super.Class isa = sub_10096D540().super.super.isa;
  }
  unint64_t v40 = a11;
  id v41 = [a1 bindObjectParameter:v39.super.super.isa];
  swift_unknownObjectRelease();
  uint64_t v42 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v44 = v43;

  v65._uint64_t countAndFlagsBits = v42;
  v65._object = v44;
  sub_10096BDC0(v65);
  swift_bridgeObjectRelease();
  v66._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v66._object = (void *)0x80000001009BE290;
  sub_10096BDC0(v66);
  if (a12 <= 1u)
  {
    if (!a12)
    {
      unint64_t v40 = -(uint64_t)a11;
LABEL_29:
      id v45 = [a1 bindLongParameter:v40];
      goto LABEL_30;
    }
    if ((a11 & 0x8000000000000000) == 0) {
      goto LABEL_29;
    }
    __break(1u);
LABEL_28:
    unint64_t v40 = (unint64_t)(a11 != 0) << 63;
    goto LABEL_29;
  }
  if (a12 != 255) {
    goto LABEL_28;
  }
  id v45 = [a1 bindObjectParameter:0];
LABEL_30:
  id v46 = v45;
  uint64_t v47 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  int v49 = v48;

  v67._uint64_t countAndFlagsBits = v47;
  v67._object = v49;
  sub_10096BDC0(v67);
  swift_bridgeObjectRelease();
  v68._uint64_t countAndFlagsBits = 0x722045524548570ALL;
  v68._object = (void *)0xEF203D204449776FLL;
  sub_10096BDC0(v68);
  id v50 = [a1 bindLongParameter:a13];
  uint64_t v51 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v53 = v52;

  v69._uint64_t countAndFlagsBits = v51;
  v69._object = v53;
  sub_10096BDC0(v69);
  swift_bridgeObjectRelease();
  return v55;
}

void sub_1008C6220(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  id v9 = [a1 longAtIndex:0];
  uint64_t v10 = (uint64_t)[a1 longAtIndex:1];
  unint64_t v11 = (unint64_t)[a1 longAtIndex:4];
  if (v10 < 0 || (v11 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
  id v47 = v9;
  id v48 = a4;
  if (HIDWORD(v11))
  {
    LODWORD(v40) = 0;
    uint64_t v39 = 3455;
    LOBYTE(v38) = 2;
    goto LABEL_35;
  }
  uint64_t v38 = a2;
  uint64_t v39 = v10;
  LODWORD(v40) = __chkstk_darwin(v11);
  uint64_t v12 = sub_1008BDE2C(5, (uint64_t)sub_1008CB3C4, (uint64_t)&v37);
  if (v4) {
    return;
  }
  int v14 = v13;
  if ((v13 & 0x100000000) == 0)
  {
    uint64_t v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
    {
LABEL_7:
      *a3 = v15;
      return;
    }
    goto LABEL_31;
  }
  uint64_t v16 = v12;
  id v17 = a1;
  unint64_t v46 = sub_100618D34(v17, 2);
  int v19 = v18;

  if ((_BYTE)v19)
  {
    if (v19 == 1)
    {
      int v45 = v19;
      __chkstk_darwin(v20);
      uint64_t v40 = a2;
      unint64_t v41 = v46;
      unint64_t v46 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v38);
      int v19 = v45;
    }
  }
  else
  {
    int v45 = v19;
    __chkstk_darwin(v20);
    uint64_t v40 = a2;
    LODWORD(v41) = v46;
    unint64_t v21 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)&v38);
    if ((v21 & 0x100000000) != 0)
    {
      uint64_t v15 = *a3 + 1;
      if (!__OFADD__(*a3, 1)) {
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_28;
    }
    unint64_t v46 = v21;
    int v19 = v45;
  }
  id v22 = v17;
  unint64_t v44 = sub_100618348(v22, 3);
  int v43 = v23;
  id v42 = v22;

  char v25 = v43;
  if (!(_BYTE)v43)
  {
    int v45 = v19;
    __chkstk_darwin(v24);
    uint64_t v40 = a2;
    LODWORD(v41) = v44;
    unint64_t v26 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)&v38);
    if ((v26 & 0x100000000) == 0)
    {
      unint64_t v44 = v26;
      LOBYTE(v19) = v45;
      goto LABEL_20;
    }
LABEL_28:
    uint64_t v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1)) {
      goto LABEL_7;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  if (v43 == 1)
  {
    __chkstk_darwin(v24);
    uint64_t v40 = a2;
    unint64_t v41 = v44;
    unint64_t v44 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v38);
  }
LABEL_20:
  unint64_t v27 = (unint64_t)[v42 longAtIndex:5];
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_33:
    LODWORD(v40) = 0;
    uint64_t v39 = 3451;
    LOBYTE(v38) = 2;
LABEL_35:
    sub_10096CE10();
    __break(1u);
    return;
  }
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v40 = a2;
  unint64_t v41 = v28;
  uint64_t v29 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v38);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v16;
  *(_DWORD *)(v30 + 24) = v14;
  *(void *)(v30 + 32) = v46;
  *(unsigned char *)(v30 + 40) = v19;
  *(void *)(v30 + 48) = v44;
  *(unsigned char *)(v30 + 56) = v25;
  id v31 = v47;
  *(void *)(v30 + 64) = v29;
  *(void *)(v30 + 72) = v31;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = sub_1008CB144;
  v32[3] = v30;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA4208;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v34 = [v48 executeSwift:v33 error:aBlock];
  _Block_release(v33);
  id v35 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_32;
  }
  if (!v34)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_1008C6834(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  sub_10096CBD0(135);
  v42._uint64_t countAndFlagsBits = 0xD000000000000024;
  v42._object = (void *)0x80000001009BE050;
  sub_10096BDC0(v42);
  Class isa = sub_10096D540().super.super.isa;
  id v16 = [a1 bindObjectParameter:isa];

  uint64_t v17 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  int v19 = v18;

  v43._uint64_t countAndFlagsBits = v17;
  v43._object = v19;
  sub_10096BDC0(v43);
  swift_bridgeObjectRelease();
  v44._object = (void *)0x80000001009BE080;
  v44._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v44);
  id v20 = [a1 bindUnsignedIntegerParameter:a3];
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  int v23 = v22;

  v45._uint64_t countAndFlagsBits = v21;
  v45._object = v23;
  sub_10096BDC0(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 0x203D2064690A2CLL;
  v46._object = (void *)0xE700000000000000;
  sub_10096BDC0(v46);
  if (!a5)
  {
LABEL_5:
    a4 = -(uint64_t)a4;
    goto LABEL_7;
  }
  if (a5 == 1)
  {
    if ((a4 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_5;
  }
  a4 = (unint64_t)(a4 != 0) << 63;
LABEL_7:
  id v24 = [a1 bindLongParameter:a4];
  uint64_t v25 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v27 = v26;

  v47._uint64_t countAndFlagsBits = v25;
  v47._object = v27;
  sub_10096BDC0(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 0x746E657261700A2CLL;
  v48._object = (void *)0xEE00203D2064695FLL;
  sub_10096BDC0(v48);
  if (!a7)
  {
LABEL_11:
    a6 = -(uint64_t)a6;
    goto LABEL_13;
  }
  if (a7 != 1)
  {
    a6 = (unint64_t)(a6 != 0) << 63;
    goto LABEL_13;
  }
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  id v28 = [a1 bindLongParameter:a6];
  uint64_t v29 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  id v31 = v30;

  v49._uint64_t countAndFlagsBits = v29;
  v49._object = v31;
  sub_10096BDC0(v49);
  swift_bridgeObjectRelease();
  v50._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v50._object = (void *)0x80000001009BE0A0;
  sub_10096BDC0(v50);
  Class v32 = sub_10096D540().super.super.isa;
  id v33 = [a1 bindObjectParameter:v32];

  uint64_t v34 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v36 = v35;

  v51._uint64_t countAndFlagsBits = v34;
  v51._object = v36;
  sub_10096BDC0(v51);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 0x722045524548570ALL;
  v52._object = (void *)0xEF203D204449776FLL;
  sub_10096BDC0(v52);
  id v37 = [a1 bindLongParameter:a9];
  uint64_t v38 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v40 = v39;

  v53._uint64_t countAndFlagsBits = v38;
  v53._object = v40;
  sub_10096BDC0(v53);
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1008C6BC0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = [a1 longAtIndex:0];
  id v10 = a1;
  unint64_t v11 = sub_100618348(v10, 1);
  if (v4)
  {

    return;
  }
  uint64_t v13 = v11;
  char v14 = v12;

  Swift::String v44 = a3;
  if (v14)
  {
    if (v14 != 1) {
      goto LABEL_9;
    }
    id v16 = a4;
    __chkstk_darwin(v15);
    uint64_t v40 = a2;
    uint64_t v41 = v13;
    uint64_t v13 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)v39);
  }
  else
  {
    id v16 = a4;
    __chkstk_darwin(v15);
    uint64_t v40 = a2;
    LODWORD(v41) = v13;
    unint64_t v17 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)v39);
    if ((v17 & 0x100000000) != 0)
    {
      if (!__OFADD__(*v44, 1))
      {
        ++*v44;
        return;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
    }
    uint64_t v13 = v17;
  }
  a4 = v16;
LABEL_9:
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v13;
  *(unsigned char *)(v18 + 24) = v14;
  *(void *)(v18 + 32) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1008CB028;
  *(void *)(v19 + 24) = v18;
  uint64_t v43 = v18;
  Swift::String v49 = sub_1001FB2E8;
  uint64_t v50 = v19;
  aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  Swift::String v47 = sub_10017090C;
  Swift::String v48 = &unk_100AA4050;
  id v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  id v42 = a4;
  unsigned int v21 = [a4 executeSwift:v20 error:&aBlock];
  _Block_release(v20);
  id v22 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (!v21)
  {
    sub_10096ABF0();

    swift_willThrow();
    goto LABEL_15;
  }
  if ([v10 isNullAtIndex:2])
  {
LABEL_15:
    swift_release();
    return;
  }
  sub_10025E9C0(2);
  type metadata accessor for VFSDirectoryLister(0);
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v25 = v24;
  uint64_t v26 = swift_beginAccess();
  __chkstk_darwin(v26);
  v39[0] = a2;
  v39[1] = v27;
  LODWORD(v40) = v28;
  swift_retain_n();
  uint64_t v29 = sub_1008BDE2C(5, (uint64_t)sub_1008CB088, (uint64_t)&v38);
  uint64_t v31 = v30;
  *(void *)(v25 + 24) = v29;
  *(_DWORD *)(v25 + 32) = v30;
  swift_release();
  if ((v31 & 0x100000000) == 0)
  {
    swift_release_n();
    if (!__OFADD__(*v44, 1))
    {
      ++*v44;
      goto LABEL_15;
    }
    goto LABEL_28;
  }
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v25;
  *(void *)(v32 + 24) = v9;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1008CB0A8;
  *(void *)(v33 + 24) = v32;
  Swift::String v49 = sub_1001FB2E8;
  uint64_t v50 = v33;
  aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  Swift::String v47 = sub_10017090C;
  Swift::String v48 = &unk_100AA40C8;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v35 = [v42 executeSwift:v34 error:&aBlock];
  _Block_release(v34);
  uint64_t v36 = aBlock;
  char v37 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v37) {
    goto LABEL_29;
  }
  if (!v35)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  swift_release();
  swift_release();
  swift_release_n();
}

void sub_1008C71A0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_10096B480();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = [a1 longAtIndex:0];
  id v11 = a1;
  unint64_t v12 = sub_100618348(v11, 1);
  char v14 = v13;

  if (v3) {
    return;
  }
  id v33 = a3;
  if (v14)
  {
    if (v14 == 1)
    {
      __chkstk_darwin(v15);
      *(&v32 - 2) = a2;
      *(&v32 - 1) = v12;
      unint64_t v12 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)(&v32 - 4));
    }
  }
  else
  {
    __chkstk_darwin(v15);
    *(&v32 - 2) = a2;
    *((_DWORD *)&v32 - 2) = v12;
    unint64_t v16 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)(&v32 - 4));
    if ((v16 & 0x100000000) != 0)
    {
      id v24 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v25 = sub_10096B470();
      os_log_type_t v26 = sub_10096C5A0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "item not found in fs throttle, removing row", v27, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v34;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_1008CB000;
      *(void *)(v29 + 24) = v28;
      uint64_t v39 = sub_1001FB2E8;
      uint64_t v40 = v29;
      aBlock = _NSConcreteStackBlock;
      uint64_t v36 = 1107296256;
      char v37 = sub_10017090C;
      uint64_t v38 = &unk_100AA3FB0;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned __int8 v21 = [v33 executeSwift:v30 error:&aBlock];
      _Block_release(v30);
      id v22 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        goto LABEL_8;
      }
      __break(1u);
LABEL_16:
      __break(1u);
    }
    unint64_t v12 = v16;
  }
  id v17 = v34;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v12;
  *(unsigned char *)(v18 + 24) = v14;
  *(void *)(v18 + 32) = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1008CAF90;
  *(void *)(v19 + 24) = v18;
  uint64_t v39 = sub_1001FB2E8;
  uint64_t v40 = v19;
  aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  char v37 = sub_10017090C;
  uint64_t v38 = &unk_100AA3F38;
  id v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v21 = [v33 executeSwift:v20 error:&aBlock];
  _Block_release(v20);
  id v22 = aBlock;
  char v23 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v23) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v21 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  swift_release();
}

unint64_t sub_1008C76D4(void *a1, uint64_t a2)
{
  sub_10096CBD0(40);
  swift_bridgeObjectRelease();
  id v4 = [a1 bindLongParameter:a2];
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v7 = v6;

  v9._uint64_t countAndFlagsBits = v5;
  v9._object = v7;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

void sub_1008C778C(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v8 = a1;
  id v86 = [a1 longAtIndex:0];
  id v9 = [v8 longAtIndex:1];
  id v10 = v9;
  if (v9 == (id)1) {
    int v11 = 1;
  }
  else {
    int v11 = 2;
  }
  if (v9) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  unsigned __int8 v13 = sub_1007B6CB8((uint64_t)[v8 longAtIndex:2]);
  if (v12 != 2)
  {
    if (v10)
    {
      if (((v13 < 0x17u) & (0x400007u >> v13)) != 0)
      {
LABEL_10:
        id v14 = v8;
        unint64_t v15 = sub_100618D34(v14, 3);
        if (v4)
        {

          return;
        }
        uint64_t v20 = v15;
        char v34 = v16;

        if (v34)
        {
          if (v34 == 1)
          {
            __chkstk_darwin(v35);
            uint64_t v78 = a2;
            unint64_t v79 = v20;
            uint64_t v20 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)v77);
          }
          id v85 = a4;
LABEL_58:
          uint64_t v52 = swift_allocObject();
          *(void *)(v52 + 16) = v20;
          *(unsigned char *)(v52 + 24) = v34;
          *(void *)(v52 + 32) = v86;
          uint64_t v53 = swift_allocObject();
          *(void *)(v53 + 16) = sub_1008CAEC0;
          *(void *)(v53 + 24) = v52;
          uint64_t v91 = (uint64_t (*)(uint64_t))sub_1001FB2E8;
          uint64_t v92 = v53;
          aBlock = _NSConcreteStackBlock;
          uint64_t v88 = 1107296256;
          unint64_t v89 = sub_10017090C;
          id v90 = &unk_100AA3DA8;
          id v54 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          aBlock = 0;
          unsigned int v55 = [v85 executeSwift:v54 error:&aBlock];
          _Block_release(v54);
          Swift::String v47 = aBlock;
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            if (v55)
            {
              unsigned __int8 v21 = 0;
              uint64_t v22 = 0;
              char v23 = 0;
              uint64_t v20 = (uint64_t)sub_1008CAEC0;
              goto LABEL_25;
            }
LABEL_83:
            sub_10096ABF0();

            swift_willThrow();
            swift_release();
            return;
          }
          goto LABEL_92;
        }
        __chkstk_darwin(v35);
        uint64_t v78 = a2;
        LODWORD(v79) = v20;
        unint64_t v51 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)v77);
        if ((v51 & 0x100000000) == 0)
        {
          id v85 = a4;
          uint64_t v20 = v51;
          goto LABEL_58;
        }
LABEL_68:
        uint64_t v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
          __break(1u);
          goto LABEL_71;
        }
        goto LABEL_82;
      }
    }
    else if (((v13 < 0x17u) & (0x400007u >> v13)) == 0)
    {
      goto LABEL_10;
    }
  }
  if (v13 != 70 && v12 != 2 && v13 == 20 && (v12 & 1) == 0)
  {
    id v29 = v8;
    unint64_t v30 = sub_100618D34(v29, 3);
    if (v4)
    {

      return;
    }
    uint64_t v36 = v30;
    char v37 = v31;

    id v85 = a4;
    if (v37)
    {
      if (v37 == 1)
      {
        __chkstk_darwin(v38);
        uint64_t v78 = a2;
        unint64_t v79 = v36;
        uint64_t v36 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)v77);
      }
    }
    else
    {
      __chkstk_darwin(v38);
      uint64_t v78 = a2;
      LODWORD(v79) = v36;
      unint64_t v49 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)v77);
      if ((v49 & 0x100000000) != 0)
      {
        uint64_t v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
LABEL_82:
        *a3 = v64;
        return;
      }
      uint64_t v36 = v49;
    }
    id v57 = v29;
    unint64_t v58 = sub_100618D34(v57, 4);
    int v60 = v59;

    if ((_BYTE)v60)
    {
      if (v60 != 1)
      {
        id v63 = v85;
LABEL_78:
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v36;
        *(unsigned char *)(v67 + 24) = v37;
        *(void *)(v67 + 32) = v58;
        *(unsigned char *)(v67 + 40) = v60;
        *(void *)(v67 + 48) = v86;
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = sub_1008CAE88;
        *(void *)(v68 + 24) = v67;
        uint64_t v84 = v67;
        uint64_t v91 = (uint64_t (*)(uint64_t))sub_1001FB2E8;
        uint64_t v92 = v68;
        aBlock = _NSConcreteStackBlock;
        uint64_t v88 = 1107296256;
        unint64_t v89 = sub_10017090C;
        id v90 = &unk_100AA3D30;
        Swift::String v69 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        aBlock = 0;
        unsigned int v70 = [v63 executeSwift:v69 error:&aBlock];
        _Block_release(v69);
        Swift::String v47 = aBlock;
        char v71 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v71 & 1) == 0)
        {
          if (v70)
          {
            uint64_t v20 = 0;
            char v23 = 0;
            unsigned __int8 v21 = sub_1008CAE88;
            uint64_t v22 = v84;
            goto LABEL_25;
          }
          goto LABEL_83;
        }
        goto LABEL_93;
      }
      LODWORD(v84) = v60;
      __chkstk_darwin(v61);
      uint64_t v78 = a2;
      unint64_t v79 = v58;
      uint64_t v62 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)v77);
      id v63 = v85;
      unint64_t v58 = v62;
    }
    else
    {
      LODWORD(v84) = v60;
      __chkstk_darwin(v61);
      uint64_t v78 = a2;
      LODWORD(v79) = v58;
      unint64_t v66 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)v77);
      if ((v66 & 0x100000000) != 0)
      {
        uint64_t v64 = *a3 + 1;
        if (!__OFADD__(*a3, 1)) {
          goto LABEL_82;
        }
        __break(1u);
        goto LABEL_91;
      }
      unint64_t v58 = v66;
      id v63 = v85;
    }
    LOBYTE(v60) = v84;
    goto LABEL_78;
  }
  if ([v8 isNullAtIndex:4])
  {
    id v85 = a4;
    uint64_t v20 = 0;
    unsigned __int8 v21 = 0;
    uint64_t v22 = 0;
    char v23 = 0;
    goto LABEL_25;
  }
  id v25 = v8;
  uint64_t v20 = sub_100618D34(v25, 4);
  char v27 = v26;

  if (v4) {
    return;
  }
  if (v27)
  {
    if (v27 == 1)
    {
      __chkstk_darwin(v28);
      uint64_t v78 = a2;
      unint64_t v79 = v20;
      uint64_t v20 = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)v77);
    }
  }
  else
  {
    __chkstk_darwin(v28);
    uint64_t v78 = a2;
    LODWORD(v79) = v20;
    unint64_t v51 = sub_1008BDA5C(5, (uint64_t)sub_1008CB340, (uint64_t)v77);
    if ((v51 & 0x100000000) != 0)
    {
      uint64_t v64 = *a3 + 1;
      if (!__OFADD__(*a3, 1)) {
        goto LABEL_82;
      }
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v20 = v51;
  }
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v20;
  *(unsigned char *)(v43 + 24) = v27;
  *(void *)(v43 + 32) = v86;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1008CAD48;
  *(void *)(v44 + 24) = v43;
  uint64_t v91 = sub_1001F8FDC;
  uint64_t v92 = v44;
  aBlock = _NSConcreteStackBlock;
  uint64_t v88 = 1107296256;
  unint64_t v89 = sub_10017090C;
  id v90 = &unk_100AA3C40;
  Swift::String v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  id v85 = a4;
  unsigned int v46 = [a4 executeSwift:v45 error:&aBlock];
  _Block_release(v45);
  Swift::String v47 = aBlock;
  char v48 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v48)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (!v46) {
    goto LABEL_83;
  }
  uint64_t v20 = 0;
  unsigned __int8 v21 = 0;
  uint64_t v22 = 0;
  char v23 = sub_1008CAD48;
LABEL_25:
  if ([v8 isNullAtIndex:5])
  {
    sub_1000705CC(v20);
    uint64_t v24 = (uint64_t)v21;
LABEL_35:
    sub_1000705CC(v24);
    sub_1000705CC((uint64_t)v23);
    return;
  }
  uint64_t v83 = v21;
  uint64_t v84 = v22;
  uint64_t v32 = (void *)a2;
  uint64_t v33 = sub_10025E9C0(5);
  if (v4)
  {
LABEL_34:
    sub_1000705CC(v20);
    uint64_t v24 = (uint64_t)v83;
    goto LABEL_35;
  }
  uint64_t v39 = v33;
  type metadata accessor for VFSStagedContext();
  uint64_t v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_release();
    goto LABEL_34;
  }
  uint64_t v81 = v40;
  id v82 = &v80;
  __chkstk_darwin(v40);
  uint64_t v78 = (uint64_t)v32;
  unint64_t v79 = v41;
  swift_retain();
  uint64_t v42 = sub_1008BDC48(5, (uint64_t)sub_1008CADA8, (uint64_t)v77);
  uint64_t v80 = v39;
  a2 = v81;
  id v82 = v77;
  *(void *)(v81 + 16) = v42;
  __chkstk_darwin(v42);
  *(void *)&v77[-16] = v32;
  *(_DWORD *)&v77[-8] = v50;
  unint64_t v51 = sub_1008BDA5C(5, (uint64_t)sub_1008CADC4, (uint64_t)&v77[-32]);
  uint64_t v8 = v32;
  a3 = (uint64_t *)v23;
LABEL_71:
  if ((v51 & 0x100000000) == 0) {
    *(_DWORD *)(a2 + 32) = v51;
  }
  __chkstk_darwin(v51);
  *(void *)&v77[-16] = v8;
  *(void *)&v77[-8] = v65;
  *(void *)(a2 + 24) = sub_1008BDC48(5, (uint64_t)sub_1008CB328, (uint64_t)&v77[-32]);
  uint64_t v72 = swift_allocObject();
  id v73 = v86;
  *(void *)(v72 + 16) = a2;
  *(void *)(v72 + 24) = v73;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1008CAE1C;
  *(void *)(v74 + 24) = v72;
  id v82 = (unsigned char *)v72;
  uint64_t v91 = (uint64_t (*)(uint64_t))sub_1001FB2E8;
  uint64_t v92 = v74;
  aBlock = _NSConcreteStackBlock;
  uint64_t v88 = 1107296256;
  unint64_t v89 = sub_10017090C;
  id v90 = &unk_100AA3CB8;
  uint64_t v75 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  LODWORD(v86) = [v85 executeSwift:v75 error:&aBlock];
  _Block_release(v75);
  uint64_t v76 = aBlock;
  LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v72) {
LABEL_95:
  }
    __break(1u);
  if ((v86 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  swift_release_n();
  sub_1000705CC(v20);
  sub_1000705CC((uint64_t)v83);
  sub_1000705CC((uint64_t)a3);
  swift_release();
}

uint64_t sub_1008C861C(void *a1, unint64_t a2, char a3, unint64_t a4, char a5, uint64_t a6)
{
  sub_10096CBD0(73);
  v26._uint64_t countAndFlagsBits = 0xD000000000000021;
  v26._object = (void *)0x80000001009BDD50;
  sub_10096BDC0(v26);
  if (!a3)
  {
LABEL_5:
    a2 = -(uint64_t)a2;
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_5;
  }
  a2 = (unint64_t)(a2 != 0) << 63;
LABEL_7:
  id v12 = objc_msgSend(a1, "bindLongParameter:", a2, 0, 0xE000000000000000);
  uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v15 = v14;

  v27._uint64_t countAndFlagsBits = v13;
  v27._object = v15;
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v28._object = (void *)0x80000001009BDD80;
  v28._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_10096BDC0(v28);
  if (!a5)
  {
LABEL_11:
    a4 = -(uint64_t)a4;
    goto LABEL_13;
  }
  if (a5 != 1)
  {
    a4 = (unint64_t)(a4 != 0) << 63;
    goto LABEL_13;
  }
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  id v16 = [a1 bindLongParameter:a4];
  uint64_t v17 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v19 = v18;

  v29._uint64_t countAndFlagsBits = v17;
  v29._object = v19;
  sub_10096BDC0(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 0x722045524548570ALL;
  v30._object = (void *)0xEF203D204449776FLL;
  sub_10096BDC0(v30);
  id v20 = [a1 bindLongParameter:a6];
  uint64_t v21 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  char v23 = v22;

  v31._uint64_t countAndFlagsBits = v21;
  v31._object = v23;
  sub_10096BDC0(v31);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1008C882C(void *a1, unint64_t a2, char a3, uint64_t a4, Swift::Int a5, uint64_t a6, void *a7, void *a8)
{
  sub_10096CBD0(a5);
  v25._uint64_t countAndFlagsBits = a6;
  v25._object = a7;
  sub_10096BDC0(v25);
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  id v15 = objc_msgSend(a1, "bindLongParameter:", a2, 0, 0xE000000000000000);
  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v18 = v17;

  v26._uint64_t countAndFlagsBits = v16;
  v26._object = v18;
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 0x722045524548570ALL;
  v27._object = a8;
  sub_10096BDC0(v27);
  id v19 = [a1 bindLongParameter:a4];
  uint64_t v20 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v22 = v21;

  v28._uint64_t countAndFlagsBits = v20;
  v28._object = v22;
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1008C898C(void *a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5, void *a6, uint64_t (*a7)(uint64_t))
{
  sub_10096CBD0(a4);
  v21._uint64_t countAndFlagsBits = a5;
  v21._object = a6;
  sub_10096BDC0(v21);
  uint64_t v12 = swift_retain();
  uint64_t v13 = a7(v12);
  id v15 = v14;
  swift_release();
  v22._uint64_t countAndFlagsBits = v13;
  v22._object = v15;
  sub_10096BDC0(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0x722045524548570ALL;
  v23._object = (void *)0xEF203D204449776FLL;
  sub_10096BDC0(v23);
  id v16 = [a1 bindLongParameter:a3];
  uint64_t v17 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  id v19 = v18;

  v24._uint64_t countAndFlagsBits = v17;
  v24._object = v19;
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1008C8ABC()
{
  sub_1008D4C50();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RestoreUpgradeSchemaVFSFileTree(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADDDA8);
}

uint64_t sub_1008C8B10()
{
  sub_1008D4CA4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RestoreUpgradeSchemaFPFileTree(uint64_t a1)
{
  return sub_100028978(a1, qword_100ADE170);
}

uint64_t sub_1008C8B60()
{
  return swift_initClassMetadata2();
}

char *sub_1008C8B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v35[2] = a2;
  v35[3] = a3;
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v42 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  char v37 = (char *)v35 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v35 - v11;
  uint64_t v13 = sub_10002B7CC(&qword_100ACA8C0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  __chkstk_darwin(v14);
  Swift::String v45 = (char *)v35 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v43 = v15;
    v35[0] = a1;
    v35[1] = v3;
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v41 = v6 + 16;
    unint64_t v36 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v18 = a1 + v36;
    uint64_t v19 = *(void *)(v6 + 72);
    char v48 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    unsigned int v46 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    Swift::String v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v38 = (void (**)(char *, uint64_t))(v6 + 8);
    swift_bridgeObjectRetain();
    uint64_t v44 = (char *)_swiftEmptyArrayStorage;
    uint64_t v20 = v45;
    uint64_t v39 = v19;
    while (1)
    {
      v40(v20, v18, v5);
      Swift::String v22 = *v48;
      (*v48)((uint64_t)v20, 0, 1, v5);
      Swift::String v23 = *v47;
      if ((*v47)(v20, 1, v5) == 1) {
        goto LABEL_21;
      }
      Swift::String v24 = *v46;
      (*v46)(v12, v20, v5);
      if (sub_10096ACF0() == 0x70756B636162 && v25 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v26 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
          sub_10096AD60();
          uint64_t v27 = 0;
          goto LABEL_12;
        }
      }
      uint64_t v27 = 1;
LABEL_12:
      uint64_t v20 = v45;
      uint64_t v28 = v43;
      v22(v43, v27, 1, v5);
      (*v38)(v12, v5);
      if (v23((char *)v28, 1, v5) == 1)
      {
        sub_100083498(v28);
        uint64_t v21 = v39;
      }
      else
      {
        Swift::String v29 = v37;
        v24(v37, (char *)v28, v5);
        v24(v42, v29, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = (char *)sub_1006A2B50(0, *((void *)v44 + 2) + 1, 1, (unint64_t)v44);
        }
        uint64_t v21 = v39;
        unint64_t v31 = *((void *)v44 + 2);
        unint64_t v30 = *((void *)v44 + 3);
        if (v31 >= v30 >> 1) {
          uint64_t v44 = (char *)sub_1006A2B50(v30 > 1, v31 + 1, 1, (unint64_t)v44);
        }
        uint64_t v32 = v44;
        *((void *)v44 + 2) = v31 + 1;
        v24(&v32[v36 + v31 * v21], v42, v5);
        uint64_t v20 = v45;
      }
      v18 += v21;
      if (!--v17)
      {
        v22((uint64_t)v45, 1, 1, v5);
        goto LABEL_21;
      }
    }
  }
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  uint64_t v44 = (char *)_swiftEmptyArrayStorage;
  v33(v45, 1, 1, v5);
LABEL_21:
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1008C9028()
{
  sub_10096CBD0(190);
  v1._uint64_t countAndFlagsBits = 0xD000000000000045;
  v1._object = (void *)0x80000001009BE410;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001009BE460;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v5._object = (void *)0x80000001009BE490;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._object = (void *)0x80000001009BE4B0;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  sub_10096BDC0(v7);
  return 0;
}

uint64_t sub_1008C9190()
{
  sub_10096CBD0(133);
  v1._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x80000001009BE140;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD000000000000021;
  v3._object = (void *)0x80000001009BE180;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001009BE1B0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x2045534C4520200ALL;
  v7._object = (void *)0xEF29444E450A6469;
  sub_10096BDC0(v7);
  return 0;
}

void sub_1008C9300()
{
  sub_10096CBD0(36);
  v0._object = (void *)0x80000001009BE5D0;
  v0._uint64_t countAndFlagsBits = 0xD000000000000022;
  sub_10096BDC0(v0);
  sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
  sub_10096CDF0();
  sub_10096CE20();
  __break(1u);
}

void sub_1008C93BC(int a1, uint64_t a2, uint64_t a3)
{
  int v101 = a1;
  uint64_t v116 = sub_10096B480();
  uint64_t v5 = *(void *)(v116 - 8);
  uint64_t v6 = __chkstk_darwin(v116);
  uint64_t v102 = (char *)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  id v104 = (char *)v95 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v107 = (char *)v95 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v111 = (char *)v95 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v109 = (char *)v95 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v114 = (char *)v95 - v17;
  __chkstk_darwin(v16);
  uint64_t v112 = (char *)v95 - v18;
  uint64_t v19 = sub_10096AE50();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v103 = (char *)v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  os_log_type_t v106 = (char *)v95 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v108 = (char *)v95 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v117 = (char *)v95 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v31 = (char *)v95 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  char v34 = (char *)v95 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  char v37 = (char *)v95 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)v95 - v38;
  uint64_t v105 = a2;
  uint64_t v40 = a2 + OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL;
  uint64_t v118 = v20;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v41((char *)v95 - v38, v40, v19);
  uint64_t v113 = v40;
  v41(v37, v40, v19);
  id v42 = objc_allocWithZone((Class)type metadata accessor for FPFSSQLBackupEngine());
  uint64_t v43 = (char *)sub_10085CB58(v39, v37);
  if (v43)
  {
    uint64_t v110 = v5;
    uint64_t v115 = a3;
    uint64_t v44 = &v43[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL];
    Swift::String v45 = v43;
    v41(v34, (uint64_t)&v43[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v19);
    v41(v31, (uint64_t)v44, v19);
    type metadata accessor for SQLBackupManifest();
    swift_allocObject();
    unsigned int v46 = sub_1001F2CB8(v31);
    v95[1] = v41;
    id v96 = v45;
    uint64_t v98 = v34;
    id v97 = v46;
    swift_retain();
    sub_10096AD80();
    sub_10096AD50();
    os_log_type_t v100 = *(void (**)(char *, uint64_t))(v118 + 8);
    uint64_t v99 = v19;
    uint64_t v48 = v118 + 8;
    v100(v39, v19);
    id v49 = [objc_allocWithZone((Class)NSFileManager) init];
    sub_10096AD20(v50);
    uint64_t v52 = v51;
    id v120 = 0;
    unsigned __int8 v53 = [v49 removeItemAtURL:v51 error:&v120];

    if (v53)
    {
      id v54 = v120;
    }
    else
    {
      id v55 = v120;
      sub_10096ABF0();

      swift_willThrow();
      swift_errorRelease();
    }
    id v56 = [objc_allocWithZone((Class)NSFileManager) init];
    sub_10096AE10();
    NSString v57 = sub_10096BC00();
    swift_bridgeObjectRelease();
    unsigned __int8 v58 = [v56 createFileAtPath:v57 contents:0 attributes:0];

    int v59 = v114;
    if ((v58 & 1) == 0)
    {
      id v60 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v61 = sub_10096B470();
      os_log_type_t v62 = sub_10096C5B0();
      if (os_log_type_enabled(v61, v62))
      {
        id v63 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v63 = 67109120;
        LODWORD(v120) = sub_10096B4D0();
        sub_10096C8C0();
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Failed to save restore timestamp on disk: %d", v63, 8u);
        int v59 = v114;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v116);
    }
    uint64_t v64 = sub_10096AE10();
    unint64_t v66 = v65;
    id v67 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain_n();
    uint64_t v68 = sub_10096B470();
    os_log_type_t v69 = sub_10096C5D0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v118 = v48;
      char v71 = (uint8_t *)v70;
      id v120 = (id)swift_slowAlloc();
      *(_DWORD *)char v71 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v119 = sub_100719D44(v64, v66, (uint64_t *)&v120);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Populating new columns with base path: %s", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v72 = *(char **)(v110 + 8);
      id v73 = v114;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v72 = *(char **)(v110 + 8);
      id v73 = v59;
    }
    uint64_t v114 = v72;
    uint64_t v74 = ((uint64_t (*)(char *, uint64_t))v72)(v73, v116);
    uint64_t v75 = v99;
    uint64_t v76 = v115;
    uint64_t v77 = (uint64_t)v97;
    __chkstk_darwin(v74);
    v95[-4] = v77;
    v95[-3] = v64;
    v95[-2] = v66;
    sub_1008BD878(21, (uint64_t)sub_1008CA8A4, (uint64_t)&v95[-6]);
    swift_bridgeObjectRelease();
    id v78 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    unint64_t v79 = sub_10096B470();
    os_log_type_t v80 = sub_10096C5D0();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Creating indexes", v81, 2u);
      swift_slowDealloc();
    }

    ((void (*)(char *, uint64_t))v114)(v109, v116);
    sub_1008BD878(21, (uint64_t)sub_1008CA8C4, v77);
    sub_1008BEF04(*(void *)(v105 + OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_fpDatabaseURLs), v77);
    uint64_t v83 = v82;
    if (v84)
    {
      swift_release();
      id v85 = (void *)sub_10096ABE0();
      if (v83) {
        NSString v86 = sub_10096BC00();
      }
      else {
        NSString v86 = 0;
      }
      (*(void (**)(uint64_t, void, void *, NSString))(v76 + 16))(v76, 0, v85, v86);
      swift_release();

      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v88 = (uint64_t)v103;
      sub_10096AD50();
      sub_10085C21C(v88);
      v100((char *)v88, v75);
      sub_1001F53B8();
      swift_release();
      if (v101) {
        sub_10085D3DC();
      }
      id v89 = (id)fpfs_current_or_default_log();
      id v90 = v102;
      sub_10096B490();
      uint64_t v91 = sub_10096B470();
      os_log_type_t v92 = sub_10096C5D0();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Calling completion handler with success.", v93, 2u);
        swift_slowDealloc();
      }

      ((void (*)(char *, uint64_t))v114)(v90, v116);
      NSString v94 = sub_10096BC00();
      (*(void (**)(uint64_t, uint64_t, void, NSString))(v76 + 16))(v76, 1, 0, v94);

      swift_release();
    }
    char v87 = v100;
    v100(v117, v75);
    v87(v98, v75);
  }
  else
  {
    NSString v47 = sub_10096BC00();
    (*(void (**)(uint64_t, uint64_t, void, NSString))(a3 + 16))(a3, 1, 0, v47);
  }
}

void sub_1008CA8A4(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1001F7E18(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1008CA8C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1001F81D4(a1, v2, a2);
}

uint64_t sub_1008CA8E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008CA918()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008CAA18(char *a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = *(uint64_t **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008C2760(a1, v7, v1 + v4, v8, v9, v10);
}

uint64_t sub_1008CAAD0()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAAE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

unint64_t sub_1008CAB0C()
{
  unint64_t result = qword_100ADE510[0];
  if (!qword_100ADE510[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100ADE510);
  }
  return result;
}

uint64_t sub_1008CAB60()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAB70(uint64_t a1)
{
  return sub_1008CB250(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1008BE694);
}

uint64_t sub_1008CAB88()
{
  return swift_deallocObject();
}

unint64_t sub_1008CAB98()
{
  unint64_t result = qword_100ACCBB0;
  if (!qword_100ACCBB0)
  {
    sub_10096AE50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ACCBB0);
  }
  return result;
}

uint64_t sub_1008CABF0(void *a1)
{
  aBlock[4] = sub_1008BD840;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100AA3BA0;
  uint64_t v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v3 = [a1 executeSwift:v2 error:aBlock];
  _Block_release(v2);
  id v4 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v3)
  {
    sub_10096ABF0();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1008CAD38()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAD48(void *a1)
{
  return sub_1008C882C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), 52, 0xD000000000000021, (void *)0x80000001009BDDE0, (void *)0xEF203D204449776FLL);
}

uint64_t sub_1008CAD98()
{
  return swift_deallocObject();
}

void *sub_1008CADA8@<X0>(void *a1@<X8>)
{
  return sub_1001F9484(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_1008CADC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F89A8(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_1008CADE4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008CAE1C(void *a1)
{
  return sub_1008C898C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 67, 0xD000000000000030, (void *)0x80000001009BDDA0, sub_10025E6A0);
}

uint64_t sub_1008CAE68()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAE78()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAE88(void *a1)
{
  return sub_1008C861C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1008CAEA0()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAEB0()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAEC0(void *a1)
{
  return sub_1008C882C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), 52, 0xD000000000000021, (void *)0x80000001009BDD50, (void *)0xEF203D204449776FLL);
}

uint64_t sub_1008CAF10()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF20()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF30(uint64_t a1)
{
  return sub_1008BE474(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_1008CAF40()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF50()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF60(uint64_t a1)
{
  return sub_1008BE4FC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_1008CAF70()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF80()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAF90(void *a1)
{
  return sub_1008C882C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), 52, 0xD000000000000021, (void *)0x80000001009BDF10, (void *)0xEF203D204449776FLL);
}

uint64_t sub_1008CAFE0()
{
  return swift_deallocObject();
}

uint64_t sub_1008CAFF0()
{
  return swift_deallocObject();
}

unint64_t sub_1008CB000(void *a1)
{
  return sub_1008C76D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1008CB008()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB018()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB028(void *a1)
{
  return sub_1008C882C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), 53, 0xD000000000000022, (void *)0x80000001009BDFC0, (void *)0xEF203D206469776FLL);
}

uint64_t sub_1008CB078()
{
  return swift_deallocObject();
}

void sub_1008CB088(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001F95D4(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(_DWORD *)(v2 + 32), a2);
}

uint64_t sub_1008CB0A8(void *a1)
{
  return sub_1008C898C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 75, 0xD000000000000038, (void *)0x80000001009BDF80, sub_10025E66C);
}

uint64_t sub_1008CB0F4()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB104()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB114(uint64_t a1)
{
  return sub_1008BE57C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_1008CB124()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB134()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB144(void *a1)
{
  return sub_1008C6834(a1, *(void *)(v1 + 16), *(unsigned int *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1008CB184()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB194()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB1A4(void *a1)
{
  return sub_1008C5D8C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned __int8 *)(v1 + 32) << 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88), *(unsigned char *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t sub_1008CB218()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB228()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB238(uint64_t a1)
{
  return sub_1008CB250(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1008BE3F8);
}

uint64_t sub_1008CB250(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned int *)(v2 + 48));
}

uint64_t sub_1008CB268()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB278()
{
  return swift_deallocObject();
}

uint64_t sub_1008CB288(uint64_t a1)
{
  return sub_1008BE608(a1, *(void *)(v1 + 16), *(void (**)(long long *__return_ptr))(v1 + 24));
}

uint64_t sub_1008CB298()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for RestoreError()
{
  return &type metadata for RestoreError;
}

void *sub_1008CB328@<X0>(void *a1@<X8>)
{
  return sub_1008CADA8(a1);
}

unint64_t sub_1008CB340@<X0>(uint64_t a1@<X8>)
{
  return sub_1008CADC4(a1);
}

void sub_1008CB3C4(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1008CB3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008CB44C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008AA8E0);
}

uint64_t sub_1008CB3F8(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void, void, void, uint64_t))
{
  return a4(*a1, *a2, a2[1], a3);
}

uint64_t sub_1008CB434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008CB44C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1003A9384);
}

uint64_t sub_1008CB44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

unint64_t sub_1008CB4D4()
{
  return 0xD000000000000012;
}

void sub_1008CB4F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, id), uint64_t a5)
{
  uint64_t v6 = v5;
  os_log_type_t v123 = a4;
  uint64_t v124 = a5;
  uint64_t v122 = a3;
  uint64_t v8 = *(void **)v6;
  uint64_t v9 = *(void *)(*(void *)v6 + 600);
  uint64_t v10 = *(void *)(*(void *)v6 + 616);
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_10096C890();
  uint64_t v103 = *(void *)(v12 - 8);
  uint64_t v104 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v102 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v108 = (char *)&v91 - v16;
  uint64_t v106 = v11;
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v100 = v18;
  int v101 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v105 = (char *)&v91 - v19;
  uint64_t v20 = v8[76];
  uint64_t v21 = v8[78];
  uint64_t v22 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v112 = *(void *)(v22 - 8);
  uint64_t v113 = v22;
  __chkstk_darwin(v22);
  os_log_type_t v111 = (char *)&v91 - v23;
  uint64_t v119 = v10;
  uint64_t v120 = v9;
  v126[0] = v9;
  v126[1] = v20;
  v126[2] = v10;
  v126[3] = v21;
  uint64_t v115 = type metadata accessor for ItemReconciliation();
  uint64_t v24 = sub_10096C890();
  uint64_t v109 = *(void *)(v24 - 8);
  uint64_t v110 = v24;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v91 - v25;
  uint64_t v98 = v21;
  uint64_t v99 = v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_10096C890();
  uint64_t v117 = *(void *)(v28 - 8);
  uint64_t v118 = (void (*)(void, void, void))v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v116 = (char *)&v91 - v30;
  uint64_t v121 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = *(void *)(v121 + 64);
  uint64_t v32 = __chkstk_darwin(v29);
  __chkstk_darwin(v32);
  char v34 = (char *)&v91 - v33;
  uint64_t v35 = v6 + v8[72];
  uint64_t v114 = v26;
  sub_1000DEDD8(v35, (uint64_t)v26);
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v97 = v35;
  uint64_t v91 = v31;
  os_log_type_t v92 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = a1;
  uint64_t v95 = v34;
  uint64_t v93 = v6;
  uint64_t v37 = v119;
  uint64_t v36 = v120;
  uint64_t v39 = v114;
  uint64_t v38 = v115;
  uint64_t v40 = *(void *)(v115 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v114, 1, v115) == 1)
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v39, v110);
    uint64_t v41 = v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v116, 1, 1, v96);
    uint64_t v42 = v97;
    uint64_t v43 = v117;
    uint64_t v44 = v118;
LABEL_4:
    (*(void (**)(char *, void (*)(void, void, void)))(v43 + 8))(v41, v44);
    uint64_t v52 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    NSFileProviderItemIdentifier v54 = sub_1006B72B0(v42, 1, v52, AssociatedConformanceWitness);
    id v55 = (id)FPItemNotFoundError();

    v123(0, 0, 0, v55);
    return;
  }
  unsigned int v46 = v111;
  uint64_t v45 = v112;
  uint64_t v47 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v111, &v39[*(int *)(v38 + 52)], v113);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v38);
  uint64_t v48 = v116;
  uint64_t v43 = v117;
  uint64_t v44 = v118;
  (*(void (**)(char *, char *, void))(v117 + 16))(v116, v46, v118);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  uint64_t v41 = v48;
  uint64_t v49 = v121;
  uint64_t v50 = v96;
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48))(v41, 1, v96);
  uint64_t v42 = v97;
  if (v51 == 1) {
    goto LABEL_4;
  }
  id v56 = v41;
  uint64_t v57 = v49 + 32;
  unsigned __int8 v58 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v58(v95, v56, v50);
  uint64_t v59 = *(void *)(v94 + 32);
  id v60 = v108;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v59 + 240))(v97, 1);
  uint64_t v118 = (void (*)(void, void, void))v58;
  uint64_t v61 = v107;
  os_log_type_t v62 = v60;
  id v63 = v60;
  uint64_t v64 = v106;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v62, 1, v106) == 1)
  {
    (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v104);
    uint64_t v65 = swift_getAssociatedTypeWitness();
    uint64_t v66 = swift_getAssociatedConformanceWitness();
    NSFileProviderItemIdentifier v67 = sub_1006B72B0(v97, 1, v65, v66);
    id v68 = (id)FPItemNotFoundError();

    v123(0, 0, 0, v68);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v95, v50);
  }
  else
  {
    uint64_t v115 = v57;
    os_log_type_t v69 = v105;
    uint64_t v116 = *(char **)(v61 + 32);
    uint64_t v117 = v61 + 32;
    ((void (*)(char *, char *, uint64_t))v116)(v105, v63, v64);
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    char v71 = v102;
    v70(v102, v69, v64);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v71, 0, 1, v64);
    uint64_t v72 = v93 + *(void *)(*(void *)v93 + 632);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v103 + 40))(v72, v71, v104);
    swift_endAccess();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v59 + 264))(v125, v97);
    id v73 = v70;
    sub_10001AE98((uint64_t)v125, (uint64_t)v126, &qword_100AD0EA0);
    if (sub_1000DBD64((uint64_t)v126) == 1
      || (uint64_t v74 = (char *)v126[28], swift_bridgeObjectRetain(), sub_1000DBD88((uint64_t)v125), !v74))
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v114 = v74;
    uint64_t v75 = v94;
    uint64_t v76 = *(void *)(*(void *)(v94 + 40) + 16);
    uint64_t v77 = v121;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v92, v95, v96);
    v73(v101, v105, v106);
    unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v79 = (v91 + *(unsigned __int8 *)(v107 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    unint64_t v80 = (v100 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = (void *)swift_allocObject();
    uint64_t v82 = v99;
    v81[2] = v36;
    v81[3] = v82;
    uint64_t v83 = v98;
    v81[4] = v37;
    v81[5] = v83;
    uint64_t v84 = (void (*)(void, void, void, void))v123;
    uint64_t v85 = v124;
    v81[6] = v75;
    v81[7] = v84;
    NSString v86 = v92;
    uint64_t v87 = v93;
    v81[8] = v85;
    v81[9] = v87;
    v118((char *)v81 + v78, v86, v96);
    uint64_t v88 = v106;
    ((void (*)(char *, char *, uint64_t))v116)((char *)v81 + v79, v101, v106);
    *(void *)((char *)v81 + v80) = v122;
    id v89 = *(void (**)(char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v76 + 536);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v90 = v95;
    v89(v95, v114, sub_1008D16D0, v81);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v88);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v90, v96);
  }
}

uint64_t sub_1008CC0BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v143 = a8;
  uint64_t v118 = a7;
  uint64_t v134 = a6;
  uint64_t v144 = a3;
  uint64_t v145 = a1;
  uint64_t v141 = *a2;
  uint64_t v10 = v141;
  uint64_t v142 = a5;
  uint64_t v135 = sub_10096C690();
  uint64_t v129 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v128 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10096C620();
  uint64_t v127 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  os_log_type_t v123 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v125 = (char *)&v111 - v15;
  uint64_t v126 = sub_10096B7D0();
  uint64_t v124 = *(void *)(v126 - 8);
  uint64_t v16 = __chkstk_darwin(v126);
  uint64_t v122 = (uint64_t *)((char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v111 - v18;
  uint64_t v20 = *(void *)(v10 + 104);
  uint64_t v139 = *(void *)(v10 + 88);
  uint64_t v140 = v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v133 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v132 = *(void *)(v133 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  id v137 = (char *)&v111 - v21;
  uint64_t v22 = sub_10096AE50();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v117 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v111 - v26;
  uint64_t v28 = sub_10002B7CC(&qword_100ADE618);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(v145, (uint64_t)v30, &qword_100ADE618);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v30;
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v144;
    *(void *)(v32 + 16) = v144;
    *(void *)(v32 + 24) = a4;
    char v34 = (void *)swift_allocObject();
    v34[2] = v33;
    v34[3] = a4;
    void v34[4] = v31;
    swift_retain_n();
    swift_errorRetain();
    uint64_t v35 = type metadata accessor for Continuation();
    sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1008D1158, v32, (uint64_t)sub_10042BC18, (uint64_t)v34, v35, (uint64_t)&type metadata for String);
    swift_release();
    swift_release();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v120 = a4;
    uint64_t v37 = *v30;
    uint64_t v145 = v30[1];
    uint64_t v146 = a2;
    uint64_t v38 = v30[2];
    uint64_t v39 = (char *)v30 + *(int *)(sub_10002B7CC(&qword_100ADE620) + 80);
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    os_log_type_t v131 = v27;
    uint64_t v112 = v40;
    v40(v27, v39, v22);
    uint64_t v41 = *(void *)(v38 + 16);
    uint64_t v42 = v22;
    uint64_t v119 = v23;
    uint64_t v130 = v38;
    if (v41 || *(void *)(v145 + 16))
    {
      uint64_t v111 = v23 + 32;
      uint64_t v114 = v37;
      uint64_t v115 = v22;
      uint64_t v121 = swift_allocObject();
      *(unsigned char *)(v121 + 16) = 1;
      uint64_t v136 = swift_allocObject();
      *(unsigned char *)(v136 + 16) = 1;
      uint64_t v43 = dispatch_group_create();
      unint64_t v113 = sub_1003B01A8();
      sub_10096B780();
      unint64_t v147 = _swiftEmptyArrayStorage;
      sub_10008174C();
      sub_10002B7CC((uint64_t *)&unk_100ACBC20);
      sub_10007FBA0();
      uint64_t v44 = v125;
      sub_10096CA60();
      uint64_t v45 = v124;
      uint64_t v46 = v126;
      (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v122, v19, v126);
      uint64_t v47 = v127;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v123, v44, v12);
      (*(void (**)(char *, void, uint64_t))(v129 + 104))(v128, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v135);
      uint64_t v128 = (char *)sub_10096C6C0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v12);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v46);
      if (qword_100ACC0A0 != -1) {
        swift_once();
      }
      uint64_t v48 = static GSConflictManager.instance;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = 0;
      uint64_t v135 = swift_allocObject();
      *(void *)(v135 + 16) = 0;
      uint64_t v51 = v130;
      uint64_t v50 = (uint64_t)v131;
      uint64_t v52 = v121;
      if (*(void *)(v130 + 16))
      {
        dispatch_group_enter(v43);
        unsigned __int8 v53 = (void *)swift_allocObject();
        v53[2] = v43;
        v53[3] = v49;
        v53[4] = v52;
        NSFileProviderItemIdentifier v54 = v43;
        swift_retain();
        swift_retain();
        GSConflictManager.updateListOfConflictsToGS(url:toAdd:toRemove:completion:)(v50, (uint64_t)_swiftEmptyArrayStorage, v51, (uint64_t)sub_1008D1890, (uint64_t)v53);
        swift_release();
      }
      uint64_t v55 = v144;
      uint64_t v56 = *(void *)(v145 + 16);
      uint64_t v57 = v120;
      uint64_t v129 = v49;
      if (v56)
      {
        uint64_t v127 = v48;
        swift_bridgeObjectRetain();
        do
        {
          dispatch_group_enter(v43);
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease();
        uint64_t v122 = *(void **)(v146[4] + 16);
        uint64_t v58 = v142;
        uint64_t v126 = v58 + *(void *)(*(void *)v58 + 576);
        unint64_t v113 = *(void *)(v141 + 80);
        uint64_t v59 = *(void *)(v141 + 96);
        uint64_t v60 = type metadata accessor for SnapshotItem();
        swift_retain();
        uint64_t WitnessTable = swift_getWitnessTable();
        os_log_type_t v62 = v118;
        LODWORD(v125) = FileItem.kind.getter(v60, WitnessTable);
        id v63 = &v62[*(int *)(v60 + 48)];
        uint64_t v124 = *(void *)&v63[*(int *)(type metadata accessor for ItemMetadata() + 100)];
        uint64_t v64 = *(uint64_t (**)(uint64_t))(*v146 + 272);
        uint64_t v65 = swift_bridgeObjectRetain();
        os_log_type_t v123 = (char *)v64(v65);
        uint64_t v66 = v119 + 16;
        NSFileProviderItemIdentifier v67 = v117;
        uint64_t v68 = v50;
        uint64_t v69 = v115;
        (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v117, v68, v115);
        unint64_t v70 = (*(unsigned __int8 *)(v66 + 64) + 80) & ~(unint64_t)*(unsigned __int8 *)(v66 + 64);
        unint64_t v71 = (v116 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v72 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v73 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v74 = (void *)swift_allocObject();
        uint64_t v75 = v139;
        v74[2] = v113;
        v74[3] = v75;
        v74[4] = v59;
        uint64_t v76 = v146;
        v74[5] = v140;
        v74[6] = v76;
        v74[7] = v58;
        uint64_t v77 = (char *)v74 + v70;
        uint64_t v78 = v127;
        v74[8] = v43;
        v74[9] = v78;
        v112(v77, v67, v69);
        uint64_t v79 = v129;
        *(void *)((char *)v74 + v71) = v129;
        uint64_t v80 = v135;
        *(void *)((char *)v74 + v72) = v136;
        uint64_t v49 = v79;
        *(void *)((char *)v74 + v73) = v80;
        uint64_t v118 = (char *)(*v122 + 528);
        uint64_t v81 = *(void (**)(uint64_t, void, uint64_t, uint64_t, char *, uint64_t, uint64_t (*)(uint64_t), void *))v118;
        swift_retain();
        swift_retain();
        uint64_t v82 = v43;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v83 = v123;
        v81(v126, v125, v124, v145, v123, 1, sub_1008D19C4, v74);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v57 = v120;
        uint64_t v55 = v144;
      }
      uint64_t v84 = v133;
      uint64_t v85 = v137;
      uint64_t v86 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v137, v134, AssociatedTypeWitness);
      unint64_t v87 = (*(unsigned __int8 *)(v84 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      unint64_t v88 = (v132 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
      id v89 = (char *)swift_allocObject();
      uint64_t v90 = v141;
      uint64_t v91 = v139;
      *((void *)v89 + 2) = *(void *)(v141 + 80);
      *((void *)v89 + 3) = v91;
      uint64_t v92 = v140;
      *((void *)v89 + 4) = *(void *)(v90 + 96);
      *((void *)v89 + 5) = v92;
      *((void *)v89 + 6) = v49;
      uint64_t v93 = v146;
      *((void *)v89 + 7) = v142;
      *((void *)v89 + 8) = v93;
      *((void *)v89 + 9) = v143;
      *((void *)v89 + 10) = v55;
      uint64_t v94 = v135;
      *((void *)v89 + 11) = v57;
      *((void *)v89 + 12) = v94;
      uint64_t v95 = v130;
      *((void *)v89 + 13) = v121;
      *((void *)v89 + 14) = v95;
      uint64_t v96 = v136;
      *((void *)v89 + 15) = v114;
      *((void *)v89 + 16) = v96;
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v89[v87], v85, v86);
      *(void *)&v89[v88] = v145;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v97 = v128;
      sub_1006B791C((uint64_t)"execute(on:continuation:result:completion:)", 43, 2, 0, v128, (uint64_t)sub_1008D1BC0, (uint64_t)v89);

      swift_release();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v131, v115);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v98 = swift_allocObject();
      uint64_t v143 = v98;
      uint64_t v99 = v144;
      uint64_t v100 = v120;
      *(void *)(v98 + 16) = v144;
      *(void *)(v98 + 24) = v100;
      uint64_t v101 = v133;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v137, v134, AssociatedTypeWitness);
      unint64_t v102 = (*(unsigned __int8 *)(v101 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      unint64_t v103 = (v132 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v104 = (char *)swift_allocObject();
      uint64_t v105 = v141;
      uint64_t v106 = v142;
      uint64_t v107 = AssociatedTypeWitness;
      uint64_t v108 = v139;
      *((void *)v104 + 2) = *(void *)(v141 + 80);
      *((void *)v104 + 3) = v108;
      uint64_t v109 = v140;
      *((void *)v104 + 4) = *(void *)(v105 + 96);
      *((void *)v104 + 5) = v109;
      *((void *)v104 + 6) = v37;
      *((void *)v104 + 7) = v146;
      *((void *)v104 + 8) = v106;
      *((void *)v104 + 9) = v99;
      *((void *)v104 + 10) = v100;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v104[v102], v137, v107);
      *(void *)&v104[v103] = v145;
      *(void *)&v104[(v103 + 15) & 0xFFFFFFFFFFFFFFF8] = v130;
      uint64_t v110 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1008D1158, v143, (uint64_t)sub_1008D1DDC, (uint64_t)v104, v110, (uint64_t)&type metadata for String);
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v131, v42);
    }
  }
}

uint64_t sub_1008CCF8C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, unint64_t, void))
{
  id v4 = a4;
  if (!a1)
  {
    type metadata accessor for Mutation();
    uint64_t v12 = sub_10096C110();
    type metadata accessor for ReconciliationMutation();
    sub_10096D230();
    swift_allocObject();
    uint64_t v10 = sub_10096C0D0();
    uint64_t v6 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ReconciliationID();
    uint64_t v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v6, a3 + *(void *)(*(void *)a3 + 576), AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v6 + v7) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1003FC080(v10);
    sub_10035B6FC(v12);
    if (v14)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v4 = a4;
  }
  sub_10096CBD0(40);
  v15._uint64_t countAndFlagsBits = 979659068;
  v15._object = (void *)0xE400000000000000;
  sub_10096BDC0(v15);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v16._uint64_t countAndFlagsBits = 0x736F4C77656E202CLL;
  v16._object = (void *)0xEC0000003A737265;
  sub_10096BDC0(v16);
  sub_10002B7CC((uint64_t *)&unk_100ACB960);
  v17._uint64_t countAndFlagsBits = sub_10096C0B0();
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._object = (void *)0x80000001009BE620;
  v18._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_10096BDC0(v18);
  v19._uint64_t countAndFlagsBits = sub_10096B9D0();
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 62;
  v20._object = (void *)0xE100000000000000;
  sub_10096BDC0(v20);
  v4(0, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

void sub_1008CD3CC(int a1, int a2, uint64_t a3, dispatch_group_t group, uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    uint64_t v8 = (unsigned char *)(a6 + 16);
    uint64_t v9 = (void *)(a5 + 16);
    swift_errorRetain();
    sub_10084559C(group, v9, a3, v8);
  }

  dispatch_group_leave(group);
}

uint64_t sub_1008CD440(uint64_t a1, void *a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v71 = a6;
  uint64_t v80 = a5;
  uint64_t v76 = a4;
  uint64_t v69 = a3;
  uint64_t v74 = *a2;
  uint64_t v75 = (char *)sub_10096B480();
  uint64_t v72 = *((void *)v75 - 1);
  __chkstk_darwin(v75);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (char **)sub_10096AE50();
  uint64_t v73 = (uint64_t)*(v79 - 1);
  __chkstk_darwin(v79);
  uint64_t v68 = v15;
  uint64_t v78 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v70 + 64);
  uint64_t v18 = __chkstk_darwin(v16 - 8);
  uint64_t v77 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  Swift::String v20 = (char *)&v59 - v19;
  uint64_t v21 = sub_10002B7CC(&qword_100ACF770);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B70C(a1, (uint64_t)v23, &qword_100ACF770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = (void *)(a7 + 16);
    uint64_t v25 = *v23;
    id v26 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    uint64_t v27 = sub_10096B470();
    os_log_type_t v28 = sub_10096C5B0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138412290;
      swift_getErrorValue();
      id v31 = Error.prettyDescription.getter(v82);
      v83[0] = v31;
      sub_10096C8C0();
      *uint64_t v30 = v31;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "⚔️  Failed to fetch version: %@", v29, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
    }
    uint64_t v37 = v76;
    uint64_t v38 = (uint64_t)v75;
    uint64_t v39 = v72;

    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v38);
    swift_errorRetain();
    sub_100844370(v37, v24, v25);
    dispatch_group_leave(v37);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v66 = a8;
    uint64_t v63 = a9;
    sub_1005F2DAC((uint64_t)v23, (uint64_t)v20);
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = 1;
    uint64_t v72 = swift_allocObject();
    *(unsigned char *)(v72 + 16) = 0;
    uint64_t v32 = *(void **)(a2[4] + 16);
    sub_10002B7CC(&qword_100ACAF70);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100974D40;
    uint64_t v75 = v20;
    os_log_type_t v62 = v32;
    swift_retain();
    FPItem.version.getter(v83);
    long long v87 = *(_OWORD *)v83;
    long long v86 = *(_OWORD *)&v83[3];
    sub_10001AE98((uint64_t)v84, (uint64_t)v85, &qword_100ACF700);
    sub_100243F20((uint64_t)&v87);
    sub_100243F20((uint64_t)&v86);
    sub_1000A6F50((uint64_t)v85);
    v34.super.Class isa = sub_10096AF20().super.isa;
    v35.super.Class isa = sub_10096AF20().super.isa;
    sub_10001AE98((uint64_t)v85, (uint64_t)v88, &qword_100ACF700);
    uint64_t v67 = a7;
    uint64_t v65 = a2;
    if (v88[1])
    {
      NSString v36 = sub_10096BC00();
      sub_1001FACD4((uint64_t)v85);
    }
    else
    {
      NSString v36 = 0;
    }
    v69 += *(void *)(*(void *)v69 + 576);
    id v41 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v34.super.isa metadataVersion:v35.super.isa lastEditorDeviceName:v36];
    sub_100243F50((uint64_t)&v86);
    sub_100243F50((uint64_t)&v87);

    sub_1000789EC(v83);
    *(void *)(v33 + 32) = v41;
    uint64_t v81 = v33;
    sub_10096C0C0();
    uint64_t v60 = v81;
    uint64_t v61 = type metadata accessor for StagedRemoteVersion;
    sub_1008D248C((uint64_t)v75, v77, type metadata accessor for StagedRemoteVersion);
    uint64_t v42 = v73;
    (*(void (**)(char *, uint64_t, char **))(v73 + 16))(v78, v71, v79);
    unint64_t v43 = (*(unsigned __int8 *)(v70 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    unint64_t v44 = (v17 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = (*(unsigned __int8 *)(v42 + 80) + v45 + 8) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v47 = (v68 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v74;
    *(void *)(v49 + 16) = *(void *)(v74 + 80);
    *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 88);
    uint64_t v51 = v76;
    *(void *)(v49 + 40) = *(void *)(v50 + 104);
    *(void *)(v49 + 48) = v51;
    *(void *)(v49 + 56) = v72;
    sub_1005F2DAC(v77, v49 + v43);
    uint64_t v52 = v64;
    *(void *)(v49 + v44) = v64;
    uint64_t v53 = v52;
    *(void *)(v49 + v45) = v80;
    (*(void (**)(unint64_t, char *, char **))(v42 + 32))(v49 + v46, v78, v79);
    *(void *)(v49 + v47) = v65;
    *(void *)(v49 + v48) = v67;
    *(void *)(v49 + ((v48 + 15) & 0xFFFFFFFFFFFFFFF8)) = v66;
    NSFileProviderItemIdentifier v54 = (void *)swift_allocObject();
    uint64_t v55 = v72;
    v54[2] = v51;
    v54[3] = v55;
    uint64_t v56 = v63;
    v54[4] = v53;
    v54[5] = v56;
    uint64_t v79 = (char **)(*v62 + 520);
    uint64_t v78 = *v79;
    uint64_t v57 = v51;
    swift_retain_n();
    swift_retain_n();
    uint64_t v58 = v57;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    ((void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), uint64_t, void (*)(uint64_t), void *, double, double))v78)(v69, v60, sub_1008D22B8, v49, sub_1008D2460, v54, 1024.0, 1024.0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1008D2714((uint64_t)v75, v61);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1008CDD9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17)
{
  unint64_t v80 = a7;
  uint64_t v79 = a6;
  uint64_t v84 = a3;
  uint64_t v89 = a14;
  uint64_t v90 = a13;
  uint64_t v18 = a11;
  uint64_t v19 = *a15;
  unint64_t v88 = a15;
  uint64_t v86 = v19;
  uint64_t v20 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v20 - 8);
  uint64_t v75 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for GSConflictInfo(0);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v78 = *(void *)(v24 - 8);
  uint64_t v25 = *(void *)(v78 + 64);
  uint64_t v26 = __chkstk_darwin(v24 - 8);
  uint64_t v85 = (uint64_t)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v81 = (uint64_t)&v69 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v69 - v29;
  uint64_t v83 = sub_10096B480();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v32 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = a10 + 16;
  uint64_t v92 = a11;
  uint64_t v93 = a12;
  long long v87 = a9;
  sub_10026BFF4(a9, (void (*)(void))sub_1008D246C);
  if (a8)
  {
    swift_errorRetain();
    id v33 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_1008D248C(a11, (uint64_t)v30, type metadata accessor for StagedRemoteVersion);
    swift_errorRetain();
    swift_errorRetain();
    NSData v34 = sub_10096B470();
    int v35 = sub_10096C5B0();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      int v70 = v35;
      os_log_t v72 = v34;
      uint64_t v73 = a11;
      uint64_t v74 = v23;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v71 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 138412546;
      FPItem.version.getter(v96);
      long long v100 = *(_OWORD *)v96;
      long long v99 = *(_OWORD *)&v96[3];
      sub_10001AE98((uint64_t)v97, (uint64_t)v98, &qword_100ACF700);
      sub_100243F20((uint64_t)&v100);
      sub_100243F20((uint64_t)&v99);
      sub_1000A6F50((uint64_t)v98);
      v37.super.Class isa = sub_10096AF20().super.isa;
      v38.super.Class isa = sub_10096AF20().super.isa;
      sub_10001AE98((uint64_t)v98, (uint64_t)v101, &qword_100ACF700);
      if (v101[1])
      {
        NSString v39 = sub_10096BC00();
        sub_1001FACD4((uint64_t)v98);
      }
      else
      {
        NSString v39 = 0;
      }
      uint64_t v69 = v36 + 4;
      id v40 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v37.super.isa metadataVersion:v38.super.isa lastEditorDeviceName:v39];
      sub_100243F50((uint64_t)&v99);
      sub_100243F50((uint64_t)&v100);

      sub_1000789EC(v96);
      id v95 = v40;
      sub_10096C8C0();
      id v41 = v71;
      *uint64_t v71 = v40;
      sub_1008D2714((uint64_t)v30, type metadata accessor for StagedRemoteVersion);
      *(_WORD *)(v36 + 12) = 2112;
      swift_getErrorValue();
      id v42 = Error.prettyDescription.getter(v94);
      id v95 = v42;
      sub_10096C8C0();
      v41[1] = v42;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v43 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v70, "⚔️  Failed to fetch thumbnail for ConflictLoser %@ thumbnail: %@", (uint8_t *)v36, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      uint64_t v23 = v74;
      uint64_t v18 = v73;
    }
    else
    {
      swift_errorRelease();
      sub_1008D2714((uint64_t)v30, type metadata accessor for StagedRemoteVersion);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v32, v83);
  }
  uint64_t v44 = v81;
  sub_1008D248C(v18, v81, type metadata accessor for StagedRemoteVersion);
  uint64_t v83 = a17;
  uint64_t v82 = a16;
  if (v84)
  {
    id v45 = [v84 url];
    uint64_t v46 = (uint64_t)v75;
    sub_10096ADD0();

    uint64_t v47 = sub_10096AE50();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  }
  else
  {
    uint64_t v48 = sub_10096AE50();
    uint64_t v46 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v75, 1, 1, v48);
  }
  unint64_t v49 = v80;
  uint64_t v50 = v79;
  uint64_t v51 = v78;
  uint64_t v52 = v77;
  uint64_t v53 = v76;
  sub_1005F2DAC(v44, (uint64_t)v23);
  sub_10001AE98(v46, (uint64_t)&v23[*(int *)(v53 + 20)], &qword_100ACA8C0);
  NSFileProviderItemIdentifier v54 = (uint64_t *)&v23[*(int *)(v53 + 24)];
  *NSFileProviderItemIdentifier v54 = v50;
  v54[1] = v49;
  sub_10002B7CC(qword_100ADE628);
  unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_100973BB0;
  uint64_t v84 = type metadata accessor for GSConflictInfo;
  sub_1008D248C((uint64_t)v23, v56 + v55, type metadata accessor for GSConflictInfo);
  sub_10002D830(v50, v49);
  unint64_t v57 = sub_100093834((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v58 = v85;
  sub_1008D248C(v18, v85, type metadata accessor for StagedRemoteVersion);
  unint64_t v59 = (*(unsigned __int8 *)(v51 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v60 = (v25 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v61 = (v60 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = (uint64_t)v23;
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = v86;
  *(void *)(v64 + 16) = *(void *)(v86 + 80);
  *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 88);
  *(void *)(v64 + 40) = *(void *)(v65 + 104);
  sub_1005F2DAC(v58, v64 + v59);
  *(void *)(v64 + v60) = v88;
  uint64_t v66 = v87;
  *(void *)(v64 + v61) = v87;
  *(void *)(v64 + v62) = v82;
  *(void *)(v64 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v83;
  swift_retain();
  id v67 = v66;
  swift_retain();
  swift_retain();
  GSConflictManager.updateListOfConflictsToGS(url:toAdd:toRemove:completion:)(v89, v56, v57, (uint64_t)sub_1008D263C, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1008D2714(v63, v84);
}

uint64_t sub_1008CE710(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v38 - v11;
  uint64_t v55 = sub_10096B480();
  uint64_t v43 = *(void *)(v55 - 8);
  uint64_t v13 = __chkstk_darwin(v55);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v38 - v16;
  swift_beginAccess();
  if (*a1 == 1)
  {
    id v18 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_1008D248C(a2, (uint64_t)v12, type metadata accessor for StagedRemoteVersion);
    uint64_t v19 = sub_10096B470();
    int v20 = sub_10096C590();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      LODWORD(v40) = v20;
      uint64_t v42 = v3;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      os_log_t v41 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      FPItem.version.getter(v48);
      v45[0] = *(_OWORD *)v48;
      long long v54 = v49;
      sub_10001AE98((uint64_t)v50, (uint64_t)&v53, &qword_100ACF700);
      sub_100243F20((uint64_t)v45);
      sub_100243F20((uint64_t)&v54);
      sub_1000A6F50((uint64_t)&v53);
      v22.super.Class isa = sub_10096AF20().super.isa;
      v23.super.Class isa = sub_10096AF20().super.isa;
      sub_10001AE98((uint64_t)&v53, (uint64_t)v46, &qword_100ACF700);
      if (v47)
      {
        NSString v24 = sub_10096BC00();
        sub_1001FACD4((uint64_t)&v53);
      }
      else
      {
        NSString v24 = 0;
      }
      NSData v34 = (objc_class *)[objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v22.super.isa metadataVersion:v23.super.isa lastEditorDeviceName:v24];
      sub_100243F50((uint64_t)&v54);
      sub_100243F50((uint64_t)v45);

      sub_1000789EC(v48);
      *(void *)&long long v52 = v34;
      sub_10096C8C0();
      v41->Class isa = v34;
      sub_1008D2714((uint64_t)v12, type metadata accessor for StagedRemoteVersion);
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v40, "⚔️  Fetch thumbnail for %@ finished after global handler was called", v21, 0xCu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1008D2714((uint64_t)v12, type metadata accessor for StagedRemoteVersion);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v17, v55);
  }
  else
  {
    uint64_t v25 = (void *)(a3 + 16);
    swift_beginAccess();
    if (*(void *)(a3 + 16) == 1)
    {
      uint64_t result = swift_beginAccess();
      if (__OFSUB__(*v25, 1)) {
        __break(1u);
      }
      else {
        --*v25;
      }
    }
    else
    {
      id v27 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      sub_1008D248C(a2, (uint64_t)v10, type metadata accessor for StagedRemoteVersion);
      swift_retain_n();
      uint64_t v28 = sub_10096B470();
      int v29 = sub_10096C590();
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        int v39 = v29;
        os_log_t v41 = v28;
        uint64_t v42 = v3;
        uint64_t v30 = swift_slowAlloc();
        id v40 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 138412546;
        FPItem.version.getter(v48);
        long long v52 = v49;
        long long v53 = *(_OWORD *)v48;
        sub_10001AE98((uint64_t)v50, (uint64_t)v51, &qword_100ACF700);
        sub_100243F20((uint64_t)&v53);
        sub_100243F20((uint64_t)&v52);
        sub_1000A6F50((uint64_t)v51);
        v31.super.Class isa = sub_10096AF20().super.isa;
        v32.super.Class isa = sub_10096AF20().super.isa;
        sub_10001AE98((uint64_t)v51, (uint64_t)&v54, &qword_100ACF700);
        if (*((void *)&v54 + 1))
        {
          NSString v33 = sub_10096BC00();
          sub_1001FACD4((uint64_t)v51);
        }
        else
        {
          NSString v33 = 0;
        }
        v38[1] = v30 + 4;
        id v35 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v31.super.isa metadataVersion:v32.super.isa lastEditorDeviceName:v33];
        sub_100243F50((uint64_t)&v52);
        sub_100243F50((uint64_t)&v53);

        sub_1000789EC(v48);
        *(void *)&v45[0] = v35;
        sub_10096C8C0();
        *id v40 = v35;
        sub_1008D2714((uint64_t)v10, type metadata accessor for StagedRemoteVersion);
        *(_WORD *)(v30 + 12) = 2048;
        swift_beginAccess();
        uint64_t v36 = *(void *)(a3 + 16);
        swift_release();
        uint64_t v44 = v36;
        sub_10096C8C0();
        swift_release();
        os_log_t v37 = v41;
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v39, "⚔️  Fetch thumbnail for %@ has an unbalanced fetch %ld", (uint8_t *)v30, 0x16u);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release();
        sub_1008D2714((uint64_t)v10, type metadata accessor for StagedRemoteVersion);

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v55);
    }
  }
  return result;
}

void sub_1008CEE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = type metadata accessor for StagedRemoteVersion(0);
  __chkstk_darwin(v14);
  uint64_t v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_10096B480();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = &v41[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    uint64_t v48 = v19;
    uint64_t v49 = v14;
    uint64_t v51 = a6;
    swift_errorRetain();
    id v22 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v50 = a4;
    sub_1008D248C(a4, (uint64_t)v16, type metadata accessor for StagedRemoteVersion);
    swift_errorRetain();
    swift_errorRetain();
    NSData v23 = sub_10096B470();
    int v24 = sub_10096C5B0();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      int v42 = v24;
      os_log_t v44 = v23;
      uint64_t v45 = a5;
      uint64_t v46 = a7;
      uint64_t v47 = a8;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      FPItem.version.getter((uint64_t *)v54);
      long long v58 = v54[0];
      long long v57 = *(_OWORD *)((char *)&v54[1] + 8);
      sub_10001AE98((uint64_t)&v55, (uint64_t)v56, &qword_100ACF700);
      sub_100243F20((uint64_t)&v58);
      sub_100243F20((uint64_t)&v57);
      sub_1000A6F50((uint64_t)v56);
      v26.super.Class isa = sub_10096AF20().super.isa;
      v27.super.Class isa = sub_10096AF20().super.isa;
      sub_10001AE98((uint64_t)v56, (uint64_t)v59, &qword_100ACF700);
      if (v59[1])
      {
        NSString v28 = sub_10096BC00();
        sub_1001FACD4((uint64_t)v56);
      }
      else
      {
        NSString v28 = 0;
      }
      id v29 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v26.super.isa metadataVersion:v27.super.isa lastEditorDeviceName:v28];
      sub_100243F50((uint64_t)&v57);
      sub_100243F50((uint64_t)&v58);

      sub_1000789EC((uint64_t *)v54);
      id v53 = v29;
      sub_10096C8C0();
      uint64_t v30 = v43;
      *uint64_t v43 = v29;
      sub_1008D2714((uint64_t)v16, type metadata accessor for StagedRemoteVersion);
      *(_WORD *)(v25 + 12) = 2112;
      swift_getErrorValue();
      id v31 = Error.prettyDescription.getter(v52);
      id v53 = v31;
      sub_10096C8C0();
      v30[1] = v31;
      swift_errorRelease();
      swift_errorRelease();
      NSData v23 = v44;
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v42, "⚔️  Failed to update ConflictLoser %@ to GS: %@", (uint8_t *)v25, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      a8 = v47;
      a7 = v46;
      a5 = v45;
    }
    else
    {
      sub_1008D2714((uint64_t)v16, type metadata accessor for StagedRemoteVersion);
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v48);
    uint64_t v32 = *(void *)(*(void *)(a5 + 40) + 16);
    sub_10002B7CC((uint64_t *)&unk_100ACA8D0);
    uint64_t v33 = sub_10096AE50();
    uint64_t v34 = *(void *)(v33 - 8);
    unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100973BB0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 16))(v36 + v35, v50 + *(int *)(v49 + 20), v33);
    os_log_t v37 = (void *)swift_allocObject();
    NSData v38 = v51;
    void v37[2] = v51;
    v37[3] = a7;
    v37[4] = a3;
    v37[5] = a8;
    int v39 = *(void (**)(uint64_t, void (*)(), void *))(*(void *)v32 + 872);
    swift_errorRetain();
    swift_retain();
    id v40 = v38;
    swift_retain();
    swift_retain();
    v39(v36, sub_1008D27EC, v37);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_errorRelease();
  }
  else
  {
    dispatch_group_leave(a6);
  }
}

void sub_1008CF4C4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)(a2 + 16);
  swift_errorRetain();
  sub_100844370(a1, v7, a3);
  swift_beginAccess();
  *(unsigned char *)(a4 + 16) = 1;
  dispatch_group_leave(a1);
}

void sub_1008CF54C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (unsigned char *)(a3 + 16);
  uint64_t v9 = (void *)(a5 + 16);
  swift_retain();
  swift_errorRetain();
  uint64_t v10 = a2;
  sub_100845788(v10, v8, a4, a1, v9, v10);
}

uint64_t sub_1008CF5C4(unsigned char *a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5)
{
  uint64_t v36 = a3;
  uint64_t v35 = sub_10096B480();
  uint64_t v9 = *(void *)(v35 - 8);
  uint64_t v10 = __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = (void *)(a2 + 16);
  swift_beginAccess();
  *a1 = 1;
  uint64_t result = swift_beginAccess();
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    id v16 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_retain();
    uint64_t v17 = sub_10096B470();
    os_log_type_t v18 = sub_10096C590();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v32 = a4;
    if (v19)
    {
      uint64_t v33 = v9;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      swift_beginAccess();
      id v38 = *(id *)(a2 + 16);
      uint64_t v9 = v33;
      sub_10096C8C0();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "⚔️  Global fetch thumbnail is executed before %ld thumbnails fetch finished", v20, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    uint64_t v21 = v9 + 8;
    id v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v33 = v21;
    v22(v13, v35);
    uint64_t v23 = v36;
    if (v36)
    {
      swift_errorRetain();
      id v24 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_errorRetain();
      uint64_t v25 = sub_10096B470();
      os_log_type_t v26 = sub_10096C5B0();
      if (os_log_type_enabled(v25, v26))
      {
        NSData v27 = (uint8_t *)swift_slowAlloc();
        id v31 = (void *)swift_slowAlloc();
        *(_DWORD *)NSData v27 = 138412290;
        swift_getErrorValue();
        id v28 = Error.prettyDescription.getter(v37);
        id v38 = v28;
        uint64_t v23 = v36;
        sub_10096C8C0();
        *id v31 = v28;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "⚔️ Global fetch thumbnail failed: %@", v27, 0xCu);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
      }
      id v29 = v32;

      v22(v34, v35);
      swift_beginAccess();
      *id v29 = v23;
      swift_errorRelease();
    }
    uint64_t result = swift_beginAccess();
    if ((uint64_t)*v14 >= 1)
    {
      while (1)
      {
        dispatch_group_leave(a5);
        uint64_t result = swift_beginAccess();
        if (__OFSUB__(*v14, 1)) {
          break;
        }
        --*v14;
        uint64_t result = swift_beginAccess();
        if ((uint64_t)*v14 <= 0) {
          return result;
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1008CFA58(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v45 = a6;
  uint64_t v46 = a3;
  int v42 = (void *)*a2;
  uint64_t v17 = v42[78];
  uint64_t v18 = v42[76];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v23 = (char *)&v36 - v22;
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    swift_errorRetain();
    sub_1008CFDB0(v46, a4, 0, 0, v24, a5, v45);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v37 = a10;
    uint64_t v38 = a13;
    uint64_t v40 = a11;
    uint64_t v41 = a9;
    uint64_t v26 = swift_allocObject();
    uint64_t v39 = v26;
    uint64_t v27 = v45;
    *(void *)(v26 + 16) = a5;
    *(void *)(v26 + 24) = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a12, AssociatedTypeWitness);
    unint64_t v28 = (*(unsigned __int8 *)(v20 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v29 = (v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = (char *)swift_allocObject();
    id v31 = v42;
    *((void *)v30 + 2) = v42[75];
    *((void *)v30 + 3) = v18;
    *((void *)v30 + 4) = v31[77];
    *((void *)v30 + 5) = v17;
    uint64_t v32 = v44;
    *((void *)v30 + 6) = v43;
    *((void *)v30 + 7) = a5;
    *((void *)v30 + 8) = v45;
    *((void *)v30 + 9) = v32;
    uint64_t v33 = v37;
    *((void *)v30 + 10) = v41;
    *((void *)v30 + 11) = v33;
    uint64_t v34 = v46;
    *((void *)v30 + 12) = v40;
    *((void *)v30 + 13) = v34;
    *((void *)v30 + 14) = a2;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v30[v28], v23, AssociatedTypeWitness);
    *(void *)&v30[v29] = v38;
    uint64_t v35 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1008D1158, v39, (uint64_t)sub_1008D200C, (uint64_t)v30, v35, (uint64_t)&type metadata for String);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1008CFDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a6;
  *(void *)(v14 + 24) = a7;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a2;
  v15[3] = v7;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a5;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v16 = type metadata accessor for Continuation();
  sub_10035F220((uint64_t)"retry(on:result:message:error:completion:)", 42, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1008D1158, v14, (uint64_t)sub_1008D2888, (uint64_t)v15, v16, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1008CFF10(uint64_t a1, void (*a2)(void, void, unint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    swift_errorRetain();
    a2(0, 0, 0, v15);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v17 = (unsigned char *)(a7 + 16);
    swift_beginAccess();
    BOOL v18 = *(unsigned char *)(a4 + 16) != 1 || *(void *)(a5 + 16) != a6;
    swift_beginAccess();
    char v24 = *v17 | v18;
    type metadata accessor for Mutation();
    uint64_t v23 = sub_10096C110();
    type metadata accessor for ReconciliationMutation();
    sub_10096D230();
    swift_allocObject();
    uint64_t v22 = sub_10096C0D0();
    uint64_t v20 = v19;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ReconciliationID();
    uint64_t v21 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v20, a9 + *(void *)(*(void *)a9 + 576), AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v20 + v21) = v24 & 1;
    swift_storeEnumTagMultiPayload();
    sub_1003FC080(v22);
    sub_10035B6FC(v23);
    swift_bridgeObjectRelease();
    if (!v26)
    {
      swift_bridgeObjectRelease();
      sub_10096CBD0(40);
      v27._uint64_t countAndFlagsBits = 979659068;
      v27._object = (void *)0xE400000000000000;
      sub_10096BDC0(v27);
      sub_10096D270();
      v28._uint64_t countAndFlagsBits = 0x736F4C77656E202CLL;
      v28._object = (void *)0xEC0000003A737265;
      sub_10096BDC0(v28);
      sub_10002B7CC((uint64_t *)&unk_100ACB960);
      v29._uint64_t countAndFlagsBits = sub_10096C0B0();
      sub_10096BDC0(v29);
      swift_bridgeObjectRelease();
      v30._object = (void *)0x80000001009BE620;
      v30._uint64_t countAndFlagsBits = 0xD000000000000011;
      sub_10096BDC0(v30);
      v31._uint64_t countAndFlagsBits = sub_10096B9D0();
      sub_10096BDC0(v31);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 62;
      v32._object = (void *)0xE100000000000000;
      sub_10096BDC0(v32);
      a2(0, 0, 0xE000000000000000, 0);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008D03B8(uint64_t a1, void *a2, uint64_t (*a3)(void, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for JobResult();
  type metadata accessor for Conflict.PopulateConflicts();
  uint64_t v11 = (uint64_t)a2 + *(void *)(*a2 + 576);
  uint64_t v12 = a2[15];
  uint64_t v13 = a2[16];
  uint64_t v14 = a2[17];
  swift_allocObject();
  uint64_t v15 = sub_1008AA800(v11, v12, v13, v14);
  sub_1004D4360(a1, v15);
  swift_release();
  return a3(0, a5, a6, a7);
}

uint64_t type metadata accessor for Conflict.PopulateConflicts()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1008D052C()
{
  return 0xD000000000000015;
}

uint64_t sub_1008D0548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v36 = a5;
  uint64_t v37 = a3;
  uint64_t v33 = a4;
  uint64_t v35 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v34 = (char *)v31 - v8;
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_retain_n();
  uint64_t v14 = sub_10096B470();
  os_log_type_t v15 = sub_10096C590();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v39 = AssociatedTypeWitness;
  if (v16)
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v17 = 136315138;
    v41[0] = v18;
    v31[1] = v17 + 4;
    swift_getAssociatedConformanceWitness();
    uint64_t v19 = sub_10096D220();
    uint64_t v40 = sub_100719D44(v19, v20, v41);
    sub_10096C8C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "⚔️  Removing all remote versions for item %s ...", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t AssociatedTypeWitness = v39;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v21 = v34;
  uint64_t v22 = v35;
  uint64_t v23 = *(void **)(*(void *)(v35 + 32) + 16);
  uint64_t v24 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v34, v6 + *(void *)(*(void *)v6 + 576), AssociatedTypeWitness);
  uint64_t v25 = v23[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v32) = *(_DWORD *)(v25 + 8);
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v33;
  v26[2] = v22;
  void v26[3] = v27;
  uint64_t v28 = v37;
  v26[4] = v36;
  v26[5] = v6;
  v26[6] = v28;
  Swift::String v29 = *(void (**)(char *, void, uint64_t (*)(uint64_t), void *))(*v23 + 544);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29(v21, v32, sub_1008D1148, v26);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v39);
}

uint64_t sub_1008D09C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  id v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a3;
  v13[6] = a4;
  v13[7] = a2;
  swift_retain_n();
  swift_errorRetain();
  uint64_t v14 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10035F220((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)FPDDomainFPFSBackend.isDeadEnd(), 0, (uint64_t)sub_1008D1158, v12, (uint64_t)sub_1008D11B4, (uint64_t)v13, v14, (uint64_t)&type metadata for String);
  swift_release();

  return swift_release();
}

uint64_t sub_1008D0B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  if (a1)
  {
    swift_errorRetain();
    sub_10096CBD0(18);
    v17._uint64_t countAndFlagsBits = 979659068;
    v17._object = (void *)0xE400000000000000;
    sub_10096BDC0(v17);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_10096D270();
    v18._uint64_t countAndFlagsBits = 0x737265736F6C202CLL;
    v18._object = (void *)0xEC0000003E5D5B3ALL;
    sub_10096BDC0(v18);
    sub_1008D0FB4(a3, 0, 0xE000000000000000, a1, a4);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    type metadata accessor for Mutation();
    uint64_t v12 = sub_10096C110();
    type metadata accessor for ReconciliationMutation();
    sub_10096D230();
    swift_allocObject();
    uint64_t v11 = sub_10096C0D0();
    uint64_t v9 = v8;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ReconciliationID();
    uint64_t v10 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9, a2 + *(void *)(*(void *)a2 + 576), AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v9 + v10) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1003FC080(v11);
    sub_10035B6FC(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_errorRetain();
      ((void (*)(void, void, void))a4)(0, 0, 0);
      swift_errorRelease();
      return swift_errorRelease();
    }
    else
    {
      sub_10096CBD0(18);
      v19._uint64_t countAndFlagsBits = 979659068;
      v19._object = (void *)0xE400000000000000;
      sub_10096BDC0(v19);
      sub_10096D270();
      v20._uint64_t countAndFlagsBits = 0x737265736F6C202CLL;
      v20._object = (void *)0xEC0000003E5D5B3ALL;
      sub_10096BDC0(v20);
      a4(0, 0, 0xE000000000000000, 0);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1008D0FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = *v5;
  type metadata accessor for JobResult();
  uint64_t v11 = (uint64_t)v5 + *(void *)(v10 + 576);
  uint64_t v12 = v5[15];
  uint64_t v13 = v5[16];
  uint64_t v14 = v5[17];
  swift_allocObject();
  uint64_t v15 = sub_100610B30(v11, v12, v13, v14);
  sub_1004D4360(a1, v15);
  swift_release();
  return a5(0, a2, a3, a4);
}

uint64_t type metadata accessor for RemoteVersion.CleanRemoteVersions()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1008D10F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008D1148(uint64_t a1)
{
  return sub_1008D09C4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1008D115C()
{
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008D11B4()
{
  return sub_1008D0B14(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v0 + 40));
}

uint64_t sub_1008D11D8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  uint64_t v6 = v0 + ((v3 + v4 + v23) & ~v23);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v5[9], v7);
  uint64_t v9 = v6 + v5[10];
  uint64_t v10 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v9 + *(int *)(v11 + 56), v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v6 + v5[12];
  uint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_10096B0E0();
  uint64_t v16 = *(void *)(v15 - 8);
  Swift::String v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v19 = (uint64_t *)(v12 + v13[33]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_10001E9C0(*v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v6 + v5[13];
  if (*(void *)(v21 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v21 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000CF144(*(void *)(v6 + v5[17]), *(void *)(v6 + v5[17] + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1008D16D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (void *)*((void *)v1 + 6);
  uint64_t v9 = *((void *)v1 + 7);
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v11 = *((void *)v1 + 9);
  uint64_t v12 = *(void *)&v1[(*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8];

  return sub_1008CC0BC(a1, v8, v9, v10, v11, (uint64_t)&v1[v4], &v1[v7], v12);
}

uint64_t sub_1008D1800()
{
  return swift_deallocObject();
}

uint64_t sub_1008D1810()
{
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D1848()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1008D1890(int a1, int a2, uint64_t a3)
{
  sub_1008CD3CC(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1008D189C()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008D19C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008CD440(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), *(NSObject **)(v1 + 64), *(void *)(v1 + 72), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008D1A80()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D1BC0()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1008CFA58(*(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008D1C84()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008D1CBC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D1DDC()
{
  swift_getAssociatedTypeWitness();
  return sub_1008CCF8C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void (**)(void, void, unint64_t, void))(v0 + 72));
}

uint64_t sub_1008D1E9C()
{
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D1EDC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D200C()
{
  swift_getAssociatedTypeWitness();
  return sub_1008CFF10(*(void *)(v0 + 48), *(void (**)(void, void, unint64_t, uint64_t))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_1008D20D8()
{
  return swift_deallocObject();
}

uint64_t sub_1008D20E8()
{
  uint64_t v1 = (int *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v10 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = sub_10096AE50();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (v10 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  swift_release();
  uint64_t v6 = (id *)(v0 + v2);

  unint64_t v7 = (char *)v6 + v1[7];
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v7, v3);
  swift_release();
  swift_release();
  v8((char *)(v0 + v5), v3);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008D22B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)(sub_10096AE50() - 8);
  unint64_t v20 = (v18 + *(unsigned __int8 *)(v19 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008CDD9C(a1, a2, a3, a4, a5, a6, a7, a8, *(void **)(v8 + 48), *(void *)(v8 + 56), v8 + v16, *(void *)(v8 + v17), *(void *)(v8 + v18), v8 + v20, *(void **)(v8 + v21), *(void *)(v8 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v8 + ((((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1008D2448()
{
  return sub_1008D278C((void (*)(void))&_swift_release);
}

void sub_1008D2460(uint64_t a1)
{
  sub_1008CF54C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1008D246C()
{
  return sub_1008CE710(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1008D248C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008D24F4()
{
  uint64_t v1 = (int *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;

  uint64_t v5 = v4 + v1[7];
  uint64_t v6 = sub_10096AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1008D263C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v3 + v9);
  uint64_t v13 = *(NSObject **)(v3 + v10);
  uint64_t v14 = *(void *)(v3 + v11);
  uint64_t v15 = *(void *)(v3 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1008CEE8C(a1, a2, a3, v3 + v8, v12, v13, v14, v15);
}

uint64_t sub_1008D2714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008D2774()
{
  return sub_1008D278C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1008D278C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  swift_release();

  return swift_deallocObject();
}

void sub_1008D27EC()
{
  sub_1008CF4C4(*(NSObject **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1008D27F8(void *a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(v3 + 16))(*a1, *a2, a2[1], a3);
}

uint64_t sub_1008D2830()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D2888()
{
  return sub_1008D03B8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t type metadata accessor for Conflict()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for RemoteVersion()
{
  return swift_getGenericMetadata();
}

void *sub_1008D28F0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_10096CCE0();
    uint64_t v9 = *(void *)(sub_10096AE50() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_10096CCB0();
      sub_10096CCF0();
      sub_10096CD00();
      sub_10096CCC0();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

void *sub_1008D2A38(void (*a1)(void *__return_ptr, uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t v20 = _swiftEmptyArrayStorage;
    sub_10044623C(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = *(void *)(sub_10096AE50() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      a1(v19, v9, &v18);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v19[0];
      uint64_t v11 = v19[1];
      unint64_t v20 = v6;
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_10044623C(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v20;
      }
      _OWORD v6[2] = v13 + 1;
      uint64_t v14 = &v6[2 * v13];
      v14[4] = v10;
      void v14[5] = v11;
      v9 += v16;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

void sub_1008D2BA0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v7;
    if (!v13)
    {
      int64_t v7 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v7);
      if (!v13)
      {
        int64_t v7 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v7);
        if (!v13)
        {
          int64_t v7 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v7);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_5:
    uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 8 * v9);
    sub_100011348(0, (unint64_t *)&qword_100ACB010);
    id v11 = v10;
    sub_10096C720();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v7 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v7);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1008D2D38(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_1008D2D5C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100ACCAB8);
    uint64_t v2 = (unsigned char *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  int64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v13 >= v30) {
      goto LABEL_45;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_45;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_45;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v30) {
            goto LABEL_45;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void *)(a1 + 48) + 16 * v12;
    Swift::UInt64 v18 = *(void *)v17;
    int v19 = *(unsigned __int8 *)(v17 + 8);
    unint64_t v20 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id v21 = v20;
    sub_10002B7CC(&qword_100AD6810);
    swift_dynamicCast();
    sub_10096D4B0();
    if (v19)
    {
      if (v19 == 1)
      {
        sub_10096D4C0(1uLL);
        sub_10096D4F0(v18);
      }
      else
      {
        if (v18) {
          Swift::UInt v22 = 3;
        }
        else {
          Swift::UInt v22 = 2;
        }
        sub_10096D4C0(v22);
      }
    }
    else
    {
      sub_10096D4C0(0);
      sub_10096D4E0(v18);
    }
    uint64_t result = sub_10096D500();
    uint64_t v23 = -1 << v2[32];
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)&v6[8 * (v24 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v24) & ~*(void *)&v6[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)&v6[8 * v25];
      }
      while (v29 == -1);
      unint64_t v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = *((void *)v2 + 6) + 16 * v9;
    *(void *)uint64_t v10 = v18;
    *(unsigned char *)(v10 + 8) = v19;
    *(void *)(*((void *)v2 + 7) + 8 * v9) = v32;
    ++*((void *)v2 + 2);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v30)
  {
LABEL_45:
    swift_release();
    sub_1000146B4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v30) {
      goto LABEL_45;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1008D30DC(uint64_t a1)
{
  return sub_1008D34B0(a1, &qword_100AD0C58);
}

uint64_t sub_1008D30E8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100ACC990);
    uint64_t v2 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  int64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    Swift::UInt64 v18 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    *(void *)&v37[0] = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    uint64_t v17 = *(void **)&v37[0];
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id v19 = v17;
    v18;
    swift_dynamicCast();
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_100042A48(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_100042A48(v36, v37);
    sub_100042A48(v37, &v33);
    uint64_t result = sub_10096CB10(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_100042A48(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1000146B4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1008D34A4(uint64_t a1)
{
  return sub_1008D34B0(a1, &qword_100ACB5B8);
}

uint64_t sub_1008D34B0(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100ADF150);
    uint64_t v4 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(63 - v5) >> 6;
  unint64_t v9 = (char *)(v4 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_28;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v8) {
      goto LABEL_37;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    int64_t v18 = v11 + 1;
    if (!v17)
    {
      int64_t v18 = v11 + 2;
      if (v11 + 2 >= v8) {
        goto LABEL_37;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v11 + 3;
        if (v11 + 3 >= v8) {
          goto LABEL_37;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v11 + 4;
          if (v11 + 4 >= v8) {
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v28 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v11 = v18;
LABEL_28:
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    swift_bridgeObjectRetain();
    sub_10002B7CC(a2);
    sub_10002B7CC((uint64_t *)&unk_100ACECD0);
    swift_dynamicCast();
    uint64_t result = sub_10096C820(v4[5]);
    uint64_t v21 = -1 << *((unsigned char *)v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v9[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v22) & ~*(void *)&v9[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v9[8 * v23];
      }
      while (v27 == -1);
      unint64_t v12 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)&v9[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v12;
    uint64_t v13 = 8 * v12;
    *(void *)(v4[6] + v13) = v20;
    *(void *)(v4[7] + v13) = v29;
    ++v4[2];
  }
  int64_t v19 = v11 + 5;
  if (v11 + 5 >= v8)
  {
LABEL_37:
    swift_release();
    sub_1000146B4();
    return (uint64_t)v4;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v11 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v8) {
      goto LABEL_37;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1008D37C0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100ACC990);
    uint64_t v2 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1001FAC78(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    _OWORD v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100042A48(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_100042A48(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_100042A48(v36, v37);
    sub_100042A48(v37, &v33);
    uint64_t result = sub_10096CB10(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_100042A48(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1000146B4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1008D3B88(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100AD20F0);
    uint64_t v2 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (long long *)v37;
  unint64_t v7 = (long long *)&v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v35 = 0;
  unint64_t v9 = &type metadata for Int;
  uint64_t v10 = &protocol witness table for Int;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v35 + 1;
  if (__OFADD__(v35, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v33) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v34 + 8 * v19);
  int64_t v21 = v35 + 1;
  if (!v20)
  {
    int64_t v21 = v35 + 2;
    if (v35 + 2 >= v33) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v34 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v35 + 3;
      if (v35 + 3 >= v33) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v35 + 4;
        if (v35 + 4 >= v33) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v35 + 5;
          if (v35 + 5 < v33)
          {
            unint64_t v20 = *(void *)(v34 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v35 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v33) {
                break;
              }
              unint64_t v20 = *(void *)(v34 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000146B4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v35 = v21;
  uint64_t v36 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v35 << 6))
  {
    char v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    uint64_t v26 = *(void *)(*(void *)(v1 + 56) + 8 * i);
    _OWORD v37[3] = v9;
    v37[4] = v10;
    v37[0] = v26;
    sub_1001E9E64(v6, (uint64_t)v7);
    sub_1001E9E64(v7, (uint64_t)v40);
    sub_1001E9E64(v40, (uint64_t)&v38);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10000DDD0(v25, v24);
    unint64_t v27 = result;
    if (v28)
    {
      unint64_t v11 = v7;
      uint64_t v12 = v1;
      int64_t v13 = v10;
      unint64_t v14 = v9;
      int64_t v15 = v6;
      int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v16 = v25;
      v16[1] = v24;
      uint64_t v6 = v15;
      unint64_t v9 = v14;
      uint64_t v10 = v13;
      uint64_t v1 = v12;
      unint64_t v7 = v11;
      uint64_t v17 = v2[7] + 40 * v27;
      sub_1000268E0(v17);
      unint64_t result = sub_1001E9E64(&v38, v17);
      unint64_t v5 = v36;
      if (!v36) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v29 = (uint64_t *)(v2[6] + 16 * result);
    *long long v29 = v25;
    v29[1] = v24;
    unint64_t result = sub_1001E9E64(&v38, v2[7] + 40 * result);
    uint64_t v30 = v2[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_34;
    }
    v2[2] = v32;
    unint64_t v5 = v36;
    if (!v36) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v36 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1008D3EC8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB000);
    uint64_t v2 = (void *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v12 >= v27) {
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  int64_t v14 = i + 1;
  if (!v13)
  {
    int64_t v14 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v14);
    if (!v13)
    {
      int64_t v14 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v14);
        if (!v13)
        {
          int64_t v15 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v13 = *(void *)(v28 + 8 * v15);
            if (v13)
            {
              int64_t v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v14 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_36;
              }
              if (v14 >= v27) {
                break;
              }
              unint64_t v13 = *(void *)(v28 + 8 * v14);
              ++v15;
              if (v13) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000146B4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v13 - 1) & v13;
  unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; unint64_t v11 = v10 | (i << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_10009CA78(*(void *)(a1 + 56) + 40 * v11, (uint64_t)v39);
    *(void *)&long long v38 = v18;
    *((void *)&v38 + 1) = v17;
    void v35[2] = v38;
    v36[0] = v39[0];
    v36[1] = v39[1];
    uint64_t v37 = v40;
    uint64_t v30 = v18;
    uint64_t v31 = v17;
    sub_1001E9E64(v36, (uint64_t)v29);
    swift_bridgeObjectRetain();
    sub_10002B7CC(&qword_100ADF178);
    swift_dynamicCast();
    uint64_t v20 = v30;
    uint64_t v19 = v31;
    sub_100042A48(&v32, v34);
    sub_100042A48(v34, v35);
    sub_100042A48(v35, &v33);
    unint64_t result = sub_10000DDD0(v20, v19);
    unint64_t v21 = result;
    if (v22)
    {
      int64_t v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v8 = v20;
      v8[1] = v19;
      unint64_t v9 = (_OWORD *)(v2[7] + 32 * v21);
      sub_1000268E0((uint64_t)v9);
      unint64_t result = (unint64_t)sub_100042A48(&v33, v9);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v23 = (uint64_t *)(v2[6] + 16 * result);
    *char v23 = v20;
    v23[1] = v19;
    unint64_t result = (unint64_t)sub_100042A48(&v33, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1008D4240(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002B7CC(&qword_100ACB228);
    uint64_t v2 = (unsigned char *)sub_10096CEA0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v31 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v31 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v29) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v31 + 1;
    if (!v12)
    {
      int64_t v13 = v31 + 2;
      if (v31 + 2 >= v29) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v31 + 3;
        if (v31 + 3 >= v29) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v31 + 4;
          if (v31 + 4 >= v29) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v31 = v13;
LABEL_28:
    int64_t v15 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    *(void *)&v34[0] = v15;
    *(void *)&v33[0] = v17;
    *((void *)&v33[0] + 1) = v18;
    id v19 = v15;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v20 = *(void *)&v34[0];
    sub_100042A48((_OWORD *)((char *)v34 + 8), v32);
    sub_100042A48(v32, v34);
    sub_100042A48(v34, v33);
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    sub_10096D4B0();
    sub_10096BD50();
    Swift::Int v21 = sub_10096D500();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << v2[32];
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)&v6[8 * (v23 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v23) & ~*(void *)&v6[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)&v6[8 * v24];
      }
      while (v28 == -1);
      unint64_t v8 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v20;
    uint64_t result = (uint64_t)sub_100042A48(v33, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v31 + 5;
  if (v31 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_1000146B4();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v31 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v29) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t (*sub_1008D45E0(void *a1, Swift::UInt64 a2, char a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_10092518C(v6, a2, a3);
  return sub_1008D4650;
}

uint64_t (*sub_1008D4654(void *a1, Swift::UInt64 a2, char a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_10092533C(v6, a2, a3);
  return sub_1008D4650;
}

void (*sub_1008D46C4(void *a1, void *a2))(void *a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_100925230(v4, a2);
  return sub_1008D4730;
}

void sub_1008D4730(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);

  free(v1);
}

uint64_t (*sub_1008D4780(void *a1, Swift::UInt64 a2, char a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1009253DC(v6, a2, a3);
  return sub_1008D4650;
}

void (*sub_1008D47F0(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = sub_10002B7CC(&qword_100AD65C0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_10002B70C(a2, (uint64_t)v6, &qword_100AD65C0);
  v4[5] = sub_10092547C(v4, (uint64_t)v6);
  return sub_1008D489C;
}

void sub_1008D489C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_10002B770((uint64_t)v2, &qword_100AD65C0);
  free(v2);

  free(v1);
}

uint64_t (*sub_1008D4900(void *a1, Swift::UInt64 a2, char a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1009255D8(v6, a2, a3);
  return sub_1008D4650;
}

void sub_1008D4970(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

void sub_1008D49BC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  unint64_t v7 = *(void (**)(uint64_t, void *, id))(a1 + 32);
  swift_retain();
  id v8 = a3;
  id v9 = a4;
  v7(a2, a3, v9);
  swift_release();
}

uint64_t sub_1008D4A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008D4AB8(a1, a2, a3, a4, a5, &qword_100ADF148, sub_1008DC2B4, (void (*)(uint64_t, uint64_t))sub_100843A8C);
}

uint64_t sub_1008D4A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008D4AB8(a1, a2, a3, a4, a5, &qword_100ADF170, sub_1008DCB94, (void (*)(uint64_t, uint64_t))sub_100843AD4);
}

uint64_t sub_1008D4AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t), void (*a8)(uint64_t, uint64_t))
{
  *(unsigned char *)(v8 + 112) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(void *)(v8 + 120) = 0;
  *(void *)(v8 + 128) = 0;
  int64_t v15 = *(void (**)(uint64_t))(*(void *)v8 + 488);
  uint64_t v16 = swift_retain();
  v15(v16);
  *(void *)(v8 + 136) = a1;
  *(void *)(v8 + 80) = a2;
  *(void *)(v8 + 88) = a3;
  *(void *)(v8 + 96) = a4;
  *(void *)(v8 + 104) = a5;
  sub_10002B7CC(a6);
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v8 + 144) = a7(a1);
  uint64_t v17 = swift_retain_n();
  a8(v17, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v8;
}

void *sub_1008D4C50()
{
  return sub_1008D4CF8((void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_1000705CC, (void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_10035A21C);
}

void *sub_1008D4CA4()
{
  return sub_1008D4CF8((void (*)(void, void))sub_1000705CC, (void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_10035A21C, (void (*)(void, void))sub_10035A21C);
}

void *sub_1008D4CF8(void (*a1)(void, void), void (*a2)(void, void), void (*a3)(void, void), void (*a4)(void, void))
{
  a1(v4[2], v4[3]);
  a2(v4[4], v4[5]);
  a3(v4[6], v4[7]);
  sub_1000705CC(v4[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a4(v4[15], v4[16]);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1008D4D98()
{
  sub_10002B7CC((uint64_t *)&unk_100AD0D38);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10097C0C0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100973BA0;
  *(void *)(v2 + 32) = 0xD000000000000011;
  *(void *)(v2 + 40) = 0x80000001009BEDE0;
  uint64_t v3 = v0[2];
  *(void *)(v2 + 88) = &type metadata for UInt64;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = v3;
  uint64_t v4 = sub_10002B7CC((uint64_t *)&unk_100ACECD0);
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 32) = v2;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100973BA0;
  *(void *)(v5 + 32) = 0x6F4370756B6F6F6CLL;
  *(void *)(v5 + 40) = 0xEB00000000746E75;
  uint64_t v6 = *v0;
  *(void *)(v5 + 88) = &type metadata for UInt64;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = v6;
  *(void *)(v1 + 88) = v4;
  *(void *)(v1 + 64) = v5;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100973BA0;
  *(void *)(v7 + 32) = 0x6E756F436E616373;
  *(void *)(v7 + 40) = 0xE900000000000074;
  uint64_t v8 = v0[1];
  *(void *)(v7 + 88) = &type metadata for UInt64;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = v8;
  *(void *)(v1 + 120) = v4;
  *(void *)(v1 + 96) = v7;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100973BA0;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 32) = 0x7461447465736572;
  *(void *)(v9 + 40) = 0xE900000000000065;
  unint64_t v10 = (char *)v0 + *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v11 = sub_10096B0E0();
  *(void *)(v9 + 88) = v11;
  unint64_t v12 = sub_10009C958((uint64_t *)(v9 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v12, v10, v11);
  *(void *)(v1 + 152) = v4;
  *(void *)(v1 + 128) = v9;
  return v1;
}

fp_task_tracker *VFSFileTree.__allocating_init(rootURLs:wharf:pathManager:providerDomainID:openTelemetrySession:fsChangeMonitor:coordinatorPurposeIdentifier:setupRootFolders:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  return VFSFileTree.init(rootURLs:wharf:pathManager:providerDomainID:openTelemetrySession:fsChangeMonitor:coordinatorPurposeIdentifier:setupRootFolders:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1008D5050(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1008D51BC(a1, a2, a3, (uint64_t (*)(void))&_swift_release);
}

void sub_1008D5068(void (*a1)(void *))
{
  sub_100394C70();
  v5[0] = swift_allocError();
  char v6 = 1;
  a1(v5);
  uint64_t v2 = (void *)v5[0];
  uint64_t v3 = (void *)v5[1];
  char v4 = v6;

  sub_10093CD20(v2, v3, v4);
}

uint64_t sub_1008D50E0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1008D50EC(a1, a2, a3, &qword_100AD5650);
}

uint64_t sub_1008D50EC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_10002B7CC(a4);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100394C70();
  *uint64_t v8 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  a1(v8);
  return sub_10002B770((uint64_t)v8, a4);
}

uint64_t sub_1008D51BC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_100394C70();
  uint64_t v7 = swift_allocError();
  char v8 = 1;
  a1(&v7);
  return sub_10093CDB8(v7, v8, a4);
}

void sub_1008D5238(void (*a1)(uint64_t *))
{
  sub_100394C70();
  v2[0] = swift_allocError();
  char v3 = 1;
  a1(v2);
  sub_100247110(v2[0], v2[1], v2[2], v2[3], v2[4], v2[5], v2[6], (void *)v2[7], v3);
}

uint64_t sub_1008D52B4(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  return sub_1008D5394(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001303B8);
}

uint64_t sub_1008D52CC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1008D52E4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1000D5B24);
}

uint64_t sub_1008D52E4(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_100394C70();
  uint64_t v9 = swift_allocError();
  unsigned __int8 v10 = 1;
  a1(&v9);
  uint64_t v5 = v9;
  uint64_t v6 = v10;

  return a4(v5, v6);
}

uint64_t sub_1008D5364(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1008D51BC(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1008D537C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  return sub_1008D5394(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10093CD6C);
}

uint64_t sub_1008D5394(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_100394C70();
  v12[0] = swift_allocError();
  unsigned __int8 v13 = 1;
  a1(v12);
  uint64_t v5 = v12[0];
  uint64_t v6 = v12[1];
  uint64_t v7 = v12[2];
  uint64_t v8 = v12[3];
  uint64_t v9 = v13;

  return a4(v5, v6, v7, v8, v9);
}

uint64_t sub_1008D541C(void (*a1)(void *))
{
  sub_100394C70();
  v7[0] = swift_allocError();
  char v9 = 1;
  a1(v7);
  uint64_t v2 = v7[0];
  uint64_t v3 = v7[1];
  char v4 = v9;
  uint64_t v5 = v8;

  return sub_10058F49C(v2, v3, v5, v4);
}

uint64_t sub_1008D5498()
{
  sub_10096CBD0(61);
  v1._uint64_t countAndFlagsBits = 0x6F4370756B6F6F6CLL;
  v1._object = (void *)0xEC0000003D746E75;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0xEB000000003D746ELL;
  v3._uint64_t countAndFlagsBits = 0x756F436E61637320;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001009BE8D0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_10096BDC0(v5);
  v6._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x6144746573657220;
  v7._object = (void *)0xEB000000003D6574;
  sub_10096BDC0(v7);
  type metadata accessor for VFSCounters(0);
  v8._uint64_t countAndFlagsBits = sub_10096AFE0();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1008D5640(unint64_t a1, char a2)
{
  if (a2)
  {
    unint64_t result = 0xD00000000000001DLL;
    switch(a1)
    {
      case 1uLL:
      case 2uLL:
        unint64_t result = 0xD000000000000029;
        break;
      case 3uLL:
        unint64_t result = 0x20646570706F7244;
        break;
      case 4uLL:
        unint64_t result = 0x204C5255746F6F72;
        break;
      case 5uLL:
        unint64_t result = 0xD000000000000014;
        break;
      case 6uLL:
        unint64_t result = 1953719668;
        break;
      case 7uLL:
        unint64_t result = 0xD000000000000013;
        break;
      case 8uLL:
        unint64_t result = 0xD000000000000019;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_10096CBD0(29);
    swift_bridgeObjectRelease();
    id v3 = sub_10093C344(a1);
    uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    Swift::String v6 = v5;

    v8._uint64_t countAndFlagsBits = v4;
    v8._object = v6;
    sub_10096BDC0(v8);
    swift_bridgeObjectRelease();
    return 0xD00000000000001BLL;
  }
  return result;
}

uint64_t sub_1008D5804(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v24 = a1;
  uint64_t v21 = sub_10096A7B0();
  uint64_t v20 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v19 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  int v5 = *(_DWORD *)(v2 + 56);
  if (v5 < 1) {
    return result;
  }
  uint64_t v23 = *(void *)(v2 + 24);
  int v22 = *(_DWORD *)(v2 + 60);
  swift_beginAccess();
  int v6 = 0;
  while (1)
  {
    Swift::String v7 = (void *)swift_allocObject();
    uint64_t v8 = v24;
    void v7[2] = v2;
    v7[3] = v8;
    uint64_t v9 = v23;
    v7[4] = v25;
    v7[5] = v9;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_10093C68C;
    *(void *)(v10 + 24) = v7;
    aBlock[4] = sub_10002BF50;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_10002BF58;
    aBlock[3] = &unk_100AA5928;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    swift_beginAccess();
    int v12 = fpfs_fgetdirentries();
    swift_endAccess();
    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v11)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __chkstk_darwin(result);
      *(&v18 - 2) = (uint64_t)&v27;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_100442178, (uint64_t)(&v18 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 300);
    }
    int v27 = v12;
    if (v12 < 0) {
      break;
    }
    if (!v12)
    {
      *(unsigned char *)(v2 + 48) = 1;
      return result;
    }
    BOOL v13 = __OFADD__(v6, v12);
    v6 += v12;
    if (v13) {
      goto LABEL_22;
    }
    if (v6 >= v5) {
      return result;
    }
  }
  uint64_t result = sub_10096B4D0();
  if (!result) {
    goto LABEL_23;
  }
  if (sub_10096B4D0() == 9939393)
  {
    sub_1002678E0((uint64_t)aBlock);
    sub_10002B7CC((uint64_t *)&unk_100ACD9A0);
    sub_100025500((unint64_t *)&qword_100AD5640, (uint64_t *)&unk_100ACD9A0);
    swift_allocError();
    sub_10001AE98((uint64_t)aBlock, v14, (uint64_t *)&unk_100ACD9A0);
  }
  else if (sub_10096B4D0() == 9939394)
  {
    objc_msgSend(self, "fp_errorForDataProtectionClass:", 2);
  }
  else
  {
    sub_10096B4D0();
    uint64_t v15 = sub_10096B4A0();
    if ((v15 & 0x100000000) != 0) {
      LODWORD(aBlock[0]) = 22;
    }
    else {
      LODWORD(aBlock[0]) = v15;
    }
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    uint64_t v16 = v19;
    uint64_t v17 = v21;
    sub_10096ABD0();
    sub_10096A790();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v17);
  }
  return swift_willThrow();
}

uint64_t sub_1008D5CDC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  v22[0] = a5;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v7 = sub_10096B480();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v28 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096A7B0();
  v22[2] = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  v22[1] = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = sub_10002B7CC(&qword_100ACB910);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for VFSItem(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = *(void (**)(uint64_t))(*(void *)a2 + 280);
  uint64_t v27 = a2;
  v19(a1);
  uint64_t v20 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10002B770((uint64_t)v14, &qword_100ACB910);
  }
  else
  {
    sub_10001158C((uint64_t)v14, (uint64_t)v18, type metadata accessor for VFSItem);
    v20(v18);
    sub_10092D018((uint64_t)v18, type metadata accessor for VFSItem);
  }
  return 0;
}

void sub_1008D629C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 56);
  int v4 = *(_DWORD *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 168);
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100982910;
  strcpy((char *)(inited + 32), "operationType");
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 48) = 0xD00000000000002ELL;
  *(void *)(inited + 56) = 0x80000001009BED10;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x657079546D657469;
  *(void *)(inited + 88) = 0xE800000000000000;
  type metadata accessor for fpfs_item_type(0);
  *(_DWORD *)(inited + 96) = v2;
  *(void *)(inited + 120) = v7;
  strcpy((char *)(inited + 128), "documentSize");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(void *)(inited + 144) = v3;
  *(void *)(inited + 168) = &type metadata for Int64;
  strcpy((char *)(inited + 176), "physicalSize");
  *(unsigned char *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  *(void *)(inited + 192) = v5;
  *(void *)(inited + 216) = &type metadata for Int64;
  strcpy((char *)(inited + 224), "childItemCount");
  *(unsigned char *)(inited + 239) = -18;
  *(_DWORD *)(inited + 240) = v4;
  *(void *)(inited + 264) = &type metadata for UInt32;
  *(void *)(inited + 272) = 0x6E756F436B6E696CLL;
  *(void *)(inited + 280) = 0xE900000000000074;
  *(void *)(inited + 312) = &type metadata for UInt32;
  *(_DWORD *)(inited + 288) = v4;
  unint64_t v8 = sub_10004621C(inited);
  uint64_t v9 = *(void **)(v1 + 64);
  if (v9)
  {
    id v10 = v9;
    sub_1008D37C0(v8);
    swift_bridgeObjectRelease();
    Class isa = sub_10096B9A0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_10096ABE0();
    [v10 postReportWithCategory:1 type:1 payload:isa error:v12];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008D64C4()
{
  sub_10096CBD0(16);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = VFSItemID.parseableString.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 574254624;
  v8._object = (void *)0xE400000000000000;
  sub_10096BDC0(v8);
  swift_bridgeObjectRetain();
  NSString v1 = sub_10096BC00();
  id v2 = objc_msgSend(v1, "fp_obfuscatedFilename");

  uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v5 = v4;

  v9._uint64_t countAndFlagsBits = v3;
  v9._object = v5;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 8226;
  v10._object = (void *)0xE200000000000000;
  sub_10096BDC0(v10);
  sub_10002B7CC((uint64_t *)&unk_100ADBFF0);
  v11._uint64_t countAndFlagsBits = ItemMetadata.description.getter();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 62;
  v12._object = (void *)0xE100000000000000;
  sub_10096BDC0(v12);
  return 3829820;
}

uint64_t sub_1008D6618(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    if (a2 == 1)
    {
      char v12 = 0;
      if (a6 != 1 || a1 != a5) {
        return v12 & 1;
      }
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_10002C020(a3, a4);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      if (v15)
      {
        if (v13 == 12565487 && v15 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_10096BD70();
          sub_1000364D0(v17, a3, a4);
          swift_bridgeObjectRelease();
          a3 = sub_10096BD10();
          a4 = v18;
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        char v16 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRetain();
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_10002C020(a7, a8);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (v21)
      {
        if (v19 == 12565487 && v21 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        char v22 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        if (v22)
        {
LABEL_27:
          swift_bridgeObjectRetain();
          unint64_t v23 = sub_10096BD70();
          sub_1000364D0(v23, a7, a8);
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_10096BD10();
          a8 = v25;
          swift_bridgeObjectRelease();
          if (a3 != v24) {
            goto LABEL_32;
          }
LABEL_30:
          if (a4 == a8)
          {
            char v12 = 1;
LABEL_33:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v12 & 1;
          }
LABEL_32:
          char v12 = sub_10096D2D0();
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRetain();
      if (a3 != a7) {
        goto LABEL_32;
      }
      goto LABEL_30;
    }
    char v12 = 0;
    if (a1)
    {
      if (a6 == 2 && a5 == 1) {
        goto LABEL_15;
      }
    }
    else if (a6 == 2 && !a5)
    {
      goto LABEL_15;
    }
  }
  else
  {
    char v12 = 0;
    if (!a6 && a1 == a5) {
      goto LABEL_15;
    }
  }
  return v12 & 1;
}

void sub_1008D68E4()
{
  uint64_t v1 = sub_10002B7CC((uint64_t *)&unk_100AD0A90);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(v0, (uint64_t)v3, (uint64_t *)&unk_100AD0A90);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      Swift::String v8 = (int *)sub_10002B7CC((uint64_t *)&unk_100AD0D60);
      uint64_t v9 = *(void *)&v3[v8[24]];
      Swift::UInt v10 = *(void *)&v3[v8[28]];

      Swift::UInt64 v11 = *(void *)v3;
      int v12 = v3[8];
      sub_10096D4C0(2uLL);
      if (v12)
      {
        if (v12 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v11);
        }
        else
        {
          if (v11) {
            Swift::UInt v24 = 3;
          }
          else {
            Swift::UInt v24 = 2;
          }
          sub_10096D4C0(v24);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v11);
      }
      uint64_t v30 = &v3[v8[12]];
      uint64_t v31 = v8[16];
      long long v32 = &v3[v8[20]];
      sub_10096D4C0(v9 & 0xFFFFFDFFFFFFBFFFLL);
      sub_10096D4C0(v10);
      sub_1000D35F4(*(void *)v32, *((void *)v32 + 1), *((void *)v32 + 2), *((void *)v32 + 3), *((void *)v32 + 4));

      long long v33 = (uint64_t *)&unk_100AD0CF0;
      uint64_t v34 = (uint64_t)v30;
      goto LABEL_58;
    case 2u:

      Swift::UInt64 v13 = *(void *)v3;
      int v14 = v3[8];
      sub_10096D4C0(3uLL);
      if (v14)
      {
        if (v14 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v13);
        }
        else
        {
          if (v13) {
            Swift::UInt v25 = 3;
          }
          else {
            Swift::UInt v25 = 2;
          }
          sub_10096D4C0(v25);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v13);
      }
      sub_1000D35F4(*((void *)v3 + 3), *((void *)v3 + 4), *((void *)v3 + 5), *((void *)v3 + 6), *((void *)v3 + 7));

      return;
    case 3u:
      uint64_t v15 = sub_10002B7CC(&qword_100AD6F10);
      Swift::UInt v16 = *(void *)&v3[*(int *)(v15 + 80)];
      Swift::UInt64 v17 = *(void *)v3;
      int v18 = v3[8];
      sub_10096D4C0(4uLL);
      if (v18)
      {
        if (v18 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v17);
        }
        else
        {
          if (v17) {
            Swift::UInt v26 = 3;
          }
          else {
            Swift::UInt v26 = 2;
          }
          sub_10096D4C0(v26);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v17);
      }
      uint64_t v28 = &v3[*(int *)(v15 + 48)];
      swift_bridgeObjectRetain();
      sub_10096BD50();
      swift_bridgeObjectRelease_n();
      Swift::UInt v29 = v16;
      goto LABEL_54;
    case 4u:
      Swift::UInt64 v19 = *(void *)v3;
      int v20 = v3[8];
      sub_10096D4C0(5uLL);
      if (!v20) {
        goto LABEL_15;
      }
      goto LABEL_17;
    case 5u:
      Swift::UInt64 v19 = *(void *)v3;
      int v20 = v3[8];
      sub_10096D4C0(6uLL);
      if (v20) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 6u:
      Swift::UInt64 v21 = *(void *)v3;
      int v22 = v3[8];
      sub_10096D4C0(8uLL);
      if (v22)
      {
        if (v22 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v21);
        }
        else
        {
          if (v21) {
            Swift::UInt v27 = 3;
          }
          else {
            Swift::UInt v27 = 2;
          }
          sub_10096D4C0(v27);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v21);
      }
      uint64_t v34 = (uint64_t)&v3[*(int *)(sub_10002B7CC((uint64_t *)&unk_100AD0D70) + 48)];
      long long v33 = &qword_100ACB910;
      goto LABEL_58;
    case 7u:
      Swift::UInt64 v19 = *(void *)v3;
      int v20 = v3[8];
      sub_10096D4C0(7uLL);
      if (v20)
      {
LABEL_17:
        if (v20 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v19);
        }
        else if (v19)
        {
          sub_10096D4C0(3uLL);
        }
        else
        {
          sub_10096D4C0(2uLL);
        }
      }
      else
      {
LABEL_15:
        sub_10096D4C0(0);
        sub_10096D4E0(v19);
      }
      break;
    default:
      int v4 = (int *)sub_10002B7CC((uint64_t *)&unk_100AD6BE0);
      Swift::UInt v5 = *(void *)&v3[v4[16]];

      Swift::UInt64 v6 = *(void *)v3;
      int v7 = v3[8];
      sub_10096D4C0(1uLL);
      if (v7)
      {
        if (v7 == 1)
        {
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v6);
        }
        else
        {
          if (v6) {
            Swift::UInt v23 = 3;
          }
          else {
            Swift::UInt v23 = 2;
          }
          sub_10096D4C0(v23);
        }
      }
      else
      {
        sub_10096D4C0(0);
        sub_10096D4E0(v6);
      }
      uint64_t v28 = &v3[v4[12]];
      Swift::UInt v29 = v5;
LABEL_54:
      sub_10096D4C0(v29);
      long long v33 = (uint64_t *)&unk_100AD0CF0;
      uint64_t v34 = (uint64_t)v28;
LABEL_58:
      sub_10002B770(v34, v33);
      break;
  }
}

void sub_1008D6D84()
{
  uint64_t v1 = sub_10002B7CC((uint64_t *)&unk_100AD65B0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B70C(v0, (uint64_t)v3, (uint64_t *)&unk_100AD65B0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = (int *)sub_10002B7CC(&qword_100AD0D80);
      uint64_t v5 = (uint64_t)&v3[v9[12]];
      Swift::UInt v10 = (uint64_t *)&v3[v9[20]];
      uint64_t v11 = *(void *)&v3[v9[24]];
      Swift::UInt v12 = *(void *)&v3[v9[28]];

      Swift::UInt64 v13 = *(void **)v3;
      sub_10096D4C0(2uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      sub_10096D4C0(v11 & 0xFFFFFDFFFFFFBFFFLL);
      sub_10096D4C0(v12);

      sub_1000D32B4(*v10, v10[1], v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8]);
      goto LABEL_7;
    case 2u:

      int v14 = *(void **)v3;
      sub_10096D4C0(3uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();

      swift_bridgeObjectRelease();
      sub_1000D32B4(*((void *)v3 + 3), *((void *)v3 + 4), *((void *)v3 + 5), *((void *)v3 + 6), *((void *)v3 + 7), *((void *)v3 + 8), *((void *)v3 + 9), *((void *)v3 + 10), *((void *)v3 + 11));
      return;
    case 3u:
      uint64_t v15 = sub_10002B7CC(&qword_100AD0D88);
      uint64_t v5 = (uint64_t)&v3[*(int *)(v15 + 48)];
      Swift::UInt v16 = *(void *)&v3[*(int *)(v15 + 80)];
      int v7 = *(void **)v3;
      sub_10096D4C0(4uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10096BD50();
      swift_bridgeObjectRelease_n();
      Swift::UInt v8 = v16;
      goto LABEL_6;
    case 4u:
      Swift::UInt64 v17 = *(void **)v3;
      Swift::UInt v18 = 5;
      goto LABEL_12;
    case 5u:
      Swift::UInt64 v17 = *(void **)v3;
      Swift::UInt v18 = 6;
      goto LABEL_12;
    case 6u:
      Swift::UInt64 v19 = *(void **)v3;
      sub_10096D4C0(8uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();

      swift_bridgeObjectRelease();
      return;
    case 7u:
      Swift::UInt64 v17 = *(void **)v3;
      Swift::UInt v18 = 7;
LABEL_12:
      sub_10096D4C0(v18);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();

      swift_bridgeObjectRelease();
      break;
    default:
      int v4 = (int *)sub_10002B7CC(&qword_100AD68E0);
      uint64_t v5 = (uint64_t)&v3[v4[12]];
      Swift::UInt v6 = *(void *)&v3[v4[16]];

      int v7 = *(void **)v3;
      sub_10096D4C0(1uLL);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_10096BD50();
      swift_bridgeObjectRelease();
      Swift::UInt v8 = v6;
LABEL_6:
      sub_10096D4C0(v8);

LABEL_7:
      sub_10002B770(v5, (uint64_t *)&unk_100AD6350);
      break;
  }
}

void sub_1008D7138(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::UInt v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::UInt v10 = (char *)&v83 - v9;
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 1;
      goto LABEL_59;
    case 2uLL:
      int v14 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v15 = swift_projectBox();
      uint64_t v16 = v15 + v14[12];
      Swift::UInt64 v17 = *(void **)(v15 + v14[16]);
      Swift::UInt v18 = *(void *)(v15 + v14[20]);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
      sub_10096D4C0(2uLL);
      id v19 = v17;
      sub_10096BD50();
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_10096BAD0();
      sub_10096C840();
      sub_10096D4C0(v18);

      goto LABEL_12;
    case 3uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 3;
      goto LABEL_59;
    case 4uLL:
      Swift::UInt64 v21 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v20 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v22 = 4;
      goto LABEL_8;
    case 5uLL:
      Swift::UInt64 v21 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v20 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v22 = 5;
LABEL_8:
      sub_10096D4C0(v22);
      if (v21)
      {
        sub_10096D4D0(1u);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        id v23 = v21;
        id v24 = v20;
        id v84 = v23;
        sub_10096BD50();

LABEL_60:
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10096D4D0(0);
        id v78 = v20;
        id v84 = 0;
      }
      sub_10096C840();

LABEL_92:
      id v82 = v84;

      return;
    case 6uLL:
      uint64_t v25 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v26 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v26 + *(int *)(v25 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v26, v4);
      Swift::UInt v28 = 6;
      goto LABEL_65;
    case 7uLL:
      uint64_t v29 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v29, v4);
      sub_10096D4C0(7uLL);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_10096BAD0();
LABEL_12:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return;
    case 8uLL:
      uint64_t v30 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v31 = 8;
      goto LABEL_45;
    case 9uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 9;
      goto LABEL_59;
    case 0xAuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 10;
      goto LABEL_59;
    case 0xBuLL:
      Swift::UInt v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v33 = 11;
      goto LABEL_52;
    case 0xCuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 12;
      goto LABEL_59;
    case 0xDuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 13;
      goto LABEL_59;
    case 0xEuLL:
      unint64_t v34 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v35 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0xEuLL);
      id v84 = v35;
      sub_1006B153C(a1, v34);
      goto LABEL_41;
    case 0xFuLL:
      uint64_t v36 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v37 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0xFuLL);
      id v84 = v37;
      sub_1006B12F8(a1, v36);
      goto LABEL_41;
    case 0x10uLL:
      id v84 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      long long v38 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v39 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v40 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v41 = 16;
      goto LABEL_26;
    case 0x11uLL:
      id v84 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      long long v38 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v39 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v40 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v41 = 17;
      goto LABEL_26;
    case 0x12uLL:
      id v84 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      long long v38 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v39 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v40 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v41 = 18;
      goto LABEL_26;
    case 0x13uLL:
      id v84 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      long long v38 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v39 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v40 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v41 = 19;
LABEL_26:
      sub_10096D4C0(v41);
      if (v40)
      {
        sub_10096D4C0(1uLL);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10009C394(v38, v39, 1);
        sub_10009C394(v38, v39, 1);
        id v42 = v84;
        sub_10096BD50();
        swift_bridgeObjectRelease();
        sub_1000D30C4(v38, v39, 1);
      }
      else
      {
        sub_10096D4C0(0);
        if (v39)
        {
          if (v39 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0((Swift::UInt64)v38);
          }
          else
          {
            if (v38) {
              Swift::UInt v79 = 3;
            }
            else {
              Swift::UInt v79 = 2;
            }
            sub_10096D4C0(v79);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0((Swift::UInt32)v38);
        }
        id v81 = v84;
      }
      sub_10096C840();
      sub_1000D30C4(v38, v39, v40);
      goto LABEL_92;
    case 0x14uLL:
      uint64_t v43 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v44 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v44 + *(int *)(v43 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v44, v4);
      Swift::UInt v28 = 20;
      goto LABEL_65;
    case 0x15uLL:
      Swift::UInt v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v46 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v47 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v48 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10096D4C0(0x15uLL);
      if (v48) {
        goto LABEL_56;
      }
      sub_10096D4C0(0);
      if (!v47) {
        goto LABEL_87;
      }
      if (v47 == 1) {
        goto LABEL_35;
      }
      goto LABEL_80;
    case 0x16uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 22;
      goto LABEL_59;
    case 0x17uLL:
      uint64_t v49 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v50 = 23;
      goto LABEL_40;
    case 0x18uLL:
      uint64_t v49 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v50 = 24;
      goto LABEL_40;
    case 0x19uLL:
      uint64_t v49 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v50 = 25;
LABEL_40:
      sub_10096D4C0(v50);
      id v84 = v49;
LABEL_41:
      sub_10096C840();
      goto LABEL_92;
    case 0x1AuLL:
      uint64_t v75 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v74 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0x1AuLL);
      if (v75)
      {
        sub_10096D4D0(1u);
        id v84 = v75;
        sub_10096C840();
      }
      else
      {
        sub_10096D4D0(0);
        id v84 = 0;
      }
      sub_10096D4C0(v74);
      goto LABEL_92;
    case 0x1BuLL:
      Swift::UInt v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v33 = 27;
      goto LABEL_52;
    case 0x1CuLL:
      Swift::UInt v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v33 = 28;
      goto LABEL_52;
    case 0x1DuLL:
      uint64_t v30 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v31 = 30;
LABEL_45:
      sub_10096D4C0(v31);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      id v51 = v30;
      sub_10096BD50();

      swift_bridgeObjectRelease();
      return;
    case 0x1EuLL:
      unint64_t v52 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_10096D4C0(0x20uLL);
      sub_1008D8038(a1, v52);
      return;
    case 0x1FuLL:
      Swift::UInt v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v33 = 33;
LABEL_52:
      sub_10096D4C0(v33);
      Swift::UInt v53 = v32;
      goto LABEL_86;
    case 0x20uLL:
      uint64_t v54 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v55 = swift_projectBox();
      Swift::UInt8 v56 = *(unsigned char *)(v55 + *(int *)(v54 + 48));
      long long v57 = *(void **)(v55 + *(int *)(v54 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v55, v4);
      sub_10096D4C0(0x23uLL);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v58 = v57;
      sub_10096BAD0();
      sub_10096D4D0(v56);
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      goto LABEL_73;
    case 0x21uLL:
      uint64_t v59 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v60 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v60 + *(int *)(v59 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v60, v4);
      Swift::UInt v28 = 36;
      goto LABEL_65;
    case 0x22uLL:
      Swift::UInt v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v46 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v47 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v48 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10096D4C0(0x25uLL);
      if (v48)
      {
LABEL_56:
        sub_10096D4C0(1uLL);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        id v61 = v46;
        sub_10096BD50();
        swift_bridgeObjectRelease();
        sub_1000D30C4(v46, v47, 1);
      }
      else
      {
        sub_10096D4C0(0);
        if (v47)
        {
          if (v47 == 1)
          {
LABEL_35:
            sub_10096D4C0(1uLL);
            sub_10096D4F0((Swift::UInt64)v46);
          }
          else
          {
LABEL_80:
            if (v46) {
              Swift::UInt v80 = 3;
            }
            else {
              Swift::UInt v80 = 2;
            }
            sub_10096D4C0(v80);
          }
        }
        else
        {
LABEL_87:
          sub_10096D4C0(0);
          sub_10096D4E0((Swift::UInt32)v46);
        }
      }
      sub_10096D4C0(v45);
      sub_1000D30C4(v46, v47, v48);
      return;
    case 0x23uLL:
      uint64_t v62 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v63 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v63 + *(int *)(v62 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v63, v4);
      Swift::UInt v28 = 38;
      goto LABEL_65;
    case 0x24uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v12 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v13 = 39;
      goto LABEL_59;
    case 0x25uLL:
      uint64_t v64 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v65 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v65 + *(int *)(v64 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v65, v4);
      Swift::UInt v28 = 40;
      goto LABEL_65;
    case 0x26uLL:
      uint64_t v76 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v77 = swift_projectBox();
      Swift::UInt v68 = *(void *)(v77 + *(int *)(v76 + 48));
      uint64_t v69 = *(void **)(v77 + *(int *)(v76 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v77, v4);
      Swift::UInt v70 = 41;
      goto LABEL_72;
    case 0x27uLL:
      uint64_t v66 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v67 = swift_projectBox();
      Swift::UInt v68 = *(void *)(v67 + *(int *)(v66 + 48));
      uint64_t v69 = *(void **)(v67 + *(int *)(v66 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v67, v4);
      Swift::UInt v70 = 42;
LABEL_72:
      sub_10096D4C0(v70);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v58 = v69;
      sub_10096BAD0();
      sub_10096D4C0(v68);
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_73:

      return;
    case 0x28uLL:
      uint64_t v71 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v72 = swift_projectBox();
      Swift::UInt v27 = *(void **)(v72 + *(int *)(v71 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v72, v4);
      Swift::UInt v28 = 43;
LABEL_65:
      sub_10096D4C0(v28);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v73 = v27;
      sub_10096BAD0();
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

      return;
    case 0x29uLL:
      if (a2 == 0xA000000000000002)
      {
        Swift::UInt v53 = 29;
      }
      else if (a2 == 0xA00000000000000ALL)
      {
        Swift::UInt v53 = 31;
      }
      else
      {
        Swift::UInt v53 = 34;
      }
LABEL_86:
      sub_10096D4C0(v53);
      return;
    default:
      uint64_t v11 = *(void **)(a2 + 16);
      Swift::UInt v12 = *(void **)(a2 + 24);
      Swift::UInt v13 = 0;
LABEL_59:
      sub_10096D4C0(v13);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      id v84 = v11;
      id v20 = v12;
      sub_10096BD50();
      goto LABEL_60;
  }
}

void sub_1008D8038(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::UInt v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::UInt v10 = (char *)&v81 - v9;
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 1;
      goto LABEL_64;
    case 2uLL:
      uint64_t v15 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      uint64_t v16 = swift_projectBox();
      uint64_t v17 = v16 + v15[12];
      Swift::UInt v18 = *(void **)(v16 + v15[16]);
      Swift::UInt v19 = *(void *)(v16 + v15[20]);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v17, v4);
      sub_10096D4C0(2uLL);
      id v20 = v18;
      sub_10096BD50();
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_10096BAD0();
      sub_10096C840();
      sub_10096D4C0(v19);

      goto LABEL_12;
    case 3uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 3;
      goto LABEL_64;
    case 4uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v21 = 4;
      goto LABEL_8;
    case 5uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v21 = 5;
LABEL_8:
      sub_10096D4C0(v21);
      if (v13 == 255)
      {
        sub_10096D4D0(0);
      }
      else
      {
        sub_10096D4D0(1u);
        if (v13)
        {
LABEL_65:
          if (v13 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0(v12);
          }
          else
          {
            if (v12) {
              Swift::UInt v66 = 3;
            }
            else {
              Swift::UInt v66 = 2;
            }
            sub_10096D4C0(v66);
          }
        }
        else
        {
LABEL_55:
          sub_10096D4C0(0);
          sub_10096D4E0(v12);
        }
      }
      id v67 = v11;
LABEL_74:
      id v82 = v67;
LABEL_75:
      sub_10096C840();
LABEL_101:
      id v80 = v82;

      break;
    case 6uLL:
      uint64_t v22 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v23 = swift_projectBox();
      id v24 = *(void **)(v23 + *(int *)(v22 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v23, v4);
      Swift::UInt v25 = 6;
      goto LABEL_50;
    case 7uLL:
      uint64_t v26 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v26, v4);
      sub_10096D4C0(7uLL);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_10096BAD0();
LABEL_12:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return;
    case 8uLL:
      Swift::UInt64 v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v28 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(8uLL);
      if (!v28) {
        goto LABEL_89;
      }
      if (v28 == 1) {
        goto LABEL_15;
      }
      goto LABEL_82;
    case 9uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 9;
      goto LABEL_64;
    case 0xAuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 10;
      goto LABEL_64;
    case 0xBuLL:
      Swift::UInt v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v30 = 11;
      goto LABEL_79;
    case 0xCuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 12;
      goto LABEL_64;
    case 0xDuLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 13;
      goto LABEL_64;
    case 0xEuLL:
      unint64_t v31 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v32 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0xEuLL);
      id v82 = v32;
      sub_1006B153C(a1, v31);
      goto LABEL_75;
    case 0xFuLL:
      uint64_t v33 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v34 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0xFuLL);
      id v82 = v34;
      sub_1006B12F8(a1, v33);
      goto LABEL_75;
    case 0x10uLL:
      id v82 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v35 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v36 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v37 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v38 = 16;
      goto LABEL_58;
    case 0x11uLL:
      id v82 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v35 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v36 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v37 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v38 = 17;
      goto LABEL_58;
    case 0x12uLL:
      id v82 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v35 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v36 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v37 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v38 = 18;
      goto LABEL_58;
    case 0x13uLL:
      id v82 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v35 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v36 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v37 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      Swift::UInt v38 = 19;
LABEL_58:
      sub_10096D4C0(v38);
      if (v37)
      {
        sub_10096D4C0(1uLL);
        if (v36)
        {
          if (v36 == 1)
          {
            sub_10096D4C0(1uLL);
            sub_10096D4F0((Swift::UInt64)v35);
          }
          else
          {
            if (v35) {
              Swift::UInt v78 = 3;
            }
            else {
              Swift::UInt v78 = 2;
            }
            sub_10096D4C0(v78);
          }
        }
        else
        {
          sub_10096D4C0(0);
          sub_10096D4E0((Swift::UInt32)v35);
        }
        id v79 = v82;
      }
      else
      {
        sub_10096D4C0(0);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        sub_10014E450(v35, v36, 0);
        sub_10014E450(v35, v36, 0);
        id v65 = v82;
        sub_10096BD50();
        swift_bridgeObjectRelease();
        sub_10017E788(v35, v36, 0);
      }
      sub_10096C840();
      sub_10017E788(v35, v36, v37);
      goto LABEL_101;
    case 0x14uLL:
      uint64_t v39 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v40 = swift_projectBox();
      id v24 = *(void **)(v40 + *(int *)(v39 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v40, v4);
      Swift::UInt v25 = 20;
      goto LABEL_50;
    case 0x15uLL:
      Swift::UInt v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      id v42 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v43 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v44 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10096D4C0(0x15uLL);
      if ((v44 & 1) == 0) {
        goto LABEL_56;
      }
      sub_10096D4C0(1uLL);
      if (!v43) {
        goto LABEL_94;
      }
      if (v43 == 1) {
        goto LABEL_31;
      }
      goto LABEL_44;
    case 0x16uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 22;
      goto LABEL_64;
    case 0x17uLL:
      Swift::UInt v45 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v46 = 23;
      goto LABEL_73;
    case 0x18uLL:
      Swift::UInt v45 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v46 = 24;
      goto LABEL_73;
    case 0x19uLL:
      Swift::UInt v45 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v46 = 25;
LABEL_73:
      sub_10096D4C0(v46);
      id v67 = v45;
      goto LABEL_74;
    case 0x1AuLL:
      uint64_t v69 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v68 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0x1AuLL);
      if (v69)
      {
        sub_10096D4D0(1u);
        id v82 = v69;
        sub_10096C840();
      }
      else
      {
        sub_10096D4D0(0);
        id v82 = 0;
      }
      sub_10096D4C0(v68);
      goto LABEL_101;
    case 0x1BuLL:
      Swift::UInt v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v30 = 27;
      goto LABEL_79;
    case 0x1CuLL:
      Swift::UInt v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v30 = 28;
      goto LABEL_79;
    case 0x1DuLL:
      Swift::UInt64 v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v70 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      sub_10096D4C0(0x1EuLL);
      if (v70)
      {
        if (v70 == 1)
        {
LABEL_15:
          sub_10096D4C0(1uLL);
          sub_10096D4F0(v27);
        }
        else
        {
LABEL_82:
          if (v27) {
            Swift::UInt v63 = 3;
          }
          else {
            Swift::UInt v63 = 2;
          }
LABEL_105:
          sub_10096D4C0(v63);
        }
      }
      else
      {
LABEL_89:
        sub_10096D4C0(0);
        sub_10096D4E0(v27);
      }
      break;
    case 0x1EuLL:
      uint64_t v47 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_10096D4C0(0x20uLL);
      sub_1008D7138(a1, v47);
      return;
    case 0x1FuLL:
      Swift::UInt v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      Swift::UInt v30 = 33;
LABEL_79:
      sub_10096D4C0(v30);
      Swift::UInt v63 = v29;
      goto LABEL_105;
    case 0x20uLL:
      uint64_t v48 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v49 = swift_projectBox();
      Swift::UInt8 v50 = *(unsigned char *)(v49 + *(int *)(v48 + 48));
      id v51 = *(void **)(v49 + *(int *)(v48 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v49, v4);
      sub_10096D4C0(0x23uLL);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v52 = v51;
      sub_10096BAD0();
      sub_10096D4D0(v50);
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      goto LABEL_87;
    case 0x21uLL:
      uint64_t v53 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v54 = swift_projectBox();
      id v24 = *(void **)(v54 + *(int *)(v53 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v54, v4);
      Swift::UInt v25 = 36;
      goto LABEL_50;
    case 0x22uLL:
      Swift::UInt v41 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      id v42 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v43 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v44 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10096D4C0(0x25uLL);
      if (v44)
      {
        sub_10096D4C0(1uLL);
        if (v43)
        {
          if (v43 == 1)
          {
LABEL_31:
            sub_10096D4C0(1uLL);
            sub_10096D4F0((Swift::UInt64)v42);
          }
          else
          {
LABEL_44:
            if (v42) {
              Swift::UInt v55 = 3;
            }
            else {
              Swift::UInt v55 = 2;
            }
            sub_10096D4C0(v55);
          }
        }
        else
        {
LABEL_94:
          sub_10096D4C0(0);
          sub_10096D4E0((Swift::UInt32)v42);
        }
      }
      else
      {
LABEL_56:
        sub_10096D4C0(0);
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        id v64 = v42;
        sub_10096BD50();
        swift_bridgeObjectRelease();
        sub_10017E788(v42, v43, 0);
      }
      sub_10096D4C0(v41);
      sub_10017E788(v42, v43, v44);
      return;
    case 0x23uLL:
      uint64_t v56 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v57 = swift_projectBox();
      id v24 = *(void **)(v57 + *(int *)(v56 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v57, v4);
      Swift::UInt v25 = 38;
      goto LABEL_50;
    case 0x24uLL:
      uint64_t v11 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x20);
      Swift::UInt64 v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v13 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      Swift::UInt v14 = 39;
      goto LABEL_64;
    case 0x25uLL:
      uint64_t v58 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v59 = swift_projectBox();
      id v24 = *(void **)(v59 + *(int *)(v58 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v59, v4);
      Swift::UInt v25 = 40;
      goto LABEL_50;
    case 0x26uLL:
      uint64_t v71 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v72 = swift_projectBox();
      Swift::UInt v73 = *(void *)(v72 + *(int *)(v71 + 48));
      Swift::UInt v74 = *(void **)(v72 + *(int *)(v71 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v72, v4);
      Swift::UInt v75 = 41;
      goto LABEL_86;
    case 0x27uLL:
      uint64_t v76 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v77 = swift_projectBox();
      Swift::UInt v73 = *(void *)(v77 + *(int *)(v76 + 48));
      Swift::UInt v74 = *(void **)(v77 + *(int *)(v76 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v77, v4);
      Swift::UInt v75 = 42;
LABEL_86:
      sub_10096D4C0(v75);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v52 = v74;
      sub_10096BAD0();
      sub_10096D4C0(v73);
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_87:

      return;
    case 0x28uLL:
      uint64_t v60 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v61 = swift_projectBox();
      id v24 = *(void **)(v61 + *(int *)(v60 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v61, v4);
      Swift::UInt v25 = 43;
LABEL_50:
      sub_10096D4C0(v25);
      sub_1000256AC((unint64_t *)&qword_100ACFDB0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v62 = v24;
      sub_10096BAD0();
      sub_10096C840();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

      return;
    case 0x29uLL:
      if (a2 == 0xA000000000000002)
      {
        Swift::UInt v63 = 29;
      }
      else if (a2 == 0xA00000000000000ALL)
      {
        Swift::UInt v63 = 31;
      }
      else
      {
        Swift::UInt v63 = 34;
      }
      goto LABEL_105;
    default:
      uint64_t v11 = *(void **)(a2 + 32);
      Swift::UInt64 v12 = *(void *)(a2 + 16);
      int v13 = *(unsigned __int8 *)(a2 + 24);
      Swift::UInt v14 = 0;
LABEL_64:
      sub_10096D4C0(v14);
      if (v13) {
        goto LABEL_65;
      }
      goto LABEL_55;
  }
}

uint64_t sub_1008D8F64(unint64_t a1, unint64_t a2)
{
  unint64_t v280 = a2;
  uint64_t v3 = sub_10096AE50();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v279 = (char *)&v275 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v275 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v276 = (char *)&v275 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v277 = (char *)&v275 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v278 = (char *)&v275 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v275 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  Swift::UInt v29 = (char *)&v275 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  Swift::UInt v32 = (char *)&v275 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v275 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  Swift::UInt v38 = (char *)&v275 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  Swift::UInt v41 = (char *)&v275 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  char v44 = (char *)&v275 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v57 = (char *)&v275 - v56;
  unint64_t v58 = a1;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) == 1) {
        goto LABEL_97;
      }
      return 0;
    case 2uLL:
      uint64_t v278 = v53;
      uint64_t v279 = (char *)v45;
      uint64_t v72 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      Swift::UInt v73 = (uint64_t *)swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 2) {
        return 0;
      }
      uint64_t v74 = *v73;
      uint64_t v75 = v73[1];
      uint64_t v76 = v72[16];
      uint64_t v77 = *(char **)((char *)v73 + v76);
      uint64_t v78 = v72[20];
      uint64_t v276 = *(char **)((char *)v73 + v78);
      uint64_t v277 = v77;
      uint64_t v79 = v72[12];
      id v80 = (char *)v73 + v79;
      uint64_t v81 = (uint64_t *)swift_projectBox();
      uint64_t v82 = *v81;
      uint64_t v83 = v81[1];
      unint64_t v280 = *(uint64_t *)((char *)v81 + v76);
      id v84 = (char *)v81 + v79;
      uint64_t v275 = *(char **)((char *)v81 + v78);
      uint64_t v85 = (void (*)(char *, char *, char *))*((void *)v278 + 2);
      uint64_t v86 = v80;
      long long v87 = v279;
      v85(v57, v86, v279);
      v85(v44, v84, v87);
      if ((v74 != v82 || v75 != v83) && (sub_10096D2D0() & 1) == 0) {
        goto LABEL_155;
      }
      unint64_t v88 = v277;
      id v89 = (id)v280;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        unsigned __int8 v90 = sub_10096C830();

        uint64_t v91 = (void (*)(char *, char *))*((void *)v278 + 1);
        uint64_t v92 = v44;
        uint64_t v93 = v279;
        v91(v92, v279);
        v91(v57, v93);
        return v90 & (v276 == v275);
      }

LABEL_155:
      uint64_t v267 = (void (*)(char *, char *))*((void *)v278 + 1);
      uint64_t v268 = v44;
      uint64_t v269 = v279;
      v267(v268, v279);
      v267(v57, v269);
      return 0;
    case 3uLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 3) {
        return 0;
      }
      goto LABEL_97;
    case 4uLL:
      unint64_t v95 = v280;
      if (((v95 >> 58) & 0x3C | (v95 >> 1) & 3) == 4) {
        goto LABEL_19;
      }
      return 0;
    case 5uLL:
      unint64_t v95 = v280;
      if (((v95 >> 58) & 0x3C | (v95 >> 1) & 3) != 5) {
        return 0;
      }
LABEL_19:
      uint64_t v97 = *(void **)((v95 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v96 = *(id *)((v95 & 0xFFFFFFFFFFFFFF9) + 0x18);
      long long v99 = *(void **)((v58 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v98 = *(id *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (!v99)
      {
        if (v97) {
          return 0;
        }
        id v262 = v98;
        id v263 = v96;
        id v264 = 0;
        goto LABEL_158;
      }
      if (!v97) {
        return 0;
      }
      uint64_t v100 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v102 = v101;
      if (v100 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v102 == v103) {
        char v104 = 1;
      }
      else {
        char v104 = sub_10096D2D0();
      }
      id v270 = v97;
      id v271 = v99;
      id v264 = v270;
      id v272 = v271;
      id v273 = v98;
      id v274 = v96;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v104)
      {
LABEL_158:
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v134 = sub_10096C830();

        goto LABEL_102;
      }

      return 0;
    case 6uLL:
      uint64_t v105 = v45;
      uint64_t v106 = v53;
      uint64_t v107 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v108 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 6) {
        return 0;
      }
      uint64_t v109 = v108;
      uint64_t v110 = *(int *)(v107 + 48);
      uint64_t v111 = *(void **)(v108 + v110);
      uint64_t v112 = swift_projectBox();
      unint64_t v113 = *(void **)(v112 + v110);
      uint64_t v114 = (void (*)(char *, uint64_t, uint64_t))*((void *)v106 + 2);
      v114(v41, v109, v105);
      v114(v38, v112, v105);
      id v115 = v111;
      id v116 = v113;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v117 = sub_10096C830();

        uint64_t v118 = (void (*)(char *, uint64_t))*((void *)v106 + 1);
        v118(v38, v105);
        uint64_t v119 = v41;
        goto LABEL_72;
      }

      unint64_t v260 = (void (*)(char *, uint64_t))*((void *)v106 + 1);
      v260(v38, v105);
      uint64_t v261 = v41;
      goto LABEL_145;
    case 7uLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 7) {
        return 0;
      }
      uint64_t v120 = v45;
      uint64_t v121 = v53;
      uint64_t v122 = swift_projectBox();
      uint64_t v123 = swift_projectBox();
      uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))*((void *)v121 + 2);
      v124(v35, v122, v120);
      v124(v32, v123, v120);
      LOBYTE(v123) = sub_10096ADA0();
      uint64_t v125 = (void (*)(char *, uint64_t))*((void *)v121 + 1);
      v125(v32, v120);
      v125(v35, v120);
      return v123 & 1;
    case 8uLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 8) {
        return 0;
      }
      uint64_t v126 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v128 = v127;
      if (v126 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v128 != v129) {
        goto LABEL_132;
      }
      goto LABEL_121;
    case 9uLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 9) {
        return 0;
      }
      goto LABEL_97;
    case 0xAuLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 0xA) {
        return 0;
      }
      goto LABEL_97;
    case 0xBuLL:
      unint64_t v130 = v280;
      if (((v130 >> 58) & 0x3C | (v130 >> 1) & 3) != 0xB) {
        return 0;
      }
      goto LABEL_113;
    case 0xCuLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 0xC) {
        return 0;
      }
      goto LABEL_97;
    case 0xDuLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 0xD) {
        return 0;
      }
      goto LABEL_97;
    case 0xEuLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0xE) {
        return 0;
      }
      uint64_t v131 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v133 = *(void *)((v280 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v132 = *(void **)((v280 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v98 = *(id *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v96 = v132;
      if (sub_100611678(v131, v133)) {
        goto LABEL_45;
      }
      goto LABEL_48;
    case 0xFuLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0xF) {
        return 0;
      }
      uint64_t v135 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v137 = *(void *)((v280 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v136 = *(void **)((v280 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v98 = *(id *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v96 = v136;
      if (sub_1006118F8(v135, v137))
      {
LABEL_45:
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v134 = sub_10096C830();
        goto LABEL_102;
      }
LABEL_48:

      return 0;
    case 0x10uLL:
      unint64_t v138 = v280;
      if (((v138 >> 58) & 0x3C | (v138 >> 1) & 3) != 0x10) {
        return 0;
      }
      goto LABEL_93;
    case 0x11uLL:
      unint64_t v138 = v280;
      if (((v138 >> 58) & 0x3C | (v138 >> 1) & 3) != 0x11) {
        return 0;
      }
      goto LABEL_93;
    case 0x12uLL:
      unint64_t v138 = v280;
      if (((v138 >> 58) & 0x3C | (v138 >> 1) & 3) != 0x12) {
        return 0;
      }
      goto LABEL_93;
    case 0x13uLL:
      unint64_t v138 = v280;
      if (((v138 >> 58) & 0x3C | (v138 >> 1) & 3) != 0x13) {
        return 0;
      }
LABEL_93:
      uint64_t v185 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      NSURL v186 = *(void **)((v138 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v187 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v188 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v189 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19);
      uint64_t v190 = *(void **)((v138 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v191 = *(unsigned __int8 *)((v138 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v192 = *(unsigned __int8 *)((v138 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10009C394(*(id *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x10), *(unsigned __int8 *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x18), *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x19));
      sub_10009C394(v190, v191, v192);
      id v193 = v185;
      id v194 = v186;
      if (sub_100610D2C(v187, v188 | (v189 << 8), v190, v191 | (v192 << 8)))
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v134 = sub_10096C830();

        sub_1000D30C4(v190, v191, v192);
        sub_1000D30C4(v187, v188, v189);
        return v134 & 1;
      }

      sub_1000D30C4(v190, v191, v192);
      sub_1000D30C4(v187, v188, v189);
      return 0;
    case 0x14uLL:
      uint64_t v139 = v45;
      uint64_t v140 = v53;
      uint64_t v141 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v142 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x14) {
        return 0;
      }
      goto LABEL_83;
    case 0x15uLL:
      unint64_t v143 = v280;
      if (((v143 >> 58) & 0x3C | (v143 >> 1) & 3) != 0x15) {
        return 0;
      }
      goto LABEL_74;
    case 0x16uLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) == 0x16) {
        goto LABEL_97;
      }
      return 0;
    case 0x17uLL:
      unint64_t v144 = v280;
      if (((v144 >> 58) & 0x3C | (v144 >> 1) & 3) == 0x17) {
        goto LABEL_104;
      }
      return 0;
    case 0x18uLL:
      unint64_t v144 = v280;
      if (((v144 >> 58) & 0x3C | (v144 >> 1) & 3) != 0x18) {
        return 0;
      }
      goto LABEL_104;
    case 0x19uLL:
      unint64_t v144 = v280;
      if (((v144 >> 58) & 0x3C | (v144 >> 1) & 3) != 0x19) {
        return 0;
      }
LABEL_104:
      uint64_t v209 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v210 = *(void **)((v144 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      id v59 = v209;
      id v61 = v210;
      char v134 = sub_10096C830();
      goto LABEL_105;
    case 0x1AuLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x1A) {
        return 0;
      }
      uint64_t v211 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v212 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int64_t v213 = *(void **)((v280 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v214 = *(void *)((v280 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (v211)
      {
        if (!v213) {
          return v213 & 1;
        }
        sub_100011348(0, (unint64_t *)&qword_100ADA390);
        id v215 = v213;
        id v216 = v211;
        char v217 = sub_10096C830();

        if ((v217 & 1) == 0) {
          return 0;
        }
LABEL_163:
        BOOL v169 = v212 == v214;
LABEL_114:
        LOBYTE(v213) = v169;
        return v213 & 1;
      }
      if (!v213) {
        goto LABEL_163;
      }
      return 0;
    case 0x1BuLL:
      unint64_t v130 = v280;
      if (((v130 >> 58) & 0x3C | (v130 >> 1) & 3) != 0x1B) {
        return 0;
      }
      goto LABEL_113;
    case 0x1CuLL:
      unint64_t v130 = v280;
      if (((v130 >> 58) & 0x3C | (v130 >> 1) & 3) == 0x1C) {
        goto LABEL_113;
      }
      return 0;
    case 0x1DuLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x1D) {
        return 0;
      }
      uint64_t v218 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v220 = v219;
      if (v218 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v220 == v221) {
LABEL_121:
      }
        char v222 = 1;
      else {
LABEL_132:
      }
        char v222 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v222 & 1;
    case 0x1EuLL:
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x1E) {
        return 0;
      }
      unint64_t v145 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v146 = *(void *)((v280 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1000CE628(v145);
      sub_1000CE628(v146);
      char v147 = sub_1008DA9E4(v145, v146);
      sub_10021E0B4(v146);
      sub_10021E0B4(v145);
      return v147 & 1;
    case 0x1FuLL:
      unint64_t v130 = v280;
      if (((v130 >> 58) & 0x3C | (v130 >> 1) & 3) != 0x1F) {
        return 0;
      }
LABEL_113:
      BOOL v169 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10) == *(void *)((v130 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_114;
    case 0x20uLL:
      uint64_t v279 = (char *)v45;
      uint64_t v223 = v53;
      uint64_t v224 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v225 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x20) {
        return 0;
      }
      uint64_t v226 = v225;
      uint64_t v227 = *(int *)(v224 + 48);
      LODWORD(v276) = *(unsigned __int8 *)(v225 + v227);
      uint64_t v228 = *(int *)(v224 + 64);
      uint64_t v229 = *(void **)(v225 + v228);
      uint64_t v230 = swift_projectBox();
      LODWORD(v280) = *(unsigned __int8 *)(v230 + v227);
      uint64_t v231 = *(void **)(v230 + v228);
      uint64_t v232 = (void (*)(char *, uint64_t, char *))*((void *)v223 + 2);
      uint64_t v234 = v278;
      uint64_t v233 = v279;
      v232(v278, v226, v279);
      unsigned __int8 v235 = v277;
      v232(v277, v230, v233);
      uint64_t v236 = v235;
      id v237 = v229;
      id v238 = v231;
      if ((sub_10096ADA0() & 1) == 0)
      {

        unint64_t v260 = (void (*)(char *, uint64_t))*((void *)v223 + 1);
        v260(v236, (uint64_t)v233);
        uint64_t v261 = v234;
        goto LABEL_147;
      }
      if (v276 != v280)
      {

        Swift::String v239 = (void (*)(char *, char *))*((void *)v223 + 1);
        uint64_t v240 = v279;
        v239(v236, v279);
        uint64_t v241 = v234;
        goto LABEL_150;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v256 = sub_10096C830();

      uint64_t v258 = (void (*)(char *, char *))*((void *)v223 + 1);
      char v257 = v279;
      v258(v236, v279);
      uint64_t v259 = v234;
      goto LABEL_165;
    case 0x21uLL:
      uint64_t v105 = v45;
      uint64_t v148 = v53;
      uint64_t v149 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v150 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x21) {
        return 0;
      }
      uint64_t v151 = v150;
      uint64_t v152 = *(int *)(v149 + 48);
      os_log_type_t v153 = *(void **)(v150 + v152);
      uint64_t v154 = swift_projectBox();
      uint64_t v155 = *(void **)(v154 + v152);
      uint64_t v156 = (void (*)(char *, uint64_t, uint64_t))*((void *)v148 + 2);
      uint64_t v157 = v276;
      v156(v276, v151, v105);
      v156(v17, v154, v105);
      id v158 = v153;
      id v159 = v155;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v117 = sub_10096C830();

        uint64_t v118 = (void (*)(char *, uint64_t))*((void *)v148 + 1);
        v118(v17, v105);
        uint64_t v119 = v157;
LABEL_72:
        v118(v119, v105);
        return v117 & 1;
      }

      unint64_t v260 = (void (*)(char *, uint64_t))*((void *)v148 + 1);
      v260(v17, v105);
      uint64_t v261 = v157;
LABEL_145:
      uint64_t v265 = (char *)v105;
      goto LABEL_148;
    case 0x22uLL:
      unint64_t v143 = v280;
      if (((v143 >> 58) & 0x3C | (v143 >> 1) & 3) != 0x22) {
        return 0;
      }
LABEL_74:
      uint64_t v160 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v161 = *(void *)((v143 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v162 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v163 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v164 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19);
      uint64_t v165 = *(void **)((v143 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v166 = *(unsigned __int8 *)((v143 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v167 = *(unsigned __int8 *)((v143 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10009C394(v162, v163, *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19));
      sub_10009C394(v165, v166, v167);
      char v168 = sub_100610D2C(v162, v163 | (v164 << 8), v165, v166 | (v167 << 8));
      sub_1000D30C4(v165, v166, v167);
      sub_1000D30C4(v162, v163, v164);
      if ((v168 & 1) == 0) {
        return 0;
      }
      BOOL v169 = v160 == v161;
      goto LABEL_114;
    case 0x23uLL:
      Swift::UInt v29 = v52;
      uint64_t v139 = v45;
      uint64_t v140 = v53;
      uint64_t v170 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v171 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x23) {
        return 0;
      }
      uint64_t v172 = v171;
      uint64_t v173 = *(int *)(v170 + 48);
      double v174 = *(void **)(v171 + v173);
      uint64_t v175 = swift_projectBox();
      id v176 = *(void **)(v175 + v173);
      uint64_t v177 = (void (*)(char *, uint64_t, uint64_t))*((void *)v140 + 2);
      v177(v29, v172, v139);
      uint64_t v26 = v279;
      goto LABEL_84;
    case 0x24uLL:
      unint64_t v71 = v280;
      if (((v71 >> 58) & 0x3C | (v71 >> 1) & 3) != 0x24) {
        return 0;
      }
LABEL_97:
      uint64_t v195 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v98 = *(id *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v196 = *(void **)((v71 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v96 = *(id *)((v71 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v197 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v199 = v198;
      if (v197 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v199 == v200)
      {
        id v201 = v195;
        id v202 = v196;
        id v203 = v98;
        id v204 = v96;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v205 = sub_10096D2D0();
        unint64_t v280 = v195;
        id v206 = v196;
        id v207 = v98;
        id v208 = v96;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v205 & 1) == 0) {
          goto LABEL_153;
        }
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v134 = sub_10096C830();

LABEL_102:
      return v134 & 1;
    case 0x25uLL:
      uint64_t v26 = v51;
      Swift::UInt v29 = v50;
      uint64_t v139 = v45;
      uint64_t v140 = v53;
      uint64_t v141 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v142 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x25) {
        return 0;
      }
      goto LABEL_83;
    case 0x26uLL:
      uint64_t v276 = v49;
      uint64_t v277 = v48;
      uint64_t v278 = v53;
      uint64_t v279 = (char *)v45;
      uint64_t v242 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v243 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x26) {
        return 0;
      }
      goto LABEL_129;
    case 0x27uLL:
      uint64_t v276 = v55;
      uint64_t v277 = v54;
      uint64_t v278 = v53;
      uint64_t v279 = (char *)v45;
      uint64_t v242 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v243 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x27) {
        return 0;
      }
LABEL_129:
      uint64_t v244 = v243;
      uint64_t v245 = *(int *)(v242 + 48);
      uint64_t v275 = *(char **)(v243 + v245);
      uint64_t v246 = *(int *)(v242 + 64);
      uint64_t v247 = *(void **)(v243 + v246);
      uint64_t v248 = swift_projectBox();
      unint64_t v280 = *(void *)(v248 + v245);
      unint64_t v249 = *(void **)(v248 + v246);
      uint64_t v250 = v277;
      uint64_t v251 = v278;
      uint64_t v252 = (void (*)(char *, uint64_t, char *))*((void *)v278 + 2);
      uint64_t v233 = v279;
      v252(v277, v244, v279);
      uint64_t v253 = v276;
      v252(v276, v248, v233);
      id v254 = v247;
      id v255 = v249;
      if ((sub_10096ADA0() & 1) == 0)
      {

        unint64_t v260 = (void (*)(char *, uint64_t))*((void *)v251 + 1);
        v260(v253, (uint64_t)v233);
        uint64_t v261 = v250;
LABEL_147:
        uint64_t v265 = v233;
LABEL_148:
        v260(v261, (uint64_t)v265);
        return 0;
      }
      if (v275 != (char *)v280)
      {

        uint64_t v240 = v279;
        Swift::String v239 = (void (*)(char *, char *))*((void *)v278 + 1);
        v239(v276, v279);
        uint64_t v241 = v277;
LABEL_150:
        v239(v241, v240);
        return 0;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v256 = sub_10096C830();

      char v257 = v279;
      uint64_t v258 = (void (*)(char *, char *))*((void *)v278 + 1);
      v258(v276, v279);
      uint64_t v259 = v277;
LABEL_165:
      v258(v259, v257);
      return v256 & 1;
    case 0x28uLL:
      uint64_t v26 = v47;
      Swift::UInt v29 = v46;
      uint64_t v139 = v45;
      uint64_t v140 = v53;
      uint64_t v141 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v142 = swift_projectBox();
      if (((v280 >> 58) & 0x3C | (v280 >> 1) & 3) != 0x28) {
        return 0;
      }
LABEL_83:
      uint64_t v178 = v142;
      uint64_t v179 = *(int *)(v141 + 48);
      double v174 = *(void **)(v142 + v179);
      uint64_t v175 = swift_projectBox();
      id v176 = *(void **)(v175 + v179);
      uint64_t v177 = (void (*)(char *, uint64_t, uint64_t))*((void *)v140 + 2);
      v177(v29, v178, v139);
LABEL_84:
      v177(v26, v175, v139);
      id v180 = v174;
      id v181 = v176;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v182 = sub_10096C830();

        uint64_t v183 = (void (*)(char *, uint64_t))*((void *)v140 + 1);
        v183(v26, v139);
        v183(v29, v139);
        return v182 & 1;
      }

      uint64_t v184 = (void (*)(char *, uint64_t))*((void *)v140 + 1);
      v184(v26, v139);
      v184(v29, v139);
      return 0;
    case 0x29uLL:
      if (a1 == 0xA000000000000002)
      {
        BOOL v169 = ((v280 >> 58) & 0x3C | (v280 >> 1) & 3) == 0x29 && v280 == 0xA000000000000002;
      }
      else if (a1 == 0xA00000000000000ALL)
      {
        BOOL v169 = ((v280 >> 58) & 0x3C | (v280 >> 1) & 3) == 0x29 && v280 == 0xA00000000000000ALL;
      }
      else
      {
        BOOL v169 = ((v280 >> 58) & 0x3C | (v280 >> 1) & 3) == 0x29 && v280 == 0xA000000000000012;
      }
      goto LABEL_114;
    default:
      if ((v280 >> 58) & 0x3C | (v280 >> 1) & 3) {
        return 0;
      }
      uint64_t v60 = *(void **)(a1 + 16);
      id v59 = *(id *)(a1 + 24);
      id v62 = *(void **)(v280 + 16);
      id v61 = *(id *)(v280 + 24);
      uint64_t v63 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v65 = v64;
      if (v63 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v65 == v66)
      {
        id v67 = v60;
        id v68 = v62;
        id v69 = v59;
        id v70 = v61;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v266 = sub_10096D2D0();
        unint64_t v280 = v60;
        id v206 = v62;
        id v207 = v59;
        id v208 = v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v266 & 1) == 0)
        {
LABEL_153:

          return 0;
        }
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      char v134 = sub_10096C830();

LABEL_105:
      return v134 & 1;
  }
}

uint64_t sub_1008DA9E4(unint64_t a1, unint64_t a2)
{
  unint64_t v242 = a2;
  uint64_t v3 = sub_10096AE50();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v241 = (char *)&v237 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v237 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  id v238 = (char *)&v237 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::String v239 = (char *)&v237 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v240 = (char *)&v237 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v237 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  Swift::UInt v29 = (char *)&v237 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  Swift::UInt v32 = (char *)&v237 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v237 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  Swift::UInt v38 = (char *)&v237 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  Swift::UInt v41 = (char *)&v237 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  char v44 = (char *)&v237 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v57 = (uint64_t)&v237 - v56;
  unint64_t v58 = a1;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) != 1) {
        return 0;
      }
      goto LABEL_111;
    case 2uLL:
      uint64_t v240 = v53;
      uint64_t v241 = (char *)v45;
      uint64_t v66 = (int *)sub_10002B7CC(&qword_100ACD5F0);
      id v67 = (uint64_t *)swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 2) {
        return 0;
      }
      uint64_t v68 = *v67;
      uint64_t v69 = v67[1];
      uint64_t v70 = v66[16];
      unint64_t v71 = *(char **)((char *)v67 + v70);
      uint64_t v72 = v66[20];
      id v238 = *(char **)((char *)v67 + v72);
      Swift::String v239 = v71;
      uint64_t v73 = v66[12];
      uint64_t v74 = (char *)v67 + v73;
      uint64_t v75 = (uint64_t *)swift_projectBox();
      uint64_t v76 = *v75;
      uint64_t v77 = v75[1];
      unint64_t v242 = *(uint64_t *)((char *)v75 + v70);
      uint64_t v78 = (char *)v75 + v73;
      id v237 = *(char **)((char *)v75 + v72);
      uint64_t v79 = (void (*)(uint64_t, char *, char *))*((void *)v240 + 2);
      id v80 = v74;
      uint64_t v81 = v241;
      v79(v57, v80, v241);
      v79((uint64_t)v44, v78, v81);
      if ((v68 != v76 || v69 != v77) && (sub_10096D2D0() & 1) == 0) {
        goto LABEL_167;
      }
      uint64_t v82 = v239;
      id v83 = (id)v242;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v84 = sub_10096C830();

        uint64_t v85 = (void (*)(char *, char *))*((void *)v240 + 1);
        uint64_t v86 = v44;
        long long v87 = v241;
        v85(v86, v241);
        v85((char *)v57, v87);
        LOBYTE(v57) = v84 & (v238 == v237);
        return v57 & 1;
      }

LABEL_167:
      uint64_t v234 = (void (*)(char *, char *))*((void *)v240 + 1);
      unsigned __int8 v235 = v44;
      uint64_t v236 = v241;
      v234(v235, v241);
      v234((char *)v57, v236);
      return 0;
    case 3uLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 3) {
        goto LABEL_111;
      }
      return 0;
    case 4uLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 4) {
        return 0;
      }
      id v59 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v60 = *(void **)((v242 & 0xFFFFFFFFFFFFFF9) + 0x20);
      int v88 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v89 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (v89 == 255) {
        goto LABEL_27;
      }
      if (v88 == 255) {
        return 0;
      }
      uint64_t v63 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v90 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      if (!*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18)) {
        goto LABEL_180;
      }
      if (v89 == 1) {
        goto LABEL_22;
      }
      goto LABEL_152;
    case 5uLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 5) {
        return 0;
      }
      id v59 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v60 = *(void **)((v242 & 0xFFFFFFFFFFFFFF9) + 0x20);
      int v88 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v91 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (v91 == 255)
      {
LABEL_27:
        if (v88 != 255) {
          return 0;
        }
        goto LABEL_156;
      }
      if (v88 == 255) {
        return 0;
      }
      uint64_t v63 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v90 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        if (v91 != 1)
        {
LABEL_152:
          LOBYTE(v57) = 0;
          BOOL v203 = v88 == 2;
          if (v90) {
            goto LABEL_117;
          }
          goto LABEL_153;
        }
LABEL_22:
        LOBYTE(v57) = 0;
        if (v88 == 1 && v90 == v63) {
          goto LABEL_156;
        }
      }
      else
      {
LABEL_180:
        LOBYTE(v57) = 0;
        if (!v88 && v90 == v63) {
          goto LABEL_156;
        }
      }
      return v57 & 1;
    case 6uLL:
      uint64_t v92 = v45;
      uint64_t v93 = v53;
      uint64_t v94 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v95 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 6) {
        return 0;
      }
      uint64_t v96 = v95;
      uint64_t v97 = *(int *)(v94 + 48);
      id v98 = *(void **)(v95 + v97);
      uint64_t v99 = swift_projectBox();
      uint64_t v100 = *(void **)(v99 + v97);
      uint64_t v101 = (void (*)(char *, uint64_t, uint64_t))*((void *)v93 + 2);
      v101(v41, v96, v92);
      v101(v38, v99, v92);
      id v102 = v98;
      id v103 = v100;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        LOBYTE(v57) = sub_10096C830();

        char v104 = (void (*)(char *, uint64_t))*((void *)v93 + 1);
        v104(v38, v92);
        uint64_t v105 = v41;
        goto LABEL_104;
      }

      uint64_t v229 = (void (*)(char *, uint64_t))*((void *)v93 + 1);
      v229(v38, v92);
      uint64_t v230 = v41;
      goto LABEL_162;
    case 7uLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 7) {
        return 0;
      }
      uint64_t v106 = v45;
      uint64_t v107 = v53;
      uint64_t v108 = swift_projectBox();
      uint64_t v57 = swift_projectBox();
      uint64_t v109 = (void (*)(char *, uint64_t, uint64_t))*((void *)v107 + 2);
      v109(v35, v108, v106);
      v109(v32, v57, v106);
      LOBYTE(v57) = sub_10096ADA0();
      uint64_t v110 = (void (*)(char *, uint64_t))*((void *)v107 + 1);
      v110(v32, v106);
      v110(v35, v106);
      return v57 & 1;
    case 8uLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 8) {
        return 0;
      }
      uint64_t v111 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v112 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v113 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (!*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18)) {
        goto LABEL_146;
      }
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18) == 1) {
        goto LABEL_37;
      }
      goto LABEL_89;
    case 9uLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 9) {
        goto LABEL_111;
      }
      return 0;
    case 0xAuLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 0xA) {
        goto LABEL_111;
      }
      return 0;
    case 0xBuLL:
      unint64_t v114 = v242;
      if (((v114 >> 58) & 0x3C | (v114 >> 1) & 3) == 0xB) {
        goto LABEL_96;
      }
      return 0;
    case 0xCuLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 0xC) {
        goto LABEL_111;
      }
      return 0;
    case 0xDuLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 0xD) {
        goto LABEL_111;
      }
      return 0;
    case 0xEuLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0xE) {
        return 0;
      }
      uint64_t v115 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v117 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v116 = *(void **)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v118 = *(id *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v119 = v116;
      if (sub_100611678(v115, v117)) {
        goto LABEL_52;
      }
      goto LABEL_55;
    case 0xFuLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0xF) {
        return 0;
      }
      uint64_t v121 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v123 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v122 = *(void **)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v118 = *(id *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v119 = v122;
      if (sub_1006118F8(v121, v123))
      {
LABEL_52:
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v120 = sub_10096C830();

        return v120 & 1;
      }
LABEL_55:

      return 0;
    case 0x10uLL:
      unint64_t v124 = v242;
      if (((v124 >> 58) & 0x3C | (v124 >> 1) & 3) == 0x10) {
        goto LABEL_63;
      }
      return 0;
    case 0x11uLL:
      unint64_t v124 = v242;
      if (((v124 >> 58) & 0x3C | (v124 >> 1) & 3) == 0x11) {
        goto LABEL_63;
      }
      return 0;
    case 0x12uLL:
      unint64_t v124 = v242;
      if (((v124 >> 58) & 0x3C | (v124 >> 1) & 3) == 0x12) {
        goto LABEL_63;
      }
      return 0;
    case 0x13uLL:
      unint64_t v124 = v242;
      if (((v124 >> 58) & 0x3C | (v124 >> 1) & 3) != 0x13) {
        return 0;
      }
LABEL_63:
      uint64_t v125 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v126 = *(void **)((v124 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v127 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v128 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v129 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19);
      unint64_t v130 = *(void **)((v124 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v131 = *(unsigned __int8 *)((v124 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v132 = *(unsigned __int8 *)((v124 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10014E450(*(id *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x10), *(unsigned __int8 *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x18), *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x19));
      sub_10014E450(v130, v131, v132);
      id v133 = v125;
      id v134 = v126;
      if (sub_100610F08(v127, v128 | (v129 << 8), v130, v131 | (v132 << 8)))
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        char v120 = sub_10096C830();

        sub_10017E788(v130, v131, v132);
        sub_10017E788(v127, v128, v129);
        return v120 & 1;
      }

      sub_10017E788(v130, v131, v132);
      sub_10017E788(v127, v128, v129);
      return 0;
    case 0x14uLL:
      uint64_t v135 = v45;
      uint64_t v136 = v53;
      uint64_t v137 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v138 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) == 0x14) {
        goto LABEL_130;
      }
      return 0;
    case 0x15uLL:
      unint64_t v139 = v242;
      if (((v139 >> 58) & 0x3C | (v139 >> 1) & 3) == 0x15) {
        goto LABEL_106;
      }
      return 0;
    case 0x16uLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) == 0x16) {
        goto LABEL_111;
      }
      return 0;
    case 0x17uLL:
      unint64_t v140 = v242;
      if (((v140 >> 58) & 0x3C | (v140 >> 1) & 3) == 0x17) {
        goto LABEL_76;
      }
      return 0;
    case 0x18uLL:
      unint64_t v140 = v242;
      if (((v140 >> 58) & 0x3C | (v140 >> 1) & 3) == 0x18) {
        goto LABEL_76;
      }
      return 0;
    case 0x19uLL:
      unint64_t v140 = v242;
      if (((v140 >> 58) & 0x3C | (v140 >> 1) & 3) != 0x19) {
        return 0;
      }
LABEL_76:
      uint64_t v141 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v60 = *(void **)((v140 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      id v142 = v141;
      goto LABEL_157;
    case 0x1AuLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x1A) {
        return 0;
      }
      unint64_t v143 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v144 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v57 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v145 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (!v143)
      {
        if (v57) {
          return 0;
        }
        goto LABEL_169;
      }
      if (!v57) {
        return v57 & 1;
      }
      sub_100011348(0, (unint64_t *)&qword_100ADA390);
      id v146 = (id)v57;
      id v147 = v143;
      char v148 = sub_10096C830();

      if (v148)
      {
LABEL_169:
        BOOL v153 = v144 == v145;
LABEL_170:
        LOBYTE(v57) = v153;
        return v57 & 1;
      }
      return 0;
    case 0x1BuLL:
      unint64_t v114 = v242;
      if (((v114 >> 58) & 0x3C | (v114 >> 1) & 3) == 0x1B) {
        goto LABEL_96;
      }
      return 0;
    case 0x1CuLL:
      unint64_t v114 = v242;
      if (((v114 >> 58) & 0x3C | (v114 >> 1) & 3) == 0x1C) {
        goto LABEL_96;
      }
      return 0;
    case 0x1DuLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x1D) {
        return 0;
      }
      uint64_t v111 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v112 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v113 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18) == 1)
        {
LABEL_37:
          if (v113 != 1 || v111 != v112) {
            return 0;
          }
        }
        else
        {
LABEL_89:
          if (v111)
          {
            if (v113 != 2 || v112 != 1) {
              return 0;
            }
          }
          else if (v113 != 2 || v112)
          {
            return 0;
          }
        }
      }
      else
      {
LABEL_146:
        if (v113 || v111 != v112) {
          return 0;
        }
      }
      LOBYTE(v57) = 1;
      return v57 & 1;
    case 0x1EuLL:
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x1E) {
        return 0;
      }
      unint64_t v149 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v150 = *(void *)((v242 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1000CE628(v149);
      sub_1000CE628(v150);
      char v151 = sub_1008D8F64(v149, v150);
      sub_10021E0B4(v150);
      sub_10021E0B4(v149);
      return v151 & 1;
    case 0x1FuLL:
      unint64_t v114 = v242;
      if (((v114 >> 58) & 0x3C | (v114 >> 1) & 3) != 0x1F) {
        return 0;
      }
LABEL_96:
      BOOL v153 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10) == *(void *)((v114 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_170;
    case 0x20uLL:
      uint64_t v241 = (char *)v45;
      uint64_t v154 = v53;
      uint64_t v155 = sub_10002B7CC(&qword_100AD0F60);
      uint64_t v156 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x20) {
        return 0;
      }
      uint64_t v157 = v156;
      uint64_t v158 = *(int *)(v155 + 48);
      LODWORD(v238) = *(unsigned __int8 *)(v156 + v158);
      uint64_t v159 = *(int *)(v155 + 64);
      uint64_t v160 = *(void **)(v156 + v159);
      uint64_t v161 = swift_projectBox();
      LODWORD(v242) = *(unsigned __int8 *)(v161 + v158);
      uint64_t v162 = *(void **)(v161 + v159);
      uint64_t v163 = (void (*)(char *, uint64_t, char *))*((void *)v154 + 2);
      uint64_t v165 = v240;
      int v164 = v241;
      v163(v240, v157, v241);
      uint64_t v166 = v239;
      v163(v239, v161, v164);
      int v167 = v166;
      id v168 = v160;
      id v169 = v162;
      if ((sub_10096ADA0() & 1) == 0)
      {

        uint64_t v229 = (void (*)(char *, uint64_t))*((void *)v154 + 1);
        v229(v167, (uint64_t)v164);
        uint64_t v230 = v165;
        uint64_t v231 = v164;
        goto LABEL_163;
      }
      if (v238 != v242)
      {

        uint64_t v170 = (void (*)(char *, char *))*((void *)v154 + 1);
        uint64_t v171 = v241;
        v170(v167, v241);
        uint64_t v172 = v165;
        goto LABEL_165;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      LOBYTE(v57) = sub_10096C830();

      uint64_t v220 = (void (*)(char *, char *))*((void *)v154 + 1);
      uint64_t v219 = v241;
      v220(v167, v241);
      uint64_t v221 = v165;
      goto LABEL_175;
    case 0x21uLL:
      uint64_t v92 = v45;
      uint64_t v173 = v53;
      uint64_t v174 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v175 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x21) {
        return 0;
      }
      uint64_t v176 = v175;
      uint64_t v177 = *(int *)(v174 + 48);
      uint64_t v178 = *(void **)(v175 + v177);
      uint64_t v179 = swift_projectBox();
      id v180 = *(void **)(v179 + v177);
      id v181 = (void (*)(char *, uint64_t, uint64_t))*((void *)v173 + 2);
      char v182 = v238;
      v181(v238, v176, v92);
      v181(v17, v179, v92);
      id v183 = v178;
      id v184 = v180;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        LOBYTE(v57) = sub_10096C830();

        char v104 = (void (*)(char *, uint64_t))*((void *)v173 + 1);
        v104(v17, v92);
        uint64_t v105 = v182;
LABEL_104:
        v104(v105, v92);
        return v57 & 1;
      }

      uint64_t v229 = (void (*)(char *, uint64_t))*((void *)v173 + 1);
      v229(v17, v92);
      uint64_t v230 = v182;
LABEL_162:
      uint64_t v231 = (char *)v92;
      goto LABEL_163;
    case 0x22uLL:
      unint64_t v139 = v242;
      if (((v139 >> 58) & 0x3C | (v139 >> 1) & 3) != 0x22) {
        return 0;
      }
LABEL_106:
      uint64_t v185 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v186 = *(void *)((v139 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v187 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v188 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v189 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19);
      uint64_t v190 = *(void **)((v139 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v191 = *(unsigned __int8 *)((v139 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v192 = *(unsigned __int8 *)((v139 & 0xFFFFFFFFFFFFFF9) + 0x19);
      sub_10014E450(v187, v188, *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x19));
      sub_10014E450(v190, v191, v192);
      char v193 = sub_100610F08(v187, v188 | (v189 << 8), v190, v191 | (v192 << 8));
      sub_10017E788(v190, v191, v192);
      sub_10017E788(v187, v188, v189);
      if ((v193 & 1) == 0) {
        return 0;
      }
      BOOL v153 = v185 == v186;
      goto LABEL_170;
    case 0x23uLL:
      Swift::UInt v29 = v52;
      uint64_t v135 = v45;
      uint64_t v136 = v53;
      uint64_t v194 = sub_10002B7CC(&qword_100AD0820);
      uint64_t v195 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x23) {
        return 0;
      }
      uint64_t v196 = v195;
      uint64_t v197 = *(int *)(v194 + 48);
      uint64_t v198 = *(void **)(v195 + v197);
      uint64_t v199 = swift_projectBox();
      uint64_t v200 = *(void **)(v199 + v197);
      id v201 = (void (*)(char *, uint64_t, uint64_t))*((void *)v136 + 2);
      v201(v29, v196, v135);
      uint64_t v26 = v241;
      goto LABEL_131;
    case 0x24uLL:
      unint64_t v65 = v242;
      if (((v65 >> 58) & 0x3C | (v65 >> 1) & 3) != 0x24) {
        return 0;
      }
LABEL_111:
      id v59 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v202 = v65 & 0xFFFFFFFFFFFFFF9;
      uint64_t v60 = *(void **)((v65 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v61 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v62 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v63 = *(void *)(v202 + 16);
      int v64 = *(unsigned __int8 *)(v202 + 24);
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18)) {
        goto LABEL_112;
      }
      goto LABEL_4;
    case 0x25uLL:
      uint64_t v26 = v51;
      Swift::UInt v29 = v50;
      uint64_t v135 = v45;
      uint64_t v136 = v53;
      uint64_t v137 = sub_10002B7CC((uint64_t *)&unk_100AD6F40);
      uint64_t v138 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) == 0x25) {
        goto LABEL_130;
      }
      return 0;
    case 0x26uLL:
      id v238 = v49;
      Swift::String v239 = v48;
      uint64_t v240 = v53;
      uint64_t v241 = (char *)v45;
      uint64_t v204 = sub_10002B7CC((uint64_t *)&unk_100AD08C0);
      uint64_t v205 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) == 0x26) {
        goto LABEL_126;
      }
      return 0;
    case 0x27uLL:
      id v238 = v55;
      Swift::String v239 = v54;
      uint64_t v240 = v53;
      uint64_t v241 = (char *)v45;
      uint64_t v204 = sub_10002B7CC((uint64_t *)&unk_100AD6F30);
      uint64_t v205 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x27) {
        return 0;
      }
LABEL_126:
      uint64_t v206 = v205;
      uint64_t v207 = *(int *)(v204 + 48);
      id v237 = *(char **)(v205 + v207);
      uint64_t v208 = *(int *)(v204 + 64);
      uint64_t v209 = *(void **)(v205 + v208);
      uint64_t v210 = swift_projectBox();
      unint64_t v242 = *(void *)(v210 + v207);
      uint64_t v211 = *(void **)(v210 + v208);
      uint64_t v212 = v239;
      int64_t v213 = v240;
      uint64_t v214 = (void (*)(char *, uint64_t, char *))*((void *)v240 + 2);
      id v215 = v241;
      v214(v239, v206, v241);
      id v216 = v238;
      v214(v238, v210, v215);
      id v217 = v209;
      id v218 = v211;
      if ((sub_10096ADA0() & 1) == 0)
      {

        uint64_t v229 = (void (*)(char *, uint64_t))*((void *)v213 + 1);
        v229(v216, (uint64_t)v215);
        uint64_t v230 = v212;
        uint64_t v231 = v215;
LABEL_163:
        v229(v230, (uint64_t)v231);
        return 0;
      }
      if (v237 != (char *)v242)
      {

        uint64_t v171 = v241;
        uint64_t v170 = (void (*)(char *, char *))*((void *)v240 + 1);
        v170(v238, v241);
        uint64_t v172 = v239;
LABEL_165:
        v170(v172, v171);
        return 0;
      }
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      LOBYTE(v57) = sub_10096C830();

      uint64_t v219 = v241;
      uint64_t v220 = (void (*)(char *, char *))*((void *)v240 + 1);
      v220(v238, v241);
      uint64_t v221 = v239;
LABEL_175:
      v220(v221, v219);
      return v57 & 1;
    case 0x28uLL:
      uint64_t v26 = v47;
      Swift::UInt v29 = v46;
      uint64_t v135 = v45;
      uint64_t v136 = v53;
      uint64_t v137 = sub_10002B7CC((uint64_t *)&unk_100AD08D0);
      uint64_t v138 = swift_projectBox();
      if (((v242 >> 58) & 0x3C | (v242 >> 1) & 3) != 0x28) {
        return 0;
      }
LABEL_130:
      uint64_t v222 = v138;
      uint64_t v223 = *(int *)(v137 + 48);
      uint64_t v198 = *(void **)(v138 + v223);
      uint64_t v199 = swift_projectBox();
      uint64_t v200 = *(void **)(v199 + v223);
      id v201 = (void (*)(char *, uint64_t, uint64_t))*((void *)v136 + 2);
      v201(v29, v222, v135);
LABEL_131:
      v201(v26, v199, v135);
      id v224 = v198;
      id v225 = v200;
      if (sub_10096ADA0())
      {
        sub_100011348(0, (unint64_t *)&qword_100ACBF00);
        LOBYTE(v57) = sub_10096C830();

        uint64_t v226 = (void (*)(char *, uint64_t))*((void *)v136 + 1);
        v226(v26, v135);
        v226(v29, v135);
        return v57 & 1;
      }

      uint64_t v228 = (void (*)(char *, uint64_t))*((void *)v136 + 1);
      v228(v26, v135);
      v228(v29, v135);
      return 0;
    case 0x29uLL:
      if (a1 == 0xA000000000000002)
      {
        BOOL v153 = ((v242 >> 58) & 0x3C | (v242 >> 1) & 3) == 0x29 && v242 == 0xA000000000000002;
      }
      else
      {
        if (a1 == 0xA00000000000000ALL) {
          unint64_t v227 = 0xA00000000000000ALL;
        }
        else {
          unint64_t v227 = 0xA000000000000012;
        }
        BOOL v153 = ((v242 >> 58) & 0x3C | (v242 >> 1) & 3) == 0x29 && v242 == v227;
      }
      goto LABEL_170;
    default:
      if ((v242 >> 58) & 0x3C | (v242 >> 1) & 3) {
        return 0;
      }
      id v59 = *(void **)(a1 + 32);
      uint64_t v60 = *(void **)(v242 + 32);
      uint64_t v61 = *(void *)(a1 + 16);
      int v62 = *(unsigned __int8 *)(a1 + 24);
      uint64_t v63 = *(void *)(v242 + 16);
      int v64 = *(unsigned __int8 *)(v242 + 24);
      if (*(unsigned char *)(a1 + 24))
      {
LABEL_112:
        if (v62 == 1)
        {
          LOBYTE(v57) = 0;
          if (v64 == 1 && v61 == v63) {
            goto LABEL_156;
          }
        }
        else
        {
          LOBYTE(v57) = 0;
          BOOL v203 = v64 == 2;
          if (v61)
          {
LABEL_117:
            if (v203 && v63 == 1) {
              goto LABEL_156;
            }
          }
          else
          {
LABEL_153:
            if (v203 && !v63) {
              goto LABEL_156;
            }
          }
        }
        return v57 & 1;
      }
LABEL_4:
      LOBYTE(v57) = 0;
      if (v64 || v61 != v63) {
        return v57 & 1;
      }
LABEL_156:
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      id v142 = v59;
LABEL_157:
      uint64_t v232 = v142;
      id v233 = v60;
      char v120 = sub_10096C830();

      return v120 & 1;
  }
}

uint64_t sub_1008DC2B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096B710();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  int v64 = (void *)((char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10096C690();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096C620();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  id v59 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::UInt v55 = (char *)v54 - v11;
  uint64_t v58 = sub_10096B7D0();
  uint64_t v12 = *(void *)(v58 - 8);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v56 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v54 - v15;
  uint64_t v17 = sub_10096B820();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 136) = 1;
  *(void *)(v2 + 144) = 0;
  *(unsigned char *)(v2 + 152) = 1;
  *(void *)(v2 + qword_100B0B508) = 0;
  uint64_t v21 = (void *)(v2 + qword_100B0B510);
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v22 = v2 + qword_100B0B568;
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v23 = v2 + qword_100B0B570;
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 1;
  uint64_t v24 = v2 + qword_100B0B578;
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  uint64_t v25 = v2 + qword_100B0B580;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  uint64_t v26 = v2 + qword_100B0B588;
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  uint64_t v27 = v2 + qword_100B0B590;
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v28 = v2 + qword_100B0B598;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  *(unsigned char *)(v2 + qword_100B0B5A0) = 0;
  Swift::UInt v29 = (void *)(v2 + qword_100B0B5A8);
  *Swift::UInt v29 = 0;
  v29[1] = 0;
  uint64_t v30 = (void *)(v2 + qword_100B0B5B0);
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = v2 + qword_100B0B5B8;
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  swift_retain();
  *(void *)(v2 + qword_100ADB660) = sub_100093C90((uint64_t)_swiftEmptyArrayStorage);
  sub_10096B7E0();
  Swift::UInt v32 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v32(v2 + qword_100ADB640, v20, v17);
  sub_10096B7E0();
  v32(v2 + qword_100ADB648, v20, v17);
  *(void *)(v2 + 120) = [objc_allocWithZone((Class)FPFSVolume) init];
  uint64_t v33 = sub_10096AE10();
  uint64_t v34 = (uint64_t *)(v2 + qword_100ADB650);
  *uint64_t v34 = v33;
  v34[1] = v35;
  _OWORD v54[3] = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
  *(void *)&long long v67 = 0;
  *((void *)&v67 + 1) = 0xE000000000000000;
  sub_10096CBD0(43);
  uint64_t v57 = a1;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v67 = v36;
  *((void *)&v67 + 1) = v37;
  v70._object = (void *)0x80000001009BED40;
  v70._uint64_t countAndFlagsBits = 0xD000000000000029;
  sub_10096BDC0(v70);
  v54[1] = *((void *)&v67 + 1);
  v54[2] = v67;
  sub_10096B780();
  *(void *)&long long v67 = _swiftEmptyArrayStorage;
  sub_1000256AC((unint64_t *)&qword_100ACAF30, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_100025500((unint64_t *)&qword_100ACAF40, (uint64_t *)&unk_100ACBC20);
  Swift::UInt v38 = v55;
  sub_10096CA60();
  uint64_t v39 = v58;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v56, v16, v58);
  uint64_t v40 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v38, v8);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v63);
  uint64_t v41 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v39);
  *(void *)(v2 + qword_100ADB658) = v41;
  id v42 = [self defaultStore];
  id v43 = [v42 minimumDiskSpaceRequiredToBeGreedy];
  *(void *)(v2 + qword_100B0B518) = v43;
  [v42 relativeDiskSpaceRequiredToBeGreedy];
  *(void *)(v2 + qword_100B0B520) = v44;
  id v45 = [v42 diskSpaceRequiredToReturnToGreedyState];
  *(void *)(v2 + qword_100B0B528) = v45;
  [v42 relativeDiskSpaceRequiredToReturnToGreedyState];
  *(void *)(v2 + qword_100B0B530) = v46;
  signed int v47 = [v42 diskSpaceCheckInterval];
  uint64_t v49 = v64;
  uint64_t v48 = v65;
  *int v64 = v47;
  uint64_t v50 = v66;
  (*(void (**)(void *, void, uint64_t))(v48 + 104))(v49, enum case for DispatchTimeInterval.seconds(_:), v66);
  (*(void (**)(uint64_t, void *, uint64_t))(v48 + 32))(v2 + qword_100B0B538, v49, v50);
  signed int v51 = [v42 minTimeBetweenSpeculativeDownloadsPurgeSession];
  *(void *)(v2 + qword_100B0B540) = 1000000000 * v51;
  signed int v52 = [v42 minTimeToPreventDownloadsAfterReturningToGreedyState];
  *(void *)(v2 + qword_100B0B548) = 1000000000 * v52;
  *(unsigned char *)(v2 + qword_100B0B560) = 0;
  *(void *)(v2 + qword_100B0B550) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(v2 + qword_100B0B558) = 0x7FFFFFFFFFFFFFFFLL;
  swift_release();
  uint64_t v68 = type metadata accessor for DocumentWharf();
  uint64_t v69 = &off_100AA5F70;
  *(void *)&long long v67 = v57;

  *(unsigned char *)(v2 + 72) = 0;
  sub_1001E9E64(&v67, v2 + 16);
  *(unsigned char *)(v2 + 80) = 1;
  *(void *)(v2 + 88) = 0;
  *(unsigned char *)(v2 + 96) = 1;
  *(void *)(v2 + 104) = 0;
  *(unsigned char *)(v2 + 112) = 1;
  *(void *)(v2 + 56) = 0xD00000000000002BLL;
  *(void *)(v2 + 64) = 0x80000001009BED70;
  return v2;
}

uint64_t sub_1008DCB94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10096B710();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  int v64 = (void *)((char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10096C690();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096C620();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  id v59 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::UInt v55 = (char *)v54 - v11;
  uint64_t v58 = sub_10096B7D0();
  uint64_t v12 = *(void *)(v58 - 8);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v56 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v54 - v15;
  uint64_t v17 = sub_10096B820();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 136) = 1;
  *(void *)(v2 + 144) = 0;
  *(unsigned char *)(v2 + 152) = 1;
  *(void *)(v2 + qword_100B0B508) = 0;
  uint64_t v21 = (void *)(v2 + qword_100B0B510);
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v22 = v2 + qword_100B0B568;
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v23 = v2 + qword_100B0B570;
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 1;
  uint64_t v24 = v2 + qword_100B0B578;
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  uint64_t v25 = v2 + qword_100B0B580;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  uint64_t v26 = v2 + qword_100B0B588;
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  uint64_t v27 = v2 + qword_100B0B590;
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v28 = v2 + qword_100B0B598;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  *(unsigned char *)(v2 + qword_100B0B5A0) = 0;
  Swift::UInt v29 = (void *)(v2 + qword_100B0B5A8);
  *Swift::UInt v29 = 0;
  v29[1] = 0;
  uint64_t v30 = (void *)(v2 + qword_100B0B5B0);
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = v2 + qword_100B0B5B8;
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  *(void *)(v2 + qword_100ADB660) = sub_100099EB0((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  sub_10096B7E0();
  Swift::UInt v32 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v32(v2 + qword_100ADB640, v20, v17);
  sub_10096B7E0();
  v32(v2 + qword_100ADB648, v20, v17);
  *(void *)(v2 + 120) = [objc_allocWithZone((Class)FPFSVolume) init];
  uint64_t v33 = sub_10096AE10();
  uint64_t v34 = (uint64_t *)(v2 + qword_100ADB650);
  *uint64_t v34 = v33;
  v34[1] = v35;
  _OWORD v54[3] = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
  *(void *)&long long v67 = 0;
  *((void *)&v67 + 1) = 0xE000000000000000;
  sub_10096CBD0(43);
  uint64_t v57 = a1;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v67 = v36;
  *((void *)&v67 + 1) = v37;
  v70._object = (void *)0x80000001009BED40;
  v70._uint64_t countAndFlagsBits = 0xD000000000000029;
  sub_10096BDC0(v70);
  v54[1] = *((void *)&v67 + 1);
  v54[2] = v67;
  sub_10096B780();
  *(void *)&long long v67 = _swiftEmptyArrayStorage;
  sub_1000256AC((unint64_t *)&qword_100ACAF30, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_100025500((unint64_t *)&qword_100ACAF40, (uint64_t *)&unk_100ACBC20);
  Swift::UInt v38 = v55;
  sub_10096CA60();
  uint64_t v39 = v58;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v56, v16, v58);
  uint64_t v40 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v38, v8);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v63);
  uint64_t v41 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v39);
  *(void *)(v2 + qword_100ADB658) = v41;
  id v42 = [self defaultStore];
  id v43 = [v42 minimumDiskSpaceRequiredToBeGreedy];
  *(void *)(v2 + qword_100B0B518) = v43;
  [v42 relativeDiskSpaceRequiredToBeGreedy];
  *(void *)(v2 + qword_100B0B520) = v44;
  id v45 = [v42 diskSpaceRequiredToReturnToGreedyState];
  *(void *)(v2 + qword_100B0B528) = v45;
  [v42 relativeDiskSpaceRequiredToReturnToGreedyState];
  *(void *)(v2 + qword_100B0B530) = v46;
  signed int v47 = [v42 diskSpaceCheckInterval];
  uint64_t v49 = v64;
  uint64_t v48 = v65;
  *int v64 = v47;
  uint64_t v50 = v66;
  (*(void (**)(void *, void, uint64_t))(v48 + 104))(v49, enum case for DispatchTimeInterval.seconds(_:), v66);
  (*(void (**)(uint64_t, void *, uint64_t))(v48 + 32))(v2 + qword_100B0B538, v49, v50);
  signed int v51 = [v42 minTimeBetweenSpeculativeDownloadsPurgeSession];
  *(void *)(v2 + qword_100B0B540) = 1000000000 * v51;
  signed int v52 = [v42 minTimeToPreventDownloadsAfterReturningToGreedyState];
  *(void *)(v2 + qword_100B0B548) = 1000000000 * v52;
  *(unsigned char *)(v2 + qword_100B0B560) = 0;
  *(void *)(v2 + qword_100B0B550) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(v2 + qword_100B0B558) = 0x7FFFFFFFFFFFFFFFLL;
  swift_release();
  uint64_t v68 = type metadata accessor for DocumentWharf();
  uint64_t v69 = &off_100AA5F70;
  *(void *)&long long v67 = v57;

  *(unsigned char *)(v2 + 72) = 0;
  sub_1001E9E64(&v67, v2 + 16);
  *(unsigned char *)(v2 + 80) = 1;
  *(void *)(v2 + 88) = 0;
  *(unsigned char *)(v2 + 96) = 1;
  *(void *)(v2 + 104) = 0;
  *(unsigned char *)(v2 + 112) = 1;
  *(void *)(v2 + 56) = 0xD00000000000002BLL;
  *(void *)(v2 + 64) = 0x80000001009BED70;
  return v2;
}

uint64_t sub_1008DD474@<X0>(uint64_t a1@<X0>, int a2@<W1>, void (*a3)(void, void, void, void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v65 = a4;
  uint64_t v66 = a3;
  int v78 = a2;
  uint64_t v67 = a5;
  uint64_t v73 = sub_10096A7B0();
  uint64_t v9 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v5;
  uint64_t v11 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  uint64_t v12 = swift_beginAccess();
  uint64_t v76 = &v90;
  uint64_t v69 = (void (**)(char *, uint64_t))(v9 + 8);
  NSErrorUserInfoKey v70 = NSUnderlyingErrorKey;
  uint64_t v74 = &v86;
  int v13 = 1000;
  long long v68 = xmmword_100973BB0;
  uint64_t v71 = v11;
  while (1)
  {
    unsigned int v83 = -1;
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 48);
    int v16 = *(_DWORD *)(v11 + 8);
    uint64_t v17 = __chkstk_darwin(v12);
    int v22 = v78;
    *((_DWORD *)&v64 - 4) = v16;
    *((_DWORD *)&v64 - 3) = v22;
    uint64_t v23 = v76;
    *uint64_t v76 = 0;
    v23[1] = 0;
    *(void *)&long long v88 = v18;
    *((void *)&v88 + 1) = v19;
    unint64_t v89 = __PAIR64__(v21, v20);
    useconds_t v79 = v13;
    if (!v15)
    {
      *(void *)&long long v84 = v18;
      *((void *)&v84 + 1) = v19;
      unint64_t v85 = __PAIR64__(v21, v20);
      uint64_t v34 = v74;
      *uint64_t v74 = 0;
      v34[1] = 0;
      unsigned int v35 = fpfs_openfdbyhandle();
      if ((v35 & 0x80000000) != 0)
      {
        if (!sub_10096B4D0() || (uint64_t v36 = sub_10096B4A0(), (v36 & 0x100000000) != 0))
        {
          sub_100358858();
          swift_allocError();
          *(void *)uint64_t v49 = 0;
          *(void *)(v49 + 8) = 0;
          *(unsigned char *)(v49 + 16) = 10;
        }
        else
        {
          LODWORD(v81[0]) = v36;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v68;
          *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(inited + 40) = v38;
          *(void *)(inited + 72) = &type metadata for VFSFileError;
          *(void *)(inited + 48) = 0;
          *(void *)(inited + 56) = 0;
          *(unsigned char *)(inited + 64) = 10;
          sub_10004621C(inited);
          sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          uint64_t v40 = v72;
          uint64_t v39 = v73;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v41 = v39;
          uint64_t v11 = v71;
          (*v69)(v40, v41);
        }
        swift_willThrow();
        goto LABEL_22;
      }
      unsigned int v55 = v35;
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
      goto LABEL_45;
    }
    __chkstk_darwin(v17);
    *(&v64 - 4) = (uint64_t)&v88;
    *(&v64 - 3) = (uint64_t)sub_10043F5DC;
    *(&v64 - 2) = v24;
    uint64_t v77 = v25;
    if ((v15 & 0x1000000000000000) != 0 || !(v15 & 0x2000000000000000 | v14 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_10096CBC0();
      if (v7)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v7 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
LABEL_44:
      unsigned int v55 = v82;
LABEL_45:
      uint64_t v59 = sub_100595FB8(0xFFFFFFFFLL);
      unsigned int v83 = v55;
      __chkstk_darwin(v59);
      *(&v64 - 4) = (uint64_t)&v83;
      *(&v64 - 3) = (uint64_t)v57;
      *(&v64 - 2) = v58;
      *(void *)&long long v88 = v60;
      DWORD2(v88) = v61;
      BYTE12(v88) = v62;
      sub_10094A1CC(0, (uint64_t)sub_10093B1AC, (uint64_t)(&v64 - 6), v56);
      return sub_100595FB8(v83);
    }
    if ((v15 & 0x2000000000000000) == 0)
    {
      uint64_t v75 = &v64;
      if ((v14 & 0x1000000000000000) != 0)
      {
        uint64_t v26 = (v15 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        uint64_t v26 = sub_10096CC90();
        if (!v26)
        {
          uint64_t v90 = 0;
          long long v84 = v88;
          unint64_t v85 = v89;
          uint64_t v86 = 0;
          uint64_t v87 = v91;
          swift_bridgeObjectRetain();
          unsigned int v27 = fpfs_openfdbyhandle();
          if ((v27 & 0x80000000) == 0)
          {
LABEL_42:
            unsigned int v82 = v27;
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          if (sub_10096B4D0())
          {
            uint64_t v28 = sub_10096B4A0();
            if ((v28 & 0x100000000) == 0) {
              goto LABEL_11;
            }
          }
          goto LABEL_31;
        }
      }
      uint64_t v90 = (void *)v26;
      long long v84 = v88;
      unint64_t v85 = v89;
      uint64_t v86 = (void *)v26;
      uint64_t v87 = v91;
      swift_bridgeObjectRetain();
      unsigned int v27 = fpfs_openfdbyhandle();
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_42;
      }
      if (sub_10096B4D0())
      {
        uint64_t v28 = sub_10096B4A0();
        if ((v28 & 0x100000000) == 0)
        {
LABEL_11:
          LODWORD(v81[0]) = v28;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t v29 = swift_initStackObject();
          *(_OWORD *)(v29 + 16) = v68;
          *(void *)(v29 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(v29 + 40) = v30;
          *(void *)(v29 + 72) = &type metadata for VFSFileError;
          *(void *)(v29 + 48) = 0;
          *(void *)(v29 + 56) = 0;
          *(unsigned char *)(v29 + 64) = 10;
          sub_10004621C(v29);
          sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          Swift::UInt v32 = v72;
          uint64_t v31 = v73;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v33 = v31;
          uint64_t v11 = v71;
          (*v69)(v32, v33);
LABEL_32:
          swift_willThrow();
          uint64_t v7 = 0;
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
LABEL_31:
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v51 = 0;
      *(void *)(v51 + 8) = 0;
      *(unsigned char *)(v51 + 16) = 10;
      goto LABEL_32;
    }
    v81[0] = v14;
    v81[1] = v15 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v90 = v81;
    long long v84 = v88;
    unint64_t v85 = v89;
    uint64_t v86 = v81;
    uint64_t v87 = v91;
    swift_bridgeObjectRetain();
    unsigned int v42 = fpfs_openfdbyhandle();
    if ((v42 & 0x80000000) == 0)
    {
      unsigned int v82 = v42;
      swift_bridgeObjectRelease();
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
      goto LABEL_44;
    }
    if (!sub_10096B4D0() || (uint64_t v43 = sub_10096B4A0(), (v43 & 0x100000000) != 0))
    {
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      *(unsigned char *)(v50 + 16) = 10;
    }
    else
    {
      int v80 = v43;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v44 = swift_initStackObject();
      *(_OWORD *)(v44 + 16) = v68;
      *(void *)(v44 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(v44 + 40) = v45;
      *(void *)(v44 + 72) = &type metadata for VFSFileError;
      *(void *)(v44 + 48) = 0;
      *(void *)(v44 + 56) = 0;
      *(unsigned char *)(v44 + 64) = 10;
      sub_10004621C(v44);
      sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      signed int v47 = v72;
      uint64_t v46 = v73;
      sub_10096ABD0();
      sub_10096A790();
      uint64_t v48 = v46;
      uint64_t v11 = v71;
      (*v69)(v47, v48);
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_33:
    swift_errorRetain();
    LODWORD(v88) = sub_10096A680();
    sub_100045CB4();
    char v52 = sub_10096AA60();
    swift_errorRelease();
    if ((v52 & 1) == 0) {
      break;
    }
    swift_errorRelease();
    useconds_t v53 = v79;
    usleep(v79);
    if (2 * v53 >= 0xF4240) {
      int v13 = 1000000;
    }
    else {
      int v13 = 2 * v53;
    }
    uint64_t v12 = sub_100595FB8(v83);
  }
  swift_errorRetain();
  LODWORD(v88) = sub_10096A710();
  char v54 = sub_10096AA60();
  swift_errorRelease();
  if (v54)
  {
    swift_errorRelease();
    v66(0xFFFFFFFFLL, 0, 0, 0);
  }
  return sub_100595FB8(v83);
}

uint64_t sub_1008DDDD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, void (*a3)(void, void, void, void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v65 = a4;
  uint64_t v66 = a3;
  int v78 = a2;
  uint64_t v67 = a5;
  uint64_t v73 = sub_10096A7B0();
  uint64_t v9 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v5;
  uint64_t v11 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  uint64_t v12 = swift_beginAccess();
  uint64_t v76 = &v90;
  uint64_t v69 = (void (**)(char *, uint64_t))(v9 + 8);
  NSErrorUserInfoKey v70 = NSUnderlyingErrorKey;
  uint64_t v74 = &v86;
  int v13 = 1000;
  long long v68 = xmmword_100973BB0;
  uint64_t v71 = v11;
  while (1)
  {
    unsigned int v83 = -1;
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 48);
    int v16 = *(_DWORD *)(v11 + 8);
    uint64_t v17 = __chkstk_darwin(v12);
    int v22 = v78;
    *((_DWORD *)&v64 - 4) = v16;
    *((_DWORD *)&v64 - 3) = v22;
    uint64_t v23 = v76;
    *uint64_t v76 = 0;
    v23[1] = 0;
    *(void *)&long long v88 = v18;
    *((void *)&v88 + 1) = v19;
    unint64_t v89 = __PAIR64__(v21, v20);
    useconds_t v79 = v13;
    if (!v15)
    {
      *(void *)&long long v84 = v18;
      *((void *)&v84 + 1) = v19;
      unint64_t v85 = __PAIR64__(v21, v20);
      uint64_t v34 = v74;
      *uint64_t v74 = 0;
      v34[1] = 0;
      unsigned int v35 = fpfs_openfdbyhandle();
      if ((v35 & 0x80000000) != 0)
      {
        if (!sub_10096B4D0() || (uint64_t v36 = sub_10096B4A0(), (v36 & 0x100000000) != 0))
        {
          sub_100358858();
          swift_allocError();
          *(void *)uint64_t v49 = 0;
          *(void *)(v49 + 8) = 0;
          *(unsigned char *)(v49 + 16) = 10;
        }
        else
        {
          LODWORD(v81[0]) = v36;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v68;
          *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(inited + 40) = v38;
          *(void *)(inited + 72) = &type metadata for VFSFileError;
          *(void *)(inited + 48) = 0;
          *(void *)(inited + 56) = 0;
          *(unsigned char *)(inited + 64) = 10;
          sub_10004621C(inited);
          sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          uint64_t v40 = v72;
          uint64_t v39 = v73;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v41 = v39;
          uint64_t v11 = v71;
          (*v69)(v40, v41);
        }
        swift_willThrow();
        goto LABEL_22;
      }
      unsigned int v55 = v35;
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
      goto LABEL_45;
    }
    __chkstk_darwin(v17);
    *(&v64 - 4) = (uint64_t)&v88;
    *(&v64 - 3) = (uint64_t)sub_10043F5DC;
    *(&v64 - 2) = v24;
    uint64_t v77 = v25;
    if ((v15 & 0x1000000000000000) != 0 || !(v15 & 0x2000000000000000 | v14 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_10096CBC0();
      if (v7)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v7 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
LABEL_44:
      unsigned int v55 = v82;
LABEL_45:
      uint64_t v59 = sub_100595FB8(0xFFFFFFFFLL);
      unsigned int v83 = v55;
      __chkstk_darwin(v59);
      *(&v64 - 4) = (uint64_t)&v83;
      *(&v64 - 3) = (uint64_t)v57;
      *(&v64 - 2) = v58;
      *(void *)&long long v88 = v60;
      DWORD2(v88) = v61;
      BYTE12(v88) = v62;
      sub_10094A4F4(0, (uint64_t)sub_10093B1AC, (uint64_t)(&v64 - 6), v56);
      return sub_100595FB8(v83);
    }
    if ((v15 & 0x2000000000000000) == 0)
    {
      uint64_t v75 = &v64;
      if ((v14 & 0x1000000000000000) != 0)
      {
        uint64_t v26 = (v15 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        uint64_t v26 = sub_10096CC90();
        if (!v26)
        {
          uint64_t v90 = 0;
          long long v84 = v88;
          unint64_t v85 = v89;
          uint64_t v86 = 0;
          uint64_t v87 = v91;
          swift_bridgeObjectRetain();
          unsigned int v27 = fpfs_openfdbyhandle();
          if ((v27 & 0x80000000) == 0)
          {
LABEL_42:
            unsigned int v82 = v27;
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          if (sub_10096B4D0())
          {
            uint64_t v28 = sub_10096B4A0();
            if ((v28 & 0x100000000) == 0) {
              goto LABEL_11;
            }
          }
          goto LABEL_31;
        }
      }
      uint64_t v90 = (void *)v26;
      long long v84 = v88;
      unint64_t v85 = v89;
      uint64_t v86 = (void *)v26;
      uint64_t v87 = v91;
      swift_bridgeObjectRetain();
      unsigned int v27 = fpfs_openfdbyhandle();
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_42;
      }
      if (sub_10096B4D0())
      {
        uint64_t v28 = sub_10096B4A0();
        if ((v28 & 0x100000000) == 0)
        {
LABEL_11:
          LODWORD(v81[0]) = v28;
          sub_10002B7CC(&qword_100ACE1E0);
          uint64_t v29 = swift_initStackObject();
          *(_OWORD *)(v29 + 16) = v68;
          *(void *)(v29 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
          *(void *)(v29 + 40) = v30;
          *(void *)(v29 + 72) = &type metadata for VFSFileError;
          *(void *)(v29 + 48) = 0;
          *(void *)(v29 + 56) = 0;
          *(unsigned char *)(v29 + 64) = 10;
          sub_10004621C(v29);
          sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
          Swift::UInt v32 = v72;
          uint64_t v31 = v73;
          sub_10096ABD0();
          sub_10096A790();
          uint64_t v33 = v31;
          uint64_t v11 = v71;
          (*v69)(v32, v33);
LABEL_32:
          swift_willThrow();
          uint64_t v7 = 0;
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
LABEL_31:
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v51 = 0;
      *(void *)(v51 + 8) = 0;
      *(unsigned char *)(v51 + 16) = 10;
      goto LABEL_32;
    }
    v81[0] = v14;
    v81[1] = v15 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v90 = v81;
    long long v84 = v88;
    unint64_t v85 = v89;
    uint64_t v86 = v81;
    uint64_t v87 = v91;
    swift_bridgeObjectRetain();
    unsigned int v42 = fpfs_openfdbyhandle();
    if ((v42 & 0x80000000) == 0)
    {
      unsigned int v82 = v42;
      swift_bridgeObjectRelease();
      uint64_t v57 = v66;
      uint64_t v56 = v67;
      uint64_t v58 = v65;
      goto LABEL_44;
    }
    if (!sub_10096B4D0() || (uint64_t v43 = sub_10096B4A0(), (v43 & 0x100000000) != 0))
    {
      sub_100358858();
      swift_allocError();
      *(void *)uint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      *(unsigned char *)(v50 + 16) = 10;
    }
    else
    {
      int v80 = v43;
      sub_10002B7CC(&qword_100ACE1E0);
      uint64_t v44 = swift_initStackObject();
      *(_OWORD *)(v44 + 16) = v68;
      *(void *)(v44 + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      *(void *)(v44 + 40) = v45;
      *(void *)(v44 + 72) = &type metadata for VFSFileError;
      *(void *)(v44 + 48) = 0;
      *(void *)(v44 + 56) = 0;
      *(unsigned char *)(v44 + 64) = 10;
      sub_10004621C(v44);
      sub_1000256AC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      signed int v47 = v72;
      uint64_t v46 = v73;
      sub_10096ABD0();
      sub_10096A790();
      uint64_t v48 = v46;
      uint64_t v11 = v71;
      (*v69)(v47, v48);
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_33:
    swift_errorRetain();
    LODWORD(v88) = sub_10096A680();
    sub_100045CB4();
    char v52 = sub_10096AA60();
    swift_errorRelease();
    if ((v52 & 1) == 0) {
      break;
    }
    swift_errorRelease();
    useconds_t v53 = v79;
    usleep(v79);
    if (2 * v53 >= 0xF4240) {
      int v13 = 1000000;
    }
    else {
      int v13 = 2 * v53;
    }
    uint64_t v12 = sub_100595FB8(v83);
  }
  swift_errorRetain();
  LODWORD(v88) = sub_10096A710();
  char v54 = sub_10096AA60();
  swift_errorRelease();
  if (v54)
  {
    swift_errorRelease();
    v66(0xFFFFFFFFLL, 0, 0, 0);
  }
  return sub_100595FB8(v83);
}