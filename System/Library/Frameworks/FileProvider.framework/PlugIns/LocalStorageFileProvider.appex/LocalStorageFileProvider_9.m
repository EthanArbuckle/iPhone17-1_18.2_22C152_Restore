uint64_t sub_1005D4E78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;

  sub_10096CBD0(281);
  v10._object = (void *)0x80000001009A7BE0;
  v10._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v10);
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = 47;
  v12._object = (void *)0xE100000000000000;
  sub_10096BDC0(v12);
  v8 = *(void *)(a4 + qword_100B0B270);
  v7 = *(void **)(a4 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v8;
  v13._object = v7;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000025;
  v14._object = (void *)0x80000001009A7DC0;
  sub_10096BDC0(v14);
  v15._countAndFlagsBits = a2;
  v15._object = a3;
  sub_10096BDC0(v15);
  v16._countAndFlagsBits = 542002976;
  v16._object = (void *)0xE400000000000000;
  sub_10096BDC0(v16);
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v8;
  v17._object = v7;
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0xD000000000000014;
  v18._object = (void *)0x80000001009A7DF0;
  sub_10096BDC0(v18);
  v19._countAndFlagsBits = a2;
  v19._object = a3;
  sub_10096BDC0(v19);
  v20._countAndFlagsBits = 0x2E77656E203D2120;
  v20._object = (void *)0xE800000000000000;
  sub_10096BDC0(v20);
  v21._countAndFlagsBits = a2;
  v21._object = a3;
  sub_10096BDC0(v21);
  v22._countAndFlagsBits = 0xD000000000000053;
  v22._object = (void *)0x80000001009A7E10;
  sub_10096BDC0(v22);
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = v8;
  v23._object = v7;
  sub_10096BDC0(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0x455320202020200ALL;
  v24._object = (void *)0xEA00000000002054;
  sub_10096BDC0(v24);
  v25._countAndFlagsBits = a2;
  v25._object = a3;
  sub_10096BDC0(v25);
  v26._countAndFlagsBits = 2112800;
  v26._object = (void *)0xE300000000000000;
  sub_10096BDC0(v26);
  v27._countAndFlagsBits = a2;
  v27._object = a3;
  sub_10096BDC0(v27);
  v28._countAndFlagsBits = 0x2E646C6F202D20;
  v28._object = (void *)0xE700000000000000;
  sub_10096BDC0(v28);
  v29._countAndFlagsBits = a2;
  v29._object = a3;
  sub_10096BDC0(v29);
  v30._countAndFlagsBits = 0x2E77656E202B20;
  v30._object = (void *)0xE700000000000000;
  sub_10096BDC0(v30);
  v31._countAndFlagsBits = a2;
  v31._object = a3;
  sub_10096BDC0(v31);
  v32._countAndFlagsBits = 0xD000000000000036;
  v32._object = (void *)0x80000001009A7E70;
  sub_10096BDC0(v32);
  v33._countAndFlagsBits = sub_1005DFF5C(0x657261702E646C6FLL, (void *)0xED000064695F746ELL, *(void *)(a4 + qword_100B0B270), *(void **)(a4 + qword_100B0B270 + 8), 49, (void *)0xE100000000000000);
  sub_10096BDC0(v33);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 0x444E450A3B2929;
  v34._object = (void *)0xE700000000000000;
  sub_10096BDC0(v34);
  return 0;
}

uint64_t sub_1005D5180(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_10096CBD0(492);
  v10._object = (void *)0x80000001009A7BE0;
  v10._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v10);
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = 47;
  v12._object = (void *)0xE100000000000000;
  sub_10096BDC0(v12);
  uint64_t v8 = *(void *)(a4 + qword_100B0B270);
  v7 = *(void **)(a4 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v8;
  v13._object = v7;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD00000000000003BLL;
  v14._object = (void *)0x80000001009A7C00;
  sub_10096BDC0(v14);
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v8;
  v15._object = v7;
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0xD00000000000007ALL;
  v16._object = (void *)0x80000001009A7C40;
  sub_10096BDC0(v16);
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v8;
  v17._object = v7;
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x455320202020200ALL;
  v18._object = (void *)0xEA00000000002054;
  sub_10096BDC0(v18);
  v19._countAndFlagsBits = a2;
  v19._object = a3;
  sub_10096BDC0(v19);
  v20._countAndFlagsBits = 2112800;
  v20._object = (void *)0xE300000000000000;
  sub_10096BDC0(v20);
  v21._countAndFlagsBits = a2;
  v21._object = a3;
  sub_10096BDC0(v21);
  v22._countAndFlagsBits = 0x2E77656E202D20;
  v22._object = (void *)0xE700000000000000;
  sub_10096BDC0(v22);
  v23._countAndFlagsBits = a2;
  v23._object = a3;
  sub_10096BDC0(v23);
  v24._countAndFlagsBits = 0xD000000000000093;
  v24._object = (void *)0x80000001009A7CC0;
  sub_10096BDC0(v24);
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = v8;
  v25._object = v7;
  sub_10096BDC0(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x455320202020200ALL;
  v26._object = (void *)0xEA00000000002054;
  sub_10096BDC0(v26);
  v27._countAndFlagsBits = a2;
  v27._object = a3;
  sub_10096BDC0(v27);
  v28._countAndFlagsBits = 2112800;
  v28._object = (void *)0xE300000000000000;
  sub_10096BDC0(v28);
  v29._countAndFlagsBits = a2;
  v29._object = a3;
  sub_10096BDC0(v29);
  v30._countAndFlagsBits = 0x2E77656E202B20;
  v30._object = (void *)0xE700000000000000;
  sub_10096BDC0(v30);
  v31._countAndFlagsBits = a2;
  v31._object = a3;
  sub_10096BDC0(v31);
  v32._countAndFlagsBits = 0xD000000000000055;
  v32._object = (void *)0x80000001009A7D60;
  sub_10096BDC0(v32);
  return 0;
}

uint64_t sub_1005D5434(uint64_t a1)
{
  sub_10096CBD0(27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001009A82F0;
  v3._countAndFlagsBits = 0xD000000000000019;
  sub_10096BDC0(v3);
  return a1;
}

uint64_t sub_1005D54B8()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t result = sub_1005D3AB0(0xD00000000000001DLL, 0x80000001009A7B40, (uint64_t)&off_100A6CB48, (uint64_t)sub_1005D555C, 0);
    if (!v1) {
      return sub_1005D3AB0(0xD000000000000019, 0x80000001009A7B60, (uint64_t)&off_100A6CB88, (uint64_t)sub_1005D557C, 0);
    }
  }
  return result;
}

uint64_t sub_1005D555C(uint64_t a1, void *a2)
{
  return sub_1005D559C(a1, a2, 83, 0xD00000000000001ELL, (void *)0x80000001009A81E0);
}

uint64_t sub_1005D557C(uint64_t a1, void *a2)
{
  return sub_1005D559C(a1, a2, 84, 0xD00000000000001FLL, (void *)0x80000001009A7B80);
}

uint64_t sub_1005D559C(uint64_t a1, void *a2, Swift::Int a3, uint64_t a4, void *a5)
{
  sub_10096CBD0(a3);
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  sub_10096BDC0(v10);
  v11._countAndFlagsBits = a4;
  v11._object = a5;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = a1;
  v12._object = a2;
  sub_10096BDC0(v12);
  v13._countAndFlagsBits = 0xD00000000000001DLL;
  v13._object = (void *)0x80000001009A7BA0;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  sub_10096BDC0(v14);
  v15._object = (void *)0x80000001009A7BC0;
  v15._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v15);
  v16._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1005D56B8()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t result = sub_1005D3AB0(0xD000000000000021, 0x80000001009A83F0, (uint64_t)&off_100A6CBC8, (uint64_t)sub_1005D5760, 0);
    if (!v1) {
      return sub_1005D3AB0(0xD000000000000022, 0x80000001009A8420, (uint64_t)&off_100A6CBF8, (uint64_t)sub_1005D5768, 0);
    }
  }
  return result;
}

uint64_t sub_1005D5760(uint64_t a1, void *a2)
{
  return sub_1005D5770(a1, a2);
}

uint64_t sub_1005D5768(uint64_t a1, void *a2)
{
  return sub_1005D5770(a1, a2);
}

uint64_t sub_1005D5770(uint64_t a1, void *a2)
{
  sub_10096CBD0(36);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  sub_10096BDC0(v5);
  v6._object = (void *)0x80000001009A8450;
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  sub_10096BDC0(v6);
  v7._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x30203D2029;
  v8._object = (void *)0xE500000000000000;
  sub_10096BDC0(v8);
  return 40;
}

uint64_t sub_1005D584C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  Swift::String v6 = *(void **)(v2 + qword_100B0B260);
  Swift::String v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1005DF9B4;
  *(void *)(v8 + 24) = v7;
  v48 = sub_1001FB2E8;
  uint64_t v49 = v8;
  aBlock = _NSConcreteStackBlock;
  uint64_t v45 = 1107296256;
  v46 = sub_10017090C;
  v47 = &unk_100A90EC8;
  v9 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v43 = v6;
  aBlock = 0;
  unsigned int v10 = [v6 executeSwift:v9 error:&aBlock];
  _Block_release(v9);
  Swift::String v11 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10)
  {
    Swift::String v12 = (void *)swift_allocObject();
    v12[2] = a1;
    v12[3] = a2;
    v12[4] = v3;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1005DFA04;
    *(void *)(v13 + 24) = v12;
    v48 = sub_1001FB2E8;
    uint64_t v49 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v45 = 1107296256;
    v46 = sub_10017090C;
    v47 = &unk_100A90F40;
    Swift::String v14 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v15 = [v43 executeSwift:v14 error:&aBlock];
    _Block_release(v14);
    Swift::String v16 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if (!v15)
      {
        sub_10096ABF0();

        swift_willThrow();
LABEL_23:
        swift_release();
        return swift_release();
      }
      Swift::String v18 = (void *)swift_allocObject();
      v18[2] = a1;
      v18[3] = a2;
      v18[4] = v3;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_1005DFA60;
      *(void *)(v19 + 24) = v18;
      v48 = sub_1001FB2E8;
      uint64_t v49 = v19;
      aBlock = _NSConcreteStackBlock;
      uint64_t v45 = 1107296256;
      v46 = sub_10017090C;
      v47 = &unk_100A90FB8;
      Swift::String v20 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned int v21 = [v43 executeSwift:v20 error:&aBlock];
      _Block_release(v20);
      Swift::String v22 = aBlock;
      char v23 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v23 & 1) == 0)
      {
        if (!v21)
        {
          sub_10096ABF0();

          swift_willThrow();
LABEL_22:
          swift_release();
          goto LABEL_23;
        }
        Swift::String v24 = (void *)swift_allocObject();
        v24[2] = a1;
        v24[3] = a2;
        v24[4] = v3;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = sub_1005DFAB0;
        *(void *)(v25 + 24) = v24;
        v48 = sub_1001FB2E8;
        uint64_t v49 = v25;
        aBlock = _NSConcreteStackBlock;
        uint64_t v45 = 1107296256;
        v46 = sub_10017090C;
        v47 = &unk_100A91030;
        Swift::String v26 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        aBlock = 0;
        unsigned int v27 = [v43 executeSwift:v26 error:&aBlock];
        _Block_release(v26);
        Swift::String v28 = aBlock;
        char v29 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v29 & 1) == 0)
        {
          if (!v27)
          {
            sub_10096ABF0();

            swift_willThrow();
LABEL_21:
            swift_release();
            goto LABEL_22;
          }
          Swift::String v30 = (void *)swift_allocObject();
          v30[2] = a1;
          v30[3] = a2;
          v30[4] = v3;
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = sub_1005DFB0C;
          *(void *)(v31 + 24) = v30;
          v48 = sub_1001FB2E8;
          uint64_t v49 = v31;
          aBlock = _NSConcreteStackBlock;
          uint64_t v45 = 1107296256;
          v46 = sub_10017090C;
          v47 = &unk_100A910A8;
          Swift::String v32 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_release();
          aBlock = 0;
          unsigned int v33 = [v43 executeSwift:v32 error:&aBlock];
          _Block_release(v32);
          v34 = aBlock;
          char v35 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v35 & 1) == 0)
          {
            if (!v33)
            {
              sub_10096ABF0();

              swift_willThrow();
LABEL_20:
              swift_release();
              goto LABEL_21;
            }
            v36 = (void *)swift_allocObject();
            v36[2] = a1;
            v36[3] = a2;
            v36[4] = v3;
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = sub_1005DFBAC;
            *(void *)(v37 + 24) = v36;
            v48 = sub_1001FB2E8;
            uint64_t v49 = v37;
            aBlock = _NSConcreteStackBlock;
            uint64_t v45 = 1107296256;
            v46 = sub_10017090C;
            v47 = &unk_100A91120;
            v38 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_release();
            aBlock = 0;
            unsigned __int8 v39 = [v43 executeSwift:v38 error:&aBlock];
            _Block_release(v38);
            v40 = aBlock;
            char v41 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v41 & 1) == 0)
            {
              if (v39)
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return swift_release();
              }
              sub_10096ABF0();

              swift_willThrow();
              swift_release();
              goto LABEL_20;
            }
LABEL_30:
            __break(1u);
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_10096ABF0();

  swift_willThrow();
  return swift_release();
}

unint64_t sub_1005D6158(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, Swift::Int a5, uint64_t a6, void *a7)
{
  sub_10096CBD0(a5);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = a2;
  v16._object = a3;
  sub_10096BDC0(v16);
  v17._countAndFlagsBits = 47;
  v17._object = (void *)0xE100000000000000;
  sub_10096BDC0(v17);
  uint64_t v12 = a4 + qword_100B0B270;
  uint64_t v13 = *(void *)(a4 + qword_100B0B270);
  Swift::String v14 = *(void **)(v12 + 8);
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v13;
  v18._object = v14;
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = a6;
  v19._object = a7;
  sub_10096BDC0(v19);
  return 0xD000000000000018;
}

uint64_t sub_1005D623C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_10096CBD0(56);
  v11._object = (void *)0x80000001009A8290;
  v11._countAndFlagsBits = 0xD000000000000018;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = a2;
  v12._object = a3;
  sub_10096BDC0(v12);
  v13._countAndFlagsBits = 47;
  v13._object = (void *)0xE100000000000000;
  sub_10096BDC0(v13);
  uint64_t v7 = a4 + qword_100B0B270;
  uint64_t v8 = *(void *)(a4 + qword_100B0B270);
  v9 = *(void **)(v7 + 8);
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v8;
  v14._object = v9;
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0xD00000000000001BLL;
  v15._object = (void *)0x80000001009A82B0;
  sub_10096BDC0(v15);
  return 0;
}

uint64_t sub_1005D6330()
{
  uint64_t result = sub_1005D584C(0xD00000000000001DLL, 0x80000001009A7B40);
  if (!v1)
  {
    sub_1005D584C(0xD000000000000019, 0x80000001009A7B60);
    sub_1005D584C(0xD000000000000016, 0x80000001009A8200);
    uint64_t v3 = *(void **)(v0 + qword_100B0B260);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1005DF97C;
    *(void *)(v4 + 24) = v0;
    Swift::String v18 = sub_1001FB2E8;
    uint64_t v19 = v4;
    aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    Swift::String v16 = sub_10017090C;
    Swift::String v17 = &unk_100A90E00;
    Swift::String v5 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v6 = [v3 executeSwift:v5 error:&aBlock];
    _Block_release(v5);
    uint64_t v7 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v6)
      {
        sub_10096ABF0();

        swift_willThrow();
        return swift_release();
      }
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_1005DF994;
      *(void *)(v9 + 24) = v0;
      Swift::String v18 = sub_1001FB2E8;
      uint64_t v19 = v9;
      aBlock = _NSConcreteStackBlock;
      uint64_t v15 = 1107296256;
      Swift::String v16 = sub_10017090C;
      Swift::String v17 = &unk_100A90E50;
      unsigned int v10 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned __int8 v11 = [v3 executeSwift:v10 error:&aBlock];
      _Block_release(v10);
      Swift::String v12 = aBlock;
      char v13 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v13 & 1) == 0)
      {
        if (v11) {
          return swift_release_n();
        }
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1005D669C(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(77);
  v7._countAndFlagsBits = 0xD00000000000002FLL;
  v7._object = (void *)0x80000001009A8220;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8270;
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D6760(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(73);
  v7._countAndFlagsBits = 0xD00000000000002FLL;
  v7._object = (void *)0x80000001009A8220;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8250;
  v9._countAndFlagsBits = 0xD000000000000018;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D6824()
{
  uint64_t result = sub_1005D584C(0xD000000000000012, 0x80000001009A8310);
  if (!v0) {
    return sub_1005D584C(0xD000000000000018, 0x80000001009A82D0);
  }
  return result;
}

uint64_t sub_1005D6880()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DF418;
  *(void *)(v2 + 24) = v0;
  char v35 = sub_1001FB2E8;
  uint64_t v36 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  unsigned int v33 = sub_10017090C;
  v34 = &unk_100A8FEB0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  Swift::String v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DF430;
  *(void *)(v7 + 24) = v0;
  char v35 = sub_1001FB2E8;
  uint64_t v36 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  unsigned int v33 = sub_10017090C;
  v34 = &unk_100A8FF00;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  unsigned int v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v9)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1005DF448;
    *(void *)(v12 + 24) = v0;
    char v35 = sub_1001FB2E8;
    uint64_t v36 = v12;
    aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    unsigned int v33 = sub_10017090C;
    v34 = &unk_100A8FF50;
    char v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v14 = [v1 executeSwift:v13 error:&aBlock];
    _Block_release(v13);
    uint64_t v15 = aBlock;
    char v16 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      if (!v14) {
        goto LABEL_16;
      }
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_1005DF48C;
      *(void *)(v17 + 24) = v0;
      char v35 = sub_1001FB2E8;
      uint64_t v36 = v17;
      aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      unsigned int v33 = sub_10017090C;
      v34 = &unk_100A8FFA0;
      Swift::String v18 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned int v19 = [v1 executeSwift:v18 error:&aBlock];
      _Block_release(v18);
      uint64_t v15 = aBlock;
      char v20 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v20 & 1) == 0)
      {
        if (!v19) {
          goto LABEL_16;
        }
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_1005DF4A4;
        *(void *)(v21 + 24) = v0;
        char v35 = sub_1001FB2E8;
        uint64_t v36 = v21;
        aBlock = _NSConcreteStackBlock;
        uint64_t v32 = 1107296256;
        unsigned int v33 = sub_10017090C;
        v34 = &unk_100A8FFF0;
        Swift::String v22 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock = 0;
        unsigned int v23 = [v1 executeSwift:v22 error:&aBlock];
        _Block_release(v22);
        uint64_t v15 = aBlock;
        char v24 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v24 & 1) == 0)
        {
          if (v23)
          {
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = sub_1005DF4BC;
            *(void *)(v25 + 24) = v0;
            char v35 = sub_1001FB2E8;
            uint64_t v36 = v25;
            aBlock = _NSConcreteStackBlock;
            uint64_t v32 = 1107296256;
            unsigned int v33 = sub_10017090C;
            v34 = &unk_100A90040;
            Swift::String v26 = _Block_copy(&aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            aBlock = 0;
            unsigned __int8 v27 = [v1 executeSwift:v26 error:&aBlock];
            _Block_release(v26);
            Swift::String v28 = aBlock;
            char v29 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v29 & 1) == 0)
            {
              if (v27) {
                return swift_release_n();
              }
              sub_10096ABF0();

              swift_willThrow();
              goto LABEL_18;
            }
LABEL_25:
            __break(1u);
          }
LABEL_16:
          sub_10096ABF0();

          swift_willThrow();
LABEL_18:
          swift_release_n();
          return swift_release();
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_1005D7040(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(113);
  v7._object = (void *)0x80000001009A7580;
  v7._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD000000000000030;
  v9._object = (void *)0x80000001009A7630;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000022;
  v11._object = (void *)0x80000001009A7670;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D7140(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(149);
  v7._object = (void *)0x80000001009A7580;
  v7._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD000000000000042;
  v9._object = (void *)0x80000001009A75A0;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000034;
  v11._object = (void *)0x80000001009A75F0;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D7240(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(57);
  v7._countAndFlagsBits = 0xD000000000000020;
  v7._object = (void *)0x80000001009A7510;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7560;
  v9._countAndFlagsBits = 0xD000000000000017;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D7304(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(60);
  v7._countAndFlagsBits = 0xD000000000000020;
  v7._object = (void *)0x80000001009A7510;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  Swift::String v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7540;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  sub_10096BDC0(v9);
  return 0;
}

unint64_t sub_1005D73C8(uint64_t a1, uint64_t a2, Swift::Int a3, uint64_t a4, void *a5)
{
  sub_10096CBD0(a3);
  swift_bridgeObjectRelease();
  uint64_t v8 = a2 + qword_100B0B270;
  uint64_t v9 = *(void *)(a2 + qword_100B0B270);
  Swift::String v10 = *(void **)(v8 + 8);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v9;
  v12._object = v10;
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = a4;
  v13._object = a5;
  sub_10096BDC0(v13);
  return 0xD000000000000020;
}

uint64_t sub_1005D7484()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0) {
    return sub_1005D3AB0(0xD000000000000018, 0x80000001009A82D0, (uint64_t)&off_100A6CB18, (uint64_t)sub_1005D5434, 0);
  }
  return result;
}

uint64_t sub_1005D74DC()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + qword_100B0B260);
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = sub_1005DFCB8;
    v3[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A91490;
    uint64_t v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v5 = [v2 executeSwift:v4 error:aBlock];
    _Block_release(v4);
    id v6 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v5)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1005D76DC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(94);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8A60;
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000031;
  v11._object = (void *)0x80000001009A8A80;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D77E8()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DFC88;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_10017090C;
  char v16 = &unk_100A913F0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  unsigned int v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DFCA0;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_10017090C;
  char v16 = &unk_100A91440;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  Swift::String v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_1005D7AE4(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(72);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8A20;
  v9._countAndFlagsBits = 0xD00000000000003ALL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D7BA8(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(97);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A89C0;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000036;
  v11._object = (void *)0x80000001009A89E0;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D7CB4()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_1005DFC70;
  v2[3] = v0;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A913A0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = [v1 executeSwift:v3 error:aBlock];
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005D7E60(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(55);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x67616B6361705F5FLL;
  v9._object = (void *)0xED0000204E4F2065;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001009A89A0;
  v11._countAndFlagsBits = 0xD000000000000019;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D7F70()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_1005DFC58;
  v2[3] = v0;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A91350;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = [v1 executeSwift:v3 error:aBlock];
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005D811C(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(83);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8950;
  v9._countAndFlagsBits = 0xD000000000000045;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005D81E0()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = sub_1005DFC10;
    *(void *)(v2 + 24) = v0;
    uint64_t v21 = sub_1001FB2E8;
    uint64_t v22 = v2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    unsigned int v19 = sub_10017090C;
    char v20 = &unk_100A91260;
    uint64_t v3 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
    _Block_release(v3);
    id v5 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v4)
      {
        sub_10096ABF0();

        swift_willThrow();
        goto LABEL_12;
      }
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = sub_1005DFC28;
      *(void *)(v7 + 24) = v0;
      uint64_t v21 = sub_1001FB2E8;
      uint64_t v22 = v7;
      aBlock = _NSConcreteStackBlock;
      uint64_t v18 = 1107296256;
      unsigned int v19 = sub_10017090C;
      char v20 = &unk_100A912B0;
      Swift::String v8 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned int v9 = [v1 executeSwift:v8 error:&aBlock];
      _Block_release(v8);
      Swift::String v10 = aBlock;
      char v11 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v11 & 1) == 0)
      {
        if (v9)
        {
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = sub_1005DFC40;
          *(void *)(v12 + 24) = v0;
          uint64_t v21 = sub_1001FB2E8;
          uint64_t v22 = v12;
          aBlock = _NSConcreteStackBlock;
          uint64_t v18 = 1107296256;
          unsigned int v19 = sub_10017090C;
          char v20 = &unk_100A91300;
          Swift::String v13 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          aBlock = 0;
          unsigned int v14 = [v1 executeSwift:v13 error:&aBlock];
          _Block_release(v13);
          uint64_t v15 = aBlock;
          char v16 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v16 & 1) == 0)
          {
            if (v14)
            {
              swift_release_n();
              return;
            }
            sub_10096ABF0();

            swift_willThrow();
            swift_release_n();
            goto LABEL_12;
          }
LABEL_16:
          __break(1u);
        }
        sub_10096ABF0();

        swift_willThrow();
        swift_release();
LABEL_12:
        swift_release();
        return;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_1005D861C(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(66);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8910;
  v9._countAndFlagsBits = 0xD000000000000034;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D86E0(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(291);
  v6._countAndFlagsBits = 0xD000000000000027;
  v6._object = (void *)0x80000001009A8630;
  sub_10096BDC0(v6);
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v3 = *(void **)(a2 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v4;
  v7._object = v3;
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0xD000000000000043;
  v8._object = (void *)0x80000001009A8810;
  sub_10096BDC0(v8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v4;
  v9._object = v3;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0xD00000000000001DLL;
  v10._object = (void *)0x80000001009A8860;
  sub_10096BDC0(v10);
  v11._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001009A7FE0;
  v12._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v12);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v4;
  v13._object = v3;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000084;
  v14._object = (void *)0x80000001009A8880;
  sub_10096BDC0(v14);
  return 0;
}

uint64_t sub_1005D8878(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(475);
  v6._countAndFlagsBits = 0xD000000000000027;
  v6._object = (void *)0x80000001009A8630;
  sub_10096BDC0(v6);
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v3 = *(void **)(a2 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v4;
  v7._object = v3;
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x80000001009A8660;
  v8._countAndFlagsBits = 0xD00000000000004CLL;
  sub_10096BDC0(v8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v4;
  v9._object = v3;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x80000001009A86B0;
  v10._countAndFlagsBits = 0xD00000000000004CLL;
  sub_10096BDC0(v10);
  v11._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0xD000000000000010;
  v12._object = (void *)0x80000001009A7FE0;
  sub_10096BDC0(v12);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v4;
  v13._object = v3;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000078;
  v14._object = (void *)0x80000001009A8700;
  sub_10096BDC0(v14);
  v15._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0xD00000000000008ALL;
  v16._object = (void *)0x80000001009A8780;
  sub_10096BDC0(v16);
  return 0;
}

uint64_t sub_1005D8A64()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_1005DFBF8;
  v2[3] = v0;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A91210;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = [v1 executeSwift:v3 error:aBlock];
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005D8C10(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(68);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A85F0;
  v9._countAndFlagsBits = 0xD000000000000036;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005D8CD4()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    sub_1005D6330();
    if (!v1)
    {
      uint64_t v2 = *(void **)(v0 + qword_100B0B260);
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_1005DFBC8;
      *(void *)(v3 + 24) = v0;
      uint64_t v17 = sub_1001FB2E8;
      uint64_t v18 = v3;
      aBlock = _NSConcreteStackBlock;
      uint64_t v14 = 1107296256;
      Swift::String v15 = sub_10017090C;
      Swift::String v16 = &unk_100A91170;
      uint64_t v4 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned int v5 = [v2 executeSwift:v4 error:&aBlock];
      _Block_release(v4);
      Swift::String v6 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        if (!v5)
        {
          sub_10096ABF0();

          swift_willThrow();
LABEL_9:
          swift_release();
          return;
        }
        sub_1005D54B8();
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = sub_1005DFBE0;
        *(void *)(v8 + 24) = v0;
        uint64_t v17 = sub_1001FB2E8;
        uint64_t v18 = v8;
        aBlock = _NSConcreteStackBlock;
        uint64_t v14 = 1107296256;
        Swift::String v15 = sub_10017090C;
        Swift::String v16 = &unk_100A911C0;
        Swift::String v9 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock = 0;
        unsigned int v10 = [v2 executeSwift:v9 error:&aBlock];
        _Block_release(v9);
        Swift::String v11 = aBlock;
        char v12 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v12 & 1) == 0)
        {
          if (v10)
          {
            swift_release_n();
            return;
          }
          sub_10096ABF0();

          swift_willThrow();
          swift_release();
          goto LABEL_9;
        }
      }
      __break(1u);
    }
  }
}

uint64_t sub_1005D8FF8(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(83);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A85A0;
  v9._countAndFlagsBits = 0xD000000000000045;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D90BC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(139);
  v7._countAndFlagsBits = 0x20455441445055;
  v7._object = (void *)0xE700000000000000;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8510;
  v9._countAndFlagsBits = 0xD00000000000003ELL;
  sub_10096BDC0(v9);
  v10._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000042;
  v11._object = (void *)0x80000001009A8550;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005D91D0()
{
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = *(void **)(v0 + qword_100B0B260);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_1005DF78C;
    *(void *)(v3 + 24) = v0;
    unsigned __int8 v27 = sub_1001FB2E8;
    uint64_t v28 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_10017090C;
    Swift::String v26 = &unk_100A909F0;
    uint64_t v4 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v5 = [v2 executeSwift:v4 error:&aBlock];
    _Block_release(v4);
    Swift::String v6 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v5)
      {
        sub_10096ABF0();

        swift_willThrow();
        return swift_release();
      }
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_1005DF7A4;
      *(void *)(v8 + 24) = v0;
      unsigned __int8 v27 = sub_1001FB2E8;
      uint64_t v28 = v8;
      aBlock = _NSConcreteStackBlock;
      uint64_t v24 = 1107296256;
      uint64_t v25 = sub_10017090C;
      Swift::String v26 = &unk_100A90A40;
      Swift::String v9 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      unsigned int v10 = [v2 executeSwift:v9 error:&aBlock];
      _Block_release(v9);
      Swift::String v11 = aBlock;
      char v12 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v12 & 1) == 0)
      {
        if (!v10)
        {
LABEL_18:
          sub_10096ABF0();

          swift_willThrow();
          return swift_release_n();
        }
        sub_1005D56B8();
        if (v1) {
          return swift_release_n();
        }
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = sub_1005DF7BC;
        *(void *)(v13 + 24) = v0;
        unsigned __int8 v27 = sub_1001FB2E8;
        uint64_t v28 = v13;
        aBlock = _NSConcreteStackBlock;
        uint64_t v24 = 1107296256;
        uint64_t v25 = sub_10017090C;
        Swift::String v26 = &unk_100A90A90;
        uint64_t v14 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock = 0;
        unsigned int v15 = [v2 executeSwift:v14 error:&aBlock];
        _Block_release(v14);
        Swift::String v11 = aBlock;
        char v16 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v16 & 1) == 0)
        {
          if (v15)
          {
            uint64_t v17 = swift_allocObject();
            *(void *)(v17 + 16) = sub_1005DF808;
            *(void *)(v17 + 24) = v0;
            unsigned __int8 v27 = sub_1001FB2E8;
            uint64_t v28 = v17;
            aBlock = _NSConcreteStackBlock;
            uint64_t v24 = 1107296256;
            uint64_t v25 = sub_10017090C;
            Swift::String v26 = &unk_100A90AE0;
            uint64_t v18 = _Block_copy(&aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            aBlock = 0;
            unsigned int v19 = [v2 executeSwift:v18 error:&aBlock];
            _Block_release(v18);
            char v20 = aBlock;
            char v21 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v21 & 1) == 0)
            {
              if (!v19)
              {
                sub_10096ABF0();

                swift_willThrow();
              }
              return swift_release_n();
            }
LABEL_25:
            __break(1u);
          }
          goto LABEL_18;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t result = sub_1005D6824();
  if (!v1)
  {
    if ((*(unsigned char *)(v0 + 32) & 1) == 0) {
      sub_1005D3AB0(0xD000000000000018, 0x80000001009A82D0, (uint64_t)&off_100A6CB18, (uint64_t)sub_1005D5434, 0);
    }
    sub_1005D6330();
    return sub_1005D54B8();
  }
  return result;
}

uint64_t sub_1005D97BC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(91);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A84C0;
  v9._countAndFlagsBits = 0xD00000000000004DLL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D9880(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(92);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A8470;
  v9._countAndFlagsBits = 0xD00000000000004ELL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D9944(uint64_t a1, uint64_t a2, Swift::Int a3, uint64_t a4, void *a5)
{
  sub_10096CBD0(a3);
  v12._countAndFlagsBits = 0x20455441445055;
  v12._object = (void *)0xE700000000000000;
  sub_10096BDC0(v12);
  uint64_t v8 = a2 + qword_100B0B270;
  uint64_t v9 = *(void *)(a2 + qword_100B0B270);
  unsigned int v10 = *(void **)(v8 + 8);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v9;
  v13._object = v10;
  sub_10096BDC0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = a4;
  v14._object = a5;
  sub_10096BDC0(v14);
  v15._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x30203D2029;
  v16._object = (void *)0xE500000000000000;
  sub_10096BDC0(v16);
  return 0;
}

uint64_t sub_1005D9A4C()
{
  type metadata accessor for VFSItem(0);
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + qword_100B0B260);
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = sub_1005DF774;
    v3[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A909A0;
    uint64_t v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v5 = [v2 executeSwift:v4 error:aBlock];
    _Block_release(v4);
    id v6 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v5)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1005D9C24(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(58);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  unsigned int v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7B10;
  v9._countAndFlagsBits = 0xD00000000000002CLL;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005D9CE8()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF75C;
    v2[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A90950;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005D9EA0(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(69);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7AD0;
  v9._countAndFlagsBits = 0xD000000000000037;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005D9F64(uint64_t a1, void *a2)
{
  sub_10096CBD0(71);
  v8._countAndFlagsBits = 0x28284C4C554E4649;
  v8._object = (void *)0xEF205443454C4553;
  sub_10096BDC0(v8);
  v9._countAndFlagsBits = sub_1005E05F4(0, (void *)0xE000000000000000);
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x80000001009A9630;
  v10._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v10);
  uint64_t v5 = *(void *)(v2 + qword_100B0B270);
  id v6 = *(void **)(v2 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v5;
  v11._object = v6;
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0xD000000000000015;
  v12._object = (void *)0x80000001009A9650;
  sub_10096BDC0(v12);
  v13._countAndFlagsBits = a1;
  v13._object = a2;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = 0x20202020200A2C29;
  v14._object = (void *)0xEA00000000002020;
  sub_10096BDC0(v14);
  v15._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 41;
  v16._object = (void *)0xE100000000000000;
  sub_10096BDC0(v16);
  return 0;
}

uint64_t sub_1005DA144()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DF72C;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  Swift::String v15 = sub_10017090C;
  Swift::String v16 = &unk_100A908B0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  uint64_t v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DF744;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  Swift::String v15 = sub_10017090C;
  Swift::String v16 = &unk_100A90900;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  Swift::String v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_1005DA440(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(83);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7A80;
  v9._countAndFlagsBits = 0xD000000000000045;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DA504(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(93);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7A30;
  v9._countAndFlagsBits = 0xD00000000000004FLL;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005DA5C8()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF714;
    v2[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A90860;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005DA780(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(62);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A79F0;
  v9._countAndFlagsBits = 0xD000000000000030;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005DA844()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF6FC;
    v2[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A90810;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005DA9FC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(101);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7990;
  v9._countAndFlagsBits = 0xD000000000000057;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005DAAC0()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF6E4;
    v2[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A907C0;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005DAC78(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(65);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7950;
  v9._countAndFlagsBits = 0xD000000000000033;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DAD3C()
{
  uint64_t v1 = *(void ***)(v0 + qword_100B0B260);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = sub_1005DF6CC;
    *(void *)(v2 + 24) = v0;
    Swift::String v12 = sub_1001FB2E8;
    uint64_t v13 = v2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    Swift::String v10 = sub_10017090C;
    char v11 = &unk_100A90770;
    uint64_t v3 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
    _Block_release(v3);
    uint64_t v1 = aBlock;
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1005DF6B4;
  *(void *)(v5 + 24) = v0;
  Swift::String v12 = sub_1001FB2E8;
  uint64_t v13 = v5;
  aBlock = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  Swift::String v10 = sub_10017090C;
  char v11 = &unk_100A90720;
  id v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v6 error:&aBlock];
  _Block_release(v6);
  uint64_t v1 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6) {
    __break(1u);
  }
LABEL_5:
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005DB008(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(101);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A78B0;
  v9._countAndFlagsBits = 0xD000000000000057;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DB0CC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(69);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7910;
  v9._countAndFlagsBits = 0xD000000000000037;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DB190()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DF56C;
  *(void *)(v2 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A904F0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  uint64_t v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
LABEL_19:
    char v35 = 0;
    goto LABEL_20;
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DF584;
  *(void *)(v7 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A90540;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  Swift::String v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v9)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    goto LABEL_19;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1005DF59C;
  *(void *)(v12 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A90590;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v14 = [v1 executeSwift:v13 error:&aBlock];
  _Block_release(v13);
  Swift::String v15 = aBlock;
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!v14)
  {
LABEL_18:
    sub_10096ABF0();

    swift_willThrow();
    swift_release_n();
    goto LABEL_19;
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1005DF53C;
  *(void *)(v17 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v17;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A905E0;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v19 = [v1 executeSwift:v18 error:&aBlock];
  _Block_release(v18);
  Swift::String v15 = aBlock;
  char v20 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!v19) {
    goto LABEL_18;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1005DF554;
  *(void *)(v21 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A90630;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v23 = [v1 executeSwift:v22 error:&aBlock];
  _Block_release(v22);
  Swift::String v15 = aBlock;
  char v24 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1005DF50C;
  *(void *)(v25 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v25;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A90680;
  Swift::String v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v27 = [v1 executeSwift:v26 error:&aBlock];
  _Block_release(v26);
  Swift::String v15 = aBlock;
  char v28 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  if (!v27) {
    goto LABEL_18;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1005DF524;
  *(void *)(v29 + 24) = v0;
  v40 = sub_1001FB2E8;
  uint64_t v41 = v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  v38 = sub_10017090C;
  unsigned __int8 v39 = &unk_100A906D0;
  Swift::String v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v31 = [v1 executeSwift:v30 error:&aBlock];
  _Block_release(v30);
  uint64_t v32 = aBlock;
  char v33 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v33) {
    goto LABEL_28;
  }
  if (v31) {
    return swift_release_n();
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release_n();
  char v35 = sub_1005DF524;
LABEL_20:
  swift_release();
  return sub_1000705CC((uint64_t)v35);
}

uint64_t sub_1005DBAB0(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(59);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7700;
  v9._countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBB74(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(72);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A5F10;
  v9._countAndFlagsBits = 0xD00000000000001FLL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBC38(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(72);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A5EF0;
  v9._countAndFlagsBits = 0xD00000000000001FLL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBCFC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(57);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7720;
  v9._countAndFlagsBits = 0xD000000000000010;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBDC0(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(54);
  v7._object = (void *)0x80000001009A76A0;
  v7._countAndFlagsBits = 0xD000000000000027;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x70755F6D6574692FLL;
  v9._object = (void *)0xED00002265746164;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBE88(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(59);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7740;
  v9._countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DBF4C(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(56);
  v7._object = (void *)0x80000001009A76A0;
  v7._countAndFlagsBits = 0xD000000000000027;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x5F746E657261702FLL;
  v9._object = (void *)0xEF22657461647075;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DC014()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DF56C;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  Swift::String v15 = sub_10017090C;
  char v16 = &unk_100A90450;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  uint64_t v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DF524;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_1001FB2E8;
  uint64_t v18 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  Swift::String v15 = sub_10017090C;
  char v16 = &unk_100A904A0;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  Swift::String v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_1005DC310()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_1005DF60C;
  v2[3] = v0;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A90400;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = [v1 executeSwift:v3 error:aBlock];
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005DC4BC(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(75);
  v7._countAndFlagsBits = 0x4154205245544C41;
  v7._object = (void *)0xEC00000020454C42;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7870;
  v9._countAndFlagsBits = 0xD00000000000003DLL;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DC580()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_1005DF524;
  v2[3] = v0;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A903B0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = [v1 executeSwift:v3 error:aBlock];
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005DC72C()
{
  uint64_t v1 = v0;
  char v2 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 112))();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
LABEL_10:
  }
    __break(1u);
  uint64_t v4 = *(void *)(Strong + 40);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_retain();
  uint64_t v6 = swift_release();
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 112))(v6);
  uint64_t result = swift_release();
  if (v4 & 1) == 0 || (v2) {
    return result;
  }
  Swift::String v8 = *(void **)(v1 + qword_100B0B260);
  Swift::String v9 = (void *)swift_allocObject();
  v9[2] = sub_1005DF5E4;
  v9[3] = v1;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A90360;
  Swift::String v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v11 = [v8 executeSwift:v10 error:aBlock];
  _Block_release(v10);
  id v12 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v11)
  {
    sub_10096ABF0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1005DC988(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(76);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  uint64_t v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD000000000000026;
  v9._object = (void *)0x80000001009A7820;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001009A7850;
  v11._countAndFlagsBits = 0xD000000000000015;
  sub_10096BDC0(v11);
  return 0;
}

void sub_1005DCA94()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    char v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF5CC;
    v2[3] = v0;
    aBlock[4] = sub_1001FB2E8;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A90310;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005DCC4C(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(193);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A7760;
  v9._countAndFlagsBits = 0xD00000000000001FLL;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000091;
  v11._object = (void *)0x80000001009A7780;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005DCD58()
{
  uint64_t v1 = *(void **)(v0 + qword_100B0B260);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1005DF50C;
  *(void *)(v2 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A90090;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v4 = [v1 executeSwift:v3 error:&aBlock];
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (!v4)
  {
    sub_10096ABF0();

    swift_willThrow();
LABEL_21:
    v40 = 0;
    uint64_t v41 = 0;
    goto LABEL_22;
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005DF524;
  *(void *)(v7 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A900E0;
  Swift::String v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v9 = [v1 executeSwift:v8 error:&aBlock];
  _Block_release(v8);
  Swift::String v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!v9)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1005DF53C;
  *(void *)(v12 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A90130;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v14 = [v1 executeSwift:v13 error:&aBlock];
  _Block_release(v13);
  Swift::String v15 = aBlock;
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (!v14)
  {
LABEL_20:
    sub_10096ABF0();

    swift_willThrow();
    swift_release_n();
    goto LABEL_21;
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1005DF554;
  *(void *)(v17 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v17;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A90180;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v19 = [v1 executeSwift:v18 error:&aBlock];
  _Block_release(v18);
  Swift::String v15 = aBlock;
  char v20 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1005DF56C;
  *(void *)(v21 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A901D0;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v23 = [v1 executeSwift:v22 error:&aBlock];
  _Block_release(v22);
  Swift::String v15 = aBlock;
  char v24 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!v23) {
    goto LABEL_20;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1005DF584;
  *(void *)(v25 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v25;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A90220;
  Swift::String v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v27 = [v1 executeSwift:v26 error:&aBlock];
  _Block_release(v26);
  Swift::String v15 = aBlock;
  char v28 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (!v27) {
    goto LABEL_20;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1005DF59C;
  *(void *)(v29 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A90270;
  Swift::String v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v31 = [v1 executeSwift:v30 error:&aBlock];
  _Block_release(v30);
  uint64_t v32 = aBlock;
  char v33 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v33)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!v31)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release_n();
    uint64_t v41 = 0;
    v40 = sub_1005DF59C;
    goto LABEL_22;
  }
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1005DF5B4;
  *(void *)(v34 + 24) = v0;
  v46 = sub_1001FB2E8;
  uint64_t v47 = v34;
  aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  v44 = sub_10017090C;
  uint64_t v45 = &unk_100A902C0;
  char v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned __int8 v36 = [v1 executeSwift:v35 error:&aBlock];
  _Block_release(v35);
  uint64_t v37 = aBlock;
  char v38 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v38) {
LABEL_32:
  }
    __break(1u);
  if (v36) {
    return swift_release_n();
  }
  sub_10096ABF0();

  swift_willThrow();
  swift_release_n();
  uint64_t v41 = sub_1005DF5B4;
  v40 = sub_1005DF59C;
LABEL_22:
  swift_release();
  sub_1000705CC((uint64_t)v40);
  return sub_1000705CC((uint64_t)v41);
}

uint64_t sub_1005DD7F8(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(73);
  v7._countAndFlagsBits = 0xD000000000000027;
  v7._object = (void *)0x80000001009A76A0;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001009A76D0;
  v9._countAndFlagsBits = 0xD000000000000020;
  sub_10096BDC0(v9);
  return 0;
}

void sub_1005DD8BC()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + qword_100B0B260);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_1005DF400;
    v2[3] = v0;
    aBlock[4] = sub_1001F8FDC;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A8FE60;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v1 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_1005DDA70(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(145);
  v7._countAndFlagsBits = 0x4920455441455243;
  v7._object = (void *)0xED0000205845444ELL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD000000000000042;
  v9._object = (void *)0x80000001009A7480;
  sub_10096BDC0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v4;
  v10._object = v5;
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001009A74D0;
  v11._countAndFlagsBits = 0xD00000000000003ELL;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t sub_1005DDB7C()
{
  return sub_1005D267C();
}

uint64_t sub_1005DDBA0()
{
  return sub_1005D7484();
}

uint64_t sub_1005DDBC4()
{
  return sub_1005D74DC();
}

uint64_t sub_1005DDBE8()
{
  return sub_1005D77E8();
}

uint64_t sub_1005DDC0C()
{
  return sub_1005D7CB4();
}

uint64_t sub_1005DDC30()
{
  return sub_1005D7F70();
}

void sub_1005DDC54()
{
}

uint64_t sub_1005DDC78()
{
  return sub_1005D8A64();
}

void sub_1005DDC9C()
{
}

uint64_t sub_1005DDCC0()
{
  return sub_1005D91D0();
}

uint64_t sub_1005DDCE4()
{
  return sub_1005D9A4C();
}

void sub_1005DDD08()
{
}

uint64_t sub_1005DDD2C()
{
  return sub_1005DA144();
}

void sub_1005DDD50()
{
}

void sub_1005DDD74()
{
}

void sub_1005DDD98()
{
}

uint64_t sub_1005DDDBC()
{
  return sub_1005DAD3C();
}

uint64_t sub_1005DDDE0()
{
  return sub_1005DB190();
}

uint64_t sub_1005DDE04()
{
  return sub_1005DC014();
}

uint64_t sub_1005DDE28()
{
  return sub_1005DC310();
}

uint64_t sub_1005DDE4C()
{
  return sub_1005DC580();
}

uint64_t sub_1005DDE70()
{
  return sub_1005DC72C();
}

void sub_1005DDE94()
{
}

uint64_t sub_1005DDEB8()
{
  return sub_1005DCD58();
}

uint64_t sub_1005DDEDC()
{
  return sub_1005D6880();
}

void sub_1005DDF00()
{
}

void sub_1005DDF24(uint64_t a1, void (*a2)(NSString, uint64_t), uint64_t a3)
{
  char v33 = a2;
  uint64_t v6 = sub_10096B480();
  Swift::String v7 = *(char **)(v6 - 8);
  uint64_t v35 = v6;
  unsigned __int8 v36 = v7;
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v10 = *(void **)(a1 + qword_100B0B260);
  Swift::String v11 = (void *)swift_allocObject();
  v11[2] = sub_1005E0874;
  v11[3] = a1;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A91800;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v13 = [v10 fetchSwift:v12 error:aBlock];
  _Block_release(v12);
  id v14 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12) {
    __break(1u);
  }
  if (!v13)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();
    return;
  }
  Swift::String v15 = v13;
  if (![v13 next])
  {
LABEL_19:
    swift_release();
    swift_release();

    return;
  }
  id v37 = v13;
  uint64_t v38 = v3;
  v32[1] = a1;
  v32[2] = a3;
  uint64_t v34 = (void (**)(char *, uint64_t))(v36 + 8);
  while (1)
  {
    id v18 = v15;
    NSString v19 = [v18 stringAtIndex:0];
    if (!v19)
    {
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      NSString v19 = sub_10096BC00();
      swift_bridgeObjectRelease();
    }

    if ([v18 isNullAtIndex:1]) {
      goto LABEL_13;
    }
    unsigned __int8 v36 = v17;
    id v20 = [v18 dataAtIndex:1];
    uint64_t v21 = sub_10096AF60();
    unint64_t v23 = v22;

    uint64_t v24 = v38;
    uint64_t v25 = sub_1003AB9C8(v21, v23);
    if (v24)
    {
      sub_10001E9C0(v21, v23);
      swift_errorRelease();
      uint64_t v38 = 0;
LABEL_12:
      uint64_t v17 = v36;
LABEL_13:
      id v26 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      unsigned int v27 = sub_10096B470();
      os_log_type_t v28 = sub_10096C5B0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to parse uploading error", v29, 2u);
        swift_slowDealloc();
      }

      (*v34)(v9, v35);
      goto LABEL_6;
    }
    uint64_t v30 = v25;
    uint64_t v38 = 0;
    sub_10001E9C0(v21, v23);
    if (!v30) {
      goto LABEL_12;
    }
    uint64_t v31 = v38;
    v33(v19, v30);
    uint64_t v38 = v31;
    if (v31) {
      break;
    }
    swift_errorRelease();

    uint64_t v17 = v36;
LABEL_6:
    unsigned __int8 v16 = [v18 next];
    Swift::String v15 = v37;
    if ((v16 & 1) == 0) {
      goto LABEL_19;
    }
  }
  swift_errorRelease();

  swift_release();
  swift_release();
}

uint64_t sub_1005DE3F8(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(124);
  v7._object = (void *)0x80000001009A9740;
  v7._countAndFlagsBits = 0xD00000000000002DLL;
  sub_10096BDC0(v7);
  uint64_t v3 = a2 + qword_100B0B270;
  uint64_t v4 = *(void *)(a2 + qword_100B0B270);
  id v5 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v4;
  v8._object = v5;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD00000000000004DLL;
  v9._object = (void *)0x80000001009A9770;
  sub_10096BDC0(v9);
  return 0;
}

uint64_t sub_1005DE4BC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10096CBD0(46);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + qword_100B0B280);
  Swift::String v7 = *(void **)(a2 + qword_100B0B280 + 8);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v6;
  v16._object = v7;
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x204D4F524620200ALL;
  v17._object = (void *)0xE800000000000000;
  sub_10096BDC0(v17);
  uint64_t v8 = a2 + qword_100B0B270;
  uint64_t v9 = *(void *)(a2 + qword_100B0B270);
  Swift::String v10 = *(void **)(v8 + 8);
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v9;
  v18._object = v10;
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x80000001009A97C0;
  v19._countAndFlagsBits = 0xD000000000000019;
  sub_10096BDC0(v19);
  id v11 = [a1 bindLongParameter:a3];
  uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  id v14 = v13;

  v20._countAndFlagsBits = v12;
  v20._object = v14;
  sub_10096BDC0(v20);
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

uint64_t sub_1005DE618(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(19);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(a2 + qword_100B0B280);
  uint64_t v4 = *(void **)(a2 + qword_100B0B280 + 8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v3;
  v9._object = v4;
  sub_10096BDC0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x204D4F524620200ALL;
  v10._object = (void *)0xE800000000000000;
  sub_10096BDC0(v10);
  uint64_t v5 = a2 + qword_100B0B270;
  uint64_t v6 = *(void *)(a2 + qword_100B0B270);
  Swift::String v7 = *(void **)(v5 + 8);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v6;
  v11._object = v7;
  sub_10096BDC0(v11);
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

void *sub_1005DE6FC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = a1;
  Swift::String v7 = (void *)swift_allocObject();
  v7[2] = sub_1005DFF14;
  v7[3] = v6;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A917B0;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v9 = [a2 fetchSwift:v8 error:aBlock];
  _Block_release(v8);
  id v10 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v9)
  {
    if ([v9 next])
    {
      Swift::String v7 = (void *)sub_100618348(v9, 0);
      swift_release();
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return v7;
}

uint64_t sub_1005DE930(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), void *, uint64_t);
  uint64_t v11;
  void v12[4];
  uint64_t v13;

  uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v1 + qword_100B0B268);
  if (v5)
  {
    id v6 = v5;
    Swift::String v7 = sub_1005DE6FC(a1, v6);
    if (!v2)
    {
      id v9 = v7;

      return (uint64_t)v9;
    }
    swift_errorRelease();

    uint64_t v3 = 0;
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    v12[2] = v1;
    v12[3] = a1;
    id v10 = *(void (**)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), void *, uint64_t))(*(void *)__chkstk_darwin(result) + 432);
    Swift::String v11 = sub_10002B7CC(&qword_100AD6398);
    v10(&v13, 0, "lookup(byFileID:)", 17, 2, sub_1005DFED0, v12, v11);
    swift_release();
    if (!v3) {
      return v13;
    }
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void *sub_1005DEAAC(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = a1;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1005DFE88;
  v8[3] = v7;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A91738;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v10 = [a2 fetchSwift:v9 error:aBlock];
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    if ([v10 next])
    {
      id v13 = v10;
      unint64_t v14 = sub_100618348(v13, 0);
      if (v3)
      {
        swift_release();
      }
      else
      {
        uint64_t v8 = (void *)v14;

        id v15 = [v13 stringAtIndex:1];
        _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        swift_release();
      }
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return v8;
}

uint64_t sub_1005DED3C(void *a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5, void *a6)
{
  sub_10096CBD0(a4);
  v18._countAndFlagsBits = a5;
  v18._object = a6;
  sub_10096BDC0(v18);
  uint64_t v10 = *(void *)(a2 + qword_100B0B270);
  id v11 = *(void **)(a2 + qword_100B0B270 + 8);
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v10;
  v19._object = v11;
  sub_10096BDC0(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0x44455845444E4920;
  v20._object = (void *)0xEC00000020594220;
  sub_10096BDC0(v20);
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = v10;
  v21._object = v11;
  sub_10096BDC0(v21);
  swift_bridgeObjectRelease();
  v22._object = (void *)0x80000001009A95E0;
  v22._countAndFlagsBits = 0xD000000000000024;
  sub_10096BDC0(v22);
  Class isa = sub_10096D540().super.super.isa;
  id v13 = [a1 bindObjectParameter:isa];

  uint64_t v14 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  Swift::String v16 = v15;

  v23._countAndFlagsBits = v14;
  v23._object = v16;
  sub_10096BDC0(v23);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1005DEEA4(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(void *@<X8>), void *, uint64_t);
  uint64_t v11;
  void v12[4];
  uint64_t v13;

  uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v1 + qword_100B0B268);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1005DEAAC(a1, v6);
    if (!v2)
    {
      id v9 = v7;

      return (uint64_t)v9;
    }
    swift_errorRelease();

    uint64_t v3 = 0;
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    v12[2] = v1;
    v12[3] = a1;
    uint64_t v10 = *(void (**)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(void *@<X8>), void *, uint64_t))(*(void *)__chkstk_darwin(result) + 432);
    id v11 = sub_10002B7CC(&qword_100AD82D0);
    v10(&v13, 0, "lookupLink(byFileID:)", 21, 2, sub_1005DFE0C, v12, v11);
    swift_release();
    if (!v3) {
      return v13;
    }
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005DF030(uint64_t a1)
{
  return sub_1005DE930(a1);
}

uint64_t sub_1005DF048(uint64_t a1)
{
  uint64_t result = sub_1005DEEA4(a1);
  if (v1) {
    return v3;
  }
  return result;
}

id sub_1005DF074(void *a1, void *a2)
{
  Swift::String v21 = a2;
  uint64_t v22 = sub_10096B480();
  uint64_t v3 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = _s9libfssync12FileItemKindO8rawValueACSgSi_tcfC_0((unint64_t)[a1 integerAtIndex:0]);
  unsigned int v7 = [a1 BOOLAtIndex:2];
  id result = [a1 unsignedLongAtIndex:3];
  if (v6 == 4)
  {
LABEL_2:
    id v9 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    uint64_t v10 = sub_10096B470();
    os_log_type_t v11 = sub_10096C5B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v24 = v13;
      uint64_t v14 = 0x6B6E696C6D7973;
      if (v6 == 3) {
        uint64_t v14 = 0x7361696C61;
      }
      unint64_t v15 = 0xE700000000000000;
      if (v6 == 3) {
        unint64_t v15 = 0xE500000000000000;
      }
      if (v6 == 4) {
        uint64_t v16 = 7104878;
      }
      else {
        uint64_t v16 = v14;
      }
      if (v6 == 4) {
        unint64_t v17 = 0xE300000000000000;
      }
      else {
        unint64_t v17 = v15;
      }
      uint64_t v23 = sub_100719D44(v16, v17, &v24);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Invalid object: %s cannot be dataless", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {
    id v18 = result;
    if (v7)
    {
      switch(v6)
      {
        case 1:
          v21[5] = result;
          break;
        case 2:
          goto LABEL_2;
        case 3:
          goto LABEL_23;
        default:
          goto LABEL_20;
      }
    }
    else
    {
      switch(v6)
      {
        case 1:
          v21[4] = result;
          break;
        case 2:
          v21[7] = result;
          break;
        case 3:
LABEL_23:
          v21[6] = result;
          break;
        default:
LABEL_20:
          unsigned int v19 = objc_msgSend(a1, "BOOLAtIndex:", 1, v21);
          id result = [a1 unsignedLongAtIndex:4];
          if (v7)
          {
            if (v19) {
              v21[3] = v18;
            }
            else {
              v21[1] = v18;
            }
          }
          else
          {
            Swift::String v20 = v21;
            if (v19)
            {
              v21[2] = v18;
              v20[9] = result;
            }
            else
            {
              *Swift::String v21 = v18;
              v20[8] = result;
            }
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1005DF400(uint64_t a1)
{
  return sub_1005DDA70(a1, v1);
}

uint64_t sub_1005DF408()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF418(uint64_t a1)
{
  return sub_1005D7040(a1, v1);
}

uint64_t sub_1005DF420()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF430(uint64_t a1)
{
  return sub_1005D7140(a1, v1);
}

uint64_t sub_1005DF438()
{
  return swift_deallocObject();
}

unint64_t sub_1005DF448(uint64_t a1)
{
  return sub_1005D73C8(a1, v1, 42, 0x22747265736E692FLL, (void *)0xE800000000000000);
}

uint64_t sub_1005DF47C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF48C(uint64_t a1)
{
  return sub_1005D7240(a1, v1);
}

uint64_t sub_1005DF494()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF4A4(uint64_t a1)
{
  return sub_1005D7304(a1, v1);
}

uint64_t sub_1005DF4AC()
{
  return swift_deallocObject();
}

unint64_t sub_1005DF4BC(uint64_t a1)
{
  return sub_1005D73C8(a1, v1, 48, 0x755F6E69706E752FLL, (void *)0xEE00226574616470);
}

uint64_t sub_1005DF4FC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF50C(uint64_t a1)
{
  return sub_1005DBE88(a1, v1);
}

uint64_t sub_1005DF514()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF524(uint64_t a1)
{
  return sub_1005DBF4C(a1, v1);
}

uint64_t sub_1005DF52C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF53C(uint64_t a1)
{
  return sub_1005DBCFC(a1, v1);
}

uint64_t sub_1005DF544()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF554(uint64_t a1)
{
  return sub_1005DBDC0(a1, v1);
}

uint64_t sub_1005DF55C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF56C(uint64_t a1)
{
  return sub_1005DBAB0(a1, v1);
}

uint64_t sub_1005DF574()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF584(uint64_t a1)
{
  return sub_1005DBB74(a1, v1);
}

uint64_t sub_1005DF58C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF59C(uint64_t a1)
{
  return sub_1005DBC38(a1, v1);
}

uint64_t sub_1005DF5A4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF5B4(uint64_t a1)
{
  return sub_1005DD7F8(a1, v1);
}

uint64_t sub_1005DF5BC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF5CC(uint64_t a1)
{
  return sub_1005DCC4C(a1, v1);
}

uint64_t sub_1005DF5D4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF5E4(uint64_t a1)
{
  return sub_1005DC988(a1, v1);
}

uint64_t sub_1005DF5EC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF5FC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF60C(uint64_t a1)
{
  return sub_1005DC4BC(a1, v1);
}

uint64_t sub_1005DF614()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF624()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF634()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF644()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF654()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF664()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF674()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF684()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF694()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF6A4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF6B4(uint64_t a1)
{
  return sub_1005DB0CC(a1, v1);
}

uint64_t sub_1005DF6BC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF6CC(uint64_t a1)
{
  return sub_1005DB008(a1, v1);
}

uint64_t sub_1005DF6D4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF6E4(uint64_t a1)
{
  return sub_1005DAC78(a1, v1);
}

uint64_t sub_1005DF6EC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF6FC(uint64_t a1)
{
  return sub_1005DA9FC(a1, v1);
}

uint64_t sub_1005DF704()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF714(uint64_t a1)
{
  return sub_1005DA780(a1, v1);
}

uint64_t sub_1005DF71C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF72C(uint64_t a1)
{
  return sub_1005DA440(a1, v1);
}

uint64_t sub_1005DF734()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF744(uint64_t a1)
{
  return sub_1005DA504(a1, v1);
}

uint64_t sub_1005DF74C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF75C(uint64_t a1)
{
  return sub_1005D9EA0(a1, v1);
}

uint64_t sub_1005DF764()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF774(uint64_t a1)
{
  return sub_1005D9C24(a1, v1);
}

uint64_t sub_1005DF77C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF78C(uint64_t a1)
{
  return sub_1005D97BC(a1, v1);
}

uint64_t sub_1005DF794()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF7A4(uint64_t a1)
{
  return sub_1005D9880(a1, v1);
}

uint64_t sub_1005DF7AC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF7BC(uint64_t a1)
{
  return sub_1005D9944(a1, v1, 96, 0xD000000000000050, (void *)0x80000001009A8390);
}

uint64_t sub_1005DF7F8()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF808(uint64_t a1)
{
  return sub_1005D9944(a1, v1, 97, 0xD000000000000051, (void *)0x80000001009A8330);
}

uint64_t sub_1005DF844()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF854()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DF85C(uint64_t a1)
{
  return sub_1005DFD30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005D43F4);
}

uint64_t sub_1005DF874()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF884()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DF88C(uint64_t a1)
{
  return sub_1005D4614(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005DF898()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF8A8()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DF8B0(uint64_t a1)
{
  return sub_1005D4898(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005DF8BC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF8CC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005DF914(uint64_t a1)
{
  return sub_1005D4A88(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(uint64_t (**)(uint64_t, unint64_t))(v1 + 48));
}

uint64_t sub_1005DF924()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF934()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DF93C(uint64_t a1)
{
  return sub_1005D4E78(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005DF948()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF958()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DF960(uint64_t a1)
{
  return sub_1005D5180(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005DF96C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF97C(uint64_t a1)
{
  return sub_1005D669C(a1, v1);
}

uint64_t sub_1005DF984()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF994(uint64_t a1)
{
  return sub_1005D6760(a1, v1);
}

uint64_t sub_1005DF99C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF9AC()
{
  return sub_1005DFB60();
}

unint64_t sub_1005DF9B4(uint64_t a1)
{
  return sub_1005D6158(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 37, 0x22747265736E692FLL, (void *)0xE800000000000000);
}

uint64_t sub_1005DF9EC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF9FC()
{
  return sub_1005DFB60();
}

unint64_t sub_1005DFA04(uint64_t a1)
{
  return sub_1005D6158(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 44, 0x5F747265736E692FLL, (void *)0xEF22746E65726170);
}

uint64_t sub_1005DFA48()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFA58()
{
  return sub_1005DFB60();
}

unint64_t sub_1005DFA60(uint64_t a1)
{
  return sub_1005D6158(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 37, 0x226574656C65642FLL, (void *)0xE800000000000000);
}

uint64_t sub_1005DFA98()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFAA8()
{
  return sub_1005DFB60();
}

unint64_t sub_1005DFAB0(uint64_t a1)
{
  return sub_1005D6158(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 43, 0x755F6C61636F6C2FLL, (void *)0xEE00226574616470);
}

uint64_t sub_1005DFAF4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFB04()
{
  return sub_1005DFB60();
}

unint64_t sub_1005DFB0C(uint64_t a1)
{
  return sub_1005D6158(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 47, 0xD000000000000012, (void *)0x80000001009A7740);
}

uint64_t sub_1005DFB48()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFB58()
{
  return sub_1005DFB60();
}

uint64_t sub_1005DFB60()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005DFBAC(uint64_t a1)
{
  return sub_1005D623C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005DFBB8()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFBC8(uint64_t a1)
{
  return sub_1005D8FF8(a1, v1);
}

uint64_t sub_1005DFBD0()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFBE0(uint64_t a1)
{
  return sub_1005D90BC(a1, v1);
}

uint64_t sub_1005DFBE8()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFBF8(uint64_t a1)
{
  return sub_1005D8C10(a1, v1);
}

uint64_t sub_1005DFC00()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC10(uint64_t a1)
{
  return sub_1005D861C(a1, v1);
}

uint64_t sub_1005DFC18()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC28(uint64_t a1)
{
  return sub_1005D86E0(a1, v1);
}

uint64_t sub_1005DFC30()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC40(uint64_t a1)
{
  return sub_1005D8878(a1, v1);
}

uint64_t sub_1005DFC48()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC58(uint64_t a1)
{
  return sub_1005D811C(a1, v1);
}

uint64_t sub_1005DFC60()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC70(uint64_t a1)
{
  return sub_1005D7E60(a1, v1);
}

uint64_t sub_1005DFC78()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFC88(uint64_t a1)
{
  return sub_1005D7AE4(a1, v1);
}

uint64_t sub_1005DFC90()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFCA0(uint64_t a1)
{
  return sub_1005D7BA8(a1, v1);
}

uint64_t sub_1005DFCA8()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFCB8(uint64_t a1)
{
  return sub_1005D76DC(a1, v1);
}

uint64_t sub_1005DFCC0()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFCD0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005DFD18(uint64_t a1)
{
  return sub_1005DFD30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005D326C);
}

uint64_t sub_1005DFD30(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1005DFD48()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFD58(uint64_t a1)
{
  return sub_1005D3734(a1, v1);
}

uint64_t sub_1005DFD60()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFD70()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005DFDA8(uint64_t a1)
{
  return sub_1005D383C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1005DFDB4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFDC4(uint64_t a1)
{
  return sub_1005D39A4(a1, v1);
}

uint64_t sub_1005DFDCC()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFDDC(uint64_t a1)
{
  return sub_1005D351C(a1, v1);
}

uint64_t sub_1005DFDE4()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFDF4(uint64_t a1)
{
  return sub_1005D3624(a1, v1);
}

uint64_t sub_1005DFDFC()
{
  return swift_deallocObject();
}

void *sub_1005DFE0C@<X0>(void *a1@<X8>)
{
  id result = sub_1005DEAAC(*(void *)(v1 + 24), *(void **)(*(void *)(v1 + 16) + qword_100B0B260));
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_1005DFE50()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005DFE88(void *a1)
{
  return sub_1005DED3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 88, 0xD000000000000022, (void *)0x80000001009A95B0);
}

uint64_t sub_1005DFEC0()
{
  return swift_deallocObject();
}

void *sub_1005DFED0@<X0>(uint64_t a1@<X8>)
{
  id result = sub_1005DE6FC(*(void *)(v1 + 24), *(void **)(*(void *)(v1 + 16) + qword_100B0B260));
  if (!v2)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v5;
  }
  return result;
}

uint64_t sub_1005DFF14(void *a1)
{
  return sub_1005DED3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 71, 0xD000000000000011, (void *)0x8000000100999290);
}

uint64_t sub_1005DFF4C()
{
  return swift_deallocObject();
}

uint64_t sub_1005DFF5C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  sub_10096CBD0(323);
  v13._object = (void *)0x80000001009AC9D0;
  v13._countAndFlagsBits = 0xD000000000000016;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = a5;
  v14._object = a6;
  sub_10096BDC0(v14);
  v15._countAndFlagsBits = 0xD00000000000001CLL;
  v15._object = (void *)0x80000001009AC9F0;
  sub_10096BDC0(v15);
  v16._countAndFlagsBits = a5;
  v16._object = a6;
  sub_10096BDC0(v16);
  v17._countAndFlagsBits = 0xD000000000000014;
  v17._object = (void *)0x80000001009AAED0;
  sub_10096BDC0(v17);
  v18._countAndFlagsBits = a3;
  v18._object = a4;
  sub_10096BDC0(v18);
  v19._countAndFlagsBits = 0x5F63657220534120;
  v19._object = (void *)0xED00005F70616E73;
  sub_10096BDC0(v19);
  v20._countAndFlagsBits = a5;
  v20._object = a6;
  sub_10096BDC0(v20);
  v21._countAndFlagsBits = 0xD000000000000013;
  v21._object = (void *)0x80000001009ACA10;
  sub_10096BDC0(v21);
  v22._countAndFlagsBits = a5;
  v22._object = a6;
  sub_10096BDC0(v22);
  v23._countAndFlagsBits = 0x203D2064692ELL;
  v23._object = (void *)0xE600000000000000;
  sub_10096BDC0(v23);
  v24._countAndFlagsBits = a1;
  v24._object = a2;
  sub_10096BDC0(v24);
  v25._countAndFlagsBits = 0xD00000000000001ELL;
  v25._object = (void *)0x80000001009ACA30;
  sub_10096BDC0(v25);
  v26._countAndFlagsBits = a5;
  v26._object = a6;
  sub_10096BDC0(v26);
  v27._countAndFlagsBits = 0xD00000000000001BLL;
  v27._object = (void *)0x80000001009ACA50;
  sub_10096BDC0(v27);
  v28._countAndFlagsBits = a5;
  v28._object = a6;
  sub_10096BDC0(v28);
  v29._countAndFlagsBits = 0x454E4E492020200ALL;
  v29._object = (void *)0xEF204E494F4A2052;
  sub_10096BDC0(v29);
  v30._countAndFlagsBits = a3;
  v30._object = a4;
  sub_10096BDC0(v30);
  v31._countAndFlagsBits = 0x5F63657220534120;
  v31._object = (void *)0xED00005F70616E73;
  sub_10096BDC0(v31);
  v32._countAndFlagsBits = a5;
  v32._object = a6;
  sub_10096BDC0(v32);
  v33._countAndFlagsBits = 0x5F636572204E4F20;
  v33._object = (void *)0xED00005F70616E73;
  sub_10096BDC0(v33);
  v34._countAndFlagsBits = a5;
  v34._object = a6;
  sub_10096BDC0(v34);
  v35._countAndFlagsBits = 0x6170203D2064692ELL;
  v35._object = (void *)0xED00005F746E6572;
  sub_10096BDC0(v35);
  v36._countAndFlagsBits = a5;
  v36._object = a6;
  sub_10096BDC0(v36);
  v37._object = (void *)0x80000001009ACA70;
  v37._countAndFlagsBits = 0xD000000000000016;
  sub_10096BDC0(v37);
  v38._countAndFlagsBits = a5;
  v38._object = a6;
  sub_10096BDC0(v38);
  v39._countAndFlagsBits = 0xD000000000000017;
  v39._object = (void *)0x80000001009ACA90;
  sub_10096BDC0(v39);
  v40._countAndFlagsBits = a5;
  v40._object = a6;
  sub_10096BDC0(v40);
  v41._countAndFlagsBits = 0xD00000000000001DLL;
  v41._object = (void *)0x80000001009ACAB0;
  sub_10096BDC0(v41);
  v42._countAndFlagsBits = a5;
  v42._object = a6;
  sub_10096BDC0(v42);
  return 0;
}

uint64_t sub_1005E02AC(uint64_t a1, void *a2)
{
  sub_10096CBD0(155);
  v5._countAndFlagsBits = 0x204553414328;
  v5._object = (void *)0xE600000000000000;
  sub_10096BDC0(v5);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  sub_10096BDC0(v6);
  v7._object = (void *)0x80000001009A9710;
  v7._countAndFlagsBits = 0xD00000000000002BLL;
  sub_10096BDC0(v7);
  v8._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x20200A4E45485420;
  v9._object = (void *)0xEA00000000002020;
  sub_10096BDC0(v9);
  v10._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x204E45485720200ALL;
  v11._object = (void *)0xE800000000000000;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x20200A4E45485420;
  v13._object = (void *)0xEA00000000002020;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x204E45485720200ALL;
  v15._object = (void *)0xE800000000000000;
  sub_10096BDC0(v15);
  v16._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x20200A4E45485420;
  v17._object = (void *)0xEA00000000002020;
  sub_10096BDC0(v17);
  v18._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 0x204E45485720200ALL;
  v19._object = (void *)0xE800000000000000;
  sub_10096BDC0(v19);
  v20._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x20200A4E45485420;
  v21._object = (void *)0xEE00202020202020;
  sub_10096BDC0(v21);
  v22._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0xA45534C4520200ALL;
  v23._object = (void *)0xEC00000020202020;
  sub_10096BDC0(v23);
  v24._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 0x29444E45200ALL;
  v25._object = (void *)0xE600000000000000;
  sub_10096BDC0(v25);
  return 0;
}

uint64_t sub_1005E05F4(uint64_t a1, void *a2)
{
  sub_10096CBD0(189);
  v5._countAndFlagsBits = 0x204553414328;
  v5._object = (void *)0xE600000000000000;
  sub_10096BDC0(v5);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  sub_10096BDC0(v6);
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  v7._object = (void *)0x80000001009A9670;
  sub_10096BDC0(v7);
  v8._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x204E4548540ALL;
  v9._object = (void *)0xE600000000000000;
  sub_10096BDC0(v9);
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  sub_10096BDC0(v10);
  v11._object = (void *)0x80000001009A9690;
  v11._countAndFlagsBits = 0xD000000000000029;
  sub_10096BDC0(v11);
  v12._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x204E4548540ALL;
  v13._object = (void *)0xE600000000000000;
  sub_10096BDC0(v13);
  v14._countAndFlagsBits = sub_1005E02AC(a1, a2);
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x204E4548570ALL;
  v15._object = (void *)0xE600000000000000;
  sub_10096BDC0(v15);
  v16._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x204E4548540ALL;
  v17._object = (void *)0xE600000000000000;
  sub_10096BDC0(v17);
  v18._countAndFlagsBits = a1;
  v18._object = a2;
  sub_10096BDC0(v18);
  v19._object = (void *)0x80000001009A96C0;
  v19._countAndFlagsBits = 0xD000000000000029;
  sub_10096BDC0(v19);
  v20._countAndFlagsBits = a1;
  v20._object = a2;
  sub_10096BDC0(v20);
  v21._countAndFlagsBits = 0xD00000000000001ELL;
  v21._object = (void *)0x80000001009A96F0;
  sub_10096BDC0(v21);
  return 0;
}

uint64_t sub_1005E0874(uint64_t a1)
{
  return sub_1005DE3F8(a1, v1);
}

uint64_t sub_1005E087C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E088C(uint64_t a1, void *a2)
{
  sub_10002B7CC(&qword_100AD0EB8);
  inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_10097C0C0;
  inited[2] = xmmword_1009861B0;
  inited[3] = xmmword_1009861C0;
  uint64_t v5 = sub_100353128(a1, a2, (uint64_t)inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_1005E0950(uint64_t a1, void *a2)
{
  sub_10002B7CC(&qword_100AD0EB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BA0;
  *(_OWORD *)(inited + 32) = xmmword_10097D7A0;
  uint64_t v5 = sub_100353128(a1, a2, inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_1005E0A08(unint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || a1 >= 4 && a1 - 500 > 2)
  {
    Swift::String v7 = &type metadata for Int;
    v6[0] = 0;
  }
  else
  {
    Swift::String v7 = &type metadata for Int;
    v6[0] = a1;
  }
  uint64_t v2 = sub_1003AC444((uint64_t)v6);
  uint64_t v4 = v3;
  sub_10002B770((uint64_t)v6, (uint64_t *)&unk_100ACE0F0);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_1005E0AE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10002B7CC(&qword_100AD0EB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = a7;
  uint64_t v11 = sub_100353128(a1, a2, inited);
  swift_setDeallocating();
  return v11;
}

void sub_1005E0B9C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(char *, void, id), uint64_t a6)
{
  uint64_t v34 = a6;
  id v37 = a4;
  Swift::String v38 = a5;
  uint64_t v10 = sub_10002B7CC(&qword_100ACCB10);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v13 = *(void **)(a2 + qword_100B0B260);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a1;
  Swift::String v15 = (void *)swift_allocObject();
  v15[2] = sub_1005E1354;
  v15[3] = v14;
  uint64_t v36 = v14;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A918C8;
  Swift::String v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v17 = [v13 fetchSwift:v16 error:aBlock];
  _Block_release(v16);
  id v18 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16) {
    __break(1u);
  }
  if (v17)
  {
    unsigned __int8 v19 = [v17 next];
    id v20 = v37;
    if (v19)
    {
      Swift::String v21 = a3 + 4;
      swift_beginAccess();
      Swift::String v33 = a3 + 3;
      swift_beginAccess();
      Swift::String v35 = a3 + 5;
      swift_beginAccess();
      while (1)
      {
        uint64_t v23 = sub_1003FE014();
        sub_100550BB0(v23, v17, 0, (uint64_t)v12);
        if (v6) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = *((void *)v12 + 4);
        if (sub_1004AE748(v24, *v21) & 1) != 0 || (sub_1004AE748(v24, *v35))
        {
          char v25 = 1;
        }
        else
        {
          uint64_t v26 = *v33;
          if (*(void *)(*v33 + 16))
          {
            id v27 = v20;
            swift_bridgeObjectRetain();
            uint64_t v28 = sub_10031F918(v27);
            if (v29)
            {
              uint64_t v30 = *(void *)(v26 + 56);
              Swift::String v32 = a3;
              Swift::String v31 = *(void **)(v30 + 8 * v28);
              swift_retain();

              swift_bridgeObjectRelease();
              char v25 = sub_10063FE58((uint64_t)v12, v31);
              a3 = v32;
              swift_release();
            }
            else
            {

              swift_bridgeObjectRelease();
              char v25 = 0;
            }
            id v20 = v37;
          }
          else
          {
            char v25 = 0;
          }
        }
        v38(v12, v25 & 1, v20);
        sub_10002B770((uint64_t)v12, &qword_100ACCB10);
        if (([v17 next] & 1) == 0) {
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
    }
    else
    {
LABEL_17:
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();
  }
}

void sub_1005E0FF4(uint64_t a1, void (*a2)(char *, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v24 = a5;
  uint64_t v8 = sub_10002B7CC(&qword_100ACCB10);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + qword_100B0B260);
  Swift::String v12 = (void *)swift_allocObject();
  v12[2] = sub_1005E133C;
  v12[3] = a1;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A91850;
  Swift::String v13 = _Block_copy(aBlock);
  uint64_t v22 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v14 = [v11 fetchSwift:v13 error:aBlock];
  _Block_release(v13);
  id v15 = aBlock[0];
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (a1) {
    __break(1u);
  }
  if (!v14)
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
    swift_release();
    goto LABEL_9;
  }
  uint64_t v21 = a4;
  if (([v14 next] & 1) == 0)
  {
LABEL_7:
    swift_release();
    swift_release();

LABEL_9:
    swift_release();
    return;
  }
  Swift::String v16 = (void *)(v21 + 32);
  swift_beginAccess();
  while (1)
  {
    uint64_t v18 = sub_1003FE014();
    sub_100550BB0(v18, v14, 0, (uint64_t)v10);
    if (v5) {
      break;
    }
    swift_bridgeObjectRelease();
    char v19 = sub_1004AE748(*((void *)v10 + 4), *v16);
    v23(v10, v19 & 1, v24);
    sub_10002B770((uint64_t)v10, &qword_100ACCB10);
    if (([v14 next] & 1) == 0) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1005E133C(uint64_t a1)
{
  return sub_1005DE618(a1, v1);
}

uint64_t sub_1005E1344()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1354(void *a1)
{
  return sub_1005DE4BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005E135C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E136C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E13A4(void *a1)
{
  return sub_1005D20D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005E13B0()
{
  return swift_deallocObject();
}

uint64_t sub_1005E13C0(void *a1)
{
  return sub_1005D17CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005E13CC()
{
  return swift_deallocObject();
}

uint64_t sub_1005E13DC()
{
  uint64_t v1 = sub_10096B0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1005E14B4(void *a1)
{
  uint64_t v3 = *(void *)(sub_10096B0E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005D0BA8(a1, v5, v1 + v4, v6);
}

uint64_t sub_1005E1554()
{
  return swift_deallocObject();
}

unint64_t sub_1005E1564(uint64_t a1)
{
  return sub_1005D0454(a1, v1);
}

uint64_t sub_1005E156C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E157C(void *a1)
{
  return sub_1005CFEA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005E1588()
{
  return swift_deallocObject();
}

uint64_t sub_1005E159C(uint64_t a1)
{
  return sub_1005E1728(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1005CF488);
}

uint64_t sub_1005E15B4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E15C8(uint64_t a1)
{
  return sub_1005E1728(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1005CDE68);
}

uint64_t sub_1005E15E0()
{
  return swift_deallocObject();
}

uint64_t sub_1005E15F4(uint64_t a1)
{
  return sub_1005E1728(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1005CE27C);
}

uint64_t sub_1005E160C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1620()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E1710(uint64_t a1)
{
  return sub_1005E1728(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1005CE6A4);
}

uint64_t sub_1005E1728(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v6, v7, v2 + v5, v8);
}

uint64_t sub_1005E17F4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1808(uint64_t a1)
{
  return sub_1005E1E48(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005CCBA0);
}

uint64_t sub_1005E1820()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1834(uint64_t a1)
{
  return sub_1005E38E8(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1005CBF80);
}

uint64_t sub_1005E184C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E185C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1005E19E4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v1 + 48);

  return sub_1005CB488(a1, v3);
}

uint64_t sub_1005E1AFC()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1B0C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4 + 2) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, AssociatedTypeWitness);
  v7(v0 + v5, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E1C1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + v5);
  char v8 = *(unsigned char *)(v1 + v5 + 1);

  return sub_1005CA6E8(a1, v6, v1 + v4, v7, v8);
}

uint64_t sub_1005E1CE4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1CF8(uint64_t a1)
{
  return sub_1005E1E48(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005C9998);
}

uint64_t sub_1005E1D10()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1D24()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  char v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, AssociatedTypeWitness);
  v7(v0 + v5, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E1E30(uint64_t a1)
{
  return sub_1005E1E48(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005C8F5C);
}

uint64_t sub_1005E1E48(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 56) & ~v5;
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = v2 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);

  return a2(a1, v7, v2 + v6, v8);
}

uint64_t sub_1005E1F14()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1F28(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005C749C);
}

uint64_t sub_1005E1F40()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1F50()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E1F88(void *a1)
{
  return sub_1005C6BA0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005E1F94()
{
  return swift_deallocObject();
}

uint64_t sub_1005E1FA4()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v19 + 56) & ~v19);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v4(v2, AssociatedTypeWitness);
  v4(v2 + v1[9], AssociatedTypeWitness);
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v5 + *(int *)(v7 + 56), v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[12];
  uint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  Swift::String v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_10001E9C0(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v2 + v1[13];
  if (*(void *)(v17 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000CF144(*(void *)(v2 + v1[17]), *(void *)(v2 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_1005E23F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(uint64_t **)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_1005C5CE8(a1, v5, v6, v8, v9);
}

uint64_t sub_1005E24A8()
{
  return swift_deallocObject();
}

uint64_t sub_1005E24BC(uint64_t a1)
{
  return sub_1005E2948(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005C09EC);
}

uint64_t sub_1005E24D4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E24E8()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v19 + 56) & ~v19);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v4(v2, AssociatedTypeWitness);
  v4(v2 + v1[9], AssociatedTypeWitness);
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v5 + *(int *)(v7 + 56), v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[12];
  char v9 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v11 - 8);
  Swift::String v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_10001E9C0(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v2 + v1[13];
  if (*(void *)(v17 + 16) != 1)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000CF144(*(void *)(v2 + v1[17]), *(void *)(v2 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_1005E2930(uint64_t a1)
{
  return sub_1005E2948(a1, sub_1005C0748);
}

uint64_t sub_1005E2948(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_1005E29D8()
{
  return swift_deallocObject();
}

void (**sub_1005E29E8(void (**result)(char *, uint64_t), char a2))(char *, uint64_t)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (a2 != 1 || (uint64_t result = (void (**)(char *, uint64_t))sub_1005BE5FC(result), !v3))
  {
    if (__OFADD__(*v4, 1)) {
      __break(1u);
    }
    else {
      ++*v4;
    }
  }
  return result;
}

uint64_t sub_1005E2A38(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005BDECC);
}

uint64_t sub_1005E2A50(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_1005E2AF0()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2B04(uint64_t a1)
{
  return sub_1005E2B3C(a1, 29, 0x46204554454C4544, 0xEC000000204D4F52, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005BD9F4);
}

uint64_t sub_1005E2B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return a5(a1, *(void *)(v5 + 48), v5 + ((*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, a3, a4);
}

uint64_t sub_1005E2BEC()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2C00(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005BB48C);
}

uint64_t sub_1005E2C18()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2C2C(uint64_t a1)
{
  return sub_1005E38E8(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1005BA668);
}

uint64_t sub_1005E2C44()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2C58(uint64_t a1)
{
  return sub_1005E38E8(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1005B9A28);
}

uint64_t sub_1005E2C70()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2C84(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B905C);
}

uint64_t sub_1005E2C9C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2CB0(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B85CC);
}

uint64_t sub_1005E2CC8()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2CDC(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B7B7C);
}

uint64_t sub_1005E2CF4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2D08(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B782C);
}

uint64_t sub_1005E2D20()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2D34(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B6AD0);
}

uint64_t sub_1005E2D4C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2D60(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B5E30);
}

uint64_t sub_1005E2D78()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2D8C(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B5370);
}

uint64_t sub_1005E2DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2DB4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E2E98(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);

  return sub_1005B4688(a1, v3, v4);
}

uint64_t sub_1005E2F28()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2F3C(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B3CC4);
}

uint64_t sub_1005E2F54()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2F68(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B3A34);
}

uint64_t sub_1005E2F80()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2F90(void *a1)
{
  return sub_1005B2E48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1005E2FA0()
{
  return swift_deallocObject();
}

uint64_t sub_1005E2FB0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E30A0(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((v4 + *(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_1005B2314(a1, v5, v6, v8, v9);
}

uint64_t sub_1005E316C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E317C(void *a1)
{
  return sub_1005E319C(a1, 117, 0xD000000000000041, (void *)0x80000001009AC460);
}

uint64_t sub_1005E319C(void *a1, Swift::Int a2, uint64_t a3, void *a4)
{
  return sub_1005B17A8(a1, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

uint64_t sub_1005E31CC()
{
  return swift_deallocObject();
}

uint64_t sub_1005E31DC(void *a1)
{
  return sub_1005E319C(a1, 118, 0xD000000000000042, (void *)0x80000001009AC4E0);
}

uint64_t sub_1005E31FC()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3210(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005AFD54);
}

uint64_t sub_1005E3228()
{
  return swift_deallocObject();
}

uint64_t sub_1005E323C(uint64_t a1)
{
  return sub_1005E2B3C(a1, 41, 0xD000000000000018, 0x80000001009AC590, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005BD9F4);
}

uint64_t sub_1005E3270()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3284(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005AE5C4);
}

uint64_t sub_1005E329C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E32AC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E3398(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void **)(v1 + 56);

  return sub_1005AE7B4(a1, v3, v4);
}

uint64_t sub_1005E3424()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3438(uint64_t a1)
{
  return sub_1005E3444(a1, &qword_100B0B288);
}

uint64_t sub_1005E3444(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return sub_1005AD36C(a1, *(void *)(v2 + 48), v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1005E34D4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E34E4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_10096C890() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v6, 1, AssociatedTypeWitness))v7(v0 + v6, AssociatedTypeWitness); {

  }
  return swift_deallocObject();
}

uint64_t sub_1005E3694(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_10096C890() - 8);
  uint64_t v7 = *(void **)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + v5);
  unint64_t v9 = *(void *)(v1 + v5 + 8);
  int v10 = *(unsigned __int8 *)(v1 + v5 + 16);
  uint64_t v11 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1005AC5AC(a1, v7, v1 + v4, v8, v9, v10, v11);
}

uint64_t sub_1005E37A4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E37B4@<X0>(void *a1@<X8>)
{
  return sub_1005AC95C(*(void *)(v1 + 48), a1);
}

uint64_t sub_1005E37E0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E38D0(uint64_t a1)
{
  return sub_1005E38E8(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1005AB908);
}

uint64_t sub_1005E38E8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v6, v2 + v5, v7);
}

uint64_t sub_1005E39B4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E39C8(uint64_t a1)
{
  return sub_1005E3444(a1, &qword_100B0B280);
}

uint64_t sub_1005E39D4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E39E8(uint64_t a1)
{
  return sub_1005E2B3C(a1, 60, 0xD00000000000002BLL, 0x80000001009AC790, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005AA12C);
}

uint64_t sub_1005E3A1C()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3A2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005E3A90(uint64_t a1)
{
  return sub_1005E2B3C(a1, 48, 0xD00000000000001FLL, 0x80000001009AC7E0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005BD9F4);
}

uint64_t sub_1005E3AC4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3AD8(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005A8290);
}

uint64_t sub_1005E3AF0()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3B04(uint64_t a1)
{
  return sub_1005E2B3C(a1, 67, 0xD000000000000032, 0x80000001009AC860, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005AA12C);
}

uint64_t sub_1005E3B38()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3B4C(uint64_t a1)
{
  return sub_1005E2B3C(a1, 101, 0xD000000000000054, 0x80000001009AC8D0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005AA12C);
}

uint64_t sub_1005E3B80()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3B94(uint64_t a1)
{
  return sub_1005E2B3C(a1, 114, 0xD000000000000061, 0x80000001009AC960, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_1005AA12C);
}

uint64_t sub_1005E3BC8()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3BDC(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005C7B80);
}

uint64_t sub_1005E3BF4()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3C04(char **a1, uint64_t *a2)
{
  return sub_1005C10D4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(uint64_t **)(v2 + 32));
}

unint64_t sub_1005E3C24()
{
  unint64_t result = qword_100AD82D8;
  if (!qword_100AD82D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100AD82D8);
  }
  return result;
}

uint64_t sub_1005E3C68(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005BE37C);
}

uint64_t sub_1005E3C80()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3C90()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E3D88(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005BC0BC(a1, v6, v7, v1 + v4, v8, v9);
}

uint64_t sub_1005E3E50()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3E60(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 192);
  swift_errorRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000DBF10(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005E3F5C(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005B023C);
}

uint64_t sub_1005E3F74()
{
  return swift_deallocObject();
}

uint64_t sub_1005E3F88()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1005E406C(uint64_t a1)
{
  return sub_1005E2A50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1005A93C8);
}

uint64_t sub_1005E4084()
{
  return swift_deallocObject();
}

unint64_t sub_1005E4094()
{
  unint64_t result = qword_100AD82E8;
  if (!qword_100AD82E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD82E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PaginatedContinuation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005E4184);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginatedContinuation.CodingKeys()
{
  return &type metadata for PaginatedContinuation.CodingKeys;
}

unint64_t sub_1005E41C0()
{
  unint64_t result = qword_100AD82F8;
  if (!qword_100AD82F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD82F8);
  }
  return result;
}

unint64_t sub_1005E4218()
{
  unint64_t result = qword_100AD8300;
  if (!qword_100AD8300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8300);
  }
  return result;
}

unint64_t sub_1005E4270()
{
  unint64_t result = qword_100AD8308[0];
  if (!qword_100AD8308[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD8308);
  }
  return result;
}

uint64_t sub_1005E4708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = (void *)(a6 + *(int *)(v10 + 36));
  *uint64_t v11 = a2;
  v11[1] = a3;
  uint64_t v12 = a6 + *(int *)(v10 + 40);

  return sub_10002C6EC(a4, v12);
}

uint64_t ItemStateVersion.init(parentID:filename:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for ItemStateVersion();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  void *v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for ItemStateVersion()
{
  return sub_10014D080();
}

uint64_t sub_1005E4860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v47 - v14;
  uint64_t v19 = sub_100152C24((char *)(v13 + *(int *)(v16 + 40)), v17, v18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v15, v4, v8);
  v20(v12, a1, v8);
  char v21 = sub_10096BBE0();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v22(v15, v8);
  if (v21) {
    uint64_t v23 = v19;
  }
  else {
    uint64_t v23 = v19 | 2;
  }
  uint64_t v24 = *(int *)(a4 + 36);
  uint64_t v25 = v5 + v24;
  uint64_t v27 = *(void *)(v5 + v24);
  unint64_t v26 = *(void *)(v25 + 8);
  uint64_t v28 = (uint64_t *)(a1 + v24);
  uint64_t v30 = *v28;
  unint64_t v29 = v28[1];
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_10002C020(v27, v26);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_10;
  }
  if (v31 == 12565487 && v33 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
LABEL_10:
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_10096BD70();
  sub_1000364D0(v36, v27, v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_10096BD10();
  unint64_t v26 = v37;
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_10002C020(v30, v29);
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (v40)
  {
    if (v38 == 12565487 && v40 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v41 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_18:
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_10096BD70();
      sub_1000364D0(v42, v30, v29);
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_10096BD10();
      unint64_t v29 = v44;
      swift_bridgeObjectRelease();
      if (v27 != v43) {
        goto LABEL_23;
      }
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
  if (v27 != v30)
  {
LABEL_23:
    char v45 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23 | ((v45 & 1) == 0);
  }
LABEL_21:
  if (v26 != v29) {
    goto LABEL_23;
  }
  swift_bridgeObjectRelease_n();
  return v23;
}

int *sub_1005E4C28@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, v5);
  if ((a1 & 2) != 0) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 24))(a4, a2);
  }
  if (a1)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v12 = *(void *)(a2 + v10);
    uint64_t v11 = *(void *)(a2 + v10 + 8);
    uint64_t v13 = (void *)(a4 + v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v13 = v12;
    v13[1] = v11;
  }
  return sub_100152568(a1, a2 + *(int *)(a3 + 40));
}

uint64_t sub_1005E4D18()
{
  sub_10096CBD0(16);
  v6._countAndFlagsBits = 3829820;
  v6._object = (void *)0xE300000000000000;
  sub_10096BDC0(v6);
  sub_10096D270();
  v7._countAndFlagsBits = 574254624;
  v7._object = (void *)0xE400000000000000;
  sub_10096BDC0(v7);
  swift_bridgeObjectRetain();
  NSString v0 = sub_10096BC00();
  id v1 = objc_msgSend(v0, "fp_obfuscatedFilename");

  uint64_t v2 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v4 = v3;

  v8._countAndFlagsBits = v2;
  v8._object = v4;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 8226;
  v9._object = (void *)0xE200000000000000;
  sub_10096BDC0(v9);
  v10._countAndFlagsBits = ItemMetadata.description.getter();
  sub_10096BDC0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  sub_10096BDC0(v11);
  return 0;
}

uint64_t static ItemStateVersion.zero(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  Swift::String v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v8 + 48))(v9, v8);
  v15[4] = 0;
  v15[5] = 0xE000000000000000;
  v15[2] = 58;
  v15[3] = 0xE100000000000000;
  v15[0] = 47;
  v15[1] = 0xE100000000000000;
  sub_10001F9C0();
  uint64_t v10 = sub_10096C910();
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
  uint64_t result = type metadata accessor for ItemStateVersion();
  uint64_t v14 = (uint64_t *)(a3 + *(int *)(result + 36));
  *uint64_t v14 = v10;
  v14[1] = v12;
  return result;
}

BOOL ItemStateVersion.isZero.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  Swift::String v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v5);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, void))(*(void *)(v10 + 24) + 48))(v8, *(void *)(v10 + 24));
  char v13 = sub_10096BBE0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a1);
  if (v13)
  {
    uint64_t v14 = &v7[*(int *)(a1 + 36)];
    uint64_t v16 = *(void *)v14;
    unint64_t v15 = *((void *)v14 + 1);
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0) {
      uint64_t v18 = HIBYTE(v15) & 0xF;
    }
    else {
      uint64_t v18 = v17;
    }
    BOOL v19 = v18 == 0;
  }
  else
  {
    BOOL v19 = 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  return v19;
}

uint64_t ItemStateVersion.description.getter()
{
  sub_10096D270();
  v6._countAndFlagsBits = 47;
  v6._object = (void *)0xE100000000000000;
  sub_10096BDC0(v6);
  swift_bridgeObjectRetain();
  NSString v0 = sub_10096BC00();
  id v1 = objc_msgSend(v0, "fp_obfuscatedFilename");

  uint64_t v2 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v4 = v3;

  v7._countAndFlagsBits = v2;
  v7._object = v4;
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void static ItemStateVersion.sqlType.getter()
{
}

void ItemStateVersion.init(rs:at:)()
{
}

void ItemStateVersion.init(sqliteValue:)()
{
}

void ItemStateVersion.encode(_:)()
{
}

uint64_t static ItemStateVersion.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_10096BBE0() & 1) == 0)
  {
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v4 = *(int *)(type metadata accessor for ItemStateVersion() + 36);
  uint64_t v6 = *(void *)(a1 + v4);
  unint64_t v5 = *(void *)(a1 + v4 + 8);
  Swift::String v7 = (uint64_t *)(a2 + v4);
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10002C020(v6, v5);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_8;
  }
  if (v10 == 12565487 && v12 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_8:
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_10096BD70();
  sub_1000364D0(v16, v6, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10096BD10();
  unint64_t v5 = v17;
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10002C020(v9, v8);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    if (v18 == 12565487 && v20 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_10096BD70();
    sub_1000364D0(v23, v9, v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_10096BD10();
    unint64_t v8 = v24;
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_18:
  swift_bridgeObjectRetain();
LABEL_21:
  if (v6 == v9 && v5 == v8) {
    char v15 = 1;
  }
  else {
    char v15 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1005E568C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746E65726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005E5780(char a1)
{
  if (a1) {
    return 0x656D616E656C6966;
  }
  else {
    return 0x4449746E65726170;
  }
}

Swift::Int sub_1005E57B0()
{
  return ScanReturnCode.hashValue.getter(*v0);
}

Swift::Int sub_1005E57C0()
{
  sub_10096D4B0();
  ScanReturnCode.hash(into:)((uint64_t)v2, *v0);
  return sub_10096D500();
}

uint64_t sub_1005E5808()
{
  return sub_1005E5780(*v0);
}

uint64_t sub_1005E5818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005E568C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005E5848(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1005E589C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ItemStateVersion.encode(to:)(void *a1, uint64_t a2)
{
  v13[0] = a2;
  v13[2] = *(void *)(a2 + 16);
  type metadata accessor for ItemStateVersion.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10096D200();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v13 - v5;
  sub_10002689C(a1, a1[3]);
  uint64_t v7 = v13[1];
  sub_10096D590();
  LOBYTE(v14) = 0;
  uint64_t v8 = v13[3];
  sub_10096D1A0();
  if (!v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + *(int *)(v13[0] + 36));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    uint64_t v14 = v11;
    uint64_t v15 = v10;
    char v16 = 1;
    sub_100157BC4();
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for ItemStateVersion.CodingKeys()
{
  return sub_10014D080();
}

uint64_t ItemStateVersion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  unint64_t v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ItemStateVersion.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_10096D0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v27 = a2;
  uint64_t v10 = type metadata accessor for ItemStateVersion();
  uint64_t v21 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - v11;
  sub_10002689C(a1, a1[3]);
  uint64_t v13 = v28;
  sub_10096D570();
  if (v13) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v14 = v12;
  uint64_t v16 = v23;
  uint64_t v15 = v24;
  LOBYTE(v29) = 0;
  sub_10096D040();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v26, v27);
  char v31 = 1;
  sub_100157D68();
  sub_10096D040();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v15);
  uint64_t v17 = v30;
  uint64_t v18 = &v14[*(int *)(v10 + 36)];
  *(void *)uint64_t v18 = v29;
  *((void *)v18 + 1) = v17;
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v14, v10);
  sub_1000268E0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v10);
}

uint64_t sub_1005E5E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return static ItemStateVersion.zero(for:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1005E5E6C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1005E5EF0(uint64_t a1, uint64_t a2)
{
  return static ItemStateVersion.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t sub_1005E5EFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ItemStateVersion.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1005E5F1C(void *a1, uint64_t a2)
{
  return ItemStateVersion.encode(to:)(a1, a2);
}

void sub_1005E5F34()
{
}

void sub_1005E5F44()
{
}

void sub_1005E5F54()
{
}

uint64_t sub_1005E5F64()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005E5FFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005E6100(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E6170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005E61F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005E628C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005E6308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005E6394(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005E64E0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1005E64F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1005E66D4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1005E66FC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ItemMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1005E67D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v70 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v70 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v69 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(*(void *)(v70 - 8) + 64);
  }
  else {
    size_t v12 = v11 + 1;
  }
  unsigned int v13 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  int v14 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  BOOL v15 = v13 <= 7 && v14 == 0;
  if (v15
    && (uint64_t v16 = v10 | 7,
        uint64_t v17 = v10 + 12,
        ((v10 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(v10 | 7))
      + ((((((((((v12
                + 7
                + ((v10
                  + 10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16 <= 0x18))
  {
    uint64_t v66 = v10 + 10;
    size_t v67 = v12 + 7;
    size_t __n = v12;
    uint64_t v65 = v11 + v10;
    uint64_t v18 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v68 = a1;
    uint64_t v19 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    v19[1] = v20[1];
    uint64_t v21 = ((unint64_t)v19 + v16 + 16) & ~v16;
    uint64_t v22 = ((unint64_t)v20 + v16 + 16) & ~v16;
    *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
    uint64_t v23 = v21 | 4;
    int v24 = *(_DWORD *)(v22 | 4);
    *(unsigned char *)(v23 + 4) = *(unsigned char *)((v22 | 4) + 4);
    *(_DWORD *)uint64_t v23 = v24;
    *(_WORD *)(v21 + 10) = *(_WORD *)(v22 + 10);
    uint64_t v25 = (v17 + v21) & v18;
    uint64_t v26 = (v17 + v22) & v18;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v70);
    uint64_t v28 = (v65 + v25) & v18;
    uint64_t v29 = (v65 + v26) & v18;
    v27(v28, v29, v70);
    uint64_t v30 = (unsigned char *)(v28 + v11);
    *uint64_t v30 = *(unsigned char *)(v29 + v11);
    v30[1] = *(unsigned char *)(v29 + v11 + 1);
    v30[2] = *(unsigned char *)(v29 + v11 + 2);
    v30[3] = *(unsigned char *)(v29 + v11 + 3);
    v30[4] = *(unsigned char *)(v29 + v11 + 4);
    unint64_t v31 = (v28 + v11 + 12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v29 + v11 + 12) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *(void *)(v32 + 8);
    *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
    *(unsigned char *)(v31 + 17) = *(unsigned char *)(v32 + 17);
    *(unsigned char *)(v31 + 18) = *(unsigned char *)(v32 + 18);
    *(unsigned char *)(v31 + 19) = *(unsigned char *)(v32 + 19);
    unint64_t v33 = (v31 + 27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v32 + 27) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v33 = *(void *)v34;
    *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
    *(unsigned char *)(v33 + 9) = *(unsigned char *)(v34 + 9);
    *(unsigned char *)(v33 + 10) = *(unsigned char *)(v34 + 10);
    *(unsigned char *)(v33 + 11) = *(unsigned char *)(v34 + 11);
    *(unsigned char *)(v33 + 12) = *(unsigned char *)(v34 + 12);
    char v35 = (void *)((v32 + 47) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v36 = (void *)((v31 + 47) & 0xFFFFFFFFFFFFFFF8);
    void *v36 = *v35;
    unint64_t v37 = ((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = ((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v37 = *(void *)v38;
    *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
    *(unsigned char *)(v37 + 9) = *(unsigned char *)(v38 + 9);
    uint64_t v39 = (void *)((v66 + v37) & v18);
    uint64_t v40 = (const void *)((v66 + v38) & v18);
    char v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    if (v41(v40, 1, v70))
    {
      memcpy(v39, v40, __n);
    }
    else
    {
      v27((uint64_t)v39, (uint64_t)v40, v70);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v39, 0, 1, v70);
    }
    unint64_t v44 = (void *)(((unint64_t)v39 + v67) & 0xFFFFFFFFFFFFFFF8);
    char v45 = (void *)(((unint64_t)v40 + v67) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v44 = *v45;
    unint64_t v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = *(void *)v47;
    *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
    *(void *)unint64_t v46 = v48;
    uint64_t v49 = (void *)(((unint64_t)v44 + 31) & 0xFFFFFFFFFFFFFFF8);
    v50 = (void *)(((unint64_t)v45 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v49 = *v50;
    unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    v52 = (uint64_t *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v53 = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v53 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
    }
    else
    {
      uint64_t v54 = *v52;
      sub_10001EBB0(*v52, v53);
      *(void *)unint64_t v51 = v54;
      *(void *)(v51 + 8) = v53;
    }
    unint64_t v55 = (v51 + 19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = ((unint64_t)v52 + 19) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = *(void *)v56;
    *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
    *(void *)unint64_t v55 = v57;
    *(unsigned char *)(v55 + 9) = *(unsigned char *)(v56 + 9);
    unint64_t v58 = (v55 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v59 = (v56 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    int v60 = *(_DWORD *)v59;
    *(unsigned char *)(v58 + 4) = *(unsigned char *)(v59 + 4);
    *(_DWORD *)unint64_t v58 = v60;
    v61 = (void *)((v55 + 25) & 0xFFFFFFFFFFFFFFF8);
    v62 = (void *)((v56 + 25) & 0xFFFFFFFFFFFFFFF8);
    void *v61 = *v62;
    v61[1] = v62[1];
    swift_bridgeObjectRetain();
    return v68;
  }
  else
  {
    uint64_t v42 = *a2;
    *a1 = *a2;
    uint64_t v43 = v42 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7));
    swift_retain();
  }
  return (uint64_t *)v43;
}

uint64_t sub_1005E6D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (v8 + ((v4 + (v8 | 7) + 16) & ~v8 & 0xFFFFFFFFFFFFFFF8) + 12) & ~v8;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v9, v5);
  uint64_t v11 = *(void *)(v6 + 64);
  v10((v11 + v8 + v9) & ~v8, v5);
  swift_bridgeObjectRelease();
  unint64_t v12 = (v8
       + ((((((v11 + ((v11 + v8 + v9) & ~v8) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v8;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v5)) {
    v10(v12, v5);
  }
  uint64_t v13 = v11 + v12;
  if (!*(_DWORD *)(v7 + 84)) {
    ++v13;
  }
  unint64_t v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v15 = (uint64_t *)(((v14 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = v15[1];
  if ((v16 & 0x3000000000000000) == 0) {
    sub_10001E9C0(*v15, v16);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E6F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v57 = a1;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v18) & ~v12;
  v19((v20 + v12 + v17) & ~v12, v21, v9);
  uint64_t v22 = (unsigned char *)(((v20 + v12 + v17) & ~v12) + v20);
  *uint64_t v22 = *(unsigned char *)(v21 + v20);
  v22[1] = *(unsigned char *)(v21 + v20 + 1);
  v22[2] = *(unsigned char *)(v21 + v20 + 2);
  v22[3] = *(unsigned char *)(v21 + v20 + 3);
  v22[4] = *(unsigned char *)(v21 + v20 + 4);
  unint64_t v23 = (unint64_t)(v22 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  *(unsigned char *)(v23 + 17) = *(unsigned char *)(v24 + 17);
  *(unsigned char *)(v23 + 18) = *(unsigned char *)(v24 + 18);
  *(unsigned char *)(v23 + 19) = *(unsigned char *)(v24 + 19);
  unint64_t v25 = (v23 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(unsigned char *)(v25 + 9) = *(unsigned char *)(v26 + 9);
  *(unsigned char *)(v25 + 10) = *(unsigned char *)(v26 + 10);
  *(unsigned char *)(v25 + 11) = *(unsigned char *)(v26 + 11);
  *(unsigned char *)(v25 + 12) = *(unsigned char *)(v26 + 12);
  uint64_t v27 = (void *)((v23 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  unint64_t v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(unsigned char *)(v29 + 9) = *(unsigned char *)(v30 + 9);
  unint64_t v31 = (void *)((v12 + 10 + v29) & ~v12);
  unint64_t v32 = (const void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v33(v32, 1, v9))
  {
    int v34 = *(_DWORD *)(v11 + 84);
    if (v34) {
      size_t v35 = v20;
    }
    else {
      size_t v35 = v20 + 1;
    }
    memcpy(v31, v32, v35);
  }
  else
  {
    v19((uint64_t)v31, (uint64_t)v32, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v31, 0, 1, v9);
    int v34 = *(_DWORD *)(v11 + 84);
  }
  if (v34) {
    size_t v36 = v20;
  }
  else {
    size_t v36 = v20 + 1;
  }
  unint64_t v37 = (void *)(((unint64_t)v31 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v38 = (void *)(((unint64_t)v32 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v37 = *v38;
  unint64_t v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)unint64_t v39 = v41;
  uint64_t v42 = (void *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = (void *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v42 = *v43;
  unint64_t v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v45 = (uint64_t *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v46 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v44 = *(_OWORD *)v45;
  }
  else
  {
    uint64_t v47 = *v45;
    sub_10001EBB0(*v45, v46);
    *(void *)unint64_t v44 = v47;
    *(void *)(v44 + 8) = v46;
  }
  unint64_t v48 = (v44 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = ((unint64_t)v45 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  *(void *)unint64_t v48 = v50;
  *(unsigned char *)(v48 + 9) = *(unsigned char *)(v49 + 9);
  unint64_t v51 = (v48 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v52 = (v49 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v53 = *(_DWORD *)v52;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  *(_DWORD *)unint64_t v51 = v53;
  uint64_t v54 = (void *)((v48 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v55 = (void *)((v49 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  return v57;
}

uint64_t sub_1005E732C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v65 = a1;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  v19(v21, (v20 + v12 + v18) & ~v12, v9);
  uint64_t v22 = (unsigned char *)(v21 + v20);
  unint64_t v23 = (unsigned char *)(((v20 + v12 + v18) & ~v12) + v20);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  v22[4] = v23[4];
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (unint64_t)(v23 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (void *)((v12 + 10 + v31) & ~v12);
  int v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v25) = v34(v32, 1, v9);
  int v35 = v34(v33, 1, v9);
  if (v25)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v32, v33, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
      goto LABEL_12;
    }
    int v36 = *(_DWORD *)(v11 + 84);
  }
  else
  {
    if (!v35)
    {
      v19((uint64_t)v32, (uint64_t)v33, v9);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v32, v9);
    int v36 = *(_DWORD *)(v11 + 84);
  }
  if (v36) {
    size_t v37 = v20;
  }
  else {
    size_t v37 = v20 + 1;
  }
  memcpy(v32, v33, v37);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    size_t v38 = v20;
  }
  else {
    size_t v38 = v20 + 1;
  }
  uint64_t v39 = (uint64_t)v32 + v38 + 7;
  unint64_t v40 = (void *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = (v39 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v39 & 0xFFFFFFFFFFFFFFF8) = *v40;
  unint64_t v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  *(void *)unint64_t v43 = v45;
  unint64_t v46 = (void *)(((unint64_t)v40 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v42 & 0xFFFFFFFFFFFFFFF8) = *v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t *)(((v42 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = (uint64_t *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v49 = v47[1];
  unint64_t v50 = v48[1];
  uint64_t v51 = v50 & 0x3000000000000000;
  if ((v49 & 0x3000000000000000) == 0)
  {
    if (!v51)
    {
      uint64_t v62 = *v48;
      sub_10001EBB0(*v48, v50);
      uint64_t v63 = *v47;
      unint64_t v64 = v47[1];
      uint64_t *v47 = v62;
      v47[1] = v50;
      sub_10001E9C0(v63, v64);
      goto LABEL_21;
    }
    sub_10001E9C0(*v47, v49);
    goto LABEL_20;
  }
  if (v51)
  {
LABEL_20:
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    goto LABEL_21;
  }
  uint64_t v52 = *v48;
  sub_10001EBB0(*v48, v50);
  uint64_t *v47 = v52;
  v47[1] = v50;
LABEL_21:
  unint64_t v53 = ((unint64_t)v47 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v48 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  *(void *)unint64_t v53 = v55;
  *(unsigned char *)(v53 + 9) = *(unsigned char *)(v54 + 9);
  unint64_t v56 = (v53 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v57 = (v54 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v58 = *(_DWORD *)v57;
  *(unsigned char *)(v56 + 4) = *(unsigned char *)(v57 + 4);
  *(_DWORD *)unint64_t v56 = v58;
  unint64_t v59 = (void *)((v53 + 25) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)((v54 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1005E7830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  uint64_t v22 = (v20 + v12 + v18) & ~v12;
  v19(v21, v22, v9);
  unint64_t v23 = (unsigned char *)(v21 + v20);
  *unint64_t v23 = *(unsigned char *)(v22 + v20);
  v23[1] = *(unsigned char *)(v22 + v20 + 1);
  v23[2] = *(unsigned char *)(v22 + v20 + 2);
  v23[3] = *(unsigned char *)(v22 + v20 + 3);
  v23[4] = *(unsigned char *)(v22 + v20 + 4);
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v22 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (const void *)((v12 + 10 + v31) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v33, 1, v9))
  {
    int v34 = *(_DWORD *)(v11 + 84);
    if (v34) {
      size_t v35 = v20;
    }
    else {
      size_t v35 = v20 + 1;
    }
    memcpy(v32, v33, v35);
  }
  else
  {
    v19((uint64_t)v32, (uint64_t)v33, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
    int v34 = *(_DWORD *)(v11 + 84);
  }
  if (v34) {
    size_t v36 = v20;
  }
  else {
    size_t v36 = v20 + 1;
  }
  size_t v37 = (void *)(((unint64_t)v32 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v38 = (void *)(((unint64_t)v33 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v37 = *v38;
  unint64_t v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)unint64_t v39 = v41;
  unint64_t v42 = (void *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v43 = (void *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v42 = *v43;
  unint64_t v44 = (_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v44 = *v45;
  unint64_t v46 = ((unint64_t)v44 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((unint64_t)v45 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  *(void *)unint64_t v46 = v48;
  *(unsigned char *)(v46 + 9) = *(unsigned char *)(v47 + 9);
  unint64_t v49 = (v46 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v50 = (v47 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v41) = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  *(_DWORD *)unint64_t v49 = v41;
  *(_OWORD *)((v46 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v47 + 25) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005E7BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v63 = a1;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  uint64_t v22 = (v20 + v12 + v18) & ~v12;
  v19(v21, v22, v9);
  unint64_t v23 = (unsigned char *)(v21 + v20);
  *unint64_t v23 = *(unsigned char *)(v22 + v20);
  v23[1] = *(unsigned char *)(v22 + v20 + 1);
  v23[2] = *(unsigned char *)(v22 + v20 + 2);
  v23[3] = *(unsigned char *)(v22 + v20 + 3);
  v23[4] = *(unsigned char *)(v22 + v20 + 4);
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v22 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (void *)((v12 + 10 + v31) & ~v12);
  int v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v18) = v34(v32, 1, v9);
  int v35 = v34(v33, 1, v9);
  if (v18)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v32, v33, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
      goto LABEL_12;
    }
    int v36 = *(_DWORD *)(v11 + 84);
  }
  else
  {
    if (!v35)
    {
      v19((uint64_t)v32, (uint64_t)v33, v9);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v32, v9);
    int v36 = *(_DWORD *)(v11 + 84);
  }
  if (v36) {
    size_t v37 = v20;
  }
  else {
    size_t v37 = v20 + 1;
  }
  memcpy(v32, v33, v37);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    size_t v38 = v20;
  }
  else {
    size_t v38 = v20 + 1;
  }
  uint64_t v39 = (uint64_t)v32 + v38 + 7;
  unint64_t v40 = (void *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = (unint64_t)v40 + 31;
  unint64_t v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v39 & 0xFFFFFFFFFFFFFFF8) = *v40;
  unint64_t v43 = (v39 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  unint64_t v44 = v42 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)unint64_t v44 = v46;
  unint64_t v47 = (void *)(v43 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = (v41 & 0xFFFFFFFFFFFFFFF8) + 15;
  void *v47 = *(void *)(v41 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  unint64_t v49 = (uint64_t *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v50 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = v49[1];
  if ((v51 & 0x3000000000000000) == 0)
  {
    uint64_t v52 = v50[1];
    if ((v52 & 0x3000000000000000) == 0)
    {
      uint64_t v62 = *v49;
      *unint64_t v49 = *v50;
      v49[1] = v52;
      sub_10001E9C0(v62, v51);
      goto LABEL_19;
    }
    sub_10001E9C0(*v49, v51);
  }
  *(_OWORD *)unint64_t v49 = *(_OWORD *)v50;
LABEL_19:
  unint64_t v53 = ((unint64_t)v49 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v50 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  *(void *)unint64_t v53 = v55;
  *(unsigned char *)(v53 + 9) = *(unsigned char *)(v54 + 9);
  unint64_t v56 = (v53 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v57 = (v54 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v58 = *(_DWORD *)v57;
  *(unsigned char *)(v56 + 4) = *(unsigned char *)(v57 + 4);
  *(_DWORD *)unint64_t v56 = v58;
  unint64_t v59 = (void *)((v53 + 25) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)((v54 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_1005E809C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_10096B0E0() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 64);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v7 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v7;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v9) {
    uint64_t v16 = 7;
  }
  else {
    uint64_t v16 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = v11 | 7;
  uint64_t v18 = v11 + 12;
  uint64_t v19 = v12 + v11;
  uint64_t v20 = v12 + 12;
  if (v15 < a2)
  {
    unint64_t v21 = ((v11 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v17)
        + ((((((((((v16
                  + v12
                  + ((v11
                    + ((((((v20 + ((v19 + (v18 & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 10) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v21 & 0xFFFFFFF8) != 0) {
      unsigned int v22 = 2;
    }
    else {
      unsigned int v22 = a2 - v15 + 1;
    }
    if (v22 >= 0x10000) {
      unsigned int v23 = 4;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v22 < 0x100) {
      unsigned int v23 = 1;
    }
    if (v22 >= 2) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    switch(v24)
    {
      case 1:
        int v25 = *((unsigned __int8 *)a1 + v21);
        if (!*((unsigned char *)a1 + v21)) {
          break;
        }
        goto LABEL_31;
      case 2:
        int v25 = *(unsigned __int16 *)((char *)a1 + v21);
        if (*(_WORD *)((char *)a1 + v21)) {
          goto LABEL_31;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005E83D8);
      case 4:
        int v25 = *(_DWORD *)((char *)a1 + v21);
        if (!v25) {
          break;
        }
LABEL_31:
        int v27 = v25 - 1;
        if ((v21 & 0xFFFFFFF8) != 0)
        {
          int v27 = 0;
          int v28 = *a1;
        }
        else
        {
          int v28 = 0;
        }
        return v15 + (v28 | v27) + 1;
      default:
        break;
    }
  }
  if (v7 == v15)
  {
    unint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    return v29(a1, v7, v5);
  }
  else
  {
    unint64_t v30 = ((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    if ((v14 & 0x80000000) != 0)
    {
      uint64_t v32 = (v18 + ((v30 + v17 + 16) & ~v17)) & ~v11;
      if (v9 < 0x7FFFFFFE)
      {
        unint64_t v34 = *(void *)(((v20 + ((v19 + v32) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v34 >= 0xFFFFFFFF) {
          LODWORD(v34) = -1;
        }
        if ((v34 + 1) >= 2) {
          return v34;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v33 = *(uint64_t (**)(uint64_t))(v8 + 48);
        return v33(v32);
      }
    }
    else
    {
      unint64_t v31 = *(void *)(v30 + 8);
      if (v31 >= 0xFFFFFFFF) {
        LODWORD(v31) = -1;
      }
      return (v31 + 1);
    }
  }
}

void sub_1005E83EC(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_10096B0E0() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(v10 + 64);
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  if (v9 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = v13 | 7;
  uint64_t v19 = v13 + 12;
  uint64_t v20 = v14 + v13;
  uint64_t v21 = v14 + 12;
  unint64_t v22 = (v13
       + ((((((v14 + 12 + ((v14 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  if (!v11) {
    ++v14;
  }
  size_t v23 = ((v13 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(v13 | 7))
      + ((((((((((v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v17 >= a3)
  {
    int v26 = 0;
    int v27 = a2 - v17;
    if (a2 <= v17)
    {
LABEL_25:
      uint64_t v28 = ~v13;
      switch(v26)
      {
        case 1:
          *((unsigned char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 2:
          *(_WORD *)((char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 3:
          goto LABEL_58;
        case 4:
          *(_DWORD *)((char *)a1 + v23) = 0;
          goto LABEL_37;
        default:
LABEL_37:
          if (a2)
          {
LABEL_38:
            if (v9 == v17)
            {
              unint64_t v31 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v36 + 56);
              v31(a1, a2, v9, v7);
            }
            else
            {
              uint64_t v32 = (void *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
              if ((v16 & 0x80000000) != 0)
              {
                uint64_t v33 = (v19 + (((unint64_t)v32 + v18 + 16) & ~v18)) & v28;
                if (v11 < 0x7FFFFFFE)
                {
                  int v35 = (void *)((v21 + ((v20 + v33) & v28)) & 0xFFFFFFFFFFFFFFF8);
                  if (a2 > 0x7FFFFFFE)
                  {
                    *int v35 = 0;
                    v35[1] = 0;
                    *(_DWORD *)int v35 = a2 - 0x7FFFFFFF;
                  }
                  else
                  {
                    v35[1] = a2;
                  }
                }
                else
                {
                  unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v10 + 56);
                  v34(v33, a2);
                }
              }
              else if ((a2 & 0x80000000) != 0)
              {
                *uint64_t v32 = a2 ^ 0x80000000;
                v32[1] = 0;
              }
              else
              {
                v32[1] = (a2 - 1);
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v13 + ((v12 + 7) & 0xFFFFFFF8) + 16) & ~(v13 | 7))
       + ((((((((((v14 + v22 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8)
         + 25) & 0xFFFFFFF8) == -16)
      unsigned int v24 = a3 - v17 + 1;
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v26 = v25;
    }
    else {
      int v26 = 0;
    }
    int v27 = a2 - v17;
    if (a2 <= v17) {
      goto LABEL_25;
    }
  }
  if (v23) {
    int v29 = 1;
  }
  else {
    int v29 = v27;
  }
  if (v23)
  {
    int v30 = ~v17 + a2;
    bzero(a1, v23);
    *a1 = v30;
  }
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v23) = v29;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v23) = v29;
      break;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1005E8790);
    case 4:
      *(_DWORD *)((char *)a1 + v23) = v29;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ItemState()
{
  return sub_10014D080();
}

unsigned char *sub_1005E87D0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005E889CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1005E88C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1005E88E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1005E88FC()
{
  return swift_getWitnessTable();
}

uint64_t EvictionReasons.onDiskValue.getter(uint64_t result)
{
  return result;
}

uint64_t EvictionReasons.description.getter(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C65446568636163;
      break;
    case 2:
      uint64_t result = 1919251317;
      break;
    case 3:
      uint64_t result = 0x697461646E756F66;
      break;
    case 4:
      uint64_t result = 28774;
      break;
    case 5:
      uint64_t result = 0x705565746F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005E89F4()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C65446568636163;
      break;
    case 2:
      uint64_t result = 1919251317;
      break;
    case 3:
      uint64_t result = 0x697461646E756F66;
      break;
    case 4:
      uint64_t result = 28774;
      break;
    case 5:
      uint64_t result = 0x705565746F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005E8ABC()
{
  return sub_10096C040();
}

uint64_t sub_1005E8B1C()
{
  return sub_10096BFD0();
}

unint64_t sub_1005E8B70()
{
  unint64_t result = qword_100AD8490;
  if (!qword_100AD8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8490);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EvictionReasons(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005E8C90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EvictionReasons()
{
  return &type metadata for EvictionReasons;
}

unint64_t sub_1005E8CC8()
{
  unint64_t result = qword_100AD8498;
  if (!qword_100AD8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8498);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for GSConflictInfo(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10096AE50();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v14 = v4;
    v13(v9, v10, v11);
    uint64_t v15 = *(int *)(a3 + 20);
    unsigned int v16 = (char *)v7 + v15;
    unsigned int v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_10002B7CC(&qword_100ACA8C0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    unint64_t v22 = *((void *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *(void *)v21;
      sub_10001EBB0(*(void *)v21, *((void *)v21 + 1));
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
    }
  }
  return v7;
}

uint64_t type metadata accessor for StagedRemoteVersion(uint64_t a1)
{
  return sub_100028978(a1, qword_100AD8590);
}

uint64_t destroy for GSConflictInfo(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
  if (!result) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v7)(v8, v5);
  }
  uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(a2 + 24));
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *v10;
    return sub_10001E9C0(v12, v11);
  }
  return result;
}

void **initializeWithCopy for GSConflictInfo(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10096AE50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  id v13 = v6;
  v12(v8, v9, v10);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  unsigned int v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
  {
    uint64_t v17 = sub_10002B7CC(&qword_100ACA8C0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  unint64_t v21 = *((void *)v20 + 1);
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v22 = *(void *)v20;
    sub_10001EBB0(*(void *)v20, *((void *)v20 + 1));
    *(void *)uint64_t v19 = v22;
    *((void *)v19 + 1) = v21;
  }
  return a1;
}

void **assignWithCopy for GSConflictInfo(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_10096AE50();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  uint64_t v30 = a3;
  unint64_t v31 = a2;
  uint64_t v15 = *(int *)(a3 + 20);
  unsigned int v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a3) = v18((char *)a1 + v15, 1, v12);
  int v19 = v18(v17, 1, v12);
  if (a3)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_6:
    uint64_t v20 = sub_10002B7CC(&qword_100ACA8C0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v14(v16, v17, v12);
LABEL_7:
  uint64_t v21 = *(int *)(v30 + 24);
  uint64_t v22 = (uint64_t *)((char *)a1 + v21);
  uint64_t v23 = (uint64_t *)((char *)v31 + v21);
  unint64_t v24 = *(unint64_t *)((char *)v31 + v21 + 8);
  if (*(unint64_t *)((char *)a1 + v21 + 8) >> 60 != 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v26 = *v23;
      sub_10001EBB0(v26, v24);
      uint64_t v27 = *v22;
      unint64_t v28 = v22[1];
      *uint64_t v22 = v26;
      v22[1] = v24;
      sub_10001E9C0(v27, v28);
      return a1;
    }
    sub_10011A770((uint64_t)v22);
    goto LABEL_12;
  }
  if (v24 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    return a1;
  }
  uint64_t v25 = *v23;
  sub_10001EBB0(v25, v24);
  *uint64_t v22 = v25;
  v22[1] = v24;
  return a1;
}

void *initializeWithTake for GSConflictInfo(void *a1, char *a2, uint64_t a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = sub_10002B7CC(&qword_100ACA8C0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

void **assignWithTake for GSConflictInfo(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10096AE50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  unsigned int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v16((char *)a1 + v13, 1, v10);
  int v17 = v16(v15, 1, v10);
  if (a3)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    uint64_t v18 = sub_10002B7CC(&qword_100ACA8C0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  uint64_t v19 = *(int *)(v26 + 24);
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (uint64_t *)((char *)v27 + v19);
  unint64_t v22 = *(unint64_t *)((char *)a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    unint64_t v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v20;
      *uint64_t v20 = *v21;
      v20[1] = v23;
      sub_10001E9C0(v24, v22);
      return a1;
    }
    sub_10011A770((uint64_t)v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t getEnumTagSinglePayload for GSConflictInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E97CC);
}

uint64_t sub_1005E97CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_10002B7CC(&qword_100ACA8C0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
      BOOL v15 = ((4 * v14) & 0xC) == 0;
      unsigned int v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
      if (v15) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for GSConflictInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E9904);
}

uint64_t sub_1005E9904(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10002B7CC(&qword_100ACA8C0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      BOOL v15 = (void *)(a1 + *(int *)(a4 + 24));
      *BOOL v15 = 0;
      v15[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for GSConflictInfo(uint64_t a1)
{
  return sub_100028978(a1, qword_100AD84F8);
}

void sub_1005E9A48()
{
  type metadata accessor for StagedRemoteVersion(319);
  if (v0 <= 0x3F)
  {
    sub_100169CA4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void **initializeBufferWithCopyOfBuffer for StagedRemoteVersion(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10096AE50();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for StagedRemoteVersion(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10096AE50();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **initializeWithCopy for StagedRemoteVersion(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_10096AE50();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **assignWithCopy for StagedRemoteVersion(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_10096AE50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *initializeWithTake for StagedRemoteVersion(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10096AE50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **assignWithTake for StagedRemoteVersion(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10096AE50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StagedRemoteVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E9EB0);
}

uint64_t sub_1005E9EB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10096AE50();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StagedRemoteVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E9F74);
}

void *sub_1005E9F74(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10096AE50();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1005EA01C()
{
  uint64_t result = sub_10096AE50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1005EA0B8(uint64_t a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100ACB908);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_1005EA420();
  id v14 = *v1;
  id v15 = [*v1 displayName];
  uint64_t v16 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v32 = v17;

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  id v18 = [v14 itemID];
  id v19 = [v14 contentModificationDate];
  if (v19)
  {
    uint64_t v20 = v19;
    sub_10096B0A0();

    uint64_t v21 = sub_10096B0E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_10096B0E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  }
  id v23 = [v14 mostRecentEditorNameComponents];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_10096AB40();

    uint64_t v25 = sub_10096AB50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 0, 1, v25);
  }
  else
  {
    uint64_t v26 = sub_10096AB50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
  }
  id v27 = [v14 documentSize];
  id v28 = objc_allocWithZone((Class)FPFileVersion);
  id v29 = sub_100336DEC((uint64_t)v13, v16, v32, (uint64_t)v12, 0, (uint64_t)v18, (uint64_t)v8, (uint64_t)v5, (uint64_t)v27);

  return v29;
}

id sub_1005EA420()
{
  FPItem.version.getter((uint64_t *)v5);
  long long v9 = v5[0];
  long long v8 = *(_OWORD *)((char *)&v5[1] + 8);
  sub_1005EA540((uint64_t)&v6, (uint64_t)v7);
  sub_100243F20((uint64_t)&v9);
  sub_100243F20((uint64_t)&v8);
  sub_1000A6F50((uint64_t)v7);
  v0.super.Class isa = sub_10096AF20().super.isa;
  v1.super.Class isa = sub_10096AF20().super.isa;
  sub_1005EA540((uint64_t)v7, (uint64_t)v10);
  if (v10[1])
  {
    NSString v2 = sub_10096BC00();
    sub_1001FACD4((uint64_t)v7);
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [objc_allocWithZone((Class)NSFileProviderItemVersion) initWithContentVersion:v0.super.isa metadataVersion:v1.super.isa lastEditorDeviceName:v2];
  sub_100243F50((uint64_t)&v8);
  sub_100243F50((uint64_t)&v9);

  sub_1000789EC((uint64_t *)v5);
  return v3;
}

uint64_t sub_1005EA540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ACF700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EA5A8()
{
  id v1 = sub_1005EA420();
  id v2 = *v0;
  id v3 = [*v0 itemID];
  id v4 = [v2 filename];
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  sub_10083459C((uint64_t)&v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  NSString v6 = sub_10096BC00();
  swift_bridgeObjectRelease();
  id v7 = [v5 versionFaultName:v1 identifier:v3 ext:v6];

  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  return v8;
}

unint64_t sub_1005EA6E0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
    case 7:
      unint64_t result = 0x626F4A726568746FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1005EA7DC()
{
  return sub_1005EA6E0(*v0);
}

uint64_t sub_1005EA7E4(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v56 = a4;
  id v57 = a5;
  uint64_t v46 = a3;
  uint64_t v13 = sub_10096B7D0();
  uint64_t v48 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v47 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10096B710();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v52 = (void *)((char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  id v19 = (void *)((char *)v42 - v18);
  uint64_t v55 = sub_10096B820();
  uint64_t v51 = *(void *)(v55 - 8);
  uint64_t v20 = __chkstk_darwin(v55);
  unint64_t v49 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v50 = (char *)v42 - v22;
  uint64_t v23 = sub_10096C6E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = __chkstk_darwin(v23);
  id v27 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 40) = 0;
  *(void *)(v8 + 16) = a1;
  int v45 = a2;
  *(unsigned char *)(v8 + 24) = a2;
  uint64_t v28 = a1[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    a1[2] = v30;
    *(void *)(v8 + 48) = a6;
    *(void *)(v8 + 56) = a7;
    if (a1[3] >= a1[5])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = v13;
      sub_1000258DC();
      int v58 = _swiftEmptyArrayStorage;
      sub_10017DD9C();
      swift_retain();
      uint64_t v44 = a7;
      swift_retain();
      sub_10002B7CC((uint64_t *)&unk_100ACB020);
      sub_1005EB63C();
      sub_10096CA60();
      uint64_t v31 = sub_10096C6F0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      *(void *)(v8 + 32) = v31;
      swift_unknownObjectRelease();
      if (!*(void *)(v8 + 32)) {
        goto LABEL_7;
      }
      v42[0] = swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v32 = v49;
      sub_10096B800();
      *id v19 = 300;
      uint64_t v34 = v53;
      uint64_t v33 = v54;
      (*(void (**)(void *, void, uint64_t))(v53 + 104))(v19, enum case for DispatchTimeInterval.seconds(_:), v54);
      v42[1] = a1;
      int v35 = v50;
      sub_10096B840();
      uint64_t v36 = *(void (**)(void *, uint64_t))(v34 + 8);
      v36(v19, v33);
      uint64_t v53 = *(void *)(v51 + 8);
      ((void (*)(char *, uint64_t))v53)(v32, v55);
      sub_100041860((uint64_t)v19);
      size_t v37 = v52;
      sub_1000418D4(v52);
      sub_10096C7D0();
      swift_unknownObjectRelease();
      v36(v37, v33);
      v36(v19, v33);
      ((void (*)(char *, uint64_t))v53)(v35, v55);
      if (*(void *)(v8 + 32))
      {
        swift_getObjectType();
        uint64_t v38 = swift_allocObject();
        swift_weakInit();
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v38;
        *(unsigned char *)(v39 + 24) = v45;
        uint64_t v40 = v56;
        *(void *)(v39 + 32) = v46;
        *(void *)(v39 + 40) = v40;
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v41 = (uint64_t)v47;
        sub_1004B1508();
        sub_1006B7CE4(0, v41, (uint64_t)sub_1005EB710, v39);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v41, v43);
        swift_release();
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v8 + 32))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C730();
        swift_unknownObjectRelease();
      }
      swift_release();

      swift_release();
    }
    return v8;
  }
  return result;
}

uint64_t sub_1005EADD4(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = sub_10096B480();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    if (*(void *)(result + 32))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C720();
      swift_unknownObjectRelease();
      if (*(void *)(v12 + 32))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10096C750();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v12 + 32) = 0;
    swift_unknownObjectRelease();
    id v13 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_10096B470();
    os_log_type_t v15 = sub_10096C5D0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v28 = a3;
      uint64_t v29 = v7;
      uint64_t v16 = 0xD000000000000014;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = v27;
      *(_DWORD *)uint64_t v17 = 136446466;
      unint64_t v18 = 0x80000001009ADA00;
      switch(a2)
      {
        case 1:
          id v19 = "fetchContentJobsForB";
          goto LABEL_17;
        case 2:
          uint64_t v16 = 0xD000000000000015;
          id v19 = "updateContentJobsForA";
          goto LABEL_17;
        case 3:
          uint64_t v16 = 0xD000000000000015;
          id v19 = "updateContentJobsForB";
          goto LABEL_17;
        case 4:
          uint64_t v16 = 0xD00000000000001ALL;
          id v19 = "updateMetadataOnlyJobsForA";
          goto LABEL_17;
        case 5:
          uint64_t v16 = 0xD00000000000001ALL;
          id v19 = "updateMetadataOnlyJobsForB";
          goto LABEL_17;
        case 6:
          uint64_t v20 = 0x41726F4673;
          goto LABEL_15;
        case 7:
          uint64_t v20 = 0x42726F4673;
LABEL_15:
          unint64_t v18 = v20 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          uint64_t v16 = 0x626F4A726568746FLL;
          break;
        case 8:
          uint64_t v16 = 0xD000000000000013;
          id v19 = "backgroundDownloads";
LABEL_17:
          unint64_t v18 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v30 = sub_100719D44(v16, v18, &v31);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_100719D44(v28, a4, &v31);
      sub_10096C8C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "job executing for more than 5 minutes, increasing limit for %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    *(unsigned char *)(v12 + 40) = 1;
    uint64_t v21 = *(void *)(v12 + 16);
    uint64_t v22 = *(void *)(v21 + 24);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
      JUMPOUT(0x1005EB1E0);
    }
    *(void *)(v21 + 24) = v24;
    uint64_t v25 = *(void (**)(uint64_t))(v12 + 48);
    uint64_t v26 = swift_retain();
    v25(v26);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1005EB204()
{
  if (*(void *)(v0 + 32))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10096C720();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + 32))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10096C750();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + 32) = 0;
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v5;
    if (*(unsigned char *)(v0 + 40) != 1)
    {
LABEL_8:
      (*(void (**)(uint64_t))(v0 + 48))(result);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return v0;
    }
    uint64_t v6 = *(void *)(v2 + 24);
    BOOL v4 = __OFSUB__(v6, 1);
    uint64_t v7 = v6 - 1;
    if (!v4)
    {
      *(void *)(v2 + 24) = v7;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1005EB2F8()
{
  sub_1005EB204();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JobLimitSlot()
{
  return self;
}

void sub_1005EB350()
{
  v3._countAndFlagsBits = sub_10096D220();
  v3._object = v1;
  v4._countAndFlagsBits = 47;
  v4._object = (void *)0xE100000000000000;
  sub_10096BDC0(v4);
  v5._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[3];
  if (v2 == v0[5] && v2 != v0[4])
  {
    v6._countAndFlagsBits = 0x208FB8EFA09AE220;
    v6._object = (void *)0xAC00000064726168;
    sub_10096BDC0(v6);
    uint64_t v2 = v0[3];
  }
  if (__OFSUB__(v2, v0[2]))
  {
    __break(1u);
  }
  else
  {
    sub_10096BDC0(v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005EB488()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JobLimit()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JobLimitCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005EB588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JobLimitCategory()
{
  return &type metadata for JobLimitCategory;
}

unint64_t sub_1005EB5C4()
{
  unint64_t result = qword_100AD8748[0];
  if (!qword_100AD8748[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD8748);
  }
  return result;
}

void sub_1005EB618()
{
}

unint64_t sub_1005EB63C()
{
  unint64_t result = qword_100ACF620;
  if (!qword_100ACF620)
  {
    sub_100033BE8((uint64_t *)&unk_100ACB020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100ACF620);
  }
  return result;
}

uint64_t sub_1005EB698()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005EB6D0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005EB710()
{
  return sub_1005EADD4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t static NSFileProviderContentPolicy.materializeNamespaceEagerly.getter()
{
  return 500;
}

uint64_t static NSFileProviderContentPolicy.materializeSpeculativelyOnce.getter()
{
  return 501;
}

uint64_t static NSFileProviderContentPolicy.materializeNamespaceEagerlyInheritKeepDownload.getter()
{
  return 1002;
}

uint64_t static NSFileProviderContentPolicy.speculativeDownloadCandidate.getter()
{
  return 502;
}

uint64_t static NSFileProviderContentPolicy.materializeNamespaceEagerlyInheritEvict.getter()
{
  return 1001;
}

uint64_t static NSFileProviderContentPolicy.materializeNamespaceEagerlyInheritLazy.getter()
{
  return 1000;
}

uint64_t static NSFileProviderContentPolicy.materializeNamespaceEagerlyInheritSpeculativeDownloadCandidate.getter()
{
  return 1003;
}

unint64_t NSFileProviderContentPolicy.description.getter(uint64_t a1)
{
  if (a1 <= 500)
  {
    unint64_t result = 0x6574697265686E69;
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        unint64_t result = 2038063468;
        break;
      case 2:
        unint64_t result = 0x7463697665;
        break;
      case 3:
        unint64_t result = 0x6E776F447065656BLL;
        break;
      default:
        if (a1 == 500)
        {
          unint64_t result = 0x63617073656D616ELL;
        }
        else
        {
LABEL_17:
          strcpy((char *)v3, "unsupported(");
          v4._countAndFlagsBits = sub_10096D220();
          sub_10096BDC0(v4);
          swift_bridgeObjectRelease();
          v5._countAndFlagsBits = 41;
          v5._object = (void *)0xE100000000000000;
          sub_10096BDC0(v5);
          unint64_t result = v3[0];
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 1000:
      case 1001:
        unint64_t result = 0x63617073656D616ELL;
        break;
      case 1002:
        unint64_t result = 0xD000000000000016;
        break;
      case 1003:
        unint64_t result = 0xD00000000000001ELL;
        break;
      default:
        if (a1 == 501)
        {
          unint64_t result = 0xD000000000000011;
        }
        else
        {
          if (a1 != 502) {
            goto LABEL_17;
          }
          unint64_t result = 0xD000000000000014;
        }
        break;
    }
  }
  return result;
}

unint64_t sub_1005EB99C()
{
  return NSFileProviderContentPolicy.description.getter(*v0);
}

Swift::Bool __swiftcall NSFileProviderContentPolicy.policyRequiersEvictabilityReevaluation(isDir:)(Swift::Bool isDir)
{
  if (v1 > 999)
  {
    if ((unint64_t)(v1 - 1000) < 2) {
      return isDir;
    }
    isDir = 1;
    if (v1 == 1002) {
      return isDir;
    }
    return 0;
  }
  if (v1 != 3)
  {
    if (v1 == 500) {
      return isDir;
    }
    isDir = 1;
    if (v1 == 501) {
      return isDir;
    }
    return 0;
  }
  return 1;
}

Swift::Bool __swiftcall NSFileProviderContentPolicy.policyIsMustDownloadOne(isDir:speculativeFulfilled:)(Swift::Bool isDir, Swift::Bool speculativeFulfilled)
{
  Swift::Bool v3 = 1;
  if (v2 > 999)
  {
    if ((unint64_t)(v2 - 1000) < 2) {
      return isDir;
    }
    if (v2 != 1002) {
      return 0;
    }
    return v3;
  }
  if (v2 == 3) {
    return v3;
  }
  Swift::Bool v3 = isDir;
  if (v2 == 500) {
    return v3;
  }
  if (v2 == 501) {
    return !speculativeFulfilled && !isDir;
  }
  return 0;
}

uint64_t sub_1005EBA68(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  uint64_t v7 = sub_1005EBAF8(a1, a2, 0, a3, a4, 0);
  uint64_t v8 = sub_1005EBAF8(a2, 0, 1, a3, a4, 0);
  uint64_t v9 = 501;
  if (v8 == 3) {
    uint64_t v9 = 3;
  }
  if (v7 != 501) {
    uint64_t v9 = v7;
  }
  if (v9 == 1002 || v9 == 3) {
    unsigned int v11 = 5;
  }
  else {
    unsigned int v11 = 4;
  }
  if (v9 == 500) {
    return 0;
  }
  else {
    return v11;
  }
}

uint64_t sub_1005EBAF8(uint64_t result, uint64_t a2, char a3, char a4, unsigned __int8 a5, unsigned __int8 a6)
{
  char v8 = a3 & 1;
  if (result > 499)
  {
    if (result != 500)
    {
      if (result == 502) {
        goto LABEL_58;
      }
      uint64_t v9 = a2;
      if (result != 1001) {
        goto LABEL_16;
      }
      goto LABEL_12;
    }
LABEL_43:
    if (a5) {
      return 500;
    }
    goto LABEL_45;
  }
  if ((unint64_t)(result - 1) < 3) {
    goto LABEL_58;
  }
  if (result)
  {
    uint64_t v9 = a2;
    goto LABEL_16;
  }
  if (a3) {
    goto LABEL_45;
  }
  uint64_t v9 = 0;
  char v8 = 1;
  if (a2 <= 499)
  {
    if ((unint64_t)(a2 - 1) >= 3)
    {
      unint64_t result = a2;
      if (a2) {
        goto LABEL_16;
      }
LABEL_45:
      if (qword_100ACC1A8 != -1)
      {
        char v17 = a4;
        swift_once();
        a4 = v17;
      }
      uint64_t v11 = 1;
      if ((a4 & 1) == 0) {
        uint64_t v11 = 2;
      }
      uint64_t v12 = 2;
      if (dword_100B0B5E8 == 9) {
        uint64_t v12 = 1;
      }
      if (dword_100B0B5E8 == 3) {
        uint64_t v13 = 1;
      }
      else {
        uint64_t v13 = v12;
      }
      if ((dword_100B0B5E8 - 1) >= 2) {
        return v13;
      }
      else {
        return v11;
      }
    }
    goto LABEL_57;
  }
  if (a2 == 500) {
    goto LABEL_43;
  }
  if (a2 == 502)
  {
LABEL_57:
    unint64_t result = a2;
LABEL_58:
    if (a4) {
      return result;
    }
    goto LABEL_59;
  }
  unint64_t result = a2;
  if (a2 == 1001)
  {
LABEL_12:
    if (a5) {
      return 500;
    }
    else {
      return 2;
    }
  }
LABEL_16:
  if ((unint64_t)(result - 1000) <= 3 && result != 1001)
  {
    if ((a5 & 1) == 0)
    {
      uint64_t v10 = 502;
      if (result != 1003) {
        uint64_t v10 = 0;
      }
      if (result == 1002) {
        uint64_t v10 = 3;
      }
      if (result == 1000) {
        unint64_t result = 1;
      }
      else {
        unint64_t result = v10;
      }
      if (a4) {
        return result;
      }
LABEL_59:
      if (qword_100ACC1A8 != -1)
      {
        uint64_t v16 = result;
        swift_once();
        unint64_t result = v16;
      }
      if ((dword_100B0B5E8 - 1) < 2) {
        return 2;
      }
      return result;
    }
    return 500;
  }
  if (result != 501) {
    goto LABEL_33;
  }
  if (v8)
  {
    if ((a6 & 1) == 0 && (a5 & 1) == 0) {
      return 501;
    }
LABEL_33:
    if (qword_100ACC1A8 != -1)
    {
      char v18 = a4;
      swift_once();
      a4 = v18;
    }
    if ((dword_100B0B5E8 - 1) < 2)
    {
      if (a4) {
        return 1;
      }
      else {
        return 2;
      }
    }
    else
    {
      unint64_t result = 1;
      if (dword_100B0B5E8 != 3 && dword_100B0B5E8 != 9) {
        return 2;
      }
    }
    return result;
  }
  uint64_t v14 = sub_1005EBAF8(v9, 0, 1, a4 & 1, a5 & 1, a6 & 1);
  uint64_t v15 = 501;
  if ((a6 | a5)) {
    uint64_t v15 = v14;
  }
  if (v14 == 3) {
    return 3;
  }
  else {
    return v15;
  }
}

uint64_t sub_1005EBDA4()
{
  uint64_t result = type metadata accessor for ReconciliationID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005EBE40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(a1);
  Swift::String v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v3);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    v18._countAndFlagsBits = 0x28726568746F2ELL;
    v18._object = (void *)0xE700000000000000;
    sub_10096BDC0(v18);
    sub_10096D270();
    v19._countAndFlagsBits = 41;
    v19._object = (void *)0xE100000000000000;
    sub_10096BDC0(v19);
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    v20._countAndFlagsBits = 0x286E69616D2ELL;
    v20._object = (void *)0xE600000000000000;
    sub_10096BDC0(v20);
    sub_10096D270();
    v21._countAndFlagsBits = 41;
    v21._object = (void *)0xE100000000000000;
    sub_10096BDC0(v21);
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v14;
}

uint64_t sub_1005EC104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v41 = *(void *)(a4 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *(void *)(v7 - 8);
  __chkstk_darwin(v5);
  int v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  uint64_t v42 = v10;
  uint64_t v37 = v11;
  uint64_t v38 = v12;
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  uint64_t v13 = type metadata accessor for ReconciliationID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v19 = (char *)&v35 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v39 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v21 = __chkstk_darwin(TupleTypeMetadata2);
  BOOL v23 = (char *)&v35 - v22;
  uint64_t v24 = (char *)&v35 + *(int *)(v21 + 48) - v22;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v25((char *)&v35 - v22, v43, v13);
  v25(v24, v44, v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v25(v19, (uint64_t)v23, v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v31 = v40;
      uint64_t v32 = v35;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v24, a3);
      char v29 = sub_10096BBE0();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
      v33(v32, a3);
      v33(v19, a3);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, a3);
    goto LABEL_7;
  }
  v25(v17, (uint64_t)v23, v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
LABEL_7:
    char v29 = 0;
    uint64_t v14 = v39;
    uint64_t v13 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  uint64_t v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v24, v42);
  char v29 = sub_10096BBE0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v27 + 8);
  v30(v28, v26);
  v30(v17, v26);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
  return v29 & 1;
}

uint64_t sub_1005EC558@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a1[1].i64[1];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a2, v5, v7);
    uint64_t v8 = a1[1].i64[0];
    uint64_t v11 = v7;
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v9 = a1[1].i64[0];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a2, v5, v9);
    uint64_t v11 = a1[1].i64[1];
    uint64_t v12 = v9;
  }
  int8x16_t v13 = vextq_s8(a1[2], a1[2], 8uLL);
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1005EC6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v5);
  int8x16_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v17, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    sub_10096D4C0(1uLL);
    sub_10096BAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    sub_10096D4C0(0);
    sub_10096BAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

Swift::Int sub_1005EC970(uint64_t a1)
{
  sub_10096D4B0();
  sub_1005EC6F4((uint64_t)v3, a1);
  return sub_10096D500();
}

Swift::Int sub_1005EC9C0(uint64_t a1, uint64_t a2)
{
  sub_10096D4B0();
  sub_1005EC6F4((uint64_t)v4, a2);
  return sub_10096D500();
}

uint64_t sub_1005ECA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005EC104(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1005ECA18(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = swift_isaMask & *v1;
  sub_1001F2768(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_10017D1A4((uint64_t)v7);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v4 = 0;
    return v4 & 1;
  }
  char v4 = sub_1005EC104((uint64_t)v1 + *(void *)((swift_isaMask & *v1) + 0x70), (uint64_t)v6 + *(void *)((*v6 & swift_isaMask) + 0x70), *(void *)(v3 + 80), *(void *)(v3 + 88));

  return v4 & 1;
}

uint64_t sub_1005ECB34(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_10096C9D0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = sub_1005ECA18((uint64_t)v8);

  sub_10017D1A4((uint64_t)v8);
  return v6 & 1;
}

Swift::Int sub_1005ECBAC(void *a1)
{
  id v1 = a1;
  Swift::Int v2 = sub_1005ECBE0();

  return v2;
}

Swift::Int sub_1005ECBE0()
{
  uint64_t v0 = type metadata accessor for ReconciliationID();
  return sub_1005EC970(v0);
}

void sub_1005ECC70()
{
}

uint64_t sub_1005ECCDC(void *a1)
{
  id v1 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0x70);
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
}

uint64_t type metadata accessor for ReconciliationIDObject()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ReconciliationID()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1005ECDC8()
{
  uint64_t result = type metadata accessor for ItemReconciliation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005ECE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1005ECEC0(a1, a2);
  return v4;
}

uint64_t sub_1005ECEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 112);
  uint64_t v6 = type metadata accessor for ItemReconciliation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a2;
  return v2;
}

uint64_t sub_1005ECF9C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for ItemReconciliation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1005ED04C()
{
  sub_1005ECF9C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReconciliationIDObjectCacheValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1005ED0BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1005ED188(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1005ED35C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_1005ED498(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1005ED60C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1005ED84C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1005ED9C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1005EDC00(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1005EDD44(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1005EDF1CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1005EDF44(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1005EE00C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t sub_1005EE134()
{
  return swift_getWitnessTable();
}

id sub_1005EE150(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70);
  objc_super v5 = *(objc_super *)((swift_isaMask & *v1) + 0x60);
  v8[1] = *(objc_super *)((swift_isaMask & *v1) + 0x50);
  _OWORD v8[2] = v5;
  uint64_t v6 = type metadata accessor for ReconciliationID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v4, a1, v6);
  v8[0].receiver = v1;
  v8[0].super_class = ObjectType;
  return [(objc_super *)v8 init];
}

id sub_1005EE23C(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1005EE150(a1);
}

void sub_1005EE270()
{
}

void *sub_1005EE2A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100021770(0, v1, 0);
  uint64_t result = (void *)sub_1005F30E8(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    int v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      uint64_t result = sub_100021770((char *)(v13 > 1), v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = v24;
    v15[5] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1005EE4AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    uint64_t v4 = sub_10096B9C0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1005EE554()
{
  type metadata accessor for GSConflictManager();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 24) = 0;
  type metadata accessor for GSRemoteVersionsManager();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = [objc_allocWithZone((Class)FPGSStorageManager) init];
  *(void *)(v0 + 16) = v1;
  if (qword_100ACC0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100ACC0A8;
  id v3 = (id)qword_100AD88D8;
  if (v2 != -1) {
    swift_once();
  }
  [v3 setUnderlyingQueue:qword_100AD88D0];

  static GSConflictManager.instance = v0;
}

uint64_t *GSConflictManager.instance.unsafeMutableAddressor()
{
  if (qword_100ACC0A0 != -1) {
    swift_once();
  }
  return &static GSConflictManager.instance;
}

uint64_t static GSConflictManager.instance.getter()
{
  if (qword_100ACC0A0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1005EE704()
{
  uint64_t v0 = sub_10096C690();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  __chkstk_darwin(v0);
  unint64_t v19 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10096C620();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_10096B7D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v18 - v14;
  v18[1] = sub_100011348(0, (unint64_t *)&qword_100ACBC10);
  sub_10096B780();
  int v22 = _swiftEmptyArrayStorage;
  sub_10002DBFC((unint64_t *)&qword_100ACAF30, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002B7CC((uint64_t *)&unk_100ACBC20);
  sub_10007FBA0();
  sub_10096CA60();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v21);
  uint64_t v16 = sub_10096C6C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_100AD88D0 = v16;
  return result;
}

id sub_1005EEA60()
{
  id result = [objc_allocWithZone((Class)NSOperationQueue) init];
  qword_100AD88D8 = (uint64_t)result;
  return result;
}

uint64_t GSConflictManager.updateListOfConflictsToGS(url:toAdd:toRemove:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a2;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v47 = a3;
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  dispatch_group_t v9 = dispatch_group_create();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = 0;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = &_swiftEmptyDictionarySingleton;
  id v42 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  uint64_t v10 = self;
  sub_10096AD20(v11);
  unint64_t v13 = v12;
  id v14 = [v10 writingIntentWithURL:v12 options:0];

  dispatch_group_t v50 = v9;
  dispatch_group_enter(v9);
  sub_10002B7CC(&qword_100ACAF70);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100974D40;
  *(void *)(v15 + 32) = v14;
  aBlock[0] = v15;
  sub_10096C0C0();
  sub_100011348(0, &qword_100AD88E0);
  id v44 = v14;
  Class isa = sub_10096C080().super.isa;
  swift_bridgeObjectRelease();
  if (qword_100ACC0B0 != -1) {
    swift_once();
  }
  id v40 = (id)qword_100AD88D8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = v6;
  unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  int v22 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (char *)swift_allocObject();
  dispatch_group_t v24 = v50;
  *((void *)v23 + 2) = v51;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v53;
  *((void *)v23 + 4) = v52;
  *((void *)v23 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v23[v16], v22, v19);
  uint64_t v27 = v45;
  uint64_t v26 = v46;
  *(void *)&v23[v17] = v46;
  *(void *)&v23[v18] = v54;
  *(void *)&v23[v20] = v27;
  *(void *)&v23[v21] = v47;
  uint64_t v28 = v43;
  *(void *)&v23[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = v43;
  aBlock[4] = sub_1005F2A5C;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000072D0;
  aBlock[3] = &unk_100A93A20;
  char v29 = _Block_copy(aBlock);
  id v30 = v40;
  uint64_t v31 = v51;
  swift_retain();
  uint64_t v32 = v50;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  Class v33 = isa;
  id v34 = v42;
  [v42 coordinateAccessWithIntents:isa queue:v30 byAccessor:v29];
  _Block_release(v29);

  uint64_t v35 = v31;
  if (qword_100ACC0A8 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)qword_100AD88D0;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v26;
  v37[3] = v28;
  v37[4] = v27;
  v37[5] = v35;
  uint64_t v38 = v49;
  v37[6] = v48;
  v37[7] = v38;
  v37[8] = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1006B791C((uint64_t)"updateListOfConflictsToGS(url:toAdd:toRemove:completion:)", 57, 2, 0, v36, (uint64_t)sub_1005F2B94, (uint64_t)v37);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1005EF008()
{
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1005EF040()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005EF078()
{
  return swift_deallocObject();
}

void sub_1005EF088(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, NSObject *a9, objc_class *a10, uint64_t a11)
{
  v80 = a5;
  uint64_t v18 = sub_10096B480();
  uint64_t v19 = __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  dispatch_group_t v24 = (char *)&v73 - v23;
  if (a1)
  {
    swift_beginAccess();
    *(void *)(a2 + 16) = a1;
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRelease();
    dispatch_group_leave(a3);
    swift_errorRelease();
  }
  else
  {
    uint64_t v79 = a7;
    Class v74 = a10;
    uint64_t v75 = a6;
    v76 = a9;
    uint64_t v77 = v22;
    dispatch_group_enter(a3);
    id v25 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10096B470();
    os_log_type_t v27 = sub_10096C5A0();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v78 = a2;
    if (v28)
    {
      char v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v29 = 134217984;
      aBlock[0] = *(id *)(a4 + 16);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "⚔️  Adding %ld conflicts...", v29, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v30 = v77;
    uint64_t v77 = a11;
    v73 = *(void (**)(char *, uint64_t))(v30 + 8);
    v73(v24, v18);
    uint64_t v31 = (void *)swift_allocObject();
    uint64_t v32 = v79;
    v31[2] = a3;
    v31[3] = v32;
    v31[4] = a8;
    v31[5] = a4;
    v31[6] = v76;
    swift_bridgeObjectRetain();
    Class v33 = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1005F0E28(v75, a4, (uint64_t)sub_1005F307C, (uint64_t)v31);
    swift_release();
    v76 = v33;
    dispatch_group_enter(v33);
    id v34 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    Class v35 = v74;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_10096B470();
    os_log_type_t v37 = sub_10096C5A0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 134217984;
      aBlock[0] = *((id *)v35 + 2);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "⚔️  Removing %ld conflicts...", v38, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v73(v21, v18);
    Class isa = v80[2].isa;
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = sub_1005EE2A0(v40);
    swift_bridgeObjectRelease();
    uint64_t v42 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    unint64_t v44 = v43;
    uint64_t v45 = (void *)swift_allocObject();
    uint64_t v46 = v76;
    uint64_t v47 = v77;
    uint64_t v48 = v78;
    uint64_t v49 = v79;
    v45[2] = v76;
    v45[3] = v48;
    v45[4] = v49;
    v45[5] = v47;
    dispatch_group_t v50 = v41;
    if (v41[2])
    {
      Class v74 = isa;
      uint64_t v51 = (void *)*((void *)isa + 2);
      uint64_t v52 = v46;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      v80 = v52;
      uint64_t v53 = v75;
      sub_10096AD20(v54);
      uint64_t v56 = v55;
      aBlock[0] = 0;
      id v57 = [v51 permanentStorageForItemAtURL:v55 allocateIfNone:0 error:aBlock];

      if (v57)
      {
        id v58 = aBlock[0];
        unint64_t v67 = sub_100434E44(v53, v42, v44);
        swift_bridgeObjectRetain();
        v68 = sub_1005F3170(v67, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100011348(0, (unint64_t *)&qword_100AD0DD0);
        Class v69 = sub_10096C080().super.isa;
        uint64_t v70 = (void *)swift_allocObject();
        Class v71 = v74;
        v70[2] = v68;
        v70[3] = v71;
        v70[4] = sub_1005F30DC;
        v70[5] = v45;
        aBlock[4] = sub_1005F33E8;
        aBlock[5] = v70;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_1005EE4AC;
        aBlock[3] = &unk_100A93BA0;
        v72 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        [v57 removeAdditions:v69 completionHandler:v72];
        _Block_release(v72);

        swift_release();
      }
      else
      {
        id v63 = aBlock[0];
        uint64_t v64 = sub_10096ABF0();

        swift_willThrow();
        unint64_t v65 = sub_100095CAC((uint64_t)_swiftEmptyArrayStorage);
        swift_errorRetain();
        uint64_t v66 = v80;
        sub_1005EFC34(v65, v64, v80, v78, v49, v77);
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();

        swift_release();
      }
      unint64_t v59 = v76;
    }
    else
    {
      unint64_t v59 = v46;
      int v60 = v46;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      v61 = v60;
      unint64_t v62 = sub_100095CAC((uint64_t)_swiftEmptyArrayStorage);
      sub_1005EFC34(v62, 0, v61, v48, v49, v47);

      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    dispatch_group_leave(v59);
  }
}

void sub_1005EF838(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (void *)(a4 + 16);
  unint64_t v13 = (void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100844E8C(a3, a2, v12, v13, a1);
  if (*(void *)(a2 + 16) < *(void *)(a6 + 16))
  {
    swift_beginAccess();
    *(unsigned char *)(a7 + 16) = 1;
  }
  dispatch_group_leave(a3);
}

uint64_t sub_1005EF8F0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v38 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v39 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v41)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v41 = i;
      unint64_t v11 = v10 | (i << 6);
    }
    else
    {
      int64_t v12 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_36;
      }
      if (v12 >= v39)
      {
LABEL_33:
        swift_release();
        swift_beginAccess();
        *a3 = a4;
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRelease();
      }
      unint64_t v13 = *(void *)(v38 + 8 * v12);
      int64_t v14 = i + 1;
      if (!v13)
      {
        int64_t v14 = i + 2;
        if (i + 2 >= v39) {
          goto LABEL_33;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = i + 3;
          if (i + 3 >= v39) {
            goto LABEL_33;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            uint64_t v15 = i + 4;
            if (i + 4 >= v39) {
              goto LABEL_33;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v15);
            if (!v13)
            {
              while (1)
              {
                int64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_37;
                }
                if (v14 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v13 = *(void *)(v38 + 8 * v14);
                ++v15;
                if (v13) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = i + 4;
          }
        }
      }
LABEL_21:
      unint64_t v7 = (v13 - 1) & v13;
      int64_t v41 = v14;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8 * v11);
    swift_beginAccess();
    swift_errorRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = (void *)*a2;
    uint64_t v42 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v23 = sub_10000DDD0(v18, v17);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (v21[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v30 = v42;
        if (v22) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_10091F628();
        uint64_t v30 = v42;
        if (v27) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100379178(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_10000DDD0(v18, v17);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_38;
      }
      unint64_t v23 = v28;
      uint64_t v30 = v42;
      if (v27)
      {
LABEL_4:
        uint64_t v9 = v30[7];
        swift_errorRelease();
        *(void *)(v9 + 8 * v23) = v19;
        goto LABEL_5;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v31 = (uint64_t *)(v30[6] + 16 * v23);
    *uint64_t v31 = v18;
    v31[1] = v17;
    *(void *)(v30[7] + 8 * v23) = v19;
    uint64_t v32 = v30[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_35;
    }
    v30[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:
    *a2 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_errorRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_10096D3C0();
  __break(1u);
  return result;
}

void sub_1005EFC34(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a1;
  uint64_t v9 = 0;
  if (a2)
  {
    unint64_t v11 = (void *)(a4 + 16);
    swift_errorRetain();
    sub_100844370(a3, v11, a2);
  }
  int64_t v12 = (void *)(a5 + 16);
  uint64_t v45 = 0;
  uint64_t v46 = (unsigned char *)(a6 + 16);
  uint64_t v13 = *(void *)(v49 + 64);
  uint64_t v47 = v49 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v49 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v48 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v17 = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  int64_t v50 = v18;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v22 << 6))
  {
    BOOL v25 = (uint64_t *)(*(void *)(v49 + 48) + 16 * i);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(*(void *)(v49 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v9 = a3;
    uint64_t v17 = objc_sync_enter(a3);
    if (v17) {
      goto LABEL_44;
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = (void *)*v12;
    uint64_t v30 = v51;
    *int64_t v12 = 0x8000000000000000;
    unint64_t v32 = sub_10000DDD0(v27, v26);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v17 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    char v35 = v31;
    if (v30[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v37 = v51;
        if (v31) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v17 = (uint64_t)sub_10091F628();
        os_log_type_t v37 = v51;
        if (v35) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_100379178(v17, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = sub_10000DDD0(v27, v26);
      if ((v35 & 1) != (v36 & 1))
      {
        sub_10096D3C0();
        __break(1u);
        return;
      }
      unint64_t v32 = v17;
      os_log_type_t v37 = v51;
      if (v35)
      {
LABEL_27:
        uint64_t v41 = v37[7];
        swift_errorRelease();
        *(void *)(v41 + 8 * v32) = v28;
        goto LABEL_28;
      }
    }
    v37[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v38 = (uint64_t *)(v37[6] + 16 * v32);
    uint64_t *v38 = v27;
    v38[1] = v26;
    *(void *)(v37[7] + 8 * v32) = v28;
    uint64_t v39 = v37[2];
    BOOL v21 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v21) {
      goto LABEL_41;
    }
    v37[2] = v40;
    swift_bridgeObjectRetain();
LABEL_28:
    *int64_t v12 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    a3 = v9;
    uint64_t v42 = objc_sync_exit(v9);
    if (v42)
    {
      __chkstk_darwin(v42);
      unint64_t v44 = v9;
      fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1001E9E84, (uint64_t)v43, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318);
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = swift_errorRelease();
    int64_t v18 = v50;
    if (v16) {
      goto LABEL_6;
    }
LABEL_7:
    BOOL v21 = __OFADD__(v18, 1);
    int64_t v22 = v18 + 1;
    if (v21) {
      goto LABEL_42;
    }
    if (v22 >= v48) {
      break;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v22);
    if (v23) {
      goto LABEL_17;
    }
    int64_t v24 = v22 + 1;
    if (v22 + 1 >= v48) {
      break;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v24);
    if (!v23)
    {
      int64_t v24 = v22 + 2;
      if (v22 + 2 >= v48) {
        break;
      }
      unint64_t v23 = *(void *)(v47 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 3;
        if (v22 + 3 >= v48) {
          break;
        }
        unint64_t v23 = *(void *)(v47 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v22 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              break;
            }
            if (v22 >= v48) {
              goto LABEL_37;
            }
            unint64_t v23 = *(void *)(v47 + 8 * v22);
            ++v24;
            if (v23) {
              goto LABEL_17;
            }
          }
LABEL_43:
          __break(1u);
LABEL_44:
          __chkstk_darwin(v17);
          unint64_t v44 = v9;
          fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_1001E9E7C, (uint64_t)v43, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314);
        }
      }
    }
    int64_t v22 = v24;
LABEL_17:
    unint64_t v16 = (v23 - 1) & v23;
    int64_t v50 = v22;
  }
LABEL_37:
  swift_release();
  if (!*(void *)(v49 + 16))
  {
    swift_beginAccess();
    *uint64_t v46 = 1;
  }
  dispatch_group_leave(a3);
}

uint64_t sub_1005F0088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v54 = a6;
  uint64_t v55 = a5;
  uint64_t v66 = sub_10096B480();
  uint64_t v12 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v56 = (unsigned char *)(a2 + 16);
  uint64_t v53 = (unsigned __int8 *)(a3 + 16);
  id v57 = (uint64_t *)(a4 + 16);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a7 + 16;
  uint64_t v52 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v63 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v64 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  *(void *)&long long v23 = 136315394;
  long long v59 = v23;
  id v58 = (char *)&type metadata for Any + 8;
  unint64_t v62 = v14;
  uint64_t v61 = v15;
  int v60 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v26 >= v64) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v63 + 8 * v26);
    ++v22;
    if (!v27)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v64) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v63 + 8 * v22);
      if (!v27)
      {
        int64_t v22 = v26 + 2;
        if (v26 + 2 >= v64) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v63 + 8 * v22);
        if (!v27) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_22:
    char v29 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v25);
    uint64_t v31 = *v29;
    unint64_t v30 = v29[1];
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v32 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v33 = sub_10096B470();
    os_log_type_t v34 = sub_10096C5B0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      char v36 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      int64_t v65 = v22;
      v67[0] = v37;
      *(_DWORD *)uint64_t v35 = v59;
      swift_bridgeObjectRetain();
      *(void *)(v35 + 4) = sub_100719D44(v31, v30, v67);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2112;
      swift_getErrorValue();
      id v38 = Error.prettyDescription.getter(v67[4]);
      *(void *)(v35 + 14) = v38;
      void *v36 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "⚔️  Error when updating conflict loser with version %s: %@", (uint8_t *)v35, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      uint64_t v20 = v60;
      swift_slowDealloc();
      swift_arrayDestroy();
      int64_t v22 = v65;
      swift_slowDealloc();
      uint64_t v15 = v61;
      uint64_t v14 = v62;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t result = (*v20)(v14, v66);
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v64)
  {
LABEL_24:
    swift_release();
    uint64_t v39 = v56;
    swift_beginAccess();
    if (*v39)
    {
      uint64_t v40 = v53;
      swift_beginAccess();
      uint64_t v41 = *v40;
    }
    else
    {
      uint64_t v41 = 1;
    }
    uint64_t v42 = v57;
    swift_beginAccess();
    uint64_t v43 = *v42;
    if (*v42)
    {
      swift_errorRetain();
      unint64_t v44 = sub_100095640((uint64_t)_swiftEmptyArrayStorage);
      swift_errorRetain();
      v55(v44, v41, v43);
      swift_errorRelease();
    }
    else
    {
      uint64_t v45 = v52;
      swift_beginAccess();
      sub_10014D5C0(*v45);
      if (!v47)
      {
        swift_beginAccess();
        uint64_t v50 = swift_bridgeObjectRetain();
        v55(v50, v41, 0);
        return swift_bridgeObjectRelease();
      }
      uint64_t v48 = v46;
      unint64_t v49 = sub_100095640((uint64_t)_swiftEmptyArrayStorage);
      swift_errorRetain();
      v55(v49, v41, v48);
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  unint64_t v27 = *(void *)(v63 + 8 * v28);
  if (v27)
  {
    int64_t v22 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v22 >= v64) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v63 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void GSConflictManager.listConflicts(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a2;
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  if (qword_100ACC0A8 != -1) {
    swift_once();
  }
  id v9 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = v14;
  v12[1] = a3;
  swift_retain();
  swift_retain();
  sub_1006B8108(v9, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_1005F2BAC, v11);
  swift_release();
}

uint64_t sub_1005F08EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  unint64_t v15 = sub_100093834((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  unint64_t v7 = sub_100434E44(a2, v5, v6);
  swift_bridgeObjectRelease();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    uint64_t v13 = swift_bridgeObjectRetain();
    a3(v13, 0);
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_10096CE70();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)sub_10096CC30();
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      id v14 = v11;
      sub_1005F0AC0(&v14, (uint64_t *)&v15);
    }
    while (v8 != v10);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1005F0AC0(id *a1, uint64_t *a2)
{
  uint64_t v5 = sub_10096B480();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *a1;
  id v10 = [v9 name];
  if (!v10)
  {
    __break(1u);
LABEL_12:

    __break(1u);
    return;
  }
  id v11 = v10;
  id v12 = [self parseEtag:v10];

  if (!v12)
  {
    id v22 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    id v9 = v9;
    long long v23 = sub_10096B470();
    uint64_t v24 = sub_10096C5B0();
    if (!os_log_type_enabled(v23, (os_log_type_t)v24))
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
    uint64_t v33 = v6;
    uint64_t v34 = v2;
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v36 = v32;
    *(_DWORD *)unint64_t v25 = 136315138;
    id v26 = [v9 name];
    if (v26)
    {
      unint64_t v27 = v26;
      v31[1] = v25 + 4;
      uint64_t v28 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v30 = v29;

      uint64_t v35 = sub_100719D44(v28, v30, &v36);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, "⚔️  Loser %s has invalid format, ignoring it...", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
      return;
    }
    goto LABEL_12;
  }
  uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v15 = v14;

  id v16 = [v9 name];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v20 = v19;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *a2;
    *a2 = 0x8000000000000000;
    sub_10038A08C(v18, v20, v13, v15, isUniquelyReferenced_nonNull_native);
    *a2 = v36;
  }
  else
  {
    sub_10091649C(v13, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1005F0E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a1;
  uint64_t v8 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v36 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v40 = (uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = dispatch_group_create();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    uint64_t v30 = a3;
    uint64_t v31 = a4;
    uint64_t v35 = type metadata accessor for GSConflictInfo(0);
    uint64_t v14 = (id *)(a2
               + ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80)));
    uint64_t v34 = *(void *)(*(void *)(v35 - 8) + 72);
    uint64_t v33 = v9 + 7;
    v29[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v38 = v12;
    uint64_t v39 = v11;
    uint64_t v15 = v40;
    uint64_t v32 = v4;
    uint64_t v16 = v11;
    do
    {
      dispatch_group_enter(v10);
      uint64_t v17 = *(int *)(v35 + 24);
      uint64_t v41 = ((char *)v14 + *(int *)(v35 + 20));
      uint64_t v18 = *(uint64_t *)((char *)v14 + v17);
      unint64_t v19 = *(unint64_t *)((char *)v14 + v17 + 8);
      sub_1005F2BD4((uint64_t)v14, v15);
      uint64_t v20 = v10;
      unint64_t v21 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v22 = (v33 + v21) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      *(void *)(v23 + 24) = v16;
      uint64_t v24 = v23 + v21;
      id v10 = v20;
      uint64_t v15 = v40;
      sub_1005F2DAC(v40, v24);
      *(void *)(v23 + v22) = v38;
      sub_10002D830(v18, v19);
      unint64_t v25 = v10;
      swift_retain();
      swift_retain();
      sub_1005F15D8(v37, v14, v41, v18, v19, sub_1005F2E10, v23);
      swift_release();
      sub_10001E9AC(v18, v19);
      uint64_t v14 = (id *)((char *)v14 + v34);
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a3 = v30;
    a4 = v31;
    uint64_t v12 = v38;
    uint64_t v11 = v39;
  }
  if (qword_100ACC0A8 != -1) {
    swift_once();
  }
  id v26 = (void *)qword_100AD88D0;
  unint64_t v27 = (void *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a4;
  v27[4] = v12;
  v27[5] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1006B791C((uint64_t)"saveConflicts(for:conflicts:completionHandler:)", 47, 2, 0, v26, (uint64_t)sub_1005F2EF8, (uint64_t)v27);

  swift_release();
  swift_release();
  return swift_release();
}

void sub_1005F119C(uint64_t a1, NSObject *a2)
{
}

uint64_t sub_1005F1208(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v29[1] = a4;
  uint64_t v6 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10096AE50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002B7CC(&qword_100AD0CD0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1005F2F24(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v15;
    id v17 = sub_1005EA420();
    id v18 = [v17 description];

    uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v21 = v20;

    swift_beginAccess();
    swift_errorRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *a2;
    *a2 = 0x8000000000000000;
    sub_10038CB88(v16, v19, v21, isUniquelyReferenced_nonNull_native);
    *a2 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v24 = (char *)v15 + *(int *)(sub_10002B7CC(&qword_100AD0CD8) + 48);
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v25 = sub_1005EA5A8();
    uint64_t v27 = v26;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    swift_beginAccess();
    sub_100360F14((uint64_t)v8, v25, v27);
    swift_endAccess();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v12, v9);
    return ((uint64_t (*)(char *, uint64_t))v28)(v24, v9);
  }
}

uint64_t sub_1005F152C(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(v7, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005F15D8(uint64_t a1, id *a2, NSObject *a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v124 = a7;
  v125 = a6;
  unint64_t v114 = a5;
  uint64_t v115 = a4;
  v116 = a3;
  uint64_t v117 = a1;
  uint64_t v107 = sub_10096AE50();
  uint64_t v103 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  v102 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for StagedRemoteVersion(0);
  __chkstk_darwin(v113);
  v120 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_10096B480();
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v10 = __chkstk_darwin(v119);
  v108 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v127 = (char *)&v101 - v12;
  uint64_t v106 = sub_10096A7B0();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10002B7CC(&qword_100AD0CD0);
  __chkstk_darwin(v109);
  v110 = (uint64_t *)((char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10002B7CC(&qword_100ACB908);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v18 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v101 - v19;
  uint64_t v122 = sub_10096AB50();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  v112 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v101 - v26;
  uint64_t v28 = sub_10096B0E0();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  long long v111 = xmmword_100973BB0;
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = 0x534650467369;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = &type metadata for Bool;
  uint64_t v33 = 1;
  *(unsigned char *)(inited + 48) = 1;
  uint64_t v34 = (void (*)(char *, void *))sub_10004621C(inited);
  v123 = a2;
  id v35 = [*a2 contentModificationDate];
  if (v35)
  {
    uint64_t v36 = v35;
    sub_10096B0A0();

    uint64_t v33 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v25, v33, 1, v28);
  sub_10001AE98((uint64_t)v25, (uint64_t)v27, (uint64_t *)&unk_100ACB5E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_10002B770((uint64_t)v27, (uint64_t *)&unk_100ACB5E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
    sub_10002B7CC(&qword_100AD89D0);
    uint64_t v37 = (int *)(sub_10002B7CC(&qword_100ACCAD8) - 8);
    unint64_t v38 = (*(unsigned __int8 *)(*(void *)v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v37 + 80);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v111;
    uint64_t v40 = (void *)(v39 + v38);
    unint64_t v41 = v39 + v38 + v37[14];
    *uint64_t v40 = 0xD000000000000010;
    v40[1] = 0x80000001009ADC00;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 16))(v41, v31, v28);
    unint64_t v42 = sub_1000942C4(v39);
    v132 = (void *)sub_10002B7CC(qword_100AD89D8);
    *(void *)&long long v131 = v42;
    sub_100042A48(&v131, &v130);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v129 = v34;
    sub_10037BFD0(&v130, 0x656D75636F44534ELL, 0xEE006F666E49746ELL, isUniquelyReferenced_nonNull_native);
    uint64_t v34 = v129;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v44 = v122;
  uint64_t v45 = v121;
  uint64_t v46 = (uint64_t)v123;
  id v47 = [*v123 mostRecentEditorNameComponents];
  if (v47)
  {
    uint64_t v48 = v47;
    sub_10096AB40();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v18, v49, 1, v44);
  sub_10001AE98((uint64_t)v18, (uint64_t)v20, &qword_100ACB908);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44) == 1)
  {
    sub_10002B770((uint64_t)v20, &qword_100ACB908);
  }
  else
  {
    uint64_t v50 = v112;
    (*(void (**)(void))(v45 + 32))();
    uint64_t v51 = self;
    Class v52 = sub_10096AB30();
    *(void *)&long long v131 = 0;
    id v53 = [v51 archivedDataWithRootObject:v52 requiringSecureCoding:1 error:&v131];

    id v54 = (id)v131;
    if (!v53)
    {
      v83 = v54;
      swift_bridgeObjectRelease();
      uint64_t v84 = sub_10096ABF0();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v44);
      id v85 = (id)fpfs_current_or_default_log();
      v86 = v108;
      sub_10096B490();
      uint64_t v87 = v103;
      v88 = v102;
      uint64_t v89 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v117, v107);
      swift_errorRetain();
      swift_errorRetain();
      v90 = sub_10096B470();
      os_log_type_t v91 = sub_10096C5B0();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = swift_slowAlloc();
        uint64_t v126 = swift_slowAlloc();
        v127 = (char *)swift_slowAlloc();
        *(void *)&long long v131 = v127;
        *(_DWORD *)uint64_t v92 = 136446466;
        sub_10096AD20((NSURL *)&unk_100975000);
        v94 = v93;
        id v95 = objc_msgSend(v93, "fp_shortDescription");

        uint64_t v96 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        v97 = v88;
        unint64_t v99 = v98;

        *(void *)&long long v130 = sub_100719D44(v96, v99, (uint64_t *)&v131);
        sub_10096C8C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v97, v107);
        *(_WORD *)(v92 + 12) = 2112;
        swift_getErrorValue();
        id v100 = Error.prettyDescription.getter(v128);
        *(void *)&long long v130 = v100;
        sub_10096C8C0();
        *(void *)uint64_t v126 = v100;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "failed to add conflict to %{public}s: %@", (uint8_t *)v92, 0x16u);
        sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v108, v119);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v86, v119);
      }
      uint64_t v70 = (uint64_t)v110;
      uint64_t *v110 = v84;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v125(v70);
      swift_errorRelease();
      return sub_10002B770(v70, &qword_100AD0CD0);
    }
    uint64_t v55 = sub_10096AF60();
    unint64_t v57 = v56;

    v132 = &type metadata for Data;
    *(void *)&long long v131 = v55;
    *((void *)&v131 + 1) = v57;
    sub_100042A48(&v131, &v130);
    sub_10001EBB0(v55, v57);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    v129 = v34;
    sub_10037BFD0(&v130, 0xD000000000000021, 0x80000001009ADBD0, v58);
    uint64_t v34 = v129;
    swift_bridgeObjectRelease();
    sub_10001E9C0(v55, v57);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v44);
  }
  id v59 = sub_1005EA420();
  id v60 = [v59 lastEditorDeviceName];

  uint64_t v61 = (uint64_t)v120;
  if (v60)
  {
    uint64_t v62 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v64 = v63;

    v132 = &type metadata for String;
    *(void *)&long long v131 = v62;
    *((void *)&v131 + 1) = v64;
    sub_100042A48(&v131, &v130);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    v129 = v34;
    sub_10037BFD0(&v130, 0xD00000000000001DLL, 0x80000001009ADBB0, v65);
    uint64_t v34 = v129;
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = v127;
  if (os_variant_has_internal_content() && *(unsigned char *)(v126 + 24) == 1)
  {
    swift_bridgeObjectRelease();
    LODWORD(v131) = 12;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_10002DBFC((unint64_t *)&qword_100ACB660, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    unint64_t v67 = v104;
    uint64_t v68 = v106;
    sub_10096ABD0();
    uint64_t v69 = sub_10096A790();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v67, v68);
    uint64_t v70 = (uint64_t)v110;
    uint64_t *v110 = v69;
    swift_storeEnumTagMultiPayload();
    v125(v70);
    return sub_10002B770(v70, &qword_100AD0CD0);
  }
  id v71 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  sub_1005F2BD4(v46, v61);
  v72 = sub_10096B470();
  os_log_type_t v73 = sub_10096C590();
  if (os_log_type_enabled(v72, v73))
  {
    Class v74 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v131 = swift_slowAlloc();
    *(_DWORD *)Class v74 = 136315138;
    uint64_t v75 = sub_1005EA5A8();
    *(void *)&long long v130 = sub_100719D44(v75, v76, (uint64_t *)&v131);
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_1005F2C38(v61);
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "⚔️  Putting loser %s into the Genstore...", v74, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v118 + 8))(v127, v119);
  }
  else
  {
    sub_1005F2C38(v61);

    (*(void (**)(char *, uint64_t))(v118 + 8))(v66, v119);
  }
  uint64_t v77 = (NSString *)sub_1005EA5A8();
  unint64_t v79 = v78;
  v80 = (void (*)(NSURL *, uint64_t))_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  sub_1004335B0(v117, v34, v77, v79, v80, v81, v46 + *(int *)(v113 + 20), v116, v115, v114, 0, 0, v125, v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall GSConflictManager.markAsalwaysFailInGSUpload(_:)(Swift::Bool a1)
{
  if (os_variant_has_internal_content()) {
    *(unsigned char *)(v1 + 24) = a1;
  }
}

uint64_t GSConflictManager.deinit()
{
  swift_release();
  return v0;
}

uint64_t GSConflictManager.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005F2708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return GSConflictManager.updateListOfConflictsToGS(url:toAdd:toRemove:completion:)(a1, a2, a3, a4, a5);
}

void sub_1005F272C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v6 = sub_10096AE50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *v3;
  if (qword_100ACC0A8 != -1) {
    swift_once();
  }
  id v10 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v13 = (void *)(v12 + ((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v13 = v15;
  v13[1] = a3;
  swift_retain();
  swift_retain();
  sub_1006B8108(v10, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_1005F2BAC, v12);
  swift_release();
}

uint64_t sub_1005F2908()
{
  uint64_t v1 = sub_10096AE50();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1005F2A5C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10096AE50() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1005EF088(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(NSObject **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(objc_class **)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1005F2B34()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005F2B94()
{
  return sub_1005F0088(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t type metadata accessor for GSConflictManager()
{
  return self;
}

uint64_t sub_1005F2BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F2C38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005F2C94()
{
  uint64_t v1 = (int *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_release();
  uint64_t v3 = (id *)(v0 + v2);

  uint64_t v4 = (char *)v3 + v1[7];
  uint64_t v5 = sub_10096AE50();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005F2DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1005F2E10(uint64_t a1)
{
  type metadata accessor for StagedRemoteVersion(0);
  uint64_t v3 = *(NSObject **)(v1 + 16);

  sub_1005F119C(a1, v3);
}

uint64_t sub_1005F2EB0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005F2EF8()
{
  return sub_1005F152C(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1005F2F04()
{
  return sub_1005F1208(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1005F2F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD0CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F2F90()
{
  uint64_t v1 = *(void *)(sub_10096AE50() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void (**)(uint64_t, void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005F08EC(v3, v0 + v2, v4);
}

uint64_t sub_1005F3024()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1005F307C(uint64_t a1, uint64_t a2)
{
  sub_1005EF838(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1005F308C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1005F30DC(uint64_t a1, uint64_t a2)
{
  sub_1005EFC34(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1005F30E8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1005F3170(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v25 = v4;
      uint64_t v26 = (void **)(v3 + 32);
      uint64_t v22 = a2 + 7;
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v24 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          unint64_t v8 = (void *)sub_10096CC30();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          unint64_t v8 = v26[v5];
        }
        uint64_t v9 = v8;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_33;
        }
        id v11 = [v8 name];
        if (v11) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return v27;
        }
      }
      uint64_t v12 = v11;
      uint64_t v13 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      unint64_t v3 = (unint64_t)v14;

      uint64_t v15 = (void *)a2[2];
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      uint64_t v16 = a2;
      BOOL v17 = a2[4] == v13 && a2[5] == v3;
      if (v17 || (sub_10096D2D0() & 1) != 0) {
        break;
      }
      if (v15 == (void *)1)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      id v18 = v22;
      uint64_t v19 = 1;
      while (1)
      {
        a2 = (void *)(v19 + 1);
        if (__OFADD__(v19, 1)) {
          break;
        }
        BOOL v20 = *(v18 - 1) == v13 && *v18 == v3;
        if (v20 || (sub_10096D2D0() & 1) != 0) {
          goto LABEL_17;
        }
        v18 += 2;
        ++v19;
        if (a2 == v15) {
          goto LABEL_29;
        }
      }
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v4 = sub_10096CE70();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_10096CCB0();
    sub_10096CCF0();
    sub_10096CD00();
    unint64_t v3 = (unint64_t)&v27;
    sub_10096CCC0();
LABEL_18:
    unint64_t v6 = v24;
    uint64_t v4 = v25;
    a2 = v16;
    uint64_t v7 = v23;
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1005F33A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005F33E8(unint64_t a1, uint64_t a2)
{
  return sub_100434C2C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32));
}

uint64_t BitSet.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t BitSetIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_10096C890();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  id v11 = (char *)&v17 - v10;
  if (sub_10096CA40())
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v13 = v20;
    return v12(v13, 1, 1, v3);
  }
  else
  {
    sub_10096BFA0();
    swift_getAssociatedConformanceWitness();
    uint64_t v15 = sub_10096C970();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    uint64_t v16 = v20;
    BitSet.init(bit:)(v15, v7, v20);
    sub_10096CA30();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v16, 0, 1, v3);
  }
}

uint64_t BitSet.init(bit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(a2 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  swift_getAssociatedConformanceWitness();
  sub_10096D390();
  sub_10096D2A0();
  uint64_t v14 = v11;
  sub_10014D284();
  sub_10096C980();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_10096D5C0();
}

uint64_t CustomStringConvertibleBitSet.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_10096C890();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v47 - v11);
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = __chkstk_darwin(v10);
  uint64_t v49 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v50 = (uint64_t *)((char *)&v47 - v17);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v47 - v18);
  uint64_t v20 = (char *)&v47 + *(int *)(TupleTypeMetadata2 + 48) - v18;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  uint64_t v53 = a2;
  v21(a1, a2);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v51(v7, v2, a1);
  uint64_t v54 = v13;
  int v22 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v12, 1, TupleTypeMetadata2);
  uint64_t v55 = v5;
  uint64_t v52 = TupleTypeMetadata2;
  if (v22 == 1)
  {
    *uint64_t v19 = 0;
    v19[1] = 0xE000000000000000;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    unint64_t v24 = v20;
    v23(v20, v7, a1);
    (*(void (**)(uint64_t *, uint64_t))(v47 + 8))(v12, v48);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    uint64_t v25 = (char *)v12 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v26 = v12[1];
    *uint64_t v19 = *v12;
    v19[1] = v26;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    unint64_t v24 = v20;
    v27(v20, v25, a1);
  }
  uint64_t v28 = v53;
  uint64_t v29 = *(void *)(v53 + 16);
  uint64_t v30 = sub_10096CA40();
  if (v30)
  {
    uint64_t v31 = v52;
    uint64_t v32 = v49;
    uint64_t v33 = (char *)v49 + *(int *)(v52 + 48);
    uint64_t v34 = *v19;
    uint64_t v35 = v19[1];
    *uint64_t v49 = *v19;
    v32[1] = v35;
    v51(v33, (uint64_t)v24, a1);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v55 + 8);
    swift_bridgeObjectRetain();
    v36(v33, a1);
  }
  else
  {
    __chkstk_darwin(v30);
    *(&v47 - 2) = a1;
    *(&v47 - 1) = v28;
    uint64_t v56 = sub_1005F41E0((void (*)(char *, char *))sub_1005F41C0, (uint64_t)(&v47 - 4), a1, (char *)&type metadata for String, (uint64_t)&type metadata for Never, *(void *)(v29 + 16), (uint64_t)&protocol witness table for Never, v37);
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    sub_1000A6FD8();
    uint64_t v34 = sub_10096BB50();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t v31 = v52;
    uint64_t v40 = v50;
    unint64_t v41 = (char *)v50 + *(int *)(v52 + 48);
    uint64_t v42 = *v19;
    unint64_t v43 = v19[1];
    uint64_t *v50 = *v19;
    v40[1] = v43;
    v51(v41, (uint64_t)v24, a1);
    if ((v43 & 0x2000000000000000) != 0) {
      uint64_t v44 = HIBYTE(v43) & 0xF;
    }
    else {
      uint64_t v44 = v42 & 0xFFFFFFFFFFFFLL;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, a1);
    if (v44)
    {
      uint64_t v45 = v19[1];
      uint64_t v56 = *v19;
      uint64_t v57 = v45;
      swift_bridgeObjectRetain();
      v58._countAndFlagsBits = 124;
      v58._object = (void *)0xE100000000000000;
      sub_10096BDC0(v58);
      v59._countAndFlagsBits = v34;
      v59._object = v39;
      sub_10096BDC0(v59);
      swift_bridgeObjectRelease();
      uint64_t v34 = v56;
    }
  }
  (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v19, v31);
  return v34;
}

void sub_1005F3EE4(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t CustomStringConvertibleBitSet.bitSetDescription.getter@<X0>(uint64_t a1@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);

  return v3(a1, 1, 1, TupleTypeMetadata2);
}

uint64_t sub_1005F3F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1005F3FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = *(void *)(a2 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a2);
  if (!v14)
  {
    uint64_t v19 = 30768;
    unint64_t v20 = 0xE200000000000000;
    sub_10096BFA0();
    swift_getAssociatedConformanceWitness();
    v21._countAndFlagsBits = sub_10096BEB0();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    uint64_t v12 = v19;
    unint64_t v14 = v20;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  uint64_t v16 = v18;
  *uint64_t v18 = v12;
  v16[1] = v14;
  return result;
}

uint64_t sub_1005F41C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005F3FB0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005F41E0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  Swift::String v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_10096C890();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = sub_10096BF00();
  uint64_t v61 = sub_10096CD20();
  uint64_t v56 = sub_10096CD30();
  sub_10096CCD0(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  Swift::String v59 = v30;
  uint64_t result = sub_10096BEF0();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_10096C8B0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_10096CD10();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_10096C8B0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    unint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_10096CD10();
      sub_10096C8B0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_1005F48DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005F496C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1005F4A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1005F4A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1005F4AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1005F4B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1005F4B64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1005F4CC0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1005F4ED8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for BitSetIterator()
{
  return sub_10014D080();
}

uint64_t sub_1005F4F18()
{
  uint64_t v0 = type metadata accessor for SnapshotItem();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    uint64_t v11 = *(void *)(v0 - 8) + 64;
    uint64_t AssociatedTypeWitness = type metadata accessor for SnapshotItem();
    if (v4 > 0x3F) {
      return AssociatedTypeWitness;
    }
    uint64_t v12 = *(void *)(AssociatedTypeWitness - 8) + 64;
    int v13 = (char *)&value witness table for Builtin.Int64 + 64;
    unsigned int v14 = &unk_100986CA8;
    swift_getTupleTypeLayout();
    uint64_t v16 = &v15;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v5 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      uint64_t v11 = *(void *)(AssociatedTypeWitness - 8) + 64;
      uint64_t v6 = sub_10096C890();
      uint64_t v1 = v6;
      if (v7 <= 0x3F)
      {
        uint64_t v12 = *(void *)(v6 - 8) + 64;
        int v13 = (char *)&unk_100986CC0;
        unsigned int v14 = &unk_100986CA8;
        swift_getTupleTypeLayout();
        uint64_t v17 = &v10;
        swift_getTupleTypeLayout3();
        uint64_t v18 = &v9;
        uint64_t v19 = &unk_100986CA8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v1;
}

void *sub_1005F5134(char *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v512 = *(void *)(AssociatedTypeWitness - 8);
  int v488 = *(_DWORD *)(v512 + 80);
  uint64_t v501 = *(void *)(v512 + 64);
  uint64_t v453 = v501 + v488;
  uint64_t v445 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v445 - 8);
  uint64_t v505 = v2;
  int v484 = *(_DWORD *)(v2 + 80);
  uint64_t v443 = swift_getAssociatedTypeWitness();
  uint64_t v504 = *(void *)(v443 - 8);
  int v480 = *(_DWORD *)(v504 + 80);
  uint64_t v515 = v484 & 0xF8 | v480 | 7u;
  uint64_t v440 = v501 + v515;
  uint64_t v444 = *(void *)(v2 + 64) + 7;
  uint64_t v442 = v480 + 8;
  uint64_t v469 = v480;
  uint64_t v441 = *(void *)(v504 + 64) + 7;
  uint64_t v461 = sub_10096B0E0();
  uint64_t v3 = *(void *)(v461 - 8);
  int v476 = *(_DWORD *)(v3 + 80);
  uint64_t v4 = v476;
  uint64_t v5 = v476 | 7;
  uint64_t v509 = v5 + 16;
  unint64_t v446 = ((((v441 + ((v442 + (v444 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v480)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v463 = v476 + 12;
  size_t v6 = *(void *)(v3 + 64);
  size_t v462 = v6 + v476;
  size_t v436 = v6 + 12;
  uint64_t v457 = v3;
  uint64_t v458 = v476 + 10;
  unsigned int v498 = *(_DWORD *)(v3 + 84);
  size_t v464 = v6;
  if (v498) {
    size_t v7 = *(void *)(*(void *)(v461 - 8) + 64);
  }
  else {
    size_t v7 = v6 + 1;
  }
  size_t __n = v7;
  size_t v459 = v7 + 7;
  unint64_t v438 = (v476
        + 10
        + ((((((v6
              + 12
              + ((v6 + v476 + (v463 & ~(unint64_t)v476)) & ~(unint64_t)v476)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v476;
  unint64_t v491 = (((((((((v7 + 7 + v438) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v460 = v491 + 16;
  unint64_t v439 = (v5
        + 16
        + ((v501 + v515 + (v453 & ~(unint64_t)v488)) & ~v515)
        + ((((v441
            + ((v480 + 8 + (v444 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v480)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v5;
  size_t v495 = ((((v439 + v491 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v449 = v9;
  uint64_t v450 = v8;
  int v473 = *(_DWORD *)(v9 + 80);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v447 = v11;
  uint64_t v448 = v10;
  int v472 = *(_DWORD *)(v11 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v451 = v13;
  uint64_t v452 = v12;
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v472 & 0xF8 | v14 | 7;
  uint64_t v16 = v15 | v473 | v476;
  size_t v437 = v495 + v16;
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = v17 + v473;
  uint64_t v19 = v17 + v15;
  uint64_t v20 = *(void *)(v11 + 64) + 7;
  uint64_t v21 = v14 + 8;
  uint64_t v22 = *(void *)(v13 + 64) + 7;
  unint64_t v23 = ((((v22 + ((v14 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v465 = v476 | 7;
  unint64_t v24 = (v491 + ((v509 + ((v17 + v15 + (v18 & ~(unint64_t)v473)) & ~v15) + v23) & ~v5) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((((v25 + ((v495 + v16) & ~v16) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v27 = v488;
  unint64_t v28 = v515 | v488 | (unint64_t)v476;
  uint64_t v29 = v28 + v501;
  unsigned int v30 = *(_DWORD *)(v512 + 84);
  uint64_t v31 = *(unsigned int *)(v2 + 84);
  if (v31 <= *(_DWORD *)(v504 + 84)) {
    unsigned int v32 = *(_DWORD *)(v504 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v2 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    unsigned int v33 = 2147483646;
  }
  else {
    unsigned int v33 = v32;
  }
  if (v33 <= v30) {
    unsigned int v34 = *(_DWORD *)(v512 + 84);
  }
  else {
    unsigned int v34 = v33;
  }
  if (v498 <= 0x7FFFFFFE) {
    unsigned int v35 = 2147483646;
  }
  else {
    unsigned int v35 = v498;
  }
  if (v34 <= v35) {
    unsigned int v36 = v35;
  }
  else {
    unsigned int v36 = v34;
  }
  if (v36 <= 0x7FFFFFFF) {
    int v37 = 0x7FFFFFFF;
  }
  else {
    int v37 = v36;
  }
  if (((v495 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24 > v26) {
    unint64_t v26 = ((v495 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v38 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v38 > v26) {
    unint64_t v26 = v38;
  }
  if (v26 <= 0x10) {
    uint64_t v39 = 16;
  }
  else {
    uint64_t v39 = v26;
  }
  unint64_t v40 = v15 | v473 | v28;
  if (v40 == 7
    && ((v484 | v488 | v480 | v476 | v473 | v472 | *(_DWORD *)(v451 + 80)) & 0x100000) == 0
    && (v39 | 1uLL) <= 0x18)
  {
    int v481 = v37;
    uint64_t v485 = v28 + v501;
    unsigned int v477 = *(_DWORD *)(v504 + 84);
    uint64_t v492 = v18;
    unsigned int v41 = *((unsigned __int8 *)a2 + v39);
    if (v41 >= 4) {
      unsigned int v41 = *(_DWORD *)a2 + 4;
    }
    uint64_t v42 = ~v469;
    uint64_t v494 = ~v465;
    uint64_t v43 = ~v4;
    uint64_t v44 = ~v15;
    uint64_t v45 = ~v14;
    unint64_t v46 = v25 + 16;
    unint64_t v47 = ~v28;
    switch(v41)
    {
      case 1u:
        unint64_t v475 = ~(unint64_t)v488;
        uint64_t v490 = v39;
        uint64_t v493 = ~v515;
        uint64_t v517 = v43;
        v471 = *(void (**)(char *, uint64_t *, uint64_t))(v512 + 16);
        v471((char *)a1, a2, AssociatedTypeWitness);
        v503 = (char *)(((unint64_t)a1 + v485) & v47);
        uint64_t v89 = (char *)(((unint64_t)a2 + v485) & v47);
        v507 = v89;
        if (v30 == v37)
        {
          uint64_t v90 = v42;
          int v91 = (*(uint64_t (**)(void))(v512 + 48))();
          v88 = a1;
          uint64_t v92 = v457;
          v93 = (char *)(((unint64_t)a1 + v485) & v47);
          uint64_t v94 = AssociatedTypeWitness;
          uint64_t v95 = v440;
LABEL_100:
          if (v91)
          {
LABEL_101:
            v345 = v507;
            memcpy(v93, v507, v495);
LABEL_102:
            size_t v346 = __n;
LABEL_119:
            unint64_t v431 = ((((v439
                     + ((((((((((v438 + v346 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v432 = (unint64_t)&v93[v431];
            unint64_t v433 = (unint64_t)&v345[v431];
            *(unsigned char *)unint64_t v432 = *(unsigned char *)v433;
            v432 &= 0xFFFFFFFFFFFFFFF8;
            v433 &= 0xFFFFFFFFFFFFFFF8;
            *(void *)(v432 + 8) = *(void *)(v433 + 8);
            *(void *)(v432 + 16) = *(void *)(v433 + 16);
            char v236 = 1;
            goto LABEL_120;
          }
          unint64_t v135 = (unint64_t)&v507[v453] & v475;
          unint64_t v136 = (v95 + v135) & v493;
LABEL_104:
          v471(v93, (uint64_t *)v507, v94);
          unint64_t v347 = (unint64_t)&v93[v453] & v475;
          v471((char *)v347, (uint64_t *)v135, v94);
          unint64_t v348 = (v95 + v347) & v493;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v505 + 16))(v348, v136, v445);
          v349 = (void *)((v444 + v348) & 0xFFFFFFFFFFFFFFF8);
          v350 = (void *)((v444 + v136) & 0xFFFFFFFFFFFFFFF8);
          void *v349 = *v350;
          unint64_t v351 = ((unint64_t)v349 + v442) & v90;
          unint64_t v352 = ((unint64_t)v350 + v442) & v90;
          v353 = *(void (**)(unint64_t, unint64_t, uint64_t))(v504 + 16);
          swift_bridgeObjectRetain();
          v353(v351, v352, v443);
          v354 = (void *)((v441 + v352) & 0xFFFFFFFFFFFFFFF8);
          v355 = (void *)((v441 + v351) & 0xFFFFFFFFFFFFFFF8);
          void *v355 = *v354;
          v356 = (void *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8);
          v357 = (void *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v356 = *v357;
          v356[1] = v357[1];
          v358 = (void *)(v348 + v446);
          void *v358 = *(void *)(v136 + v446);
          v358[1] = *(void *)(v136 + v446 + 8);
          unint64_t v359 = (v509 + v348 + v446) & v494;
          unint64_t v360 = (v509 + v136 + v446) & v494;
          *(unsigned char *)unint64_t v359 = *(unsigned char *)v360;
          uint64_t v361 = v359 | 4;
          int v362 = *(_DWORD *)(v360 | 4);
          *(unsigned char *)(v361 + 4) = *(unsigned char *)((v360 | 4) + 4);
          *(_DWORD *)uint64_t v361 = v362;
          *(_WORD *)(v359 + 10) = *(_WORD *)(v360 + 0xA);
          unint64_t v514 = v359;
          uint64_t v363 = (v463 + v359) & v517;
          unint64_t v510 = v360;
          uint64_t v364 = (v463 + v360) & v517;
          v365 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v365(v363, v364, v461);
          uint64_t v366 = (v462 + v364) & v517;
          v365((v462 + v363) & v517, v366, v461);
          v367 = (unsigned char *)(((v462 + v363) & v517) + v464);
          unsigned char *v367 = *(unsigned char *)(v366 + v464);
          v367[1] = *(unsigned char *)(v366 + v464 + 1);
          v367[2] = *(unsigned char *)(v366 + v464 + 2);
          v367[3] = *(unsigned char *)(v366 + v464 + 3);
          v367[4] = *(unsigned char *)(v366 + v464 + 4);
          unint64_t v368 = (unint64_t)(v367 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v369 = (v366 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v368 = *(void *)v369;
          *(void *)(v368 + 8) = *(void *)(v369 + 8);
          *(unsigned char *)(v368 + 16) = *(unsigned char *)(v369 + 16);
          *(unsigned char *)(v368 + 17) = *(unsigned char *)(v369 + 17);
          *(unsigned char *)(v368 + 18) = *(unsigned char *)(v369 + 18);
          *(unsigned char *)(v368 + 19) = *(unsigned char *)(v369 + 19);
          unint64_t v370 = (v368 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v371 = (v369 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v370 = *(void *)v371;
          *(unsigned char *)(v370 + 8) = *(unsigned char *)(v371 + 8);
          *(unsigned char *)(v370 + 9) = *(unsigned char *)(v371 + 9);
          *(unsigned char *)(v370 + 10) = *(unsigned char *)(v371 + 10);
          *(unsigned char *)(v370 + 11) = *(unsigned char *)(v371 + 11);
          *(unsigned char *)(v370 + 12) = *(unsigned char *)(v371 + 12);
          v372 = (void *)((v369 + 47) & 0xFFFFFFFFFFFFFFF8);
          v373 = (void *)((v368 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v373 = *v372;
          unint64_t v374 = ((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v375 = ((unint64_t)v372 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v374 = *(void *)v375;
          *(unsigned char *)(v374 + 8) = *(unsigned char *)(v375 + 8);
          *(unsigned char *)(v374 + 9) = *(unsigned char *)(v375 + 9);
          v376 = (void *)((v458 + v374) & v517);
          v377 = (const void *)((v458 + v375) & v517);
          v378 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v92 + 48);
          swift_bridgeObjectRetain();
          if (v378(v377, 1, v461))
          {
            memcpy(v376, v377, __n);
          }
          else
          {
            v365((uint64_t)v376, (uint64_t)v377, v461);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v376, 0, 1, v461);
          }
          unsigned int v379 = v498;
          v380 = (void *)(((unint64_t)v376 + v459) & 0xFFFFFFFFFFFFFFF8);
          v381 = (void *)(((unint64_t)v377 + v459) & 0xFFFFFFFFFFFFFFF8);
          void *v380 = *v381;
          unint64_t v382 = ((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v383 = ((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v384 = *(void *)v383;
          *(unsigned char *)(v382 + 8) = *(unsigned char *)(v383 + 8);
          *(void *)unint64_t v382 = v384;
          v385 = (void *)(((unint64_t)v380 + 31) & 0xFFFFFFFFFFFFFFF8);
          v386 = (void *)(((unint64_t)v381 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v385 = *v386;
          unint64_t v387 = ((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFFFF8;
          v388 = (uint64_t *)(((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v389 = v388[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v389 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v387 = *(_OWORD *)v388;
          }
          else
          {
            uint64_t v390 = *v388;
            sub_10001EBB0(*v388, v389);
            *(void *)unint64_t v387 = v390;
            *(void *)(v387 + 8) = v389;
          }
          unint64_t v391 = (v387 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v392 = ((unint64_t)v388 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v393 = *(void *)v392;
          *(unsigned char *)(v391 + 8) = *(unsigned char *)(v392 + 8);
          *(void *)unint64_t v391 = v393;
          *(unsigned char *)(v391 + 9) = *(unsigned char *)(v392 + 9);
          unint64_t v394 = (v391 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v395 = (v392 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v396 = *(_DWORD *)v395;
          *(unsigned char *)(v394 + 4) = *(unsigned char *)(v395 + 4);
          *(_DWORD *)unint64_t v394 = v396;
          v397 = (void *)((v391 + 25) & 0xFFFFFFFFFFFFFFF8);
          v398 = (void *)((v392 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v397 = *v398;
          v397[1] = v398[1];
          unint64_t v399 = v460 + v514;
          v400 = (long long *)(v460 + v510);
          unint64_t v401 = *(void *)(v460 + v510 + 16);
          if (v401 >= 0xFFFFFFFF) {
            LODWORD(v401) = -1;
          }
          int v402 = v401 - 1;
          swift_bridgeObjectRetain();
          if (v402 < 0)
          {
            *(void *)unint64_t v399 = *(void *)v400;
            *(unsigned char *)(v399 + 8) = *((unsigned char *)v400 + 8);
            *(unsigned char *)(v399 + 9) = *((unsigned char *)v400 + 9);
            uint64_t v415 = *((void *)v400 + 2);
            swift_errorRetain();
            *(void *)(v399 + 16) = v415;
            uint64_t v416 = *((void *)v400 + 3);
            swift_errorRetain();
            *(void *)(v399 + 24) = v416;
            *(unsigned char *)(v399 + 32) = *((unsigned char *)v400 + 32);
            *(unsigned char *)(v399 + 33) = *((unsigned char *)v400 + 33);
            *(unsigned char *)(v399 + 34) = *((unsigned char *)v400 + 34);
            *(void *)(v399 + 40) = *((void *)v400 + 5);
            *(void *)(v399 + 48) = *((void *)v400 + 6);
            *(void *)(v399 + 56) = *((void *)v400 + 7);
            *(void *)(v399 + 64) = *((void *)v400 + 8);
            *(unsigned char *)(v399 + 72) = *((unsigned char *)v400 + 72);
            *(void *)(v399 + 80) = *((void *)v400 + 10);
            *(void *)(v399 + 88) = *((void *)v400 + 11);
            v521 = (void *)*((void *)v400 + 12);
            *(void *)(v399 + 96) = v521;
            *(unsigned char *)(v399 + 104) = *((unsigned char *)v400 + 104);
            *(unsigned char *)(v399 + 105) = *((unsigned char *)v400 + 105);
            *(void *)(v399 + 112) = *((void *)v400 + 14);
            *(void *)(v399 + 120) = *((void *)v400 + 15);
            *(void *)(v399 + 128) = *((void *)v400 + 16);
            *(void *)(v399 + 136) = *((void *)v400 + 17);
            *(void *)(v399 + 144) = *((void *)v400 + 18);
            *(void *)(v399 + 152) = *((void *)v400 + 19);
            *(void *)(v399 + 160) = *((void *)v400 + 20);
            *(void *)(v399 + 168) = *((void *)v400 + 21);
            *(unsigned char *)(v399 + 176) = *((unsigned char *)v400 + 176);
            *(void *)(v399 + 184) = *((void *)v400 + 23);
            uint64_t v417 = *((void *)v400 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v418 = v521;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v417)
            {
              *(void *)(v399 + 192) = v417;
              *(void *)(v399 + 200) = *((void *)v400 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v399 + 192) = v400[12];
            }
            v88 = a1;
            size_t v346 = v464;
            unsigned int v379 = v498;
            *(void *)(v399 + 208) = *((void *)v400 + 26);
            *(void *)(v399 + 216) = *((void *)v400 + 27);
            *(void *)(v399 + 224) = *((void *)v400 + 28);
            *(void *)(v399 + 232) = *((void *)v400 + 29);
            *(void *)(v399 + 240) = *((void *)v400 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v403 = *v400;
            long long v404 = v400[1];
            long long v405 = v400[3];
            *(_OWORD *)(v399 + 32) = v400[2];
            *(_OWORD *)(v399 + 48) = v405;
            *(_OWORD *)unint64_t v399 = v403;
            *(_OWORD *)(v399 + 16) = v404;
            long long v406 = v400[4];
            long long v407 = v400[5];
            long long v408 = v400[7];
            *(_OWORD *)(v399 + 96) = v400[6];
            *(_OWORD *)(v399 + 112) = v408;
            *(_OWORD *)(v399 + 64) = v406;
            *(_OWORD *)(v399 + 80) = v407;
            long long v409 = v400[8];
            long long v410 = v400[9];
            long long v411 = v400[11];
            *(_OWORD *)(v399 + 160) = v400[10];
            *(_OWORD *)(v399 + 176) = v411;
            *(_OWORD *)(v399 + 128) = v409;
            *(_OWORD *)(v399 + 144) = v410;
            long long v412 = v400[12];
            long long v413 = v400[13];
            long long v414 = v400[14];
            *(void *)(v399 + 240) = *((void *)v400 + 30);
            *(_OWORD *)(v399 + 208) = v413;
            *(_OWORD *)(v399 + 224) = v414;
            *(_OWORD *)(v399 + 192) = v412;
            size_t v346 = v464;
          }
          v419 = (_OWORD *)((v399 + 255) & 0xFFFFFFFFFFFFFFF8);
          v420 = (long long *)(((unint64_t)v400 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v421 = *v420;
          *(_OWORD *)((char *)v419 + 9) = *(long long *)((char *)v420 + 9);
          _OWORD *v419 = v421;
          unint64_t v422 = (v399 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v423 = ((unint64_t)v400 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v424 = *(_OWORD *)v423;
          *(unsigned char *)(v422 + 16) = *(unsigned char *)(v423 + 16);
          *(_OWORD *)unint64_t v422 = v424;
          v425 = (void *)((v399 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v426 = ((unint64_t)v400 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v427 = *(void *)v426;
          v426 += 15;
          void *v425 = v427;
          v428 = (void *)(((unint64_t)v425 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v429 = *(void *)(v426 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v430 = *(void *)((v426 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v429, v430);
          void *v428 = v429;
          v428[1] = v430;
          v93 = v503;
          v345 = v507;
          if (v379) {
            goto LABEL_119;
          }
          goto LABEL_102;
        }
        unint64_t v135 = (unint64_t)&v89[v453] & v475;
        uint64_t v95 = v440;
        unint64_t v136 = (v440 + v135) & v493;
        if (v33 == v481)
        {
          if (v31 == v33)
          {
            uint64_t v90 = v42;
            int v91 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v505 + 48))((v440 + v135) & v493, v31, v445);
            v88 = a1;
            uint64_t v92 = v457;
LABEL_99:
            v93 = (char *)(((unint64_t)a1 + v485) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            goto LABEL_100;
          }
          v342 = (unint64_t *)((v444 + v136) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v92 = v457;
          if (v32 <= 0x7FFFFFFE)
          {
            uint64_t v90 = v42;
            unint64_t v343 = *v342;
            if (v343 >= 0xFFFFFFFF) {
              LODWORD(v343) = -1;
            }
            v88 = a1;
            v93 = (char *)(((unint64_t)a1 + v485) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            if ((v343 + 1) >= 2) {
              goto LABEL_101;
            }
            goto LABEL_104;
          }
          uint64_t v90 = v42;
          int v91 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v504 + 48))(((unint64_t)v342 + v442) & v42, v477, v443);
        }
        else
        {
          unint64_t v220 = v136 + v446;
          uint64_t v92 = v457;
          if ((v36 & 0x80000000) != 0)
          {
            uint64_t v90 = v42;
            v88 = a1;
            uint64_t v344 = (v463 + ((v509 + v220) & v494)) & v517;
            v93 = (char *)(((unint64_t)a1 + v485) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            if (v498 < 0x7FFFFFFE)
            {
              unint64_t v435 = *(void *)(((v436 + ((v462 + v344) & v517)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v435 >= 0xFFFFFFFF) {
                LODWORD(v435) = -1;
              }
              if ((v435 + 1) >= 2) {
                goto LABEL_101;
              }
              goto LABEL_104;
            }
            int v91 = (*(uint64_t (**)(uint64_t))(v457 + 48))(v344);
            goto LABEL_100;
          }
          uint64_t v90 = v42;
          unint64_t v221 = *(void *)(v220 + 8);
          if (v221 >= 0xFFFFFFFF) {
            LODWORD(v221) = -1;
          }
          int v91 = v221 + 1;
        }
        v88 = a1;
        goto LABEL_99;
      case 2u:
        unint64_t v500 = v46;
        uint64_t v490 = v39;
        uint64_t v96 = *(void (**)(void *, uint64_t *, uint64_t))(v449 + 16);
        unint64_t v497 = v23;
        uint64_t v483 = v21;
        uint64_t v487 = v22;
        uint64_t v518 = v43;
        uint64_t v97 = v20;
        uint64_t v479 = v45;
        uint64_t v98 = v44;
        v96((char *)a1, a2, v450);
        unint64_t v99 = ((unint64_t)a1 + v492) & ~(unint64_t)v473;
        unint64_t v100 = ((unint64_t)a2 + v492) & ~(unint64_t)v473;
        v96((void *)v99, (uint64_t *)v100, v450);
        unint64_t v101 = (v19 + v99) & v98;
        unint64_t v102 = (v19 + v100) & v98;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v447 + 16))(v101, v102, v448);
        uint64_t v103 = (void *)((v97 + v101) & 0xFFFFFFFFFFFFFFF8);
        v104 = (void *)((v97 + v102) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v103 = *v104;
        unint64_t v105 = ((unint64_t)v103 + v483) & v479;
        unint64_t v106 = ((unint64_t)v104 + v483) & v479;
        uint64_t v107 = *(void (**)(unint64_t, unint64_t, uint64_t))(v451 + 16);
        swift_bridgeObjectRetain();
        v107(v105, v106, v452);
        v108 = (void *)((v487 + v106) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v109 = (void *)((v487 + v105) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v109 = *v108;
        v110 = (void *)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v111 = (void *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v110 = *v111;
        v110[1] = v111[1];
        v112 = (void *)(v497 + v101);
        void *v112 = *(void *)(v497 + v102);
        v112[1] = *(void *)(v497 + v102 + 8);
        unint64_t v113 = (v509 + v497 + v101) & v494;
        unint64_t v114 = (v509 + v497 + v102) & v494;
        *(unsigned char *)unint64_t v113 = *(unsigned char *)v114;
        uint64_t v115 = v113 | 4;
        int v116 = *(_DWORD *)(v114 | 4);
        *(unsigned char *)(v115 + 4) = *(unsigned char *)((v114 | 4) + 4);
        *(_DWORD *)uint64_t v115 = v116;
        *(_WORD *)(v113 + 10) = *(_WORD *)(v114 + 0xA);
        unint64_t v513 = v113;
        uint64_t v117 = (v463 + v113) & v518;
        uint64_t v118 = (v463 + v114) & v518;
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v457 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v119(v117, v118, v461);
        uint64_t v120 = (v462 + v117) & v518;
        uint64_t v121 = (v462 + v118) & v518;
        v119(v120, v121, v461);
        uint64_t v122 = (unsigned char *)(v120 + v464);
        *uint64_t v122 = *(unsigned char *)(v121 + v464);
        v122[1] = *(unsigned char *)(v121 + v464 + 1);
        v122[2] = *(unsigned char *)(v121 + v464 + 2);
        v122[3] = *(unsigned char *)(v121 + v464 + 3);
        v122[4] = *(unsigned char *)(v121 + v464 + 4);
        unint64_t v123 = (v120 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v124 = (v121 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v123 = *(void *)v124;
        *(void *)(v123 + 8) = *(void *)(v124 + 8);
        *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
        *(unsigned char *)(v123 + 17) = *(unsigned char *)(v124 + 17);
        *(unsigned char *)(v123 + 18) = *(unsigned char *)(v124 + 18);
        *(unsigned char *)(v123 + 19) = *(unsigned char *)(v124 + 19);
        unint64_t v125 = (v123 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v126 = (v124 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v125 = *(void *)v126;
        *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
        *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
        *(unsigned char *)(v125 + 10) = *(unsigned char *)(v126 + 10);
        *(unsigned char *)(v125 + 11) = *(unsigned char *)(v126 + 11);
        *(unsigned char *)(v125 + 12) = *(unsigned char *)(v126 + 12);
        v127 = (void *)((v124 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v128 = (void *)((v123 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v128 = *v127;
        unint64_t v129 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v129 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        long long v131 = (void *)((v458 + v129) & v518);
        v132 = (const void *)((v458 + v130) & v518);
        v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v457 + 48);
        swift_bridgeObjectRetain();
        if (v133(v132, 1, v461))
        {
          memcpy(v131, v132, __n);
        }
        else
        {
          v119((uint64_t)v131, (uint64_t)v132, v461);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v131, 0, 1, v461);
        }
        v137 = (void *)(((unint64_t)v131 + v459) & 0xFFFFFFFFFFFFFFF8);
        v138 = (void *)(((unint64_t)v132 + v459) & 0xFFFFFFFFFFFFFFF8);
        void *v137 = *v138;
        unint64_t v139 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v140 = ((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v141 = *(void *)v140;
        *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
        *(void *)unint64_t v139 = v141;
        v142 = (void *)(((unint64_t)v137 + 31) & 0xFFFFFFFFFFFFFFF8);
        v143 = (void *)(((unint64_t)v138 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v142 = *v143;
        unint64_t v144 = ((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8;
        v145 = (uint64_t *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v146 = v145[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v146 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v144 = *(_OWORD *)v145;
        }
        else
        {
          uint64_t v147 = *v145;
          sub_10001EBB0(*v145, v146);
          *(void *)unint64_t v144 = v147;
          *(void *)(v144 + 8) = v146;
        }
        unint64_t v148 = (v144 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v149 = ((unint64_t)v145 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v150 = *(void *)v149;
        *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
        *(void *)unint64_t v148 = v150;
        *(unsigned char *)(v148 + 9) = *(unsigned char *)(v149 + 9);
        unint64_t v151 = (v148 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v152 = (v149 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v153 = *(_DWORD *)v152;
        *(unsigned char *)(v151 + 4) = *(unsigned char *)(v152 + 4);
        *(_DWORD *)unint64_t v151 = v153;
        v154 = (void *)((v148 + 25) & 0xFFFFFFFFFFFFFFF8);
        v155 = (void *)((v149 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v154 = *v155;
        v154[1] = v155[1];
        unint64_t v156 = v513 + v460;
        v157 = (long long *)(v114 + v460);
        unint64_t v158 = *(void *)(v114 + v460 + 16);
        if (v158 >= 0xFFFFFFFF) {
          LODWORD(v158) = -1;
        }
        int v159 = v158 - 1;
        swift_bridgeObjectRetain();
        if (v159 < 0)
        {
          *(void *)unint64_t v156 = *(void *)v157;
          *(unsigned char *)(v156 + 8) = *((unsigned char *)v157 + 8);
          *(unsigned char *)(v156 + 9) = *((unsigned char *)v157 + 9);
          uint64_t v173 = *((void *)v157 + 2);
          swift_errorRetain();
          *(void *)(v156 + 16) = v173;
          uint64_t v174 = *((void *)v157 + 3);
          swift_errorRetain();
          *(void *)(v156 + 24) = v174;
          *(unsigned char *)(v156 + 32) = *((unsigned char *)v157 + 32);
          *(unsigned char *)(v156 + 33) = *((unsigned char *)v157 + 33);
          *(unsigned char *)(v156 + 34) = *((unsigned char *)v157 + 34);
          *(void *)(v156 + 40) = *((void *)v157 + 5);
          *(void *)(v156 + 48) = *((void *)v157 + 6);
          *(void *)(v156 + 56) = *((void *)v157 + 7);
          *(void *)(v156 + 64) = *((void *)v157 + 8);
          *(unsigned char *)(v156 + 72) = *((unsigned char *)v157 + 72);
          *(void *)(v156 + 80) = *((void *)v157 + 10);
          *(void *)(v156 + 88) = *((void *)v157 + 11);
          v519 = (void *)*((void *)v157 + 12);
          *(void *)(v156 + 96) = v519;
          *(unsigned char *)(v156 + 104) = *((unsigned char *)v157 + 104);
          *(unsigned char *)(v156 + 105) = *((unsigned char *)v157 + 105);
          *(void *)(v156 + 112) = *((void *)v157 + 14);
          *(void *)(v156 + 120) = *((void *)v157 + 15);
          *(void *)(v156 + 128) = *((void *)v157 + 16);
          *(void *)(v156 + 136) = *((void *)v157 + 17);
          *(void *)(v156 + 144) = *((void *)v157 + 18);
          *(void *)(v156 + 152) = *((void *)v157 + 19);
          *(void *)(v156 + 160) = *((void *)v157 + 20);
          *(void *)(v156 + 168) = *((void *)v157 + 21);
          *(unsigned char *)(v156 + 176) = *((unsigned char *)v157 + 176);
          *(void *)(v156 + 184) = *((void *)v157 + 23);
          uint64_t v175 = *((void *)v157 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v176 = v519;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v175)
          {
            *(void *)(v156 + 192) = v175;
            *(void *)(v156 + 200) = *((void *)v157 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v156 + 192) = v157[12];
          }
          v172 = a2;
          *(void *)(v156 + 208) = *((void *)v157 + 26);
          *(void *)(v156 + 216) = *((void *)v157 + 27);
          *(void *)(v156 + 224) = *((void *)v157 + 28);
          *(void *)(v156 + 232) = *((void *)v157 + 29);
          *(void *)(v156 + 240) = *((void *)v157 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v160 = *v157;
          long long v161 = v157[1];
          long long v162 = v157[3];
          *(_OWORD *)(v156 + 32) = v157[2];
          *(_OWORD *)(v156 + 48) = v162;
          *(_OWORD *)unint64_t v156 = v160;
          *(_OWORD *)(v156 + 16) = v161;
          long long v163 = v157[4];
          long long v164 = v157[5];
          long long v165 = v157[7];
          *(_OWORD *)(v156 + 96) = v157[6];
          *(_OWORD *)(v156 + 112) = v165;
          *(_OWORD *)(v156 + 64) = v163;
          *(_OWORD *)(v156 + 80) = v164;
          long long v166 = v157[8];
          long long v167 = v157[9];
          long long v168 = v157[11];
          *(_OWORD *)(v156 + 160) = v157[10];
          *(_OWORD *)(v156 + 176) = v168;
          *(_OWORD *)(v156 + 128) = v166;
          *(_OWORD *)(v156 + 144) = v167;
          long long v169 = v157[12];
          long long v170 = v157[13];
          long long v171 = v157[14];
          *(void *)(v156 + 240) = *((void *)v157 + 30);
          *(_OWORD *)(v156 + 208) = v170;
          *(_OWORD *)(v156 + 224) = v171;
          *(_OWORD *)(v156 + 192) = v169;
          v172 = a2;
        }
        v222 = (_OWORD *)((v156 + 255) & 0xFFFFFFFFFFFFFFF8);
        v223 = (long long *)(((unint64_t)v157 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v224 = *v223;
        *(_OWORD *)((char *)v222 + 9) = *(long long *)((char *)v223 + 9);
        _OWORD *v222 = v224;
        unint64_t v225 = (v156 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v226 = ((unint64_t)v157 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v227 = *(_OWORD *)v226;
        *(unsigned char *)(v225 + 16) = *(unsigned char *)(v226 + 16);
        *(_OWORD *)unint64_t v225 = v227;
        v228 = (void *)((v156 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = ((unint64_t)v157 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v230 = *(void *)v229;
        v229 += 15;
        void *v228 = v230;
        v231 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v232 = *(void *)(v229 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v233 = *(void *)((v229 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v232, v233);
        void *v231 = v232;
        v231[1] = v233;
        v88 = a1;
        *((unsigned char *)a1 + v500) = *((unsigned char *)v172 + v500);
        unint64_t v234 = ((unint64_t)a1 + v500) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v235 = ((unint64_t)v172 + v500) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v234 + 8) = *(void *)(v235 + 8);
        *(void *)(v234 + 16) = *(void *)(v235 + 16);
        char v236 = 2;
LABEL_120:
        *((unsigned char *)v88 + v490) = v236;
        goto LABEL_121;
      case 3u:
        uint64_t v134 = a2[1];
        v88 = a1;
        *a1 = *a2;
        a1[1] = v134;
        *((unsigned char *)a1 + v39) = 3;
        goto LABEL_121;
      default:
        uint64_t v466 = ~v16;
        unint64_t v468 = ~(unint64_t)v473;
        uint64_t v470 = v44;
        uint64_t v474 = v20;
        uint64_t v478 = v45;
        uint64_t v482 = v21;
        uint64_t v486 = v22;
        unint64_t v496 = v23;
        unint64_t v499 = v46;
        uint64_t v489 = v39;
        uint64_t v48 = v42;
        uint64_t v49 = *(void (**)(void *, uint64_t *, uint64_t))(v512 + 16);
        uint64_t v50 = ~v27;
        v49((char *)a1, a2, AssociatedTypeWitness);
        unint64_t v51 = ((unint64_t)a1 + v453) & v50;
        uint64_t v52 = ((unint64_t)a2 + v453) & v50;
        v49((void *)v51, (uint64_t *)v52, AssociatedTypeWitness);
        unint64_t v53 = (v51 + v501 + v515) & ~v515;
        uint64_t v54 = (v52 + v501 + v515) & ~v515;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v505 + 16))(v53, v54, v445);
        uint64_t v55 = (void *)((v444 + v53) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v56 = (void *)((v444 + v54) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v55 = *v56;
        unint64_t v57 = ((unint64_t)v55 + v442) & v48;
        unint64_t v58 = ((unint64_t)v56 + v442) & v48;
        Swift::String v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v504 + 16);
        swift_bridgeObjectRetain();
        v59(v57, v58, v443);
        uint64_t v60 = (void *)((v441 + v58) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v61 = (void *)((v441 + v57) & 0xFFFFFFFFFFFFFFF8);
        void *v61 = *v60;
        uint64_t v62 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v63 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v62 = *v63;
        v62[1] = v63[1];
        uint64_t v64 = (void *)(v446 + v53);
        *uint64_t v64 = *(void *)(v446 + v54);
        v64[1] = *(void *)(v446 + v54 + 8);
        unint64_t v65 = (v509 + v446 + v53) & v494;
        unint64_t v66 = (v509 + v446 + v54) & v494;
        *(unsigned char *)unint64_t v65 = *(unsigned char *)v66;
        uint64_t v67 = v65 | 4;
        int v68 = *(_DWORD *)(v66 | 4);
        *(unsigned char *)(v67 + 4) = *(unsigned char *)((v66 | 4) + 4);
        *(_DWORD *)uint64_t v67 = v68;
        *(_WORD *)(v65 + 10) = *(_WORD *)(v66 + 0xA);
        uint64_t v69 = (v463 + v65) & v43;
        uint64_t v70 = (v463 + v66) & v43;
        uint64_t v71 = v43;
        v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v457 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72(v69, v70, v461);
        uint64_t v73 = (v462 + v69) & v71;
        uint64_t v74 = (v462 + v70) & v71;
        v72(v73, v74, v461);
        uint64_t v75 = (unsigned char *)(v73 + v464);
        *uint64_t v75 = *(unsigned char *)(v74 + v464);
        v75[1] = *(unsigned char *)(v74 + v464 + 1);
        v75[2] = *(unsigned char *)(v74 + v464 + 2);
        v75[3] = *(unsigned char *)(v74 + v464 + 3);
        v75[4] = *(unsigned char *)(v74 + v464 + 4);
        unint64_t v76 = (v73 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v77 = (v74 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v76 = *(void *)v77;
        *(void *)(v76 + 8) = *(void *)(v77 + 8);
        *(unsigned char *)(v76 + 16) = *(unsigned char *)(v77 + 16);
        *(unsigned char *)(v76 + 17) = *(unsigned char *)(v77 + 17);
        *(unsigned char *)(v76 + 18) = *(unsigned char *)(v77 + 18);
        *(unsigned char *)(v76 + 19) = *(unsigned char *)(v77 + 19);
        unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v79 = (v77 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v78 = *(void *)v79;
        *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
        *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
        *(unsigned char *)(v78 + 10) = *(unsigned char *)(v79 + 10);
        *(unsigned char *)(v78 + 11) = *(unsigned char *)(v79 + 11);
        *(unsigned char *)(v78 + 12) = *(unsigned char *)(v79 + 12);
        v80 = (void *)((v77 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v81 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v81 = *v80;
        unint64_t v82 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v83 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v82 = *(void *)v83;
        *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
        *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
        uint64_t v84 = (void *)((v458 + v82) & v71);
        uint64_t v516 = v71;
        id v85 = (const void *)((v458 + v83) & v71);
        v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v457 + 48);
        swift_bridgeObjectRetain();
        v502 = v86;
        if (v86(v85, 1, v461))
        {
          memcpy(v84, v85, __n);
        }
        else
        {
          v72((uint64_t)v84, (uint64_t)v85, v461);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v84, 0, 1, v461);
        }
        v88 = a1;
        v177 = (void *)(((unint64_t)v84 + v459) & 0xFFFFFFFFFFFFFFF8);
        v178 = (void *)(((unint64_t)v85 + v459) & 0xFFFFFFFFFFFFFFF8);
        void *v177 = *v178;
        unint64_t v179 = ((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v180 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v181 = *(void *)v180;
        *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
        *(void *)unint64_t v179 = v181;
        v182 = (void *)(((unint64_t)v177 + 31) & 0xFFFFFFFFFFFFFFF8);
        v183 = (void *)(((unint64_t)v178 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v182 = *v183;
        unint64_t v184 = ((unint64_t)v182 + 15) & 0xFFFFFFFFFFFFFFF8;
        v185 = (uint64_t *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v186 = v185[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v186 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v184 = *(_OWORD *)v185;
        }
        else
        {
          uint64_t v187 = *v185;
          sub_10001EBB0(*v185, v186);
          *(void *)unint64_t v184 = v187;
          *(void *)(v184 + 8) = v186;
        }
        unint64_t v188 = (v184 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v189 = ((unint64_t)v185 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v190 = *(void *)v189;
        *(unsigned char *)(v188 + 8) = *(unsigned char *)(v189 + 8);
        *(void *)unint64_t v188 = v190;
        *(unsigned char *)(v188 + 9) = *(unsigned char *)(v189 + 9);
        unint64_t v191 = (v188 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v192 = (v189 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v193 = *(_DWORD *)v192;
        *(unsigned char *)(v191 + 4) = *(unsigned char *)(v192 + 4);
        *(_DWORD *)unint64_t v191 = v193;
        v194 = (void *)((v188 + 25) & 0xFFFFFFFFFFFFFFF8);
        v195 = (void *)((v189 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v194 = *v195;
        v194[1] = v195[1];
        unint64_t v196 = v460 + v65;
        unint64_t v197 = v460 + v66;
        unint64_t v198 = *(void *)(v460 + v66 + 16);
        if (v198 >= 0xFFFFFFFF) {
          LODWORD(v198) = -1;
        }
        int v199 = v198 - 1;
        swift_bridgeObjectRetain();
        if (v199 < 0)
        {
          *(void *)unint64_t v196 = *(void *)v197;
          *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
          *(unsigned char *)(v196 + 9) = *(unsigned char *)(v197 + 9);
          uint64_t v216 = *(void *)(v197 + 16);
          swift_errorRetain();
          *(void *)(v196 + 16) = v216;
          uint64_t v217 = *(void *)(v197 + 24);
          swift_errorRetain();
          *(void *)(v196 + 24) = v217;
          *(unsigned char *)(v196 + 32) = *(unsigned char *)(v197 + 32);
          *(unsigned char *)(v196 + 33) = *(unsigned char *)(v197 + 33);
          *(unsigned char *)(v196 + 34) = *(unsigned char *)(v197 + 34);
          *(void *)(v196 + 40) = *(void *)(v197 + 40);
          *(void *)(v196 + 48) = *(void *)(v197 + 48);
          *(void *)(v196 + 56) = *(void *)(v197 + 56);
          *(void *)(v196 + 64) = *(void *)(v197 + 64);
          *(unsigned char *)(v196 + 72) = *(unsigned char *)(v197 + 72);
          *(void *)(v196 + 80) = *(void *)(v197 + 80);
          *(void *)(v196 + 88) = *(void *)(v197 + 88);
          v218 = *(void **)(v197 + 96);
          *(void *)(v196 + 96) = v218;
          *(unsigned char *)(v196 + 104) = *(unsigned char *)(v197 + 104);
          *(unsigned char *)(v196 + 105) = *(unsigned char *)(v197 + 105);
          *(void *)(v196 + 112) = *(void *)(v197 + 112);
          *(void *)(v196 + 120) = *(void *)(v197 + 120);
          *(void *)(v196 + 128) = *(void *)(v197 + 128);
          *(void *)(v196 + 136) = *(void *)(v197 + 136);
          *(void *)(v196 + 144) = *(void *)(v197 + 144);
          *(void *)(v196 + 152) = *(void *)(v197 + 152);
          *(void *)(v196 + 160) = *(void *)(v197 + 160);
          *(void *)(v196 + 168) = *(void *)(v197 + 168);
          *(unsigned char *)(v196 + 176) = *(unsigned char *)(v197 + 176);
          *(void *)(v196 + 184) = *(void *)(v197 + 184);
          uint64_t v454 = *(void *)(v197 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v219 = v218;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v454)
          {
            *(void *)(v196 + 192) = v454;
            *(void *)(v196 + 200) = *(void *)(v197 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v196 + 192) = *(_OWORD *)(v197 + 192);
          }
          v88 = a1;
          uint64_t v212 = v461;
          uint64_t v214 = v447;
          uint64_t v213 = v448;
          size_t v215 = v437;
          *(void *)(v196 + 208) = *(void *)(v197 + 208);
          *(void *)(v196 + 216) = *(void *)(v197 + 216);
          *(void *)(v196 + 224) = *(void *)(v197 + 224);
          *(void *)(v196 + 232) = *(void *)(v197 + 232);
          *(void *)(v196 + 240) = *(void *)(v197 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v200 = *(_OWORD *)v197;
          long long v201 = *(_OWORD *)(v197 + 16);
          long long v202 = *(_OWORD *)(v197 + 48);
          *(_OWORD *)(v196 + 32) = *(_OWORD *)(v197 + 32);
          *(_OWORD *)(v196 + 48) = v202;
          *(_OWORD *)unint64_t v196 = v200;
          *(_OWORD *)(v196 + 16) = v201;
          long long v203 = *(_OWORD *)(v197 + 64);
          long long v204 = *(_OWORD *)(v197 + 80);
          long long v205 = *(_OWORD *)(v197 + 112);
          *(_OWORD *)(v196 + 96) = *(_OWORD *)(v197 + 96);
          *(_OWORD *)(v196 + 112) = v205;
          *(_OWORD *)(v196 + 64) = v203;
          *(_OWORD *)(v196 + 80) = v204;
          long long v206 = *(_OWORD *)(v197 + 128);
          long long v207 = *(_OWORD *)(v197 + 144);
          long long v208 = *(_OWORD *)(v197 + 176);
          *(_OWORD *)(v196 + 160) = *(_OWORD *)(v197 + 160);
          *(_OWORD *)(v196 + 176) = v208;
          *(_OWORD *)(v196 + 128) = v206;
          *(_OWORD *)(v196 + 144) = v207;
          long long v209 = *(_OWORD *)(v197 + 192);
          long long v210 = *(_OWORD *)(v197 + 208);
          long long v211 = *(_OWORD *)(v197 + 224);
          *(void *)(v196 + 240) = *(void *)(v197 + 240);
          *(_OWORD *)(v196 + 208) = v210;
          *(_OWORD *)(v196 + 224) = v211;
          *(_OWORD *)(v196 + 192) = v209;
          uint64_t v212 = v461;
          uint64_t v214 = v447;
          uint64_t v213 = v448;
          size_t v215 = v437;
        }
        v237 = (_OWORD *)((v196 + 255) & 0xFFFFFFFFFFFFFFF8);
        v238 = (long long *)((v197 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v239 = *v238;
        *(_OWORD *)((char *)v237 + 9) = *(long long *)((char *)v238 + 9);
        _OWORD *v237 = v239;
        unint64_t v240 = (v196 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v241 = (v197 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v242 = *(_OWORD *)v241;
        *(unsigned char *)(v240 + 16) = *(unsigned char *)(v241 + 16);
        *(_OWORD *)unint64_t v240 = v242;
        v243 = (void *)((v196 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v244 = (v197 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v245 = *(void *)v244;
        v244 += 15;
        void *v243 = v245;
        v246 = (void *)(((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v247 = *(void *)(v244 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v248 = *(void *)((v244 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v247, v248);
        void *v246 = v247;
        v246[1] = v248;
        unint64_t v249 = ((unint64_t)v88 + v215) & v466;
        size_t v250 = ((unint64_t)a2 + v215) & v466;
        v251 = *(void (**)(unint64_t, size_t, uint64_t))(v449 + 16);
        v251(v249, v250, v450);
        unint64_t v508 = v249;
        unint64_t v252 = (v492 + v249) & v468;
        size_t v467 = v250;
        unint64_t v253 = (v492 + v250) & v468;
        v251(v252, v253, v450);
        unint64_t v254 = (v19 + v252) & v470;
        unint64_t v255 = (v19 + v253) & v470;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v214 + 16))(v254, v255, v213);
        v256 = (void *)((v474 + v254) & 0xFFFFFFFFFFFFFFF8);
        v257 = (void *)((v474 + v255) & 0xFFFFFFFFFFFFFFF8);
        void *v256 = *v257;
        unint64_t v258 = ((unint64_t)v256 + v482) & v478;
        unint64_t v259 = ((unint64_t)v257 + v482) & v478;
        v260 = *(void (**)(unint64_t, unint64_t, uint64_t))(v451 + 16);
        swift_bridgeObjectRetain();
        v260(v258, v259, v452);
        v261 = (void *)((v486 + v258) & 0xFFFFFFFFFFFFFFF8);
        v262 = (void *)((v486 + v259) & 0xFFFFFFFFFFFFFFF8);
        void *v261 = *v262;
        v263 = (void *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
        v264 = (void *)(((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v263 = *v264;
        v263[1] = v264[1];
        v265 = (void *)(v254 + v496);
        void *v265 = *(void *)(v255 + v496);
        v265[1] = *(void *)(v255 + v496 + 8);
        unint64_t v266 = (v509 + v254 + v496) & v494;
        unint64_t v267 = (v509 + v255 + v496) & v494;
        *(unsigned char *)unint64_t v266 = *(unsigned char *)v267;
        uint64_t v268 = v266 | 4;
        int v269 = *(_DWORD *)(v267 | 4);
        *(unsigned char *)(v268 + 4) = *(unsigned char *)((v267 | 4) + 4);
        *(_DWORD *)uint64_t v268 = v269;
        *(_WORD *)(v266 + 10) = *(_WORD *)(v267 + 0xA);
        uint64_t v270 = (v463 + v266) & v516;
        uint64_t v271 = (v463 + v267) & v516;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72(v270, v271, v212);
        uint64_t v272 = (v462 + v270) & v516;
        uint64_t v273 = (v462 + v271) & v516;
        v72(v272, v273, v212);
        v274 = (unsigned char *)(v272 + v464);
        unsigned char *v274 = *(unsigned char *)(v273 + v464);
        v274[1] = *(unsigned char *)(v273 + v464 + 1);
        v274[2] = *(unsigned char *)(v273 + v464 + 2);
        v274[3] = *(unsigned char *)(v273 + v464 + 3);
        v274[4] = *(unsigned char *)(v273 + v464 + 4);
        unint64_t v275 = (v272 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v276 = (v273 + v464 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v275 = *(void *)v276;
        *(void *)(v275 + 8) = *(void *)(v276 + 8);
        *(unsigned char *)(v275 + 16) = *(unsigned char *)(v276 + 16);
        *(unsigned char *)(v275 + 17) = *(unsigned char *)(v276 + 17);
        *(unsigned char *)(v275 + 18) = *(unsigned char *)(v276 + 18);
        *(unsigned char *)(v275 + 19) = *(unsigned char *)(v276 + 19);
        unint64_t v277 = (v275 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v278 = (v276 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v277 = *(void *)v278;
        *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
        *(unsigned char *)(v277 + 9) = *(unsigned char *)(v278 + 9);
        *(unsigned char *)(v277 + 10) = *(unsigned char *)(v278 + 10);
        *(unsigned char *)(v277 + 11) = *(unsigned char *)(v278 + 11);
        *(unsigned char *)(v277 + 12) = *(unsigned char *)(v278 + 12);
        v279 = (void *)((v275 + 47) & 0xFFFFFFFFFFFFFFF8);
        v280 = (void *)((v276 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v279 = *v280;
        unint64_t v281 = ((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v281 = *(void *)v282;
        *(unsigned char *)(v281 + 8) = *(unsigned char *)(v282 + 8);
        *(unsigned char *)(v281 + 9) = *(unsigned char *)(v282 + 9);
        v283 = (void *)((v458 + v281) & v516);
        v284 = (const void *)((v458 + v282) & v516);
        swift_bridgeObjectRetain();
        if (v502(v284, 1, v212))
        {
          memcpy(v283, v284, __n);
        }
        else
        {
          v72((uint64_t)v283, (uint64_t)v284, v212);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v283, 0, 1, v212);
        }
        v285 = (void *)(((unint64_t)v283 + v459) & 0xFFFFFFFFFFFFFFF8);
        v286 = (void *)(((unint64_t)v284 + v459) & 0xFFFFFFFFFFFFFFF8);
        void *v285 = *v286;
        unint64_t v287 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v289 = *(void *)v288;
        *(unsigned char *)(v287 + 8) = *(unsigned char *)(v288 + 8);
        *(void *)unint64_t v287 = v289;
        v290 = (void *)(((unint64_t)v285 + 31) & 0xFFFFFFFFFFFFFFF8);
        v291 = (void *)(((unint64_t)v286 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v290 = *v291;
        unint64_t v292 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
        v293 = (uint64_t *)(((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v294 = v293[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v294 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v292 = *(_OWORD *)v293;
        }
        else
        {
          uint64_t v295 = *v293;
          sub_10001EBB0(*v293, v294);
          *(void *)unint64_t v292 = v295;
          *(void *)(v292 + 8) = v294;
        }
        unint64_t v296 = (v292 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v297 = ((unint64_t)v293 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v298 = *(void *)v297;
        *(unsigned char *)(v296 + 8) = *(unsigned char *)(v297 + 8);
        *(void *)unint64_t v296 = v298;
        *(unsigned char *)(v296 + 9) = *(unsigned char *)(v297 + 9);
        unint64_t v299 = (v296 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v300 = (v297 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v301 = *(_DWORD *)v300;
        *(unsigned char *)(v299 + 4) = *(unsigned char *)(v300 + 4);
        *(_DWORD *)unint64_t v299 = v301;
        v302 = (void *)((v296 + 25) & 0xFFFFFFFFFFFFFFF8);
        v303 = (void *)((v297 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v302 = *v303;
        v302[1] = v303[1];
        unint64_t v304 = v266 + v460;
        v305 = (long long *)(v267 + v460);
        unint64_t v306 = *(void *)(v267 + v460 + 16);
        if (v306 >= 0xFFFFFFFF) {
          LODWORD(v306) = -1;
        }
        int v307 = v306 - 1;
        swift_bridgeObjectRetain();
        if (v307 < 0)
        {
          *(void *)unint64_t v304 = *(void *)v305;
          *(unsigned char *)(v304 + 8) = *((unsigned char *)v305 + 8);
          *(unsigned char *)(v304 + 9) = *((unsigned char *)v305 + 9);
          uint64_t v322 = *((void *)v305 + 2);
          swift_errorRetain();
          *(void *)(v304 + 16) = v322;
          uint64_t v323 = *((void *)v305 + 3);
          swift_errorRetain();
          *(void *)(v304 + 24) = v323;
          *(unsigned char *)(v304 + 32) = *((unsigned char *)v305 + 32);
          *(unsigned char *)(v304 + 33) = *((unsigned char *)v305 + 33);
          *(unsigned char *)(v304 + 34) = *((unsigned char *)v305 + 34);
          *(void *)(v304 + 40) = *((void *)v305 + 5);
          *(void *)(v304 + 48) = *((void *)v305 + 6);
          *(void *)(v304 + 56) = *((void *)v305 + 7);
          *(void *)(v304 + 64) = *((void *)v305 + 8);
          *(unsigned char *)(v304 + 72) = *((unsigned char *)v305 + 72);
          *(void *)(v304 + 80) = *((void *)v305 + 10);
          *(void *)(v304 + 88) = *((void *)v305 + 11);
          v520 = (void *)*((void *)v305 + 12);
          *(void *)(v304 + 96) = v520;
          *(unsigned char *)(v304 + 104) = *((unsigned char *)v305 + 104);
          *(unsigned char *)(v304 + 105) = *((unsigned char *)v305 + 105);
          *(void *)(v304 + 112) = *((void *)v305 + 14);
          *(void *)(v304 + 120) = *((void *)v305 + 15);
          *(void *)(v304 + 128) = *((void *)v305 + 16);
          *(void *)(v304 + 136) = *((void *)v305 + 17);
          *(void *)(v304 + 144) = *((void *)v305 + 18);
          *(void *)(v304 + 152) = *((void *)v305 + 19);
          *(void *)(v304 + 160) = *((void *)v305 + 20);
          *(void *)(v304 + 168) = *((void *)v305 + 21);
          *(unsigned char *)(v304 + 176) = *((unsigned char *)v305 + 176);
          *(void *)(v304 + 184) = *((void *)v305 + 23);
          uint64_t v324 = *((void *)v305 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v325 = v520;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v324)
          {
            *(void *)(v304 + 192) = v324;
            *(void *)(v304 + 200) = *((void *)v305 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v304 + 192) = v305[12];
          }
          v88 = a1;
          unint64_t v320 = v508;
          size_t v321 = v467;
          *(void *)(v304 + 208) = *((void *)v305 + 26);
          *(void *)(v304 + 216) = *((void *)v305 + 27);
          *(void *)(v304 + 224) = *((void *)v305 + 28);
          *(void *)(v304 + 232) = *((void *)v305 + 29);
          *(void *)(v304 + 240) = *((void *)v305 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v308 = *v305;
          long long v309 = v305[1];
          long long v310 = v305[3];
          *(_OWORD *)(v304 + 32) = v305[2];
          *(_OWORD *)(v304 + 48) = v310;
          *(_OWORD *)unint64_t v304 = v308;
          *(_OWORD *)(v304 + 16) = v309;
          long long v311 = v305[4];
          long long v312 = v305[5];
          long long v313 = v305[7];
          *(_OWORD *)(v304 + 96) = v305[6];
          *(_OWORD *)(v304 + 112) = v313;
          *(_OWORD *)(v304 + 64) = v311;
          *(_OWORD *)(v304 + 80) = v312;
          long long v314 = v305[8];
          long long v315 = v305[9];
          long long v316 = v305[11];
          *(_OWORD *)(v304 + 160) = v305[10];
          *(_OWORD *)(v304 + 176) = v316;
          *(_OWORD *)(v304 + 128) = v314;
          *(_OWORD *)(v304 + 144) = v315;
          long long v317 = v305[12];
          long long v318 = v305[13];
          long long v319 = v305[14];
          *(void *)(v304 + 240) = *((void *)v305 + 30);
          *(_OWORD *)(v304 + 208) = v318;
          *(_OWORD *)(v304 + 224) = v319;
          *(_OWORD *)(v304 + 192) = v317;
          unint64_t v320 = v508;
          size_t v321 = v467;
        }
        v326 = (_OWORD *)((v304 + 255) & 0xFFFFFFFFFFFFFFF8);
        v327 = (long long *)(((unint64_t)v305 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v328 = *v327;
        *(_OWORD *)((char *)v326 + 9) = *(long long *)((char *)v327 + 9);
        _OWORD *v326 = v328;
        unint64_t v329 = (v304 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v330 = ((unint64_t)v305 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v331 = *(_OWORD *)v330;
        *(unsigned char *)(v329 + 16) = *(unsigned char *)(v330 + 16);
        *(_OWORD *)unint64_t v329 = v331;
        v332 = (void *)((v304 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v333 = ((unint64_t)v305 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v334 = *(void *)v333;
        v333 += 15;
        void *v332 = v334;
        v335 = (void *)(((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v336 = *(void *)(v333 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v337 = *(void *)((v333 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v336, v337);
        void *v335 = v336;
        v335[1] = v337;
        v338 = (void *)((v320 + v499) & 0xFFFFFFFFFFFFFFF8);
        v339 = (void *)((v321 + v499) & 0xFFFFFFFFFFFFFFF8);
        void *v338 = *v339;
        v340 = (void *)(((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8);
        v341 = (void *)(((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v340 = *v341;
        v340[1] = v341[1];
        *((unsigned char *)v88 + v489) = 0;
LABEL_121:
        swift_bridgeObjectRetain();
        return v88;
    }
  }
  uint64_t v87 = *a2;
  *a1 = *a2;
  v88 = (void *)(v87 + ((v40 + 16) & ~v40));
  swift_retain();
  return v88;
}

uint64_t sub_1005F7828(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v143 = *(unsigned __int8 *)(v145 + 80);
  uint64_t v149 = *(void *)(v145 + 64);
  uint64_t v116 = v149 + v143;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(v114 - 8);
  uint64_t v153 = v1;
  int v2 = *(_DWORD *)(v1 + 80) & 0xF8;
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t v152 = *(void *)(v112 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v152 + 80);
  uint64_t v155 = v2 | v3 | 7;
  uint64_t v106 = v149 + v155;
  uint64_t v113 = *(void *)(v1 + 64) + 7;
  uint64_t v111 = v3 + 8;
  uint64_t v146 = v3;
  unint64_t v115 = ((((*(void *)(v152 + 64) + 7 + ((v3 + 8 + (v113 & 0xFFFFFFFFFFFFFFF8)) & ~v3)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v128 = sub_10096B0E0();
  uint64_t v4 = *(void *)(v128 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v154 = (v5 | 7) + 16;
  uint64_t v132 = v5 + 12;
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v130 = v6 + v5;
  uint64_t v131 = v6 + 12;
  uint64_t v129 = v5 + 10;
  unint64_t v7 = (v5
      + 10
      + ((((((v6 + 12 + ((v6 + v5 + ((v5 + 12) & ~v5)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  uint64_t v127 = v4;
  unsigned int v148 = *(_DWORD *)(v4 + 84);
  if (!v148) {
    ++v6;
  }
  uint64_t v126 = v6 + 7;
  unint64_t v139 = (((((((((v6 + 7 + v7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v151 = ((((v139 + 327 + ((v154 + v115 + ((v149 + v155 + ((v149 + v143) & ~v143)) & ~v155)) & ~(v5 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v120 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v120 - 8);
  uint64_t v118 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v121 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v121 - 8);
  uint64_t v119 = v10;
  int v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(v124 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v122 + 80);
  uint64_t v13 = v11 | v12 | 7;
  uint64_t v14 = v9 | v5 | v13;
  unint64_t v110 = v151 + v14;
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = v15 + v9;
  uint64_t v117 = v15 + v13;
  uint64_t v17 = *(void *)(v10 + 64) + 7;
  uint64_t v18 = v12 + 8;
  unint64_t v19 = ((((*(void *)(v122 + 64) + 7 + ((v12 + 8 + (v17 & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v20 = (v139 + 327 + ((v154 + v19 + ((v15 + v13 + ((v15 + v9) & ~v9)) & ~v13)) & ~(v5 | 7))) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((((((v20 + 15) & 0xFFFFFFFFFFFFFFF8) + ((v151 + v14) & ~v14) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v22 = v155 | v143 | v5;
  uint64_t v133 = v22 + v149;
  uint64_t v23 = *(unsigned int *)(v145 + 84);
  uint64_t v24 = *(unsigned int *)(v153 + 84);
  uint64_t v25 = *(unsigned int *)(v152 + 84);
  if (v24 <= v25) {
    unsigned int v26 = *(_DWORD *)(v152 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v153 + 84);
  }
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  else {
    unsigned int v27 = v26;
  }
  if (v27 <= v23) {
    unsigned int v28 = *(_DWORD *)(v145 + 84);
  }
  else {
    unsigned int v28 = v27;
  }
  if (v148 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  else {
    unsigned int v29 = v148;
  }
  if (v28 <= v29) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = v28;
  }
  if (v30 <= 0x7FFFFFFF) {
    int v31 = 0x7FFFFFFF;
  }
  else {
    int v31 = v30;
  }
  int v108 = v31;
  if (((v151 + ((v22 + v149) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 24 > v21) {
    unint64_t v21 = ((v151 + ((v22 + v149) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v32 = ((v20 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 > v21) {
    unint64_t v21 = v32;
  }
  uint64_t v33 = 16;
  if (v21 > 0x10) {
    uint64_t v33 = v21;
  }
  unsigned int v34 = *((unsigned __int8 *)a1 + v33);
  uint64_t v35 = v33 & 0xFFFFFFF8;
  if (v34 >= 4 && v35 != 0) {
    unsigned int v34 = *a1 + 4;
  }
  uint64_t v37 = ~v143;
  uint64_t v39 = ~v146;
  uint64_t v144 = ~(v5 | 7);
  uint64_t v147 = ~v5;
  uint64_t v40 = ~v13;
  uint64_t v41 = ~v12;
  uint64_t v42 = ~v22;
  switch(v34)
  {
    case 1u:
      uint64_t v38 = ~v155;
      uint64_t v137 = v39;
      unint64_t v141 = v139 + 16;
      unint64_t v123 = *(void (**)(void))(v145 + 8);
      v123();
      unint64_t v65 = ((unint64_t)a1 + v133) & v42;
      if (v23 == v108)
      {
        int v66 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v145 + 48))(v65, v23, AssociatedTypeWitness);
        uint64_t v68 = v127;
        uint64_t v67 = v128;
        uint64_t v69 = v126;
        uint64_t v70 = AssociatedTypeWitness;
LABEL_56:
        if (!v66) {
          goto LABEL_86;
        }
        goto LABEL_98;
      }
      unint64_t v85 = (v116 + v65) & v37;
      unint64_t v86 = (v106 + v85) & v38;
      if (v27 != v108)
      {
        unint64_t v88 = v86 + v115;
        uint64_t v68 = v127;
        uint64_t v67 = v128;
        if ((v30 & 0x80000000) == 0)
        {
          unint64_t v89 = *(void *)(v88 + 8);
          if (v89 >= 0xFFFFFFFF) {
            LODWORD(v89) = -1;
          }
          uint64_t v70 = AssociatedTypeWitness;
          uint64_t v69 = v126;
          if (v89 == -1) {
            goto LABEL_86;
          }
          goto LABEL_98;
        }
        uint64_t v92 = (v132 + ((v154 + v88) & v144)) & v147;
        uint64_t v70 = AssociatedTypeWitness;
        uint64_t v69 = v126;
        if (v148 < 0x7FFFFFFE)
        {
          unint64_t v101 = *(void *)(((v131 + ((v130 + v92) & v147)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v101 >= 0xFFFFFFFF) {
            LODWORD(v101) = -1;
          }
          if ((v101 + 1) < 2) {
            goto LABEL_87;
          }
          goto LABEL_98;
        }
        int v66 = (*(uint64_t (**)(uint64_t))(v127 + 48))(v92);
        goto LABEL_56;
      }
      if (v24 == v27)
      {
        int v87 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v153 + 48))((v106 + v85) & ~v155, v24, v114);
      }
      else
      {
        uint64_t v90 = (unint64_t *)((v113 + v86) & 0xFFFFFFFFFFFFFFF8);
        if (v26 <= 0x7FFFFFFE)
        {
          unint64_t v91 = *v90;
          if (v91 >= 0xFFFFFFFF) {
            LODWORD(v91) = -1;
          }
          uint64_t v68 = v127;
          uint64_t v67 = v128;
          uint64_t v70 = AssociatedTypeWitness;
          uint64_t v69 = v126;
          if ((v91 + 1) < 2) {
            goto LABEL_87;
          }
          goto LABEL_98;
        }
        int v87 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v152 + 48))(((unint64_t)v90 + v111) & v137, v25, v112);
      }
      uint64_t v68 = v127;
      uint64_t v67 = v128;
      uint64_t v70 = AssociatedTypeWitness;
      uint64_t v69 = v126;
      if (!v87)
      {
LABEL_86:
        unint64_t v85 = (v116 + v65) & v37;
        unint64_t v86 = (v106 + v85) & v38;
LABEL_87:
        ((void (*)(unint64_t, uint64_t))v123)(v65, v70);
        ((void (*)(unint64_t, uint64_t))v123)(v85, v70);
        (*(void (**)(unint64_t, uint64_t))(v153 + 8))(v86, v114);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v152 + 8))((v111 + ((v113 + v86) & 0xFFFFFFFFFFFFFFF8)) & v137, v112);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v93 = (v154 + v86 + v115) & v144;
        uint64_t v94 = *(void (**)(unint64_t, uint64_t))(v68 + 8);
        v94((v132 + v93) & v147, v67);
        unint64_t v95 = (v130 + ((v132 + v93) & v147)) & v147;
        v94(v95, v67);
        swift_bridgeObjectRelease();
        unint64_t v96 = (v129
             + ((((((v131 + v95) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v147;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v68 + 48))(v96, 1, v67)) {
          v94(v96, v67);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v97 = (uint64_t *)((((((v69 + v96) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v98 = v97[1];
        if ((v98 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v97, v98);
        }
        swift_bridgeObjectRelease();
        unint64_t v63 = v141 + v93;
        LODWORD(v99) = -1;
        if (*(void *)(v141 + v93 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v99 = *(void *)(v141 + v93 + 16);
        }
        if ((int)v99 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v63 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_97;
      }
LABEL_98:
      return swift_bridgeObjectRelease();
    case 2u:
      unint64_t v142 = v139 + 16;
      uint64_t v71 = v16;
      v72 = *(void (**)(void))(v118 + 8);
      unint64_t v73 = v19;
      uint64_t v135 = v41;
      uint64_t v138 = v18;
      uint64_t v74 = v17;
      uint64_t v75 = v40;
      v72();
      unint64_t v76 = ((unint64_t)a1 + v71) & ~v9;
      ((void (*)(unint64_t, uint64_t))v72)(v76, v120);
      unint64_t v77 = (v117 + v76) & v75;
      (*(void (**)(unint64_t, uint64_t))(v119 + 8))(v77, v121);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v122 + 8))((v138 + ((v74 + v77) & 0xFFFFFFFFFFFFFFF8)) & v135, v124);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v78 = (v154 + v73 + v77) & v144;
      unint64_t v79 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
      v79((v132 + v78) & v147, v128);
      uint64_t v80 = (v130 + ((v132 + v78) & v147)) & v147;
      v79(v80, v128);
      swift_bridgeObjectRelease();
      unint64_t v81 = (v129 + ((((((v131 + v80) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v147;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v127 + 48))(v81, 1, v128)) {
        v79(v81, v128);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v82 = (uint64_t *)((((((v126 + v81) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v83 = v82[1];
      if ((v83 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v82, v83);
      }
      swift_bridgeObjectRelease();
      unint64_t v63 = v78 + v142;
      LODWORD(v84) = -1;
      if (*(void *)(v78 + v142 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v84 = *(void *)(v63 + 16);
      }
      if ((int)v84 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v63 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_97;
    case 3u:
      goto LABEL_98;
    default:
      uint64_t v102 = ~v14;
      uint64_t v103 = ~v9;
      uint64_t v104 = v40;
      uint64_t v134 = v41;
      uint64_t v105 = v16;
      uint64_t v107 = v17;
      uint64_t v136 = v18;
      unint64_t v109 = v19;
      unint64_t v140 = v139 + 16;
      uint64_t v43 = *(void (**)(void))(v145 + 8);
      uint64_t v44 = v39;
      v43();
      unint64_t v45 = ((unint64_t)a1 + v116) & v37;
      ((void (*)(unint64_t, uint64_t))v43)(v45, AssociatedTypeWitness);
      unint64_t v46 = (v45 + v149 + v155) & ~v155;
      (*(void (**)(unint64_t, uint64_t))(v153 + 8))(v46, v114);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v152 + 8))((v111 + ((v113 + v46) & 0xFFFFFFFFFFFFFFF8)) & v44, v112);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v47 = (v154 + v115 + v46) & v144;
      uint64_t v48 = *(void (**)(unint64_t, uint64_t))(v127 + 8);
      v48((v132 + v47) & v147, v128);
      unint64_t v49 = (v130 + ((v132 + v47) & v147)) & v147;
      v48(v49, v128);
      swift_bridgeObjectRelease();
      unint64_t v50 = (v129 + ((((((v131 + v49) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v147;
      unint64_t v156 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v127 + 48);
      if (!v156(v50, 1, v128)) {
        v48(v50, v128);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v51 = (uint64_t *)((((((v126 + v50) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v52 = v51[1];
      if ((v52 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v51, v52);
      }
      swift_bridgeObjectRelease();
      unint64_t v53 = v140 + v47;
      LODWORD(v54) = -1;
      if (*(void *)(v140 + v47 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v54 = *(void *)(v53 + 16);
      }
      if ((int)v54 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v53 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v53 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v53 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      unint64_t v55 = ((unint64_t)a1 + v110) & v102;
      uint64_t v56 = *(void (**)(unint64_t, uint64_t))(v118 + 8);
      v56(v55, v120);
      v56((v105 + v55) & v103, v120);
      unint64_t v57 = (v117 + ((v105 + v55) & v103)) & v104;
      (*(void (**)(unint64_t, uint64_t))(v119 + 8))(v57, v121);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v122 + 8))((v136 + ((v107 + v57) & 0xFFFFFFFFFFFFFFF8)) & v134, v124);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = (v154 + v57 + v109) & v144;
      v48((v132 + v58) & v147, v128);
      uint64_t v59 = (v130 + ((v132 + v58) & v147)) & v147;
      v48(v59, v128);
      swift_bridgeObjectRelease();
      unint64_t v60 = (v129 + ((((((v131 + v59) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v147;
      if (!v156(v60, 1, v128)) {
        v48(v60, v128);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v61 = (uint64_t *)((((((v126 + v60) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v62 = v61[1];
      if ((v62 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v61, v62);
      }
      swift_bridgeObjectRelease();
      unint64_t v63 = v58 + v140;
      LODWORD(v64) = -1;
      if (*(void *)(v58 + v140 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v64 = *(void *)(v63 + 16);
      }
      if ((int)v64 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v63 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_97:
      sub_1000CF144(*(void *)((((v63 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v63 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_98;
  }
}

void *sub_1005F8B8C(void *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v484 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v478 = *(unsigned __int8 *)(v484 + 80);
  uint64_t v492 = *(void *)(v484 + 64);
  uint64_t v458 = v492 + v478;
  uint64_t v453 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v453 - 8);
  uint64_t v497 = v2;
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v451 = swift_getAssociatedTypeWitness();
  uint64_t v495 = *(void *)(v451 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v495 + 80);
  uint64_t v506 = v3 | v4 | 7;
  uint64_t v446 = v492 + v506;
  uint64_t v452 = *(void *)(v2 + 64) + 7;
  uint64_t v450 = v4 + 8;
  uint64_t v482 = v4;
  uint64_t v449 = *(void *)(v495 + 64) + 7;
  unint64_t v454 = ((((v449 + ((v4 + 8 + (v452 & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v502 = (v7 | 7) + 16;
  uint64_t v471 = v5;
  uint64_t v472 = v7 + 12;
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v470 = v8 + v7;
  size_t v433 = v8 + 12;
  uint64_t v467 = v7 + 10;
  uint64_t v465 = v6;
  unsigned int v486 = *(_DWORD *)(v6 + 84);
  size_t v473 = v8;
  if (v486) {
    size_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  size_t __n = v9;
  size_t v468 = v9 + 7;
  unint64_t v440 = (v7
        + 10
        + ((((((v8 + 12 + ((v8 + v7 + ((v7 + 12) & ~v7)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  unint64_t v474 = (((((((((v9 + 7 + v440) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v469 = v474 + 16;
  uint64_t v443 = (v502 + v454 + ((v492 + v506 + ((v492 + v478) & ~v478)) & ~v506)) & ~(v7 | 7);
  size_t v489 = ((((v443 + v474 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v455 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v455 - 8);
  uint64_t v460 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v456 = v13;
  uint64_t v457 = v12;
  int v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v461 = *(void *)(v15 - 8);
  uint64_t v463 = v15;
  uint64_t v16 = *(unsigned __int8 *)(v461 + 80);
  uint64_t v17 = v14 | v16 | 7;
  uint64_t v18 = v11 | v7 | v17;
  size_t v439 = v489 + v18;
  uint64_t v19 = *(void *)(v10 + 64);
  uint64_t v20 = v19 + v11;
  uint64_t v476 = v11;
  uint64_t v459 = v19 + v17;
  uint64_t v21 = *(void *)(v13 + 64) + 7;
  uint64_t v22 = v16 + 8;
  unint64_t v23 = ((((*(void *)(v461 + 64) + 7 + ((v16 + 8 + (v21 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (v474 + ((v502 + v23 + ((v19 + v17 + ((v19 + v11) & ~v11)) & ~v17)) & ~(v7 | 7)) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((((v25 + ((v489 + v18) & ~v18) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v27 = v506 | v478 | v7;
  uint64_t v28 = v27 + v492;
  uint64_t v29 = *(unsigned int *)(v484 + 84);
  uint64_t v30 = *(unsigned int *)(v2 + 84);
  unsigned int v435 = *(_DWORD *)(v495 + 84);
  if (v30 <= v435) {
    unsigned int v31 = *(_DWORD *)(v495 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v2 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    unsigned int v32 = 2147483646;
  }
  else {
    unsigned int v32 = v31;
  }
  if (v32 <= v29) {
    unsigned int v33 = *(_DWORD *)(v484 + 84);
  }
  else {
    unsigned int v33 = v32;
  }
  if (v486 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  else {
    unsigned int v34 = v486;
  }
  if (v33 <= v34) {
    unsigned int v35 = v34;
  }
  else {
    unsigned int v35 = v33;
  }
  if (v35 <= 0x7FFFFFFF) {
    int v36 = 0x7FFFFFFF;
  }
  else {
    int v36 = v35;
  }
  int v437 = v36;
  if (((v489 + (v28 & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 24 > v26) {
    unint64_t v26 = ((v489 + (v28 & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v37 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v37 > v26) {
    unint64_t v26 = v37;
  }
  if (v26 <= 0x10) {
    uint64_t v38 = 16;
  }
  else {
    uint64_t v38 = v26;
  }
  unsigned int v39 = *(unsigned __int8 *)(a2 + v38);
  if (v39 >= 4 && (v38 & 0xFFFFFFF8) != 0) {
    unsigned int v39 = *(_DWORD *)a2 + 4;
  }
  uint64_t v479 = ~v478;
  uint64_t v41 = ~v506;
  uint64_t v475 = ~v482;
  uint64_t v483 = ~(v7 | 7);
  uint64_t v42 = ~v7;
  uint64_t v43 = ~v18;
  uint64_t v44 = ~v476;
  uint64_t v45 = ~v17;
  uint64_t v46 = ~v16;
  unint64_t v47 = v25 + 16;
  uint64_t v48 = ~v27;
  switch(v39)
  {
    case 1u:
      uint64_t v493 = ~v506;
      uint64_t v508 = v42;
      uint64_t v477 = v38;
      size_t v462 = *(void (**)(char *, unint64_t, uint64_t))(v484 + 16);
      ((void (*)(void *))v462)(a1);
      unint64_t v86 = (char *)(((unint64_t)a1 + v28) & v48);
      unint64_t v87 = (v28 + a2) & v48;
      if (v29 == v437)
      {
        int v88 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v484 + 48))(v87, v29, AssociatedTypeWitness);
        unint64_t v89 = a1;
        uint64_t v90 = AssociatedTypeWitness;
        uint64_t v91 = v458;
      }
      else
      {
        uint64_t v91 = v458;
        unint64_t v133 = (v458 + v87) & v479;
        unint64_t v134 = (v446 + v133) & v493;
        if (v32 == v437)
        {
          if (v30 == v32)
          {
            int v88 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v497 + 48))((v446 + v133) & v493, v30, v453);
            unint64_t v89 = a1;
          }
          else
          {
            v338 = (unint64_t *)((v452 + v134) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v89 = a1;
            if (v31 <= 0x7FFFFFFE)
            {
              unint64_t v339 = *v338;
              if (v339 >= 0xFFFFFFFF) {
                LODWORD(v339) = -1;
              }
              uint64_t v90 = AssociatedTypeWitness;
              if ((v339 + 1) >= 2) {
                goto LABEL_99;
              }
              goto LABEL_102;
            }
            int v88 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v495 + 48))(((unint64_t)v338 + v450) & v475, v435, v451);
          }
        }
        else
        {
          unint64_t v217 = v134 + v454;
          unint64_t v89 = a1;
          if ((v35 & 0x80000000) != 0)
          {
            uint64_t v340 = (v472 + ((v502 + v217) & v483)) & v508;
            uint64_t v90 = AssociatedTypeWitness;
            if (v486 < 0x7FFFFFFE)
            {
              unint64_t v430 = *(void *)(((v433 + ((v470 + v340) & v508)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v430 >= 0xFFFFFFFF) {
                LODWORD(v430) = -1;
              }
              if ((v430 + 1) >= 2) {
                goto LABEL_99;
              }
              goto LABEL_102;
            }
            int v88 = (*(uint64_t (**)(uint64_t))(v465 + 48))(v340);
            goto LABEL_98;
          }
          unint64_t v218 = *(void *)(v217 + 8);
          if (v218 >= 0xFFFFFFFF) {
            LODWORD(v218) = -1;
          }
          int v88 = v218 + 1;
        }
        uint64_t v90 = AssociatedTypeWitness;
      }
LABEL_98:
      if (v88)
      {
LABEL_99:
        memcpy(v86, (const void *)v87, v489);
LABEL_100:
        size_t v341 = __n;
LABEL_117:
        unint64_t v426 = ((((v443
                 + ((((((((((v440 + v341 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v427 = (unint64_t)&v86[v426];
        unint64_t v428 = v426 + v87;
        *(unsigned char *)unint64_t v427 = *(unsigned char *)v428;
        v427 &= 0xFFFFFFFFFFFFFFF8;
        v428 &= 0xFFFFFFFFFFFFFFF8;
        *(void *)(v427 + 8) = *(void *)(v428 + 8);
        *(void *)(v427 + 16) = *(void *)(v428 + 16);
        char v132 = 1;
        goto LABEL_118;
      }
      unint64_t v133 = (v91 + v87) & v479;
      unint64_t v134 = (v446 + v133) & v493;
LABEL_102:
      unint64_t v494 = v87;
      v462(v86, v87, v90);
      uint64_t v501 = v86;
      unint64_t v342 = (unint64_t)&v86[v91] & v479;
      v462((char *)v342, v133, v90);
      unint64_t v343 = (v446 + v342) & v87;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v497 + 16))(v343, v134, v453);
      uint64_t v344 = (void *)((v452 + v343) & 0xFFFFFFFFFFFFFFF8);
      v345 = (void *)((v452 + v134) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v344 = *v345;
      unint64_t v346 = ((unint64_t)v344 + v450) & v475;
      unint64_t v347 = ((unint64_t)v345 + v450) & v475;
      unint64_t v348 = *(void (**)(unint64_t, unint64_t, uint64_t))(v495 + 16);
      swift_bridgeObjectRetain();
      v348(v346, v347, v451);
      v349 = (void *)((v449 + v347) & 0xFFFFFFFFFFFFFFF8);
      v350 = (void *)((v449 + v346) & 0xFFFFFFFFFFFFFFF8);
      void *v350 = *v349;
      unint64_t v351 = (void *)(((unint64_t)v350 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v352 = (void *)(((unint64_t)v349 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v351 = *v352;
      v351[1] = v352[1];
      v353 = (void *)(v343 + v454);
      void *v353 = *(void *)(v134 + v454);
      v353[1] = *(void *)(v134 + v454 + 8);
      unint64_t v354 = (v502 + v343 + v454) & v483;
      unint64_t v355 = (v502 + v134 + v454) & v483;
      *(unsigned char *)unint64_t v354 = *(unsigned char *)v355;
      uint64_t v356 = v354 | 4;
      int v357 = *(_DWORD *)(v355 | 4);
      *(unsigned char *)(v356 + 4) = *(unsigned char *)((v355 | 4) + 4);
      *(_DWORD *)uint64_t v356 = v357;
      *(_WORD *)(v354 + 10) = *(_WORD *)(v355 + 0xA);
      unint64_t v504 = v354;
      unint64_t v358 = (v472 + v354) & v508;
      unint64_t v498 = v355;
      unint64_t v359 = (v472 + v355) & v508;
      unint64_t v360 = *(void (**)(unint64_t, unint64_t, uint64_t))(v465 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v360(v358, v359, v471);
      unint64_t v361 = (v470 + v359) & v508;
      unint64_t v496 = (void (*)(void *, const void *, uint64_t))v360;
      v360((v470 + v358) & v508, v361, v471);
      size_t v341 = v473;
      int v362 = (unsigned char *)(((v470 + v358) & v508) + v473);
      *int v362 = *(unsigned char *)(v361 + v473);
      v362[1] = *(unsigned char *)(v361 + v473 + 1);
      v362[2] = *(unsigned char *)(v361 + v473 + 2);
      v362[3] = *(unsigned char *)(v361 + v473 + 3);
      v362[4] = *(unsigned char *)(v361 + v473 + 4);
      unint64_t v363 = (unint64_t)(v362 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v364 = (v361 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v363 = *(void *)v364;
      *(void *)(v363 + 8) = *(void *)(v364 + 8);
      *(unsigned char *)(v363 + 16) = *(unsigned char *)(v364 + 16);
      *(unsigned char *)(v363 + 17) = *(unsigned char *)(v364 + 17);
      *(unsigned char *)(v363 + 18) = *(unsigned char *)(v364 + 18);
      *(unsigned char *)(v363 + 19) = *(unsigned char *)(v364 + 19);
      unint64_t v365 = (v363 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v366 = (v364 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v365 = *(void *)v366;
      *(unsigned char *)(v365 + 8) = *(unsigned char *)(v366 + 8);
      *(unsigned char *)(v365 + 9) = *(unsigned char *)(v366 + 9);
      *(unsigned char *)(v365 + 10) = *(unsigned char *)(v366 + 10);
      *(unsigned char *)(v365 + 11) = *(unsigned char *)(v366 + 11);
      *(unsigned char *)(v365 + 12) = *(unsigned char *)(v366 + 12);
      v367 = (void *)((v364 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v368 = (void *)((v363 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v368 = *v367;
      unint64_t v369 = ((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v370 = ((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v369 = *(void *)v370;
      *(unsigned char *)(v369 + 8) = *(unsigned char *)(v370 + 8);
      *(unsigned char *)(v369 + 9) = *(unsigned char *)(v370 + 9);
      unint64_t v371 = (void *)((v467 + v369) & v508);
      v372 = (const void *)((v467 + v370) & v508);
      v373 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v465 + 48);
      swift_bridgeObjectRetain();
      if (v373(v372, 1, v471))
      {
        memcpy(v371, v372, __n);
      }
      else
      {
        v496(v371, v372, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v371, 0, 1, v471);
      }
      unsigned int v374 = v486;
      unint64_t v375 = (void *)(((unint64_t)v371 + v468) & 0xFFFFFFFFFFFFFFF8);
      v376 = (void *)(((unint64_t)v372 + v468) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v375 = *v376;
      unint64_t v377 = ((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v378 = ((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v379 = *(void *)v378;
      *(unsigned char *)(v377 + 8) = *(unsigned char *)(v378 + 8);
      *(void *)unint64_t v377 = v379;
      v380 = (void *)(((unint64_t)v375 + 31) & 0xFFFFFFFFFFFFFFF8);
      v381 = (void *)(((unint64_t)v376 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v380 = *v381;
      unint64_t v382 = ((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v383 = (uint64_t *)(((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v384 = v383[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v384 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v382 = *(_OWORD *)v383;
      }
      else
      {
        uint64_t v385 = *v383;
        sub_10001EBB0(*v383, v384);
        *(void *)unint64_t v382 = v385;
        *(void *)(v382 + 8) = v384;
      }
      unint64_t v386 = (v382 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v387 = ((unint64_t)v383 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v388 = *(void *)v387;
      *(unsigned char *)(v386 + 8) = *(unsigned char *)(v387 + 8);
      *(void *)unint64_t v386 = v388;
      *(unsigned char *)(v386 + 9) = *(unsigned char *)(v387 + 9);
      unint64_t v389 = (v386 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v390 = (v387 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v391 = *(_DWORD *)v390;
      *(unsigned char *)(v389 + 4) = *(unsigned char *)(v390 + 4);
      *(_DWORD *)unint64_t v389 = v391;
      unint64_t v392 = (void *)((v386 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v393 = (void *)((v387 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v392 = *v393;
      v392[1] = v393[1];
      unint64_t v394 = v469 + v504;
      unint64_t v395 = (long long *)(v469 + v498);
      unint64_t v396 = *(void *)(v469 + v498 + 16);
      if (v396 >= 0xFFFFFFFF) {
        LODWORD(v396) = -1;
      }
      int v397 = v396 - 1;
      swift_bridgeObjectRetain();
      if (v397 < 0)
      {
        *(void *)unint64_t v394 = *(void *)v395;
        *(unsigned char *)(v394 + 8) = *((unsigned char *)v395 + 8);
        *(unsigned char *)(v394 + 9) = *((unsigned char *)v395 + 9);
        uint64_t v410 = *((void *)v395 + 2);
        swift_errorRetain();
        *(void *)(v394 + 16) = v410;
        uint64_t v411 = *((void *)v395 + 3);
        swift_errorRetain();
        *(void *)(v394 + 24) = v411;
        *(unsigned char *)(v394 + 32) = *((unsigned char *)v395 + 32);
        *(unsigned char *)(v394 + 33) = *((unsigned char *)v395 + 33);
        *(unsigned char *)(v394 + 34) = *((unsigned char *)v395 + 34);
        *(void *)(v394 + 40) = *((void *)v395 + 5);
        *(void *)(v394 + 48) = *((void *)v395 + 6);
        *(void *)(v394 + 56) = *((void *)v395 + 7);
        *(void *)(v394 + 64) = *((void *)v395 + 8);
        *(unsigned char *)(v394 + 72) = *((unsigned char *)v395 + 72);
        *(void *)(v394 + 80) = *((void *)v395 + 10);
        *(void *)(v394 + 88) = *((void *)v395 + 11);
        uint64_t v512 = (void *)*((void *)v395 + 12);
        *(void *)(v394 + 96) = v512;
        *(unsigned char *)(v394 + 104) = *((unsigned char *)v395 + 104);
        *(unsigned char *)(v394 + 105) = *((unsigned char *)v395 + 105);
        *(void *)(v394 + 112) = *((void *)v395 + 14);
        *(void *)(v394 + 120) = *((void *)v395 + 15);
        *(void *)(v394 + 128) = *((void *)v395 + 16);
        *(void *)(v394 + 136) = *((void *)v395 + 17);
        *(void *)(v394 + 144) = *((void *)v395 + 18);
        *(void *)(v394 + 152) = *((void *)v395 + 19);
        *(void *)(v394 + 160) = *((void *)v395 + 20);
        *(void *)(v394 + 168) = *((void *)v395 + 21);
        *(unsigned char *)(v394 + 176) = *((unsigned char *)v395 + 176);
        *(void *)(v394 + 184) = *((void *)v395 + 23);
        uint64_t v412 = *((void *)v395 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v413 = v512;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v412)
        {
          *(void *)(v394 + 192) = v412;
          *(void *)(v394 + 200) = *((void *)v395 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v394 + 192) = v395[12];
        }
        unint64_t v89 = a1;
        size_t v341 = v473;
        unsigned int v374 = v486;
        *(void *)(v394 + 208) = *((void *)v395 + 26);
        *(void *)(v394 + 216) = *((void *)v395 + 27);
        *(void *)(v394 + 224) = *((void *)v395 + 28);
        *(void *)(v394 + 232) = *((void *)v395 + 29);
        *(void *)(v394 + 240) = *((void *)v395 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v398 = *v395;
        long long v399 = v395[1];
        long long v400 = v395[3];
        *(_OWORD *)(v394 + 32) = v395[2];
        *(_OWORD *)(v394 + 48) = v400;
        *(_OWORD *)unint64_t v394 = v398;
        *(_OWORD *)(v394 + 16) = v399;
        long long v401 = v395[4];
        long long v402 = v395[5];
        long long v403 = v395[7];
        *(_OWORD *)(v394 + 96) = v395[6];
        *(_OWORD *)(v394 + 112) = v403;
        *(_OWORD *)(v394 + 64) = v401;
        *(_OWORD *)(v394 + 80) = v402;
        long long v404 = v395[8];
        long long v405 = v395[9];
        long long v406 = v395[11];
        *(_OWORD *)(v394 + 160) = v395[10];
        *(_OWORD *)(v394 + 176) = v406;
        *(_OWORD *)(v394 + 128) = v404;
        *(_OWORD *)(v394 + 144) = v405;
        long long v407 = v395[12];
        long long v408 = v395[13];
        long long v409 = v395[14];
        *(void *)(v394 + 240) = *((void *)v395 + 30);
        *(_OWORD *)(v394 + 208) = v408;
        *(_OWORD *)(v394 + 224) = v409;
        *(_OWORD *)(v394 + 192) = v407;
      }
      long long v414 = (_OWORD *)((v394 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v415 = (long long *)(((unint64_t)v395 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v416 = *v415;
      *(_OWORD *)((char *)v414 + 9) = *(long long *)((char *)v415 + 9);
      *long long v414 = v416;
      unint64_t v417 = (v394 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v418 = ((unint64_t)v395 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v419 = *(_OWORD *)v418;
      *(unsigned char *)(v417 + 16) = *(unsigned char *)(v418 + 16);
      *(_OWORD *)unint64_t v417 = v419;
      v420 = (void *)((v394 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v421 = ((unint64_t)v395 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v422 = *(void *)v421;
      v421 += 15;
      void *v420 = v422;
      unint64_t v423 = (void *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v424 = *(void *)(v421 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v425 = *(void *)((v421 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v424, v425);
      *unint64_t v423 = v424;
      v423[1] = v425;
      unint64_t v86 = v501;
      unint64_t v87 = v494;
      if (v374) {
        goto LABEL_117;
      }
      goto LABEL_100;
    case 2u:
      unint64_t v491 = v47;
      uint64_t v477 = v38;
      uint64_t v92 = *(void (**)(unint64_t, uint64_t, uint64_t))(v460 + 16);
      uint64_t v509 = v42;
      unint64_t v488 = v23;
      uint64_t v445 = v22;
      uint64_t v448 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
      uint64_t v93 = v21;
      uint64_t v442 = v46;
      uint64_t v94 = v45;
      uint64_t v95 = v44;
      ((void (*)(void *))v92)(a1);
      unint64_t v96 = ((unint64_t)a1 + v20) & v95;
      uint64_t v97 = (v20 + a2) & v95;
      v92(v96, v97, v455);
      unint64_t v98 = (v459 + v96) & v94;
      uint64_t v99 = (v459 + v97) & v94;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v456 + 16))(v98, v99, v457);
      unint64_t v100 = (void *)((v93 + v98) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v101 = (void *)((v93 + v99) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v100 = *v101;
      unint64_t v102 = ((unint64_t)v100 + v445) & v442;
      unint64_t v103 = ((unint64_t)v101 + v445) & v442;
      uint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
      swift_bridgeObjectRetain();
      v104(v102, v103, v463);
      uint64_t v105 = (void *)((v448 + v103) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v106 = (void *)((v448 + v102) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v106 = *v105;
      uint64_t v107 = (void *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v108 = (void *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v107 = *v108;
      v107[1] = v108[1];
      unint64_t v109 = (void *)(v488 + v98);
      *unint64_t v109 = *(void *)(v488 + v99);
      v109[1] = *(void *)(v488 + v99 + 8);
      uint64_t v110 = (v502 + v488 + v98) & v483;
      uint64_t v111 = (v502 + v488 + v99) & v483;
      *(unsigned char *)uint64_t v110 = *(unsigned char *)v111;
      uint64_t v112 = v110 | 4;
      int v113 = *(_DWORD *)(v111 | 4);
      *(unsigned char *)(v112 + 4) = *(unsigned char *)((v111 | 4) + 4);
      *(_DWORD *)uint64_t v112 = v113;
      *(_WORD *)(v110 + 10) = *(_WORD *)(v111 + 0xA);
      uint64_t v503 = v110;
      uint64_t v114 = (v472 + v110) & v509;
      uint64_t v115 = (v472 + v111) & v509;
      uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(v465 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116(v114, v115, v471);
      uint64_t v117 = (v470 + v114) & v509;
      uint64_t v118 = (v470 + v115) & v509;
      v116(v117, v118, v471);
      uint64_t v119 = (unsigned char *)(v117 + v473);
      *uint64_t v119 = *(unsigned char *)(v118 + v473);
      v119[1] = *(unsigned char *)(v118 + v473 + 1);
      v119[2] = *(unsigned char *)(v118 + v473 + 2);
      v119[3] = *(unsigned char *)(v118 + v473 + 3);
      v119[4] = *(unsigned char *)(v118 + v473 + 4);
      unint64_t v120 = (v117 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v121 = (v118 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v120 = *(void *)v121;
      *(void *)(v120 + 8) = *(void *)(v121 + 8);
      *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
      *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
      *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
      *(unsigned char *)(v120 + 19) = *(unsigned char *)(v121 + 19);
      unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v123 = (v121 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v122 = *(void *)v123;
      *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
      *(unsigned char *)(v122 + 9) = *(unsigned char *)(v123 + 9);
      *(unsigned char *)(v122 + 10) = *(unsigned char *)(v123 + 10);
      *(unsigned char *)(v122 + 11) = *(unsigned char *)(v123 + 11);
      *(unsigned char *)(v122 + 12) = *(unsigned char *)(v123 + 12);
      uint64_t v124 = (void *)((v121 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v125 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v125 = *v124;
      unint64_t v126 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v127 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v126 = *(void *)v127;
      *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
      *(unsigned char *)(v126 + 9) = *(unsigned char *)(v127 + 9);
      uint64_t v128 = (void *)((v467 + v126) & v509);
      uint64_t v129 = (const void *)((v467 + v127) & v509);
      uint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v465 + 48);
      swift_bridgeObjectRetain();
      if (v130(v129, 1, v471))
      {
        memcpy(v128, v129, __n);
      }
      else
      {
        v116((uint64_t)v128, (uint64_t)v129, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v128, 0, 1, v471);
      }
      uint64_t v135 = (void *)(((unint64_t)v128 + v468) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v136 = (void *)(((unint64_t)v129 + v468) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v135 = *v136;
      unint64_t v137 = ((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v138 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v139 = *(void *)v138;
      *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
      *(void *)unint64_t v137 = v139;
      unint64_t v140 = (void *)(((unint64_t)v135 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v141 = (void *)(((unint64_t)v136 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v140 = *v141;
      unint64_t v142 = ((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v143 = (uint64_t *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v144 = v143[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v144 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v142 = *(_OWORD *)v143;
      }
      else
      {
        uint64_t v145 = *v143;
        sub_10001EBB0(*v143, v144);
        *(void *)unint64_t v142 = v145;
        *(void *)(v142 + 8) = v144;
      }
      unint64_t v146 = (v142 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v147 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v148 = *(void *)v147;
      *(unsigned char *)(v146 + 8) = *(unsigned char *)(v147 + 8);
      *(void *)unint64_t v146 = v148;
      *(unsigned char *)(v146 + 9) = *(unsigned char *)(v147 + 9);
      unint64_t v149 = (v146 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v150 = (v147 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v151 = *(_DWORD *)v150;
      *(unsigned char *)(v149 + 4) = *(unsigned char *)(v150 + 4);
      *(_DWORD *)unint64_t v149 = v151;
      uint64_t v152 = (void *)((v146 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v153 = (void *)((v147 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v152 = *v153;
      v152[1] = v153[1];
      unint64_t v154 = v503 + v469;
      unint64_t v155 = v111 + v469;
      unint64_t v156 = *(void *)(v111 + v469 + 16);
      if (v156 >= 0xFFFFFFFF) {
        LODWORD(v156) = -1;
      }
      int v157 = v156 - 1;
      swift_bridgeObjectRetain();
      if (v157 < 0)
      {
        *(void *)unint64_t v154 = *(void *)v155;
        *(unsigned char *)(v154 + 8) = *(unsigned char *)(v155 + 8);
        *(unsigned char *)(v154 + 9) = *(unsigned char *)(v155 + 9);
        uint64_t v170 = *(void *)(v155 + 16);
        swift_errorRetain();
        *(void *)(v154 + 16) = v170;
        uint64_t v171 = *(void *)(v155 + 24);
        swift_errorRetain();
        *(void *)(v154 + 24) = v171;
        *(unsigned char *)(v154 + 32) = *(unsigned char *)(v155 + 32);
        *(unsigned char *)(v154 + 33) = *(unsigned char *)(v155 + 33);
        *(unsigned char *)(v154 + 34) = *(unsigned char *)(v155 + 34);
        *(void *)(v154 + 40) = *(void *)(v155 + 40);
        *(void *)(v154 + 48) = *(void *)(v155 + 48);
        *(void *)(v154 + 56) = *(void *)(v155 + 56);
        *(void *)(v154 + 64) = *(void *)(v155 + 64);
        *(unsigned char *)(v154 + 72) = *(unsigned char *)(v155 + 72);
        *(void *)(v154 + 80) = *(void *)(v155 + 80);
        *(void *)(v154 + 88) = *(void *)(v155 + 88);
        unint64_t v510 = *(void **)(v155 + 96);
        *(void *)(v154 + 96) = v510;
        *(unsigned char *)(v154 + 104) = *(unsigned char *)(v155 + 104);
        *(unsigned char *)(v154 + 105) = *(unsigned char *)(v155 + 105);
        *(void *)(v154 + 112) = *(void *)(v155 + 112);
        *(void *)(v154 + 120) = *(void *)(v155 + 120);
        *(void *)(v154 + 128) = *(void *)(v155 + 128);
        *(void *)(v154 + 136) = *(void *)(v155 + 136);
        *(void *)(v154 + 144) = *(void *)(v155 + 144);
        *(void *)(v154 + 152) = *(void *)(v155 + 152);
        *(void *)(v154 + 160) = *(void *)(v155 + 160);
        *(void *)(v154 + 168) = *(void *)(v155 + 168);
        *(unsigned char *)(v154 + 176) = *(unsigned char *)(v155 + 176);
        *(void *)(v154 + 184) = *(void *)(v155 + 184);
        uint64_t v172 = *(void *)(v155 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v173 = v510;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v172)
        {
          *(void *)(v154 + 192) = v172;
          *(void *)(v154 + 200) = *(void *)(v155 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v154 + 192) = *(_OWORD *)(v155 + 192);
        }
        *(void *)(v154 + 208) = *(void *)(v155 + 208);
        *(void *)(v154 + 216) = *(void *)(v155 + 216);
        *(void *)(v154 + 224) = *(void *)(v155 + 224);
        *(void *)(v154 + 232) = *(void *)(v155 + 232);
        *(void *)(v154 + 240) = *(void *)(v155 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v158 = *(_OWORD *)v155;
        long long v159 = *(_OWORD *)(v155 + 16);
        long long v160 = *(_OWORD *)(v155 + 48);
        *(_OWORD *)(v154 + 32) = *(_OWORD *)(v155 + 32);
        *(_OWORD *)(v154 + 48) = v160;
        *(_OWORD *)unint64_t v154 = v158;
        *(_OWORD *)(v154 + 16) = v159;
        long long v161 = *(_OWORD *)(v155 + 64);
        long long v162 = *(_OWORD *)(v155 + 80);
        long long v163 = *(_OWORD *)(v155 + 112);
        *(_OWORD *)(v154 + 96) = *(_OWORD *)(v155 + 96);
        *(_OWORD *)(v154 + 112) = v163;
        *(_OWORD *)(v154 + 64) = v161;
        *(_OWORD *)(v154 + 80) = v162;
        long long v164 = *(_OWORD *)(v155 + 128);
        long long v165 = *(_OWORD *)(v155 + 144);
        long long v166 = *(_OWORD *)(v155 + 176);
        *(_OWORD *)(v154 + 160) = *(_OWORD *)(v155 + 160);
        *(_OWORD *)(v154 + 176) = v166;
        *(_OWORD *)(v154 + 128) = v164;
        *(_OWORD *)(v154 + 144) = v165;
        long long v167 = *(_OWORD *)(v155 + 192);
        long long v168 = *(_OWORD *)(v155 + 208);
        long long v169 = *(_OWORD *)(v155 + 224);
        *(void *)(v154 + 240) = *(void *)(v155 + 240);
        *(_OWORD *)(v154 + 208) = v168;
        *(_OWORD *)(v154 + 224) = v169;
        *(_OWORD *)(v154 + 192) = v167;
      }
      id v219 = (_OWORD *)((v154 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v220 = (long long *)((v155 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v221 = *v220;
      *(_OWORD *)((char *)v219 + 9) = *(long long *)((char *)v220 + 9);
      *id v219 = v221;
      unint64_t v222 = (v154 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v223 = (v155 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v224 = *(_OWORD *)v223;
      *(unsigned char *)(v222 + 16) = *(unsigned char *)(v223 + 16);
      *(_OWORD *)unint64_t v222 = v224;
      unint64_t v225 = (void *)((v154 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v226 = (v155 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v227 = *(void *)v226;
      v226 += 15;
      *unint64_t v225 = v227;
      v228 = (void *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v229 = *(void *)(v226 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v230 = *(void *)((v226 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v229, v230);
      void *v228 = v229;
      v228[1] = v230;
      unint64_t v89 = a1;
      *((unsigned char *)a1 + v491) = *(unsigned char *)(v491 + a2);
      unint64_t v231 = ((unint64_t)a1 + v491) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v232 = (v491 + a2) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v231 + 8) = *(void *)(v232 + 8);
      *(void *)(v231 + 16) = *(void *)(v232 + 16);
      char v132 = 2;
      goto LABEL_118;
    case 3u:
      uint64_t v131 = *(void *)(a2 + 8);
      unint64_t v89 = a1;
      *a1 = *(void *)a2;
      a1[1] = v131;
      char v132 = 3;
      goto LABEL_119;
    default:
      uint64_t v431 = v43;
      uint64_t v432 = ~v476;
      uint64_t v434 = v45;
      uint64_t v436 = v20;
      uint64_t v441 = v46;
      uint64_t v444 = v22;
      uint64_t v438 = v21;
      uint64_t v447 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
      unint64_t v487 = v23;
      unint64_t v490 = v47;
      uint64_t v477 = v38;
      unint64_t v49 = *(void (**)(unint64_t, uint64_t, uint64_t))(v484 + 16);
      uint64_t v50 = v42;
      ((void (*)(void *))v49)(a1);
      unint64_t v51 = ((unint64_t)a1 + v458) & v479;
      uint64_t v52 = (v458 + a2) & v479;
      v49(v51, v52, AssociatedTypeWitness);
      unint64_t v53 = (v51 + v492 + v506) & v41;
      uint64_t v54 = (v52 + v492 + v506) & v41;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v497 + 16))(v53, v54, v453);
      unint64_t v55 = (void *)((v452 + v53) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v56 = (void *)((v452 + v54) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v55 = *v56;
      unint64_t v57 = ((unint64_t)v55 + v450) & v475;
      unint64_t v58 = ((unint64_t)v56 + v450) & v475;
      uint64_t v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v495 + 16);
      swift_bridgeObjectRetain();
      v59(v57, v58, v451);
      unint64_t v60 = (void *)((v449 + v58) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v61 = (void *)((v449 + v57) & 0xFFFFFFFFFFFFFFF8);
      void *v61 = *v60;
      unint64_t v62 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v63 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v62 = *v63;
      v62[1] = v63[1];
      uint64_t v64 = (void *)(v454 + v53);
      *uint64_t v64 = *(void *)(v454 + v54);
      v64[1] = *(void *)(v454 + v54 + 8);
      unint64_t v65 = (v502 + v454 + v53) & v483;
      unint64_t v66 = (v502 + v454 + v54) & v483;
      *(unsigned char *)unint64_t v65 = *(unsigned char *)v66;
      uint64_t v67 = v65 | 4;
      int v68 = *(_DWORD *)(v66 | 4);
      *(unsigned char *)(v67 + 4) = *(unsigned char *)((v66 | 4) + 4);
      *(_DWORD *)uint64_t v67 = v68;
      *(_WORD *)(v65 + 10) = *(_WORD *)(v66 + 0xA);
      unint64_t v69 = (v472 + v65) & v50;
      unint64_t v70 = (v472 + v66) & v50;
      uint64_t v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v465 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v69, v70, v471);
      unint64_t v72 = (v470 + v69) & v50;
      unint64_t v73 = (v470 + v70) & v50;
      v71(v72, v73, v471);
      uint64_t v74 = (unsigned char *)(v72 + v473);
      *uint64_t v74 = *(unsigned char *)(v73 + v473);
      v74[1] = *(unsigned char *)(v73 + v473 + 1);
      v74[2] = *(unsigned char *)(v73 + v473 + 2);
      v74[3] = *(unsigned char *)(v73 + v473 + 3);
      v74[4] = *(unsigned char *)(v73 + v473 + 4);
      unint64_t v75 = (v72 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v76 = (v73 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v75 = *(void *)v76;
      *(void *)(v75 + 8) = *(void *)(v76 + 8);
      *(unsigned char *)(v75 + 16) = *(unsigned char *)(v76 + 16);
      *(unsigned char *)(v75 + 17) = *(unsigned char *)(v76 + 17);
      *(unsigned char *)(v75 + 18) = *(unsigned char *)(v76 + 18);
      *(unsigned char *)(v75 + 19) = *(unsigned char *)(v76 + 19);
      unint64_t v77 = (v75 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v77 = *(void *)v78;
      *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
      *(unsigned char *)(v77 + 9) = *(unsigned char *)(v78 + 9);
      *(unsigned char *)(v77 + 10) = *(unsigned char *)(v78 + 10);
      *(unsigned char *)(v77 + 11) = *(unsigned char *)(v78 + 11);
      *(unsigned char *)(v77 + 12) = *(unsigned char *)(v78 + 12);
      unint64_t v79 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v80 = (void *)((v75 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v80 = *v79;
      unint64_t v81 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v82 = ((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v81 = *(void *)v82;
      *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
      *(unsigned char *)(v81 + 9) = *(unsigned char *)(v82 + 9);
      unint64_t v83 = (void *)((v467 + v81) & v50);
      uint64_t v507 = v50;
      uint64_t v84 = (const void *)((v467 + v82) & v50);
      unint64_t v85 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v465 + 48);
      swift_bridgeObjectRetain();
      uint64_t v485 = v85;
      if (v85(v84, 1, v471))
      {
        memcpy(v83, v84, __n);
      }
      else
      {
        v71((unint64_t)v83, (unint64_t)v84, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v83, 0, 1, v471);
      }
      uint64_t v174 = a1;
      uint64_t v175 = (void *)(((unint64_t)v83 + v468) & 0xFFFFFFFFFFFFFFF8);
      id v176 = (void *)(((unint64_t)v84 + v468) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v175 = *v176;
      unint64_t v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v178 = ((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v179 = *(void *)v178;
      *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
      *(void *)unint64_t v177 = v179;
      unint64_t v180 = (void *)(((unint64_t)v175 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v181 = (void *)(((unint64_t)v176 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v180 = *v181;
      unint64_t v182 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
      v183 = (uint64_t *)(((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v184 = v183[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v184 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v182 = *(_OWORD *)v183;
      }
      else
      {
        uint64_t v185 = *v183;
        sub_10001EBB0(*v183, v184);
        *(void *)unint64_t v182 = v185;
        *(void *)(v182 + 8) = v184;
      }
      unint64_t v186 = (v182 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v187 = ((unint64_t)v183 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v188 = *(void *)v187;
      *(unsigned char *)(v186 + 8) = *(unsigned char *)(v187 + 8);
      *(void *)unint64_t v186 = v188;
      *(unsigned char *)(v186 + 9) = *(unsigned char *)(v187 + 9);
      unint64_t v189 = (v186 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v190 = (v187 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v191 = *(_DWORD *)v190;
      *(unsigned char *)(v189 + 4) = *(unsigned char *)(v190 + 4);
      *(_DWORD *)unint64_t v189 = v191;
      unint64_t v192 = (void *)((v186 + 25) & 0xFFFFFFFFFFFFFFF8);
      int v193 = (void *)((v187 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v192 = *v193;
      v192[1] = v193[1];
      unint64_t v194 = v469 + v65;
      unint64_t v195 = v469 + v66;
      unint64_t v196 = *(void *)(v469 + v66 + 16);
      if (v196 >= 0xFFFFFFFF) {
        LODWORD(v196) = -1;
      }
      int v197 = v196 - 1;
      swift_bridgeObjectRetain();
      if (v197 < 0)
      {
        *(void *)unint64_t v194 = *(void *)v195;
        *(unsigned char *)(v194 + 8) = *(unsigned char *)(v195 + 8);
        *(unsigned char *)(v194 + 9) = *(unsigned char *)(v195 + 9);
        uint64_t v213 = *(void *)(v195 + 16);
        swift_errorRetain();
        *(void *)(v194 + 16) = v213;
        uint64_t v214 = *(void *)(v195 + 24);
        swift_errorRetain();
        *(void *)(v194 + 24) = v214;
        *(unsigned char *)(v194 + 32) = *(unsigned char *)(v195 + 32);
        *(unsigned char *)(v194 + 33) = *(unsigned char *)(v195 + 33);
        *(unsigned char *)(v194 + 34) = *(unsigned char *)(v195 + 34);
        *(void *)(v194 + 40) = *(void *)(v195 + 40);
        *(void *)(v194 + 48) = *(void *)(v195 + 48);
        *(void *)(v194 + 56) = *(void *)(v195 + 56);
        *(void *)(v194 + 64) = *(void *)(v195 + 64);
        *(unsigned char *)(v194 + 72) = *(unsigned char *)(v195 + 72);
        *(void *)(v194 + 80) = *(void *)(v195 + 80);
        *(void *)(v194 + 88) = *(void *)(v195 + 88);
        int v480 = *(void **)(v195 + 96);
        *(void *)(v194 + 96) = v480;
        *(unsigned char *)(v194 + 104) = *(unsigned char *)(v195 + 104);
        *(unsigned char *)(v194 + 105) = *(unsigned char *)(v195 + 105);
        *(void *)(v194 + 112) = *(void *)(v195 + 112);
        *(void *)(v194 + 120) = *(void *)(v195 + 120);
        *(void *)(v194 + 128) = *(void *)(v195 + 128);
        *(void *)(v194 + 136) = *(void *)(v195 + 136);
        *(void *)(v194 + 144) = *(void *)(v195 + 144);
        *(void *)(v194 + 152) = *(void *)(v195 + 152);
        *(void *)(v194 + 160) = *(void *)(v195 + 160);
        *(void *)(v194 + 168) = *(void *)(v195 + 168);
        *(unsigned char *)(v194 + 176) = *(unsigned char *)(v195 + 176);
        *(void *)(v194 + 184) = *(void *)(v195 + 184);
        uint64_t v215 = *(void *)(v195 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v216 = v480;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v215)
        {
          *(void *)(v194 + 192) = v215;
          *(void *)(v194 + 200) = *(void *)(v195 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v194 + 192) = *(_OWORD *)(v195 + 192);
        }
        uint64_t v174 = a1;
        uint64_t v211 = v456;
        uint64_t v210 = v457;
        uint64_t v212 = v455;
        *(void *)(v194 + 208) = *(void *)(v195 + 208);
        *(void *)(v194 + 216) = *(void *)(v195 + 216);
        *(void *)(v194 + 224) = *(void *)(v195 + 224);
        *(void *)(v194 + 232) = *(void *)(v195 + 232);
        *(void *)(v194 + 240) = *(void *)(v195 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v198 = *(_OWORD *)v195;
        long long v199 = *(_OWORD *)(v195 + 16);
        long long v200 = *(_OWORD *)(v195 + 48);
        *(_OWORD *)(v194 + 32) = *(_OWORD *)(v195 + 32);
        *(_OWORD *)(v194 + 48) = v200;
        *(_OWORD *)unint64_t v194 = v198;
        *(_OWORD *)(v194 + 16) = v199;
        long long v201 = *(_OWORD *)(v195 + 64);
        long long v202 = *(_OWORD *)(v195 + 80);
        long long v203 = *(_OWORD *)(v195 + 112);
        *(_OWORD *)(v194 + 96) = *(_OWORD *)(v195 + 96);
        *(_OWORD *)(v194 + 112) = v203;
        *(_OWORD *)(v194 + 64) = v201;
        *(_OWORD *)(v194 + 80) = v202;
        long long v204 = *(_OWORD *)(v195 + 128);
        long long v205 = *(_OWORD *)(v195 + 144);
        long long v206 = *(_OWORD *)(v195 + 176);
        *(_OWORD *)(v194 + 160) = *(_OWORD *)(v195 + 160);
        *(_OWORD *)(v194 + 176) = v206;
        *(_OWORD *)(v194 + 128) = v204;
        *(_OWORD *)(v194 + 144) = v205;
        long long v207 = *(_OWORD *)(v195 + 192);
        long long v208 = *(_OWORD *)(v195 + 208);
        long long v209 = *(_OWORD *)(v195 + 224);
        *(void *)(v194 + 240) = *(void *)(v195 + 240);
        *(_OWORD *)(v194 + 208) = v208;
        *(_OWORD *)(v194 + 224) = v209;
        *(_OWORD *)(v194 + 192) = v207;
        uint64_t v211 = v456;
        uint64_t v210 = v457;
        uint64_t v212 = v455;
      }
      unint64_t v233 = (_OWORD *)((v194 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v234 = (long long *)((v195 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v235 = *v234;
      *(_OWORD *)((char *)v233 + 9) = *(long long *)((char *)v234 + 9);
      *unint64_t v233 = v235;
      unint64_t v236 = (v194 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v237 = (v195 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v238 = *(_OWORD *)v237;
      *(unsigned char *)(v236 + 16) = *(unsigned char *)(v237 + 16);
      *(_OWORD *)unint64_t v236 = v238;
      long long v239 = (void *)((v194 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v240 = (v195 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v241 = *(void *)v240;
      v240 += 15;
      *long long v239 = v241;
      long long v242 = (void *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v243 = *(void *)(v240 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v244 = *(void *)((v240 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v243, v244);
      *long long v242 = v243;
      v242[1] = v244;
      uint64_t v245 = v174;
      size_t v246 = (v439 + a2) & v431;
      uint64_t v247 = *(void (**)(unint64_t, size_t, uint64_t))(v460 + 16);
      v247(((unint64_t)v174 + v439) & v431, v246, v212);
      unint64_t v500 = ((unint64_t)v174 + v439) & v431;
      unint64_t v248 = (v436 + v500) & v432;
      size_t v481 = v246;
      size_t v249 = (v436 + v246) & v432;
      v247(v248, v249, v212);
      uint64_t v250 = (v459 + v248) & v434;
      uint64_t v251 = (v459 + v249) & v434;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v250, v251, v210);
      unint64_t v252 = (void *)((v438 + v250) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v253 = (void *)((v438 + v251) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v252 = *v253;
      unint64_t v254 = ((unint64_t)v252 + v444) & v441;
      unint64_t v255 = ((unint64_t)v253 + v444) & v441;
      v256 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
      swift_bridgeObjectRetain();
      v256(v254, v255, v463);
      v257 = (void *)((v447 + v254) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v258 = (void *)((v447 + v255) & 0xFFFFFFFFFFFFFFF8);
      void *v257 = *v258;
      unint64_t v259 = (void *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
      v260 = (void *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v259 = *v260;
      v259[1] = v260[1];
      v261 = (void *)(v250 + v487);
      void *v261 = *(void *)(v251 + v487);
      v261[1] = *(void *)(v251 + v487 + 8);
      uint64_t v262 = (v502 + v250 + v487) & v483;
      uint64_t v263 = (v502 + v251 + v487) & v483;
      *(unsigned char *)uint64_t v262 = *(unsigned char *)v263;
      uint64_t v264 = v262 | 4;
      int v265 = *(_DWORD *)(v263 | 4);
      *(unsigned char *)(v264 + 4) = *(unsigned char *)((v263 | 4) + 4);
      *(_DWORD *)uint64_t v264 = v265;
      *(_WORD *)(v262 + 10) = *(_WORD *)(v263 + 0xA);
      uint64_t v266 = (v472 + v262) & v507;
      uint64_t v267 = (v472 + v263) & v507;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v266, v267, v471);
      uint64_t v268 = (v470 + v266) & v507;
      uint64_t v269 = (v470 + v267) & v507;
      v71(v268, v269, v471);
      uint64_t v270 = (unsigned char *)(v268 + v473);
      *uint64_t v270 = *(unsigned char *)(v269 + v473);
      v270[1] = *(unsigned char *)(v269 + v473 + 1);
      v270[2] = *(unsigned char *)(v269 + v473 + 2);
      v270[3] = *(unsigned char *)(v269 + v473 + 3);
      v270[4] = *(unsigned char *)(v269 + v473 + 4);
      unint64_t v271 = (v268 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v272 = (v269 + v473 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v271 = *(void *)v272;
      *(void *)(v271 + 8) = *(void *)(v272 + 8);
      *(unsigned char *)(v271 + 16) = *(unsigned char *)(v272 + 16);
      *(unsigned char *)(v271 + 17) = *(unsigned char *)(v272 + 17);
      *(unsigned char *)(v271 + 18) = *(unsigned char *)(v272 + 18);
      *(unsigned char *)(v271 + 19) = *(unsigned char *)(v272 + 19);
      unint64_t v273 = (v271 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v274 = (v272 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v273 = *(void *)v274;
      *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
      *(unsigned char *)(v273 + 9) = *(unsigned char *)(v274 + 9);
      *(unsigned char *)(v273 + 10) = *(unsigned char *)(v274 + 10);
      *(unsigned char *)(v273 + 11) = *(unsigned char *)(v274 + 11);
      *(unsigned char *)(v273 + 12) = *(unsigned char *)(v274 + 12);
      unint64_t v275 = (void *)((v271 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v276 = (void *)((v272 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v275 = *v276;
      unint64_t v277 = ((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v278 = ((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v277 = *(void *)v278;
      *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
      *(unsigned char *)(v277 + 9) = *(unsigned char *)(v278 + 9);
      v279 = (void *)((v467 + v277) & v507);
      v280 = (const void *)((v467 + v278) & v507);
      swift_bridgeObjectRetain();
      if (v485(v280, 1, v471))
      {
        memcpy(v279, v280, __n);
      }
      else
      {
        v71((unint64_t)v279, (unint64_t)v280, v471);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v279, 0, 1, v471);
      }
      unint64_t v89 = v245;
      unint64_t v281 = (void *)(((unint64_t)v279 + v468) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v282 = (void *)(((unint64_t)v280 + v468) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v281 = *v282;
      unint64_t v283 = ((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v284 = ((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v285 = *(void *)v284;
      *(unsigned char *)(v283 + 8) = *(unsigned char *)(v284 + 8);
      *(void *)unint64_t v283 = v285;
      v286 = (void *)(((unint64_t)v281 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v287 = (void *)(((unint64_t)v282 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v286 = *v287;
      unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v289 = (uint64_t *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v290 = v289[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v290 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v288 = *(_OWORD *)v289;
      }
      else
      {
        uint64_t v291 = *v289;
        sub_10001EBB0(*v289, v290);
        *(void *)unint64_t v288 = v291;
        *(void *)(v288 + 8) = v290;
      }
      unint64_t v292 = (v288 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v293 = ((unint64_t)v289 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v294 = *(void *)v293;
      *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
      *(void *)unint64_t v292 = v294;
      *(unsigned char *)(v292 + 9) = *(unsigned char *)(v293 + 9);
      unint64_t v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v296 = (v293 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v297 = *(_DWORD *)v296;
      *(unsigned char *)(v295 + 4) = *(unsigned char *)(v296 + 4);
      *(_DWORD *)unint64_t v295 = v297;
      uint64_t v298 = (void *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v299 = (void *)((v293 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v298 = *v299;
      v298[1] = v299[1];
      unint64_t v300 = v262 + v469;
      unint64_t v301 = v263 + v469;
      unint64_t v302 = *(void *)(v263 + v469 + 16);
      if (v302 >= 0xFFFFFFFF) {
        LODWORD(v302) = -1;
      }
      int v303 = v302 - 1;
      swift_bridgeObjectRetain();
      if (v303 < 0)
      {
        *(void *)unint64_t v300 = *(void *)v301;
        *(unsigned char *)(v300 + 8) = *(unsigned char *)(v301 + 8);
        *(unsigned char *)(v300 + 9) = *(unsigned char *)(v301 + 9);
        uint64_t v318 = *(void *)(v301 + 16);
        swift_errorRetain();
        *(void *)(v300 + 16) = v318;
        uint64_t v319 = *(void *)(v301 + 24);
        swift_errorRetain();
        *(void *)(v300 + 24) = v319;
        *(unsigned char *)(v300 + 32) = *(unsigned char *)(v301 + 32);
        *(unsigned char *)(v300 + 33) = *(unsigned char *)(v301 + 33);
        *(unsigned char *)(v300 + 34) = *(unsigned char *)(v301 + 34);
        *(void *)(v300 + 40) = *(void *)(v301 + 40);
        *(void *)(v300 + 48) = *(void *)(v301 + 48);
        *(void *)(v300 + 56) = *(void *)(v301 + 56);
        *(void *)(v300 + 64) = *(void *)(v301 + 64);
        *(unsigned char *)(v300 + 72) = *(unsigned char *)(v301 + 72);
        *(void *)(v300 + 80) = *(void *)(v301 + 80);
        *(void *)(v300 + 88) = *(void *)(v301 + 88);
        v511 = *(void **)(v301 + 96);
        *(void *)(v300 + 96) = v511;
        *(unsigned char *)(v300 + 104) = *(unsigned char *)(v301 + 104);
        *(unsigned char *)(v300 + 105) = *(unsigned char *)(v301 + 105);
        *(void *)(v300 + 112) = *(void *)(v301 + 112);
        *(void *)(v300 + 120) = *(void *)(v301 + 120);
        *(void *)(v300 + 128) = *(void *)(v301 + 128);
        *(void *)(v300 + 136) = *(void *)(v301 + 136);
        *(void *)(v300 + 144) = *(void *)(v301 + 144);
        *(void *)(v300 + 152) = *(void *)(v301 + 152);
        *(void *)(v300 + 160) = *(void *)(v301 + 160);
        *(void *)(v300 + 168) = *(void *)(v301 + 168);
        *(unsigned char *)(v300 + 176) = *(unsigned char *)(v301 + 176);
        *(void *)(v300 + 184) = *(void *)(v301 + 184);
        uint64_t v320 = *(void *)(v301 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v321 = v511;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v320)
        {
          *(void *)(v300 + 192) = v320;
          *(void *)(v300 + 200) = *(void *)(v301 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v300 + 192) = *(_OWORD *)(v301 + 192);
        }
        unint64_t v89 = a1;
        unint64_t v316 = v500;
        size_t v317 = v481;
        *(void *)(v300 + 208) = *(void *)(v301 + 208);
        *(void *)(v300 + 216) = *(void *)(v301 + 216);
        *(void *)(v300 + 224) = *(void *)(v301 + 224);
        *(void *)(v300 + 232) = *(void *)(v301 + 232);
        *(void *)(v300 + 240) = *(void *)(v301 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v304 = *(_OWORD *)v301;
        long long v305 = *(_OWORD *)(v301 + 16);
        long long v306 = *(_OWORD *)(v301 + 48);
        *(_OWORD *)(v300 + 32) = *(_OWORD *)(v301 + 32);
        *(_OWORD *)(v300 + 48) = v306;
        *(_OWORD *)unint64_t v300 = v304;
        *(_OWORD *)(v300 + 16) = v305;
        long long v307 = *(_OWORD *)(v301 + 64);
        long long v308 = *(_OWORD *)(v301 + 80);
        long long v309 = *(_OWORD *)(v301 + 112);
        *(_OWORD *)(v300 + 96) = *(_OWORD *)(v301 + 96);
        *(_OWORD *)(v300 + 112) = v309;
        *(_OWORD *)(v300 + 64) = v307;
        *(_OWORD *)(v300 + 80) = v308;
        long long v310 = *(_OWORD *)(v301 + 128);
        long long v311 = *(_OWORD *)(v301 + 144);
        long long v312 = *(_OWORD *)(v301 + 176);
        *(_OWORD *)(v300 + 160) = *(_OWORD *)(v301 + 160);
        *(_OWORD *)(v300 + 176) = v312;
        *(_OWORD *)(v300 + 128) = v310;
        *(_OWORD *)(v300 + 144) = v311;
        long long v313 = *(_OWORD *)(v301 + 192);
        long long v314 = *(_OWORD *)(v301 + 208);
        long long v315 = *(_OWORD *)(v301 + 224);
        *(void *)(v300 + 240) = *(void *)(v301 + 240);
        *(_OWORD *)(v300 + 208) = v314;
        *(_OWORD *)(v300 + 224) = v315;
        *(_OWORD *)(v300 + 192) = v313;
        unint64_t v316 = v500;
        size_t v317 = v481;
      }
      uint64_t v322 = (_OWORD *)((v300 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v323 = (long long *)((v301 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v324 = *v323;
      *(_OWORD *)((char *)v322 + 9) = *(long long *)((char *)v323 + 9);
      *uint64_t v322 = v324;
      unint64_t v325 = (v300 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v326 = (v301 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v327 = *(_OWORD *)v326;
      *(unsigned char *)(v325 + 16) = *(unsigned char *)(v326 + 16);
      *(_OWORD *)unint64_t v325 = v327;
      long long v328 = (void *)((v300 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v329 = (v301 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v330 = *(void *)v329;
      v329 += 15;
      *long long v328 = v330;
      long long v331 = (void *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v332 = *(void *)(v329 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v333 = *(void *)((v329 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v332, v333);
      char v132 = 0;
      *long long v331 = v332;
      v331[1] = v333;
      uint64_t v334 = (void *)((v316 + v490) & 0xFFFFFFFFFFFFFFF8);
      v335 = (void *)((v317 + v490) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v334 = *v335;
      uint64_t v336 = (void *)(((unint64_t)v334 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v337 = (void *)(((unint64_t)v335 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v336 = *v337;
      v336[1] = v337[1];
LABEL_118:
      uint64_t v38 = v477;
LABEL_119:
      *((unsigned char *)v89 + v38) = v132;
      swift_bridgeObjectRetain();
      return v89;
  }
}

char *sub_1005FB1CC(char *a1, char *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v524 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v498 = *(unsigned __int8 *)(v524 + 80);
    uint64_t v510 = *(void *)(v524 + 64);
    uint64_t v500 = v510 + v498;
    uint64_t v476 = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(v476 - 8);
    uint64_t v526 = v3;
    v528 = v2;
    int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
    uint64_t v474 = swift_getAssociatedTypeWitness();
    uint64_t v520 = *(void *)(v474 - 8);
    uint64_t v5 = *(unsigned __int8 *)(v520 + 80);
    uint64_t v506 = v4 | v5 | 7;
    uint64_t v469 = v510 + v506;
    uint64_t v475 = *(void *)(v3 + 64) + 7;
    uint64_t v473 = v5 + 8;
    uint64_t v522 = v5;
    uint64_t v470 = *(void *)(v520 + 64) + 7;
    unint64_t v477 = ((((v470 + ((v5 + 8 + (v475 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v6 = sub_10096B0E0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v8 | 7;
    uint64_t v529 = v6;
    uint64_t v530 = (v8 | 7) + 16;
    uint64_t v521 = v8 + 12;
    size_t v10 = *(void *)(v7 + 64);
    uint64_t v519 = v10 + v8;
    size_t v480 = v10 + 12;
    uint64_t v515 = v7;
    uint64_t v516 = v8 + 10;
    unsigned int v501 = *(_DWORD *)(v7 + 84);
    size_t v481 = v10;
    if (v501) {
      size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    else {
      size_t v11 = v10 + 1;
    }
    size_t __n = v11;
    size_t v517 = v11 + 7;
    unint64_t v459 = (v8
          + 10
          + ((((((v10 + 12 + ((v10 + v8 + ((v8 + 12) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
    unint64_t v503 = (((((((((v11 + 7 + v459) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v518 = v503 + 16;
    uint64_t v460 = (v530 + v477 + ((v510 + v506 + ((v510 + v498) & ~v498)) & ~v506)) & ~(v8 | 7);
    size_t v505 = ((((v460 + v503 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v12 = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v488 = v13;
    uint64_t v489 = v12;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v490 = v16;
    uint64_t v491 = v15;
    int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
    uint64_t v18 = v524;
    uint64_t v19 = swift_getAssociatedTypeWitness();
    uint64_t v20 = v14;
    uint64_t v495 = v19;
    uint64_t v493 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned __int8 *)(v493 + 80);
    int v22 = v17 | v21;
    uint64_t v2 = (char *)v528;
    uint64_t v23 = v22 | 7u;
    uint64_t v24 = v14 | v8 | v23;
    size_t v468 = v505 + v24;
    uint64_t v25 = v13;
    uint64_t v26 = v506;
    uint64_t v27 = *(void *)(v25 + 64);
    uint64_t v484 = v27 + v14;
    uint64_t v485 = v27 + v23;
    uint64_t v486 = *(void *)(v16 + 64) + 7;
    uint64_t v487 = v21 + 8;
    uint64_t v492 = *(void *)(v493 + 64) + 7;
    unint64_t v494 = ((((v492 + ((v21 + 8 + (v486 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v28 = (v503 + ((v530 + v494 + ((v27 + v23 + ((v27 + v14) & ~v14)) & ~v23)) & ~v9) + 327) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = ((((v29 + ((v505 + v24) & ~v24) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v31 = v506 | v498 | v8;
    uint64_t v465 = v31 + v510;
    if (*(_DWORD *)(v3 + 84) <= *(_DWORD *)(v520 + 84)) {
      unsigned int v32 = *(_DWORD *)(v520 + 84);
    }
    else {
      unsigned int v32 = *(_DWORD *)(v3 + 84);
    }
    unsigned int v455 = v32;
    if (v32 <= 0x7FFFFFFE) {
      unsigned int v32 = 2147483646;
    }
    unsigned int v458 = v32;
    if (v32 <= *(_DWORD *)(v524 + 84)) {
      unsigned int v32 = *(_DWORD *)(v524 + 84);
    }
    if (v501 <= 0x7FFFFFFE) {
      unsigned int v33 = 2147483646;
    }
    else {
      unsigned int v33 = v501;
    }
    if (v32 <= v33) {
      unsigned int v32 = v33;
    }
    unsigned int v456 = v32;
    if (v32 <= 0x7FFFFFFF) {
      int v34 = 0x7FFFFFFF;
    }
    else {
      int v34 = v32;
    }
    if (((v505 + (v465 & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 24 > v30) {
      unint64_t v30 = ((v505 + (v465 & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    unint64_t v35 = ((v28 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v35 > v30) {
      unint64_t v30 = v35;
    }
    if (v30 <= 0x10) {
      uint64_t v36 = 16;
    }
    else {
      uint64_t v36 = v30;
    }
    unsigned int v37 = *((unsigned __int8 *)v528 + v36);
    uint64_t v38 = v36 & 0xFFFFFFF8;
    if (v37 >= 4 && v38 != 0) {
      unsigned int v37 = *v528 + 4;
    }
    int v464 = v34;
    int v466 = *(_DWORD *)(v524 + 84);
    int v457 = *(_DWORD *)(v3 + 84);
    uint64_t v497 = ~v498;
    uint64_t v499 = ~v506;
    uint64_t v472 = ~v522;
    uint64_t v40 = ~v9;
    uint64_t v523 = ~v8;
    uint64_t v467 = ~v24;
    uint64_t v482 = ~v20;
    uint64_t v483 = ~v23;
    uint64_t v41 = ~v21;
    uint64_t v463 = ~v31;
    uint64_t v504 = v36;
    unint64_t v496 = v29 + 16;
    switch(v37)
    {
      case 1u:
        uint64_t v461 = v36 & 0xFFFFFFF8;
        uint64_t v478 = v40;
        unint64_t v63 = *(void (**)(_DWORD *, uint64_t))(v524 + 8);
        v63((char *)v528, AssociatedTypeWitness);
        unint64_t v64 = ((unint64_t)v528 + v465) & v463;
        if (v466 == v464)
        {
          int v65 = (*(uint64_t (**)(unint64_t))(v524 + 48))(((unint64_t)v528 + v465) & v463);
          goto LABEL_56;
        }
        unint64_t v66 = (v500 + v64) & v497;
        unint64_t v67 = (v469 + v66) & v499;
        if (v458 == v464)
        {
          if (v457 == v458)
          {
            int v65 = (*(uint64_t (**)(unint64_t))(v526 + 48))((v469 + v66) & v499);
            goto LABEL_56;
          }
          unint64_t v360 = (unint64_t *)((v475 + v67) & 0xFFFFFFFFFFFFFFF8);
          if (v455 <= 0x7FFFFFFE)
          {
            unint64_t v361 = *v360;
            goto LABEL_183;
          }
          int v65 = (*(uint64_t (**)(unint64_t))(v520 + 48))(((unint64_t)v360 + v473) & v472);
        }
        else
        {
          unint64_t v241 = v67 + v477;
          if ((v456 & 0x80000000) == 0)
          {
            unint64_t v242 = *(void *)(v241 + 8);
            if (v242 >= 0xFFFFFFFF) {
              LODWORD(v242) = -1;
            }
            if (v242 == -1)
            {
LABEL_57:
              unint64_t v66 = (v500 + v64) & v497;
              unint64_t v67 = (v469 + v66) & v499;
LABEL_58:
              v63((_DWORD *)v64, AssociatedTypeWitness);
              v63((_DWORD *)v66, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v526 + 8))(v67, v476);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v520 + 8))((v473 + ((v475 + v67) & 0xFFFFFFFFFFFFFFF8)) & v472, v474);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v68 = (v530 + v67 + v477) & v478;
              unint64_t v69 = *(void (**)(unint64_t, uint64_t))(v515 + 8);
              v69((v521 + v68) & v523, v529);
              unint64_t v70 = (v519 + ((v521 + v68) & v523)) & v523;
              v69(v70, v529);
              swift_bridgeObjectRelease();
              unint64_t v71 = (v516
                   + ((((((v480 + v70) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v523;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v515 + 48))(v71, 1, v529)) {
                v69(v71, v529);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v72 = (uint64_t *)((((((v517 + v71) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v73 = v72[1];
              if ((v73 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v72, v73);
              }
              swift_bridgeObjectRelease();
              unint64_t v74 = v518 + v68;
              LODWORD(v75) = -1;
              if (*(void *)(v74 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v75 = *(void *)(v74 + 16);
              }
              uint64_t v36 = v504;
              if ((int)v75 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v74 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_69:
            uint64_t v40 = v478;
            uint64_t v18 = v524;
            uint64_t v38 = v461;
LABEL_81:
            swift_bridgeObjectRelease();
            unsigned int v86 = a2[v36];
            if (v38) {
              BOOL v87 = v86 >= 4;
            }
            else {
              BOOL v87 = 0;
            }
            if (v87) {
              unsigned int v86 = *(_DWORD *)a2 + 4;
            }
            switch(v86)
            {
              case 1u:
                unint64_t v122 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
                v122(v2, a2, AssociatedTypeWitness);
                unint64_t v123 = (char *)((unint64_t)&v2[v465] & v463);
                uint64_t v124 = (char *)((unint64_t)&a2[v465] & v463);
                v511 = v123;
                if (v466 == v464)
                {
                  int v125 = (*(uint64_t (**)(char *))(v18 + 48))(v124);
LABEL_160:
                  if (v125)
                  {
LABEL_161:
                    memcpy(v123, v124, v505);
LABEL_162:
                    size_t v366 = __n;
LABEL_179:
                    unint64_t v451 = ((((v460
                             + ((((((((((v459 + v366 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v452 = (unint64_t)&v511[v451];
                    unint64_t v453 = (unint64_t)&v124[v451];
                    *(unsigned char *)unint64_t v452 = *(unsigned char *)v453;
                    v452 &= 0xFFFFFFFFFFFFFFF8;
                    v453 &= 0xFFFFFFFFFFFFFFF8;
                    *(void *)(v452 + 8) = *(void *)(v453 + 8);
                    *(void *)(v452 + 16) = *(void *)(v453 + 16);
                    char v160 = 1;
LABEL_180:
                    v2[v36] = v160;
                    swift_bridgeObjectRetain();
                    return v2;
                  }
                  unint64_t v161 = (unint64_t)&v124[v500] & v497;
                  unint64_t v162 = (v469 + v161) & v499;
LABEL_164:
                  v122(v123, v124, AssociatedTypeWitness);
                  v122((char *)((unint64_t)&v123[v500] & v497), (char *)v161, AssociatedTypeWitness);
                  unint64_t v367 = (v469 + ((unint64_t)&v123[v500] & v497)) & v499;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v526 + 16))(v367, v162, v476);
                  unint64_t v368 = (void *)((v475 + v367) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v369 = (void *)((v475 + v162) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v368 = *v369;
                  unint64_t v370 = ((unint64_t)v368 + v473) & v472;
                  unint64_t v371 = ((unint64_t)v369 + v473) & v472;
                  v372 = *(void (**)(unint64_t, unint64_t, uint64_t))(v520 + 16);
                  swift_bridgeObjectRetain();
                  v372(v370, v371, v474);
                  v373 = (void *)((v470 + v371) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v374 = (void *)((v470 + v370) & 0xFFFFFFFFFFFFFFF8);
                  *unsigned int v374 = *v373;
                  unint64_t v375 = (void *)(((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v376 = (void *)(((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v375 = *v376;
                  v375[1] = v376[1];
                  unint64_t v377 = (void *)(v367 + v477);
                  void *v377 = *(void *)(v162 + v477);
                  v377[1] = *(void *)(v162 + v477 + 8);
                  unint64_t v378 = (v530 + v367 + v477) & v40;
                  unint64_t v379 = (v530 + v162 + v477) & v40;
                  *(unsigned char *)unint64_t v378 = *(unsigned char *)v379;
                  uint64_t v380 = v378 | 4;
                  int v381 = *(_DWORD *)(v379 | 4);
                  *(unsigned char *)(v380 + 4) = *(unsigned char *)((v379 | 4) + 4);
                  *(_DWORD *)uint64_t v380 = v381;
                  *(_WORD *)(v378 + 10) = *(_WORD *)(v379 + 0xA);
                  unint64_t v534 = v378;
                  unint64_t v382 = (v521 + v378) & v523;
                  unint64_t v527 = v379;
                  unint64_t v383 = (v521 + v379) & v523;
                  unint64_t v384 = *(void (**)(unint64_t, unint64_t, uint64_t))(v515 + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v384(v382, v383, v529);
                  unint64_t v385 = (v519 + v382) & v523;
                  unint64_t v386 = (v519 + v383) & v523;
                  v384(v385, v386, v529);
                  unint64_t v387 = (unsigned char *)(v385 + v481);
                  *unint64_t v387 = *(unsigned char *)(v386 + v481);
                  v387[1] = *(unsigned char *)(v386 + v481 + 1);
                  v387[2] = *(unsigned char *)(v386 + v481 + 2);
                  v387[3] = *(unsigned char *)(v386 + v481 + 3);
                  v387[4] = *(unsigned char *)(v386 + v481 + 4);
                  unint64_t v388 = (v385 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v389 = (v386 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v388 = *(void *)v389;
                  *(void *)(v388 + 8) = *(void *)(v389 + 8);
                  *(unsigned char *)(v388 + 16) = *(unsigned char *)(v389 + 16);
                  *(unsigned char *)(v388 + 17) = *(unsigned char *)(v389 + 17);
                  *(unsigned char *)(v388 + 18) = *(unsigned char *)(v389 + 18);
                  *(unsigned char *)(v388 + 19) = *(unsigned char *)(v389 + 19);
                  unint64_t v390 = (v388 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v391 = (v389 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v390 = *(void *)v391;
                  *(unsigned char *)(v390 + 8) = *(unsigned char *)(v391 + 8);
                  *(unsigned char *)(v390 + 9) = *(unsigned char *)(v391 + 9);
                  *(unsigned char *)(v390 + 10) = *(unsigned char *)(v391 + 10);
                  *(unsigned char *)(v390 + 11) = *(unsigned char *)(v391 + 11);
                  *(unsigned char *)(v390 + 12) = *(unsigned char *)(v391 + 12);
                  unint64_t v392 = (void *)((v389 + 47) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v393 = (void *)((v388 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v393 = *v392;
                  unint64_t v394 = ((unint64_t)v393 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v395 = ((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v394 = *(void *)v395;
                  *(unsigned char *)(v394 + 8) = *(unsigned char *)(v395 + 8);
                  *(unsigned char *)(v394 + 9) = *(unsigned char *)(v395 + 9);
                  unint64_t v396 = (void *)((v516 + v394) & v523);
                  int v397 = (const void *)((v516 + v395) & v523);
                  long long v398 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v515 + 48);
                  swift_bridgeObjectRetain();
                  if (v398(v397, 1, v529))
                  {
                    memcpy(v396, v397, __n);
                  }
                  else
                  {
                    v384((unint64_t)v396, (unint64_t)v397, v529);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v515 + 56))(v396, 0, 1, v529);
                  }
                  long long v399 = (void *)(((unint64_t)v396 + v517) & 0xFFFFFFFFFFFFFFF8);
                  long long v400 = (void *)(((unint64_t)v397 + v517) & 0xFFFFFFFFFFFFFFF8);
                  *long long v399 = *v400;
                  unint64_t v401 = ((unint64_t)v399 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v402 = ((unint64_t)v400 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v403 = *(void *)v402;
                  *(unsigned char *)(v401 + 8) = *(unsigned char *)(v402 + 8);
                  *(void *)unint64_t v401 = v403;
                  long long v404 = (void *)(((unint64_t)v399 + 31) & 0xFFFFFFFFFFFFFFF8);
                  long long v405 = (void *)(((unint64_t)v400 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *long long v404 = *v405;
                  unint64_t v406 = ((unint64_t)v404 + 15) & 0xFFFFFFFFFFFFFFF8;
                  long long v407 = (uint64_t *)(((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v408 = v407[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if ((v408 & 0x3000000000000000) != 0)
                  {
                    *(_OWORD *)unint64_t v406 = *(_OWORD *)v407;
                  }
                  else
                  {
                    uint64_t v409 = *v407;
                    sub_10001EBB0(*v407, v408);
                    *(void *)unint64_t v406 = v409;
                    *(void *)(v406 + 8) = v408;
                  }
                  unsigned int v410 = v501;
                  unint64_t v411 = (v406 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v412 = ((unint64_t)v407 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v413 = *(void *)v412;
                  *(unsigned char *)(v411 + 8) = *(unsigned char *)(v412 + 8);
                  *(void *)unint64_t v411 = v413;
                  *(unsigned char *)(v411 + 9) = *(unsigned char *)(v412 + 9);
                  unint64_t v414 = (v411 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v415 = (v412 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  int v416 = *(_DWORD *)v415;
                  *(unsigned char *)(v414 + 4) = *(unsigned char *)(v415 + 4);
                  *(_DWORD *)unint64_t v414 = v416;
                  unint64_t v417 = (void *)((v411 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v418 = (void *)((v412 + 25) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v417 = *v418;
                  v417[1] = v418[1];
                  unint64_t v419 = v518 + v534;
                  v420 = (long long *)(v518 + v527);
                  unint64_t v421 = *(void *)(v518 + v527 + 16);
                  if (v421 >= 0xFFFFFFFF) {
                    LODWORD(v421) = -1;
                  }
                  int v422 = v421 - 1;
                  swift_bridgeObjectRetain();
                  if (v422 < 0)
                  {
                    *(void *)unint64_t v419 = *(void *)v420;
                    *(unsigned char *)(v419 + 8) = *((unsigned char *)v420 + 8);
                    *(unsigned char *)(v419 + 9) = *((unsigned char *)v420 + 9);
                    uint64_t v435 = *((void *)v420 + 2);
                    swift_errorRetain();
                    *(void *)(v419 + 16) = v435;
                    uint64_t v436 = *((void *)v420 + 3);
                    swift_errorRetain();
                    *(void *)(v419 + 24) = v436;
                    *(unsigned char *)(v419 + 32) = *((unsigned char *)v420 + 32);
                    *(unsigned char *)(v419 + 33) = *((unsigned char *)v420 + 33);
                    *(unsigned char *)(v419 + 34) = *((unsigned char *)v420 + 34);
                    *(void *)(v419 + 40) = *((void *)v420 + 5);
                    *(void *)(v419 + 48) = *((void *)v420 + 6);
                    *(void *)(v419 + 56) = *((void *)v420 + 7);
                    *(void *)(v419 + 64) = *((void *)v420 + 8);
                    *(unsigned char *)(v419 + 72) = *((unsigned char *)v420 + 72);
                    *(void *)(v419 + 80) = *((void *)v420 + 10);
                    *(void *)(v419 + 88) = *((void *)v420 + 11);
                    v535 = (void *)*((void *)v420 + 12);
                    *(void *)(v419 + 96) = v535;
                    *(unsigned char *)(v419 + 104) = *((unsigned char *)v420 + 104);
                    *(unsigned char *)(v419 + 105) = *((unsigned char *)v420 + 105);
                    *(void *)(v419 + 112) = *((void *)v420 + 14);
                    *(void *)(v419 + 120) = *((void *)v420 + 15);
                    *(void *)(v419 + 128) = *((void *)v420 + 16);
                    *(void *)(v419 + 136) = *((void *)v420 + 17);
                    *(void *)(v419 + 144) = *((void *)v420 + 18);
                    *(void *)(v419 + 152) = *((void *)v420 + 19);
                    *(void *)(v419 + 160) = *((void *)v420 + 20);
                    *(void *)(v419 + 168) = *((void *)v420 + 21);
                    *(unsigned char *)(v419 + 176) = *((unsigned char *)v420 + 176);
                    *(void *)(v419 + 184) = *((void *)v420 + 23);
                    uint64_t v437 = *((void *)v420 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v438 = v535;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v437)
                    {
                      *(void *)(v419 + 192) = v437;
                      *(void *)(v419 + 200) = *((void *)v420 + 25);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v419 + 192) = v420[12];
                    }
                    uint64_t v2 = (char *)v528;
                    size_t v366 = v481;
                    unsigned int v410 = v501;
                    *(void *)(v419 + 208) = *((void *)v420 + 26);
                    *(void *)(v419 + 216) = *((void *)v420 + 27);
                    *(void *)(v419 + 224) = *((void *)v420 + 28);
                    *(void *)(v419 + 232) = *((void *)v420 + 29);
                    *(void *)(v419 + 240) = *((void *)v420 + 30);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v423 = *v420;
                    long long v424 = v420[1];
                    long long v425 = v420[3];
                    *(_OWORD *)(v419 + 32) = v420[2];
                    *(_OWORD *)(v419 + 48) = v425;
                    *(_OWORD *)unint64_t v419 = v423;
                    *(_OWORD *)(v419 + 16) = v424;
                    long long v426 = v420[4];
                    long long v427 = v420[5];
                    long long v428 = v420[7];
                    *(_OWORD *)(v419 + 96) = v420[6];
                    *(_OWORD *)(v419 + 112) = v428;
                    *(_OWORD *)(v419 + 64) = v426;
                    *(_OWORD *)(v419 + 80) = v427;
                    long long v429 = v420[8];
                    long long v430 = v420[9];
                    long long v431 = v420[11];
                    *(_OWORD *)(v419 + 160) = v420[10];
                    *(_OWORD *)(v419 + 176) = v431;
                    *(_OWORD *)(v419 + 128) = v429;
                    *(_OWORD *)(v419 + 144) = v430;
                    long long v432 = v420[12];
                    long long v433 = v420[13];
                    long long v434 = v420[14];
                    *(void *)(v419 + 240) = *((void *)v420 + 30);
                    *(_OWORD *)(v419 + 208) = v433;
                    *(_OWORD *)(v419 + 224) = v434;
                    *(_OWORD *)(v419 + 192) = v432;
                    size_t v366 = v481;
                  }
                  size_t v439 = (_OWORD *)((v419 + 255) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v440 = (long long *)(((unint64_t)v420 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v441 = *v440;
                  *(_OWORD *)((char *)v439 + 9) = *(long long *)((char *)v440 + 9);
                  *size_t v439 = v441;
                  unint64_t v442 = (v419 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v443 = ((unint64_t)v420 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v444 = *(_OWORD *)v443;
                  *(unsigned char *)(v442 + 16) = *(unsigned char *)(v443 + 16);
                  *(_OWORD *)unint64_t v442 = v444;
                  uint64_t v445 = (void *)((v419 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v446 = ((unint64_t)v420 + 311) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v447 = *(void *)v446;
                  v446 += 15;
                  *uint64_t v445 = v447;
                  uint64_t v448 = (void *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v449 = *(void *)(v446 & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v450 = *(void *)((v446 & 0xFFFFFFFFFFFFFFF8) + 8);
                  sub_10018B584(v449, v450);
                  *uint64_t v448 = v449;
                  v448[1] = v450;
                  uint64_t v36 = v504;
                  uint64_t v124 = (char *)((unint64_t)&a2[v465] & v463);
                  if (v410) {
                    goto LABEL_179;
                  }
                  goto LABEL_162;
                }
                unint64_t v161 = (unint64_t)&v124[v500] & v497;
                unint64_t v162 = (v469 + v161) & v499;
                if (v458 == v464)
                {
                  if (v457 == v458)
                  {
                    int v125 = (*(uint64_t (**)(unint64_t))(v526 + 48))((v469 + v161) & v499);
                    goto LABEL_160;
                  }
                  int v362 = (unint64_t *)((v475 + v162) & 0xFFFFFFFFFFFFFFF8);
                  if (v455 > 0x7FFFFFFE)
                  {
                    int v125 = (*(uint64_t (**)(unint64_t))(v520 + 48))(((unint64_t)v362 + v473) & v472);
                    goto LABEL_160;
                  }
                  unint64_t v363 = *v362;
                }
                else
                {
                  unint64_t v243 = v162 + v477;
                  if ((v456 & 0x80000000) == 0)
                  {
                    unint64_t v244 = *(void *)(v243 + 8);
                    if (v244 >= 0xFFFFFFFF) {
                      LODWORD(v244) = -1;
                    }
                    int v125 = v244 + 1;
                    goto LABEL_160;
                  }
                  uint64_t v365 = (v521 + ((v530 + v243) & v40)) & v523;
                  if (v501 > 0x7FFFFFFD)
                  {
                    int v125 = (*(uint64_t (**)(uint64_t))(v515 + 48))(v365);
                    goto LABEL_160;
                  }
                  unint64_t v363 = *(void *)(((v480 + ((v519 + v365) & v523)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v363 >= 0xFFFFFFFF) {
                  LODWORD(v363) = -1;
                }
                if ((v363 + 1) >= 2) {
                  goto LABEL_161;
                }
                goto LABEL_164;
              case 2u:
                unint64_t v126 = *(void (**)(void *, void *, uint64_t))(v488 + 16);
                v126(v2, a2, v489);
                v126((void *)((unint64_t)&v2[v484] & v482), (void *)((unint64_t)&a2[v484] & v482), v489);
                unint64_t v127 = (v485 + ((unint64_t)&v2[v484] & v482)) & v483;
                unint64_t v128 = (v485 + ((unint64_t)&a2[v484] & v482)) & v483;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v490 + 16))(v127, v128, v491);
                uint64_t v129 = (void *)((v486 + v127) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v130 = (void *)((v486 + v128) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v129 = *v130;
                unint64_t v131 = ((unint64_t)v129 + v487) & v41;
                unint64_t v132 = ((unint64_t)v130 + v487) & v41;
                unint64_t v133 = *(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 16);
                swift_bridgeObjectRetain();
                v133(v131, v132, v495);
                unint64_t v134 = (void *)((v492 + v132) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v135 = (void *)((v492 + v131) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v135 = *v134;
                uint64_t v136 = (void *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v137 = (void *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v136 = *v137;
                v136[1] = v137[1];
                unint64_t v138 = (void *)(v494 + v127);
                void *v138 = *(void *)(v494 + v128);
                v138[1] = *(void *)(v494 + v128 + 8);
                unint64_t v139 = (v530 + v494 + v127) & v40;
                unint64_t v140 = (v530 + v494 + v128) & v40;
                *(unsigned char *)unint64_t v139 = *(unsigned char *)v140;
                uint64_t v141 = v139 | 4;
                int v142 = *(_DWORD *)(v140 | 4);
                *(unsigned char *)(v141 + 4) = *(unsigned char *)((v140 | 4) + 4);
                *(_DWORD *)uint64_t v141 = v142;
                *(_WORD *)(v139 + 10) = *(_WORD *)(v140 + 0xA);
                unint64_t v531 = v139;
                unint64_t v143 = (v521 + v139) & v523;
                unint64_t v144 = (v521 + v140) & v523;
                uint64_t v145 = *(void (**)(unint64_t, unint64_t, uint64_t))(v515 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v145(v143, v144, v529);
                unint64_t v146 = (v519 + v143) & v523;
                unint64_t v147 = (v519 + v144) & v523;
                v145(v146, v147, v529);
                uint64_t v148 = (unsigned char *)(v146 + v481);
                *uint64_t v148 = *(unsigned char *)(v147 + v481);
                v148[1] = *(unsigned char *)(v147 + v481 + 1);
                v148[2] = *(unsigned char *)(v147 + v481 + 2);
                v148[3] = *(unsigned char *)(v147 + v481 + 3);
                v148[4] = *(unsigned char *)(v147 + v481 + 4);
                unint64_t v149 = (v146 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v150 = (v147 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v149 = *(void *)v150;
                *(void *)(v149 + 8) = *(void *)(v150 + 8);
                *(unsigned char *)(v149 + 16) = *(unsigned char *)(v150 + 16);
                *(unsigned char *)(v149 + 17) = *(unsigned char *)(v150 + 17);
                *(unsigned char *)(v149 + 18) = *(unsigned char *)(v150 + 18);
                *(unsigned char *)(v149 + 19) = *(unsigned char *)(v150 + 19);
                unint64_t v151 = (v149 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v152 = (v150 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v151 = *(void *)v152;
                *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
                *(unsigned char *)(v151 + 9) = *(unsigned char *)(v152 + 9);
                *(unsigned char *)(v151 + 10) = *(unsigned char *)(v152 + 10);
                *(unsigned char *)(v151 + 11) = *(unsigned char *)(v152 + 11);
                *(unsigned char *)(v151 + 12) = *(unsigned char *)(v152 + 12);
                uint64_t v153 = (void *)((v150 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v154 = (void *)((v149 + 47) & 0xFFFFFFFFFFFFFFF8);
                void *v154 = *v153;
                unint64_t v155 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v156 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v155 = *(void *)v156;
                *(unsigned char *)(v155 + 8) = *(unsigned char *)(v156 + 8);
                *(unsigned char *)(v155 + 9) = *(unsigned char *)(v156 + 9);
                int v157 = (void *)((v516 + v155) & v523);
                long long v158 = (const void *)((v516 + v156) & v523);
                long long v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v515 + 48);
                swift_bridgeObjectRetain();
                if (v159(v158, 1, v529))
                {
                  memcpy(v157, v158, __n);
                }
                else
                {
                  v145((unint64_t)v157, (unint64_t)v158, v529);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v515 + 56))(v157, 0, 1, v529);
                }
                long long v163 = (void *)(((unint64_t)v157 + v517) & 0xFFFFFFFFFFFFFFF8);
                long long v164 = (void *)(((unint64_t)v158 + v517) & 0xFFFFFFFFFFFFFFF8);
                *long long v163 = *v164;
                unint64_t v165 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v166 = ((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v167 = *(void *)v166;
                *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
                *(void *)unint64_t v165 = v167;
                long long v168 = (void *)(((unint64_t)v163 + 31) & 0xFFFFFFFFFFFFFFF8);
                long long v169 = (void *)(((unint64_t)v164 + 31) & 0xFFFFFFFFFFFFFFF8);
                *long long v168 = *v169;
                unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v171 = (uint64_t *)(((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v172 = v171[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v172 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v170 = *(_OWORD *)v171;
                }
                else
                {
                  uint64_t v173 = *v171;
                  sub_10001EBB0(*v171, v172);
                  *(void *)unint64_t v170 = v173;
                  *(void *)(v170 + 8) = v172;
                }
                unint64_t v174 = (v170 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v175 = ((unint64_t)v171 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v176 = *(void *)v175;
                *(unsigned char *)(v174 + 8) = *(unsigned char *)(v175 + 8);
                *(void *)unint64_t v174 = v176;
                *(unsigned char *)(v174 + 9) = *(unsigned char *)(v175 + 9);
                unint64_t v177 = (v174 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v178 = (v175 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v179 = *(_DWORD *)v178;
                *(unsigned char *)(v177 + 4) = *(unsigned char *)(v178 + 4);
                *(_DWORD *)unint64_t v177 = v179;
                unint64_t v180 = (void *)((v174 + 25) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v181 = (void *)((v175 + 25) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v180 = *v181;
                v180[1] = v181[1];
                unint64_t v182 = v531 + v518;
                unint64_t v183 = v140 + v518;
                unint64_t v184 = *(void *)(v140 + v518 + 16);
                if (v184 >= 0xFFFFFFFF) {
                  LODWORD(v184) = -1;
                }
                int v185 = v184 - 1;
                swift_bridgeObjectRetain();
                if (v185 < 0)
                {
                  *(void *)unint64_t v182 = *(void *)v183;
                  *(unsigned char *)(v182 + 8) = *(unsigned char *)(v183 + 8);
                  *(unsigned char *)(v182 + 9) = *(unsigned char *)(v183 + 9);
                  uint64_t v198 = *(void *)(v183 + 16);
                  swift_errorRetain();
                  *(void *)(v182 + 16) = v198;
                  uint64_t v199 = *(void *)(v183 + 24);
                  swift_errorRetain();
                  *(void *)(v182 + 24) = v199;
                  *(unsigned char *)(v182 + 32) = *(unsigned char *)(v183 + 32);
                  *(unsigned char *)(v182 + 33) = *(unsigned char *)(v183 + 33);
                  *(unsigned char *)(v182 + 34) = *(unsigned char *)(v183 + 34);
                  *(void *)(v182 + 40) = *(void *)(v183 + 40);
                  *(void *)(v182 + 48) = *(void *)(v183 + 48);
                  *(void *)(v182 + 56) = *(void *)(v183 + 56);
                  *(void *)(v182 + 64) = *(void *)(v183 + 64);
                  *(unsigned char *)(v182 + 72) = *(unsigned char *)(v183 + 72);
                  *(void *)(v182 + 80) = *(void *)(v183 + 80);
                  *(void *)(v182 + 88) = *(void *)(v183 + 88);
                  v532 = *(void **)(v183 + 96);
                  *(void *)(v182 + 96) = v532;
                  *(unsigned char *)(v182 + 104) = *(unsigned char *)(v183 + 104);
                  *(unsigned char *)(v182 + 105) = *(unsigned char *)(v183 + 105);
                  *(void *)(v182 + 112) = *(void *)(v183 + 112);
                  *(void *)(v182 + 120) = *(void *)(v183 + 120);
                  *(void *)(v182 + 128) = *(void *)(v183 + 128);
                  *(void *)(v182 + 136) = *(void *)(v183 + 136);
                  *(void *)(v182 + 144) = *(void *)(v183 + 144);
                  *(void *)(v182 + 152) = *(void *)(v183 + 152);
                  *(void *)(v182 + 160) = *(void *)(v183 + 160);
                  *(void *)(v182 + 168) = *(void *)(v183 + 168);
                  *(unsigned char *)(v182 + 176) = *(unsigned char *)(v183 + 176);
                  *(void *)(v182 + 184) = *(void *)(v183 + 184);
                  uint64_t v200 = *(void *)(v183 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v201 = v532;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v200)
                  {
                    *(void *)(v182 + 192) = v200;
                    *(void *)(v182 + 200) = *(void *)(v183 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v182 + 192) = *(_OWORD *)(v183 + 192);
                  }
                  uint64_t v2 = (char *)v528;
                  uint64_t v36 = v504;
                  *(void *)(v182 + 208) = *(void *)(v183 + 208);
                  *(void *)(v182 + 216) = *(void *)(v183 + 216);
                  *(void *)(v182 + 224) = *(void *)(v183 + 224);
                  *(void *)(v182 + 232) = *(void *)(v183 + 232);
                  *(void *)(v182 + 240) = *(void *)(v183 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v186 = *(_OWORD *)v183;
                  long long v187 = *(_OWORD *)(v183 + 16);
                  long long v188 = *(_OWORD *)(v183 + 48);
                  *(_OWORD *)(v182 + 32) = *(_OWORD *)(v183 + 32);
                  *(_OWORD *)(v182 + 48) = v188;
                  *(_OWORD *)unint64_t v182 = v186;
                  *(_OWORD *)(v182 + 16) = v187;
                  long long v189 = *(_OWORD *)(v183 + 64);
                  long long v190 = *(_OWORD *)(v183 + 80);
                  long long v191 = *(_OWORD *)(v183 + 112);
                  *(_OWORD *)(v182 + 96) = *(_OWORD *)(v183 + 96);
                  *(_OWORD *)(v182 + 112) = v191;
                  *(_OWORD *)(v182 + 64) = v189;
                  *(_OWORD *)(v182 + 80) = v190;
                  long long v192 = *(_OWORD *)(v183 + 128);
                  long long v193 = *(_OWORD *)(v183 + 144);
                  long long v194 = *(_OWORD *)(v183 + 176);
                  *(_OWORD *)(v182 + 160) = *(_OWORD *)(v183 + 160);
                  *(_OWORD *)(v182 + 176) = v194;
                  *(_OWORD *)(v182 + 128) = v192;
                  *(_OWORD *)(v182 + 144) = v193;
                  long long v195 = *(_OWORD *)(v183 + 192);
                  long long v196 = *(_OWORD *)(v183 + 208);
                  long long v197 = *(_OWORD *)(v183 + 224);
                  *(void *)(v182 + 240) = *(void *)(v183 + 240);
                  *(_OWORD *)(v182 + 208) = v196;
                  *(_OWORD *)(v182 + 224) = v197;
                  *(_OWORD *)(v182 + 192) = v195;
                  uint64_t v36 = v504;
                }
                uint64_t v245 = (_OWORD *)((v182 + 255) & 0xFFFFFFFFFFFFFFF8);
                size_t v246 = (long long *)((v183 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v247 = *v246;
                *(_OWORD *)((char *)v245 + 9) = *(long long *)((char *)v246 + 9);
                *uint64_t v245 = v247;
                unint64_t v248 = (v182 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v249 = (v183 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v250 = *(_OWORD *)v249;
                *(unsigned char *)(v248 + 16) = *(unsigned char *)(v249 + 16);
                *(_OWORD *)unint64_t v248 = v250;
                uint64_t v251 = (void *)((v182 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v252 = (v183 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v253 = *(void *)v252;
                v252 += 15;
                *uint64_t v251 = v253;
                unint64_t v254 = (void *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v255 = *(void *)(v252 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v256 = *(void *)((v252 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_10018B584(v255, v256);
                *unint64_t v254 = v255;
                v254[1] = v256;
                v2[v496] = a2[v496];
                unint64_t v257 = (unint64_t)&v2[v496] & 0xFFFFFFFFFFFFFFF8;
                unint64_t v258 = (unint64_t)&a2[v496] & 0xFFFFFFFFFFFFFFF8;
                *(void *)(v257 + 8) = *(void *)(v258 + 8);
                *(void *)(v257 + 16) = *(void *)(v258 + 16);
                char v160 = 2;
                goto LABEL_180;
              case 3u:
                *(void *)uint64_t v2 = *(void *)a2;
                *((void *)v2 + 1) = *((void *)a2 + 1);
                char v160 = 3;
                goto LABEL_180;
              default:
                int v88 = *(void (**)(void *, void *, uint64_t))(v18 + 16);
                v88(v2, a2, AssociatedTypeWitness);
                v88((void *)((unint64_t)&v2[v500] & v497), (void *)((unint64_t)&a2[v500] & v497), AssociatedTypeWitness);
                unint64_t v89 = (((unint64_t)&v2[v500] & v497) + v510 + v26) & v499;
                unint64_t v90 = (((unint64_t)&a2[v500] & v497) + v510 + v26) & v499;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v526 + 16))(v89, v90, v476);
                uint64_t v91 = (void *)((v475 + v89) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v92 = (void *)((v475 + v90) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v91 = *v92;
                unint64_t v93 = ((unint64_t)v91 + v473) & v472;
                unint64_t v94 = ((unint64_t)v92 + v473) & v472;
                uint64_t v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v520 + 16);
                swift_bridgeObjectRetain();
                v95(v93, v94, v474);
                unint64_t v96 = (void *)((v470 + v94) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v97 = (void *)((v470 + v93) & 0xFFFFFFFFFFFFFFF8);
                void *v97 = *v96;
                unint64_t v98 = (void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v99 = (void *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v98 = *v99;
                v98[1] = v99[1];
                unint64_t v100 = (void *)(v477 + v89);
                *unint64_t v100 = *(void *)(v477 + v90);
                v100[1] = *(void *)(v477 + v90 + 8);
                unint64_t v101 = (v530 + v477 + v89) & v40;
                uint64_t v479 = v40;
                unint64_t v102 = (v530 + v477 + v90) & v40;
                *(unsigned char *)unint64_t v101 = *(unsigned char *)v102;
                uint64_t v103 = v101 | 4;
                int v104 = *(_DWORD *)(v102 | 4);
                *(unsigned char *)(v103 + 4) = *(unsigned char *)((v102 | 4) + 4);
                *(_DWORD *)uint64_t v103 = v104;
                *(_WORD *)(v101 + 10) = *(_WORD *)(v102 + 10);
                unint64_t v507 = v101;
                unint64_t v105 = (v521 + v101) & v523;
                unint64_t v106 = (v521 + v102) & v523;
                uint64_t v107 = *(void (**)(unint64_t, unint64_t, uint64_t))(v515 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v107(v105, v106, v529);
                unint64_t v108 = (v519 + v105) & v523;
                unint64_t v109 = (v519 + v106) & v523;
                v107(v108, v109, v529);
                uint64_t v110 = (unsigned char *)(v108 + v481);
                unsigned char *v110 = *(unsigned char *)(v109 + v481);
                v110[1] = *(unsigned char *)(v109 + v481 + 1);
                v110[2] = *(unsigned char *)(v109 + v481 + 2);
                v110[3] = *(unsigned char *)(v109 + v481 + 3);
                v110[4] = *(unsigned char *)(v109 + v481 + 4);
                unint64_t v111 = (v108 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v112 = (v109 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v111 = *(void *)v112;
                *(void *)(v111 + 8) = *(void *)(v112 + 8);
                *(unsigned char *)(v111 + 16) = *(unsigned char *)(v112 + 16);
                *(unsigned char *)(v111 + 17) = *(unsigned char *)(v112 + 17);
                *(unsigned char *)(v111 + 18) = *(unsigned char *)(v112 + 18);
                *(unsigned char *)(v111 + 19) = *(unsigned char *)(v112 + 19);
                unint64_t v113 = (v111 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v114 = (v112 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v113 = *(void *)v114;
                *(unsigned char *)(v113 + 8) = *(unsigned char *)(v114 + 8);
                *(unsigned char *)(v113 + 9) = *(unsigned char *)(v114 + 9);
                *(unsigned char *)(v113 + 10) = *(unsigned char *)(v114 + 10);
                *(unsigned char *)(v113 + 11) = *(unsigned char *)(v114 + 11);
                *(unsigned char *)(v113 + 12) = *(unsigned char *)(v114 + 12);
                uint64_t v115 = (void *)((v112 + 47) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v116 = (void *)((v111 + 47) & 0xFFFFFFFFFFFFFFF8);
                void *v116 = *v115;
                unint64_t v117 = ((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v118 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v117 = *(void *)v118;
                *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
                *(unsigned char *)(v117 + 9) = *(unsigned char *)(v118 + 9);
                uint64_t v119 = (void *)((v516 + v117) & v523);
                unint64_t v120 = (const void *)((v516 + v118) & v523);
                unint64_t v121 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v515 + 48);
                swift_bridgeObjectRetain();
                v525 = v107;
                if (v121(v120, 1, v529))
                {
                  memcpy(v119, v120, __n);
                }
                else
                {
                  v107((unint64_t)v119, (unint64_t)v120, v529);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v515 + 56))(v119, 0, 1, v529);
                }
                long long v202 = (void *)(((unint64_t)v119 + v517) & 0xFFFFFFFFFFFFFFF8);
                long long v203 = (void *)(((unint64_t)v120 + v517) & 0xFFFFFFFFFFFFFFF8);
                *long long v202 = *v203;
                unint64_t v204 = ((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v205 = ((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v206 = *(void *)v205;
                *(unsigned char *)(v204 + 8) = *(unsigned char *)(v205 + 8);
                *(void *)unint64_t v204 = v206;
                long long v207 = (void *)(((unint64_t)v202 + 31) & 0xFFFFFFFFFFFFFFF8);
                long long v208 = (void *)(((unint64_t)v203 + 31) & 0xFFFFFFFFFFFFFFF8);
                *long long v207 = *v208;
                unint64_t v209 = ((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v210 = (uint64_t *)(((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v211 = v210[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v211 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v209 = *(_OWORD *)v210;
                }
                else
                {
                  uint64_t v212 = *v210;
                  sub_10001EBB0(*v210, v211);
                  *(void *)unint64_t v209 = v212;
                  *(void *)(v209 + 8) = v211;
                }
                unint64_t v213 = (v209 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v214 = ((unint64_t)v210 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v215 = *(void *)v214;
                *(unsigned char *)(v213 + 8) = *(unsigned char *)(v214 + 8);
                *(void *)unint64_t v213 = v215;
                *(unsigned char *)(v213 + 9) = *(unsigned char *)(v214 + 9);
                unint64_t v216 = (v213 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v217 = (v214 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v218 = *(_DWORD *)v217;
                *(unsigned char *)(v216 + 4) = *(unsigned char *)(v217 + 4);
                *(_DWORD *)unint64_t v216 = v218;
                id v219 = (void *)((v213 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v220 = (void *)((v214 + 25) & 0xFFFFFFFFFFFFFFF8);
                *id v219 = *v220;
                v219[1] = v220[1];
                unint64_t v221 = v518 + v507;
                unint64_t v222 = v518 + v102;
                unint64_t v223 = *(void *)(v518 + v102 + 16);
                if (v223 >= 0xFFFFFFFF) {
                  LODWORD(v223) = -1;
                }
                int v224 = v223 - 1;
                swift_bridgeObjectRetain();
                uint64_t v512 = v121;
                if (v224 < 0)
                {
                  *(void *)unint64_t v221 = *(void *)v222;
                  *(unsigned char *)(v221 + 8) = *(unsigned char *)(v222 + 8);
                  *(unsigned char *)(v221 + 9) = *(unsigned char *)(v222 + 9);
                  uint64_t v237 = *(void *)(v222 + 16);
                  swift_errorRetain();
                  *(void *)(v221 + 16) = v237;
                  uint64_t v238 = *(void *)(v222 + 24);
                  swift_errorRetain();
                  *(void *)(v221 + 24) = v238;
                  *(unsigned char *)(v221 + 32) = *(unsigned char *)(v222 + 32);
                  *(unsigned char *)(v221 + 33) = *(unsigned char *)(v222 + 33);
                  *(unsigned char *)(v221 + 34) = *(unsigned char *)(v222 + 34);
                  *(void *)(v221 + 40) = *(void *)(v222 + 40);
                  *(void *)(v221 + 48) = *(void *)(v222 + 48);
                  *(void *)(v221 + 56) = *(void *)(v222 + 56);
                  *(void *)(v221 + 64) = *(void *)(v222 + 64);
                  *(unsigned char *)(v221 + 72) = *(unsigned char *)(v222 + 72);
                  *(void *)(v221 + 80) = *(void *)(v222 + 80);
                  *(void *)(v221 + 88) = *(void *)(v222 + 88);
                  uint64_t v508 = *(void **)(v222 + 96);
                  *(void *)(v221 + 96) = v508;
                  *(unsigned char *)(v221 + 104) = *(unsigned char *)(v222 + 104);
                  *(unsigned char *)(v221 + 105) = *(unsigned char *)(v222 + 105);
                  *(void *)(v221 + 112) = *(void *)(v222 + 112);
                  *(void *)(v221 + 120) = *(void *)(v222 + 120);
                  *(void *)(v221 + 128) = *(void *)(v222 + 128);
                  *(void *)(v221 + 136) = *(void *)(v222 + 136);
                  *(void *)(v221 + 144) = *(void *)(v222 + 144);
                  *(void *)(v221 + 152) = *(void *)(v222 + 152);
                  *(void *)(v221 + 160) = *(void *)(v222 + 160);
                  *(void *)(v221 + 168) = *(void *)(v222 + 168);
                  *(unsigned char *)(v221 + 176) = *(unsigned char *)(v222 + 176);
                  *(void *)(v221 + 184) = *(void *)(v222 + 184);
                  uint64_t v239 = *(void *)(v222 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v240 = v508;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v239)
                  {
                    *(void *)(v221 + 192) = v239;
                    *(void *)(v221 + 200) = *(void *)(v222 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v221 + 192) = *(_OWORD *)(v222 + 192);
                  }
                  uint64_t v2 = (char *)v528;
                  *(void *)(v221 + 208) = *(void *)(v222 + 208);
                  *(void *)(v221 + 216) = *(void *)(v222 + 216);
                  *(void *)(v221 + 224) = *(void *)(v222 + 224);
                  *(void *)(v221 + 232) = *(void *)(v222 + 232);
                  *(void *)(v221 + 240) = *(void *)(v222 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v225 = *(_OWORD *)v222;
                  long long v226 = *(_OWORD *)(v222 + 16);
                  long long v227 = *(_OWORD *)(v222 + 48);
                  *(_OWORD *)(v221 + 32) = *(_OWORD *)(v222 + 32);
                  *(_OWORD *)(v221 + 48) = v227;
                  *(_OWORD *)unint64_t v221 = v225;
                  *(_OWORD *)(v221 + 16) = v226;
                  long long v228 = *(_OWORD *)(v222 + 64);
                  long long v229 = *(_OWORD *)(v222 + 80);
                  long long v230 = *(_OWORD *)(v222 + 112);
                  *(_OWORD *)(v221 + 96) = *(_OWORD *)(v222 + 96);
                  *(_OWORD *)(v221 + 112) = v230;
                  *(_OWORD *)(v221 + 64) = v228;
                  *(_OWORD *)(v221 + 80) = v229;
                  long long v231 = *(_OWORD *)(v222 + 128);
                  long long v232 = *(_OWORD *)(v222 + 144);
                  long long v233 = *(_OWORD *)(v222 + 176);
                  *(_OWORD *)(v221 + 160) = *(_OWORD *)(v222 + 160);
                  *(_OWORD *)(v221 + 176) = v233;
                  *(_OWORD *)(v221 + 128) = v231;
                  *(_OWORD *)(v221 + 144) = v232;
                  long long v234 = *(_OWORD *)(v222 + 192);
                  long long v235 = *(_OWORD *)(v222 + 208);
                  long long v236 = *(_OWORD *)(v222 + 224);
                  *(void *)(v221 + 240) = *(void *)(v222 + 240);
                  *(_OWORD *)(v221 + 208) = v235;
                  *(_OWORD *)(v221 + 224) = v236;
                  *(_OWORD *)(v221 + 192) = v234;
                }
                unint64_t v259 = (_OWORD *)((v221 + 255) & 0xFFFFFFFFFFFFFFF8);
                v260 = (long long *)((v222 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v261 = *v260;
                *(_OWORD *)((char *)v259 + 9) = *(long long *)((char *)v260 + 9);
                *unint64_t v259 = v261;
                unint64_t v262 = (v221 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v263 = (v222 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v264 = *(_OWORD *)v263;
                *(unsigned char *)(v262 + 16) = *(unsigned char *)(v263 + 16);
                *(_OWORD *)unint64_t v262 = v264;
                int v265 = (void *)((v221 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v266 = (v222 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v267 = *(void *)v266;
                v266 += 15;
                void *v265 = v267;
                uint64_t v268 = (void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v269 = *(void *)(v266 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v270 = *(void *)((v266 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_10018B584(v269, v270);
                *uint64_t v268 = v269;
                v268[1] = v270;
                size_t v271 = (unint64_t)&a2[v468] & v467;
                unint64_t v272 = *(void (**)(unint64_t, size_t, uint64_t))(v488 + 16);
                v272((unint64_t)&v2[v468] & v467, v271, v489);
                unint64_t v514 = (unint64_t)&v2[v468] & v467;
                size_t v509 = v271;
                size_t v273 = (v484 + v271) & v482;
                v272((v484 + v514) & v482, v273, v489);
                unint64_t v274 = (v485 + ((v484 + v514) & v482)) & v483;
                uint64_t v275 = (v485 + v273) & v483;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v490 + 16))(v274, v275, v491);
                unint64_t v276 = (void *)((v486 + v274) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v277 = (void *)((v486 + v275) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v276 = *v277;
                unint64_t v278 = ((unint64_t)v276 + v487) & v41;
                unint64_t v279 = ((unint64_t)v277 + v487) & v41;
                v280 = *(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 16);
                swift_bridgeObjectRetain();
                v280(v278, v279, v495);
                unint64_t v281 = (void *)((v492 + v278) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v282 = (void *)((v492 + v279) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v281 = *v282;
                unint64_t v283 = (void *)(((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v284 = (void *)(((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v283 = *v284;
                v283[1] = v284[1];
                uint64_t v285 = (void *)(v274 + v494);
                void *v285 = *(void *)(v275 + v494);
                v285[1] = *(void *)(v275 + v494 + 8);
                unint64_t v286 = (v530 + v274 + v494) & v479;
                unint64_t v287 = (v530 + v275 + v494) & v479;
                *(unsigned char *)unint64_t v286 = *(unsigned char *)v287;
                uint64_t v288 = v286 | 4;
                int v289 = *(_DWORD *)(v287 | 4);
                *(unsigned char *)(v288 + 4) = *(unsigned char *)((v287 | 4) + 4);
                *(_DWORD *)uint64_t v288 = v289;
                *(_WORD *)(v286 + 10) = *(_WORD *)(v287 + 0xA);
                unint64_t v290 = (v521 + v286) & v523;
                unint64_t v291 = (v521 + v287) & v523;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v525(v290, v291, v529);
                unint64_t v292 = (v519 + v290) & v523;
                unint64_t v293 = (v519 + v291) & v523;
                v525(v292, v293, v529);
                uint64_t v294 = (unsigned char *)(v292 + v481);
                *uint64_t v294 = *(unsigned char *)(v293 + v481);
                v294[1] = *(unsigned char *)(v293 + v481 + 1);
                v294[2] = *(unsigned char *)(v293 + v481 + 2);
                v294[3] = *(unsigned char *)(v293 + v481 + 3);
                v294[4] = *(unsigned char *)(v293 + v481 + 4);
                unint64_t v295 = (v292 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v296 = (v293 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v295 = *(void *)v296;
                *(void *)(v295 + 8) = *(void *)(v296 + 8);
                *(unsigned char *)(v295 + 16) = *(unsigned char *)(v296 + 16);
                *(unsigned char *)(v295 + 17) = *(unsigned char *)(v296 + 17);
                *(unsigned char *)(v295 + 18) = *(unsigned char *)(v296 + 18);
                *(unsigned char *)(v295 + 19) = *(unsigned char *)(v296 + 19);
                unint64_t v297 = (v295 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v298 = (v296 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v297 = *(void *)v298;
                *(unsigned char *)(v297 + 8) = *(unsigned char *)(v298 + 8);
                *(unsigned char *)(v297 + 9) = *(unsigned char *)(v298 + 9);
                *(unsigned char *)(v297 + 10) = *(unsigned char *)(v298 + 10);
                *(unsigned char *)(v297 + 11) = *(unsigned char *)(v298 + 11);
                *(unsigned char *)(v297 + 12) = *(unsigned char *)(v298 + 12);
                unint64_t v299 = (void *)((v295 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v300 = (void *)((v296 + 47) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v299 = *v300;
                unint64_t v301 = ((unint64_t)v299 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v302 = ((unint64_t)v300 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v301 = *(void *)v302;
                *(unsigned char *)(v301 + 8) = *(unsigned char *)(v302 + 8);
                *(unsigned char *)(v301 + 9) = *(unsigned char *)(v302 + 9);
                int v303 = (void *)((v516 + v301) & v523);
                long long v304 = (const void *)((v516 + v302) & v523);
                swift_bridgeObjectRetain();
                if (v512(v304, 1, v529))
                {
                  memcpy(v303, v304, __n);
                }
                else
                {
                  v525((unint64_t)v303, (unint64_t)v304, v529);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v515 + 56))(v303, 0, 1, v529);
                }
                long long v305 = (void *)(((unint64_t)v303 + v517) & 0xFFFFFFFFFFFFFFF8);
                long long v306 = (void *)(((unint64_t)v304 + v517) & 0xFFFFFFFFFFFFFFF8);
                void *v305 = *v306;
                unint64_t v307 = ((unint64_t)v305 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v308 = ((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v309 = *(void *)v308;
                *(unsigned char *)(v307 + 8) = *(unsigned char *)(v308 + 8);
                *(void *)unint64_t v307 = v309;
                long long v310 = (void *)(((unint64_t)v305 + 31) & 0xFFFFFFFFFFFFFFF8);
                long long v311 = (void *)(((unint64_t)v306 + 31) & 0xFFFFFFFFFFFFFFF8);
                *long long v310 = *v311;
                unint64_t v312 = ((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v313 = (uint64_t *)(((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v314 = v313[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v314 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v312 = *(_OWORD *)v313;
                }
                else
                {
                  uint64_t v315 = *v313;
                  sub_10001EBB0(*v313, v314);
                  *(void *)unint64_t v312 = v315;
                  *(void *)(v312 + 8) = v314;
                }
                unint64_t v316 = (v312 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v317 = ((unint64_t)v313 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v318 = *(void *)v317;
                *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
                *(void *)unint64_t v316 = v318;
                *(unsigned char *)(v316 + 9) = *(unsigned char *)(v317 + 9);
                unint64_t v319 = (v316 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v320 = (v317 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v321 = *(_DWORD *)v320;
                *(unsigned char *)(v319 + 4) = *(unsigned char *)(v320 + 4);
                *(_DWORD *)unint64_t v319 = v321;
                uint64_t v322 = (void *)((v316 + 25) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v323 = (void *)((v317 + 25) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v322 = *v323;
                v322[1] = v323[1];
                unint64_t v324 = v286 + v518;
                unint64_t v325 = v287 + v518;
                unint64_t v326 = *(void *)(v287 + v518 + 16);
                if (v326 >= 0xFFFFFFFF) {
                  LODWORD(v326) = -1;
                }
                int v327 = v326 - 1;
                swift_bridgeObjectRetain();
                if (v327 < 0)
                {
                  *(void *)unint64_t v324 = *(void *)v325;
                  *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
                  *(unsigned char *)(v324 + 9) = *(unsigned char *)(v325 + 9);
                  uint64_t v340 = *(void *)(v325 + 16);
                  swift_errorRetain();
                  *(void *)(v324 + 16) = v340;
                  uint64_t v341 = *(void *)(v325 + 24);
                  swift_errorRetain();
                  *(void *)(v324 + 24) = v341;
                  *(unsigned char *)(v324 + 32) = *(unsigned char *)(v325 + 32);
                  *(unsigned char *)(v324 + 33) = *(unsigned char *)(v325 + 33);
                  *(unsigned char *)(v324 + 34) = *(unsigned char *)(v325 + 34);
                  *(void *)(v324 + 40) = *(void *)(v325 + 40);
                  *(void *)(v324 + 48) = *(void *)(v325 + 48);
                  *(void *)(v324 + 56) = *(void *)(v325 + 56);
                  *(void *)(v324 + 64) = *(void *)(v325 + 64);
                  *(unsigned char *)(v324 + 72) = *(unsigned char *)(v325 + 72);
                  *(void *)(v324 + 80) = *(void *)(v325 + 80);
                  *(void *)(v324 + 88) = *(void *)(v325 + 88);
                  v533 = *(void **)(v325 + 96);
                  *(void *)(v324 + 96) = v533;
                  *(unsigned char *)(v324 + 104) = *(unsigned char *)(v325 + 104);
                  *(unsigned char *)(v324 + 105) = *(unsigned char *)(v325 + 105);
                  *(void *)(v324 + 112) = *(void *)(v325 + 112);
                  *(void *)(v324 + 120) = *(void *)(v325 + 120);
                  *(void *)(v324 + 128) = *(void *)(v325 + 128);
                  *(void *)(v324 + 136) = *(void *)(v325 + 136);
                  *(void *)(v324 + 144) = *(void *)(v325 + 144);
                  *(void *)(v324 + 152) = *(void *)(v325 + 152);
                  *(void *)(v324 + 160) = *(void *)(v325 + 160);
                  *(void *)(v324 + 168) = *(void *)(v325 + 168);
                  *(unsigned char *)(v324 + 176) = *(unsigned char *)(v325 + 176);
                  *(void *)(v324 + 184) = *(void *)(v325 + 184);
                  uint64_t v342 = *(void *)(v325 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v343 = v533;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v342)
                  {
                    *(void *)(v324 + 192) = v342;
                    *(void *)(v324 + 200) = *(void *)(v325 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v324 + 192) = *(_OWORD *)(v325 + 192);
                  }
                  uint64_t v2 = (char *)v528;
                  *(void *)(v324 + 208) = *(void *)(v325 + 208);
                  *(void *)(v324 + 216) = *(void *)(v325 + 216);
                  *(void *)(v324 + 224) = *(void *)(v325 + 224);
                  *(void *)(v324 + 232) = *(void *)(v325 + 232);
                  *(void *)(v324 + 240) = *(void *)(v325 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v328 = *(_OWORD *)v325;
                  long long v329 = *(_OWORD *)(v325 + 16);
                  long long v330 = *(_OWORD *)(v325 + 48);
                  *(_OWORD *)(v324 + 32) = *(_OWORD *)(v325 + 32);
                  *(_OWORD *)(v324 + 48) = v330;
                  *(_OWORD *)unint64_t v324 = v328;
                  *(_OWORD *)(v324 + 16) = v329;
                  long long v331 = *(_OWORD *)(v325 + 64);
                  long long v332 = *(_OWORD *)(v325 + 80);
                  long long v333 = *(_OWORD *)(v325 + 112);
                  *(_OWORD *)(v324 + 96) = *(_OWORD *)(v325 + 96);
                  *(_OWORD *)(v324 + 112) = v333;
                  *(_OWORD *)(v324 + 64) = v331;
                  *(_OWORD *)(v324 + 80) = v332;
                  long long v334 = *(_OWORD *)(v325 + 128);
                  long long v335 = *(_OWORD *)(v325 + 144);
                  long long v336 = *(_OWORD *)(v325 + 176);
                  *(_OWORD *)(v324 + 160) = *(_OWORD *)(v325 + 160);
                  *(_OWORD *)(v324 + 176) = v336;
                  *(_OWORD *)(v324 + 128) = v334;
                  *(_OWORD *)(v324 + 144) = v335;
                  long long v337 = *(_OWORD *)(v325 + 192);
                  long long v338 = *(_OWORD *)(v325 + 208);
                  long long v339 = *(_OWORD *)(v325 + 224);
                  *(void *)(v324 + 240) = *(void *)(v325 + 240);
                  *(_OWORD *)(v324 + 208) = v338;
                  *(_OWORD *)(v324 + 224) = v339;
                  *(_OWORD *)(v324 + 192) = v337;
                  uint64_t v2 = (char *)v528;
                }
                uint64_t v344 = (_OWORD *)((v324 + 255) & 0xFFFFFFFFFFFFFFF8);
                v345 = (long long *)((v325 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v346 = *v345;
                *(_OWORD *)((char *)v344 + 9) = *(long long *)((char *)v345 + 9);
                *uint64_t v344 = v346;
                unint64_t v347 = (v324 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v348 = (v325 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v349 = *(_OWORD *)v348;
                *(unsigned char *)(v347 + 16) = *(unsigned char *)(v348 + 16);
                *(_OWORD *)unint64_t v347 = v349;
                v350 = (void *)((v324 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v351 = (v325 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v352 = *(void *)v351;
                v351 += 15;
                void *v350 = v352;
                v353 = (void *)(((unint64_t)v350 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v354 = *(void *)(v351 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v355 = *(void *)((v351 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_10018B584(v354, v355);
                char v160 = 0;
                void *v353 = v354;
                v353[1] = v355;
                uint64_t v356 = (void *)((v514 + v496) & 0xFFFFFFFFFFFFFFF8);
                int v357 = (void *)((v509 + v496) & 0xFFFFFFFFFFFFFFF8);
                void *v356 = *v357;
                unint64_t v358 = (void *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v359 = (void *)(((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v358 = *v359;
                v358[1] = v359[1];
                uint64_t v36 = v504;
                goto LABEL_180;
            }
          }
          uint64_t v364 = (v521 + ((v530 + v241) & v478)) & v523;
          if (v501 <= 0x7FFFFFFD)
          {
            unint64_t v361 = *(void *)(((v480 + ((v519 + v364) & v523)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_183:
            if (v361 >= 0xFFFFFFFF) {
              LODWORD(v361) = -1;
            }
            if ((v361 + 1) < 2) {
              goto LABEL_58;
            }
            goto LABEL_69;
          }
          int v65 = (*(uint64_t (**)(uint64_t))(v515 + 48))(v364);
        }
LABEL_56:
        if (v65) {
          goto LABEL_69;
        }
        goto LABEL_57;
      case 2u:
        uint64_t v462 = v36 & 0xFFFFFFF8;
        unint64_t v76 = *(void (**)(_DWORD *, uint64_t))(v488 + 8);
        v76((char *)v528, v489);
        v76((_DWORD *)(((unint64_t)v528 + v484) & v482), v489);
        unint64_t v77 = (v485 + (((unint64_t)v528 + v484) & v482)) & v483;
        (*(void (**)(unint64_t, uint64_t))(v490 + 8))(v77, v491);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v493 + 8))((v487 + ((v486 + v77) & 0xFFFFFFFFFFFFFFF8)) & v41, v495);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v78 = (v530 + v494 + v77) & v40;
        unint64_t v79 = *(void (**)(unint64_t, uint64_t))(v515 + 8);
        v79((v521 + v78) & v523, v529);
        unint64_t v80 = (v519 + ((v521 + v78) & v523)) & v523;
        v79(v80, v529);
        swift_bridgeObjectRelease();
        unint64_t v81 = (v516
             + ((((((v480 + v80) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v523;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v515 + 48))(v81, 1, v529)) {
          v79(v81, v529);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v82 = (uint64_t *)((((((v517 + v81) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v83 = v82[1];
        if ((v83 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v82, v83);
        }
        swift_bridgeObjectRelease();
        unint64_t v84 = v78 + v518;
        LODWORD(v85) = -1;
        if (*(void *)(v84 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v85 = *(void *)(v84 + 16);
        }
        uint64_t v36 = v504;
        uint64_t v18 = v524;
        uint64_t v26 = v506;
        uint64_t v38 = v462;
        if ((int)v85 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v84 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v84 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v84 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_81;
      case 3u:
        goto LABEL_81;
      default:
        uint64_t v42 = *(void (**)(_DWORD *, uint64_t))(v524 + 8);
        v42((char *)v528, AssociatedTypeWitness);
        v42((_DWORD *)(((unint64_t)v528 + v500) & v497), AssociatedTypeWitness);
        unint64_t v43 = ((((unint64_t)v528 + v500) & v497) + v510 + v506) & v499;
        (*(void (**)(unint64_t, uint64_t))(v526 + 8))(v43, v476);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v520 + 8))((v473 + ((v475 + v43) & 0xFFFFFFFFFFFFFFF8)) & v472, v474);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v44 = (v530 + v477 + v43) & v40;
        uint64_t v45 = *(void (**)(unint64_t, uint64_t))(v515 + 8);
        v45((v521 + v44) & v523, v529);
        unint64_t v46 = (v519 + ((v521 + v44) & v523)) & v523;
        v45(v46, v529);
        swift_bridgeObjectRelease();
        unint64_t v47 = (v516
             + ((((((v480 + v46) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v523;
        uint64_t v48 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v515 + 48);
        if (!v48(v47, 1, v529)) {
          v45(v47, v529);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v49 = (uint64_t *)((((((v517 + v47) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v50 = v49[1];
        if ((v50 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v49, v50);
        }
        swift_bridgeObjectRelease();
        unint64_t v51 = v518 + v44;
        LODWORD(v52) = -1;
        if (*(void *)(v518 + v44 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v52 = *(void *)(v51 + 16);
        }
        if ((int)v52 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v51 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v53 = *(void (**)(unint64_t, uint64_t))(v488 + 8);
        v53(((unint64_t)v528 + v468) & v467, v489);
        unint64_t v54 = (v484 + (((unint64_t)v528 + v468) & v467)) & v482;
        v53(v54, v489);
        unint64_t v55 = (v485 + v54) & v483;
        (*(void (**)(unint64_t, uint64_t))(v490 + 8))(v55, v491);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v493 + 8))((v487 + ((v486 + v55) & 0xFFFFFFFFFFFFFFF8)) & v41, v495);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v56 = (v530 + v55 + v494) & v40;
        v45((v521 + v56) & v523, v529);
        unint64_t v57 = (v519 + ((v521 + v56) & v523)) & v523;
        v45(v57, v529);
        swift_bridgeObjectRelease();
        unint64_t v58 = (v516
             + ((((((v480 + v57) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v523;
        if (!v48(v58, 1, v529)) {
          v45(v58, v529);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t *)((((((v517 + v58) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v60 = v59[1];
        if ((v60 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v59, v60);
        }
        swift_bridgeObjectRelease();
        unint64_t v61 = v56 + v518;
        LODWORD(v62) = -1;
        if (*(void *)(v56 + v518 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v62 = *(void *)(v61 + 16);
        }
        uint64_t v2 = (char *)v528;
        uint64_t v18 = v524;
        uint64_t v26 = v506;
        if ((int)v62 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v61 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v38 = v36 & 0xFFFFFFF8;
        goto LABEL_81;
    }
  }
  return v2;
}

_OWORD *sub_1005FE47C(_OWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v389 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v382 = *(unsigned __int8 *)(v389 + 80);
  uint64_t v393 = *(void *)(v389 + 64);
  uint64_t v363 = v393 + v382;
  uint64_t v353 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v353 - 8);
  uint64_t v398 = v2;
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v351 = swift_getAssociatedTypeWitness();
  uint64_t v397 = *(void *)(v351 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v397 + 80);
  uint64_t v404 = v3 | v4 | 7;
  uint64_t v346 = v393 + v404;
  uint64_t v352 = *(void *)(v2 + 64) + 7;
  uint64_t v350 = v4 + 8;
  uint64_t v384 = v4;
  uint64_t v349 = *(void *)(v397 + 64) + 7;
  unint64_t v354 = ((((v349 + ((v4 + 8 + (v352 & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v367 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v367 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v403 = (v6 | 7) + 16;
  uint64_t v372 = v6 + 12;
  size_t v8 = *(void *)(v5 + 64);
  uint64_t v371 = v8 + v6;
  size_t v335 = v8 + 12;
  uint64_t v368 = v5;
  uint64_t v369 = v6 + 10;
  unsigned int v386 = *(_DWORD *)(v5 + 84);
  size_t v373 = v8;
  if (v386) {
    size_t v9 = *(void *)(*(void *)(v367 - 8) + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  size_t __n = v9;
  size_t v370 = v9 + 7;
  unint64_t v339 = (v6
        + 10
        + ((((((v8 + 12 + ((v8 + v6 + ((v6 + 12) & ~v6)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v374 = (((((((((v9 + 7 + v339) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v364 = v374 + 16;
  uint64_t v342 = (v403 + v354 + ((v393 + v404 + ((v393 + v382) & ~v382)) & ~v404)) & ~(v6 | 7);
  size_t v390 = ((((v342 + v374 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v356 = v11;
  uint64_t v357 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v358 = v14;
  uint64_t v359 = v13;
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v361 = *(void *)(v16 - 8);
  uint64_t v362 = v16;
  uint64_t v17 = *(unsigned __int8 *)(v361 + 80);
  uint64_t v18 = v15 | v17 | 7;
  uint64_t v19 = v12 | v6 | v18;
  size_t v345 = v390 + v19;
  uint64_t v20 = *(void *)(v11 + 64);
  uint64_t v21 = v20 + v12;
  uint64_t v378 = v12;
  uint64_t v355 = v20 + v18;
  uint64_t v22 = *(void *)(v14 + 64) + 7;
  uint64_t v23 = v17 + 8;
  unint64_t v24 = ((((*(void *)(v361 + 64) + 7 + ((v17 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v25 = (v374 + ((v403 + v24 + ((v20 + v18 + ((v20 + v12) & ~v12)) & ~v18)) & ~v7) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((((v26 + ((v390 + v19) & ~v19) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v28 = v404 | v382 | v6;
  uint64_t v29 = v28 + v393;
  uint64_t v30 = *(unsigned int *)(v389 + 84);
  uint64_t v31 = *(unsigned int *)(v2 + 84);
  unsigned int v337 = *(_DWORD *)(v397 + 84);
  if (v31 <= v337) {
    unsigned int v32 = *(_DWORD *)(v397 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v2 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    unsigned int v33 = 2147483646;
  }
  else {
    unsigned int v33 = v32;
  }
  if (v33 <= v30) {
    unsigned int v34 = *(_DWORD *)(v389 + 84);
  }
  else {
    unsigned int v34 = v33;
  }
  if (v386 <= 0x7FFFFFFE) {
    unsigned int v35 = 2147483646;
  }
  else {
    unsigned int v35 = v386;
  }
  if (v34 <= v35) {
    unsigned int v36 = v35;
  }
  else {
    unsigned int v36 = v34;
  }
  if (v36 <= 0x7FFFFFFF) {
    int v37 = 0x7FFFFFFF;
  }
  else {
    int v37 = v36;
  }
  int v375 = v37;
  if (((v390 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24 > v27) {
    unint64_t v27 = ((v390 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v38 = ((v25 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v38 > v27) {
    unint64_t v27 = v38;
  }
  if (v27 <= 0x10) {
    uint64_t v39 = 16;
  }
  else {
    uint64_t v39 = v27;
  }
  unsigned int v40 = *((unsigned __int8 *)a2 + v39);
  if (v40 >= 4 && (v39 & 0xFFFFFFF8) != 0) {
    unsigned int v40 = *a2 + 4;
  }
  uint64_t v383 = ~v382;
  uint64_t v42 = ~v404;
  uint64_t v43 = ~v384;
  uint64_t v385 = ~v7;
  uint64_t v44 = ~v6;
  uint64_t v45 = ~v19;
  uint64_t v46 = ~v378;
  uint64_t v47 = ~v18;
  uint64_t v48 = ~v17;
  unint64_t v49 = v26 + 16;
  uint64_t v50 = ~v28;
  switch(v40)
  {
    case 1u:
      uint64_t v395 = ~v404;
      uint64_t v405 = v44;
      uint64_t v380 = v39;
      unint64_t v360 = *(void (**)(char *, char *, uint64_t))(v389 + 32);
      ((void (*)(_OWORD *))v360)(a1);
      unint64_t v82 = (char *)(((unint64_t)a1 + v29) & v50);
      unint64_t v83 = (char *)(((unint64_t)a2 + v29) & v50);
      if (v30 == v375)
      {
        int v84 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v389 + 48))(v83, v30, AssociatedTypeWitness);
        uint64_t v52 = a1;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
        uint64_t v87 = AssociatedTypeWitness;
        goto LABEL_57;
      }
      unint64_t v120 = (unint64_t)&v83[v363] & v383;
      unint64_t v121 = (v346 + v120) & v395;
      if (v33 == v375)
      {
        if (v31 != v33)
        {
          long long v329 = (unint64_t *)((v352 + v121) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v87 = AssociatedTypeWitness;
          if (v32 <= 0x7FFFFFFE)
          {
            unint64_t v330 = *v329;
            if (v330 >= 0xFFFFFFFF) {
              LODWORD(v330) = -1;
            }
            uint64_t v52 = a1;
            uint64_t v85 = v367;
            uint64_t v86 = v368;
            if ((v330 + 1) >= 2) {
              goto LABEL_58;
            }
            goto LABEL_61;
          }
          int v84 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v397 + 48))(((unint64_t)v329 + v350) & v43, v337, v351);
          uint64_t v52 = a1;
          uint64_t v85 = v367;
          uint64_t v86 = v368;
LABEL_57:
          if (v84)
          {
LABEL_58:
            memcpy(v82, v83, v390);
            uint64_t v39 = v380;
            unint64_t v261 = v339;
            uint64_t v260 = v342;
LABEL_59:
            size_t v262 = __n;
LABEL_65:
            unint64_t v325 = ((((v260
                     + ((((((((((v261 + v262 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v326 = (unint64_t)&v82[v325];
            unint64_t v327 = (unint64_t)&v83[v325];
            *(unsigned char *)unint64_t v326 = *(unsigned char *)v327;
            *(_OWORD *)((v326 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v327 & 0xFFFFFFFFFFFFFFF8) + 8);
            char v119 = 1;
            goto LABEL_66;
          }
          unint64_t v120 = (unint64_t)&v83[v363] & v383;
          unint64_t v121 = (v346 + v120) & v395;
LABEL_61:
          unint64_t v396 = v121;
          unint64_t v401 = v83;
          unint64_t v263 = v121;
          v360(v82, v83, v87);
          uint64_t v264 = v43;
          v360((char *)((unint64_t)&v82[v363] & v383), (char *)v120, v87);
          unint64_t v265 = (v346 + ((unint64_t)&v82[v363] & v383)) & v263;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v398 + 32))(v265, v396, v353);
          unint64_t v266 = (void *)((v352 + v265) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v267 = (void *)((v352 + v396) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v266 = *v267;
          unint64_t v268 = ((unint64_t)v266 + v350) & v264;
          unint64_t v269 = ((unint64_t)v267 + v350) & v264;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32))(v268, v269, v351);
          unint64_t v270 = (void *)((v349 + v268) & 0xFFFFFFFFFFFFFFF8);
          size_t v271 = (void *)((v349 + v269) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v270 = *v271;
          *(_OWORD *)(((unint64_t)v270 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v271 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v265 + v354) = *(_OWORD *)(v396 + v354);
          unint64_t v272 = (v403 + v265 + v354) & v385;
          unint64_t v273 = (v403 + v396 + v354) & v385;
          *(unsigned char *)unint64_t v272 = *(unsigned char *)v273;
          uint64_t v274 = v272 | 4;
          int v275 = *(_DWORD *)(v273 | 4);
          *(unsigned char *)(v274 + 4) = *(unsigned char *)((v273 | 4) + 4);
          *(_DWORD *)uint64_t v274 = v275;
          *(_WORD *)(v272 + 10) = *(_WORD *)(v273 + 0xA);
          unint64_t v276 = *(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 32);
          v276((v372 + v272) & v405, (v372 + v273) & v405, v85);
          unint64_t v277 = (v371 + ((v372 + v272) & v405)) & v405;
          unint64_t v278 = (v371 + ((v372 + v273) & v405)) & v405;
          v276(v277, v278, v85);
          unint64_t v279 = (unsigned char *)(v277 + v373);
          unsigned char *v279 = *(unsigned char *)(v278 + v373);
          v279[1] = *(unsigned char *)(v278 + v373 + 1);
          v279[2] = *(unsigned char *)(v278 + v373 + 2);
          v279[3] = *(unsigned char *)(v278 + v373 + 3);
          v279[4] = *(unsigned char *)(v278 + v373 + 4);
          unint64_t v280 = (v277 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v281 = (v278 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v280 = *(_OWORD *)v281;
          *(unsigned char *)(v280 + 16) = *(unsigned char *)(v281 + 16);
          *(unsigned char *)(v280 + 17) = *(unsigned char *)(v281 + 17);
          *(unsigned char *)(v280 + 18) = *(unsigned char *)(v281 + 18);
          *(unsigned char *)(v280 + 19) = *(unsigned char *)(v281 + 19);
          unint64_t v282 = (v280 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v283 = (v281 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v282 = *(void *)v283;
          *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
          *(unsigned char *)(v282 + 9) = *(unsigned char *)(v283 + 9);
          *(unsigned char *)(v282 + 10) = *(unsigned char *)(v283 + 10);
          *(unsigned char *)(v282 + 11) = *(unsigned char *)(v283 + 11);
          *(unsigned char *)(v282 + 12) = *(unsigned char *)(v283 + 12);
          unint64_t v284 = (void *)((v281 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v285 = (void *)((v280 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v285 = *v284;
          unint64_t v286 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v287 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v286 = *(void *)v287;
          *(unsigned char *)(v286 + 8) = *(unsigned char *)(v287 + 8);
          *(unsigned char *)(v286 + 9) = *(unsigned char *)(v287 + 9);
          uint64_t v288 = (void *)((v369 + v286) & v405);
          int v289 = (const void *)((v369 + v287) & v405);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v289, 1, v85))
          {
            memcpy(v288, v289, __n);
          }
          else
          {
            v276((unint64_t)v288, (unint64_t)v289, v85);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v288, 0, 1, v85);
          }
          uint64_t v39 = v380;
          size_t v262 = v373;
          unint64_t v261 = v339;
          uint64_t v260 = v342;
          uint64_t v52 = a1;
          unint64_t v290 = (void *)(((unint64_t)v288 + v370) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v291 = (void *)(((unint64_t)v289 + v370) & 0xFFFFFFFFFFFFFFF8);
          void *v290 = *v291;
          unint64_t v292 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v293 = ((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v294 = *(void *)v293;
          *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
          *(void *)unint64_t v292 = v294;
          unint64_t v295 = (void *)(((unint64_t)v290 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v296 = (void *)(((unint64_t)v291 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v295 = *v296;
          unint64_t v297 = (_OWORD *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v298 = (_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v297 = *v298;
          unint64_t v299 = ((unint64_t)v297 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v300 = ((unint64_t)v298 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v301 = *(void *)v300;
          *(unsigned char *)(v299 + 8) = *(unsigned char *)(v300 + 8);
          *(void *)unint64_t v299 = v301;
          *(unsigned char *)(v299 + 9) = *(unsigned char *)(v300 + 9);
          unint64_t v302 = (v299 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v303 = (v300 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v294) = *(_DWORD *)v303;
          *(unsigned char *)(v302 + 4) = *(unsigned char *)(v303 + 4);
          *(_DWORD *)unint64_t v302 = v294;
          *(_OWORD *)((v299 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v300 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v304 = v364 + v272;
          long long v305 = *(_OWORD *)(v364 + v273 + 112);
          long long v307 = *(_OWORD *)(v364 + v273 + 64);
          long long v306 = *(_OWORD *)(v364 + v273 + 80);
          *(_OWORD *)(v304 + 96) = *(_OWORD *)(v364 + v273 + 96);
          *(_OWORD *)(v304 + 112) = v305;
          *(_OWORD *)(v304 + 64) = v307;
          *(_OWORD *)(v304 + 80) = v306;
          long long v308 = *(_OWORD *)(v364 + v273 + 176);
          long long v310 = *(_OWORD *)(v364 + v273 + 128);
          long long v309 = *(_OWORD *)(v364 + v273 + 144);
          *(_OWORD *)(v304 + 160) = *(_OWORD *)(v364 + v273 + 160);
          *(_OWORD *)(v304 + 176) = v308;
          *(_OWORD *)(v304 + 128) = v310;
          *(_OWORD *)(v304 + 144) = v309;
          long long v312 = *(_OWORD *)(v364 + v273 + 208);
          long long v311 = *(_OWORD *)(v364 + v273 + 224);
          long long v313 = *(_OWORD *)(v364 + v273 + 192);
          *(void *)(v304 + 240) = *(void *)(v364 + v273 + 240);
          *(_OWORD *)(v304 + 208) = v312;
          *(_OWORD *)(v304 + 224) = v311;
          *(_OWORD *)(v304 + 192) = v313;
          long long v314 = *(_OWORD *)(v364 + v273);
          long long v315 = *(_OWORD *)(v364 + v273 + 16);
          long long v316 = *(_OWORD *)(v364 + v273 + 48);
          *(_OWORD *)(v304 + 32) = *(_OWORD *)(v364 + v273 + 32);
          *(_OWORD *)(v304 + 48) = v316;
          *(_OWORD *)unint64_t v304 = v314;
          *(_OWORD *)(v304 + 16) = v315;
          unint64_t v317 = (_OWORD *)((v364 + v272 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v318 = (long long *)((v364 + v273 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v319 = *v318;
          *(_OWORD *)((char *)v317 + 9) = *(long long *)((char *)v318 + 9);
          *unint64_t v317 = v319;
          unint64_t v320 = (v364 + v272 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v321 = (v364 + v273 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v322 = *(_OWORD *)v321;
          *(unsigned char *)(v320 + 16) = *(unsigned char *)(v321 + 16);
          *(_OWORD *)unint64_t v320 = v322;
          uint64_t v323 = (void *)((v364 + v272 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v324 = (void *)((v364 + v273 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v323 = *v324;
          *(_OWORD *)(((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v83 = v401;
          if (v386) {
            goto LABEL_65;
          }
          goto LABEL_59;
        }
        int v84 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v398 + 48))((v346 + v120) & v395, v31, v353);
        uint64_t v52 = a1;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
      }
      else
      {
        unint64_t v258 = v121 + v354;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
        if ((v36 & 0x80000000) != 0)
        {
          uint64_t v52 = a1;
          uint64_t v331 = (v372 + ((v403 + v258) & v385)) & v405;
          uint64_t v87 = AssociatedTypeWitness;
          if (v386 < 0x7FFFFFFE)
          {
            unint64_t v332 = *(void *)(((v335 + ((v371 + v331) & v405)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v332 >= 0xFFFFFFFF) {
              LODWORD(v332) = -1;
            }
            if ((v332 + 1) >= 2) {
              goto LABEL_58;
            }
            goto LABEL_61;
          }
          int v84 = (*(uint64_t (**)(uint64_t))(v368 + 48))(v331);
          goto LABEL_57;
        }
        unint64_t v259 = *(void *)(v258 + 8);
        if (v259 >= 0xFFFFFFFF) {
          LODWORD(v259) = -1;
        }
        int v84 = v259 + 1;
        uint64_t v52 = a1;
      }
      uint64_t v87 = AssociatedTypeWitness;
      goto LABEL_57;
    case 2u:
      unint64_t v341 = v49;
      uint64_t v406 = v44;
      uint64_t v381 = v39;
      int v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 32);
      unint64_t v392 = v24;
      uint64_t v388 = *(void *)(*(void *)(v16 - 8) + 64) + 7;
      uint64_t v377 = v23;
      uint64_t v348 = v22;
      uint64_t v344 = v48;
      uint64_t v89 = v47;
      uint64_t v90 = v46;
      ((void (*)(_OWORD *))v88)(a1);
      unint64_t v91 = ((unint64_t)a1 + v21) & v90;
      unint64_t v92 = ((unint64_t)a2 + v21) & v90;
      v88(v91, v92, v357);
      unint64_t v93 = (v355 + v91) & v89;
      unint64_t v94 = (v355 + v92) & v89;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 32))(v93, v94, v359);
      uint64_t v95 = (void *)((v348 + v93) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v96 = (void *)((v348 + v94) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v95 = *v96;
      unint64_t v97 = ((unint64_t)v95 + v377) & v344;
      unint64_t v98 = ((unint64_t)v96 + v377) & v344;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v361 + 32))(v97, v98, v362);
      uint64_t v99 = (void *)((v388 + v97) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v100 = (void *)((v388 + v98) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v99 = *v100;
      *(_OWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v392 + v93) = *(_OWORD *)(v392 + v94);
      uint64_t v101 = (v403 + v392 + v93) & v385;
      uint64_t v102 = (v403 + v392 + v94) & v385;
      *(unsigned char *)uint64_t v101 = *(unsigned char *)v102;
      uint64_t v103 = v101 | 4;
      int v104 = *(_DWORD *)(v102 | 4);
      *(unsigned char *)(v103 + 4) = *(unsigned char *)((v102 | 4) + 4);
      *(_DWORD *)uint64_t v103 = v104;
      *(_WORD *)(v101 + 10) = *(_WORD *)(v102 + 0xA);
      unint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v368 + 32);
      v105((v372 + v101) & v406, (v372 + v102) & v406, v367);
      uint64_t v106 = (v371 + ((v372 + v101) & v406)) & v406;
      uint64_t v107 = (v371 + ((v372 + v102) & v406)) & v406;
      v105(v106, v107, v367);
      unint64_t v108 = (unsigned char *)(v106 + v373);
      unsigned char *v108 = *(unsigned char *)(v107 + v373);
      v108[1] = *(unsigned char *)(v107 + v373 + 1);
      v108[2] = *(unsigned char *)(v107 + v373 + 2);
      v108[3] = *(unsigned char *)(v107 + v373 + 3);
      v108[4] = *(unsigned char *)(v107 + v373 + 4);
      unint64_t v109 = (v106 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v110 = (v107 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v109 = *(_OWORD *)v110;
      *(unsigned char *)(v109 + 16) = *(unsigned char *)(v110 + 16);
      *(unsigned char *)(v109 + 17) = *(unsigned char *)(v110 + 17);
      *(unsigned char *)(v109 + 18) = *(unsigned char *)(v110 + 18);
      *(unsigned char *)(v109 + 19) = *(unsigned char *)(v110 + 19);
      unint64_t v111 = (v109 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v112 = (v110 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v111 = *(void *)v112;
      *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
      *(unsigned char *)(v111 + 9) = *(unsigned char *)(v112 + 9);
      *(unsigned char *)(v111 + 10) = *(unsigned char *)(v112 + 10);
      *(unsigned char *)(v111 + 11) = *(unsigned char *)(v112 + 11);
      *(unsigned char *)(v111 + 12) = *(unsigned char *)(v112 + 12);
      unint64_t v113 = (void *)((v110 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v114 = (void *)((v109 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v114 = *v113;
      unint64_t v115 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v116 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v115 = *(void *)v116;
      *(unsigned char *)(v115 + 8) = *(unsigned char *)(v116 + 8);
      *(unsigned char *)(v115 + 9) = *(unsigned char *)(v116 + 9);
      unint64_t v117 = (void *)((v369 + v115) & v44);
      unint64_t v118 = (const void *)((v369 + v116) & v44);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v368 + 48))(v118, 1, v367))
      {
        memcpy(v117, v118, __n);
      }
      else
      {
        v105((uint64_t)v117, (uint64_t)v118, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v117, 0, 1, v367);
      }
      unint64_t v122 = (void *)(((unint64_t)v117 + v370) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v123 = (void *)(((unint64_t)v118 + v370) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v122 = *v123;
      unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v126 = *(void *)v125;
      *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
      *(void *)unint64_t v124 = v126;
      unint64_t v127 = (void *)(((unint64_t)v123 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v128 = (void *)(((unint64_t)v122 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v128 = *v127;
      uint64_t v129 = (_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v130 = (_OWORD *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v129 = *v130;
      unint64_t v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v133 = *(void *)v132;
      *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
      *(void *)unint64_t v131 = v133;
      *(unsigned char *)(v131 + 9) = *(unsigned char *)(v132 + 9);
      unint64_t v134 = (v131 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v135 = (v132 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v126) = *(_DWORD *)v135;
      *(unsigned char *)(v134 + 4) = *(unsigned char *)(v135 + 4);
      *(_DWORD *)unint64_t v134 = v126;
      *(_OWORD *)((v131 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v132 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v136 = v101 + v364;
      long long v137 = *(_OWORD *)(v102 + v364 + 112);
      long long v139 = *(_OWORD *)(v102 + v364 + 64);
      long long v138 = *(_OWORD *)(v102 + v364 + 80);
      *(_OWORD *)(v136 + 96) = *(_OWORD *)(v102 + v364 + 96);
      *(_OWORD *)(v136 + 112) = v137;
      *(_OWORD *)(v136 + 64) = v139;
      *(_OWORD *)(v136 + 80) = v138;
      long long v140 = *(_OWORD *)(v102 + v364 + 176);
      long long v142 = *(_OWORD *)(v102 + v364 + 128);
      long long v141 = *(_OWORD *)(v102 + v364 + 144);
      *(_OWORD *)(v136 + 160) = *(_OWORD *)(v102 + v364 + 160);
      *(_OWORD *)(v136 + 176) = v140;
      *(_OWORD *)(v136 + 128) = v142;
      *(_OWORD *)(v136 + 144) = v141;
      long long v144 = *(_OWORD *)(v102 + v364 + 208);
      long long v143 = *(_OWORD *)(v102 + v364 + 224);
      long long v145 = *(_OWORD *)(v102 + v364 + 192);
      *(void *)(v136 + 240) = *(void *)(v102 + v364 + 240);
      *(_OWORD *)(v136 + 208) = v144;
      *(_OWORD *)(v136 + 224) = v143;
      *(_OWORD *)(v136 + 192) = v145;
      long long v146 = *(_OWORD *)(v102 + v364);
      long long v147 = *(_OWORD *)(v102 + v364 + 16);
      long long v148 = *(_OWORD *)(v102 + v364 + 48);
      *(_OWORD *)(v136 + 32) = *(_OWORD *)(v102 + v364 + 32);
      *(_OWORD *)(v136 + 48) = v148;
      *(_OWORD *)unint64_t v136 = v146;
      *(_OWORD *)(v136 + 16) = v147;
      unint64_t v149 = (_OWORD *)((v101 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v150 = (long long *)((v102 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v151 = *v150;
      *(_OWORD *)((char *)v149 + 9) = *(long long *)((char *)v150 + 9);
      *unint64_t v149 = v151;
      unint64_t v152 = (v101 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v153 = (v102 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v154 = *(_OWORD *)v153;
      *(unsigned char *)(v152 + 16) = *(unsigned char *)(v153 + 16);
      *(_OWORD *)unint64_t v152 = v154;
      unint64_t v155 = (void *)((v101 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v156 = (void *)((v102 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      void *v155 = *v156;
      *(_OWORD *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = a1;
      unint64_t v157 = (unint64_t)a1 + v341;
      *(unsigned char *)unint64_t v157 = *((unsigned char *)a2 + v341);
      *(_OWORD *)((v157 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((((unint64_t)a2 + v341) & 0xFFFFFFFFFFFFFFF8)
                                                                 + 8);
      char v119 = 2;
      uint64_t v39 = v381;
      goto LABEL_66;
    case 3u:
      uint64_t v52 = a1;
      *a1 = *(_OWORD *)a2;
      char v119 = 3;
      goto LABEL_66;
    default:
      uint64_t v333 = v45;
      uint64_t v334 = ~v378;
      uint64_t v336 = v47;
      uint64_t v338 = v21;
      uint64_t v343 = v48;
      uint64_t v347 = v22;
      uint64_t v376 = v23;
      uint64_t v387 = *(void *)(*(void *)(v16 - 8) + 64) + 7;
      unint64_t v391 = v24;
      unint64_t v340 = v49;
      uint64_t v379 = v39;
      unint64_t v51 = *(void (**)(unint64_t, unint64_t, uint64_t))(v389 + 32);
      uint64_t v52 = a1;
      ((void (*)(_OWORD *))v51)(a1);
      uint64_t v53 = v43;
      unint64_t v54 = ((unint64_t)a1 + v363) & v383;
      unint64_t v55 = ((unint64_t)a2 + v363) & v383;
      v51(v54, v55, AssociatedTypeWitness);
      unint64_t v56 = (v54 + v393 + v404) & v42;
      unint64_t v57 = (v55 + v393 + v404) & v42;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v398 + 32))(v56, v57, v353);
      unint64_t v58 = (void *)((v352 + v56) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v59 = (void *)((v352 + v57) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v58 = *v59;
      unint64_t v60 = ((unint64_t)v58 + v350) & v53;
      unint64_t v61 = ((unint64_t)v59 + v350) & v53;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32))(v60, v61, v351);
      uint64_t v62 = (void *)((v349 + v60) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v63 = (void *)((v349 + v61) & 0xFFFFFFFFFFFFFFF8);
      void *v62 = *v63;
      *(_OWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v354 + v56) = *(_OWORD *)(v354 + v57);
      unint64_t v64 = (v403 + v354 + v56) & v385;
      unint64_t v65 = (v403 + v354 + v57) & v385;
      *(unsigned char *)unint64_t v64 = *(unsigned char *)v65;
      uint64_t v66 = v64 | 4;
      int v67 = *(_DWORD *)(v65 | 4);
      *(unsigned char *)(v66 + 4) = *(unsigned char *)((v65 | 4) + 4);
      *(_DWORD *)uint64_t v66 = v67;
      *(_WORD *)(v64 + 10) = *(_WORD *)(v65 + 0xA);
      unint64_t v68 = *(void (**)(unint64_t, unint64_t, uint64_t))(v368 + 32);
      v68((v372 + v64) & v44, (v372 + v65) & v44, v367);
      unint64_t v69 = (v371 + ((v372 + v64) & v44)) & v44;
      unint64_t v70 = (v371 + ((v372 + v65) & v44)) & v44;
      v68(v69, v70, v367);
      unint64_t v71 = (unsigned char *)(v69 + v373);
      *unint64_t v71 = *(unsigned char *)(v70 + v373);
      v71[1] = *(unsigned char *)(v70 + v373 + 1);
      v71[2] = *(unsigned char *)(v70 + v373 + 2);
      v71[3] = *(unsigned char *)(v70 + v373 + 3);
      v71[4] = *(unsigned char *)(v70 + v373 + 4);
      unint64_t v72 = (v69 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v73 = (v70 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v72 = *(_OWORD *)v73;
      *(unsigned char *)(v72 + 16) = *(unsigned char *)(v73 + 16);
      *(unsigned char *)(v72 + 17) = *(unsigned char *)(v73 + 17);
      *(unsigned char *)(v72 + 18) = *(unsigned char *)(v73 + 18);
      *(unsigned char *)(v72 + 19) = *(unsigned char *)(v73 + 19);
      unint64_t v74 = (v72 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v75 = (v73 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v74 = *(void *)v75;
      *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
      *(unsigned char *)(v74 + 9) = *(unsigned char *)(v75 + 9);
      *(unsigned char *)(v74 + 10) = *(unsigned char *)(v75 + 10);
      *(unsigned char *)(v74 + 11) = *(unsigned char *)(v75 + 11);
      *(unsigned char *)(v74 + 12) = *(unsigned char *)(v75 + 12);
      unint64_t v76 = (void *)((v73 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v77 = (void *)((v72 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v77 = *v76;
      unint64_t v78 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v79 = ((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v78 = *(void *)v79;
      *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
      *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
      unint64_t v80 = (void *)((v369 + v78) & v44);
      unint64_t v81 = (const void *)((v369 + v79) & v44);
      unint64_t v394 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v368 + 48);
      if (v394(v81, 1, v367))
      {
        memcpy(v80, v81, __n);
      }
      else
      {
        v68((unint64_t)v80, (unint64_t)v81, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v80, 0, 1, v367);
      }
      long long v158 = (void *)(((unint64_t)v80 + v370) & 0xFFFFFFFFFFFFFFF8);
      long long v159 = (void *)(((unint64_t)v81 + v370) & 0xFFFFFFFFFFFFFFF8);
      *long long v158 = *v159;
      unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v162 = *(void *)v161;
      *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
      *(void *)unint64_t v160 = v162;
      long long v163 = (void *)(((unint64_t)v158 + 31) & 0xFFFFFFFFFFFFFFF8);
      long long v164 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
      *long long v163 = *v164;
      unint64_t v165 = (_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v166 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v165 = *v166;
      unint64_t v167 = ((unint64_t)v165 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v169 = *(void *)v168;
      *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
      *(void *)unint64_t v167 = v169;
      *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
      unint64_t v170 = (v167 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v162) = *(_DWORD *)v171;
      *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
      *(_DWORD *)unint64_t v170 = v162;
      *(_OWORD *)((v167 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v172 = v364 + v64;
      long long v173 = *(_OWORD *)(v364 + v65 + 112);
      long long v175 = *(_OWORD *)(v364 + v65 + 64);
      long long v174 = *(_OWORD *)(v364 + v65 + 80);
      *(_OWORD *)(v172 + 96) = *(_OWORD *)(v364 + v65 + 96);
      *(_OWORD *)(v172 + 112) = v173;
      *(_OWORD *)(v172 + 64) = v175;
      *(_OWORD *)(v172 + 80) = v174;
      long long v176 = *(_OWORD *)(v364 + v65 + 176);
      long long v178 = *(_OWORD *)(v364 + v65 + 128);
      long long v177 = *(_OWORD *)(v364 + v65 + 144);
      *(_OWORD *)(v172 + 160) = *(_OWORD *)(v364 + v65 + 160);
      *(_OWORD *)(v172 + 176) = v176;
      *(_OWORD *)(v172 + 128) = v178;
      *(_OWORD *)(v172 + 144) = v177;
      long long v180 = *(_OWORD *)(v364 + v65 + 208);
      long long v179 = *(_OWORD *)(v364 + v65 + 224);
      long long v181 = *(_OWORD *)(v364 + v65 + 192);
      *(void *)(v172 + 240) = *(void *)(v364 + v65 + 240);
      *(_OWORD *)(v172 + 208) = v180;
      *(_OWORD *)(v172 + 224) = v179;
      *(_OWORD *)(v172 + 192) = v181;
      long long v182 = *(_OWORD *)(v364 + v65);
      long long v183 = *(_OWORD *)(v364 + v65 + 16);
      long long v184 = *(_OWORD *)(v364 + v65 + 48);
      *(_OWORD *)(v172 + 32) = *(_OWORD *)(v364 + v65 + 32);
      *(_OWORD *)(v172 + 48) = v184;
      *(_OWORD *)unint64_t v172 = v182;
      *(_OWORD *)(v172 + 16) = v183;
      int v185 = (_OWORD *)((v364 + v64 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v186 = (long long *)((v364 + v65 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v187 = *v186;
      *(_OWORD *)((char *)v185 + 9) = *(long long *)((char *)v186 + 9);
      _OWORD *v185 = v187;
      unint64_t v188 = (v364 + v64 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = (v364 + v65 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v190 = *(_OWORD *)v189;
      *(unsigned char *)(v188 + 16) = *(unsigned char *)(v189 + 16);
      *(_OWORD *)unint64_t v188 = v190;
      long long v191 = (void *)((v364 + v64 + 311) & 0xFFFFFFFFFFFFFFF8);
      long long v192 = (void *)((v364 + v65 + 311) & 0xFFFFFFFFFFFFFFF8);
      *long long v191 = *v192;
      *(_OWORD *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v193 = ((unint64_t)a2 + v345) & v333;
      long long v194 = *(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 32);
      v194(((unint64_t)a1 + v345) & v333, v193, v357);
      unint64_t v400 = ((unint64_t)a1 + v345) & v333;
      unint64_t v195 = (v338 + v400) & v334;
      v194(v195, (v338 + v193) & v334, v357);
      unint64_t v196 = (v355 + v195) & v336;
      unint64_t v197 = (v355 + ((v338 + v193) & v334)) & v336;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 32))(v196, v197, v359);
      uint64_t v198 = (void *)((v347 + v196) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v199 = (void *)((v347 + v197) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v198 = *v199;
      unint64_t v200 = ((unint64_t)v198 + v376) & v343;
      unint64_t v201 = ((unint64_t)v199 + v376) & v343;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v361 + 32))(v200, v201, v362);
      long long v202 = (void *)((v387 + v200) & 0xFFFFFFFFFFFFFFF8);
      long long v203 = (void *)((v387 + v201) & 0xFFFFFFFFFFFFFFF8);
      *long long v202 = *v203;
      *(_OWORD *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v196 + v391) = *(_OWORD *)(v197 + v391);
      uint64_t v204 = (v403 + v196 + v391) & v385;
      uint64_t v205 = (v403 + v197 + v391) & v385;
      *(unsigned char *)uint64_t v204 = *(unsigned char *)v205;
      uint64_t v206 = v204 | 4;
      int v207 = *(_DWORD *)(v205 | 4);
      *(unsigned char *)(v206 + 4) = *(unsigned char *)((v205 | 4) + 4);
      *(_DWORD *)uint64_t v206 = v207;
      *(_WORD *)(v204 + 10) = *(_WORD *)(v205 + 0xA);
      v68((v372 + v204) & v44, (v372 + v205) & v44, v367);
      uint64_t v208 = (v371 + ((v372 + v204) & v44)) & v44;
      uint64_t v209 = (v371 + ((v372 + v205) & v44)) & v44;
      v68(v208, v209, v367);
      uint64_t v210 = (unsigned char *)(v208 + v373);
      *uint64_t v210 = *(unsigned char *)(v209 + v373);
      v210[1] = *(unsigned char *)(v209 + v373 + 1);
      v210[2] = *(unsigned char *)(v209 + v373 + 2);
      v210[3] = *(unsigned char *)(v209 + v373 + 3);
      v210[4] = *(unsigned char *)(v209 + v373 + 4);
      unint64_t v211 = (v208 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v212 = (v209 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v211 = *(_OWORD *)v212;
      *(unsigned char *)(v211 + 16) = *(unsigned char *)(v212 + 16);
      *(unsigned char *)(v211 + 17) = *(unsigned char *)(v212 + 17);
      *(unsigned char *)(v211 + 18) = *(unsigned char *)(v212 + 18);
      *(unsigned char *)(v211 + 19) = *(unsigned char *)(v212 + 19);
      unint64_t v213 = (v211 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v214 = (v212 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v213 = *(void *)v214;
      *(unsigned char *)(v213 + 8) = *(unsigned char *)(v214 + 8);
      *(unsigned char *)(v213 + 9) = *(unsigned char *)(v214 + 9);
      *(unsigned char *)(v213 + 10) = *(unsigned char *)(v214 + 10);
      *(unsigned char *)(v213 + 11) = *(unsigned char *)(v214 + 11);
      *(unsigned char *)(v213 + 12) = *(unsigned char *)(v214 + 12);
      uint64_t v215 = (void *)((v211 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v216 = (void *)((v212 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v215 = *v216;
      unint64_t v217 = ((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v218 = ((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v217 = *(void *)v218;
      *(unsigned char *)(v217 + 8) = *(unsigned char *)(v218 + 8);
      *(unsigned char *)(v217 + 9) = *(unsigned char *)(v218 + 9);
      id v219 = (void *)((v369 + v217) & v44);
      unint64_t v220 = (const void *)((v369 + v218) & v44);
      if (v394(v220, 1, v367))
      {
        memcpy(v219, v220, __n);
      }
      else
      {
        v68((unint64_t)v219, (unint64_t)v220, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v219, 0, 1, v367);
      }
      uint64_t v39 = v379;
      char v119 = 0;
      unint64_t v221 = (void *)(((unint64_t)v219 + v370) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v222 = (void *)(((unint64_t)v220 + v370) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v221 = *v222;
      unint64_t v223 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v224 = ((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v225 = *(void *)v224;
      *(unsigned char *)(v223 + 8) = *(unsigned char *)(v224 + 8);
      *(void *)unint64_t v223 = v225;
      long long v226 = (void *)(((unint64_t)v221 + 31) & 0xFFFFFFFFFFFFFFF8);
      long long v227 = (void *)(((unint64_t)v222 + 31) & 0xFFFFFFFFFFFFFFF8);
      *long long v226 = *v227;
      long long v228 = (_OWORD *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v229 = (_OWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v228 = *v229;
      unint64_t v230 = ((unint64_t)v228 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v231 = ((unint64_t)v229 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v232 = *(void *)v231;
      *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
      *(void *)unint64_t v230 = v232;
      *(unsigned char *)(v230 + 9) = *(unsigned char *)(v231 + 9);
      unint64_t v233 = (v230 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v234 = (v231 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v225) = *(_DWORD *)v234;
      *(unsigned char *)(v233 + 4) = *(unsigned char *)(v234 + 4);
      *(_DWORD *)unint64_t v233 = v225;
      *(_OWORD *)((v230 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v231 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v235 = v204 + v364;
      long long v236 = *(_OWORD *)(v205 + v364 + 112);
      long long v238 = *(_OWORD *)(v205 + v364 + 64);
      long long v237 = *(_OWORD *)(v205 + v364 + 80);
      *(_OWORD *)(v235 + 96) = *(_OWORD *)(v205 + v364 + 96);
      *(_OWORD *)(v235 + 112) = v236;
      *(_OWORD *)(v235 + 64) = v238;
      *(_OWORD *)(v235 + 80) = v237;
      long long v239 = *(_OWORD *)(v205 + v364 + 176);
      long long v241 = *(_OWORD *)(v205 + v364 + 128);
      long long v240 = *(_OWORD *)(v205 + v364 + 144);
      *(_OWORD *)(v235 + 160) = *(_OWORD *)(v205 + v364 + 160);
      *(_OWORD *)(v235 + 176) = v239;
      *(_OWORD *)(v235 + 128) = v241;
      *(_OWORD *)(v235 + 144) = v240;
      long long v243 = *(_OWORD *)(v205 + v364 + 208);
      long long v242 = *(_OWORD *)(v205 + v364 + 224);
      long long v244 = *(_OWORD *)(v205 + v364 + 192);
      *(void *)(v235 + 240) = *(void *)(v205 + v364 + 240);
      *(_OWORD *)(v235 + 208) = v243;
      *(_OWORD *)(v235 + 224) = v242;
      *(_OWORD *)(v235 + 192) = v244;
      long long v245 = *(_OWORD *)(v205 + v364);
      long long v246 = *(_OWORD *)(v205 + v364 + 16);
      long long v247 = *(_OWORD *)(v205 + v364 + 48);
      *(_OWORD *)(v235 + 32) = *(_OWORD *)(v205 + v364 + 32);
      *(_OWORD *)(v235 + 48) = v247;
      *(_OWORD *)unint64_t v235 = v245;
      *(_OWORD *)(v235 + 16) = v246;
      unint64_t v248 = (_OWORD *)((v204 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v249 = (long long *)((v205 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v250 = *v249;
      *(_OWORD *)((char *)v248 + 9) = *(long long *)((char *)v249 + 9);
      *unint64_t v248 = v250;
      unint64_t v251 = (v204 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = (v205 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v253 = *(_OWORD *)v252;
      *(unsigned char *)(v251 + 16) = *(unsigned char *)(v252 + 16);
      *(_OWORD *)unint64_t v251 = v253;
      unint64_t v254 = (void *)((v204 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v255 = (void *)((v205 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v254 = *v255;
      *(_OWORD *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v256 = (void *)((v400 + v340) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v257 = (void *)((v193 + v340) & 0xFFFFFFFFFFFFFFF8);
      void *v256 = *v257;
      *(_OWORD *)(((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_66:
      *((unsigned char *)v52 + v39) = v119;
      return v52;
  }
}

char *sub_100600158(char *a1, char *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v440 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v430 = *(void *)(v440 + 64);
    uint64_t v423 = *(unsigned __int8 *)(v440 + 80);
    uint64_t v425 = v430 + v423;
    uint64_t v403 = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(v403 - 8);
    uint64_t v441 = v3;
    long long v444 = v2;
    int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
    uint64_t v401 = swift_getAssociatedTypeWitness();
    uint64_t v436 = *(void *)(v401 - 8);
    uint64_t v5 = *(unsigned __int8 *)(v436 + 80);
    uint64_t v445 = v4 | v5 | 7;
    uint64_t v390 = v430 + v445;
    uint64_t v402 = *(void *)(v3 + 64) + 7;
    uint64_t v400 = v5 + 8;
    uint64_t v437 = v5;
    uint64_t v397 = *(void *)(v436 + 64) + 7;
    unint64_t v404 = ((((v397 + ((v5 + 8 + (v402 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v442 = sub_10096B0E0();
    uint64_t v6 = *(void *)(v442 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = v7 | 7;
    uint64_t v448 = (v7 | 7) + 16;
    uint64_t v439 = v7 + 12;
    size_t v9 = *(void *)(v6 + 64);
    uint64_t v435 = v9 + v7;
    size_t v405 = v9 + 12;
    uint64_t v432 = v7 + 10;
    uint64_t v426 = v6;
    unsigned int v427 = *(_DWORD *)(v6 + 84);
    size_t v406 = v9;
    if (v427) {
      size_t v10 = *(void *)(*(void *)(v442 - 8) + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    size_t __n = v10;
    size_t v433 = v10 + 7;
    unint64_t v377 = (v7
          + 10
          + ((((((v9 + 12 + ((v9 + v7 + ((v7 + 12) & ~v7)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
    unint64_t v421 = (((((((((v10 + 7 + v377) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v434 = v421 + 16;
    uint64_t v378 = (v448 + v404 + ((v430 + v445 + ((v430 + v423) & ~v423)) & ~v445)) & ~(v7 | 7);
    size_t v428 = ((((v378 + v421 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v11 = swift_getAssociatedTypeWitness();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v413 = v12;
    uint64_t v414 = v11;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v417 = swift_getAssociatedTypeWitness();
    uint64_t v14 = *(void *)(v417 - 8);
    uint64_t v415 = v14;
    int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v13;
    uint64_t v18 = v423;
    uint64_t v419 = *(void *)(v16 - 8);
    uint64_t v420 = v16;
    uint64_t v19 = *(unsigned __int8 *)(v419 + 80);
    int v20 = v15 | v19;
    uint64_t v2 = (char *)v444;
    uint64_t v21 = v20 | 7u;
    uint64_t v22 = v13 | v7 | v21;
    size_t v389 = v428 + v22;
    uint64_t v23 = *(void *)(v12 + 64);
    uint64_t v409 = v23 + v13;
    uint64_t v410 = v23 + v21;
    uint64_t v24 = v14;
    uint64_t v25 = v440;
    uint64_t v411 = *(void *)(v24 + 64) + 7;
    uint64_t v412 = v19 + 8;
    uint64_t v416 = *(void *)(v419 + 64) + 7;
    unint64_t v418 = ((((v416 + ((v19 + 8 + (v411 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v26 = (v421 + ((v448 + v418 + ((v23 + v21 + ((v23 + v13) & ~v13)) & ~v21)) & ~v8) + 327) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = ((((v27 + ((v428 + v22) & ~v22) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v29 = v445 | v423 | v7;
    uint64_t v386 = v29 + v430;
    unsigned int v373 = *(_DWORD *)(v436 + 84);
    if (*(_DWORD *)(v3 + 84) <= v373) {
      unsigned int v30 = *(_DWORD *)(v436 + 84);
    }
    else {
      unsigned int v30 = *(_DWORD *)(v3 + 84);
    }
    unsigned int v374 = v30;
    if (v30 <= 0x7FFFFFFE) {
      unsigned int v30 = 2147483646;
    }
    unsigned int v379 = v30;
    if (v30 <= *(_DWORD *)(v440 + 84)) {
      unsigned int v30 = *(_DWORD *)(v440 + 84);
    }
    if (v427 <= 0x7FFFFFFE) {
      unsigned int v31 = 2147483646;
    }
    else {
      unsigned int v31 = v427;
    }
    if (v30 <= v31) {
      unsigned int v30 = v31;
    }
    unsigned int v375 = v30;
    if (v30 <= 0x7FFFFFFF) {
      int v32 = 0x7FFFFFFF;
    }
    else {
      int v32 = v30;
    }
    if (((v428 + (v386 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 24 > v28) {
      unint64_t v28 = ((v428 + (v386 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    unint64_t v33 = ((v26 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v33 > v28) {
      unint64_t v28 = v33;
    }
    if (v28 <= 0x10) {
      uint64_t v34 = 16;
    }
    else {
      uint64_t v34 = v28;
    }
    unsigned int v35 = *((unsigned __int8 *)v444 + v34);
    uint64_t v36 = v34 & 0xFFFFFFF8;
    if (v35 >= 4 && v36 != 0) {
      unsigned int v35 = *v444 + 4;
    }
    int v385 = v32;
    int v387 = *(_DWORD *)(v440 + 84);
    int v376 = *(_DWORD *)(v3 + 84);
    uint64_t v38 = ~v423;
    uint64_t v424 = ~v445;
    uint64_t v399 = ~v437;
    uint64_t v438 = ~v8;
    uint64_t v39 = ~v7;
    uint64_t v388 = ~v22;
    uint64_t v407 = ~v17;
    uint64_t v408 = ~v21;
    uint64_t v422 = ~v19;
    unint64_t v40 = v27 + 16;
    uint64_t v384 = ~v29;
    uint64_t v41 = AssociatedTypeWitness;
    switch(v35)
    {
      case 1u:
        unint64_t v63 = *(void (**)(_DWORD *, uint64_t))(v440 + 8);
        v63((char *)v444, AssociatedTypeWitness);
        unint64_t v64 = ((unint64_t)v444 + v386) & v384;
        uint64_t v392 = v38;
        if (v387 == v385)
        {
          unint64_t v65 = *(uint64_t (**)(unint64_t))(v440 + 48);
          unint64_t v66 = ((unint64_t)v444 + v386) & v384;
          goto LABEL_56;
        }
        unint64_t v68 = (v425 + v64) & v38;
        unint64_t v69 = (v390 + v68) & v424;
        if (v379 == v385)
        {
          if (v376 == v379)
          {
            unint64_t v65 = *(uint64_t (**)(unint64_t))(v441 + 48);
            unint64_t v66 = (v390 + v68) & v424;
            goto LABEL_56;
          }
          unint64_t v298 = (unint64_t *)((v402 + v69) & 0xFFFFFFFFFFFFFFF8);
          if (v374 <= 0x7FFFFFFE)
          {
            unint64_t v299 = *v298;
            goto LABEL_138;
          }
          unint64_t v66 = ((unint64_t)v298 + v400) & v399;
          unint64_t v65 = *(uint64_t (**)(unint64_t))(v436 + 48);
        }
        else
        {
          unint64_t v294 = v69 + v404;
          if ((v375 & 0x80000000) == 0)
          {
            unint64_t v295 = *(void *)(v294 + 8);
            if (v295 >= 0xFFFFFFFF) {
              LODWORD(v295) = -1;
            }
            if (v295 == -1)
            {
LABEL_57:
              unint64_t v68 = (v425 + v64) & v392;
              unint64_t v69 = (v390 + v68) & v424;
LABEL_58:
              v63((_DWORD *)v64, AssociatedTypeWitness);
              v63((_DWORD *)v68, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v441 + 8))(v69, v403);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v436 + 8))((v400 + ((v402 + v69) & 0xFFFFFFFFFFFFFFF8)) & v399, v401);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v70 = (v448 + v69 + v404) & v438;
              unint64_t v71 = (v439 + v70) & v39;
              uint64_t v72 = v39;
              unint64_t v73 = *(void (**)(unint64_t, uint64_t))(v426 + 8);
              v73(v71, v442);
              unint64_t v74 = (v435 + v71) & v72;
              v73(v74, v442);
              swift_bridgeObjectRelease();
              uint64_t v372 = v72;
              unint64_t v75 = (v432
                   + ((((((v405 + v74) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v72;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v426 + 48))(v75, 1, v442)) {
                v73(v75, v442);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v76 = (uint64_t *)((((((v433 + v75) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v77 = v76[1];
              if ((v77 & 0x3000000000000000) == 0) {
                sub_10001E9C0(*v76, v77);
              }
              swift_bridgeObjectRelease();
              unint64_t v78 = v434 + v70;
              LODWORD(v79) = -1;
              if (*(void *)(v78 + 16) < 0xFFFFFFFFuLL) {
                uint64_t v79 = *(void *)(v78 + 16);
              }
              uint64_t v39 = v372;
              uint64_t v41 = AssociatedTypeWitness;
              uint64_t v36 = v34 & 0xFFFFFFF8;
              if ((int)v79 - 1 < 0)
              {
                swift_errorRelease();
                swift_errorRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v78 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1000CF144(*(void *)((((v78 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v78 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_69:
            uint64_t v25 = v440;
            uint64_t v38 = v392;
LABEL_81:
            swift_bridgeObjectRelease();
            unsigned int v93 = a2[v34];
            if (v36) {
              BOOL v94 = v93 >= 4;
            }
            else {
              BOOL v94 = 0;
            }
            if (v94) {
              unsigned int v93 = *(_DWORD *)a2 + 4;
            }
            switch(v93)
            {
              case 1u:
                unint64_t v125 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
                v125(v2, a2, v41);
                uint64_t v447 = (char *)((unint64_t)&v2[v386] & v384);
                uint64_t v126 = (char *)((unint64_t)&a2[v386] & v384);
                if (v387 == v385)
                {
                  unint64_t v127 = v447;
                  if (!(*(unsigned int (**)(unint64_t))(v25 + 48))((unint64_t)&a2[v386] & v384)) {
                    goto LABEL_131;
                  }
                  goto LABEL_146;
                }
                unint64_t v156 = (unint64_t)&v126[v425] & v38;
                unint64_t v157 = (v390 + v156) & v424;
                if (v379 == v385)
                {
                  if (v376 == v379)
                  {
                    unint64_t v127 = v447;
                    if (!(*(unsigned int (**)(unint64_t))(v441 + 48))((v390 + v156) & v424)) {
                      goto LABEL_131;
                    }
                    goto LABEL_146;
                  }
                  unint64_t v300 = (unint64_t *)((v402 + v157) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v127 = v447;
                  if (v374 <= 0x7FFFFFFE)
                  {
                    unint64_t v301 = *v300;
                    goto LABEL_143;
                  }
                  int v303 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v436 + 48))(((unint64_t)v300 + v400) & v399, v373, v401);
                }
                else
                {
                  unint64_t v296 = v157 + v404;
                  if ((v375 & 0x80000000) == 0)
                  {
                    unint64_t v297 = *(void *)(v296 + 8);
                    if (v297 >= 0xFFFFFFFF) {
                      LODWORD(v297) = -1;
                    }
                    unint64_t v127 = v447;
                    if (v297 == -1) {
                      goto LABEL_131;
                    }
                    goto LABEL_146;
                  }
                  unint64_t v127 = v447;
                  uint64_t v302 = (v439 + ((v448 + v296) & v438)) & v39;
                  if (v427 <= 0x7FFFFFFD)
                  {
                    unint64_t v301 = *(void *)(((v405 + ((v435 + v302) & v39)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_143:
                    if (v301 >= 0xFFFFFFFF) {
                      LODWORD(v301) = -1;
                    }
                    if ((v301 + 1) < 2)
                    {
LABEL_132:
                      uint64_t v396 = v34;
                      v125(v127, v126, v41);
                      unint64_t v304 = (unint64_t)&v127[v425] & v38;
                      v125((char *)v304, (char *)v156, v41);
                      unint64_t v305 = (v390 + v304) & v424;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v305, v157, v403);
                      long long v306 = (void *)((v402 + v305) & 0xFFFFFFFFFFFFFFF8);
                      long long v307 = (void *)((v402 + v157) & 0xFFFFFFFFFFFFFFF8);
                      *long long v306 = *v307;
                      unint64_t v308 = ((unint64_t)v306 + v400) & v399;
                      unint64_t v309 = ((unint64_t)v307 + v400) & v399;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v436 + 32))(v308, v309, v401);
                      long long v310 = (void *)((v397 + v308) & 0xFFFFFFFFFFFFFFF8);
                      long long v311 = (void *)((v397 + v309) & 0xFFFFFFFFFFFFFFF8);
                      *long long v310 = *v311;
                      *(_OWORD *)(((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *(_OWORD *)(v305 + v404) = *(_OWORD *)(v157 + v404);
                      unint64_t v312 = (v448 + v305 + v404) & v438;
                      unint64_t v313 = (v448 + v157 + v404) & v438;
                      *(unsigned char *)unint64_t v312 = *(unsigned char *)v313;
                      uint64_t v314 = v312 | 4;
                      int v315 = *(_DWORD *)(v313 | 4);
                      *(unsigned char *)(v314 + 4) = *(unsigned char *)((v313 | 4) + 4);
                      *(_DWORD *)uint64_t v314 = v315;
                      *(_WORD *)(v312 + 10) = *(_WORD *)(v313 + 0xA);
                      long long v316 = *(void (**)(unint64_t, unint64_t, uint64_t))(v426 + 32);
                      v316((v439 + v312) & v39, (v439 + v313) & v39, v442);
                      unint64_t v317 = (v435 + ((v439 + v312) & v39)) & v39;
                      unint64_t v318 = (v435 + ((v439 + v313) & v39)) & v39;
                      v316(v317, v318, v442);
                      long long v319 = (unsigned char *)(v317 + v406);
                      *long long v319 = *(unsigned char *)(v318 + v406);
                      v319[1] = *(unsigned char *)(v318 + v406 + 1);
                      v319[2] = *(unsigned char *)(v318 + v406 + 2);
                      v319[3] = *(unsigned char *)(v318 + v406 + 3);
                      v319[4] = *(unsigned char *)(v318 + v406 + 4);
                      unint64_t v320 = (v317 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v321 = (v318 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)unint64_t v320 = *(_OWORD *)v321;
                      *(unsigned char *)(v320 + 16) = *(unsigned char *)(v321 + 16);
                      *(unsigned char *)(v320 + 17) = *(unsigned char *)(v321 + 17);
                      *(unsigned char *)(v320 + 18) = *(unsigned char *)(v321 + 18);
                      *(unsigned char *)(v320 + 19) = *(unsigned char *)(v321 + 19);
                      unint64_t v322 = (v320 + 27) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v323 = (v321 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v322 = *(void *)v323;
                      *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
                      *(unsigned char *)(v322 + 9) = *(unsigned char *)(v323 + 9);
                      *(unsigned char *)(v322 + 10) = *(unsigned char *)(v323 + 10);
                      *(unsigned char *)(v322 + 11) = *(unsigned char *)(v323 + 11);
                      *(unsigned char *)(v322 + 12) = *(unsigned char *)(v323 + 12);
                      unint64_t v324 = (void *)((v321 + 47) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v325 = (void *)((v320 + 47) & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v325 = *v324;
                      unint64_t v326 = ((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v327 = ((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v326 = *(void *)v327;
                      *(unsigned char *)(v326 + 8) = *(unsigned char *)(v327 + 8);
                      *(unsigned char *)(v326 + 9) = *(unsigned char *)(v327 + 9);
                      long long v328 = (void *)((v432 + v326) & v39);
                      long long v329 = (const void *)((v432 + v327) & v39);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v426 + 48))(v329, 1, v442))
                      {
                        memcpy(v328, v329, __n);
                      }
                      else
                      {
                        v316((unint64_t)v328, (unint64_t)v329, v442);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v426 + 56))(v328, 0, 1, v442);
                      }
                      uint64_t v34 = v396;
                      size_t v330 = v406;
                      unint64_t v332 = v377;
                      uint64_t v331 = v378;
                      uint64_t v333 = (void *)(((unint64_t)v328 + v433) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v334 = (void *)(((unint64_t)v329 + v433) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v333 = *v334;
                      unint64_t v335 = ((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v336 = ((unint64_t)v334 + 15) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v337 = *(void *)v336;
                      *(unsigned char *)(v335 + 8) = *(unsigned char *)(v336 + 8);
                      *(void *)unint64_t v335 = v337;
                      uint64_t v338 = (void *)(((unint64_t)v333 + 31) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v339 = (void *)(((unint64_t)v334 + 31) & 0xFFFFFFFFFFFFFFF8);
                      void *v338 = *v339;
                      unint64_t v340 = (_OWORD *)(((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v341 = (_OWORD *)(((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFFFF8);
                      _OWORD *v340 = *v341;
                      unint64_t v342 = ((unint64_t)v340 + 19) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v343 = ((unint64_t)v341 + 19) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v344 = *(void *)v343;
                      *(unsigned char *)(v342 + 8) = *(unsigned char *)(v343 + 8);
                      *(void *)unint64_t v342 = v344;
                      *(unsigned char *)(v342 + 9) = *(unsigned char *)(v343 + 9);
                      unint64_t v345 = (v342 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      unint64_t v346 = (v343 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      LODWORD(v337) = *(_DWORD *)v346;
                      *(unsigned char *)(v345 + 4) = *(unsigned char *)(v346 + 4);
                      *(_DWORD *)unint64_t v345 = v337;
                      *(_OWORD *)((v342 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v343 + 25) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v347 = v434 + v312;
                      long long v348 = *(_OWORD *)(v434 + v313 + 112);
                      long long v350 = *(_OWORD *)(v434 + v313 + 64);
                      long long v349 = *(_OWORD *)(v434 + v313 + 80);
                      *(_OWORD *)(v347 + 96) = *(_OWORD *)(v434 + v313 + 96);
                      *(_OWORD *)(v347 + 112) = v348;
                      *(_OWORD *)(v347 + 64) = v350;
                      *(_OWORD *)(v347 + 80) = v349;
                      long long v351 = *(_OWORD *)(v434 + v313 + 176);
                      long long v353 = *(_OWORD *)(v434 + v313 + 128);
                      long long v352 = *(_OWORD *)(v434 + v313 + 144);
                      *(_OWORD *)(v347 + 160) = *(_OWORD *)(v434 + v313 + 160);
                      *(_OWORD *)(v347 + 176) = v351;
                      *(_OWORD *)(v347 + 128) = v353;
                      *(_OWORD *)(v347 + 144) = v352;
                      long long v355 = *(_OWORD *)(v434 + v313 + 208);
                      long long v354 = *(_OWORD *)(v434 + v313 + 224);
                      long long v356 = *(_OWORD *)(v434 + v313 + 192);
                      *(void *)(v347 + 240) = *(void *)(v434 + v313 + 240);
                      *(_OWORD *)(v347 + 208) = v355;
                      *(_OWORD *)(v347 + 224) = v354;
                      *(_OWORD *)(v347 + 192) = v356;
                      long long v357 = *(_OWORD *)(v434 + v313);
                      long long v358 = *(_OWORD *)(v434 + v313 + 16);
                      long long v359 = *(_OWORD *)(v434 + v313 + 48);
                      *(_OWORD *)(v347 + 32) = *(_OWORD *)(v434 + v313 + 32);
                      *(_OWORD *)(v347 + 48) = v359;
                      *(_OWORD *)unint64_t v347 = v357;
                      *(_OWORD *)(v347 + 16) = v358;
                      unint64_t v360 = (_OWORD *)((v434 + v312 + 255) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v361 = (long long *)((v434 + v313 + 255) & 0xFFFFFFFFFFFFFFF8);
                      long long v362 = *v361;
                      *(_OWORD *)((char *)v360 + 9) = *(long long *)((char *)v361 + 9);
                      *unint64_t v360 = v362;
                      unint64_t v363 = (v434 + v312 + 287) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v364 = (v434 + v313 + 287) & 0xFFFFFFFFFFFFFFF8;
                      long long v365 = *(_OWORD *)v364;
                      *(unsigned char *)(v363 + 16) = *(unsigned char *)(v364 + 16);
                      *(_OWORD *)unint64_t v363 = v365;
                      size_t v366 = (void *)((v434 + v312 + 311) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v367 = (void *)((v434 + v313 + 311) & 0xFFFFFFFFFFFFFFF8);
                      *size_t v366 = *v367;
                      *(_OWORD *)(((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v127 = v447;
                      if (v427) {
                        goto LABEL_148;
                      }
                      goto LABEL_147;
                    }
                    goto LABEL_146;
                  }
                  int v303 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v426 + 48))(v302, v427, v442);
                }
                if (!v303)
                {
LABEL_131:
                  unint64_t v156 = (unint64_t)&v126[v425] & v38;
                  unint64_t v157 = (v390 + v156) & v424;
                  goto LABEL_132;
                }
LABEL_146:
                memcpy(v127, v126, v428);
                unint64_t v332 = v377;
                uint64_t v331 = v378;
LABEL_147:
                size_t v330 = __n;
LABEL_148:
                unint64_t v368 = ((((v331
                         + ((((((((((v332 + v330 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 19) & 0xFFFFFFFFFFFFFFF8)
                           + 25) & 0xFFFFFFFFFFFFFFF8)
                         + 327) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 16;
                unint64_t v369 = (unint64_t)&v127[v368];
                unint64_t v370 = (unint64_t)&v126[v368];
                *(unsigned char *)unint64_t v369 = *(unsigned char *)v370;
                *(_OWORD *)((v369 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v370 & 0xFFFFFFFFFFFFFFF8) + 8);
                char v155 = 1;
                uint64_t v2 = (char *)v444;
LABEL_149:
                v2[v34] = v155;
                return v2;
              case 2u:
                unint64_t v383 = v40;
                uint64_t v395 = v34;
                unint64_t v128 = *(void (**)(_OWORD *, _DWORD *, uint64_t))(v413 + 32);
                v128(v2, a2, v414);
                v128((_OWORD *)((unint64_t)&v2[v409] & v407), (_DWORD *)((unint64_t)&a2[v409] & v407), v414);
                unint64_t v129 = (v410 + ((unint64_t)&v2[v409] & v407)) & v408;
                unint64_t v130 = (v410 + ((unint64_t)&a2[v409] & v407)) & v408;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v415 + 32))(v129, v130, v417);
                unint64_t v131 = (void *)((v411 + v129) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v132 = (void *)((v411 + v130) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v131 = *v132;
                unint64_t v133 = ((unint64_t)v131 + v412) & v422;
                unint64_t v134 = ((unint64_t)v132 + v412) & v422;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v419 + 32))(v133, v134, v420);
                unint64_t v135 = (void *)((v416 + v133) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v136 = (void *)((v416 + v134) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v135 = *v136;
                *(_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v136
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v418 + v129) = *(_OWORD *)(v418 + v130);
                unint64_t v137 = (v448 + v418 + v129) & v438;
                unint64_t v138 = (v448 + v418 + v130) & v438;
                *(unsigned char *)unint64_t v137 = *(unsigned char *)v138;
                uint64_t v139 = v137 | 4;
                int v140 = *(_DWORD *)(v138 | 4);
                *(unsigned char *)(v139 + 4) = *(unsigned char *)((v138 | 4) + 4);
                *(_DWORD *)uint64_t v139 = v140;
                *(_WORD *)(v137 + 10) = *(_WORD *)(v138 + 0xA);
                long long v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v426 + 32);
                v141((v439 + v137) & v39, (v439 + v138) & v39, v442);
                unint64_t v142 = (v435 + ((v439 + v137) & v39)) & v39;
                unint64_t v143 = (v435 + ((v439 + v138) & v39)) & v39;
                v141(v142, v143, v442);
                long long v144 = (unsigned char *)(v142 + v406);
                *long long v144 = *(unsigned char *)(v143 + v406);
                v144[1] = *(unsigned char *)(v143 + v406 + 1);
                v144[2] = *(unsigned char *)(v143 + v406 + 2);
                v144[3] = *(unsigned char *)(v143 + v406 + 3);
                v144[4] = *(unsigned char *)(v143 + v406 + 4);
                unint64_t v145 = (v142 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v146 = (v143 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v145 = *(_OWORD *)v146;
                *(unsigned char *)(v145 + 16) = *(unsigned char *)(v146 + 16);
                *(unsigned char *)(v145 + 17) = *(unsigned char *)(v146 + 17);
                *(unsigned char *)(v145 + 18) = *(unsigned char *)(v146 + 18);
                *(unsigned char *)(v145 + 19) = *(unsigned char *)(v146 + 19);
                unint64_t v147 = (v145 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v148 = (v146 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v147 = *(void *)v148;
                *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
                *(unsigned char *)(v147 + 9) = *(unsigned char *)(v148 + 9);
                *(unsigned char *)(v147 + 10) = *(unsigned char *)(v148 + 10);
                *(unsigned char *)(v147 + 11) = *(unsigned char *)(v148 + 11);
                *(unsigned char *)(v147 + 12) = *(unsigned char *)(v148 + 12);
                unint64_t v149 = (void *)((v146 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v150 = (void *)((v145 + 47) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v150 = *v149;
                unint64_t v151 = ((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v152 = ((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v151 = *(void *)v152;
                *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
                *(unsigned char *)(v151 + 9) = *(unsigned char *)(v152 + 9);
                unint64_t v153 = (void *)((v432 + v151) & v39);
                long long v154 = (const void *)((v432 + v152) & v39);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v426 + 48))(v154, 1, v442))
                {
                  memcpy(v153, v154, __n);
                }
                else
                {
                  v141((unint64_t)v153, (unint64_t)v154, v442);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v426 + 56))(v153, 0, 1, v442);
                }
                uint64_t v34 = v395;
                long long v158 = (void *)(((unint64_t)v153 + v433) & 0xFFFFFFFFFFFFFFF8);
                long long v159 = (void *)(((unint64_t)v154 + v433) & 0xFFFFFFFFFFFFFFF8);
                *long long v158 = *v159;
                unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v162 = *(void *)v161;
                *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
                *(void *)unint64_t v160 = v162;
                long long v163 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
                long long v164 = (void *)(((unint64_t)v158 + 31) & 0xFFFFFFFFFFFFFFF8);
                *long long v164 = *v163;
                unint64_t v165 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v166 = (_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v165 = *v166;
                unint64_t v167 = ((unint64_t)v165 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v169 = *(void *)v168;
                *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
                *(void *)unint64_t v167 = v169;
                *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
                unint64_t v170 = (v167 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v162) = *(_DWORD *)v171;
                *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
                *(_DWORD *)unint64_t v170 = v162;
                *(_OWORD *)((v167 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v172 = v137 + v434;
                long long v173 = *(_OWORD *)(v138 + v434 + 112);
                long long v175 = *(_OWORD *)(v138 + v434 + 64);
                long long v174 = *(_OWORD *)(v138 + v434 + 80);
                *(_OWORD *)(v172 + 96) = *(_OWORD *)(v138 + v434 + 96);
                *(_OWORD *)(v172 + 112) = v173;
                *(_OWORD *)(v172 + 64) = v175;
                *(_OWORD *)(v172 + 80) = v174;
                long long v176 = *(_OWORD *)(v138 + v434 + 176);
                long long v178 = *(_OWORD *)(v138 + v434 + 128);
                long long v177 = *(_OWORD *)(v138 + v434 + 144);
                *(_OWORD *)(v172 + 160) = *(_OWORD *)(v138 + v434 + 160);
                *(_OWORD *)(v172 + 176) = v176;
                *(_OWORD *)(v172 + 128) = v178;
                *(_OWORD *)(v172 + 144) = v177;
                long long v180 = *(_OWORD *)(v138 + v434 + 208);
                long long v179 = *(_OWORD *)(v138 + v434 + 224);
                long long v181 = *(_OWORD *)(v138 + v434 + 192);
                *(void *)(v172 + 240) = *(void *)(v138 + v434 + 240);
                *(_OWORD *)(v172 + 208) = v180;
                *(_OWORD *)(v172 + 224) = v179;
                *(_OWORD *)(v172 + 192) = v181;
                long long v182 = *(_OWORD *)(v138 + v434);
                long long v183 = *(_OWORD *)(v138 + v434 + 16);
                long long v184 = *(_OWORD *)(v138 + v434 + 48);
                *(_OWORD *)(v172 + 32) = *(_OWORD *)(v138 + v434 + 32);
                *(_OWORD *)(v172 + 48) = v184;
                *(_OWORD *)unint64_t v172 = v182;
                *(_OWORD *)(v172 + 16) = v183;
                int v185 = (_OWORD *)((v137 + v434 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v186 = (long long *)((v138 + v434 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v187 = *v186;
                *(_OWORD *)((char *)v185 + 9) = *(long long *)((char *)v186 + 9);
                _OWORD *v185 = v187;
                unint64_t v188 = (v137 + v434 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v189 = (v138 + v434 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v190 = *(_OWORD *)v189;
                *(unsigned char *)(v188 + 16) = *(unsigned char *)(v189 + 16);
                *(_OWORD *)unint64_t v188 = v190;
                long long v191 = (void *)((v137 + v434 + 311) & 0xFFFFFFFFFFFFFFF8);
                long long v192 = (void *)((v138 + v434 + 311) & 0xFFFFFFFFFFFFFFF8);
                *long long v191 = *v192;
                *(_OWORD *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v192
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v193 = (unint64_t)&v2[v383];
                *(unsigned char *)unint64_t v193 = a2[v383];
                *(_OWORD *)((v193 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)(((unint64_t)&a2[v383] & 0xFFFFFFFFFFFFFFF8)
                                                                           + 8);
                char v155 = 2;
                goto LABEL_149;
              case 3u:
                *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
                char v155 = 3;
                goto LABEL_149;
              default:
                unint64_t v382 = v40;
                uint64_t v394 = v34;
                uint64_t v95 = *(void (**)(_OWORD *, _DWORD *, uint64_t))(v25 + 32);
                v95(v2, a2, v41);
                unint64_t v96 = (unint64_t)&v2[v425] & v38;
                unint64_t v97 = (unint64_t)&a2[v425] & v38;
                v95((_OWORD *)v96, (_DWORD *)v97, v41);
                unint64_t v98 = (v96 + v430 + v445) & v424;
                unint64_t v99 = (v97 + v430 + v445) & v424;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v98, v99, v403);
                unint64_t v100 = (void *)((v402 + v98) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v101 = (void *)((v402 + v99) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v100 = *v101;
                unint64_t v102 = ((unint64_t)v100 + v400) & v399;
                unint64_t v103 = ((unint64_t)v101 + v400) & v399;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v436 + 32))(v102, v103, v401);
                int v104 = (void *)((v397 + v102) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v105 = (void *)((v397 + v103) & 0xFFFFFFFFFFFFFFF8);
                void *v104 = *v105;
                *(_OWORD *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v105
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v404 + v98) = *(_OWORD *)(v404 + v99);
                unint64_t v106 = (v448 + v404 + v98) & v438;
                unint64_t v107 = (v448 + v404 + v99) & v438;
                *(unsigned char *)unint64_t v106 = *(unsigned char *)v107;
                uint64_t v108 = v106 | 4;
                int v109 = *(_DWORD *)(v107 | 4);
                *(unsigned char *)(v108 + 4) = *(unsigned char *)((v107 | 4) + 4);
                *(_DWORD *)uint64_t v108 = v109;
                *(_WORD *)(v106 + 10) = *(_WORD *)(v107 + 0xA);
                unint64_t v110 = *(void (**)(unint64_t, unint64_t, uint64_t))(v426 + 32);
                uint64_t v111 = v442;
                v110((v439 + v106) & v39, (v439 + v107) & v39, v442);
                unint64_t v112 = (v435 + ((v439 + v106) & v39)) & v39;
                unint64_t v113 = (v435 + ((v439 + v107) & v39)) & v39;
                v110(v112, v113, v442);
                unint64_t v114 = (unsigned char *)(v112 + v406);
                *unint64_t v114 = *(unsigned char *)(v113 + v406);
                v114[1] = *(unsigned char *)(v113 + v406 + 1);
                v114[2] = *(unsigned char *)(v113 + v406 + 2);
                v114[3] = *(unsigned char *)(v113 + v406 + 3);
                v114[4] = *(unsigned char *)(v113 + v406 + 4);
                unint64_t v115 = (v112 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v116 = (v113 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v115 = *(_OWORD *)v116;
                *(unsigned char *)(v115 + 16) = *(unsigned char *)(v116 + 16);
                *(unsigned char *)(v115 + 17) = *(unsigned char *)(v116 + 17);
                *(unsigned char *)(v115 + 18) = *(unsigned char *)(v116 + 18);
                *(unsigned char *)(v115 + 19) = *(unsigned char *)(v116 + 19);
                unint64_t v117 = (v115 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v118 = (v116 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v117 = *(void *)v118;
                *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
                *(unsigned char *)(v117 + 9) = *(unsigned char *)(v118 + 9);
                *(unsigned char *)(v117 + 10) = *(unsigned char *)(v118 + 10);
                *(unsigned char *)(v117 + 11) = *(unsigned char *)(v118 + 11);
                *(unsigned char *)(v117 + 12) = *(unsigned char *)(v118 + 12);
                char v119 = (void *)((v116 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v120 = (void *)((v115 + 47) & 0xFFFFFFFFFFFFFFF8);
                void *v120 = *v119;
                unint64_t v121 = ((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v122 = ((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v121 = *(void *)v122;
                *(unsigned char *)(v121 + 8) = *(unsigned char *)(v122 + 8);
                *(unsigned char *)(v121 + 9) = *(unsigned char *)(v122 + 9);
                unint64_t v123 = (void *)((v432 + v121) & v39);
                unint64_t v124 = (const void *)((v432 + v122) & v39);
                unint64_t v446 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v426 + 48);
                if (v446(v124, 1, v442))
                {
                  memcpy(v123, v124, __n);
                }
                else
                {
                  v110((unint64_t)v123, (unint64_t)v124, v442);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v426 + 56))(v123, 0, 1, v442);
                }
                long long v194 = (void *)(((unint64_t)v123 + v433) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v195 = (void *)(((unint64_t)v124 + v433) & 0xFFFFFFFFFFFFFFF8);
                void *v194 = *v195;
                unint64_t v196 = ((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v197 = ((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v198 = *(void *)v197;
                *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
                *(void *)unint64_t v196 = v198;
                uint64_t v199 = (void *)(((unint64_t)v194 + 31) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v200 = (void *)(((unint64_t)v195 + 31) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v199 = *v200;
                unint64_t v201 = (_OWORD *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8);
                long long v202 = (_OWORD *)(((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v201 = *v202;
                unint64_t v203 = ((unint64_t)v201 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v204 = ((unint64_t)v202 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v205 = *(void *)v204;
                *(unsigned char *)(v203 + 8) = *(unsigned char *)(v204 + 8);
                *(void *)unint64_t v203 = v205;
                *(unsigned char *)(v203 + 9) = *(unsigned char *)(v204 + 9);
                unint64_t v206 = (v203 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v207 = (v204 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v198) = *(_DWORD *)v207;
                *(unsigned char *)(v206 + 4) = *(unsigned char *)(v207 + 4);
                *(_DWORD *)unint64_t v206 = v198;
                *(_OWORD *)((v203 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v204 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v208 = v434 + v106;
                long long v209 = *(_OWORD *)(v434 + v107 + 112);
                long long v211 = *(_OWORD *)(v434 + v107 + 64);
                long long v210 = *(_OWORD *)(v434 + v107 + 80);
                *(_OWORD *)(v208 + 96) = *(_OWORD *)(v434 + v107 + 96);
                *(_OWORD *)(v208 + 112) = v209;
                *(_OWORD *)(v208 + 64) = v211;
                *(_OWORD *)(v208 + 80) = v210;
                long long v212 = *(_OWORD *)(v434 + v107 + 176);
                long long v214 = *(_OWORD *)(v434 + v107 + 128);
                long long v213 = *(_OWORD *)(v434 + v107 + 144);
                *(_OWORD *)(v208 + 160) = *(_OWORD *)(v434 + v107 + 160);
                *(_OWORD *)(v208 + 176) = v212;
                *(_OWORD *)(v208 + 128) = v214;
                *(_OWORD *)(v208 + 144) = v213;
                long long v216 = *(_OWORD *)(v434 + v107 + 208);
                long long v215 = *(_OWORD *)(v434 + v107 + 224);
                long long v217 = *(_OWORD *)(v434 + v107 + 192);
                *(void *)(v208 + 240) = *(void *)(v434 + v107 + 240);
                *(_OWORD *)(v208 + 208) = v216;
                *(_OWORD *)(v208 + 224) = v215;
                *(_OWORD *)(v208 + 192) = v217;
                long long v218 = *(_OWORD *)(v434 + v107);
                long long v219 = *(_OWORD *)(v434 + v107 + 16);
                long long v220 = *(_OWORD *)(v434 + v107 + 48);
                *(_OWORD *)(v208 + 32) = *(_OWORD *)(v434 + v107 + 32);
                *(_OWORD *)(v208 + 48) = v220;
                *(_OWORD *)unint64_t v208 = v218;
                *(_OWORD *)(v208 + 16) = v219;
                unint64_t v221 = (_OWORD *)((v434 + v106 + 255) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v222 = (long long *)((v434 + v107 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v223 = *v222;
                *(_OWORD *)((char *)v221 + 9) = *(long long *)((char *)v222 + 9);
                *unint64_t v221 = v223;
                unint64_t v224 = (v434 + v106 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v225 = (v434 + v107 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v226 = *(_OWORD *)v225;
                *(unsigned char *)(v224 + 16) = *(unsigned char *)(v225 + 16);
                *(_OWORD *)unint64_t v224 = v226;
                long long v227 = (void *)((v434 + v106 + 311) & 0xFFFFFFFFFFFFFFF8);
                long long v228 = (void *)((v434 + v107 + 311) & 0xFFFFFFFFFFFFFFF8);
                *long long v227 = *v228;
                *(_OWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v228
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v229 = (unint64_t)&v2[v389] & v388;
                unint64_t v230 = *(void (**)(unint64_t, unint64_t, uint64_t))(v413 + 32);
                v230(v229, (unint64_t)&a2[v389] & v388, v414);
                unint64_t v443 = (unint64_t)&a2[v389] & v388;
                unint64_t v231 = (v409 + v443) & v407;
                v230((v409 + v229) & v407, v231, v414);
                unint64_t v232 = (v410 + ((v409 + v229) & v407)) & v408;
                unint64_t v233 = (v410 + v231) & v408;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v415 + 32))(v232, v233, v417);
                unint64_t v234 = (void *)((v411 + v232) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v235 = (void *)((v411 + v233) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v234 = *v235;
                unint64_t v236 = ((unint64_t)v234 + v412) & v422;
                unint64_t v237 = ((unint64_t)v235 + v412) & v422;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v419 + 32))(v236, v237, v420);
                long long v238 = (void *)((v416 + v236) & 0xFFFFFFFFFFFFFFF8);
                long long v239 = (void *)((v416 + v237) & 0xFFFFFFFFFFFFFFF8);
                void *v238 = *v239;
                *(_OWORD *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v239
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v232 + v418) = *(_OWORD *)(v233 + v418);
                unint64_t v240 = (v448 + v232 + v418) & v438;
                unint64_t v241 = (v448 + v233 + v418) & v438;
                *(unsigned char *)unint64_t v240 = *(unsigned char *)v241;
                uint64_t v242 = v240 | 4;
                int v243 = *(_DWORD *)(v241 | 4);
                *(unsigned char *)(v242 + 4) = *(unsigned char *)((v241 | 4) + 4);
                *(_DWORD *)uint64_t v242 = v243;
                *(_WORD *)(v240 + 10) = *(_WORD *)(v241 + 0xA);
                v110((v439 + v240) & v39, (v439 + v241) & v39, v111);
                unint64_t v244 = (v435 + ((v439 + v240) & v39)) & v39;
                unint64_t v245 = (v435 + ((v439 + v241) & v39)) & v39;
                v110(v244, v245, v111);
                long long v246 = (unsigned char *)(v244 + v406);
                unsigned char *v246 = *(unsigned char *)(v245 + v406);
                v246[1] = *(unsigned char *)(v245 + v406 + 1);
                v246[2] = *(unsigned char *)(v245 + v406 + 2);
                v246[3] = *(unsigned char *)(v245 + v406 + 3);
                v246[4] = *(unsigned char *)(v245 + v406 + 4);
                unint64_t v247 = (v244 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v248 = (v245 + v406 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v247 = *(_OWORD *)v248;
                *(unsigned char *)(v247 + 16) = *(unsigned char *)(v248 + 16);
                *(unsigned char *)(v247 + 17) = *(unsigned char *)(v248 + 17);
                *(unsigned char *)(v247 + 18) = *(unsigned char *)(v248 + 18);
                *(unsigned char *)(v247 + 19) = *(unsigned char *)(v248 + 19);
                unint64_t v249 = (v247 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v250 = (v248 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v249 = *(void *)v250;
                *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
                *(unsigned char *)(v249 + 9) = *(unsigned char *)(v250 + 9);
                *(unsigned char *)(v249 + 10) = *(unsigned char *)(v250 + 10);
                *(unsigned char *)(v249 + 11) = *(unsigned char *)(v250 + 11);
                *(unsigned char *)(v249 + 12) = *(unsigned char *)(v250 + 12);
                unint64_t v251 = (void *)((v247 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v252 = (void *)((v248 + 47) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v251 = *v252;
                unint64_t v253 = ((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v254 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v253 = *(void *)v254;
                *(unsigned char *)(v253 + 8) = *(unsigned char *)(v254 + 8);
                *(unsigned char *)(v253 + 9) = *(unsigned char *)(v254 + 9);
                uint64_t v255 = (void *)((v432 + v253) & v39);
                unint64_t v256 = (const void *)((v432 + v254) & v39);
                if (v446(v256, 1, v111))
                {
                  memcpy(v255, v256, __n);
                }
                else
                {
                  v110((unint64_t)v255, (unint64_t)v256, v111);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v426 + 56))(v255, 0, 1, v111);
                }
                uint64_t v2 = (char *)v444;
                char v155 = 0;
                unint64_t v257 = (void *)(((unint64_t)v255 + v433) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v258 = (void *)(((unint64_t)v256 + v433) & 0xFFFFFFFFFFFFFFF8);
                void *v257 = *v258;
                unint64_t v259 = ((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v260 = ((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v261 = *(void *)v260;
                *(unsigned char *)(v259 + 8) = *(unsigned char *)(v260 + 8);
                *(void *)unint64_t v259 = v261;
                size_t v262 = (void *)(((unint64_t)v257 + 31) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v263 = (void *)(((unint64_t)v258 + 31) & 0xFFFFFFFFFFFFFFF8);
                void *v262 = *v263;
                uint64_t v264 = (_OWORD *)(((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v265 = (_OWORD *)(((unint64_t)v263 + 15) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v264 = *v265;
                unint64_t v266 = ((unint64_t)v264 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v267 = ((unint64_t)v265 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v268 = *(void *)v267;
                *(unsigned char *)(v266 + 8) = *(unsigned char *)(v267 + 8);
                *(void *)unint64_t v266 = v268;
                *(unsigned char *)(v266 + 9) = *(unsigned char *)(v267 + 9);
                unint64_t v269 = (v266 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v270 = (v267 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v261) = *(_DWORD *)v270;
                *(unsigned char *)(v269 + 4) = *(unsigned char *)(v270 + 4);
                *(_DWORD *)unint64_t v269 = v261;
                *(_OWORD *)((v266 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v267 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v271 = v240 + v434;
                long long v272 = *(_OWORD *)(v241 + v434 + 112);
                long long v274 = *(_OWORD *)(v241 + v434 + 64);
                long long v273 = *(_OWORD *)(v241 + v434 + 80);
                *(_OWORD *)(v271 + 96) = *(_OWORD *)(v241 + v434 + 96);
                *(_OWORD *)(v271 + 112) = v272;
                *(_OWORD *)(v271 + 64) = v274;
                *(_OWORD *)(v271 + 80) = v273;
                long long v275 = *(_OWORD *)(v241 + v434 + 176);
                long long v277 = *(_OWORD *)(v241 + v434 + 128);
                long long v276 = *(_OWORD *)(v241 + v434 + 144);
                *(_OWORD *)(v271 + 160) = *(_OWORD *)(v241 + v434 + 160);
                *(_OWORD *)(v271 + 176) = v275;
                *(_OWORD *)(v271 + 128) = v277;
                *(_OWORD *)(v271 + 144) = v276;
                long long v279 = *(_OWORD *)(v241 + v434 + 208);
                long long v278 = *(_OWORD *)(v241 + v434 + 224);
                long long v280 = *(_OWORD *)(v241 + v434 + 192);
                *(void *)(v271 + 240) = *(void *)(v241 + v434 + 240);
                *(_OWORD *)(v271 + 208) = v279;
                *(_OWORD *)(v271 + 224) = v278;
                *(_OWORD *)(v271 + 192) = v280;
                long long v281 = *(_OWORD *)(v241 + v434);
                long long v282 = *(_OWORD *)(v241 + v434 + 16);
                long long v283 = *(_OWORD *)(v241 + v434 + 48);
                *(_OWORD *)(v271 + 32) = *(_OWORD *)(v241 + v434 + 32);
                *(_OWORD *)(v271 + 48) = v283;
                *(_OWORD *)unint64_t v271 = v281;
                *(_OWORD *)(v271 + 16) = v282;
                unint64_t v284 = (_OWORD *)((v240 + v434 + 255) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v285 = (long long *)((v241 + v434 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v286 = *v285;
                *(_OWORD *)((char *)v284 + 9) = *(long long *)((char *)v285 + 9);
                _OWORD *v284 = v286;
                unint64_t v287 = (v240 + v434 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v288 = (v241 + v434 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v289 = *(_OWORD *)v288;
                *(unsigned char *)(v287 + 16) = *(unsigned char *)(v288 + 16);
                *(_OWORD *)unint64_t v287 = v289;
                unint64_t v290 = (void *)((v240 + v434 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v291 = (void *)((v241 + v434 + 311) & 0xFFFFFFFFFFFFFFF8);
                void *v290 = *v291;
                *(_OWORD *)(((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v291
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v292 = (void *)((v229 + v382) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v293 = (void *)((v443 + v382) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v292 = *v293;
                *(_OWORD *)(((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v293
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v34 = v394;
                goto LABEL_149;
            }
          }
          unint64_t v66 = (v439 + ((v448 + v294) & v438)) & v39;
          if (v427 <= 0x7FFFFFFD)
          {
            unint64_t v299 = *(void *)(((v405 + ((v435 + v66) & v39)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_138:
            if (v299 >= 0xFFFFFFFF) {
              LODWORD(v299) = -1;
            }
            if ((v299 + 1) < 2) {
              goto LABEL_58;
            }
            goto LABEL_69;
          }
          unint64_t v65 = *(uint64_t (**)(unint64_t))(v426 + 48);
        }
LABEL_56:
        int v67 = v65(v66);
        unint64_t v64 = ((unint64_t)v444 + v386) & v384;
        if (v67) {
          goto LABEL_69;
        }
        goto LABEL_57;
      case 2u:
        uint64_t v393 = ~v18;
        unint64_t v381 = v27 + 16;
        unint64_t v80 = *(void (**)(_DWORD *, uint64_t))(v413 + 8);
        v80((char *)v444, v414);
        v80((_DWORD *)(((unint64_t)v444 + v409) & v407), v414);
        unint64_t v81 = (v410 + (((unint64_t)v444 + v409) & v407)) & v408;
        (*(void (**)(unint64_t, uint64_t))(v415 + 8))(v81, v417);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v419 + 8))((v412 + ((v411 + v81) & 0xFFFFFFFFFFFFFFF8)) & v422, v420);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v82 = (v448 + v418 + v81) & v438;
        unint64_t v83 = (v439 + v82) & v39;
        uint64_t v84 = v39;
        uint64_t v85 = *(void (**)(unint64_t, uint64_t))(v426 + 8);
        v85(v83, v442);
        unint64_t v86 = (v435 + v83) & v84;
        v85(v86, v442);
        swift_bridgeObjectRelease();
        uint64_t v87 = v84;
        unint64_t v88 = (v432
             + ((((((v405 + v86) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v84;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v426 + 48))(v88, 1, v442)) {
          v85(v88, v442);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v89 = (uint64_t *)((((((v433 + v88) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v90 = v89[1];
        if ((v90 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v89, v90);
        }
        swift_bridgeObjectRelease();
        unint64_t v91 = v82 + v434;
        LODWORD(v92) = -1;
        if (*(void *)(v91 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v92 = *(void *)(v91 + 16);
        }
        uint64_t v39 = v87;
        unint64_t v40 = v381;
        uint64_t v41 = AssociatedTypeWitness;
        uint64_t v25 = v440;
        uint64_t v38 = v393;
        uint64_t v36 = v34 & 0xFFFFFFF8;
        if ((int)v92 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v91 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v91 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v91 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_81;
      case 3u:
        goto LABEL_81;
      default:
        uint64_t v42 = *(void (**)(_DWORD *, uint64_t))(v440 + 8);
        v42((char *)v444, AssociatedTypeWitness);
        uint64_t v391 = v38;
        v42((_DWORD *)(((unint64_t)v444 + v425) & v38), AssociatedTypeWitness);
        unint64_t v43 = ((((unint64_t)v444 + v425) & v38) + v430 + v445) & v424;
        (*(void (**)(unint64_t, uint64_t))(v441 + 8))(v43, v403);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v436 + 8))((v400 + ((v402 + v43) & 0xFFFFFFFFFFFFFFF8)) & v399, v401);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v44 = (v448 + v404 + v43) & v438;
        unint64_t v45 = (v439 + v44) & v39;
        uint64_t v46 = *(void (**)(unint64_t, uint64_t))(v426 + 8);
        v46(v45, v442);
        unint64_t v47 = (v435 + v45) & v39;
        v46(v47, v442);
        swift_bridgeObjectRelease();
        unint64_t v48 = (v432
             + ((((((v405 + v47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v39;
        uint64_t v380 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v426 + 48);
        if (!v380(v48, 1, v442)) {
          v46(v48, v442);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v49 = (uint64_t *)((((((v433 + v48) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v50 = v49[1];
        if ((v50 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v49, v50);
        }
        swift_bridgeObjectRelease();
        unint64_t v51 = v434 + v44;
        LODWORD(v52) = -1;
        if (*(void *)(v51 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v52 = *(void *)(v51 + 16);
        }
        if ((int)v52 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v51 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v53 = *(void (**)(unint64_t, uint64_t))(v413 + 8);
        v53(((unint64_t)v444 + v389) & v388, v414);
        unint64_t v54 = (v409 + (((unint64_t)v444 + v389) & v388)) & v407;
        v53(v54, v414);
        unint64_t v55 = (v410 + v54) & v408;
        (*(void (**)(unint64_t, uint64_t))(v415 + 8))(v55, v417);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v419 + 8))((v412 + ((v411 + v55) & 0xFFFFFFFFFFFFFFF8)) & v422, v420);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v56 = (v448 + v55 + v418) & v438;
        v46((v439 + v56) & v39, v442);
        unint64_t v57 = (v435 + ((v439 + v56) & v39)) & v39;
        v46(v57, v442);
        swift_bridgeObjectRelease();
        unint64_t v58 = (v432
             + ((((((v405 + v57) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v39;
        if (!v380(v58, 1, v442)) {
          v46(v58, v442);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t *)((((((v433 + v58) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v60 = v59[1];
        uint64_t v36 = v34 & 0xFFFFFFF8;
        if ((v60 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v59, v60);
        }
        swift_bridgeObjectRelease();
        unint64_t v61 = v56 + v434;
        LODWORD(v62) = -1;
        if (*(void *)(v61 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v62 = *(void *)(v61 + 16);
        }
        uint64_t v2 = (char *)v444;
        uint64_t v38 = v391;
        uint64_t v41 = AssociatedTypeWitness;
        if ((int)v62 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v61 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v25 = v440;
        goto LABEL_81;
    }
  }
  return v2;
}

uint64_t sub_100602AB8(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v39 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v40 = *(void *)(v2 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v37 = v4 | v6 | 7;
  unint64_t v7 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  unint64_t v35 = *(_DWORD *)(v8 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = (((((v40 + v39) & ~v39) + v40 + v37) & ~v37) + v9 + 16 + v7 + 16) & v35;
  uint64_t v10 = *(void *)(v8 + 64);
  int v34 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  LODWORD(v7) = *(_DWORD *)(v13 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = v7 & 0xF8 | v15 | 7;
  unint64_t v17 = v12 | v9 | v16;
  unint64_t v18 = (((((*(void *)(v11 + 64) + v12) & ~v12) + *(void *)(v11 + 64) + v16) & ~v16)
       + v9
       + 16
       + ((((*(void *)(v14 + 64) + ((v15 + ((*(void *)(v13 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v35;
  if (v34) {
    uint64_t v19 = v10;
  }
  else {
    uint64_t v19 = v10 + 1;
  }
  unint64_t v20 = ((((((((((v19
                + ((v9
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v9)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v21 = ((((v20 + v36) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v22 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((v21 + (((v37 | v39 | v9) + v40) & ~(v37 | v39 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v23 <= ((((((v21 + v17) & ~v17) + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    unint64_t v23 = ((((((v21 + v17) & ~v17) + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  unint64_t v24 = ((v22 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= v23) {
    unint64_t v24 = v23;
  }
  if (v24 <= 0x10) {
    unint64_t v24 = 16;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_30;
  }
  uint64_t v25 = v24 | 1;
  char v26 = 8 * (v24 | 1);
  if ((v24 | 1) <= 3)
  {
    unsigned int v29 = (a2 + ~(-1 << v26) - 252) >> v26;
    if (v29 > 0xFFFE)
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (v29 > 0xFE)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (!v29)
    {
LABEL_30:
      unsigned int v32 = *((unsigned __int8 *)a1 + v24);
      if (v32 >= 4) {
        return (v32 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((unsigned char *)a1 + v25)) {
    goto LABEL_30;
  }
LABEL_21:
  int v30 = (v27 - 1) << v26;
  if (v25 > 3)
  {
    int v30 = 0;
    LODWORD(v25) = 4;
  }
  switch((int)v25)
  {
    case 2:
      int v31 = *a1;
      break;
    case 3:
      int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v31 = *(_DWORD *)a1;
      break;
    default:
      int v31 = *(unsigned __int8 *)a1;
      break;
  }
  return (v31 | v30) + 253;
}

void sub_1006030B8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v38 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v39 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v36 = v5 | v7 | 7;
  unint64_t v8 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unint64_t v35 = *(_DWORD *)(v9 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v9 + 64);
  int v34 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v15 & 0xF8 | v17 | 7;
  uint64_t v19 = v13 | v10 | v18;
  unint64_t v20 = (((((*(void *)(v12 + 64) + v13) & ~v13) + *(void *)(v12 + 64) + v18) & ~v18)
       + v10
       + 16
       + ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v35;
  if (v34) {
    uint64_t v21 = v11;
  }
  else {
    uint64_t v21 = v11 + 1;
  }
  unint64_t v22 = ((((((((((v21
                + ((v10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v10)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v23 = ((((v22 + ((((((v39 + v38) & ~v38) + v39 + v36) & ~v36) + v10 + 16 + v8 + 16) & v35)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((v23 + (((v36 | v38 | v10) + v39) & ~(v36 | v38 | v10))) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v25 <= ((((((v23 + v19) & ~v19) + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    unint64_t v25 = ((((((v23 + v19) & ~v19) + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  unint64_t v26 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v26 <= v25) {
    unint64_t v26 = v25;
  }
  if (v26 <= 0x10) {
    unint64_t v26 = 16;
  }
  size_t v27 = v26 | 1;
  if (a3 < 0xFD)
  {
    int v29 = 0;
    unint64_t v28 = a1;
  }
  else
  {
    unint64_t v28 = a1;
    if (v27 <= 3)
    {
      unsigned int v32 = (a3 + ~(-1 << (8 * v27)) - 252) >> (8 * v27);
      if (v32 > 0xFFFE)
      {
        int v29 = 4;
      }
      else if (v32 >= 0xFF)
      {
        int v29 = 2;
      }
      else
      {
        int v29 = v32 != 0;
      }
    }
    else
    {
      int v29 = 1;
    }
  }
  if (a2 > 0xFC)
  {
    unsigned int v30 = a2 - 253;
    if (v27 < 4)
    {
      int v31 = (v30 >> (8 * v27)) + 1;
      int v33 = v30 & ~(-1 << (8 * v27));
      bzero(v28, v27);
      if (v27 == 1)
      {
        *unint64_t v28 = v33;
      }
      else
      {
        *(_WORD *)unint64_t v28 = v33;
        v28[2] = BYTE2(v33);
      }
    }
    else
    {
      bzero(v28, v26 | 1);
      *(_DWORD *)unint64_t v28 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        v28[v27] = v31;
        break;
      case 2:
        *(_WORD *)&v28[v27] = v31;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x100603724);
      case 4:
        *(_DWORD *)&v28[v27] = v31;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v29)
    {
      case 1:
        v28[v27] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&v28[v27] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&v28[v27] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          v28[v26] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10060374C(_DWORD *a1)
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v28 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v29 = *(void *)(v1 + 64);
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v27 = v3 | v5 | 7;
  unint64_t v6 = (((*(void *)(v4 + 64) + ((v5 + ((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  unint64_t v26 = *(_DWORD *)(v7 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v10 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  unint64_t v11 = ((((((((((v10
                + ((v8
                  + ((((((v9 + ((v9 + v8 + ((v8 + 12) & ~v8)) & ~v8) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v8)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v25 = ((((v11 + ((((((v29 + v28) & ~v28) + v29 + v27) & ~v27) + v8 + 16 + v6 + 16) & v26)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v15 | v17 | 7;
  unint64_t v19 = (v11
       + ((((((*(void *)(v12 + 64) + v13) & ~v13) + *(void *)(v12 + 64) + v18) & ~v18)
         + v8
         + 16
         + ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & v26)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((((((v25 + (v13 | v8 | v18)) & ~(v13 | v8 | v18)) + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (((v25 + (((v27 | v28 | v8) + v29) & ~(v27 | v28 | v8))) & 0xFFFFFFFFFFFFFFF8) + 24 > v20) {
    unint64_t v20 = ((v25 + (((v27 | v28 | v8) + v29) & ~(v27 | v28 | v8))) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v21 = ((v19 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 0x10) {
    unint64_t v21 = 16;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v21);
  uint64_t v23 = v21 & 0xFFFFFFF8;
  if (result >= 4 && v23 != 0) {
    return (*a1 + 4);
  }
  return result;
}

void sub_100603C50(_DWORD *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v28 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v29 = *(void *)(v2 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v27 = v4 | v6 | 7;
  unint64_t v7 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  unint64_t v26 = *(_DWORD *)(v8 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = (((((v29 + v28) & ~v28) + v29 + v27) & ~v27) + v9 + 16 + v7 + 16) & v26;
  uint64_t v11 = *(void *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v12 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v12 = v11 + 1;
  }
  unint64_t v13 = ((((((((((v12
                + ((v9
                  + ((((((v11 + ((v11 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v9)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v25 = ((((v13 + v10) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = v17 | v19 | 7;
  unint64_t v21 = (v13
       + ((((((*(void *)(v14 + 64) + v15) & ~v15) + *(void *)(v14 + 64) + v20) & ~v20)
         + v9
         + 16
         + ((((*(void *)(v18 + 64) + ((v19 + ((*(void *)(v16 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & v26)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((((((v25 + (v15 | v9 | v20)) & ~(v15 | v9 | v20)) + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (((v25 + (((v27 | v28 | v9) + v29) & ~(v27 | v28 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24 > v22) {
    unint64_t v22 = ((v25 + (((v27 | v28 | v9) + v29) & ~(v27 | v28 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v23 = ((v21 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= v22) {
    unint64_t v23 = v22;
  }
  if (v23 <= 0x10) {
    size_t v24 = 16;
  }
  else {
    size_t v24 = v23;
  }
  if (a2 > 3)
  {
    *((unsigned char *)a1 + v24) = 4;
    bzero(a1, v24);
    *a1 = a2 - 4;
  }
  else
  {
    *((unsigned char *)a1 + v24) = a2;
  }
}

uint64_t type metadata accessor for ItemChange()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100604180(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v52 = (char *)&v49 - v5;
  uint64_t v6 = type metadata accessor for SnapshotItem();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v51 = (char *)&v49 - v10;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16))(v16, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v49 - 32, "  isRecursive reason ");
      uint64_t v55 = AssociatedTypeWitness;
      uint64_t v49 = v11;
      uint64_t v56 = sub_10096C890();
      unint64_t v57 = (ValueMetadata *)&type metadata for Bool;
      unint64_t v58 = &type metadata for String;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      int v31 = *((unsigned __int8 *)v16 + TupleTypeMetadata[16]);
      unsigned int v32 = (uint64_t *)((char *)v16 + TupleTypeMetadata[20]);
      int v33 = (void *)v32[1];
      uint64_t v54 = *v32;
      int v34 = v52;
      uint64_t v35 = v53;
      (*(void (**)(char *, uint64_t *, uint64_t))(v53 + 32))(v52, v16, AssociatedTypeWitness);
      uint64_t v55 = 0;
      uint64_t v56 = 0xE000000000000000;
      sub_10096CBD0(20);
      v67._countAndFlagsBits = 0x286574656C6564;
      v67._object = (void *)0xE700000000000000;
      sub_10096BDC0(v67);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      if (v31) {
        v36._countAndFlagsBits = 0x6973727563657220;
      }
      else {
        v36._countAndFlagsBits = 0;
      }
      if (v31) {
        uint64_t v37 = (void *)0xEA00000000006576;
      }
      else {
        uint64_t v37 = (void *)0xE000000000000000;
      }
      uint64_t v38 = (char *)v16 + TupleTypeMetadata[12];
      v36._object = v37;
      sub_10096BDC0(v36);
      swift_bridgeObjectRelease();
      v68._countAndFlagsBits = 0x3A796877202CLL;
      v68._object = (void *)0xE600000000000000;
      sub_10096BDC0(v68);
      v69._countAndFlagsBits = v54;
      v69._object = v33;
      sub_10096BDC0(v69);
      swift_bridgeObjectRelease();
      v70._countAndFlagsBits = 41;
      v70._object = (void *)0xE100000000000000;
      sub_10096BDC0(v70);
      uint64_t v29 = v55;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v34, AssociatedTypeWitness);
      uint64_t v39 = sub_10096C890();
      (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      break;
    case 2:
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      int v41 = *((unsigned __int8 *)v16 + *(int *)(TupleTypeMetadata3 + 48));
      uint64_t v42 = (uint64_t *)((char *)v16 + *(int *)(TupleTypeMetadata3 + 64));
      uint64_t v44 = *v42;
      unint64_t v43 = (void *)v42[1];
      uint64_t v45 = v54;
      (*(void (**)(char *, uint64_t *, uint64_t))(v54 + 32))(v9, v16, v6);
      uint64_t v55 = 0;
      uint64_t v56 = 0xE000000000000000;
      v59._countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      if (v41 == 1)
      {
        sub_10096CBD0(38);
        v71._countAndFlagsBits = 0x28657461657263;
        v71._object = (void *)0xE700000000000000;
        sub_10096BDC0(v71);
        swift_getWitnessTable();
        sub_10096D270();
        v46._object = (void *)0x80000001009ADC80;
        v46._countAndFlagsBits = 0xD00000000000001ALL;
      }
      else
      {
        sub_10096CBD0(18);
        v74._countAndFlagsBits = 0x28657461657263;
        v74._object = (void *)0xE700000000000000;
        sub_10096BDC0(v74);
        swift_getWitnessTable();
        sub_10096D270();
        v46._countAndFlagsBits = 0x3A796877202CLL;
        v46._object = (void *)0xE600000000000000;
      }
      sub_10096BDC0(v46);
      v75._countAndFlagsBits = v44;
      v75._object = v43;
      sub_10096BDC0(v75);
      swift_bridgeObjectRelease();
      v76._countAndFlagsBits = 41;
      v76._object = (void *)0xE100000000000000;
      sub_10096BDC0(v76);
      sub_10096BDC0(v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v6);
      goto LABEL_15;
    case 3:
      v72._countAndFlagsBits = *v16;
      unint64_t v47 = (void *)v16[1];
      uint64_t v55 = 0x79687728656E6F6ELL;
      uint64_t v56 = 0xE90000000000003ALL;
      v72._object = v47;
      sub_10096BDC0(v72);
      swift_bridgeObjectRelease();
      v73._countAndFlagsBits = 41;
      v73._object = (void *)0xE100000000000000;
      sub_10096BDC0(v73);
LABEL_15:
      uint64_t v29 = v55;
      break;
    default:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v49 - 48, "oldItem newItem diffs reason ");
      uint64_t v19 = v11;
      uint64_t v55 = v11;
      uint64_t v56 = v6;
      uint64_t v20 = v6;
      unint64_t v57 = &type metadata for Fields;
      unint64_t v58 = &type metadata for String;
      unint64_t v21 = (int *)swift_getTupleTypeMetadata();
      unint64_t v22 = (char *)v16 + v21[12];
      uint64_t v23 = *(uint64_t *)((char *)v16 + v21[16]);
      size_t v24 = (uint64_t *)((char *)v16 + v21[20]);
      unint64_t v25 = (void *)v24[1];
      uint64_t v53 = *v24;
      uint64_t v26 = v50;
      (*(void (**)(char *, uint64_t *, uint64_t))(v50 + 32))(v14, v16, v19);
      uint64_t v27 = v54;
      uint64_t v28 = v51;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v22, v20);
      uint64_t v55 = 0;
      uint64_t v56 = 0xE000000000000000;
      sub_10096CBD0(30);
      v60._countAndFlagsBits = 0x28657461647075;
      v60._object = (void *)0xE700000000000000;
      sub_10096BDC0(v60);
      swift_getWitnessTable();
      sub_10096D270();
      v61._countAndFlagsBits = 540945696;
      v61._object = (void *)0xE400000000000000;
      sub_10096BDC0(v61);
      swift_getWitnessTable();
      sub_10096D270();
      v62._countAndFlagsBits = 979771436;
      v62._object = (void *)0xE400000000000000;
      sub_10096BDC0(v62);
      v63._countAndFlagsBits = sub_1006096B0(v23);
      sub_10096BDC0(v63);
      swift_bridgeObjectRelease();
      v64._countAndFlagsBits = 0x3A796877202CLL;
      v64._object = (void *)0xE600000000000000;
      sub_10096BDC0(v64);
      v65._countAndFlagsBits = v53;
      v65._object = v25;
      sub_10096BDC0(v65);
      swift_bridgeObjectRelease();
      v66._countAndFlagsBits = 41;
      v66._object = (void *)0xE100000000000000;
      sub_10096BDC0(v66);
      uint64_t v29 = v55;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v20);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v19);
      break;
  }
  return v29;
}

unint64_t sub_100604A98(unsigned __int8 a1)
{
  int v1 = a1 - 28;
  unint64_t result = 25705;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x695F746E65726170;
      break;
    case 2:
      unint64_t result = 0x656D616E656C6966;
      break;
    case 3:
      unint64_t result = 0x656C69665F736676;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x5F746E65746E6F63;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      v3._countAndFlagsBits = sub_10085B7F4(105);
      sub_10096BDC0(v3);
      swift_bridgeObjectRelease();
      unint64_t result = 0x617461646174656DLL;
      break;
  }
  return result;
}

void sub_100604C00(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 28:
      Swift::UInt v2 = 0;
      goto LABEL_12;
    case 29:
      Swift::UInt v2 = 1;
      goto LABEL_12;
    case 30:
      Swift::UInt v2 = 2;
      goto LABEL_12;
    case 31:
      Swift::UInt v2 = 4;
      goto LABEL_12;
    case 32:
      Swift::UInt v2 = 5;
      goto LABEL_12;
    case 33:
      Swift::UInt v2 = 6;
      goto LABEL_12;
    case 34:
      Swift::UInt v2 = 7;
LABEL_12:
      sub_10096D4C0(v2);
      break;
    default:
      sub_10096D4C0(3uLL);
      sub_10085B7F4(a2);
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
  }
}

Swift::Int sub_100604CF0(char a1)
{
  sub_10096D4B0();
  switch(a1)
  {
    case 28:
      Swift::UInt v2 = 0;
      goto LABEL_10;
    case 29:
      Swift::UInt v2 = 1;
      goto LABEL_10;
    case 30:
      Swift::UInt v2 = 2;
      goto LABEL_10;
    case 31:
      Swift::UInt v2 = 4;
      goto LABEL_10;
    case 32:
      Swift::UInt v2 = 5;
      goto LABEL_10;
    case 33:
      Swift::UInt v2 = 6;
      goto LABEL_10;
    case 34:
      Swift::UInt v2 = 7;
LABEL_10:
      sub_10096D4C0(v2);
      break;
    default:
      sub_10096D4C0(3uLL);
      sub_10085B7F4(a1);
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
  }
  return sub_10096D500();
}

Swift::Int sub_100604E04()
{
  return sub_100604CF0(*v0);
}

void sub_100604E0C(uint64_t a1)
{
  sub_100604C00(a1, *v1);
}

Swift::Int sub_100604E14()
{
  int v1 = *v0;
  sub_10096D4B0();
  switch(v1)
  {
    case 28:
      Swift::UInt v2 = 0;
      goto LABEL_10;
    case 29:
      Swift::UInt v2 = 1;
      goto LABEL_10;
    case 30:
      Swift::UInt v2 = 2;
      goto LABEL_10;
    case 31:
      Swift::UInt v2 = 4;
      goto LABEL_10;
    case 32:
      Swift::UInt v2 = 5;
      goto LABEL_10;
    case 33:
      Swift::UInt v2 = 6;
      goto LABEL_10;
    case 34:
      Swift::UInt v2 = 7;
LABEL_10:
      sub_10096D4C0(v2);
      break;
    default:
      sub_10096D4C0(3uLL);
      sub_10085B7F4(v1);
      sub_10096BD50();
      swift_bridgeObjectRelease();
      break;
  }
  return sub_10096D500();
}

unint64_t sub_100604F20()
{
  return sub_100604A98(*v0);
}

uint64_t sub_100604F28(char *a1, char *a2)
{
  return sub_100606994(*a1, *a2);
}

uint64_t sub_100604F34()
{
  sub_1003FDA1C();
  uint64_t v0 = sub_10002B7CC(qword_100AD4F80);
  unint64_t v1 = sub_100606AFC();
  sub_1003FC0AC((void (*)(char *, char *))sub_100405B34, 0, v0, (uint64_t)&type metadata for SnapshotItemSQLFields, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_10096C100();
  swift_bridgeObjectRelease();
  uint64_t v6 = v3;
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype())
  {
    sub_10002B7CC(&qword_100AD4F78);
    swift_getWitnessTable();
    sub_10096C170();
  }
  else
  {
    sub_10002B7CC(&qword_100AD4F78);
    sub_10096C180();
  }
  type metadata accessor for VFSItem(0);
  if (!swift_dynamicCastMetatype())
  {
    swift_bridgeObjectRetain();
    sub_10002B7CC(&qword_100AD4F78);
    swift_getWitnessTable();
    uint64_t v4 = sub_10096CCA0();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion();
  if (!swift_dynamicCastMetatype())
  {
    sub_10002B7CC(&qword_100AD4F78);
    sub_10096C180();
  }
  return v6;
}

uint64_t sub_1006051E8(unsigned __int8 *a1)
{
  int v1 = *a1;
  if ((v1 - 28) > 6)
  {
    if (sub_10085B7F4(v1) == 0x756F635F6B6E696CLL && v3 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      char v2 = 0;
    }
    else
    {
      char v5 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      char v2 = v5 ^ 1;
    }
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t sub_1006052A0(char a1, void *a2, int *a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v11 = (char *)&v29 - v10;
  switch(a1)
  {
    case 28:
    case 29:
      swift_getAssociatedTypeWitness();
      uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 32);
      uint64_t v14 = swift_checkMetadataState();
      return v13(a2, v14, v12);
    case 30:
      uint64_t v17 = (uint64_t *)(v3 + a3[11]);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      unsigned int v32 = &type metadata for String;
      uint64_t v29 = v18;
      uint64_t v30 = v19;
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_1003AC444((uint64_t)&v29);
      uint64_t v22 = v21;
      sub_10017D1A4((uint64_t)&v29);
      if (!v22)
      {
        sub_10096CE20();
        __break(1u);
        JUMPOUT(0x1006056E4);
      }
      swift_bridgeObjectRelease();
      return v20;
    case 31:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3 + a3[10], AssociatedTypeWitness);
      swift_dynamicCast();
      Class isa = sub_10096D540().super.super.isa;
      id v16 = [a2 bindObjectParameter:isa];

      goto LABEL_7;
    case 32:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3 + a3[10], AssociatedTypeWitness);
      swift_dynamicCast();
      id v16 = [a2 bindUnsignedIntegerParameter:v30];
LABEL_7:
      uint64_t v20 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      return v20;
    case 33:
      size_t v24 = *(uint64_t (**)(void *, uint64_t))(*(void *)(swift_getAssociatedConformanceWitness() + 32) + 32);
      return v24(a2, AssociatedTypeWitness);
    case 34:
      uint64_t v25 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v27 = swift_getAssociatedConformanceWitness();
      uint64_t v29 = AssociatedTypeWitness;
      uint64_t v30 = v25;
      uint64_t v31 = AssociatedConformanceWitness;
      unsigned int v32 = (void *)v27;
      type metadata accessor for FileItemVersion();
      return (*(uint64_t (**)(void *, uint64_t))(*(void *)(v27 + 32) + 32))(a2, v25);
    default:
      uint64_t v20 = v3 + a3[12];
      uint64_t v15 = sub_100859E30(a1, a2);
      if (v4) {
        return v20;
      }
      return v15;
  }
}

void sub_100605700(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  switch(a2)
  {
    case 28:
    case 29:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      goto LABEL_9;
    case 30:
      a4[3] = (uint64_t)&type metadata for Filename;
      id v11 = [a1 stringAtIndex:a3];
      uint64_t v12 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v14 = v13;

      *a4 = v12;
      a4[1] = v14;
      break;
    case 31:
      uint64_t v15 = (uint64_t)[a1 longLongAtIndex:a3];
      a4[3] = (uint64_t)&type metadata for UInt64;
      if (v15 < 0)
      {
        sub_10096CE10();
        __break(1u);
        JUMPOUT(0x1006059A4);
      }
      *a4 = v15;
      break;
    case 32:
      unsigned int v10 = [a1 unsignedIntAtIndex:a3];
      a4[3] = (uint64_t)&type metadata for UInt32;
      *(_DWORD *)a4 = v10;
      break;
    case 33:
    case 34:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
LABEL_9:
      id v16 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v9 + 16);
      a4[3] = AssociatedTypeWitness;
      sub_10009C958(a4);
      v16(a1, a3, AssociatedTypeWitness, v9);
      if (v4) {
        sub_10017D150((uint64_t)a4);
      }
      break;
    default:
      sub_10085A524(a2, a1, a3, (uint64_t)a4);
      break;
  }
}

uint64_t sub_1006059C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v123[33] = a1;
  uint64_t v88 = a6;
  uint64_t AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v118 = AssociatedTypeWitness;
  uint64_t v119 = v11;
  uint64_t v92 = swift_getAssociatedConformanceWitness();
  uint64_t v93 = AssociatedConformanceWitness;
  unint64_t v120 = AssociatedConformanceWitness;
  uint64_t v121 = v92;
  uint64_t v13 = type metadata accessor for FileItemVersion();
  uint64_t v90 = *(void *)(v13 - 8);
  uint64_t v91 = v13;
  __chkstk_darwin(v13);
  unint64_t v99 = (char *)v87 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v96 = (uint64_t)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v100 = (uint64_t)v87 - v19;
  __chkstk_darwin(v18);
  uint64_t v107 = (uint64_t)v87 - v20;
  v87[1] = a4;
  uint64_t v89 = a2;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v105 = v15;
  uint64_t v95 = v21;
  uint64_t v106 = type metadata accessor for ItemStateVersion();
  uint64_t v22 = __chkstk_darwin(v106);
  uint64_t v94 = (uint64_t)v87 - v23;
  uint64_t v111 = v11;
  uint64_t v102 = *(void *)(v11 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v103 = (char *)v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v97 = (char *)v87 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v101 = (char *)v87 - v29;
  unint64_t v114 = AssociatedTypeWitness;
  Description = (void (**)(char *, char *, void))AssociatedTypeWitness[-1].Description;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v110 = (char *)v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  int v104 = (char *)v87 - v33;
  __chkstk_darwin(v32);
  uint64_t v108 = (char *)v87 - v34;
  unint64_t v35 = sub_100606B58();
  unint64_t v118 = &_s9SQLFieldsON_3;
  uint64_t v119 = a3;
  unint64_t v120 = v35;
  uint64_t v121 = a5;
  uint64_t v36 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)v87 - v38;
  uint64_t v40 = type metadata accessor for ItemMetadata();
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  unint64_t v43 = (char *)v87 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)v87 - v44;
  uint64_t v113 = a3;
  uint64_t v112 = a5;
  sub_1006FD068((uint64_t)sub_100405B34, 0, a3, (uint64_t)&_s9SQLFieldsON_3, a5, v35, (uint64_t)v39);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = (uint64_t)v115;
  sub_10085ABB8(v36, WitnessTable, (uint64_t)v45);
  if (v47) {
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  }
  unint64_t v115 = v43;
  uint64_t v50 = v110;
  uint64_t v49 = v111;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  uint64_t v51 = (uint64_t)v114;
  uint64_t v52 = swift_dynamicCastMetatype();
  v87[0] = (uint64_t)v45;
  if (v52)
  {
    LOBYTE(v117) = 31;
    uint64_t v54 = v112;
    uint64_t v53 = v113;
    sub_100391750(v113, (uint64_t)&type metadata for UInt64);
    sub_1006FCBE4((uint64_t)&v117, (uint64_t)&type metadata for UInt64, v53, (uint64_t)&type metadata for UInt64, v54);
    uint64_t v55 = v122[0];
    char v116 = 32;
    sub_100391750(v53, (uint64_t)&type metadata for UInt32);
    sub_1006FCBE4((uint64_t)&v116, (uint64_t)&type metadata for UInt32, v53, (uint64_t)&type metadata for UInt32, v54);
    uint64_t v56 = v117;
    uint64_t v57 = (uint64_t)v115;
    sub_10010DA98(v87[0], (uint64_t)v115);
    unint64_t v118 = (ValueMetadata *)sub_100018CB0(v55, v56, v57);
    LODWORD(v119) = v58;
    unint64_t v120 = v59;
    LOBYTE(v121) = v60 & 1;
    Swift::String v61 = v104;
    Swift::String v62 = v114;
    swift_dynamicCast();
    ((void (**)(char *, char *, ValueMetadata *))Description)[4](v108, v61, v62);
  }
  else
  {
    LOBYTE(v118) = 33;
    uint64_t v63 = v112;
    uint64_t v64 = v113;
    uint64_t v65 = sub_100391750(v113, v51);
    sub_1006FCBE4((uint64_t)&v118, v65, v64, v51, v63);
    Description[4](v108, v50, v51);
  }
  uint64_t v66 = v49;
  if (swift_dynamicCastMetatype())
  {
    LOBYTE(v118) = 29;
    uint64_t v67 = v112;
    uint64_t v68 = v113;
    sub_1006FCBE4((uint64_t)&v118, v105, v113, v105, v112);
    LOBYTE(v122[0]) = 30;
    sub_100391750(v68, (uint64_t)&type metadata for Filename);
    sub_1006FCBE4((uint64_t)v122, (uint64_t)&type metadata for Filename, v68, (uint64_t)&type metadata for Filename, v67);
    uint64_t v72 = v105;
    ItemStateVersion.init(parentID:filename:)(v107, (uint64_t)v118, v119, v105, v94);
    Swift::String v73 = v97;
    swift_dynamicCast();
  }
  else
  {
    LOBYTE(v118) = 34;
    uint64_t v69 = v112;
    uint64_t v70 = v113;
    uint64_t v71 = sub_100391750(v113, v49);
    Swift::String v73 = v103;
    sub_1006FCBE4((uint64_t)&v118, v71, v70, v66, v69);
    uint64_t v72 = v105;
  }
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v73, v66);
  LOBYTE(v118) = 28;
  uint64_t v75 = v112;
  uint64_t v74 = v113;
  uint64_t v76 = sub_100391750(v113, v72);
  sub_1006FCBE4((uint64_t)&v118, v76, v74, v72, v75);
  uint64_t v77 = (uint64_t)v99;
  LOBYTE(v118) = 29;
  sub_1006FCBE4((uint64_t)&v118, v76, v113, v72, v75);
  uint64_t v78 = (uint64_t)v104;
  uint64_t v79 = (uint64_t)v114;
  ((void (**)(char *, char *, ValueMetadata *))Description)[2](v104, v108, v114);
  uint64_t v80 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v97, v101, v66);
  sub_1007D03B8(v78, 0, v80, 0, 0, 0, v79, v66, v77);
  LOBYTE(v117) = 30;
  uint64_t v81 = v113;
  sub_100391750(v113, (uint64_t)&type metadata for Filename);
  sub_1006FCBE4((uint64_t)&v117, (uint64_t)&type metadata for Filename, v81, (uint64_t)&type metadata for Filename, v75);
  uint64_t v82 = v122[0];
  uint64_t v83 = v122[1];
  uint64_t v84 = v87[0];
  uint64_t v85 = (uint64_t)v115;
  sub_10010DA98(v87[0], (uint64_t)v115);
  sub_10002C548((uint64_t)&v118);
  sub_10016B800((uint64_t)&v118, (uint64_t)v123);
  double v86 = sub_100609F64(v100, v96, v77, v82, v83, v85, (uint64_t)v123, v88);
  (*(void (**)(char *, uint64_t, double))(v102 + 8))(v101, v66, v86);
  ((void (*)(char *, ValueMetadata *))Description[1])(v108, v114);
  return sub_10010DAFC(v84);
}

uint64_t sub_10060659C(char *a1, void *a2, int *a3)
{
  return sub_1006052A0(*a1, a2, a3);
}

void sub_1006065B8(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
}

uint64_t sub_1006065DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1006059C0(a1, *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3, a5);
}

uint64_t sub_100606600(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100606640()
{
  unint64_t result = qword_100AD8AE0;
  if (!qword_100AD8AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8AE0);
  }
  return result;
}

uint64_t sub_100606694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100604F34();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SnapshotItemSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xDE)
  {
    unsigned int v2 = a2 + 34;
    if (a2 + 34 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 34;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100606774);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 34;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0x1C) {
    unsigned int v8 = v7 - 27;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 8) {
    return v8 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SnapshotItemSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 34;
  if (a3 + 34 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xDE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v7 = ((a2 - 222) >> 8) + 1;
    *uint64_t result = a2 + 34;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10060685CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

uint64_t sub_100606884(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x1C) {
    return v1 - 27;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100606898(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 27;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotItemSQLFields()
{
  return &type metadata for SnapshotItemSQLFields;
}

unint64_t sub_1006068BC()
{
  unint64_t result = qword_100AD8B18;
  if (!qword_100AD8B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8B18);
  }
  return result;
}

unint64_t sub_100606910(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100606940();
  unint64_t result = sub_10058EAC8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100606940()
{
  unint64_t result = qword_100AD8B20;
  if (!qword_100AD8B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8B20);
  }
  return result;
}

uint64_t sub_100606994(char a1, char a2)
{
  switch(a1)
  {
    case 28:
      if (a2 != 28) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 29:
      if (a2 == 29) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 30:
      if (a2 != 30) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 31:
      if (a2 != 31) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 32:
      if (a2 != 32) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 33:
      if (a2 != 33) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 34:
      if (a2 != 34) {
        goto LABEL_15;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if ((a2 - 28) < 7u)
      {
LABEL_15:
        uint64_t result = 0;
      }
      else
      {
        unint64_t v3 = sub_10085B7F4(a1);
        uint64_t v5 = v4;
        if (v3 == sub_10085B7F4(a2) && v5 == v6)
        {
          swift_bridgeObjectRelease_n();
          uint64_t result = 1;
        }
        else
        {
          char v8 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v8 & 1;
        }
      }
      break;
  }
  return result;
}

unint64_t sub_100606AFC()
{
  unint64_t result = qword_100AD8B28;
  if (!qword_100AD8B28)
  {
    sub_100033BE8(qword_100AD4F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8B28);
  }
  return result;
}

unint64_t sub_100606B58()
{
  unint64_t result = qword_100AD8B30[0];
  if (!qword_100AD8B30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD8B30);
  }
  return result;
}

uint64_t sub_100606BAC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100606BF4(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  return FileTree.deinit();
}

uint64_t sub_100606C30(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return FileTree.deinit();
}

unint64_t sub_100606C38(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v2 + 16);
  unint64_t v7 = sub_100615740(a1);
  char v8 = *(uint64_t (**)(unint64_t, unint64_t))(*(void *)v6 + 128);
  swift_retain();
  unint64_t v9 = v7;
  uint64_t v10 = v4;
  uint64_t v11 = v8(v9, a2);
  swift_release();
  if (!v10)
  {
    a2 = sub_100615740(v11);
    swift_retain();
    swift_release();
  }
  return a2;
}

uint64_t sub_100606D80(char a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v1[2];
  if (a1 == 2) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = (a1 & 1) == 0;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(v5);
  if (!v2)
  {
    uint64_t v23 = v6;
    __chkstk_darwin(v6);
    uint64_t v7 = v3[69];
    uint64_t v15 = v3[68];
    uint64_t v16 = v7;
    uint64_t v8 = v3[71];
    uint64_t v17 = v3[70];
    uint64_t v18 = v8;
    type metadata accessor for SchedulableJob();
    uint64_t v9 = sub_10096C1C0();
    uint64_t v19 = v15;
    uint64_t v20 = v7;
    uint64_t v21 = v17;
    uint64_t v22 = v8;
    uint64_t v10 = type metadata accessor for SchedulableJob();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v4 = sub_1003FC0AC((void (*)(char *, char *))sub_100607A2C, (uint64_t)&v14, v9, v10, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v12);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_100606F20(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void))(**(void **)(v4 + 16) + 152))(a1 & 1, a2, a3, a4 & 1);
}

uint64_t sub_100606F6C(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(**(void **)(v3 + 16) + 168))(a1, a2, a3 & 1);
}

uint64_t sub_100606FB4(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(**(void **)(v3 + 16) + 160))(a1, a2, a3 & 1);
}

uint64_t sub_100606FFC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 184))() & 1;
}

uint64_t sub_100607044()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 248))();
}

uint64_t sub_100607088()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 256))();
}

uint64_t sub_1006070D4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 216))() & 1;
}

uint64_t sub_10060711C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 208))() & 1;
}

uint64_t sub_100607164()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 232))() & 1;
}

uint64_t sub_1006071AC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 224))() & 1;
}

uint64_t sub_1006071F4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 272))();
}

uint64_t sub_100607240()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 264))();
}

uint64_t sub_10060728C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 288))() & 1;
}

uint64_t sub_1006072DC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 280))() & 1;
}

uint64_t sub_10060732C(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, BOOL))(**(void **)(v2 + 16) + 240))(a1, (a2 & 1) == 0) & 1;
}

uint64_t sub_10060737C(char a1)
{
  return (*(uint64_t (**)(BOOL))(**(void **)(v1 + 16) + 296))((a1 & 1) == 0) & 1;
}

uint64_t sub_1006073D4()
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 312))();
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_10060742C()
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 304))();
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100607484()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 320))() & 1;
}

uint64_t sub_1006074D4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 328))() & 1;
}

uint64_t sub_100607524()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 344))();
}

uint64_t sub_100607570()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 336))();
}

uint64_t sub_1006075BC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 360))();
}

uint64_t sub_100607608()
{
  return sub_10060766C();
}

uint64_t sub_100607620()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 376))();
}

uint64_t sub_10060766C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 352))();
}

uint64_t sub_1006076B8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 392))();
}

uint64_t sub_100607704()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 384))();
}

uint64_t sub_100607750()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 400))() & 1;
}

uint64_t sub_1006077A0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 408))();
}

uint64_t sub_1006077EC(uint64_t a1, char a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(v2 + 16) + 432))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_10060784C(uint64_t a1, char a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(v2 + 16) + 440))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1006078AC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 456))();
}

uint64_t sub_1006078FC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 448))();
}

uint64_t sub_10060794C(char a1)
{
  return (*(uint64_t (**)(void))(**(void **)(v1 + 16) + 496))(a1 & 1);
}

uint64_t sub_10060799C()
{
  uint64_t v0 = FileTree.deinit();
  swift_release();
  return v0;
}

uint64_t sub_1006079CC()
{
  FileTree.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwappedJobRegistry()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100607A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001EA15C();
  *a1 = result;
  return result;
}

uint64_t sub_100607A68()
{
  v1._countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100607AC8(uint64_t a1)
{
  v3._countAndFlagsBits = sub_1006096B0(a1);
  sub_10096BDC0(v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100607B04(uint64_t a1)
{
  return sub_100607B34(a1, sub_1004ADCE0);
}

uint64_t sub_100607B1C(uint64_t a1)
{
  return sub_100607B34(a1, sub_1004AD7A8);
}

uint64_t sub_100607B34(uint64_t a1, uint64_t (*a2)(void))
{
  v4._countAndFlagsBits = a2();
  sub_10096BDC0(v4);

  return swift_bridgeObjectRelease();
}

BOOL sub_100607B88(uint64_t a1)
{
  return a1 == 0;
}

uint64_t SnapshotItem.description.getter(int *a1)
{
  sub_10016B800(v1 + a1[13], (uint64_t)v48);
  sub_10016B800((uint64_t)v48, (uint64_t)v49);
  if (sub_1000DBD64((uint64_t)v49) == 1)
  {
    uint64_t v30 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  else
  {
    long long v44 = v49[12];
    long long v45 = v49[13];
    long long v46 = v49[14];
    uint64_t v47 = v50;
    long long v40 = v49[8];
    long long v41 = v49[9];
    long long v42 = v49[10];
    long long v43 = v49[11];
    long long v36 = v49[4];
    long long v37 = v49[5];
    long long v38 = v49[6];
    long long v39 = v49[7];
    long long v32 = v49[0];
    long long v33 = v49[1];
    long long v34 = v49[2];
    long long v35 = v49[3];
    v51._countAndFlagsBits = ItemNonSyncableAttributes.description.getter();
    strcpy((char *)v31, " nsattr:");
    BYTE1(v31[1]) = 0;
    WORD1(v31[1]) = 0;
    HIDWORD(v31[1]) = -402653184;
    sub_10096BDC0(v51);
    swift_bridgeObjectRelease();
    uint64_t v30 = v31[0];
    unint64_t v3 = v31[1];
  }
  uint64_t v29 = (void *)v3;
  if (*(unsigned char *)(v1 + a1[14] + 24))
  {
    v28._countAndFlagsBits = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  else
  {
    v52._countAndFlagsBits = sub_100854EE4();
    v31[0] = 0x3A63657220;
    v31[1] = 0xE500000000000000;
    sub_10096BDC0(v52);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 0x3A63657220;
    unint64_t v4 = 0xE500000000000000;
  }
  v28._object = (void *)v4;
  if (*(unsigned char *)(v1 + a1[15] + 16))
  {
    v27._countAndFlagsBits = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  else
  {
    v53._countAndFlagsBits = sub_10085501C();
    v31[0] = 0x3A63657220;
    v31[1] = 0xE500000000000000;
    sub_10096BDC0(v53);
    swift_bridgeObjectRelease();
    v27._countAndFlagsBits = 0x3A63657220;
    unint64_t v5 = 0xE500000000000000;
  }
  v27._object = (void *)v5;
  uint64_t v6 = *(void *)(v1 + a1[16]);
  if (v6)
  {
    strcpy((char *)v31, " unsupported:");
    HIWORD(v31[1]) = -4864;
    v54._countAndFlagsBits = sub_1006096B0(v6);
    sub_10096BDC0(v54);
    swift_bridgeObjectRelease();
    v26._countAndFlagsBits = v31[0];
    unint64_t v7 = v31[1];
  }
  else
  {
    v26._countAndFlagsBits = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  v26._object = (void *)v7;
  uint64_t v8 = (uint64_t *)(v1 + a1[17]);
  uint64_t v9 = *v8;
  unint64_t v10 = (unint64_t)v8[1] >> 62;
  if (!v10)
  {
    uint64_t v11 = 1852270888;
    goto LABEL_17;
  }
  if (v10 == 1)
  {
    uint64_t v11 = 1886221352;
LABEL_17:
    v31[0] = v11 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
    v55._countAndFlagsBits = fpfs_tempfile_pattern_t.description.getter(v9);
    sub_10096BDC0(v55);
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 41;
    v56._object = (void *)0xE100000000000000;
    sub_10096BDC0(v56);
    uint64_t v25 = v31[0];
    unint64_t v12 = 0xE500000000000000;
    goto LABEL_19;
  }
  uint64_t v25 = 0;
  unint64_t v12 = 0xE000000000000000;
LABEL_19:
  uint64_t v24 = (void *)v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  char v14 = FileItem.kind.getter((uint64_t)a1, WitnessTable);
  uint64_t v15 = 47;
  if (v14 != 1) {
    uint64_t v15 = 0;
  }
  uint64_t v23 = v15;
  if (v14 == 1) {
    uint64_t v16 = (void *)0xE100000000000000;
  }
  else {
    uint64_t v16 = (void *)0xE000000000000000;
  }
  sub_10096CBD0(31);
  v57._countAndFlagsBits = 3830588;
  v57._object = (void *)0xE300000000000000;
  sub_10096BDC0(v57);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  v58._countAndFlagsBits = 3829792;
  v58._object = (void *)0xE300000000000000;
  sub_10096BDC0(v58);
  sub_10096D270();
  v59._countAndFlagsBits = 574254624;
  v59._object = (void *)0xE400000000000000;
  sub_10096BDC0(v59);
  swift_bridgeObjectRetain();
  NSString v17 = sub_10096BC00();
  id v18 = objc_msgSend(v17, "fp_obfuscatedFilename");

  uint64_t v19 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v21 = v20;

  v60._countAndFlagsBits = v19;
  v60._object = v21;
  sub_10096BDC0(v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v61._countAndFlagsBits = v23;
  v61._object = v16;
  sub_10096BDC0(v61);
  swift_bridgeObjectRelease();
  v62._countAndFlagsBits = 34;
  v62._object = (void *)0xE100000000000000;
  sub_10096BDC0(v62);
  v63._countAndFlagsBits = v25;
  v63._object = v24;
  sub_10096BDC0(v63);
  swift_bridgeObjectRelease();
  v64._countAndFlagsBits = 32;
  v64._object = (void *)0xE100000000000000;
  sub_10096BDC0(v64);
  v65._countAndFlagsBits = ItemMetadata.description.getter();
  sub_10096BDC0(v65);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v26);
  swift_bridgeObjectRelease();
  v66._countAndFlagsBits = 3831328;
  v66._object = (void *)0xE300000000000000;
  sub_10096BDC0(v66);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getWitnessTable();
  sub_10096D270();
  sub_10096BDC0(v28);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v67._countAndFlagsBits = 62;
  v67._object = (void *)0xE100000000000000;
  sub_10096BDC0(v67);
  swift_bridgeObjectRetain();
  v68._countAndFlagsBits = v30;
  v68._object = v29;
  sub_10096BDC0(v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t SnapshotItem.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  long long v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  long long v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  char v14 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v15 = a4 + v14[13];
  sub_10002C548((uint64_t)v49);
  uint64_t v44 = v15;
  sub_10016B800((uint64_t)v49, v15);
  uint64_t v16 = a4 + v14[14];
  *(void *)uint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = 0;
  *(unsigned char *)(v16 + 24) = 1;
  long long v43 = v14;
  uint64_t v17 = a4 + v14[15];
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  id v18 = *(void (**)(uint64_t, uint64_t))(a3 + 64);
  uint64_t v45 = a4;
  uint64_t v41 = a1;
  v18(a2, a3);
  v18(a2, a3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a4) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v39 = AssociatedTypeWitness;
  v46 += 8;
  v20(v13, AssociatedTypeWitness);
  uint64_t v21 = v41;
  uint64_t v22 = v42;
  (*(void (**)(void))(v47 + 16))();
  long long v40 = v18;
  if (a4)
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v47 + 8);
    v23(v22, a2);
  }
  else
  {
    long long v37 = v20;
    uint64_t v24 = v38;
    v18(a2, a3);
    uint64_t v25 = v39;
    char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v39, AssociatedConformanceWitness);
    v37(v24, v25);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v47 + 8);
    v23(v22, a2);
    if ((v26 & 1) == 0)
    {
      Swift::String v28 = v43;
      uint64_t v27 = v45;
      (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
      goto LABEL_6;
    }
  }
  uint64_t v27 = v45;
  Swift::String v28 = v43;
  v40(a2, a3);
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(a3 + 112))(a2, a3);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  uint64_t v30 = (uint64_t *)(v27 + v28[11]);
  *uint64_t v30 = v29;
  v30[1] = v31;
  (*(void (**)(uint64_t, uint64_t))(a3 + 104))(a2, a3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 120))(v48, a2, a3);
  sub_1003A99F0((uint64_t)v48, v44);
  *(void *)(v27 + v28[16]) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(a2, a3);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 144))(a2, a3);
  uint64_t v34 = v33;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v23)(v21, a2);
  long long v36 = (uint64_t *)(v27 + v28[17]);
  uint64_t *v36 = v32;
  v36[1] = v34;
  return result;
}

unint64_t sub_100608698(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    sub_100021770(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      switch(v3)
      {
        case 1:
          unint64_t v6 = 0xEE00736567616B63;
          unint64_t v5 = 0x61705F7463697665;
          break;
        case 2:
          unint64_t v6 = 0x80000001009A6F60;
          unint64_t v5 = 0xD000000000000015;
          break;
        case 4:
          unint64_t v5 = 0xD00000000000001ALL;
          unint64_t v6 = 0x80000001009A6F40;
          break;
        default:
          goto LABEL_13;
      }
LABEL_14:
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100021770((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v5;
      v9[5] = v6;
      if (!v1)
      {
        sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
        sub_1000A6FD8();
        unint64_t v1 = sub_10096BB50();
        swift_release();
        return v1;
      }
    }
LABEL_13:
    sub_10014D284();
    v11._countAndFlagsBits = sub_10096BEB0();
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    unint64_t v5 = 30768;
    unint64_t v6 = 0xE200000000000000;
    goto LABEL_14;
  }
  return v1;
}

uint64_t sub_100608894(unint64_t a1)
{
  if (!a1) {
    return 0;
  }
  unint64_t v1 = a1;
  sub_100021770(0, 0, 0);
  do
  {
    unint64_t v2 = __clz(__rbit64(v1));
    if (v2 >= 0x40)
    {
LABEL_16:
      sub_10014D284();
      v12._countAndFlagsBits = sub_10096BEB0();
      sub_10096BDC0(v12);
      swift_bridgeObjectRelease();
      uint64_t v6 = 30768;
      unint64_t v5 = 0xE200000000000000;
    }
    else
    {
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x7964616572;
      switch(v3)
      {
        case 1:
          break;
        case 2:
          unint64_t v5 = 0xE900000000000065;
          uint64_t v6 = 0x7669737275636572;
          break;
        case 3:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
          goto LABEL_16;
        case 4:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x7974706D45746F6ELL;
          break;
        case 8:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x676E696E6E7572;
          break;
        case 16:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x6465726F6E6769;
          break;
        case 32:
          unint64_t v5 = 0xED0000646574656CLL;
          uint64_t v6 = 0x6544746E65726170;
          break;
        case 64:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x64657463656A6572;
          break;
        default:
          if (v3 != 128) {
            goto LABEL_16;
          }
          unint64_t v5 = 0xED00006576697372;
          uint64_t v6 = 0x75636552797A616CLL;
          break;
      }
    }
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v8 >= v7 >> 1) {
      sub_100021770((char *)(v7 > 1), v8 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v8 + 1;
    uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
    v9[4] = v6;
    v9[5] = v5;
  }
  while (v1);
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_1000A6FD8();
  uint64_t v10 = sub_10096BB50();
  swift_release();
  return v10;
}

uint64_t sub_100608C20(unint64_t a1)
{
  return sub_100609938(a1, sub_1007C82B0, (void (*)(uint64_t))sub_10014D284);
}

uint64_t sub_100608C54(unint64_t a1)
{
  if (!a1) {
    return 0;
  }
  unint64_t v1 = a1;
  sub_100021770(0, 0, 0);
  do
  {
    unint64_t v2 = __clz(__rbit64(v1));
    if (v2 >= 0x40)
    {
LABEL_11:
      sub_10014D284();
      v12._countAndFlagsBits = sub_10096BEB0();
      sub_10096BDC0(v12);
      swift_bridgeObjectRelease();
      unint64_t v6 = 30768;
      unint64_t v5 = 0xE200000000000000;
    }
    else
    {
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      unint64_t v5 = 0xEB000000006B636FLL;
      unint64_t v6 = 0x6C46646572616873;
      switch(v3)
      {
        case 1:
          break;
        case 2:
          unint64_t v5 = 0xEE006B636F6C4665;
          unint64_t v6 = 0x766973756C637865;
          break;
        case 4:
          unint64_t v5 = 0xEA00000000006465;
          unint64_t v6 = 0x73756150636E7973;
          break;
        case 8:
          unint64_t v5 = 0x80000001009ADD80;
          unint64_t v6 = 0xD000000000000020;
          break;
        default:
          goto LABEL_11;
      }
    }
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v8 >= v7 >> 1) {
      sub_100021770((char *)(v7 > 1), v8 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v8 + 1;
    uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
    v9[4] = v6;
    v9[5] = v5;
  }
  while (v1);
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_1000A6FD8();
  uint64_t v10 = sub_10096BB50();
  swift_release();
  return v10;
}

unint64_t sub_100608E98(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    sub_100021770(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      if (v3 == 1)
      {
        unint64_t v6 = 0xD000000000000014;
        unint64_t v5 = 0x80000001009ADD60;
      }
      else
      {
        if (v3 != 2) {
          break;
        }
        unint64_t v5 = 0x80000001009ADD40;
        unint64_t v6 = 0xD000000000000010;
      }
LABEL_12:
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100021770((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v6;
      v9[5] = v5;
      if (!v1)
      {
        sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
        sub_1000A6FD8();
        unint64_t v1 = sub_10096BB50();
        swift_release();
        return v1;
      }
    }
    sub_10014D284();
    v11._countAndFlagsBits = sub_10096BEB0();
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    unint64_t v6 = 30768;
    unint64_t v5 = 0xE200000000000000;
    goto LABEL_12;
  }
  return v1;
}

unint64_t sub_100609068(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    sub_100021770(0, 0, 0);
    do
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40)
      {
LABEL_15:
        sub_10014D284();
        v11._countAndFlagsBits = sub_10096BEB0();
        sub_10096BDC0(v11);
        swift_bridgeObjectRelease();
        unint64_t v6 = 30768;
        unint64_t v5 = 0xE200000000000000;
      }
      else
      {
        uint64_t v3 = 1 << v2;
        if ((v3 & v1) != 0) {
          uint64_t v4 = ~v3;
        }
        else {
          uint64_t v4 = -1;
        }
        v1 &= v4;
        unint64_t v5 = 0xE700000000000000;
        unint64_t v6 = 0x676E696E6E6970;
        switch(v3)
        {
          case 1:
            break;
          case 2:
            unint64_t v5 = 0xEB00000000657669;
            goto LABEL_14;
          case 4:
            unint64_t v5 = 0xEE007963696C6F70;
            unint64_t v6 = 0x20746E65746E6F63;
            break;
          case 8:
            unint64_t v5 = 0xEE00747365757165;
            unint64_t v6 = 0x7220746365726964;
            break;
          case 16:
            unint64_t v5 = 0x80000001009ADD20;
            unint64_t v6 = 0xD00000000000001ALL;
            break;
          case 32:
            unint64_t v6 = 0xD000000000000027;
            unint64_t v5 = 0x80000001009ADCF0;
            break;
          case 64:
            unint64_t v5 = 0xEF74657320657669;
LABEL_14:
            unint64_t v6 = 0x74616C7563657073;
            break;
          default:
            goto LABEL_15;
        }
      }
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100021770((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v6;
      v9[5] = v5;
    }
    while (v1);
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    sub_1000A6FD8();
    unint64_t v1 = sub_10096BB50();
    swift_release();
  }
  return v1;
}

uint64_t sub_1006093E4(unint64_t a1)
{
  return sub_100609938(a1, (uint64_t (*)(uint64_t))sub_100485A20, (void (*)(uint64_t))sub_100017D30);
}

unint64_t sub_100609418(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    sub_100021770(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      switch(v3)
      {
        case 1:
          unint64_t v5 = 0xD000000000000025;
          unint64_t v6 = 0x80000001009A2EC0;
          break;
        case 2:
          unint64_t v6 = 0x80000001009A2EA0;
          unint64_t v5 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v5 = 0xD000000000000028;
          unint64_t v6 = 0x80000001009A2E70;
          break;
        default:
          goto LABEL_13;
      }
LABEL_14:
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100021770((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v5;
      v9[5] = v6;
      if (!v1)
      {
        sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
        sub_1000A6FD8();
        unint64_t v1 = sub_10096BB50();
        swift_release();
        return v1;
      }
    }
LABEL_13:
    sub_100017D30();
    v11._countAndFlagsBits = sub_10096BEB0();
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    unint64_t v5 = 30768;
    unint64_t v6 = 0xE200000000000000;
    goto LABEL_14;
  }
  return v1;
}

uint64_t sub_100609614(unint64_t a1)
{
  return sub_100609938(a1, (uint64_t (*)(uint64_t))sub_100486120, (void (*)(uint64_t))sub_100017D30);
}

uint64_t sub_100609648(unint64_t a1)
{
  return sub_100609938(a1, (uint64_t (*)(uint64_t))sub_10048670C, (void (*)(uint64_t))sub_1004A3118);
}

uint64_t sub_10060967C(unint64_t a1)
{
  return sub_100609938(a1, (uint64_t (*)(uint64_t))sub_10064ECA4, (void (*)(uint64_t))sub_1004A3118);
}

uint64_t sub_1006096B0(uint64_t a1)
{
  if (qword_100ACC0F0 != -1) {
    swift_once();
  }
  if ((static Fields.all & a1) == static Fields.all) {
    uint64_t v2 = 7105633;
  }
  else {
    uint64_t v2 = 0;
  }
  if ((static Fields.all & a1) == static Fields.all) {
    unint64_t v3 = 0xE300000000000000;
  }
  else {
    unint64_t v3 = 0xE000000000000000;
  }
  if ((static Fields.all & a1) == static Fields.all) {
    uint64_t v4 = ~static Fields.all;
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & a1;
  if ((v4 & a1) != 0)
  {
    uint64_t v19 = v2;
    unint64_t v20 = v3;
    sub_100021770(0, 0, 0);
    do
    {
      unint64_t v6 = __clz(__rbit64(v5));
      uint64_t v7 = v5 & ~(1 << v6);
      if (((1 << v6) & v5) == 0) {
        uint64_t v7 = v5;
      }
      if (v6 >= 0x40) {
        unint64_t v8 = 0;
      }
      else {
        unint64_t v8 = (const mach_header_64 *)(1 << v6);
      }
      if (v6 < 0x40) {
        unint64_t v5 = v7;
      }
      uint64_t v9 = Fields.bitDescription.getter(v8);
      if (v10)
      {
        uint64_t v11 = v9;
        unint64_t v12 = v10;
      }
      else
      {
        sub_10014D284();
        v21._countAndFlagsBits = sub_10096BEB0();
        sub_10096BDC0(v21);
        swift_bridgeObjectRelease();
        uint64_t v11 = 30768;
        unint64_t v12 = 0xE200000000000000;
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_100021770((char *)(v13 > 1), v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v11;
      v15[5] = v12;
    }
    while (v5);
    sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
    sub_1000A6FD8();
    uint64_t v2 = sub_10096BB50();
    uint64_t v17 = v16;
    swift_release();
    if ((v20 & 0x300000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = 124;
      v22._object = (void *)0xE100000000000000;
      sub_10096BDC0(v22);
      v23._countAndFlagsBits = v2;
      v23._object = v17;
      sub_10096BDC0(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t sub_100609904(unint64_t a1)
{
  return sub_100609938(a1, BrokenInvariants.bitDescription.getter, (void (*)(uint64_t))sub_1004A3118);
}

uint64_t sub_100609938(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t))
{
  if (!a1) {
    return 0;
  }
  unint64_t v5 = a1;
  sub_100021770(0, 0, 0);
  do
  {
    unint64_t v6 = __clz(__rbit64(v5));
    uint64_t v7 = v5 & ~(1 << v6);
    if (((1 << v6) & v5) == 0) {
      uint64_t v7 = v5;
    }
    if (v6 >= 0x40) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = 1 << v6;
    }
    if (v6 < 0x40) {
      unint64_t v5 = v7;
    }
    uint64_t v9 = a2(v8);
    if (v10)
    {
      uint64_t v11 = v9;
      unint64_t v12 = v10;
    }
    else
    {
      a3(v9);
      v18._countAndFlagsBits = sub_10096BEB0();
      sub_10096BDC0(v18);
      swift_bridgeObjectRelease();
      uint64_t v11 = 30768;
      unint64_t v12 = 0xE200000000000000;
    }
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1) {
      sub_100021770((char *)(v13 > 1), v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = v11;
    v15[5] = v12;
  }
  while (v5);
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_1000A6FD8();
  uint64_t v16 = sub_10096BB50();
  swift_release();
  return v16;
}

unint64_t sub_100609ADC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    sub_100021770(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      if (v3 <= 127)
      {
        unint64_t v5 = 0xE800000000000000;
        unint64_t v6 = 0x73746E65746E6F63;
        switch(v3)
        {
          case 1:
            goto LABEL_29;
          case 2:
            unint64_t v6 = 0x656D616E656C6966;
            break;
          case 4:
            unint64_t v6 = 0x4449746E65726170;
            break;
          case 8:
            unint64_t v5 = 0xEC00000065746144;
            unint64_t v6 = 0x646573557473616CLL;
            break;
          case 16:
            unint64_t v5 = 0xE700000000000000;
            unint64_t v6 = 0x61746144676174;
            break;
          case 32:
            unint64_t v5 = 0xEC0000006B6E6152;
            unint64_t v6 = 0x657469726F766166;
            break;
          case 64:
            unint64_t v5 = 0xE500000000000000;
            unint64_t v6 = 0x656D697463;
            break;
          default:
            goto LABEL_28;
        }
        goto LABEL_29;
      }
      if (v3 > 1023)
      {
        switch(v3)
        {
          case 0x400:
            unint64_t v5 = 0xEE00726F74616572;
            unint64_t v6 = 0x43646E4165707974;
            break;
          case 0x40000000:
            unint64_t v5 = 0xE700000000000000;
            unint64_t v6 = 0x64656873617274;
            break;
          case 0x80000000:
            unint64_t v5 = 0x8000000100993ED0;
            unint64_t v6 = 0xD000000000000013;
            break;
          default:
            goto LABEL_28;
        }
      }
      else
      {
        switch(v3)
        {
          case 128:
            unint64_t v6 = 0x656D69746DLL;
            unint64_t v5 = 0xE500000000000000;
            break;
          case 256:
            unint64_t v5 = 0xEF7367616C466D65;
            unint64_t v6 = 0x74737953656C6966;
            break;
          case 512:
            unint64_t v5 = 0xE600000000000000;
            unint64_t v6 = 0x737274746178;
            break;
          default:
            goto LABEL_28;
        }
      }
LABEL_29:
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100021770((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v6;
      v9[5] = v5;
      if (!v1)
      {
        sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
        sub_1000A6FD8();
        unint64_t v1 = sub_10096BB50();
        swift_release();
        return v1;
      }
    }
LABEL_28:
    sub_1004A3118();
    v11._countAndFlagsBits = sub_10096BEB0();
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    unint64_t v6 = 30768;
    unint64_t v5 = 0xE200000000000000;
    goto LABEL_29;
  }
  return v1;
}

uint64_t sub_100609F24(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10060AB70(a1);
  return v2;
}

double sub_100609F64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  Swift::String v11 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v26 = a8 + v11[13];
  uint64_t v12 = a8 + v11[14];
  *(void *)uint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  *(void *)(v12 + 16) = 0;
  *(unsigned char *)(v12 + 24) = 1;
  uint64_t v13 = a8 + v11[15];
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(a8, a1, AssociatedTypeWitness);
  v16(a8 + v11[9], a2, AssociatedTypeWitness);
  uint64_t v22 = a8 + v11[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = type metadata accessor for FileItemVersion();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a3, v17);
  uint64_t v19 = (void *)(a8 + v11[11]);
  *uint64_t v19 = a4;
  v19[1] = a5;
  sub_10010DA98(a6, a8 + v11[12]);
  sub_10016B800(a7, v26);
  sub_10010DAFC(a6);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a3, v17);
  unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v20(a2, AssociatedTypeWitness);
  v20(a1, AssociatedTypeWitness);
  *(void *)(a8 + v11[16]) = 0;
  double result = 0.0;
  *(_OWORD *)(a8 + v11[17]) = xmmword_10097C7D0;
  return result;
}

uint64_t SnapshotItem.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t SnapshotItem.id.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t SnapshotItem.parentID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t SnapshotItem.parentID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v6(v4, a1, AssociatedTypeWitness);
}

libfssync::Filename (__swiftcall *SnapshotItem.parentID.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.version.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SnapshotItem.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(v4, a1, v5);
}

libfssync::Filename (__swiftcall *SnapshotItem.version.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.name.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SnapshotItem.name.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

libfssync::Filename (__swiftcall *SnapshotItem.name.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010DA98(v2 + *(int *)(a1 + 48), a2);
}

uint64_t SnapshotItem.metadata.setter(uint64_t a1, uint64_t a2)
{
  return sub_1002636C8(a1, v2 + *(int *)(a2 + 48));
}

libfssync::Filename (__swiftcall *SnapshotItem.metadata.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.nonSyncableAttributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10060AD28(v2 + *(int *)(a1 + 52), a2);
}

uint64_t SnapshotItem.nonSyncableAttributes.setter(uint64_t a1, uint64_t a2)
{
  return sub_1003A99F0(a1, v2 + *(int *)(a2 + 52));
}

libfssync::Filename (__swiftcall *FileItemVersion.equivalentContentVersions.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.unsupportedFields.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 64));
}

uint64_t SnapshotItem.unsupportedFields.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 64)) = result;
  return result;
}

libfssync::Filename (__swiftcall *FileItemVersion.lastEditorDeviceName.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t SnapshotItem.syncability.getter(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 68);
  uint64_t v3 = *(void *)v2;
  sub_10018B584(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

uint64_t SnapshotItem.syncability.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3 + *(int *)(a3 + 68);
  uint64_t result = sub_1000CF144(*(void *)v6, *(void *)(v6 + 8));
  *(void *)uint64_t v6 = a1;
  *(void *)(v6 + 8) = a2;
  return result;
}

libfssync::Filename (__swiftcall *SnapshotItem.syncability.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t sub_10060A8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10096C890();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(a2 - 8);
  uint64_t v14 = __chkstk_darwin(v10);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v23 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a2) == 1)
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v19(a1, v8);
    v19((uint64_t)v12, v8);
    uint64_t v20 = type metadata accessor for SnapshotItem();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, a2);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, a2);
    SnapshotItem.init(_:)((uint64_t)v16, a2, a3, a4);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, a2);
    uint64_t v22 = type metadata accessor for SnapshotItem();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 0, 1, v22);
  }
}

uint64_t sub_10060AB70(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_10060AC1C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10060ACB8()
{
  sub_10060AC1C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnapshotItem()
{
  return sub_10014D080();
}

uint64_t sub_10060AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD0EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060AD90()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10060ADAC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10060ADC8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10060ADE4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10060AE20()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = type metadata accessor for FileItemVersion();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ItemMetadata();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_10060B01C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v133 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v4 = v3;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v126 = v6;
  uint64_t v127 = v5;
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v130 - 8);
  int v8 = *(_DWORD *)(v128 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v7 & 0xF8 | v8 | 7u;
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(void *)(v128 + 64);
  uint64_t v131 = sub_10096B0E0();
  uint64_t v13 = *(void *)(v131 - 8);
  unint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  if (*(_DWORD *)(v13 + 84)) {
    size_t v16 = *(void *)(v13 + 64);
  }
  else {
    size_t v16 = v15 + 1;
  }
  unint64_t v17 = v10 | v3 | v14;
  if (v17 != 7
    || ((v7 | v3 | v8 | *(_DWORD *)(v13 + 80)) & 0x100000) != 0
    || (uint64_t v18 = v133 + v3,
        uint64_t v19 = v11 + 7,
        uint64_t v20 = v9 + 8,
        unint64_t v21 = ((((v12 + 7 + ((v9 + 8 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16,
        (((((((v14 | 7) + 16 + ((v133 + ((v133 + v4) & ~v4) + v10) & ~v10) + v21) & ~(v14 | 7))
          + ((((((((((v16
                    + 7
                    + ((v14
                      + 10
                      + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                  + 31) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 16
          + 311) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16 > 0x18))
  {
    uint64_t v57 = *a2;
    *a1 = *a2;
    uint64_t v58 = v57 + ((v17 + 16) & ~v17);
    swift_retain();
  }
  else
  {
    size_t v124 = v16 + 7;
    unint64_t v125 = ((((((((((v16
                   + 7
                   + ((v14
                     + 10
                     + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v22 = ~v4;
    size_t __n = v16;
    uint64_t v113 = ~v9;
    uint64_t v117 = ~(v14 | 7);
    uint64_t v120 = ~v14;
    uint64_t v23 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16);
    uint64_t v122 = *(void *)(v13 + 64);
    unint64_t v118 = v14 + 12;
    unint64_t v115 = v21;
    uint64_t v116 = (v14 | 7) + 16;
    uint64_t v119 = *(void *)(v131 - 8);
    unint64_t v123 = v14 + 10;
    uint64_t v121 = v15 + v14;
    uint64_t v114 = v12 + 7;
    uint64_t v112 = v20;
    v23(a1, a2, AssociatedTypeWitness);
    v23((uint64_t *)(((unint64_t)a1 + v18) & v22), (uint64_t *)(((unint64_t)a2 + v18) & v22), AssociatedTypeWitness);
    unint64_t v24 = ((((unint64_t)a1 + v18) & ~v4) + v133 + v10) & ~v10;
    unint64_t v25 = ((((unint64_t)a2 + v18) & v22) + v133 + v10) & ~v10;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 16))(v24, v25, v127);
    uint64_t v26 = (void *)((v19 + v24) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)((v19 + v25) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    unint64_t v28 = ((unint64_t)v26 + v112) & v113;
    unint64_t v29 = ((unint64_t)v27 + v112) & v113;
    uint64_t v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16);
    swift_bridgeObjectRetain();
    v30(v28, v29, v130);
    uint64_t v31 = (void *)((v114 + v29) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)((v114 + v28) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v32 = *v31;
    uint64_t v33 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v33 = *v34;
    v33[1] = v34[1];
    long long v35 = (void *)(v115 + v24);
    *long long v35 = *(void *)(v115 + v25);
    v35[1] = *(void *)(v115 + v25 + 8);
    uint64_t v36 = (v116 + v115 + v24) & v117;
    uint64_t v37 = (v116 + v115 + v25) & v117;
    *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
    uint64_t v38 = v36 | 4;
    int v39 = *(_DWORD *)(v37 | 4);
    *(unsigned char *)(v38 + 4) = *(unsigned char *)((v37 | 4) + 4);
    *(_DWORD *)uint64_t v38 = v39;
    *(_WORD *)(v36 + 10) = *(_WORD *)(v37 + 0xA);
    uint64_t v40 = (v118 + v36) & v120;
    uint64_t v41 = (v118 + v37) & v120;
    long long v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v40, v41, v131);
    uint64_t v43 = (v121 + v40) & v120;
    uint64_t v44 = (v121 + v41) & v120;
    v42(v43, v44, v131);
    uint64_t v45 = (unsigned char *)(v43 + v122);
    *uint64_t v45 = *(unsigned char *)(v44 + v122);
    v45[1] = *(unsigned char *)(v44 + v122 + 1);
    v45[2] = *(unsigned char *)(v44 + v122 + 2);
    v45[3] = *(unsigned char *)(v44 + v122 + 3);
    v45[4] = *(unsigned char *)(v44 + v122 + 4);
    unint64_t v46 = (v43 + v122 + 12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = (v44 + v122 + 12) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = *(void *)(v47 + 8);
    *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
    *(unsigned char *)(v46 + 17) = *(unsigned char *)(v47 + 17);
    *(unsigned char *)(v46 + 18) = *(unsigned char *)(v47 + 18);
    *(unsigned char *)(v46 + 19) = *(unsigned char *)(v47 + 19);
    unint64_t v48 = (v46 + 27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v47 + 27) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v48 = *(void *)v49;
    *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
    *(unsigned char *)(v48 + 9) = *(unsigned char *)(v49 + 9);
    *(unsigned char *)(v48 + 10) = *(unsigned char *)(v49 + 10);
    *(unsigned char *)(v48 + 11) = *(unsigned char *)(v49 + 11);
    *(unsigned char *)(v48 + 12) = *(unsigned char *)(v49 + 12);
    uint64_t v50 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
    Swift::String v51 = (void *)((v46 + 47) & 0xFFFFFFFFFFFFFFF8);
    *Swift::String v51 = *v50;
    unint64_t v52 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v52 = *(void *)v53;
    *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
    *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
    Swift::String v54 = (void *)((v123 + v52) & v120);
    Swift::String v55 = (const void *)((v123 + v53) & v120);
    Swift::String v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v119 + 48);
    swift_bridgeObjectRetain();
    if (v56(v55, 1, v131))
    {
      memcpy(v54, v55, __n);
    }
    else
    {
      v42((uint64_t)v54, (uint64_t)v55, v131);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v54, 0, 1, v131);
    }
    Swift::String v59 = (void *)(((unint64_t)v54 + v124) & 0xFFFFFFFFFFFFFFF8);
    Swift::String v60 = (void *)(((unint64_t)v55 + v124) & 0xFFFFFFFFFFFFFFF8);
    *Swift::String v59 = *v60;
    unint64_t v61 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v62 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v63 = *(void *)v62;
    *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
    *(void *)unint64_t v61 = v63;
    Swift::String v64 = (void *)(((unint64_t)v59 + 31) & 0xFFFFFFFFFFFFFFF8);
    Swift::String v65 = (void *)(((unint64_t)v60 + 31) & 0xFFFFFFFFFFFFFFF8);
    *Swift::String v64 = *v65;
    unint64_t v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    Swift::String v67 = (uint64_t *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v68 = v67[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v68 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v66 = *(_OWORD *)v67;
    }
    else
    {
      uint64_t v69 = *v67;
      sub_10001EBB0(*v67, v68);
      *(void *)unint64_t v66 = v69;
      *(void *)(v66 + 8) = v68;
    }
    unint64_t v70 = (v66 + 19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = ((unint64_t)v67 + 19) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = *(void *)v71;
    *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
    *(void *)unint64_t v70 = v72;
    *(unsigned char *)(v70 + 9) = *(unsigned char *)(v71 + 9);
    unint64_t v73 = (v70 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v74 = (v71 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    int v75 = *(_DWORD *)v74;
    *(unsigned char *)(v73 + 4) = *(unsigned char *)(v74 + 4);
    *(_DWORD *)unint64_t v73 = v75;
    uint64_t v76 = (void *)((v70 + 25) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v77 = (void *)((v71 + 25) & 0xFFFFFFFFFFFFFFF8);
    void *v76 = *v77;
    v76[1] = v77[1];
    unint64_t v78 = v125 + v36;
    unint64_t v79 = v125 + v37;
    unint64_t v80 = *(void *)(v125 + v37 + 16);
    if (v80 >= 0xFFFFFFFF) {
      LODWORD(v80) = -1;
    }
    int v81 = v80 - 1;
    swift_bridgeObjectRetain();
    if (v81 < 0)
    {
      *(void *)unint64_t v78 = *(void *)v79;
      *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
      *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
      uint64_t v94 = *(void *)(v79 + 16);
      swift_errorRetain();
      *(void *)(v78 + 16) = v94;
      uint64_t v95 = *(void *)(v79 + 24);
      swift_errorRetain();
      *(void *)(v78 + 24) = v95;
      *(unsigned char *)(v78 + 32) = *(unsigned char *)(v79 + 32);
      *(unsigned char *)(v78 + 33) = *(unsigned char *)(v79 + 33);
      *(unsigned char *)(v78 + 34) = *(unsigned char *)(v79 + 34);
      *(void *)(v78 + 40) = *(void *)(v79 + 40);
      *(void *)(v78 + 48) = *(void *)(v79 + 48);
      *(void *)(v78 + 56) = *(void *)(v79 + 56);
      *(void *)(v78 + 64) = *(void *)(v79 + 64);
      *(unsigned char *)(v78 + 72) = *(unsigned char *)(v79 + 72);
      *(void *)(v78 + 80) = *(void *)(v79 + 80);
      *(void *)(v78 + 88) = *(void *)(v79 + 88);
      unint64_t v134 = *(void **)(v79 + 96);
      *(void *)(v78 + 96) = v134;
      *(unsigned char *)(v78 + 104) = *(unsigned char *)(v79 + 104);
      *(unsigned char *)(v78 + 105) = *(unsigned char *)(v79 + 105);
      *(void *)(v78 + 112) = *(void *)(v79 + 112);
      *(void *)(v78 + 120) = *(void *)(v79 + 120);
      *(void *)(v78 + 128) = *(void *)(v79 + 128);
      *(void *)(v78 + 136) = *(void *)(v79 + 136);
      *(void *)(v78 + 144) = *(void *)(v79 + 144);
      *(void *)(v78 + 152) = *(void *)(v79 + 152);
      *(void *)(v78 + 160) = *(void *)(v79 + 160);
      *(void *)(v78 + 168) = *(void *)(v79 + 168);
      *(unsigned char *)(v78 + 176) = *(unsigned char *)(v79 + 176);
      *(void *)(v78 + 184) = *(void *)(v79 + 184);
      uint64_t v96 = *(void *)(v79 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v97 = v134;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v96)
      {
        *(void *)(v78 + 192) = v96;
        *(void *)(v78 + 200) = *(void *)(v79 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v78 + 192) = *(_OWORD *)(v79 + 192);
      }
      *(void *)(v78 + 208) = *(void *)(v79 + 208);
      *(void *)(v78 + 216) = *(void *)(v79 + 216);
      *(void *)(v78 + 224) = *(void *)(v79 + 224);
      *(void *)(v78 + 232) = *(void *)(v79 + 232);
      *(void *)(v78 + 240) = *(void *)(v79 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v82 = *(_OWORD *)v79;
      long long v83 = *(_OWORD *)(v79 + 16);
      long long v84 = *(_OWORD *)(v79 + 48);
      *(_OWORD *)(v78 + 32) = *(_OWORD *)(v79 + 32);
      *(_OWORD *)(v78 + 48) = v84;
      *(_OWORD *)unint64_t v78 = v82;
      *(_OWORD *)(v78 + 16) = v83;
      long long v85 = *(_OWORD *)(v79 + 64);
      long long v86 = *(_OWORD *)(v79 + 80);
      long long v87 = *(_OWORD *)(v79 + 112);
      *(_OWORD *)(v78 + 96) = *(_OWORD *)(v79 + 96);
      *(_OWORD *)(v78 + 112) = v87;
      *(_OWORD *)(v78 + 64) = v85;
      *(_OWORD *)(v78 + 80) = v86;
      long long v88 = *(_OWORD *)(v79 + 128);
      long long v89 = *(_OWORD *)(v79 + 144);
      long long v90 = *(_OWORD *)(v79 + 176);
      *(_OWORD *)(v78 + 160) = *(_OWORD *)(v79 + 160);
      *(_OWORD *)(v78 + 176) = v90;
      *(_OWORD *)(v78 + 128) = v88;
      *(_OWORD *)(v78 + 144) = v89;
      long long v91 = *(_OWORD *)(v79 + 192);
      long long v92 = *(_OWORD *)(v79 + 208);
      long long v93 = *(_OWORD *)(v79 + 224);
      *(void *)(v78 + 240) = *(void *)(v79 + 240);
      *(_OWORD *)(v78 + 208) = v92;
      *(_OWORD *)(v78 + 224) = v93;
      *(_OWORD *)(v78 + 192) = v91;
    }
    uint64_t v98 = (_OWORD *)((v78 + 255) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v99 = (long long *)((v79 + 255) & 0xFFFFFFFFFFFFFFF8);
    long long v100 = *v99;
    *(_OWORD *)((char *)v98 + 9) = *(long long *)((char *)v99 + 9);
    *uint64_t v98 = v100;
    unint64_t v101 = (v78 + 287) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v102 = (v79 + 287) & 0xFFFFFFFFFFFFFFF8;
    long long v103 = *(_OWORD *)v102;
    *(unsigned char *)(v101 + 16) = *(unsigned char *)(v102 + 16);
    *(_OWORD *)unint64_t v101 = v103;
    int v104 = (void *)((v78 + 311) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v105 = (v79 + 311) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v106 = *(void *)v105;
    v105 += 15;
    void *v104 = v106;
    uint64_t v107 = (void *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v108 = *(void *)(v105 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v109 = *(void *)((v105 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_10018B584(v108, v109);
    *uint64_t v107 = v108;
    v107[1] = v109;
    return a1;
  }
  return (uint64_t *)v58;
}

uint64_t sub_10060BA84(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = v3 + 8;
  v4(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56);
  unint64_t v7 = (v6 + a1 + *(unsigned __int8 *)(v5 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);
  v4(v7, AssociatedTypeWitness);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  LODWORD(v5) = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (v7 + v6 + (v5 | v12 | 7)) & ~(unint64_t)(v5 | v12 | 7);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v13, v8);
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v12 + 8 + ((v14 + v13) & 0xFFFFFFFFFFFFFFF8)) & ~v12, v10);
  uint64_t v15 = *(void *)(v11 + 64) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = v13
      + ((((v15 + ((v12 + 8 + (v14 & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10096B0E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v36 = (v16 + (v20 | 7) + 32) & ~(v20 | 7);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21((v20 + 12 + v36) & ~v20, v17);
  uint64_t v22 = *(void *)(v18 + 64);
  uint64_t v23 = (v22 + v20 + ((v20 + 12 + v36) & ~v20)) & ~v20;
  v21(v23, v17);
  swift_bridgeObjectRelease();
  unint64_t v24 = (v20
       + 10
       + ((((((v22 + 12 + v23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v24, 1, v17)) {
    v21(v24, v17);
  }
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v25 = v22;
  }
  else {
    uint64_t v25 = v22 + 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)((((((v24 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = v26[1];
  if ((v27 & 0x3000000000000000) == 0) {
    sub_10001E9C0(*v26, v27);
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = v36
      + ((((((((((((v20
                  + 10
                  + ((((((v22 + 12 + ((v22 + v20 + ((v20 + 12) & ~v20)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20)
                + v25
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = v28 + 16;
  unint64_t v30 = *(void *)(v28 + 32);
  int v31 = -1;
  if (v30 < 0xFFFFFFFF) {
    int v31 = v30;
  }
  if (v31 - 1 < 0)
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v29 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = (uint64_t *)((((v29 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = *v32;
  unint64_t v34 = v32[1];

  return sub_1000CF144(v33, v34);
}

uint64_t sub_10060BF3C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v118 = *(void *)(v7 + 48);
  uint64_t v121 = a1;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v9 = (v118 + v8 + a1) & ~v8;
  uint64_t v10 = (v118 + v8 + a2) & ~v8;
  v6(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 | v16 | 7;
  uint64_t v18 = (v118 + v17 + v9) & ~v17;
  uint64_t v19 = (v118 + v17 + v10) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v18, v19, v11);
  uint64_t v20 = *(void *)(v12 + 64) + 7;
  unint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = *v22;
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v14);
  uint64_t v26 = *(void *)(v15 + 64) + 7;
  unint64_t v27 = (void *)((v26 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (void *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v27 = *v28;
  unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *v30;
  v29[1] = v30[1];
  unint64_t v31 = ((((v26 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = (void *)(v31 + v18);
  unint64_t v33 = v31 + v19;
  *uint64_t v32 = *(void *)(v31 + v19);
  v32[1] = *(void *)(v31 + v19 + 8);
  uint64_t v34 = sub_10096B0E0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v35;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v37 | 7) + 16;
  uint64_t v39 = ((unint64_t)v32 + v38) & ~(v37 | 7);
  uint64_t v40 = (v38 + v33) & ~(v37 | 7);
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  char v41 = *(unsigned char *)(v40 + 8);
  *(_DWORD *)(v39 + 4) = *(_DWORD *)(v40 + 4);
  *(unsigned char *)(v39 + 8) = v41;
  *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
  uint64_t v117 = v40;
  uint64_t v119 = v39;
  uint64_t v42 = (v37 + 12 + v39) & ~v37;
  uint64_t v43 = (v37 + 12 + v40) & ~v37;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v42, v43, v34);
  size_t v45 = *(void *)(v35 + 64);
  uint64_t v46 = v45 + v37 + v43;
  uint64_t v47 = v34;
  uint64_t v48 = v46 & ~v37;
  v44((v45 + v37 + v42) & ~v37, v48, v47);
  unint64_t v49 = (unsigned char *)(((v45 + v37 + v42) & ~v37) + v45);
  *unint64_t v49 = *(unsigned char *)(v48 + v45);
  v49[1] = *(unsigned char *)(v48 + v45 + 1);
  v49[2] = *(unsigned char *)(v48 + v45 + 2);
  v49[3] = *(unsigned char *)(v48 + v45 + 3);
  v49[4] = *(unsigned char *)(v48 + v45 + 4);
  unint64_t v50 = (unint64_t)(v49 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v48 + v45 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = *(void *)(v51 + 8);
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  *(unsigned char *)(v50 + 17) = *(unsigned char *)(v51 + 17);
  *(unsigned char *)(v50 + 18) = *(unsigned char *)(v51 + 18);
  *(unsigned char *)(v50 + 19) = *(unsigned char *)(v51 + 19);
  unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v51 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
  *(unsigned char *)(v52 + 10) = *(unsigned char *)(v53 + 10);
  *(unsigned char *)(v52 + 11) = *(unsigned char *)(v53 + 11);
  *(unsigned char *)(v52 + 12) = *(unsigned char *)(v53 + 12);
  Swift::String v54 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
  Swift::String v55 = (void *)((v51 + 47) & 0xFFFFFFFFFFFFFFF8);
  *Swift::String v54 = *v55;
  unint64_t v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v56 = *(void *)v57;
  *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
  *(unsigned char *)(v56 + 9) = *(unsigned char *)(v57 + 9);
  uint64_t v58 = (void *)((v37 + 10 + v56) & ~v37);
  Swift::String v59 = (const void *)((v37 + 10 + v57) & ~v37);
  Swift::String v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  if (v60(v59, 1, v47))
  {
    int v61 = *(_DWORD *)(v36 + 84);
    if (v61) {
      size_t v62 = v45;
    }
    else {
      size_t v62 = v45 + 1;
    }
    memcpy(v58, v59, v62);
  }
  else
  {
    v44((uint64_t)v58, (uint64_t)v59, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v58, 0, 1, v47);
    int v61 = *(_DWORD *)(v36 + 84);
  }
  if (v61) {
    size_t v63 = v45;
  }
  else {
    size_t v63 = v45 + 1;
  }
  Swift::String v64 = (void *)(((unint64_t)v58 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  Swift::String v65 = (void *)(((unint64_t)v59 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  *Swift::String v64 = *v65;
  unint64_t v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(void *)unint64_t v66 = v68;
  uint64_t v69 = (void *)(((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v70 = (void *)(((unint64_t)v65 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v69 = *v70;
  unint64_t v71 = ((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v72 = (uint64_t *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v73 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v71 = *(_OWORD *)v72;
  }
  else
  {
    uint64_t v74 = *v72;
    sub_10001EBB0(*v72, v73);
    *(void *)unint64_t v71 = v74;
    *(void *)(v71 + 8) = v73;
  }
  unint64_t v75 = (v71 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = ((unint64_t)v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v77 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(void *)unint64_t v75 = v77;
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  unint64_t v78 = (v75 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v79 = (v76 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v80 = *(_DWORD *)v79;
  *(unsigned char *)(v78 + 4) = *(unsigned char *)(v79 + 4);
  *(_DWORD *)unint64_t v78 = v80;
  int v81 = (void *)((v75 + 25) & 0xFFFFFFFFFFFFFFF8);
  long long v82 = (void *)((v76 + 25) & 0xFFFFFFFFFFFFFFF8);
  *int v81 = *v82;
  v81[1] = v82[1];
  unint64_t v83 = ((((((((((((v37
                  + 10
                  + ((((((v45 + ((((v37 + 12) | v37) + v45) & ~v37) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37)
                + v63
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v84 = v83 + v119;
  unint64_t v85 = v83 + v117;
  unint64_t v86 = *(void *)(v83 + v117 + 16);
  if (v86 >= 0xFFFFFFFF) {
    LODWORD(v86) = -1;
  }
  int v87 = v86 - 1;
  swift_bridgeObjectRetain();
  if (v87 < 0)
  {
    *(void *)unint64_t v84 = *(void *)v85;
    *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
    *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
    uint64_t v100 = *(void *)(v85 + 16);
    swift_errorRetain();
    *(void *)(v84 + 16) = v100;
    uint64_t v101 = *(void *)(v85 + 24);
    swift_errorRetain();
    *(void *)(v84 + 24) = v101;
    *(unsigned char *)(v84 + 32) = *(unsigned char *)(v85 + 32);
    *(unsigned char *)(v84 + 33) = *(unsigned char *)(v85 + 33);
    *(unsigned char *)(v84 + 34) = *(unsigned char *)(v85 + 34);
    *(void *)(v84 + 40) = *(void *)(v85 + 40);
    *(void *)(v84 + 48) = *(void *)(v85 + 48);
    *(void *)(v84 + 56) = *(void *)(v85 + 56);
    *(void *)(v84 + 64) = *(void *)(v85 + 64);
    *(unsigned char *)(v84 + 72) = *(unsigned char *)(v85 + 72);
    *(void *)(v84 + 80) = *(void *)(v85 + 80);
    *(void *)(v84 + 88) = *(void *)(v85 + 88);
    uint64_t v120 = *(void **)(v85 + 96);
    *(void *)(v84 + 96) = v120;
    *(unsigned char *)(v84 + 104) = *(unsigned char *)(v85 + 104);
    *(unsigned char *)(v84 + 105) = *(unsigned char *)(v85 + 105);
    *(void *)(v84 + 112) = *(void *)(v85 + 112);
    *(void *)(v84 + 120) = *(void *)(v85 + 120);
    *(void *)(v84 + 128) = *(void *)(v85 + 128);
    *(void *)(v84 + 136) = *(void *)(v85 + 136);
    *(void *)(v84 + 144) = *(void *)(v85 + 144);
    *(void *)(v84 + 152) = *(void *)(v85 + 152);
    *(void *)(v84 + 160) = *(void *)(v85 + 160);
    *(void *)(v84 + 168) = *(void *)(v85 + 168);
    *(unsigned char *)(v84 + 176) = *(unsigned char *)(v85 + 176);
    *(void *)(v84 + 184) = *(void *)(v85 + 184);
    uint64_t v102 = *(void *)(v85 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v103 = v120;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v102)
    {
      *(void *)(v84 + 192) = v102;
      *(void *)(v84 + 200) = *(void *)(v85 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v84 + 192) = *(_OWORD *)(v85 + 192);
    }
    *(void *)(v84 + 208) = *(void *)(v85 + 208);
    *(void *)(v84 + 216) = *(void *)(v85 + 216);
    *(void *)(v84 + 224) = *(void *)(v85 + 224);
    *(void *)(v84 + 232) = *(void *)(v85 + 232);
    *(void *)(v84 + 240) = *(void *)(v85 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v88 = *(_OWORD *)v85;
    long long v89 = *(_OWORD *)(v85 + 16);
    long long v90 = *(_OWORD *)(v85 + 48);
    *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
    *(_OWORD *)(v84 + 48) = v90;
    *(_OWORD *)unint64_t v84 = v88;
    *(_OWORD *)(v84 + 16) = v89;
    long long v91 = *(_OWORD *)(v85 + 64);
    long long v92 = *(_OWORD *)(v85 + 80);
    long long v93 = *(_OWORD *)(v85 + 112);
    *(_OWORD *)(v84 + 96) = *(_OWORD *)(v85 + 96);
    *(_OWORD *)(v84 + 112) = v93;
    *(_OWORD *)(v84 + 64) = v91;
    *(_OWORD *)(v84 + 80) = v92;
    long long v94 = *(_OWORD *)(v85 + 128);
    long long v95 = *(_OWORD *)(v85 + 144);
    long long v96 = *(_OWORD *)(v85 + 176);
    *(_OWORD *)(v84 + 160) = *(_OWORD *)(v85 + 160);
    *(_OWORD *)(v84 + 176) = v96;
    *(_OWORD *)(v84 + 128) = v94;
    *(_OWORD *)(v84 + 144) = v95;
    long long v97 = *(_OWORD *)(v85 + 192);
    long long v98 = *(_OWORD *)(v85 + 208);
    long long v99 = *(_OWORD *)(v85 + 224);
    *(void *)(v84 + 240) = *(void *)(v85 + 240);
    *(_OWORD *)(v84 + 208) = v98;
    *(_OWORD *)(v84 + 224) = v99;
    *(_OWORD *)(v84 + 192) = v97;
  }
  int v104 = (_OWORD *)((v84 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v105 = (long long *)((v85 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v106 = *v105;
  *(_OWORD *)((char *)v104 + 9) = *(long long *)((char *)v105 + 9);
  _OWORD *v104 = v106;
  unint64_t v107 = (v84 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v108 = (v85 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v109 = *(_OWORD *)v108;
  *(unsigned char *)(v107 + 16) = *(unsigned char *)(v108 + 16);
  *(_OWORD *)unint64_t v107 = v109;
  unint64_t v110 = (void *)((v84 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v111 = (v85 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v112 = *(void *)v111;
  v111 += 15;
  void *v110 = v112;
  uint64_t v113 = (void *)(((unint64_t)v110 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v114 = *(void *)(v111 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v115 = *(void *)((v111 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_10018B584(v114, v115);
  *uint64_t v113 = v114;
  v113[1] = v115;
  return v121;
}

uint64_t sub_10060C860(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 56);
  uint64_t v135 = a1;
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v6(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 | v17 | 7;
  uint64_t v19 = v8 + v18;
  uint64_t v20 = (v8 + v18 + v10) & ~v18;
  uint64_t v21 = (v19 + v11) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v20, v21, v12);
  uint64_t v22 = *(void *)(v13 + 64) + 7;
  uint64_t v23 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = ((unint64_t)v23 + v17 + 8) & ~v17;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 24))(v25, ((unint64_t)v24 + v17 + 8) & ~v17, v15);
  uint64_t v26 = *(void *)(v16 + 64) + 7;
  unint64_t v27 = (void *)((v26 + v25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (v26 + (((unint64_t)v24 + v17 + 8) & ~v17)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  v28 += 15;
  *unint64_t v27 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v30 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v30 = *(void *)(v28 & 0xFFFFFFFFFFFFFFF8);
  v30[1] = *(void *)((v28 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v31 = ((((v26 + ((v17 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = (void *)(v31 + v20);
  unint64_t v33 = v31 + v21;
  *uint64_t v32 = *(void *)(v31 + v21);
  v32[1] = *(void *)(v31 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_10096B0E0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v35;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v37 | 7) + 16;
  uint64_t v39 = ((unint64_t)v32 + v38) & ~(v37 | 7);
  uint64_t v40 = (v38 + v33) & ~(v37 | 7);
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  char v41 = *(unsigned char *)(v40 + 8);
  *(_DWORD *)(v39 + 4) = *(_DWORD *)(v40 + 4);
  *(unsigned char *)(v39 + 8) = v41;
  *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
  uint64_t v136 = v40;
  uint64_t v137 = v39;
  uint64_t v42 = (v37 + 12 + v39) & ~v37;
  uint64_t v43 = (v37 + 12 + v40) & ~v37;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24);
  v44(v42, v43, v34);
  size_t v45 = *(void *)(v35 + 64);
  uint64_t v46 = (v45 + v37 + v42) & ~v37;
  unint64_t v134 = (void (*)(void *, const void *, uint64_t))v44;
  v44(v46, (v45 + v37 + v43) & ~v37, v34);
  uint64_t v47 = (unsigned char *)(v46 + v45);
  uint64_t v48 = (unsigned char *)(((v45 + v37 + v43) & ~v37) + v45);
  unsigned char *v47 = *v48;
  v47[1] = v48[1];
  v47[2] = v48[2];
  v47[3] = v48[3];
  v47[4] = v48[4];
  unint64_t v49 = (v46 + v45 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = (unint64_t)(v48 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v49 = *(void *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  *(unsigned char *)(v49 + 17) = *(unsigned char *)(v50 + 17);
  *(unsigned char *)(v49 + 18) = *(unsigned char *)(v50 + 18);
  *(unsigned char *)(v49 + 19) = *(unsigned char *)(v50 + 19);
  unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  *(unsigned char *)(v51 + 9) = *(unsigned char *)(v52 + 9);
  *(unsigned char *)(v51 + 10) = *(unsigned char *)(v52 + 10);
  *(unsigned char *)(v51 + 11) = *(unsigned char *)(v52 + 11);
  *(unsigned char *)(v51 + 12) = *(unsigned char *)(v52 + 12);
  unint64_t v53 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
  Swift::String v54 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v53 = *v54;
  unint64_t v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v55 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
  *(unsigned char *)(v55 + 9) = *(unsigned char *)(v56 + 9);
  unint64_t v57 = (void *)((v37 + 10 + v55) & ~v37);
  uint64_t v58 = (void *)((v37 + 10 + v56) & ~v37);
  Swift::String v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  LODWORD(v50) = v59(v57, 1, v34);
  int v60 = v59(v58, 1, v34);
  if (v50)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v36 + 16))(v57, v58, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v57, 0, 1, v34);
      goto LABEL_12;
    }
    int v61 = *(_DWORD *)(v36 + 84);
  }
  else
  {
    if (!v60)
    {
      v134(v57, v58, v34);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v57, v34);
    int v61 = *(_DWORD *)(v36 + 84);
  }
  if (v61) {
    size_t v62 = v45;
  }
  else {
    size_t v62 = v45 + 1;
  }
  memcpy(v57, v58, v62);
LABEL_12:
  if (*(_DWORD *)(v36 + 84)) {
    size_t v63 = v45;
  }
  else {
    size_t v63 = v45 + 1;
  }
  uint64_t v64 = (uint64_t)v57 + v63 + 7;
  Swift::String v65 = (void *)(((unint64_t)v58 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v66 = (v64 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v64 & 0xFFFFFFFFFFFFFFF8) = *v65;
  unint64_t v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v68 = v66 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)unint64_t v68 = v70;
  unint64_t v71 = (void *)(((unint64_t)v65 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v67 & 0xFFFFFFFFFFFFFFF8) = *v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = (uint64_t *)(((v67 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = (uint64_t *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v74 = v72[1];
  unint64_t v75 = v73[1];
  uint64_t v76 = v75 & 0x3000000000000000;
  if ((v74 & 0x3000000000000000) != 0)
  {
    if (!v76)
    {
      uint64_t v77 = *v73;
      sub_10001EBB0(*v73, v75);
      uint64_t *v72 = v77;
      v72[1] = v75;
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v76)
  {
    sub_10001E9C0(*v72, v74);
LABEL_20:
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    goto LABEL_21;
  }
  uint64_t v110 = *v73;
  sub_10001EBB0(*v73, v75);
  uint64_t v111 = *v72;
  unint64_t v112 = v72[1];
  uint64_t *v72 = v110;
  v72[1] = v75;
  sub_10001E9C0(v111, v112);
LABEL_21:
  unint64_t v78 = ((unint64_t)v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = ((unint64_t)v73 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = *(void *)v79;
  *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
  *(void *)unint64_t v78 = v80;
  *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
  unint64_t v81 = (v78 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v82 = (v79 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v83 = *(_DWORD *)v82;
  *(unsigned char *)(v81 + 4) = *(unsigned char *)(v82 + 4);
  *(_DWORD *)unint64_t v81 = v83;
  unint64_t v84 = (void *)((v78 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v85 = (void *)((v79 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v89 = ((((((((((((v37
                  + 10
                  + ((((((v45 + ((((v37 + 12) | v37) + v45) & ~v37) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37)
                + v63
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v86 = v89 + v137;
  unint64_t v87 = v89 + v136;
  unint64_t v88 = *(void *)(v89 + v137 + 16);
  LODWORD(v89) = -1;
  if (v88 >= 0xFFFFFFFF) {
    int v90 = -1;
  }
  else {
    int v90 = v88;
  }
  int v91 = v90 - 1;
  if (*(void *)(v87 + 16) < 0xFFFFFFFFuLL) {
    unint64_t v89 = *(void *)(v87 + 16);
  }
  int v92 = v89 - 1;
  if (v91 < 0)
  {
    if ((v92 & 0x80000000) == 0)
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v86 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    *(void *)unint64_t v86 = *(void *)v87;
    *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
    *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
    uint64_t v113 = *(void *)(v87 + 16);
    swift_errorRetain();
    *(void *)(v86 + 16) = v113;
    swift_errorRelease();
    uint64_t v114 = *(void *)(v87 + 24);
    swift_errorRetain();
    *(void *)(v86 + 24) = v114;
    swift_errorRelease();
    *(unsigned char *)(v86 + 32) = *(unsigned char *)(v87 + 32);
    *(unsigned char *)(v86 + 33) = *(unsigned char *)(v87 + 33);
    *(unsigned char *)(v86 + 34) = *(unsigned char *)(v87 + 34);
    *(void *)(v86 + 40) = *(void *)(v87 + 40);
    *(void *)(v86 + 48) = *(void *)(v87 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 56) = *(void *)(v87 + 56);
    *(void *)(v86 + 64) = *(void *)(v87 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v86 + 72) = *(unsigned char *)(v87 + 72);
    *(void *)(v86 + 80) = *(void *)(v87 + 80);
    *(void *)(v86 + 88) = *(void *)(v87 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v115 = *(void **)(v86 + 96);
    uint64_t v116 = *(void **)(v87 + 96);
    *(void *)(v86 + 96) = v116;
    id v117 = v116;

    *(unsigned char *)(v86 + 104) = *(unsigned char *)(v87 + 104);
    *(unsigned char *)(v86 + 105) = *(unsigned char *)(v87 + 105);
    *(void *)(v86 + 112) = *(void *)(v87 + 112);
    *(void *)(v86 + 120) = *(void *)(v87 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 128) = *(void *)(v87 + 128);
    *(void *)(v86 + 136) = *(void *)(v87 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 144) = *(void *)(v87 + 144);
    *(void *)(v86 + 152) = *(void *)(v87 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 160) = *(void *)(v87 + 160);
    *(void *)(v86 + 168) = *(void *)(v87 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v86 + 176) = *(unsigned char *)(v87 + 176);
    *(void *)(v86 + 184) = *(void *)(v87 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v118 = *(void *)(v87 + 192);
    if (*(void *)(v86 + 192))
    {
      if (v118)
      {
        *(void *)(v86 + 192) = v118;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v86 + 200) = *(void *)(v87 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t v109 = v135;
        *(void *)(v86 + 208) = *(void *)(v87 + 208);
        *(void *)(v86 + 216) = *(void *)(v87 + 216);
        *(void *)(v86 + 224) = *(void *)(v87 + 224);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v86 + 232) = *(void *)(v87 + 232);
        *(void *)(v86 + 240) = *(void *)(v87 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      sub_1002651E8(v86 + 192);
    }
    else if (v118)
    {
      *(void *)(v86 + 192) = v118;
      *(void *)(v86 + 200) = *(void *)(v87 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    *(_OWORD *)(v86 + 192) = *(_OWORD *)(v87 + 192);
    goto LABEL_45;
  }
  if ((v92 & 0x80000000) == 0)
  {
LABEL_34:
    long long v97 = *(_OWORD *)v87;
    long long v98 = *(_OWORD *)(v87 + 16);
    long long v99 = *(_OWORD *)(v87 + 48);
    *(_OWORD *)(v86 + 32) = *(_OWORD *)(v87 + 32);
    *(_OWORD *)(v86 + 48) = v99;
    *(_OWORD *)unint64_t v86 = v97;
    *(_OWORD *)(v86 + 16) = v98;
    long long v100 = *(_OWORD *)(v87 + 64);
    long long v101 = *(_OWORD *)(v87 + 80);
    long long v102 = *(_OWORD *)(v87 + 112);
    *(_OWORD *)(v86 + 96) = *(_OWORD *)(v87 + 96);
    *(_OWORD *)(v86 + 112) = v102;
    *(_OWORD *)(v86 + 64) = v100;
    *(_OWORD *)(v86 + 80) = v101;
    long long v103 = *(_OWORD *)(v87 + 128);
    long long v104 = *(_OWORD *)(v87 + 144);
    long long v105 = *(_OWORD *)(v87 + 176);
    *(_OWORD *)(v86 + 160) = *(_OWORD *)(v87 + 160);
    *(_OWORD *)(v86 + 176) = v105;
    *(_OWORD *)(v86 + 128) = v103;
    *(_OWORD *)(v86 + 144) = v104;
    long long v106 = *(_OWORD *)(v87 + 192);
    long long v107 = *(_OWORD *)(v87 + 208);
    long long v108 = *(_OWORD *)(v87 + 224);
    *(void *)(v86 + 240) = *(void *)(v87 + 240);
    *(_OWORD *)(v86 + 208) = v107;
    *(_OWORD *)(v86 + 224) = v108;
    *(_OWORD *)(v86 + 192) = v106;
    uint64_t v109 = v135;
    goto LABEL_46;
  }
  *(void *)unint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
  uint64_t v93 = *(void *)(v87 + 16);
  swift_errorRetain();
  *(void *)(v86 + 16) = v93;
  uint64_t v94 = *(void *)(v87 + 24);
  swift_errorRetain();
  *(void *)(v86 + 24) = v94;
  *(unsigned char *)(v86 + 32) = *(unsigned char *)(v87 + 32);
  *(unsigned char *)(v86 + 33) = *(unsigned char *)(v87 + 33);
  *(unsigned char *)(v86 + 34) = *(unsigned char *)(v87 + 34);
  *(void *)(v86 + 40) = *(void *)(v87 + 40);
  *(void *)(v86 + 48) = *(void *)(v87 + 48);
  *(void *)(v86 + 56) = *(void *)(v87 + 56);
  *(void *)(v86 + 64) = *(void *)(v87 + 64);
  *(unsigned char *)(v86 + 72) = *(unsigned char *)(v87 + 72);
  *(void *)(v86 + 80) = *(void *)(v87 + 80);
  *(void *)(v86 + 88) = *(void *)(v87 + 88);
  unint64_t v138 = *(void **)(v87 + 96);
  *(void *)(v86 + 96) = v138;
  *(unsigned char *)(v86 + 104) = *(unsigned char *)(v87 + 104);
  *(unsigned char *)(v86 + 105) = *(unsigned char *)(v87 + 105);
  *(void *)(v86 + 112) = *(void *)(v87 + 112);
  *(void *)(v86 + 120) = *(void *)(v87 + 120);
  *(void *)(v86 + 128) = *(void *)(v87 + 128);
  *(void *)(v86 + 136) = *(void *)(v87 + 136);
  *(void *)(v86 + 144) = *(void *)(v87 + 144);
  *(void *)(v86 + 152) = *(void *)(v87 + 152);
  *(void *)(v86 + 160) = *(void *)(v87 + 160);
  *(void *)(v86 + 168) = *(void *)(v87 + 168);
  *(unsigned char *)(v86 + 176) = *(unsigned char *)(v87 + 176);
  *(void *)(v86 + 184) = *(void *)(v87 + 184);
  uint64_t v95 = *(void *)(v87 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v96 = v138;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v95)
  {
    *(void *)(v86 + 192) = v95;
    *(void *)(v86 + 200) = *(void *)(v87 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v86 + 192) = *(_OWORD *)(v87 + 192);
  }
  uint64_t v109 = v135;
  *(void *)(v86 + 208) = *(void *)(v87 + 208);
  *(void *)(v86 + 216) = *(void *)(v87 + 216);
  *(void *)(v86 + 224) = *(void *)(v87 + 224);
  *(void *)(v86 + 232) = *(void *)(v87 + 232);
  *(void *)(v86 + 240) = *(void *)(v87 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_46:
  uint64_t v119 = (_OWORD *)((v86 + 255) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v120 = (long long *)((v87 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v121 = *v120;
  *(_OWORD *)((char *)v119 + 9) = *(long long *)((char *)v120 + 9);
  *uint64_t v119 = v121;
  unint64_t v122 = (v86 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v123 = (v87 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v124 = *(_OWORD *)v123;
  *(unsigned char *)(v122 + 16) = *(unsigned char *)(v123 + 16);
  *(_OWORD *)unint64_t v122 = v124;
  unint64_t v125 = (void *)((v86 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v126 = (v87 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v127 = *(void *)v126;
  v126 += 15;
  *unint64_t v125 = v127;
  uint64_t v128 = (uint64_t *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v129 = *(void *)(v126 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v130 = *(void *)((v126 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_10018B584(v129, v130);
  uint64_t v131 = *v128;
  unint64_t v132 = v128[1];
  *uint64_t v128 = v129;
  v128[1] = v130;
  sub_1000CF144(v131, v132);
  return v109;
}

uint64_t sub_10060D56C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 48);
  uint64_t v99 = a1;
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v6(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  LODWORD(v7) = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v7 | v16 | 7;
  uint64_t v18 = (v8 + v17 + v10) & ~v17;
  uint64_t v19 = (v8 + v17 + v11) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v18, v19, v12);
  uint64_t v20 = *(void *)(v13 + 64) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v23, v24, v14);
  uint64_t v25 = *(void *)(v15 + 64) + 7;
  uint64_t v26 = (void *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)((v25 + v24) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  *(_OWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = ((((v25 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v29 = v28 + v18;
  unint64_t v30 = (_OWORD *)(v28 + v19);
  *(_OWORD *)(v28 + v18) = *v30;
  uint64_t v31 = sub_10096B0E0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v32;
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = (v34 | 7) + 16;
  uint64_t v36 = (v35 + v29) & ~(v34 | 7);
  uint64_t v37 = ((unint64_t)v30 + v35) & ~(v34 | 7);
  *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
  char v38 = *(unsigned char *)(v37 + 8);
  *(_DWORD *)(v36 + 4) = *(_DWORD *)(v37 + 4);
  *(unsigned char *)(v36 + 8) = v38;
  *(_WORD *)(v36 + 10) = *(_WORD *)(v37 + 0xA);
  uint64_t v98 = v36;
  uint64_t v39 = (v34 + 12 + v36) & ~v34;
  uint64_t v97 = v37;
  uint64_t v40 = (v34 + 12 + v37) & ~v34;
  char v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  v41(v39, v40, v31);
  size_t v42 = *(void *)(v32 + 64);
  uint64_t v43 = (v42 + v34 + v39) & ~v34;
  uint64_t v44 = (v42 + v34 + v40) & ~v34;
  v41(v43, v44, v31);
  size_t v45 = (unsigned char *)(v43 + v42);
  *size_t v45 = *(unsigned char *)(v44 + v42);
  v45[1] = *(unsigned char *)(v44 + v42 + 1);
  v45[2] = *(unsigned char *)(v44 + v42 + 2);
  v45[3] = *(unsigned char *)(v44 + v42 + 3);
  v45[4] = *(unsigned char *)(v44 + v42 + 4);
  unint64_t v46 = (v43 + v42 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v44 + v42 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v46 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  *(unsigned char *)(v46 + 17) = *(unsigned char *)(v47 + 17);
  *(unsigned char *)(v46 + 18) = *(unsigned char *)(v47 + 18);
  *(unsigned char *)(v46 + 19) = *(unsigned char *)(v47 + 19);
  unint64_t v48 = (v46 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v47 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  *(unsigned char *)(v48 + 9) = *(unsigned char *)(v49 + 9);
  *(unsigned char *)(v48 + 10) = *(unsigned char *)(v49 + 10);
  *(unsigned char *)(v48 + 11) = *(unsigned char *)(v49 + 11);
  *(unsigned char *)(v48 + 12) = *(unsigned char *)(v49 + 12);
  unint64_t v50 = (void *)((v46 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v50 = *v51;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
  Swift::String v54 = (void *)((v34 + 10 + v52) & ~v34);
  unint64_t v55 = (const void *)((v34 + 10 + v53) & ~v34);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v55, 1, v31))
  {
    int v56 = *(_DWORD *)(v33 + 84);
    if (v56) {
      size_t v57 = v42;
    }
    else {
      size_t v57 = v42 + 1;
    }
    memcpy(v54, v55, v57);
  }
  else
  {
    v41((uint64_t)v54, (uint64_t)v55, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v54, 0, 1, v31);
    int v56 = *(_DWORD *)(v33 + 84);
  }
  if (v56) {
    size_t v58 = v42;
  }
  else {
    size_t v58 = v42 + 1;
  }
  Swift::String v59 = (void *)(((unint64_t)v55 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)(((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v60 = *v59;
  unint64_t v61 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = *(void *)v62;
  *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
  *(void *)unint64_t v61 = v63;
  uint64_t v64 = (void *)(((unint64_t)v60 + 31) & 0xFFFFFFFFFFFFFFF8);
  Swift::String v65 = (void *)(((unint64_t)v59 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v64 = *v65;
  unint64_t v66 = (_OWORD *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v67 = (_OWORD *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v66 = *v67;
  unint64_t v68 = ((unint64_t)v66 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = ((unint64_t)v67 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)unint64_t v68 = v70;
  *(unsigned char *)(v68 + 9) = *(unsigned char *)(v69 + 9);
  unint64_t v71 = (v68 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v72 = (v69 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v63) = *(_DWORD *)v72;
  *(unsigned char *)(v71 + 4) = *(unsigned char *)(v72 + 4);
  *(_DWORD *)unint64_t v71 = v63;
  *(_OWORD *)((v68 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v69 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = ((((((((((((v34
                  + 10
                  + ((((((v42 + ((((v34 + 12) | v34) + v42) & ~v34) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v34)
                + v58
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v74 = v73 + v98;
  unint64_t v75 = v73 + v97;
  long long v76 = *(_OWORD *)(v75 + 112);
  long long v78 = *(_OWORD *)(v75 + 64);
  long long v77 = *(_OWORD *)(v75 + 80);
  *(_OWORD *)(v74 + 96) = *(_OWORD *)(v75 + 96);
  *(_OWORD *)(v74 + 112) = v76;
  *(_OWORD *)(v74 + 64) = v78;
  *(_OWORD *)(v74 + 80) = v77;
  long long v79 = *(_OWORD *)(v75 + 176);
  long long v81 = *(_OWORD *)(v75 + 128);
  long long v80 = *(_OWORD *)(v75 + 144);
  *(_OWORD *)(v74 + 160) = *(_OWORD *)(v75 + 160);
  *(_OWORD *)(v74 + 176) = v79;
  *(_OWORD *)(v74 + 128) = v81;
  *(_OWORD *)(v74 + 144) = v80;
  long long v83 = *(_OWORD *)(v75 + 208);
  long long v82 = *(_OWORD *)(v75 + 224);
  long long v84 = *(_OWORD *)(v75 + 192);
  *(void *)(v74 + 240) = *(void *)(v75 + 240);
  *(_OWORD *)(v74 + 208) = v83;
  *(_OWORD *)(v74 + 224) = v82;
  *(_OWORD *)(v74 + 192) = v84;
  long long v85 = *(_OWORD *)v75;
  long long v86 = *(_OWORD *)(v75 + 16);
  long long v87 = *(_OWORD *)(v75 + 48);
  *(_OWORD *)(v74 + 32) = *(_OWORD *)(v75 + 32);
  *(_OWORD *)(v74 + 48) = v87;
  *(_OWORD *)unint64_t v74 = v85;
  *(_OWORD *)(v74 + 16) = v86;
  unint64_t v88 = (_OWORD *)((v74 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v89 = (long long *)((v75 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v90 = *v89;
  *(_OWORD *)((char *)v88 + 9) = *(long long *)((char *)v89 + 9);
  _OWORD *v88 = v90;
  unint64_t v91 = (v74 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v92 = (v75 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v93 = *(_OWORD *)v92;
  *(unsigned char *)(v91 + 16) = *(unsigned char *)(v92 + 16);
  *(_OWORD *)unint64_t v91 = v93;
  uint64_t v94 = (void *)((v74 + 311) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v95 = (void *)((v75 + 311) & 0xFFFFFFFFFFFFFFF8);
  void *v94 = *v95;
  *(_OWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8);
  return v99;
}

uint64_t sub_10060DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v119 = *(void *)(v7 + 24);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 40);
  uint64_t v117 = a1;
  uint64_t v9 = (v119 + v8 + a1) & ~v8;
  uint64_t v10 = (v119 + v8 + a2) & ~v8;
  v6(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 | v16 | 7;
  uint64_t v18 = (v119 + v17 + v9) & ~v17;
  uint64_t v19 = (v119 + v17 + v10) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v18, v19, v11);
  uint64_t v20 = *(void *)(v12 + 64) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v23, v24, v14);
  uint64_t v25 = *(void *)(v15 + 64) + 7;
  uint64_t v26 = (void *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (v25 + v24) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  v27 += 15;
  *uint64_t v26 = v28;
  swift_bridgeObjectRelease();
  unint64_t v29 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *(void *)(v27 & 0xFFFFFFFFFFFFFFF8);
  v29[1] = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  unint64_t v30 = ((((v25 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v31 = (void *)(v30 + v18);
  unint64_t v32 = v30 + v19;
  *uint64_t v31 = *(void *)(v30 + v19);
  v31[1] = *(void *)(v30 + v19 + 8);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_10096B0E0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = v34;
  uint64_t v36 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v37 = (v36 | 7) + 16;
  uint64_t v38 = ((unint64_t)v31 + v37) & ~(v36 | 7);
  uint64_t v39 = (v37 + v32) & ~(v36 | 7);
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  char v40 = *(unsigned char *)(v39 + 8);
  *(_DWORD *)(v38 + 4) = *(_DWORD *)(v39 + 4);
  *(unsigned char *)(v38 + 8) = v40;
  *(_WORD *)(v38 + 10) = *(_WORD *)(v39 + 0xA);
  uint64_t v118 = v39;
  uint64_t v120 = v38;
  uint64_t v41 = (v36 + 12 + v38) & ~v36;
  uint64_t v42 = (v36 + 12 + v39) & ~v36;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 40);
  v43(v41, v42, v33);
  size_t v44 = *(void *)(v34 + 64);
  uint64_t v45 = (v44 + v36 + v41) & ~v36;
  uint64_t v46 = (v44 + v36 + v42) & ~v36;
  uint64_t v116 = (void (*)(void *, const void *, uint64_t))v43;
  v43(v45, v46, v33);
  unint64_t v47 = (unsigned char *)(v45 + v44);
  unsigned char *v47 = *(unsigned char *)(v46 + v44);
  v47[1] = *(unsigned char *)(v46 + v44 + 1);
  v47[2] = *(unsigned char *)(v46 + v44 + 2);
  v47[3] = *(unsigned char *)(v46 + v44 + 3);
  v47[4] = *(unsigned char *)(v46 + v44 + 4);
  unint64_t v48 = (v45 + v44 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v46 + v44 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  *(unsigned char *)(v48 + 17) = *(unsigned char *)(v49 + 17);
  *(unsigned char *)(v48 + 18) = *(unsigned char *)(v49 + 18);
  *(unsigned char *)(v48 + 19) = *(unsigned char *)(v49 + 19);
  unint64_t v50 = (v48 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
  *(unsigned char *)(v50 + 9) = *(unsigned char *)(v51 + 9);
  *(unsigned char *)(v50 + 10) = *(unsigned char *)(v51 + 10);
  *(unsigned char *)(v50 + 11) = *(unsigned char *)(v51 + 11);
  *(unsigned char *)(v50 + 12) = *(unsigned char *)(v51 + 12);
  unint64_t v52 = (void *)((v48 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v52 = *v53;
  unint64_t v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v54 = *(void *)v55;
  *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
  *(unsigned char *)(v54 + 9) = *(unsigned char *)(v55 + 9);
  int v56 = (void *)((v36 + 10 + v54) & ~v36);
  size_t v57 = (void *)((v36 + 10 + v55) & ~v36);
  size_t v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v42) = v58(v56, 1, v33);
  int v59 = v58(v57, 1, v33);
  if (v42)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 32))(v56, v57, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v56, 0, 1, v33);
      goto LABEL_12;
    }
    int v60 = *(_DWORD *)(v35 + 84);
  }
  else
  {
    if (!v59)
    {
      v116(v56, v57, v33);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v56, v33);
    int v60 = *(_DWORD *)(v35 + 84);
  }
  if (v60) {
    size_t v61 = v44;
  }
  else {
    size_t v61 = v44 + 1;
  }
  memcpy(v56, v57, v61);
LABEL_12:
  if (*(_DWORD *)(v35 + 84)) {
    size_t v62 = v44;
  }
  else {
    size_t v62 = v44 + 1;
  }
  uint64_t v63 = (uint64_t)v56 + v62 + 7;
  uint64_t v64 = (void *)(((unint64_t)v57 + v62 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v65 = (v63 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v63 & 0xFFFFFFFFFFFFFFF8) = *v64;
  unint64_t v66 = (v63 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  *(void *)unint64_t v67 = v69;
  uint64_t v70 = (void *)(((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v66 & 0xFFFFFFFFFFFFFFF8) = *v70;
  swift_bridgeObjectRelease();
  unint64_t v71 = (uint64_t *)(((v66 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v72 = ((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = v71[1];
  if ((v73 & 0x3000000000000000) != 0) {
    goto LABEL_18;
  }
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v74 & 0x3000000000000000) != 0)
  {
    sub_10001E9C0(*v71, v73);
LABEL_18:
    *(_OWORD *)unint64_t v71 = *(_OWORD *)v72;
    goto LABEL_19;
  }
  uint64_t v113 = *v71;
  *unint64_t v71 = *(void *)v72;
  v71[1] = v74;
  sub_10001E9C0(v113, v73);
LABEL_19:
  unint64_t v75 = ((unint64_t)v71 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v77 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(void *)unint64_t v75 = v77;
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  unint64_t v78 = (v75 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v79 = (v76 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v80 = *(_DWORD *)v79;
  *(unsigned char *)(v78 + 4) = *(unsigned char *)(v79 + 4);
  *(_DWORD *)unint64_t v78 = v80;
  long long v81 = (void *)((v75 + 25) & 0xFFFFFFFFFFFFFFF8);
  long long v82 = (void *)((v76 + 25) & 0xFFFFFFFFFFFFFFF8);
  *long long v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRelease();
  unint64_t v83 = ((((((((((((v36
                  + 10
                  + ((((((v44 + ((((v36 + 12) | v36) + v44) & ~v36) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v36)
                + v62
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v84 = v83 + v120;
  unint64_t v85 = v83 + v118;
  unint64_t v86 = *(void *)(v83 + v120 + 16);
  int v87 = -1;
  if (v86 < 0xFFFFFFFF) {
    int v87 = v86;
  }
  if (v87 - 1 >= 0) {
    goto LABEL_28;
  }
  unint64_t v88 = *(void *)(v85 + 16);
  if (v88 >= 0xFFFFFFFF) {
    LODWORD(v88) = -1;
  }
  if ((int)v88 - 1 < 0)
  {
    *(void *)unint64_t v84 = *(void *)v85;
    *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
    *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
    *(void *)(v84 + 16) = *(void *)(v85 + 16);
    swift_errorRelease();
    *(void *)(v84 + 24) = *(void *)(v85 + 24);
    swift_errorRelease();
    *(unsigned char *)(v84 + 32) = *(unsigned char *)(v85 + 32);
    *(unsigned char *)(v84 + 33) = *(unsigned char *)(v85 + 33);
    *(unsigned char *)(v84 + 34) = *(unsigned char *)(v85 + 34);
    *(void *)(v84 + 40) = *(void *)(v85 + 40);
    *(void *)(v84 + 48) = *(void *)(v85 + 48);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 56) = *(void *)(v85 + 56);
    *(void *)(v84 + 64) = *(void *)(v85 + 64);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v84 + 72) = *(unsigned char *)(v85 + 72);
    *(void *)(v84 + 80) = *(void *)(v85 + 80);
    *(void *)(v84 + 88) = *(void *)(v85 + 88);
    swift_bridgeObjectRelease();
    uint64_t v114 = *(void **)(v84 + 96);
    *(void *)(v84 + 96) = *(void *)(v85 + 96);

    *(unsigned char *)(v84 + 104) = *(unsigned char *)(v85 + 104);
    *(unsigned char *)(v84 + 105) = *(unsigned char *)(v85 + 105);
    *(void *)(v84 + 112) = *(void *)(v85 + 112);
    *(void *)(v84 + 120) = *(void *)(v85 + 120);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 128) = *(void *)(v85 + 128);
    *(void *)(v84 + 136) = *(void *)(v85 + 136);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 144) = *(void *)(v85 + 144);
    *(void *)(v84 + 152) = *(void *)(v85 + 152);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 160) = *(void *)(v85 + 160);
    *(void *)(v84 + 168) = *(void *)(v85 + 168);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v84 + 176) = *(unsigned char *)(v85 + 176);
    *(void *)(v84 + 184) = *(void *)(v85 + 184);
    swift_bridgeObjectRelease();
    uint64_t v115 = *(void *)(v85 + 192);
    if (*(void *)(v84 + 192))
    {
      if (v115)
      {
        *(void *)(v84 + 192) = v115;
        swift_bridgeObjectRelease();
        *(void *)(v84 + 200) = *(void *)(v85 + 200);
        swift_bridgeObjectRelease();
LABEL_36:
        *(void *)(v84 + 208) = *(void *)(v85 + 208);
        *(void *)(v84 + 216) = *(void *)(v85 + 216);
        *(void *)(v84 + 224) = *(void *)(v85 + 224);
        swift_bridgeObjectRelease();
        *(void *)(v84 + 232) = *(void *)(v85 + 232);
        *(void *)(v84 + 240) = *(void *)(v85 + 240);
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      sub_1002651E8(v84 + 192);
    }
    *(_OWORD *)(v84 + 192) = *(_OWORD *)(v85 + 192);
    goto LABEL_36;
  }
  swift_errorRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v84 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_28:
  long long v89 = *(_OWORD *)v85;
  long long v90 = *(_OWORD *)(v85 + 16);
  long long v91 = *(_OWORD *)(v85 + 48);
  *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
  *(_OWORD *)(v84 + 48) = v91;
  *(_OWORD *)unint64_t v84 = v89;
  *(_OWORD *)(v84 + 16) = v90;
  long long v92 = *(_OWORD *)(v85 + 64);
  long long v93 = *(_OWORD *)(v85 + 80);
  long long v94 = *(_OWORD *)(v85 + 112);
  *(_OWORD *)(v84 + 96) = *(_OWORD *)(v85 + 96);
  *(_OWORD *)(v84 + 112) = v94;
  *(_OWORD *)(v84 + 64) = v92;
  *(_OWORD *)(v84 + 80) = v93;
  long long v95 = *(_OWORD *)(v85 + 128);
  long long v96 = *(_OWORD *)(v85 + 144);
  long long v97 = *(_OWORD *)(v85 + 176);
  *(_OWORD *)(v84 + 160) = *(_OWORD *)(v85 + 160);
  *(_OWORD *)(v84 + 176) = v97;
  *(_OWORD *)(v84 + 128) = v95;
  *(_OWORD *)(v84 + 144) = v96;
  long long v98 = *(_OWORD *)(v85 + 192);
  long long v99 = *(_OWORD *)(v85 + 208);
  long long v100 = *(_OWORD *)(v85 + 224);
  *(void *)(v84 + 240) = *(void *)(v85 + 240);
  *(_OWORD *)(v84 + 208) = v99;
  *(_OWORD *)(v84 + 224) = v100;
  *(_OWORD *)(v84 + 192) = v98;
LABEL_29:
  long long v101 = (_OWORD *)((v84 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v102 = (long long *)((v85 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v103 = *v102;
  *(_OWORD *)((char *)v101 + 9) = *(long long *)((char *)v102 + 9);
  *long long v101 = v103;
  unint64_t v104 = (v84 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v105 = (v85 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v106 = *(_OWORD *)v105;
  *(unsigned char *)(v104 + 16) = *(unsigned char *)(v105 + 16);
  *(_OWORD *)unint64_t v104 = v106;
  long long v107 = (void *)((v84 + 311) & 0xFFFFFFFFFFFFFFF8);
  long long v108 = (void *)((v85 + 311) & 0xFFFFFFFFFFFFFFF8);
  *long long v107 = *v108;
  uint64_t v109 = (uint64_t *)(((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v110 = *v109;
  unint64_t v111 = v109[1];
  *(_OWORD *)uint64_t v109 = *(_OWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_1000CF144(v110, v111);
  return v117;
}

uint64_t sub_10060E678(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = v2;
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v55 = v4;
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v54 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v49 = v5;
  if (v5 > v7) {
    unsigned int v7 = v5;
  }
  unsigned int v48 = v7;
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  if (v8 <= v3) {
    unsigned int v9 = v3;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(v2 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(void *)(v4 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = *(void *)(v10 + 64);
  if (v9 <= v13) {
    unsigned int v20 = v13;
  }
  else {
    unsigned int v20 = v9;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = 7;
  if (!v12) {
    uint64_t v22 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v14 + v15;
  uint64_t v24 = *(_DWORD *)(v4 + 80) & 0xF8 | v16 | 7;
  unint64_t v25 = ((((*(void *)(v6 + 64) + ((v16 + 8 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v26 = v18 | 7;
  uint64_t v27 = (v18 | 7) + 16;
  uint64_t v28 = v18 + 12;
  uint64_t v29 = v19 + v18;
  uint64_t v30 = v19 + 12;
  if (v21 < a2)
  {
    unint64_t v31 = ((((((v27 + ((v14 + (v23 & ~v15) + v24) & ~v24) + v25) & ~v26)
            + ((((((((((v22
                      + v19
                      + ((v18
                        + ((((((v30 + ((v29 + (v28 & ~v18)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 10) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 19) & 0xFFFFFFFFFFFFFFF8)
              + 25) & 0xFFFFFFFFFFFFFFF8)
            + 327) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v31 & 0xFFFFFFF8) != 0) {
      unsigned int v32 = 2;
    }
    else {
      unsigned int v32 = a2 - v21 + 1;
    }
    if (v32 >= 0x10000) {
      unsigned int v33 = 4;
    }
    else {
      unsigned int v33 = 2;
    }
    if (v32 < 0x100) {
      unsigned int v33 = 1;
    }
    if (v32 >= 2) {
      uint64_t v34 = v33;
    }
    else {
      uint64_t v34 = 0;
    }
    switch(v34)
    {
      case 1:
        int v35 = *((unsigned __int8 *)a1 + v31);
        if (!*((unsigned char *)a1 + v31)) {
          break;
        }
        goto LABEL_38;
      case 2:
        int v35 = *(unsigned __int16 *)((char *)a1 + v31);
        if (*(_WORD *)((char *)a1 + v31)) {
          goto LABEL_38;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10060EC14);
      case 4:
        int v35 = *(_DWORD *)((char *)a1 + v31);
        if (!v35) {
          break;
        }
LABEL_38:
        int v37 = v35 - 1;
        if ((v31 & 0xFFFFFFF8) != 0)
        {
          int v37 = 0;
          int v38 = *a1;
        }
        else
        {
          int v38 = 0;
        }
        return v21 + (v38 | v37) + 1;
      default:
        break;
    }
  }
  if (v3 == v21)
  {
    uint64_t v39 = *(uint64_t (**)(_DWORD *, void, uint64_t))(v52 + 48);
    return v39(a1, v3, AssociatedTypeWitness);
  }
  uint64_t v40 = ((((unint64_t)a1 + v23) & ~v15) + v14 + v24) & ~v24;
  if (v8 == v21)
  {
    if (v49 == v8)
    {
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v55 + 48);
LABEL_61:
      return v41(v40);
    }
    size_t v44 = (unint64_t *)((v17 + 7 + v40) & 0xFFFFFFFFFFFFFFF8);
    if (v48 > 0x7FFFFFFE)
    {
      uint64_t v40 = ((unint64_t)v44 + v16 + 8) & ~v16;
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v54 + 48);
      goto LABEL_61;
    }
    unint64_t v45 = *v44;
    goto LABEL_65;
  }
  unint64_t v42 = v25 + v40;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v46 = (v28 + ((v27 + v42) & ~v26)) & ~v18;
    if (v12 < 0x7FFFFFFE)
    {
      unint64_t v45 = *(void *)(((v30 + ((v29 + v46) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_65:
      if (v45 >= 0xFFFFFFFF) {
        LODWORD(v45) = -1;
      }
      if ((v45 + 1) >= 2) {
        return v45;
      }
      else {
        return 0;
      }
    }
    unint64_t v47 = *(uint64_t (**)(uint64_t))(v11 + 48);
    return v47(v46);
  }
  else
  {
    unint64_t v43 = *(void *)(v42 + 8);
    if (v43 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    return (v43 + 1);
  }
}

void sub_10060EC28(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v54 = v3;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v53 = v5;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v52 = v7;
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v48 = v6;
  if (v6 > v8) {
    unsigned int v8 = v6;
  }
  unsigned int v47 = v8;
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = v8;
  }
  if (v9 <= v4) {
    unsigned int v10 = v4;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = *(void *)(v11 + 64);
  if (v10 <= v14) {
    unsigned int v21 = v14;
  }
  else {
    unsigned int v21 = v10;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  uint64_t v23 = v15 + v16;
  uint64_t v24 = *(_DWORD *)(v5 + 80) & 0xF8 | v17 | 7;
  uint64_t v25 = *(void *)(v5 + 64) + 7;
  uint64_t v26 = v17 + 8;
  unint64_t v27 = ((((v18 + ((v17 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v28 = (v19 | 7) + 16;
  uint64_t v29 = v20 + v19;
  uint64_t v30 = v20 + 12;
  unint64_t v31 = (v19
       + ((((((v20 + 12 + ((v20 + v19 + ((v19 + 12) & ~v19)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v19;
  if (!v13) {
    ++v20;
  }
  size_t v32 = ((((((v28 + ((v15 + ((v15 + v16) & ~v16) + v24) & ~v24) + v27) & ~(v19 | 7))
          + ((((((((((v20 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v22 >= a3)
  {
    int v34 = 0;
  }
  else
  {
    if (((((((v28
             + ((v15 + ((v15 + v16) & ~v16) + v24) & ~v24)
             + v27) & ~(v19 | 7))
           + ((((((((((v20 + v31 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8)
             + 25) & 0xFFFFFFF8)
           + 327) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v33 = a3 - v22 + 1;
    else {
      unsigned int v33 = 2;
    }
    if (v33 >= 0x10000) {
      int v34 = 4;
    }
    else {
      int v34 = 2;
    }
    if (v33 < 0x100) {
      int v34 = 1;
    }
    if (v33 < 2) {
      int v34 = 0;
    }
  }
  if (a2 > v22)
  {
    if (v32) {
      int v35 = 1;
    }
    else {
      int v35 = a2 - v22;
    }
    if (v32)
    {
      unsigned int v36 = ~v22 + a2;
      bzero(a1, v32);
      *a1 = v36;
    }
    switch(v34)
    {
      case 1:
        *((unsigned char *)a1 + v32) = v35;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v32) = v35;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(unsigned int *)((char *)a1 + v32) = v35;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v16;
  uint64_t v38 = ~v17;
  uint64_t v39 = ~v19;
  uint64_t v40 = a1;
  switch(v34)
  {
    case 1:
      *((unsigned char *)a1 + v32) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)((char *)a1 + v32) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x10060F1FCLL);
    case 4:
      *(unsigned int *)((char *)a1 + v32) = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (!a2) {
        return;
      }
LABEL_48:
      if (v4 == v22)
      {
        uint64_t v41 = *(void (**)(_DWORD *))(v54 + 56);
LABEL_50:
        v41(v40);
        return;
      }
      uint64_t v40 = (_DWORD *)(((((unint64_t)a1 + v23) & v37) + v15 + v24) & ~v24);
      if (v9 == v22)
      {
        if (v48 == v9)
        {
          uint64_t v41 = *(void (**)(_DWORD *))(v53 + 56);
        }
        else
        {
          unint64_t v43 = (void *)(((unint64_t)v40 + v25) & 0xFFFFFFFFFFFFFFF8);
          if (v47 <= 0x7FFFFFFE)
          {
            if (a2 > 0x7FFFFFFE)
            {
              *unint64_t v43 = 0;
              *(_DWORD *)unint64_t v43 = a2 - 0x7FFFFFFF;
            }
            else
            {
              *unint64_t v43 = a2;
            }
            return;
          }
          uint64_t v40 = (_DWORD *)(((unint64_t)v43 + v26) & v38);
          uint64_t v41 = *(void (**)(_DWORD *))(v52 + 56);
        }
        goto LABEL_50;
      }
      unint64_t v42 = (void *)((char *)v40 + v27);
      if ((v21 & 0x80000000) != 0)
      {
        uint64_t v44 = (v19 + 12 + (((unint64_t)v42 + v28) & ~(v19 | 7))) & v39;
        if (v13 < 0x7FFFFFFE)
        {
          uint64_t v46 = (void *)((v30 + ((v29 + v44) & v39)) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v46 = 0;
            v46[1] = 0;
            *(_DWORD *)uint64_t v46 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v46[1] = a2;
          }
        }
        else
        {
          unint64_t v45 = *(void (**)(uint64_t))(v12 + 56);
          v45(v44);
        }
      }
      else if ((a2 & 0x80000000) != 0)
      {
        *unint64_t v42 = a2 ^ 0x80000000;
        v42[1] = 0;
      }
      else
      {
        v42[1] = a2 - 1;
      }
      return;
  }
}

uint64_t sub_10060F224()
{
  uint64_t result = type metadata accessor for SnapshotItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SnapshotItemObject()
{
  return sub_10014D080();
}

uint64_t static FPConflictLoser.== infix(_:_:)(void *a1, void *a2)
{
  id v3 = [a1 etag];
  uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v6 = v5;

  id v7 = [a2 etag];
  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t FPConflictLoser.isEqual(_:)(uint64_t a1)
{
  sub_1001F2768(a1, (uint64_t)v13);
  if (!v14)
  {
    sub_10017D1A4((uint64_t)v13);
    goto LABEL_7;
  }
  sub_10060F4C0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v10 = 0;
    return v10 & 1;
  }
  id v2 = [v1 etag];
  uint64_t v3 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v5 = v4;

  id v6 = [v12 etag];
  uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v9 = v8;

  if (v3 == v7 && v5 == v9) {
    char v10 = 1;
  }
  else {
    char v10 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

unint64_t sub_10060F4C0()
{
  unint64_t result = qword_100AD8D50[0];
  if (!qword_100AD8D50[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_100AD8D50);
  }
  return result;
}

uint64_t FPConflictLoser.hash.getter()
{
  id v1 = [v0 etag];
  _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  uint64_t v2 = sub_10096BE90();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_10060F658()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10060F6D4()
{
  sub_10061056C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_10060F78C()
{
  return 0;
}

uint64_t sub_10060F7A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 1, 1, AssociatedTypeWitness);
}

void sub_10060F850()
{
}

void sub_10060F8AC()
{
}

uint64_t sub_10060F8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = v2;
  uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, &v1[*(void *)(v5 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6) = sub_1007B24CC();
  uint64_t v7 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
}

uint64_t sub_10060FAC8()
{
  return 0;
}

uint64_t sub_10060FBA4()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 176))();
  v3._countAndFlagsBits = 40;
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  v4._countAndFlagsBits = (*(uint64_t (**)(void))(*(void *)v0 + 456))();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_10096BDC0(v5);
  return v2;
}

uint64_t sub_10060FC94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 48))
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)0xE000000000000000;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v40 = 0x6574726174732820;
  unint64_t v41 = 0xEA00000000002064;
  sub_10096B0D0();
  sub_10096B080();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v11 = v10 * 1000000000.0;
  if ((~COERCE__INT64(v10 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_10063A588((uint64_t)v11, v8);
  sub_10096BDC0(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  sub_10096BDC0(v45);
  uint64_t v6 = v40;
  uint64_t v7 = (void *)v41;
LABEL_7:
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_10096CBD0(18);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 60;
  v43._object = (void *)0xE100000000000000;
  swift_beginAccess();
  sub_1003B32B0(v1 + 56, (uint64_t)&v40);
  uint64_t v12 = v42;
  sub_1003B3318((uint64_t)&v40);
  if (v12)
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_1003B32B0(v1 + 56, (uint64_t)&v40);
    uint64_t v13 = v42;
    if (v42)
    {
      uint64_t v14 = sub_10002689C(&v40, v42);
      uint64_t v15 = *(void *)(v13 - 8);
      __chkstk_darwin(v14);
      uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      sub_10096D270();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      sub_1000268E0((uint64_t)&v40);
      v18._uint64_t countAndFlagsBits = v38;
      uint64_t v19 = (void *)v39;
      goto LABEL_11;
    }
LABEL_29:
    __break(1u);
    JUMPOUT(0x100610228);
  }
  uint64_t v19 = (void *)0xE600000000000000;
  v18._uint64_t countAndFlagsBits = 0x3E77656E3C4ALL;
LABEL_11:
  v18._object = v19;
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 32;
  v46._object = (void *)0xE100000000000000;
  sub_10096BDC0(v46);
  uint64_t v20 = *(void *)(v1 + 96);
  uint64_t v21 = *(void *)(v1 + 104);
  char v22 = *(unsigned char *)(v1 + 112);
  switch(v22)
  {
    case 1:
      uint64_t v23 = 548376546;
      if (v20)
      {
        swift_retain();
        uint64_t v23 = 548966370;
      }
      goto LABEL_15;
    case 2:
      swift_retain();
      uint64_t v24 = (void *)0xA700000000000000;
      unsigned int v25 = -273246494;
      goto LABEL_18;
    case 3:
      swift_errorRetain();
      uint64_t v24 = (void *)0xA700000000000000;
      unsigned int v25 = -272858910;
LABEL_18:
      uint64_t v23 = v25 | 0x208FB800000000;
      break;
    case 4:
      if (v20 | v21) {
        uint64_t v23 = 545627362;
      }
      else {
        uint64_t v23 = 0x208FB8EFB49CE2;
      }
      if (v20 | v21) {
        uint64_t v24 = (void *)0xA400000000000000;
      }
      else {
        uint64_t v24 = (void *)0xA700000000000000;
      }
      break;
    default:
      swift_retain();
      uint64_t v23 = 548638690;
LABEL_15:
      uint64_t v24 = (void *)0xA400000000000000;
      break;
  }
  v47._uint64_t countAndFlagsBits = v23;
  v47._object = v24;
  sub_10096BDC0(v47);
  swift_bridgeObjectRelease();
  sub_1000D31F8(v20, v21, v22);
  v48._uint64_t countAndFlagsBits = v6;
  v48._object = v7;
  sub_10096BDC0(v48);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = 32;
  v49._object = (void *)0xE100000000000000;
  sub_10096BDC0(v49);
  v50._uint64_t countAndFlagsBits = sub_10060FBA4();
  sub_10096BDC0(v50);
  swift_bridgeObjectRelease();
  v51._uint64_t countAndFlagsBits = 0x3A79687720;
  v51._object = (void *)0xE500000000000000;
  sub_10096BDC0(v51);
  v52._uint64_t countAndFlagsBits = sub_10060967C(*(void *)(v1 + 136));
  sub_10096BDC0(v52);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v43._countAndFlagsBits;
  object = v43._object;
  uint64_t v40 = 0x3A646568637320;
  unint64_t v41 = 0xE700000000000000;
  v43._uint64_t countAndFlagsBits = sub_100437928(*(void *)(v1 + 120));
  v43._object = v28;
  v53._uint64_t countAndFlagsBits = 35;
  v53._object = (void *)0xE100000000000000;
  sub_10096BDC0(v53);
  v54._uint64_t countAndFlagsBits = sub_10096C2B0();
  sub_10096BDC0(v54);
  swift_bridgeObjectRelease();
  sub_10096BDC0(v43);
  swift_bridgeObjectRelease();
  unint64_t v29 = *(void *)(v1 + 96);
  uint64_t v30 = *(void *)(v1 + 104);
  char v31 = *(unsigned char *)(v1 + 112);
  sub_10009C5FC(v29, v30, v31);
  unint64_t v32 = sub_1008B02B0(v29, v30, v31);
  int v34 = v33;
  sub_1000D31F8(v29, v30, v31);
  v55._uint64_t countAndFlagsBits = v32;
  v55._object = v34;
  sub_10096BDC0(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 62;
  v56._object = (void *)0xE100000000000000;
  sub_10096BDC0(v56);
  uint64_t v35 = v40;
  unsigned int v36 = (void *)v41;
  uint64_t v40 = countAndFlagsBits;
  unint64_t v41 = (unint64_t)object;
  swift_bridgeObjectRetain();
  v57._uint64_t countAndFlagsBits = v35;
  v57._object = v36;
  sub_10096BDC0(v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_10061023C@<X0>(uint64_t a1@<X8>)
{
  return sub_100610254(a1);
}

uint64_t sub_100610254@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1006103C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TestingOperation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_100610458(char a1)
{
  *(void *)(v1 + 16) = 0;
  swift_release();
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    char v3 = sub_1001E0E0C();
    swift_release();
    a1 |= v3;
  }
  return a1 & 1;
}

void sub_1006104B8()
{
}

uint64_t sub_100610514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(unsigned char *)(v3 + 48) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(void *)(v3 + 88) = 0;
  *(_OWORD *)(v3 + 96) = xmmword_10097A220;
  *(unsigned char *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a2;
  *(void *)(v3 + 136) = a3;
  if ((a3 & 0x8000) != 0) {
    sub_10058364C(0x200000);
  }
  return v3;
}

uint64_t sub_10061056C()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1003B3318(v0 + 56);
  sub_1000D31F8(*(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  return v0;
}

void sub_1006105B0()
{
}

void sub_10061060C()
{
}

void sub_100610668()
{
}

uint64_t sub_1006106C4@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_100610830()
{
  sub_10061056C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Job()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10061087C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100610924()
{
  return sub_10060FC94();
}

uint64_t sub_100610948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_100610B30(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_100610A0C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(v1, AssociatedTypeWitness);
}

uint64_t sub_100610AC0()
{
  sub_10060F6D4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ItemJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100610B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);

  return sub_100610514(a2, a3, a4);
}

uint64_t sub_100610C18()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 == 2) {
    sub_100714A7C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/interfaces/job/Job.swift", 102, v1, 152);
  }
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 4;
  sub_1000D31F8(v2, v3, v1);
  return v0;
}

uint64_t sub_100610C68(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 96);
    uint64_t v2 = *(void *)(v1 + 104);
    *(void *)(v1 + 96) = v3 & ~a1;
    *(unsigned char *)(v1 + 112) = 0;
    swift_retain();
    sub_1000D31F8(v3, v2, 0);
    return v1;
  }
  return result;
}

uint64_t sub_100610D14()
{
  return sub_1005A5890();
}

uint64_t sub_100610D2C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 & 0x100) == 0)
  {
    if ((a4 & 0x100) == 0)
    {
      if ((_BYTE)a2)
      {
        if (a2 == 1)
        {
          if (a4 != 1 || a1 != a3) {
            return 0;
          }
        }
        else if (a1)
        {
          if (a4 != 2 || a3 != (void *)1) {
            return 0;
          }
        }
        else if (a4 != 2 || a3)
        {
          return 0;
        }
      }
      else if ((_BYTE)a4 || a1 != a3)
      {
        return 0;
      }
      return 1;
    }
    return 0;
  }
  if ((a4 & 0x100) == 0) {
    return 0;
  }
  uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v12 = v11;
  if (v10 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v12 == v13)
  {
    uint64_t v8 = 1;
    sub_10009C394(a1, a2, 1);
    sub_10009C394(a1, a2, 1);
    sub_10009C394(a3, a4, 1);
    swift_bridgeObjectRelease_n();
    sub_1000D30C4(a3, a4, 1);

    sub_1000D30C4(a1, a2, 1);
    return v8;
  }
  char v14 = sub_10096D2D0();
  sub_10009C394(a1, a2, 1);
  sub_10009C394(a1, a2, 1);
  sub_10009C394(a3, a4, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000D30C4(a3, a4, 1);

  sub_1000D30C4(a1, a2, 1);
  return v14 & 1;
}

uint64_t sub_100610F08(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 & 0x100) != 0)
  {
    if ((a4 & 0x100) != 0)
    {
      if ((_BYTE)a2)
      {
        if (a2 == 1)
        {
          if (a4 == 1 && a1 == a3) {
            return 1;
          }
        }
        else if (a1)
        {
          if (a4 == 2 && a3 == (void *)1) {
            return 1;
          }
        }
        else if (a4 == 2 && !a3)
        {
          return 1;
        }
      }
      else if (!(_BYTE)a4 && a1 == a3)
      {
        return 1;
      }
    }
    return 0;
  }
  if ((a4 & 0x100) != 0) {
    return 0;
  }
  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v10 = v9;
  if (v8 != _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() || v10 != v11)
  {
    char v13 = sub_10096D2D0();
    sub_10014E450(a1, a2, 0);
    sub_10014E450(a1, a2, 0);
    sub_10014E450(a3, a4, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10017E788(a3, a4, 0);

    sub_10017E788(a1, a2, 0);
    return v13 & 1;
  }
  sub_10014E450(a1, a2, 0);
  sub_10014E450(a1, a2, 0);
  sub_10014E450(a3, a4, 0);
  swift_bridgeObjectRelease_n();
  sub_10017E788(a3, a4, 0);

  sub_10017E788(a1, a2, 0);
  return 1;
}

void *Tags.fpTags.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_10096CCE0();
    uint64_t v3 = (unsigned __int8 *)(a1 + 48);
    do
    {
      unsigned int v4 = *v3;
      v3 += 24;
      id v5 = objc_allocWithZone((Class)FPTag);
      swift_bridgeObjectRetain();
      NSString v6 = sub_10096BC00();
      swift_bridgeObjectRelease();
      [v5 initWithLabel:v6 color:v4];

      sub_10096CCB0();
      sub_10096CCF0();
      sub_10096CD00();
      sub_10096CCC0();
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1006111F4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_10096D2D0(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_10096D2D0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t _s9libfssync4TagsV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned __int8 *)(a2 + 48);
  for (unint64_t i = (unsigned __int8 *)(a1 + 48); ; i += 24)
  {
    uint64_t v26 = v2;
    uint64_t v6 = *((void *)i - 2);
    unint64_t v5 = *((void *)i - 1);
    uint64_t v8 = *((void *)v3 - 2);
    unint64_t v7 = *((void *)v3 - 1);
    int v27 = *v3;
    int v28 = *i;
    if ((v5 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v5) & 0xF;
    }
    else {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (!v9)
    {
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10096BEC0();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v10 == 12565487 && v12 == 0xA300000000000000) {
      break;
    }
    char v13 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_16;
    }
LABEL_18:
    swift_bridgeObjectRetain();
    unint64_t v16 = v5;
LABEL_19:
    if ((v7 & 0x2000000000000000) != 0) {
      uint64_t v17 = HIBYTE(v7) & 0xF;
    }
    else {
      uint64_t v17 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      unint64_t v24 = v7;
      if (v6 != v8) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10096BEC0();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v18 == 12565487 && v20 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_10096BD70();
    if (4 * v17 < result >> 14) {
      goto LABEL_39;
    }
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_10096BD10();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    if (v6 != v22) {
      goto LABEL_32;
    }
LABEL_31:
    if (v16 == v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v28 != v27) {
        return 0;
      }
      goto LABEL_6;
    }
LABEL_32:
    char v25 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = 0;
    if ((v25 & 1) == 0 || v28 != v27) {
      return result;
    }
LABEL_6:
    v3 += 24;
    uint64_t v2 = v26 - 1;
    if (v26 == 1) {
      return 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRetain();
  unint64_t result = sub_10096BD70();
  if (4 * v9 >= result >> 14)
  {
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10096BD10();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100611678(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10096CE70();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = sub_10096CC30();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  unint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)sub_10096CC30();
LABEL_22:
    char v13 = v12;
    sub_100011348(0, &qword_100AD0B48);
    char v14 = sub_10096C830();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)sub_10096CC30();
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)sub_10096CC30();
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = sub_10096C830();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006118F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096AE50();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      char v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      char v31 = v7;
      unint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      id v17 = v7;
      do
      {
        uint64_t v18 = a1;
        char v19 = v9;
        unint64_t v20 = v9;
        id v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_100614F64((unint64_t *)&unk_100ACB670, (void (*)(uint64_t))&type metadata accessor for URL);
        char v23 = sub_10096BBE0();
        unint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_100611B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_10001EBB0(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_10001E9C0(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                unint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_10001EBB0(v8, v7);
                char v23 = (char *)sub_10096A880();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_10096A8A0();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_10096A890();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  unint64_t v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  char v25 = (char *)sub_10096A880();
                  if (v25)
                  {
                    uint64_t v26 = sub_10096A8A0();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_10096A890();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_10001E9C0(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_10096A880();
                if (v68)
                {
                  uint64_t v69 = sub_10096A8A0();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_10096A890();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  unint64_t v71 = &v74[-v67];
                }
                else {
                  unint64_t v71 = (char *)v70;
                }
                Swift::String v56 = v23;
                uint64_t v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                Swift::String v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                uint64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_10001EBB0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_10096A880();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_10096A8A0();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  unint64_t v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  unint64_t v73 = 0;
                }
                sub_10096A890();
                uint64_t v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    uint64_t v42 = (char *)sub_10096A880();
                    if (v42)
                    {
                      uint64_t v43 = sub_10096A8A0();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_10096A890();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    uint64_t v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_10001E9C0(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_10001E9C0(v8, v7);
LABEL_104:
                    sub_10001E9C0(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    size_t v61 = (char *)sub_10096A880();
                    if (v61)
                    {
                      uint64_t v62 = sub_10096A8A0();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_10096A890();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    uint64_t v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_10001E9C0(v8, v7);
                    sub_10001E9C0(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_10001E9C0(v8, v7);
                  sub_10001E9C0(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                unint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_10001EBB0(v8, v7);
                  uint64_t v34 = sub_10096A880();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_10096A8A0();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_10096A890();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_10001E9C0(v8, v7);
                  sub_10001E9C0(v6, v5);
                  uint64_t v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_10001EBB0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_10096A880();
                if (v48)
                {
                  uint64_t v54 = sub_10096A8A0();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_10096A890();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                Swift::String v56 = __s1;
                Swift::String v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_10001EBB0(v8, v7);
                  unint64_t v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                unint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_10001EBB0(v8, v7);
                  uint64_t v19 = sub_10096A880();
                  if (!v19)
                  {
                    sub_10096A890();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_10096A890();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x100612450);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_10096A8A0();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_10001EBB0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_10096A880();
                if (v48)
                {
                  uint64_t v49 = sub_10096A8A0();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_10096A890();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_10001EBB0(v8, v7);
LABEL_121:
          sub_10001E9C0(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_100612480(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 41);
    uint64_t v4 = (unsigned char *)(a2 + 41);
    do
    {
      uint64_t v6 = *(void **)(v3 - 9);
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *(void **)(v4 - 9);
      uint64_t v9 = *(v4 - 1);
      if (*v3)
      {
        if ((*v4 & 1) == 0) {
          return 0;
        }
        uint64_t v10 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        uint64_t v12 = v11;
        BOOL v14 = v10 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v12 == v13;
        char v5 = v14 ? 1 : sub_10096D2D0();
        sub_10009C394(v6, v7, 1);
        sub_10009C394(v6, v7, 1);
        sub_10009C394(v8, v9, 1);
        sub_10009C394(v6, v7, 1);
        sub_10009C394(v8, v9, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000D30C4(v8, v9, 1);

        sub_1000D30C4(v6, v7, 1);
        sub_1000D30C4(v8, v9, 1);
        sub_1000D30C4(v6, v7, 1);
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*v4) {
          return 0;
        }
        if (*(v3 - 1))
        {
          if (v7 == 1)
          {
            uint64_t result = 0;
            if (v9 != 1 || v6 != v8) {
              return result;
            }
          }
          else
          {
            uint64_t result = 0;
            if (v6)
            {
              if (v9 != 2 || v8 != (void *)1) {
                return result;
              }
            }
            else if (v9 != 2 || v8)
            {
              return result;
            }
          }
        }
        else
        {
          uint64_t result = 0;
          if (*(v4 - 1) || v6 != v8) {
            return result;
          }
        }
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_100612678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40))
    {
      uint64_t v4 = (_DWORD *)(a1 + 72);
      char v5 = (_DWORD *)(a2 + 72);
      do
      {
        char v6 = *((unsigned char *)v5 - 16);
        if (*(unsigned char *)(v4 - 4))
        {
          if (!*((unsigned char *)v5 - 16)) {
            return 0;
          }
        }
        else
        {
          if (*((void *)v4 - 3) != *((void *)v5 - 3)) {
            char v6 = 1;
          }
          if (v6) {
            return 0;
          }
        }
        if (!--v2) {
          return 1;
        }
        int v7 = *v4;
        uint64_t v8 = *((void *)v4 - 1);
        v4 += 8;
        uint64_t v9 = *((void *)v5 - 1);
        int v11 = *v5;
        v5 += 8;
        int v10 = v11;
      }
      while (v8 == v9 && v7 == v10);
    }
    return 0;
  }
  return 1;
}

unint64_t sub_100612718(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a2 + 56);
  for (uint64_t i = (unint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v6 = *(i - 3);
    uint64_t v8 = *(i - 1);
    unint64_t v7 = *i;
    uint64_t v9 = *(v3 - 3);
    int v10 = *((unsigned __int8 *)v3 - 16);
    uint64_t v12 = *(v3 - 1);
    unint64_t v11 = *v3;
    if (*((unsigned char *)i - 16))
    {
      if (*((unsigned char *)i - 16) == 1)
      {
        if (v10 != 1 || v6 != v9) {
          return 0;
        }
      }
      else if (v6)
      {
        if (v10 != 2 || v9 != 1) {
          return 0;
        }
      }
      else if (v10 != 2 || v9 != 0)
      {
        return 0;
      }
    }
    else
    {
      if (*((unsigned char *)v3 - 16)) {
        BOOL v14 = 0;
      }
      else {
        BOOL v14 = v6 == v9;
      }
      if (!v14) {
        return 0;
      }
    }
    uint64_t v33 = v2;
    if ((v7 & 0x2000000000000000) != 0) {
      uint64_t v17 = HIBYTE(v7) & 0xF;
    }
    else {
      uint64_t v17 = v8 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (!v17)
    {
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10096BEC0();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v18 == 12565487 && v20 == 0xA300000000000000) {
      break;
    }
    char v21 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_39;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    unint64_t v24 = v7;
LABEL_42:
    if ((v11 & 0x2000000000000000) != 0) {
      uint64_t v25 = HIBYTE(v11) & 0xF;
    }
    else {
      uint64_t v25 = v12 & 0xFFFFFFFFFFFFLL;
    }
    if (!v25)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      unint64_t v32 = v11;
      if (v8 != v12) {
        goto LABEL_5;
      }
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10096BEC0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    if (v26 == 12565487 && v28 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v29 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_53;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_10096BD70();
    if (4 * v25 < result >> 14) {
      goto LABEL_59;
    }
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_10096BD10();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    if (v8 != v30)
    {
LABEL_5:
      char v5 = sub_10096D2D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
      goto LABEL_6;
    }
LABEL_54:
    if (v24 != v32) {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_6:
    v3 += 4;
    uint64_t v2 = v33 - 1;
    if (v33 == 1) {
      return 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRetain();
  unint64_t result = sub_10096BD70();
  if (4 * v17 >= result >> 14)
  {
    sub_10096BEE0();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_10096BD10();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

BOOL sub_100612B04(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  char v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t Tags.tagData.getter(uint64_t a1)
{
  Tags.fpTags.getter(a1);
  sub_100011348(0, &qword_100ACB6E8);
  Class isa = sub_10096C080().super.isa;
  swift_bridgeObjectRelease();
  id v2 = (id)FPGetTagsDataForTags();

  uint64_t v3 = sub_10096AF60();
  return v3;
}

uint64_t fpfs_finder_color.init(from:)(uint64_t a1)
{
  sub_10009CA78(a1, (uint64_t)v4);
  uint64_t v2 = sub_10096D470();
  sub_1000268E0(a1);
  return v2;
}

uint64_t fpfs_finder_color.encode(to:)()
{
  return sub_10096D480();
}

uint64_t sub_100612C80@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_10009CA78(a1, (uint64_t)v7);
  char v5 = sub_10096D470();
  uint64_t result = sub_1000268E0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100612CE8()
{
  return sub_10096D480();
}

void fpfs_finder_color.hash(into:)(uint64_t a1, Swift::UInt8 a2)
{
}

Swift::Int sub_100612D2C()
{
  Swift::UInt8 v1 = *v0;
  sub_10096D4B0();
  sub_10096D4D0(v1);
  return sub_10096D500();
}

void sub_100612D74()
{
  sub_10096D4D0(*v0);
}

Swift::Int sub_100612DA0()
{
  Swift::UInt8 v1 = *v0;
  sub_10096D4B0();
  sub_10096D4D0(v1);
  return sub_10096D500();
}

uint64_t fpfs_finder_color.description.getter(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t result = 0x3E656E6F6E3CLL;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 2036691559;
      break;
    case 2:
      uint64_t result = 0x6E65657267;
      break;
    case 3:
      uint64_t result = 0x656C70727570;
      break;
    case 4:
      uint64_t result = 1702194274;
      break;
    case 5:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 6:
      uint64_t result = 6579570;
      break;
    case 7:
      uint64_t result = 0x65676E61726FLL;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E753CLL;
      break;
  }
  return result;
}

uint64_t sub_100612ED8()
{
  return fpfs_finder_color.description.getter(*v0);
}

uint64_t Tag.description.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v3 = a3;
  swift_bridgeObjectRetain();
  NSString v4 = sub_10096BC00();
  id v5 = objc_msgSend(v4, "fp_obfuscatedFilename");

  uint64_t v6 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  swift_bridgeObjectRelease();

  v10._uint64_t countAndFlagsBits = 58;
  v10._object = (void *)0xE100000000000000;
  sub_10096BDC0(v10);
  uint64_t v7 = (void *)0xE600000000000000;
  v8._uint64_t countAndFlagsBits = 0x3E656E6F6E3CLL;
  switch(v3)
  {
    case 0:
      break;
    case 1:
      uint64_t v7 = (void *)0xE400000000000000;
      v8._uint64_t countAndFlagsBits = 2036691559;
      break;
    case 2:
      uint64_t v7 = (void *)0xE500000000000000;
      v8._uint64_t countAndFlagsBits = 0x6E65657267;
      break;
    case 3:
      v8._uint64_t countAndFlagsBits = 0x656C70727570;
      break;
    case 4:
      uint64_t v7 = (void *)0xE400000000000000;
      v8._uint64_t countAndFlagsBits = 1702194274;
      break;
    case 5:
      v8._uint64_t countAndFlagsBits = 0x776F6C6C6579;
      break;
    case 6:
      uint64_t v7 = (void *)0xE300000000000000;
      v8._uint64_t countAndFlagsBits = 6579570;
      break;
    case 7:
      v8._uint64_t countAndFlagsBits = 0x65676E61726FLL;
      break;
    default:
      uint64_t v7 = (void *)0xE90000000000003ELL;
      v8._uint64_t countAndFlagsBits = 0x6E776F6E6B6E753CLL;
      break;
  }
  v8._object = v7;
  sub_10096BDC0(v8);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10061308C()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1006130BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10061434C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006130E4(uint64_t a1)
{
  unint64_t v2 = sub_1006141A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100613120(uint64_t a1)
{
  unint64_t v2 = sub_1006141A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Tag.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v14 = a4;
  uint64_t v8 = sub_10002B7CC(&qword_100AD8E58);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_1006141A8();
  sub_10096D590();
  v13[0] = a2;
  v13[1] = a3;
  char v15 = 0;
  sub_100157BC4();
  sub_10096D1A0();
  if (!v4)
  {
    LOBYTE(v13[0]) = v14;
    char v15 = 1;
    type metadata accessor for fpfs_finder_color(0);
    sub_100614F64(&qword_100AD8E68, type metadata accessor for fpfs_finder_color);
    sub_10096D1A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t Tag.init(from:)(void *a1)
{
  uint64_t result = sub_100614428(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100613354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100614428(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100613384(void *a1)
{
  return Tag.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

BOOL sub_1006133A4(uint64_t a1, uint64_t a2)
{
  return _s9libfssync3TagV23__derived_struct_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1006133C0()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 16);
  swift_bridgeObjectRetain();
  NSString v2 = sub_10096BC00();
  id v3 = objc_msgSend(v2, "fp_obfuscatedFilename");

  uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  swift_bridgeObjectRelease();

  v6._uint64_t countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  sub_10096BDC0(v6);
  v7._uint64_t countAndFlagsBits = fpfs_finder_color.description.getter(v1);
  sub_10096BDC0(v7);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t Tags.init(_:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    return 0;
  }
  sub_10001EBB0(a1, a2);
  Class isa = sub_10096AF20().super.isa;
  id v6 = (id)FPGetTagsFromTagsData();

  if (v6)
  {
    sub_100011348(0, &qword_100ACB6E8);
    unint64_t v7 = sub_10096C0A0();
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v2 = _s9libfssync4TagsVyACSgSaySo5FPTagCGSgcfC_0(v7);
  sub_10001E9AC(a1, a2);
  swift_bridgeObjectRetain();
  sub_10001E9AC(a1, a2);
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_10061355C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (*(void *)result)
    {
      uint64_t v2 = (void **)(a2 + 16);
      unsigned int v3 = *(unsigned __int8 *)(result + 8);
      sub_10096BDE0();
      sub_10001F9C0();
      uint64_t v4 = sub_10096C910();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      if (v3 <= 1) {
        char v7 = 1;
      }
      else {
        char v7 = v3;
      }
      swift_beginAccess();
      uint64_t v8 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v8 = sub_1006A41B0(0, v8[2] + 1, 1, v8);
        *uint64_t v2 = v8;
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        uint64_t v8 = sub_1006A41B0((void *)(v10 > 1), v11 + 1, 1, v8);
        *uint64_t v2 = v8;
      }
      _OWORD v8[2] = v11 + 1;
      BOOL v12 = &v8[3 * v11];
      v12[4] = v4;
      v12[5] = v6;
      *((unsigned char *)v12 + 48) = v7;
      swift_endAccess();
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t Tags.description.getter(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_100021770(0, v1, 0);
    unsigned int v3 = (unsigned __int8 *)(a1 + 48);
    do
    {
      int v4 = *v3;
      swift_bridgeObjectRetain_n();
      NSString v5 = sub_10096BC00();
      id v6 = objc_msgSend(v5, "fp_obfuscatedFilename");

      uint64_t v7 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();

      uint64_t v17 = v9;
      v18._uint64_t countAndFlagsBits = 58;
      v18._object = (void *)0xE100000000000000;
      sub_10096BDC0(v18);
      unint64_t v10 = (void *)0xE600000000000000;
      v11._uint64_t countAndFlagsBits = 0x3E656E6F6E3CLL;
      switch(v4)
      {
        case 0:
          break;
        case 1:
          unint64_t v10 = (void *)0xE400000000000000;
          v11._uint64_t countAndFlagsBits = 2036691559;
          break;
        case 2:
          unint64_t v10 = (void *)0xE500000000000000;
          v11._uint64_t countAndFlagsBits = 0x6E65657267;
          break;
        case 3:
          v11._uint64_t countAndFlagsBits = 0x656C70727570;
          break;
        case 4:
          unint64_t v10 = (void *)0xE400000000000000;
          v11._uint64_t countAndFlagsBits = 1702194274;
          break;
        case 5:
          v11._uint64_t countAndFlagsBits = 0x776F6C6C6579;
          break;
        case 6:
          unint64_t v10 = (void *)0xE300000000000000;
          v11._uint64_t countAndFlagsBits = 6579570;
          break;
        case 7:
          v11._uint64_t countAndFlagsBits = 0x65676E61726FLL;
          break;
        default:
          unint64_t v10 = (void *)0xE90000000000003ELL;
          v11._uint64_t countAndFlagsBits = 0x6E776F6E6B6E753CLL;
          break;
      }
      v11._object = v10;
      sub_10096BDC0(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100021770((char *)(v12 > 1), v13 + 1, 1);
      }
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      int v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v7;
      v14[5] = v17;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  sub_10002B7CC((uint64_t *)&unk_100AD5CC0);
  sub_1000A6FD8();
  uint64_t v15 = sub_10096BB50();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100613964()
{
  return 1936154996;
}

uint64_t sub_100613974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10096D2D0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1006139FC(uint64_t a1)
{
  unint64_t v2 = sub_100614664();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100613A38(uint64_t a1)
{
  unint64_t v2 = sub_100614664();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Tags.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100AD8E70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_100614664();
  sub_10096D590();
  v9[1] = a2;
  sub_10002B7CC(&qword_100AD8E80);
  sub_100614EA0(&qword_100AD8E88, (void (*)(void))sub_1006146B8);
  sub_10096D1A0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *Tags.init(from:)(void *a1)
{
  return sub_10061470C(a1);
}

void *sub_100613C0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10061470C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100613C38(void *a1)
{
  return Tags.encode(to:)(a1, *v1);
}

unint64_t sub_100613C54(uint64_t *a1, uint64_t *a2)
{
  return _s9libfssync4TagsV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_100613C60()
{
  return Tags.description.getter(*v0);
}

BOOL _s9libfssync3TagV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10002C020(a1, a2);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_7;
  }
  if (v12 != 12565487 || v14 != 0xA300000000000000)
  {
    char v15 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_10096BD70();
  sub_1000364D0(v16, a1, a2);
  swift_bridgeObjectRelease();
  a1 = sub_10096BD10();
  a2 = v17;
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10002C020(a4, a5);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_15;
  }
  if (v18 == 12565487 && v20 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v21 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    if (a1 != a4) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_10096BD70();
  sub_1000364D0(v22, a4, a5);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_10096BD10();
  a5 = v24;
  swift_bridgeObjectRelease();
  if (a1 != v23)
  {
LABEL_18:
    char v25 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v25 & 1) == 0) {
      return result;
    }
    return a3 == a6;
  }
LABEL_16:
  if (a2 != a5) {
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
  return a3 == a6;
}

uint64_t _s9libfssync4TagsVyACSgSaySo5FPTagCGSgcfC_0(unint64_t a1)
{
  if (!a1) {
    return 0;
  }
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      return (uint64_t)v4;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t v2 = sub_10096CE70();
  if (!v2) {
    goto LABEL_22;
  }
LABEL_4:
  sub_100445EA4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      if (v2 == v3)
      {
        __break(1u);
        goto LABEL_21;
      }
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_10096CC30();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 label];
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

      unint64_t v18 = sub_10001F9C0();
      uint64_t v8 = sub_10096C910();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      unsigned int v11 = objc_msgSend(v6, "color", &type metadata for String, v18, v18, v18);
      if ((v11 & 0x80000000) != 0) {
        goto LABEL_27;
      }
      char v12 = v11;
      if (v11 >= 0x100) {
        goto LABEL_27;
      }

      if ((v12 & 0xFE) != 0) {
        char v13 = v12;
      }
      else {
        char v13 = 1;
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        sub_100445EA4(v14 > 1, v15 + 1, 1);
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      unint64_t v16 = &_swiftEmptyArrayStorage[3 * v15];
      v16[4] = v8;
      v16[5] = v10;
      *((unsigned char *)v16 + 48) = v13;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    if (_swiftEmptyArrayStorage[2]) {
      return (uint64_t)v4;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
LABEL_27:
  uint64_t result = sub_10096CE10();
  __break(1u);
  return result;
}

unint64_t sub_1006141A8()
{
  unint64_t result = qword_100AD8E60;
  if (!qword_100AD8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8E60);
  }
  return result;
}

uint64_t sub_1006141FC(uint64_t a1, uint64_t a2, char a3)
{
  v8[6] = a1;
  v8[7] = a2;
  char v9 = a3;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = _swiftEmptyArrayStorage;
  uint64_t v4 = (uint64_t *)(v3 + 16);
  v8[4] = sub_100614E98;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_100949F40;
  objc_super v8[3] = &unk_100A94288;
  id v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  fpfs_deserialize_tags();
  _Block_release(v5);
  swift_beginAccess();
  uint64_t v6 = *v4;
  if (*(void *)(v6 + 16)) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v6 = 0;
  }
  swift_release();
  return v6;
}

uint64_t sub_10061434C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100614428(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD8EE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10002689C(a1, a1[3]);
  sub_1006141A8();
  sub_10096D570();
  if (v1)
  {
    sub_1000268E0((uint64_t)a1);
  }
  else
  {
    char v10 = 0;
    sub_100157D68();
    sub_10096D040();
    uint64_t v7 = v11;
    type metadata accessor for fpfs_finder_color(0);
    char v10 = 1;
    sub_100614F64(qword_100AD8EF0, type metadata accessor for fpfs_finder_color);
    swift_bridgeObjectRetain();
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000268E0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_100614664()
{
  unint64_t result = qword_100AD8E78;
  if (!qword_100AD8E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8E78);
  }
  return result;
}

unint64_t sub_1006146B8()
{
  unint64_t result = qword_100AD8E90;
  if (!qword_100AD8E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8E90);
  }
  return result;
}

void *sub_10061470C(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD8ED0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002689C(a1, a1[3]);
  sub_100614664();
  sub_10096D570();
  if (v1)
  {
    sub_1000268E0((uint64_t)a1);
  }
  else
  {
    sub_10002B7CC(&qword_100AD8E80);
    sub_100614EA0(&qword_100AD8ED8, (void (*)(void))sub_100614F10);
    sub_10096D040();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_1000268E0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1006148B4()
{
  return sub_100614F64(&qword_100AD8E98, type metadata accessor for fpfs_finder_color);
}

uint64_t sub_100614900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Tag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Tag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Tag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Tag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag()
{
  return &type metadata for Tag;
}

ValueMetadata *type metadata accessor for Tags()
{
  return &type metadata for Tags;
}

unsigned char *storeEnumTagSinglePayload for Tags.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100614B14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Tags.CodingKeys()
{
  return &type metadata for Tags.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Tag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100614C18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag.CodingKeys()
{
  return &type metadata for Tag.CodingKeys;
}

unint64_t sub_100614C54()
{
  unint64_t result = qword_100AD8EA0;
  if (!qword_100AD8EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EA0);
  }
  return result;
}

unint64_t sub_100614CAC()
{
  unint64_t result = qword_100AD8EA8;
  if (!qword_100AD8EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EA8);
  }
  return result;
}

unint64_t sub_100614D04()
{
  unint64_t result = qword_100AD8EB0;
  if (!qword_100AD8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EB0);
  }
  return result;
}

unint64_t sub_100614D5C()
{
  unint64_t result = qword_100AD8EB8;
  if (!qword_100AD8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EB8);
  }
  return result;
}

unint64_t sub_100614DB4()
{
  unint64_t result = qword_100AD8EC0;
  if (!qword_100AD8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EC0);
  }
  return result;
}

unint64_t sub_100614E0C()
{
  unint64_t result = qword_100AD8EC8;
  if (!qword_100AD8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EC8);
  }
  return result;
}

uint64_t sub_100614E60()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100614E98(uint64_t a1)
{
  return sub_10061355C(a1, v1);
}

uint64_t sub_100614EA0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100033BE8(&qword_100AD8E80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100614F10()
{
  unint64_t result = qword_100AD8EE0;
  if (!qword_100AD8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8EE0);
  }
  return result;
}

uint64_t sub_100614F64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100614FAC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_100614FE0()
{
  return swift_release();
}

void *sub_100614FEC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100615030(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_100615068(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1006150C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_100615114(void *a1)
{
  return *a1 >> 63;
}

void *sub_100615120(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_100615130(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t type metadata accessor for FSOrFPJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10061515C(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x78);
}

unint64_t sub_100615168(uint64_t a1)
{
  unint64_t v1 = sub_100615740(a1);
  swift_retain();
  return v1;
}

uint64_t sub_100615198(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 184))();
}

uint64_t sub_1006151DC(uint64_t a1)
{
  if (a1 < 0)
  {
    swift_retain();
    v1._uint64_t countAndFlagsBits = 2650214;
  }
  else
  {
    swift_retain();
    v1._uint64_t countAndFlagsBits = 2650982;
  }
  v1._object = (void *)0xE300000000000000;
  sub_10096BDC0(v1);
  type metadata accessor for Job();
  swift_getWitnessTable();
  sub_10096D270();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  swift_release();
  return 0;
}

uint64_t sub_1006152F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  if (*v3 < 0) {
    v4 &= ~0x8000000000000000;
  }
  uint64_t v5 = *(void *)(v4 + 96);
  uint64_t v6 = *(void *)(v4 + 104);
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 104) = a2;
  char v7 = *(unsigned char *)(v4 + 112);
  *(unsigned char *)(v4 + 112) = a3;
  return sub_1000D31F8(v5, v6, v7);
}

unint64_t sub_10061531C(unint64_t a1)
{
  return a1 >> 63;
}

uint64_t sub_100615324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 < 0) {
    uint64_t v3 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + 56;
  }
  else {
    uint64_t v3 = a1 + 56;
  }
  swift_beginAccess();
  return sub_1003B32B0(v3, a2);
}

uint64_t sub_100615380(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (*v1 < 0) {
    v3 &= ~0x8000000000000000;
  }
  swift_beginAccess();
  swift_retain();
  sub_10020E310(a1, v3 + 56);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1006153F8()
{
  return sub_1007B24CC();
}

uint64_t sub_10061541C(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x88);
}

uint64_t sub_100615428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v22 = v5;
  uint64_t v23 = AssociatedConformanceWitness;
  uint64_t v24 = v7;
  uint64_t v8 = (void *)type metadata accessor for ThrottlingKey();
  uint64_t v9 = sub_10096C890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v19 - v12;
  if ((a1 & 0x8000000000000000) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 448))(v11);
  }
  uint64_t v20 = a2;
  (*(void (**)(uint64_t))(*(void *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 448))(v11);
  uint64_t v15 = *(v8 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v15 + 48))(v13, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v21 = v5;
    uint64_t v22 = AssociatedTypeWitness;
    uint64_t v23 = v7;
    uint64_t v24 = AssociatedConformanceWitness;
    uint64_t v16 = type metadata accessor for ThrottlingKey();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v20, 1, 1, v16);
  }
  else
  {
    uint64_t v17 = v20;
    sub_10070D53C(v8, v20);
    (*(void (**)(char *, void *))(v15 + 8))(v13, v8);
    uint64_t v21 = v5;
    uint64_t v22 = AssociatedTypeWitness;
    uint64_t v23 = v7;
    uint64_t v24 = AssociatedConformanceWitness;
    uint64_t v18 = type metadata accessor for ThrottlingKey();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
}

uint64_t sub_10061572C()
{
  return sub_1006151DC(*v0);
}

unint64_t sub_100615740(uint64_t a1)
{
  return a1 ^ 0x8000000000000000;
}

uint64_t sub_100615748(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
}

void *FileTreeLookupOptions.seeInIgnoredDirectories.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.seeInIgnoredDirectories;
}

void *FileTreeLookupOptions.markInIgnoredDirectories.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.markInIgnoredDirectories;
}

void *FileTreeLookupOptions.assumeMissingItemOnDocIDENOENT.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.assumeMissingItemOnDocIDENOENT;
}

void *FileTreeLookupOptions.strictVersioning.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.strictVersioning;
}

void *FileTreeLookupOptions.speculativeDownload.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.speculativeDownload;
}

void *FileTreeLookupOptions.bypassDetachmentState.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.bypassDetachmentState;
}

void *FileTreeLookupOptions.allowDocTrackingTemporaryFiles.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.allowDocTrackingTemporaryFiles;
}

void *FileTreeLookupOptions.dontAssumeExpectedID.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.dontAssumeExpectedID;
}

uint64_t static Fields.content.getter()
{
  return 8;
}

void *FileTreeLookupOptions.bundleBitPackageDetectionion.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.bundleBitPackageDetectionion;
}

uint64_t static Fields.lastUsedDate.getter()
{
  return 32;
}

void *FileTreeLookupOptions.bypassAdvisoryLocking.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.bypassAdvisoryLocking;
}

uint64_t static Fields.tags.getter()
{
  return 64;
}

uint64_t static Fields.favoriteRank.getter()
{
  return 128;
}

uint64_t static Fields.extendedAttributes.getter()
{
  return 256;
}

uint64_t static Fields.locked.getter()
{
  return 512;
}

uint64_t static Fields.creationDate.getter()
{
  return 1024;
}

uint64_t static Fields.contentModificationDate.getter()
{
  return 2048;
}

void *FileTreeLookupOptions.dropLocalChangesIgnoreVersionMismatch.unsafeMutableAddressor()
{
  return &static FileTreeLookupOptions.dropLocalChangesIgnoreVersionMismatch;
}

uint64_t static Fields.isHidden.getter()
{
  return 4096;
}

unint64_t sub_100615828(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100615858();
  unint64_t result = sub_1006158AC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100615858()
{
  unint64_t result = qword_100AD8F98;
  if (!qword_100AD8F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8F98);
  }
  return result;
}

unint64_t sub_1006158AC()
{
  unint64_t result = qword_100AD8FA0;
  if (!qword_100AD8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8FA0);
  }
  return result;
}

unint64_t sub_100615904()
{
  unint64_t result = qword_100AD8FA8;
  if (!qword_100AD8FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8FA8);
  }
  return result;
}

unint64_t sub_10061595C()
{
  unint64_t result = qword_100AD8FB0;
  if (!qword_100AD8FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8FB0);
  }
  return result;
}

unint64_t sub_1006159B4()
{
  unint64_t result = qword_100AD8FB8;
  if (!qword_100AD8FB8)
  {
    sub_100033BE8(&qword_100AD8FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8FB8);
  }
  return result;
}

uint64_t sub_100615A10()
{
  return sub_1006F00E8(*v0);
}

unint64_t sub_100615A1C()
{
  unint64_t result = qword_100AD8FC8;
  if (!qword_100AD8FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD8FC8);
  }
  return result;
}

unint64_t sub_100615A74()
{
  unint64_t result = qword_100AD8FD0[0];
  if (!qword_100AD8FD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD8FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeLookupOptions()
{
  return &type metadata for FileTreeLookupOptions;
}

uint64_t sub_100615AD8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100615B1C()
{
  return sub_100254F38();
}

uint64_t sub_100615BA0()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v1 = (id)sub_1006F2F2C();
    swift_release();
    return (uint64_t)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615BE8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = sub_1006F2FD0();
    swift_retain();
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615C30()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = sub_1006C7F60();
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615C74()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = sub_1006C7F68();
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615CB8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 224))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615D1C()
{
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615D40()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615DA4()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 232))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615E08()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 240))(result);
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615E6C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 272))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615ED8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 256))(result);
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615F44()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 264))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100615FB0()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 248))(result);
    swift_release();
    type metadata accessor for FSOrFPJob();
    sub_10096CB50();
    swift_getWitnessTable();
    sub_10096BF50();
    uint64_t v1 = swift_release();
    __chkstk_darwin(v1);
    swift_getKeyPath();
    sub_10096CC00();
    type metadata accessor for FSOrFPJob();
    swift_getWitnessTable();
    sub_10096CEF0();
    swift_release();
    swift_release();
    sub_10096CD60();
    swift_getWitnessTable();
    return sub_10096CB60();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006161F0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  *a2 = sub_100615740(*a1);

  return swift_retain();
}

uint64_t sub_10061623C()
{
  return swift_release();
}

uint64_t sub_10061629C()
{
  return sub_100617238((void (*)(void))sub_1006C05B4);
}

uint64_t sub_1006162B4(char a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = (*(uint64_t (**)(BOOL))(*(void *)result + 392))((a1 & 1) == 0);
    swift_release();
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10061632C(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = a8;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    sub_1006BA410(a1, a2, a3, (a4 & 1) == 0, (uint64_t)sub_10035F894, v17, a7, v18, a9, a10);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100616444(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, BOOL, void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 424))(a1, a2, a3, (a4 & 1) == 0, a5 & 1, a6, a7, a8, a9);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10061652C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006BE104(a1 & 1, a2, a3, a4, a5, a6, a7, a8);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006165E0(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006BE1AC(a1, a2, a3, a4, a5, a6, a7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616684@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006BFD34(a1, a2, a3, a4, a5, a6, a7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10061672C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 576);
  uint64_t v2 = *(void *)(*(void *)v0 + 584);
  uint64_t v3 = *(void *)(*(void *)v0 + 592);
  uint64_t v4 = *(void *)(*(void *)v0 + 600);
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  uint64_t v5 = type metadata accessor for PersistenceTrigger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (_OWORD *)((char *)&v11 - v7);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = v2;
    uint64_t v12 = v1;
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    uint64_t v10 = (void *)type metadata accessor for PersistenceTrigger();
    sub_1001C9044(v10, v8);
    sub_1006C8248((uint64_t)v8);
    swift_release();
    return (*(uint64_t (**)(_OWORD *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006168AC(uint64_t a1, void *a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v5 = sub_100615740(a1);
    swift_retain();
    sub_1006C838C(v5, a2);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616964()
{
  return sub_100617238(sub_1006C8B2C);
}

uint64_t sub_10061697C()
{
  return sub_100617238((void (*)(void))sub_1006C8CB4);
}

uint64_t sub_100616994()
{
  return sub_100617238((void (*)(void))sub_1006C8DB0);
}

uint64_t sub_1006169AC()
{
  return sub_100617238((void (*)(void))sub_1006C8DDC);
}

uint64_t sub_1006169C4(char a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = sub_1006F2FD8(byte_1009878FA[a1]);
    swift_retain();
    swift_release();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616A20(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(*(void *)result + 464))(a1, a2 & 1, a3, a4, a5);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616AD8(uint64_t a1)
{
  return sub_100616B08(a1, (uint64_t (*)(char *))sub_1006C93D8);
}

uint64_t sub_100616AF0(uint64_t a1)
{
  return sub_100616B08(a1, (uint64_t (*)(char *))sub_1006C93E0);
}

uint64_t sub_100616B08(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v16 = v3;
  uint64_t v17 = AssociatedConformanceWitness;
  uint64_t v18 = v5;
  uint64_t v6 = type metadata accessor for ReconciliationID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = v3;
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = v5;
    uint64_t v18 = AssociatedConformanceWitness;
    uint64_t v11 = (int8x16_t *)type metadata accessor for ReconciliationID();
    sub_1005EC558(v11, (uint64_t)v9);
    uint64_t v12 = v14(v9);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 576);
  uint64_t v5 = *(void *)(*(void *)v2 + 584);
  uint64_t v6 = *(void *)(*(void *)v2 + 592);
  uint64_t v7 = *(void *)(*(void *)v2 + 600);
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  uint64_t v8 = type metadata accessor for TestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = v5;
    uint64_t v15 = v4;
    uint64_t v16 = v7;
    uint64_t v17 = v6;
    uint64_t v13 = (void *)type metadata accessor for TestingOperation();
    sub_100690E68(v13, (uint64_t)v11);
    sub_1006C93E8((uint64_t)v11, a2);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616EA8(uint64_t a1)
{
  return sub_100616ED8(a1, (void (*)(unint64_t))sub_1006C8E08);
}

uint64_t sub_100616EC0(uint64_t a1)
{
  return sub_100616ED8(a1, (void (*)(unint64_t))sub_1006C8FB8);
}

uint64_t sub_100616ED8(uint64_t a1, void (*a2)(unint64_t))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v5 = sub_100615740(a1);
    swift_retain();
    a2(v5);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100616F90(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v3 = sub_100615740(a1);
    swift_retain();
    uint64_t v4 = sub_1006C9158(v3);
    swift_release();
    swift_release();
    unint64_t v5 = sub_100615740(v4);
    swift_retain();
    swift_release();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10061708C()
{
  return sub_1006170BC(sub_1006CB99C);
}

uint64_t sub_1006170A4()
{
  return sub_1006170BC(sub_1006CB9A8);
}

uint64_t sub_1006170BC(uint64_t (*a1)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = a1();
    swift_release();
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100617108(uint64_t a1)
{
  return sub_100617138(a1, (uint64_t (*)(uint64_t))sub_1006CBC14);
}

uint64_t sub_100617120(uint64_t a1)
{
  return sub_100617138(a1, (uint64_t (*)(uint64_t))sub_1006CB9B4);
}

uint64_t sub_100617138(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v5 = a2(a1);
    swift_release();
    return v5 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100617194()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 552))(result);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100617208()
{
  return sub_100617238((void (*)(void))sub_1006CBE74);
}

uint64_t sub_100617220()
{
  return sub_100617238((void (*)(void))sub_1006CBF1C);
}

uint64_t sub_100617238(void (*a1)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a1();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100617288()
{
  return swift_weakDestroy();
}

uint64_t sub_100617290()
{
  uint64_t v0 = sub_10035D334();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1006172C0()
{
  sub_10035D334();
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwappedDatabase()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100617320(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 600);
}

uint64_t sub_100617328(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 592);
}

uint64_t sub_100617330(uint64_t a1, uint64_t a2)
{
  return sub_100617614(a2);
}

uint64_t sub_10061734C(uint64_t a1, uint64_t a2)
{
  return sub_1006174EC(a2);
}

uint64_t sub_100617354(uint64_t a1, uint64_t a2)
{
  return sub_10061773C(a2);
}

void *sub_10061735C(uint64_t *a1)
{
  swift_weakInit();
  swift_weakAssign();
  type metadata accessor for SwappedReconciliationTable();
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_10022136C(v2);
  type metadata accessor for SwappedJobRegistry();
  uint64_t v4 = sub_100606BF4(a1[3]);
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_10035F994(v3, v4, v5, v6, v8, v7);
  swift_release();
  return v9;
}

void *sub_1006174B0(uint64_t *a1)
{
  return sub_10061735C(a1);
}

uint64_t sub_1006174EC(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_1006C7F70();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_100615740(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 128);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100617614(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_1006C7F70();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_100615740(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 120);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10061773C(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_1006C7F70();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_100615740(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 144);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100617864()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006178A0()
{
  return 32;
}

__n128 sub_1006178AC(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1006178B8()
{
  return sub_10061623C();
}

BOOL static VFSItemID.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    BOOL v5 = a4 == 1 && a1 == a3;
    BOOL v7 = a4 == 2 && a3 == 0;
    BOOL v9 = a4 == 2 && a3 == 1;
    if (!a1) {
      BOOL v9 = v7;
    }
    if (a2 == 1) {
      return v5;
    }
    else {
      return v9;
    }
  }
  else
  {
    return !a4 && a1 == a3;
  }
}

BOOL VFSItemID.isRoot.getter(uint64_t a1, char a2)
{
  return !a1 && a2 == 2;
}

unint64_t VFSItemID.init(rs:at:)(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_100618348(a1, a2);

  return v3;
}

uint64_t VFSItemID.init(kind:handle:)(unsigned __int8 a1, unsigned int *a2)
{
  int v3 = a1;
  sub_10021E550((uint64_t)a2);
  if ((v3 - 1) <= 1) {
    return *(void *)a2;
  }
  uint64_t result = a2[4];
  if (!result) {
    return *(void *)a2;
  }
  return result;
}

uint64_t VFSItemID.parseableString.getter(uint64_t a1, char a2)
{
  if (!a2)
  {
    uint64_t v3 = 0x284449636F64;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    uint64_t v3 = 0x284449656C6966;
LABEL_5:
    v4._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v4);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 41;
    v5._object = (void *)0xE100000000000000;
    sub_10096BDC0(v5);
    return v3;
  }
  if (a1) {
    return 0x6873617274;
  }
  else {
    return 1953460082;
  }
}

BOOL VFSItemID.isTrash.getter(uint64_t a1, unsigned __int8 a2)
{
  return a2 > 1u && a1 != 0;
}

void *VFSItemID.sqlType.unsafeMutableAddressor()
{
  return &static VFSItemID.sqlType;
}

uint64_t static VFSItemID.sqlType.getter()
{
  return 5525065;
}

unint64_t VFSItemID.rawValue.getter(unint64_t result, char a2)
{
  if (!a2) {
    return -(uint64_t)result;
  }
  if (a2 != 1) {
    return (unint64_t)(result != 0) << 63;
  }
  if ((result & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return result;
}

uint64_t VFSItemID.init(rawValue:)(unint64_t a1)
{
  uint64_t v2 = sub_10096A630();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10096A650();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 0x8000000000000000)
    {
      return 1;
    }
    else if ((a1 & 0x8000000000000000) != 0)
    {
      a1 = -(uint64_t)a1;
      if (HIDWORD(a1))
      {
        sub_10096A5B0();
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_10010DA14();
        sub_10096ABD0();
        BOOL v7 = (void *)sub_10096A4D0();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_willThrow();

        return 0;
      }
    }
  }
  return a1;
}

uint64_t VFSItemID.encode(_:)(void *a1, unint64_t a2, char a3)
{
  unint64_t v9 = a2;
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 != 1)
  {
    unint64_t v9 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    unint64_t v9 = -(uint64_t)a2;
  }
LABEL_7:
  id v10 = objc_msgSend(a1, "bindLongParameter:", v9, v6, v5, v4, v3, v7, v8);
  uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  return v11;
}

unint64_t VFSItemID.init(sqliteValue:)(sqlite3_value *a1)
{
  return sub_1006189A0(a1);
}

uint64_t VFSItemID.init(from:)(uint64_t a1)
{
  return sub_100618B48(a1);
}

uint64_t VFSItemID.encode(to:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1 && a2 < 0) {
    __break(1u);
  }
  return sub_10096C3E0();
}

unint64_t VFSItemID.init(fromRestoreResultSet:at:)(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_100618D34(a1, a2);

  return v3;
}

void VFSItemID.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(a2);
    }
    else
    {
      if (a2) {
        Swift::UInt v4 = 3;
      }
      else {
        Swift::UInt v4 = 2;
      }
      sub_10096D4C0(v4);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(a2);
  }
}

Swift::Int VFSItemID.hashValue.getter(Swift::UInt64 a1, char a2)
{
  sub_10096D4B0();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(a1);
    }
    else
    {
      if (a1) {
        Swift::UInt v4 = 3;
      }
      else {
        Swift::UInt v4 = 2;
      }
      sub_10096D4C0(v4);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(a1);
  }
  return sub_10096D500();
}

void sub_100617F1C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
}

void sub_100617F2C(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 2;
}

BOOL sub_100617F40()
{
  return !*(void *)v0 && *(unsigned char *)(v0 + 8) == 2;
}

BOOL sub_100617F58()
{
  return *(unsigned __int8 *)(v0 + 8) >= 2u && *(void *)v0 != 0;
}

uint64_t sub_100617F7C()
{
  return VFSItemID.parseableString.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_100617F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = _s9libfssync9VFSItemIDO7parsingACSgSS_tcfC_0(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  return result;
}

BOOL sub_100617FB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  BOOL v5 = *a1 == *a2;
  if (*((unsigned char *)a2 + 8)) {
    BOOL v5 = 0;
  }
  BOOL v7 = v4 == 1 && v2 == v3;
  BOOL v9 = v4 == 2 && v3 == 0;
  BOOL v11 = v4 == 2 && v3 == 1;
  if (v2) {
    BOOL v12 = v11;
  }
  else {
    BOOL v12 = v9;
  }
  if (*((unsigned char *)a1 + 8) == 1) {
    BOOL v12 = v7;
  }
  if (*((unsigned char *)a1 + 8)) {
    return v12;
  }
  else {
    return v5;
  }
}

Swift::Int sub_100618014()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_10096D4B0();
  if (v2)
  {
    if (v2 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(v1);
    }
    else
    {
      if (v1) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 2;
      }
      sub_10096D4C0(v3);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(v1);
  }
  return sub_10096D500();
}

void sub_1006180B0()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    if (*(unsigned char *)(v0 + 8) == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(v1);
    }
    else
    {
      if (v1) {
        Swift::UInt v2 = 3;
      }
      else {
        Swift::UInt v2 = 2;
      }
      sub_10096D4C0(v2);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(v1);
  }
}

Swift::Int sub_100618124()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_10096D4B0();
  if (v2)
  {
    if (v2 == 1)
    {
      sub_10096D4C0(1uLL);
      sub_10096D4F0(v1);
    }
    else
    {
      if (v1) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 2;
      }
      sub_10096D4C0(v3);
    }
  }
  else
  {
    sub_10096D4C0(0);
    sub_10096D4E0(v1);
  }
  return sub_10096D500();
}

void sub_1006181BC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_100618348(a1, a2);
  char v8 = v7;

  if (!v3)
  {
    *(void *)a3 = v6;
    *(unsigned char *)(a3 + 8) = v8;
  }
}

unint64_t sub_100618214@<X0>(sqlite3_value *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1006189A0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_100618244(void *a1)
{
  unint64_t v2 = *(void *)v1;
  if (!*(unsigned char *)(v1 + 8)) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(v1 + 8) != 1)
  {
    unint64_t v2 = (unint64_t)(v2 != 0) << 63;
    goto LABEL_7;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    unint64_t v2 = -(uint64_t)v2;
  }
LABEL_7:
  id v3 = [a1 bindLongParameter:v2];
  uint64_t v4 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

  return v4;
}

uint64_t sub_1006182CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100618B48(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1006182FC()
{
  if (*(unsigned char *)(v0 + 8) && *(unsigned char *)(v0 + 8) == 1 && (*(void *)v0 & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return sub_10096C3E0();
}

unint64_t sub_100618348(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10096A630();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10096A650();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (unint64_t)[a1 longAtIndex:a2];
  if (result == 0x8000000000000000) {
    return 1;
  }
  if (result && (result & 0x8000000000000000) != 0)
  {
    unint64_t result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_10096A5B0();
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10010DA14();
      sub_10096ABD0();
      sub_10096A4D0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_willThrow();
    }
  }
  return result;
}

unint64_t _s9libfssync9VFSItemIDO7parsingACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953460082 && a2 == 0xE400000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == 0x6873617274 && a2 == 0xE500000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (sub_100008C28())
  {
    unint64_t result = sub_10096BD80();
    if (result >= 0x60000)
    {
      uint64_t v7 = sub_10096BEE0();
      unint64_t v9 = v8;
      unint64_t v11 = v10;
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      if ((v7 ^ v9) >= 0x4000)
      {
        uint64_t v14 = sub_10003D06C(v7, v9, v11, v13, 10);
        if ((v14 & 0x10000000000) != 0) {
          uint64_t v14 = sub_10003C3D8(v7, v9, v11, v13, 10);
        }
        uint64_t v15 = v14;
        swift_bridgeObjectRelease();
        if ((v15 & 0x100000000) == 0) {
          return v15;
        }
        return 0;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      return 0;
    }
    __break(1u);
  }
  else
  {
    if ((sub_100008C28() & 1) == 0) {
      goto LABEL_26;
    }
    unint64_t result = sub_10096BD80();
    if (result >= 0x70000)
    {
      uint64_t v16 = sub_10096BEE0();
      unint64_t v18 = v17;
      unint64_t v20 = v19;
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      if ((v16 ^ v18) >= 0x4000)
      {
        uint64_t v23 = sub_10003CF98(v16, v18, v20, v22, 10);
        if ((v24 & 0x100) != 0) {
          uint64_t v23 = (uint64_t)sub_10003C2E4(v16, v18, v20, v22, 10);
        }
        uint64_t v5 = v23;
        char v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0) {
          return v5;
        }
        return 0;
      }
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006187FC(uint64_t a1)
{
  uint64_t v2 = sub_10096A630();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10096A650();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 0x8000000000000000)
    {
      return 1;
    }
    else if (a1 < 0)
    {
      a1 = -a1;
      if (HIDWORD(a1))
      {
        sub_10096A5B0();
        sub_100042898((uint64_t)_swiftEmptyArrayStorage);
        sub_10010DA14();
        sub_10096ABD0();
        a1 = (uint64_t)v6;
        sub_10096A4D0();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_willThrow();
      }
    }
  }
  return a1;
}

unint64_t sub_1006189A0(sqlite3_value *a1)
{
  uint64_t v2 = sub_10096A630();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10096A650();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sqlite3_value_int64(a1);
  if (result == 0x8000000000000000) {
    return 1;
  }
  if (result && (result & 0x8000000000000000) != 0)
  {
    unint64_t result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_10096A5B0();
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10010DA14();
      sub_10096ABD0();
      sub_10096A4D0();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100618B48(uint64_t a1)
{
  uint64_t v4 = sub_10096A630();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10096A650();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10009CA78(a1, (uint64_t)v12);
  uint64_t v9 = sub_10096C3D0();
  if (!v1)
  {
    uint64_t v2 = v9;
    if (v9 == 0x8000000000000000)
    {
      uint64_t v2 = 1;
    }
    else if (v9)
    {
      if (v9 < 0)
      {
        uint64_t v2 = -v9;
        if ((unint64_t)-v9 >> 32)
        {
          sub_10096A5B0();
          sub_100042898((uint64_t)_swiftEmptyArrayStorage);
          sub_10010DA14();
          sub_10096ABD0();
          sub_10096A4D0();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          swift_willThrow();
        }
      }
    }
  }
  sub_1000268E0(a1);
  return v2;
}

unint64_t sub_100618D34(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10096A630();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10096A650();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)[a1 longAtIndex:a2];
  unint64_t v10 = v9 + 0x7FFFFFFFFFFFFFFFLL;
  if ((v9 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    unint64_t v10 = v9;
  }
  if (v9 >= 1) {
    unint64_t result = 0x7FFFFFFF - v9;
  }
  else {
    unint64_t result = v10;
  }
  if (result == 0x8000000000000000) {
    return 1;
  }
  if (result && (result & 0x8000000000000000) != 0)
  {
    unint64_t result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_10096A5B0();
      sub_100042898((uint64_t)_swiftEmptyArrayStorage);
      sub_10010DA14();
      sub_10096ABD0();
      sub_10096A4D0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_willThrow();
    }
  }
  return result;
}

unint64_t sub_100618F14(void *a1)
{
  a1[1] = sub_100618F54();
  a1[2] = sub_10026389C();
  a1[3] = sub_1002637A0();
  unint64_t result = sub_1001FA8E4();
  a1[4] = result;
  return result;
}

unint64_t sub_100618F54()
{
  unint64_t result = qword_100AD90A0;
  if (!qword_100AD90A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD90A0);
  }
  return result;
}

unint64_t sub_100618FAC()
{
  unint64_t result = qword_100AD90A8;
  if (!qword_100AD90A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD90A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemID()
{
  return &type metadata for VFSItemID;
}

uint64_t sub_100619010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  unint64_t v11 = (char *)&v16 - v10;
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  swift_getAssociatedConformanceWitness();
  return sub_1005E4708((uint64_t)v11, v12, v14, (uint64_t)v8, AssociatedTypeWitness, a3);
}

void *sub_1006191A4(uint64_t a1)
{
  return sub_1006191BC(a1);
}

void *sub_1006191BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100445EC4(0, v1, 0);
    uint64_t v3 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      unint64_t v5 = *v3;
      sub_10001EBB0(v4, *v3);
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100445EC4(v6 > 1, v7 + 1, 1);
      }
      v3 += 8;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t FileItem.isDataless.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v8 = v7[*(int *)(v5 + 88)];
  sub_10010DAFC((uint64_t)v7);
  return v8;
}

uint64_t FileItem.kind.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (unsigned __int8 *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v7 = *v6;
  sub_10010DAFC((uint64_t)v6);
  return v7;
}

uint64_t sub_1006193F0(uint64_t result, char a2)
{
  if (a2) {
    *v2 |= result;
  }
  return result;
}

uint64_t FileItem.syncability.getter()
{
  return 0;
}

uint64_t TrackingContinuation.init(from:)(uint64_t a1)
{
  sub_1000268E0(a1);
  return v1;
}

uint64_t FileItem.description.getter(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v51 = swift_getAssociatedTypeWitness();
  *((void *)&v51 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v52 = swift_getAssociatedConformanceWitness();
  *((void *)&v52 + 1) = swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v37 - v5;
  uint64_t v6 = type metadata accessor for ItemMetadata();
  __chkstk_darwin(v6 - 8);
  uint64_t v43 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v37 - v9;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 120))(v48, a1, a2);
  sub_10001AE98((uint64_t)v48, (uint64_t)v49, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v49) == 1)
  {
    v42._uint64_t countAndFlagsBits = 0;
    unint64_t v11 = (void *)0xE000000000000000;
  }
  else
  {
    long long v63 = v49[12];
    long long v64 = v49[13];
    long long v65 = v49[14];
    uint64_t v66 = v50;
    long long v59 = v49[8];
    long long v60 = v49[9];
    long long v61 = v49[10];
    long long v62 = v49[11];
    long long v55 = v49[4];
    long long v56 = v49[5];
    long long v57 = v49[6];
    long long v58 = v49[7];
    long long v51 = v49[0];
    long long v52 = v49[1];
    long long v53 = v49[2];
    long long v54 = v49[3];
    uint64_t v12 = ItemNonSyncableAttributes.description.getter();
    uint64_t v14 = v13;
    sub_1000DBD88((uint64_t)v48);
    strcpy((char *)v47, " nsattr:");
    BYTE1(v47[1]) = 0;
    WORD1(v47[1]) = 0;
    HIDWORD(v47[1]) = -402653184;
    v67._uint64_t countAndFlagsBits = v12;
    v67._object = v14;
    sub_10096BDC0(v67);
    swift_bridgeObjectRelease();
    v42._uint64_t countAndFlagsBits = v47[0];
    unint64_t v11 = (void *)v47[1];
  }
  v42._object = v11;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 136);
  if (v15(a1, a2))
  {
    strcpy((char *)v47, " unsupported:");
    HIWORD(v47[1]) = -4864;
    uint64_t v16 = v15(a1, a2);
    v68._uint64_t countAndFlagsBits = sub_1006096B0(v16);
    sub_10096BDC0(v68);
    swift_bridgeObjectRelease();
    v40._uint64_t countAndFlagsBits = v47[0];
    unint64_t v17 = (void *)v47[1];
  }
  else
  {
    v40._uint64_t countAndFlagsBits = 0;
    unint64_t v17 = (void *)0xE000000000000000;
  }
  v40._object = v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  int v20 = v18;
  if (v19 >> 62)
  {
    if (v19 >> 62 != 1)
    {
      uint64_t v39 = 0;
      unint64_t v22 = 0xE000000000000000;
      goto LABEL_13;
    }
    sub_1000CF144(v18, v19);
    uint64_t v21 = 1886221352;
  }
  else
  {
    sub_1000CF144(v18, v19);
    uint64_t v21 = 1852270888;
  }
  v47[0] = v21 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
  v47[1] = 0xE500000000000000;
  v69._uint64_t countAndFlagsBits = fpfs_tempfile_pattern_t.description.getter(v20);
  sub_10096BDC0(v69);
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = 41;
  v70._object = (void *)0xE100000000000000;
  sub_10096BDC0(v70);
  uint64_t v39 = v47[0];
  unint64_t v22 = v47[1];
LABEL_13:
  int v38 = (void *)v22;
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_10096CBD0(25);
  v71._uint64_t countAndFlagsBits = 3828028;
  v71._object = (void *)0xE300000000000000;
  sub_10096BDC0(v71);
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  swift_getAssociatedConformanceWitness();
  sub_10096D270();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v41 + 8);
  v23(v10, AssociatedTypeWitness);
  v72._uint64_t countAndFlagsBits = 3829792;
  v72._object = (void *)0xE300000000000000;
  sub_10096BDC0(v72);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  sub_10096D270();
  v23(v10, AssociatedTypeWitness);
  v73._uint64_t countAndFlagsBits = 574254624;
  v73._object = (void *)0xE400000000000000;
  sub_10096BDC0(v73);
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  NSString v24 = sub_10096BC00();
  id v25 = objc_msgSend(v24, "fp_obfuscatedFilename");

  uint64_t v26 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v28 = v27;

  v74._uint64_t countAndFlagsBits = v26;
  v74._object = v28;
  sub_10096BDC0(v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75._uint64_t countAndFlagsBits = 34;
  v75._object = (void *)0xE100000000000000;
  sub_10096BDC0(v75);
  v76._uint64_t countAndFlagsBits = v39;
  v76._object = v38;
  sub_10096BDC0(v76);
  swift_bridgeObjectRelease();
  v77._uint64_t countAndFlagsBits = 32;
  v77._object = (void *)0xE100000000000000;
  sub_10096BDC0(v77);
  uint64_t v29 = (uint64_t)v43;
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  v78._uint64_t countAndFlagsBits = ItemMetadata.description.getter();
  sub_10096BDC0(v78);
  swift_bridgeObjectRelease();
  sub_10010DAFC(v29);
  sub_10096BDC0(v40);
  swift_bridgeObjectRelease();
  v79._uint64_t countAndFlagsBits = 32;
  v79._object = (void *)0xE100000000000000;
  sub_10096BDC0(v79);
  uint64_t v31 = v47[0];
  uint64_t v30 = v47[1];
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  unint64_t v32 = v44;
  (*(void (**)(uint64_t, uint64_t))(a2 + 112))(a1, a2);
  uint64_t v33 = v46;
  swift_getWitnessTable();
  sub_10096D270();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
  sub_10096BDC0(v42);
  swift_bridgeObjectRelease();
  v80._uint64_t countAndFlagsBits = 62;
  v80._object = (void *)0xE100000000000000;
  sub_10096BDC0(v80);
  uint64_t v34 = v47[0];
  uint64_t v35 = (void *)v47[1];
  v47[0] = v31;
  v47[1] = v30;
  swift_bridgeObjectRetain();
  v81._uint64_t countAndFlagsBits = v34;
  v81._object = v35;
  sub_10096BDC0(v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v47[0];
}

uint64_t static Syncability.== infix(_:_:)(int a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      if (a4 >> 62 != 1) {
        return 0;
      }
      return a1 == a3;
    }
    if (a4 >> 62 == 2 && !a3 && a4 == 0x8000000000000000) {
      return 1;
    }
  }
  else if (!(a4 >> 62))
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_100619C18(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  uint64_t v4 = a1[1] >> 62;
  if (!v4)
  {
    if (v3 >> 62) {
      return 0;
    }
    return *a1 == v2;
  }
  if (v4 == 1)
  {
    if (v3 >> 62 != 1) {
      return 0;
    }
    return *a1 == v2;
  }
  return v3 >> 62 == 2 && v2 == 0 && v3 == 0x8000000000000000;
}

uint64_t FileItem.unappliedFields<A>(from:)(uint64_t a1)
{
  void (*v61)(void *__return_ptr, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  char v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  int v75;
  char v76;
  char v77;
  int v78;
  char v79;
  char v80;
  int v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  char v105;
  char v106;
  int v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  char v137;
  void *v138;
  void *v139;
  char v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void v192[31];
  void v193[31];
  void v194[31];
  void v195[31];
  void v196[31];
  void v197[31];
  void v198[31];
  void v199[31];
  void v200[31];
  void v201[31];
  void v202[31];
  void v203[31];
  void v204[31];
  void v205[31];
  void v206[31];
  void v207[31];
  void v208[31];
  void v209[31];
  void v210[31];
  void v211[31];
  void v212[31];
  void v213[31];
  void v214[31];
  void v215[31];
  void v216[31];
  void v217[31];
  void v218[31];
  void v219[31];
  void v220[31];
  void v221[31];
  void v222[31];
  void v223[31];
  void v224[31];
  void v225[31];
  void v226[31];
  void v227[31];
  void v228[31];
  void v229[31];
  void v230[31];
  void v231[31];
  void v232[31];
  void v233[31];
  void v234[31];
  void v235[31];
  void v236[31];
  void v237[31];
  void v238[31];
  void v239[31];
  void v240[31];
  void v241[31];
  _OWORD v242[15];
  uint64_t v243;
  long long v244;
  long long v245;
  long long v246;
  long long v247;
  long long v248;
  long long v249;
  long long v250;
  long long v251;
  long long v252;
  long long v253;
  long long v254;
  long long v255;
  long long v256;
  long long v257;
  long long v258;
  uint64_t v259;
  _OWORD v260[15];
  uint64_t v261;
  long long v262;
  long long v263;
  long long v264;
  long long v265;
  long long v266;
  long long v267;
  long long v268;
  long long v269;
  long long v270;
  long long v271;
  long long v272;
  long long v273;
  long long v274;
  long long v275;
  long long v276;
  uint64_t v277;
  void v278[31];
  void v279[31];
  unsigned char v280[192];
  void *v281;
  void *v282;
  unsigned char v283[192];
  void *v284;
  void *v285;
  void v286[31];
  void v287[31];
  unsigned char v288[248];
  unsigned char v289[248];
  void v290[31];
  void v291[31];
  void v292[31];
  void v293[31];
  void v294[31];
  void v295[31];
  void v296[31];
  void v297[31];
  unsigned char v298[248];
  unsigned char v299[248];
  unsigned char v300[248];
  unsigned char v301[248];
  void v302[31];
  void v303[31];
  unsigned char v304[248];
  unsigned char v305[248];
  void v306[31];
  void v307[31];
  void v308[31];
  void v309[31];
  unsigned char v310[248];
  unsigned char v311[248];
  unsigned char v312[248];
  unsigned char v313[248];
  unsigned char v314[248];
  unsigned char v315[248];
  _OWORD v316[15];
  uint64_t v317;
  long long v318;
  _OWORD v319[14];
  uint64_t v320;
  _OWORD v321[15];
  uint64_t v322;
  long long v323;
  _OWORD v324[14];
  uint64_t v325;
  _OWORD v326[15];
  uint64_t v327;
  long long v328;
  _OWORD v329[14];
  uint64_t v330;
  _OWORD v331[15];
  uint64_t v332;
  long long v333;
  _OWORD v334[14];
  uint64_t v335;
  unsigned char v336[248];
  unsigned char v337[248];
  unsigned char v338[248];
  unsigned char v339[248];
  void v340[31];
  void v341[31];
  char v342[8];
  char v343[8];
  char v344[8];
  char v345[8];
  char v346[8];
  char v347[8];
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353[3];

  uint64_t v2 = __chkstk_darwin(a1);
  long long v191 = v1;
  int v185 = v4;
  long long v186 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  long long v187 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v188 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  long long v181 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v180 = (char *)&v166 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  long long v174 = v13;
  long long v184 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  long long v177 = (char *)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v175 = (char *)&v166 - v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v176 = AssociatedConformanceWitness;
  long long v178 = AssociatedTypeWitness;
  long long v179 = swift_getAssociatedConformanceWitness();
  v341[0] = v13;
  v341[1] = AssociatedTypeWitness;
  v341[2] = AssociatedConformanceWitness;
  v341[3] = v179;
  long long v173 = type metadata accessor for FileItemVersion();
  long long v182 = *(void *)(v173 - 8);
  uint64_t v18 = __chkstk_darwin(v173);
  unint64_t v172 = (char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v183 = (char *)&v166 - v20;
  uint64_t v21 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v22 = type metadata accessor for ItemState();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v166 - v27;
  unint64_t v189 = v8;
  sub_100619010(v8, v21, (uint64_t)&v166 - v27);
  uint64_t v29 = v185;
  uint64_t v30 = v186;
  sub_100619010(v186, v185, (uint64_t)v26);
  uint64_t v31 = v30;
  uint64_t v32 = v29;
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 136))(v31, v29);
  unint64_t v171 = sub_1005E4860((uint64_t)v26, v33, 0, v22);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v23 + 8);
  v34(v26, v22);
  v34(v28, v22);
  long long v190 = v21;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v21 + 112);
  uint64_t v169 = v21 + 112;
  unint64_t v170 = v35;
  uint64_t v36 = v183;
  v35(v8, v21);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
  uint64_t v38 = v174;
  uint64_t v39 = v175;
  v37(v175, v36, v174);
  long long v182 = *(void *)(v182 + 8);
  uint64_t v40 = v173;
  ((void (*)(char *, uint64_t))v182)(v36, v173);
  unint64_t v167 = *(void (**)(uint64_t, uint64_t))(v32 + 112);
  unint64_t v168 = v32 + 112;
  uint64_t v41 = v172;
  v167(v186, v32);
  Swift::String v42 = v177;
  uint64_t v43 = v38;
  v37(v177, v41, v38);
  ((void (*)(char *, uint64_t))v182)(v41, v40);
  uint64_t v44 = v39;
  uint64_t v45 = v42;
  LOBYTE(v42) = sub_10096BBE0();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v184 + 8);
  v46(v45, v43);
  v46(v44, v43);
  uint64_t v47 = v171 | 8;
  if (v42) {
    uint64_t v47 = v171;
  }
  long long v184 = v47;
  uint64_t v48 = v183;
  v170(v189, v190);
  uint64_t v49 = v40;
  uint64_t v50 = &v48[*(int *)(v40 + 56)];
  long long v51 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
  long long v52 = v180;
  uint64_t v53 = v178;
  v51(v180, v50, v178);
  long long v54 = v48;
  uint64_t v55 = v49;
  long long v56 = (void (*)(char *, uint64_t))v182;
  ((void (*)(char *, uint64_t))v182)(v54, v49);
  v167(v186, v185);
  long long v57 = v181;
  v51(v181, &v41[*(int *)(v55 + 56)], v53);
  v56(v41, v55);
  long long v58 = v57;
  LOBYTE(v57) = sub_10096BBE0();
  long long v59 = *(void (**)(char *, uint64_t))(v188 + 8);
  v59(v58, v53);
  v59(v52, v53);
  if (v57) {
    uint64_t v60 = v184;
  }
  else {
    uint64_t v60 = v184 | 0x20000000000;
  }
  long long v61 = *(void (**)(void *__return_ptr, uint64_t))(v190 + 120);
  v61(v192, v189);
  sub_10001AE98((uint64_t)v192, (uint64_t)v341, &qword_100AD0EA0);
  long long v62 = sub_1000DBD64((uint64_t)v341);
  long long v63 = 0;
  if (v62 != 1)
  {
    long long v63 = v341[0];
    sub_1000DBD88((uint64_t)v192);
  }
  long long v64 = v185;
  unint64_t v188 = *(void *)(v185 + 120);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v193, v186, v185);
  sub_10001AE98((uint64_t)v193, (uint64_t)v340, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v340) != 1)
  {
    long long v65 = v340[0];
    sub_1000DBD88((uint64_t)v193);
    if (v62 != 1 && v63 == v65) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v62 != 1) {
LABEL_13:
  }
    v60 |= 0x40000uLL;
LABEL_14:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v194, v189, v190);
  sub_10001AE98((uint64_t)v194, (uint64_t)v339, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v339) == 1)
  {
    uint64_t v66 = 2;
  }
  else
  {
    Swift::String v67 = v339[8];
    sub_1000DBD88((uint64_t)v194);
    uint64_t v66 = v67 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v195, v186, v64);
  sub_10001AE98((uint64_t)v195, (uint64_t)v338, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v338) != 1)
  {
    Swift::String v68 = v338[8];
    sub_1000DBD88((uint64_t)v195);
    if (v66 != 2 && (v68 & 1) == (v66 != 0)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v66 != 2) {
LABEL_22:
  }
    v60 |= 0x80000uLL;
LABEL_23:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v196, v189, v190);
  sub_10001AE98((uint64_t)v196, (uint64_t)v337, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v337) == 1)
  {
    Swift::String v69 = 2;
  }
  else
  {
    Swift::String v70 = v337[9];
    sub_1000DBD88((uint64_t)v196);
    Swift::String v69 = v70 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v197, v186, v64);
  sub_10001AE98((uint64_t)v197, (uint64_t)v336, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v336) == 1)
  {
    if (v69 == 2) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  Swift::String v71 = v336[9];
  sub_1000DBD88((uint64_t)v197);
  if (v69 == 2 || (v71 & 1) != (v69 != 0)) {
LABEL_31:
  }
    v60 |= 0x100000uLL;
LABEL_32:
  Swift::String v72 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v198, v189, v190);
  sub_10001AE98((uint64_t)v198, (uint64_t)v331, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v331) == 1) {
    goto LABEL_35;
  }
  v334[11] = v331[12];
  v334[12] = v331[13];
  v334[13] = v331[14];
  unint64_t v335 = v332;
  v334[7] = v331[8];
  v334[8] = v331[9];
  v334[9] = v331[10];
  v334[10] = v331[11];
  v334[3] = v331[4];
  v334[4] = v331[5];
  v334[5] = v331[6];
  v334[6] = v331[7];
  uint64_t v333 = v331[0];
  v334[0] = v331[1];
  v334[1] = v331[2];
  v334[2] = v331[3];
  sub_10001AE98((uint64_t)v334, (uint64_t)v342, &qword_100AD7360);
  sub_10058E0B0((uint64_t)v342);
  sub_1000DBD88((uint64_t)v198);
  sub_10001AE98((uint64_t)v342, (uint64_t)v353, &qword_100AD7360);
  if (!v353[0])
  {
LABEL_35:
    Swift::String v73 = 0;
  }
  else
  {
    sub_10058E0DC((uint64_t)v342);
    Swift::String v73 = 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v199, v72, v64);
  sub_10001AE98((uint64_t)v199, (uint64_t)v326, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v326) != 1)
  {
    v329[11] = v326[12];
    v329[12] = v326[13];
    v329[13] = v326[14];
    size_t v330 = v327;
    v329[7] = v326[8];
    v329[8] = v326[9];
    v329[9] = v326[10];
    v329[10] = v326[11];
    v329[3] = v326[4];
    v329[4] = v326[5];
    v329[5] = v326[6];
    v329[6] = v326[7];
    long long v328 = v326[0];
    v329[0] = v326[1];
    v329[1] = v326[2];
    v329[2] = v326[3];
    sub_10001AE98((uint64_t)v329, (uint64_t)v343, &qword_100AD7360);
    sub_10058E0B0((uint64_t)v343);
    sub_1000DBD88((uint64_t)v199);
    sub_10001AE98((uint64_t)v343, (uint64_t)&v352, &qword_100AD7360);
    if (v352)
    {
      sub_10058E0DC((uint64_t)v343);
      if (v73) {
        goto LABEL_42;
      }
      goto LABEL_41;
    }
  }
  if (v73) {
LABEL_41:
  }
    v60 |= 0x200000uLL;
LABEL_42:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v200, v189, v190);
  sub_10001AE98((uint64_t)v200, (uint64_t)v321, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v321) == 1) {
    goto LABEL_45;
  }
  v324[11] = v321[12];
  v324[12] = v321[13];
  v324[13] = v321[14];
  unint64_t v325 = v322;
  v324[7] = v321[8];
  v324[8] = v321[9];
  v324[9] = v321[10];
  v324[10] = v321[11];
  v324[3] = v321[4];
  v324[4] = v321[5];
  v324[5] = v321[6];
  v324[6] = v321[7];
  unint64_t v323 = v321[0];
  v324[0] = v321[1];
  v324[1] = v321[2];
  v324[2] = v321[3];
  sub_10001AE98((uint64_t)v324 + 8, (uint64_t)v344, &qword_100AD7360);
  sub_10058E0B0((uint64_t)v344);
  sub_1000DBD88((uint64_t)v200);
  sub_10001AE98((uint64_t)v344, (uint64_t)&v351, &qword_100AD7360);
  if (!v351)
  {
LABEL_45:
    Swift::String v74 = 0;
  }
  else
  {
    sub_10058E0DC((uint64_t)v344);
    Swift::String v74 = 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v201, v72, v64);
  sub_10001AE98((uint64_t)v201, (uint64_t)v316, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v316) == 1) {
    goto LABEL_50;
  }
  v319[11] = v316[12];
  v319[12] = v316[13];
  v319[13] = v316[14];
  unint64_t v320 = v317;
  v319[7] = v316[8];
  v319[8] = v316[9];
  v319[9] = v316[10];
  v319[10] = v316[11];
  v319[3] = v316[4];
  v319[4] = v316[5];
  v319[5] = v316[6];
  v319[6] = v316[7];
  unint64_t v318 = v316[0];
  v319[0] = v316[1];
  v319[1] = v316[2];
  v319[2] = v316[3];
  sub_10001AE98((uint64_t)v319 + 8, (uint64_t)v345, &qword_100AD7360);
  sub_10058E0B0((uint64_t)v345);
  sub_1000DBD88((uint64_t)v201);
  sub_10001AE98((uint64_t)v345, (uint64_t)&v350, &qword_100AD7360);
  if (!v350)
  {
LABEL_50:
    if ((v74 & 1) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  sub_10058E0DC((uint64_t)v345);
  if ((v74 & 1) == 0) {
LABEL_51:
  }
    v60 |= 0x400000uLL;
LABEL_52:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v202, v189, v190);
  sub_10001AE98((uint64_t)v202, (uint64_t)v315, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v315) == 1)
  {
    Swift::String v75 = 2;
  }
  else
  {
    Swift::String v76 = v315[32];
    sub_1000DBD88((uint64_t)v202);
    Swift::String v75 = v76 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v203, v72, v64);
  sub_10001AE98((uint64_t)v203, (uint64_t)v314, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v314) != 1)
  {
    Swift::String v77 = v314[32];
    sub_1000DBD88((uint64_t)v203);
    if (v75 != 2 && (v77 & 1) == (v75 != 0)) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v75 != 2) {
LABEL_60:
  }
    v60 |= 0x1000000uLL;
LABEL_61:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v204, v189, v190);
  sub_10001AE98((uint64_t)v204, (uint64_t)v313, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v313) == 1)
  {
    Swift::String v78 = 2;
  }
  else
  {
    Swift::String v79 = v313[33];
    sub_1000DBD88((uint64_t)v204);
    Swift::String v78 = v79 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v205, v72, v64);
  sub_10001AE98((uint64_t)v205, (uint64_t)v312, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v312) != 1)
  {
    Swift::String v80 = v312[33];
    sub_1000DBD88((uint64_t)v205);
    if (v78 != 2 && (v80 & 1) == (v78 != 0)) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v78 != 2) {
LABEL_69:
  }
    v60 |= 0x2000000uLL;
LABEL_70:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v206, v189, v190);
  sub_10001AE98((uint64_t)v206, (uint64_t)v311, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v311) == 1)
  {
    Swift::String v81 = 2;
  }
  else
  {
    char v82 = v311[34];
    sub_1000DBD88((uint64_t)v206);
    Swift::String v81 = v82 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v207, v72, v64);
  sub_10001AE98((uint64_t)v207, (uint64_t)v310, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v310) != 1)
  {
    char v83 = v310[34];
    sub_1000DBD88((uint64_t)v207);
    if (v81 != 2 && (v83 & 1) == (v81 != 0)) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v81 != 2) {
LABEL_78:
  }
    v60 |= 0x4000000uLL;
LABEL_79:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v208, v189, v190);
  sub_10001AE98((uint64_t)v208, (uint64_t)v309, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v309) == 1)
  {
    unint64_t v84 = 0;
    unint64_t v85 = 0;
  }
  else
  {
    unint64_t v84 = v309[5];
    unint64_t v85 = v309[6];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v208);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v209, v186, v64);
  sub_10001AE98((uint64_t)v209, (uint64_t)v308, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v308) == 1)
  {
    if (!v85) {
      goto LABEL_94;
    }
    goto LABEL_92;
  }
  unint64_t v86 = v308[5];
  int v87 = v308[6];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v209);
  if (!v85)
  {
    if (!v87)
    {
LABEL_94:
      unint64_t v88 = v185;
      goto LABEL_95;
    }
    goto LABEL_92;
  }
  if (!v87)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    unint64_t v88 = v185;
LABEL_93:
    v60 |= 0x8000000uLL;
    goto LABEL_95;
  }
  if (v84 == v86 && v85 == v87)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v88 = v185;
    goto LABEL_95;
  }
  long long v158 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v88 = v185;
  if ((v158 & 1) == 0) {
    goto LABEL_93;
  }
LABEL_95:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v210, v189, v190);
  sub_10001AE98((uint64_t)v210, (uint64_t)v307, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v307) == 1)
  {
    long long v89 = 0;
    long long v90 = 0;
  }
  else
  {
    long long v89 = v307[7];
    long long v90 = v307[8];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v210);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v211, v186, v88);
  sub_10001AE98((uint64_t)v211, (uint64_t)v306, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v306) == 1)
  {
    if (!v90) {
      goto LABEL_110;
    }
    goto LABEL_108;
  }
  long long v91 = v306[7];
  long long v92 = v306[8];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v211);
  if (!v90)
  {
    if (!v92) {
      goto LABEL_110;
    }
LABEL_108:
    swift_bridgeObjectRelease();
    long long v93 = v185;
LABEL_109:
    v60 |= 0x10000000uLL;
    goto LABEL_111;
  }
  if (!v92) {
    goto LABEL_108;
  }
  if (v89 == v91 && v90 == v92)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_110:
    long long v93 = v185;
    goto LABEL_111;
  }
  long long v159 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v93 = v185;
  if ((v159 & 1) == 0) {
    goto LABEL_109;
  }
LABEL_111:
  long long v94 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v212, v189, v190);
  sub_10001AE98((uint64_t)v212, (uint64_t)v305, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v305) == 1)
  {
    long long v95 = 2;
  }
  else
  {
    long long v96 = v305[72];
    sub_1000DBD88((uint64_t)v212);
    long long v95 = v96 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v213, v94, v93);
  sub_10001AE98((uint64_t)v213, (uint64_t)v304, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v304) != 1)
  {
    long long v97 = v304[72];
    sub_1000DBD88((uint64_t)v213);
    if (v95 != 2 && (v97 & 1) == (v95 != 0)) {
      goto LABEL_120;
    }
    goto LABEL_119;
  }
  if (v95 != 2) {
LABEL_119:
  }
    v60 |= 0x20000000uLL;
LABEL_120:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v214, v189, v190);
  sub_10001AE98((uint64_t)v214, (uint64_t)v303, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v303) == 1)
  {
    long long v98 = 0;
    long long v99 = 0;
  }
  else
  {
    long long v98 = v303[10];
    long long v99 = v303[11];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v214);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v215, v186, v93);
  sub_10001AE98((uint64_t)v215, (uint64_t)v302, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v302) == 1)
  {
    if (!v99) {
      goto LABEL_135;
    }
    goto LABEL_133;
  }
  long long v100 = v302[10];
  long long v101 = v302[11];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v215);
  if (!v99)
  {
    if (!v101) {
      goto LABEL_135;
    }
LABEL_133:
    swift_bridgeObjectRelease();
    long long v102 = v185;
LABEL_134:
    v60 |= 0x40000000uLL;
    goto LABEL_136;
  }
  if (!v101) {
    goto LABEL_133;
  }
  if (v98 == v100 && v99 == v101)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_135:
    long long v102 = v185;
    goto LABEL_136;
  }
  unint64_t v160 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v102 = v185;
  if ((v160 & 1) == 0) {
    goto LABEL_134;
  }
LABEL_136:
  long long v103 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v216, v189, v190);
  sub_10001AE98((uint64_t)v216, (uint64_t)v301, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v301) == 1)
  {
    unint64_t v104 = 2;
  }
  else
  {
    unint64_t v105 = v301[104];
    sub_1000DBD88((uint64_t)v216);
    unint64_t v104 = v105 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v217, v103, v102);
  sub_10001AE98((uint64_t)v217, (uint64_t)v300, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v300) != 1)
  {
    long long v106 = v300[104];
    sub_1000DBD88((uint64_t)v217);
    if (v104 != 2 && (v106 & 1) == (v104 != 0)) {
      goto LABEL_145;
    }
    goto LABEL_144;
  }
  if (v104 != 2) {
LABEL_144:
  }
    v60 |= 0x80000000uLL;
LABEL_145:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v218, v189, v190);
  sub_10001AE98((uint64_t)v218, (uint64_t)v299, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v299) == 1)
  {
    long long v107 = 2;
  }
  else
  {
    long long v108 = v299[105];
    sub_1000DBD88((uint64_t)v218);
    long long v107 = v108 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v219, v103, v102);
  sub_10001AE98((uint64_t)v219, (uint64_t)v298, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v298) != 1)
  {
    uint64_t v109 = v298[105];
    sub_1000DBD88((uint64_t)v219);
    if (v107 != 2 && (v109 & 1) == (v107 != 0)) {
      goto LABEL_154;
    }
    goto LABEL_153;
  }
  if (v107 != 2) {
LABEL_153:
  }
    v60 |= (unint64_t)&_mh_execute_header;
LABEL_154:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v220, v189, v190);
  sub_10001AE98((uint64_t)v220, (uint64_t)v297, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v297) == 1)
  {
    uint64_t v110 = 0;
    unint64_t v111 = 0;
  }
  else
  {
    uint64_t v110 = v297[14];
    unint64_t v111 = v297[15];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v220);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v221, v186, v102);
  sub_10001AE98((uint64_t)v221, (uint64_t)v296, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v296) == 1)
  {
    if (!v111) {
      goto LABEL_169;
    }
    goto LABEL_167;
  }
  unint64_t v112 = v296[14];
  uint64_t v113 = v296[15];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v221);
  if (!v111)
  {
    if (!v113)
    {
LABEL_169:
      uint64_t v114 = v185;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (!v113)
  {
LABEL_167:
    swift_bridgeObjectRelease();
    uint64_t v114 = v185;
LABEL_168:
    v60 |= 0x200000000uLL;
    goto LABEL_170;
  }
  if (v110 == v112 && v111 == v113)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v114 = v185;
    goto LABEL_170;
  }
  unint64_t v161 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = v185;
  if ((v161 & 1) == 0) {
    goto LABEL_168;
  }
LABEL_170:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v222, v189, v190);
  sub_10001AE98((uint64_t)v222, (uint64_t)v295, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v295) == 1)
  {
    uint64_t v115 = 0;
    uint64_t v116 = 0;
  }
  else
  {
    uint64_t v115 = v295[16];
    uint64_t v116 = v295[17];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v222);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v223, v186, v114);
  sub_10001AE98((uint64_t)v223, (uint64_t)v294, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v294) == 1)
  {
    if (!v116) {
      goto LABEL_185;
    }
    goto LABEL_183;
  }
  uint64_t v117 = v294[16];
  uint64_t v118 = v294[17];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v223);
  if (!v116)
  {
    if (!v118)
    {
LABEL_185:
      uint64_t v119 = v185;
      goto LABEL_186;
    }
    goto LABEL_183;
  }
  if (!v118)
  {
LABEL_183:
    swift_bridgeObjectRelease();
    uint64_t v119 = v185;
LABEL_184:
    v60 |= 0x400000000uLL;
    goto LABEL_186;
  }
  if (v115 == v117 && v116 == v118)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v119 = v185;
    goto LABEL_186;
  }
  uint64_t v162 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v119 = v185;
  if ((v162 & 1) == 0) {
    goto LABEL_184;
  }
LABEL_186:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v224, v189, v190);
  sub_10001AE98((uint64_t)v224, (uint64_t)v293, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v293) == 1)
  {
    uint64_t v120 = 0;
    long long v121 = 0;
  }
  else
  {
    uint64_t v120 = v293[18];
    long long v121 = v293[19];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v224);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v225, v186, v119);
  sub_10001AE98((uint64_t)v225, (uint64_t)v292, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v292) == 1)
  {
    if (!v121) {
      goto LABEL_201;
    }
    goto LABEL_199;
  }
  unint64_t v122 = v292[18];
  unint64_t v123 = v292[19];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v225);
  if (!v121)
  {
    if (!v123)
    {
LABEL_201:
      long long v124 = v185;
      goto LABEL_202;
    }
    goto LABEL_199;
  }
  if (!v123)
  {
LABEL_199:
    swift_bridgeObjectRelease();
    long long v124 = v185;
LABEL_200:
    v60 |= 0x800000000uLL;
    goto LABEL_202;
  }
  if (v120 == v122 && v121 == v123)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v124 = v185;
    goto LABEL_202;
  }
  long long v163 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v124 = v185;
  if ((v163 & 1) == 0) {
    goto LABEL_200;
  }
LABEL_202:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v226, v189, v190);
  sub_10001AE98((uint64_t)v226, (uint64_t)v291, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v291) == 1)
  {
    unint64_t v125 = 0;
    unint64_t v126 = 0;
  }
  else
  {
    unint64_t v125 = v291[20];
    unint64_t v126 = v291[21];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v226);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v227, v186, v124);
  sub_10001AE98((uint64_t)v227, (uint64_t)v290, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v290) == 1)
  {
    if (!v126) {
      goto LABEL_213;
    }
    goto LABEL_214;
  }
  uint64_t v127 = v290[20];
  uint64_t v128 = v290[21];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v227);
  if (v126)
  {
    if (!v128)
    {
LABEL_214:
      uint64_t v133 = v186;
LABEL_216:
      swift_bridgeObjectRelease();
      unint64_t v134 = v185;
LABEL_217:
      v60 |= 0x1000000000uLL;
      goto LABEL_218;
    }
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_10014D77C(v125, v126);
    uint64_t v131 = v130;
    if (v129 == sub_10014D77C(v127, v128) && v131 == v132)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_213:
      unint64_t v134 = v185;
      uint64_t v133 = v186;
      goto LABEL_218;
    }
    long long v164 = sub_10096D2D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v134 = v185;
    uint64_t v133 = v186;
    if ((v164 & 1) == 0) {
      goto LABEL_217;
    }
  }
  else
  {
    uint64_t v133 = v186;
    if (v128) {
      goto LABEL_216;
    }
    unint64_t v134 = v185;
  }
LABEL_218:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v228, v189, v190);
  sub_10001AE98((uint64_t)v228, (uint64_t)v289, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v289) == 1)
  {
    uint64_t v135 = 2;
  }
  else
  {
    uint64_t v136 = v289[176];
    sub_1000DBD88((uint64_t)v228);
    uint64_t v135 = v136 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v229, v133, v134);
  sub_10001AE98((uint64_t)v229, (uint64_t)v288, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v288) != 1)
  {
    uint64_t v137 = v288[176];
    sub_1000DBD88((uint64_t)v229);
    if (v135 != 2 && (v137 & 1) == (v135 != 0)) {
      goto LABEL_227;
    }
    goto LABEL_226;
  }
  if (v135 != 2) {
LABEL_226:
  }
    v60 |= 0x2000000000uLL;
LABEL_227:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v230, v189, v190);
  sub_10001AE98((uint64_t)v230, (uint64_t)v287, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v287) == 1)
  {
    unint64_t v138 = 0;
  }
  else
  {
    unint64_t v138 = (void *)v287[23];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v230);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v231, v133, v134);
  sub_10001AE98((uint64_t)v231, (uint64_t)v286, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v286) == 1)
  {
    if (!v138) {
      goto LABEL_241;
    }
    goto LABEL_239;
  }
  uint64_t v139 = (void *)v286[23];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v231);
  if (!v138)
  {
    if (!v139) {
      goto LABEL_241;
    }
    goto LABEL_239;
  }
  if (!v139)
  {
LABEL_239:
    swift_bridgeObjectRelease();
    goto LABEL_240;
  }
  int v140 = sub_1006111F4(v138, v139);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v140 & 1) == 0) {
LABEL_240:
  }
    v60 |= 0x4000000000uLL;
LABEL_241:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v232, v189, v190);
  sub_10001AE98((uint64_t)v232, (uint64_t)v283, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v283) == 1)
  {
    long long v141 = 0;
    unint64_t v142 = 0;
  }
  else
  {
    long long v141 = v284;
    unint64_t v142 = v285;
    sub_10009C7F8((uint64_t)v284);
    sub_1000DBD88((uint64_t)v232);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v233, v186, v134);
  sub_10001AE98((uint64_t)v233, (uint64_t)v280, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v280) == 1)
  {
    if (!v141) {
      goto LABEL_258;
    }
LABEL_252:
    swift_bridgeObjectRelease();
LABEL_253:
    swift_bridgeObjectRelease();
LABEL_254:
    unint64_t v145 = v185;
    goto LABEL_255;
  }
  unint64_t v143 = v281;
  long long v144 = v282;
  sub_10009C7F8((uint64_t)v281);
  sub_1000DBD88((uint64_t)v233);
  if (!v141)
  {
    if (!v143)
    {
LABEL_258:
      unint64_t v145 = v185;
      goto LABEL_259;
    }
    sub_1000DBF10((uint64_t)v143);
    goto LABEL_254;
  }
  if (!v143) {
    goto LABEL_252;
  }
  if ((sub_1006111F4(v141, v143) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000DBF10((uint64_t)v141);
    swift_bridgeObjectRelease();
    goto LABEL_253;
  }
  LODWORD(v184) = sub_1006111F4(v142, v144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000DBF10((uint64_t)v141);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v145 = v185;
  if ((v184 & 1) == 0) {
LABEL_255:
  }
    v60 |= 0x8000000000uLL;
LABEL_259:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v234, v189, v190);
  sub_10001AE98((uint64_t)v234, (uint64_t)v279, &qword_100AD0EA0);
  unint64_t v146 = sub_1000DBD64((uint64_t)v279);
  if (v146 == 1)
  {
    unint64_t v147 = 0;
  }
  else
  {
    unint64_t v147 = v279[26];
    sub_1000DBD88((uint64_t)v234);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v235, v186, v145);
  sub_10001AE98((uint64_t)v235, (uint64_t)v278, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v278) == 1)
  {
    if (v146 == 1) {
      goto LABEL_268;
    }
    goto LABEL_267;
  }
  unint64_t v148 = v278[26];
  sub_1000DBD88((uint64_t)v235);
  if (v146 == 1 || !sub_10025BE54(v147, v148)) {
LABEL_267:
  }
    v60 |= 0x2000000000000uLL;
LABEL_268:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v236, v189, v190);
  sub_10001AE98((uint64_t)v236, (uint64_t)v260, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v260) == 1) {
    goto LABEL_271;
  }
  long long v274 = v260[12];
  long long v275 = v260[13];
  long long v276 = v260[14];
  long long v277 = v261;
  unint64_t v270 = v260[8];
  unint64_t v271 = v260[9];
  long long v272 = v260[10];
  long long v273 = v260[11];
  unint64_t v266 = v260[4];
  unint64_t v267 = v260[5];
  uint64_t v268 = v260[6];
  unint64_t v269 = v260[7];
  size_t v262 = v260[0];
  unint64_t v263 = v260[1];
  uint64_t v264 = v260[2];
  unint64_t v265 = v260[3];
  sub_10001AE98((uint64_t)&v276, (uint64_t)v346, &qword_100AD0698);
  sub_100130300((uint64_t)v346);
  sub_1000DBD88((uint64_t)v236);
  sub_10001AE98((uint64_t)v346, (uint64_t)&v349, &qword_100AD0698);
  if (!v349)
  {
LABEL_271:
    unint64_t v149 = 0;
  }
  else
  {
    unint64_t v149 = sub_1006191BC(v349);
    sub_100130294((uint64_t)v346);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v237, v186, v145);
  sub_10001AE98((uint64_t)v237, (uint64_t)v242, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v242) == 1) {
    goto LABEL_277;
  }
  unint64_t v256 = v242[12];
  unint64_t v257 = v242[13];
  unint64_t v258 = v242[14];
  unint64_t v259 = v243;
  unint64_t v252 = v242[8];
  unint64_t v253 = v242[9];
  unint64_t v254 = v242[10];
  uint64_t v255 = v242[11];
  unint64_t v248 = v242[4];
  unint64_t v249 = v242[5];
  unint64_t v250 = v242[6];
  unint64_t v251 = v242[7];
  unint64_t v244 = v242[0];
  unint64_t v245 = v242[1];
  long long v246 = v242[2];
  unint64_t v247 = v242[3];
  sub_10001AE98((uint64_t)&v258, (uint64_t)v347, &qword_100AD0698);
  sub_100130300((uint64_t)v347);
  sub_1000DBD88((uint64_t)v237);
  sub_10001AE98((uint64_t)v347, (uint64_t)&v348, &qword_100AD0698);
  if (!v348)
  {
LABEL_277:
    unint64_t v150 = 0;
    if (!v149)
    {
LABEL_275:
      if (!v150) {
        goto LABEL_283;
      }
      goto LABEL_281;
    }
  }
  else
  {
    unint64_t v150 = sub_1006191BC(v348);
    sub_100130294((uint64_t)v347);
    if (!v149) {
      goto LABEL_275;
    }
  }
  if (!v150)
  {
LABEL_281:
    swift_bridgeObjectRelease();
    goto LABEL_282;
  }
  unint64_t v151 = swift_bridgeObjectRetain();
  unint64_t v152 = sub_100611B18(v151, (uint64_t)v150);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v152 & 1) == 0) {
LABEL_282:
  }
    v60 |= 0x4000000000000uLL;
LABEL_283:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v238, v189, v190);
  sub_10001AE98((uint64_t)v238, (uint64_t)v241, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v241) == 1)
  {
    unint64_t v153 = 0;
    long long v154 = 0;
  }
  else
  {
    unint64_t v153 = v241[29];
    long long v154 = v241[30];
    swift_bridgeObjectRetain();
    sub_1000DBD88((uint64_t)v238);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v239, v186, v145);
  sub_10001AE98((uint64_t)v239, (uint64_t)v240, &qword_100AD0EA0);
  if (sub_1000DBD64((uint64_t)v240) == 1)
  {
    if (!v154) {
      return v60;
    }
    goto LABEL_296;
  }
  char v155 = v240[29];
  unint64_t v156 = v240[30];
  swift_bridgeObjectRetain();
  sub_1000DBD88((uint64_t)v239);
  if (!v154)
  {
    if (!v156) {
      return v60;
    }
LABEL_296:
    swift_bridgeObjectRelease();
    return v60 | 0x8000000000000;
  }
  if (!v156) {
    goto LABEL_296;
  }
  if (v153 != v155 || v154 != v156)
  {
    unint64_t v165 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v165) {
      return v60;
    }
    return v60 | 0x8000000000000;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v60;
}

uint64_t type metadata accessor for TrackingContinuation()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for Syncability(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10018B584(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for Syncability(uint64_t a1)
{
  return sub_1000CF144(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for Syncability(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10018B584(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1000CF144(v5, v6);
  return a1;
}

uint64_t *assignWithTake for Syncability(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1000CF144(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Syncability(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 4);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Syncability(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (unint64_t)-a2 << 32;
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10061C4E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10061C4FC(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_10061C50C(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *unint64_t result = *(unsigned int *)result;
    result[1] = v2;
  }
  else
  {
    *unint64_t result = (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for Syncability()
{
  return &type metadata for Syncability;
}

void sub_10061C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  v11.super.Class isa = sub_10096C080().super.isa;
  if (a5) {
    uint64_t v12 = sub_10096ABE0();
  }
  else {
    uint64_t v12 = 0;
  }
  id v13 = (id)v12;
  (*(void (**)(uint64_t, Class, uint64_t, uint64_t, uint64_t))(a6 + 16))(a6, v11.super.isa, a2, a3, a4);
}

void sub_10061C618(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
    Class isa = sub_10096C080().super.isa;
  }
  if (a2) {
    uint64_t v6 = sub_10096ABE0();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

void sub_10061C6C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  v12.super.Class isa = sub_10096C080().super.isa;
  sub_100011348(0, (unint64_t *)&unk_100ACEC40);
  v13.super.Class isa = sub_10096C080().super.isa;
  if (a6) {
    uint64_t v14 = sub_10096ABE0();
  }
  else {
    uint64_t v14 = 0;
  }
  id v15 = (id)v14;
  (*(void (**)(uint64_t, Class, Class, void, uint64_t, uint64_t))(a7 + 16))(a7, v12.super.isa, v13.super.isa, a3 & 1, a4, a5);
}

uint64_t sub_10061C7C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_10061C7D4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v10 = *(void (**)(uint64_t, void *, void *, void *, void *))(a1 + 32);
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  uint64_t v11 = sub_10096C0A0();
  swift_retain();
  id v15 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  v10(v11, a3, a4, a5, a6);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_10061C8D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10061C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, void *, void *))(a1 + 32);
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  uint64_t v12 = sub_10096C0A0();
  sub_100011348(0, (unint64_t *)&unk_100ACEC40);
  uint64_t v13 = sub_10096C0A0();
  swift_retain();
  id v16 = a5;
  id v14 = a6;
  id v15 = a7;
  v11(v12, v13, a4, a5, a6, a7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10061CA84(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v2;
  uint64_t v10 = *(void *)(*(void *)(v2 + 16) + 16);
  sub_10002B7CC(&qword_100AD0BF0);
  uint64_t v11 = swift_dynamicCastClassUnconditional();
  if (a1 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10096CE70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v55 = a2;
  unint64_t v56 = a1;
  uint64_t v52 = v10;
  uint64_t v53 = v9;
  if (!v12)
  {
LABEL_18:
    uint64_t v33 = v13;
    unint64_t v34 = sub_10078FD00((uint64_t)v13, a2 & 1);
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    unint64_t v35 = v34;
    v62[106] = v33;
    v62[107] = 0;
    v62[108] = v56;
    v62[109] = 0;
    char v63 = 0;
    swift_bridgeObjectRetain();
    id v36 = sub_10061EE18();
    if (!v38)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 4) != 0) {
        sub_100750620(v56);
      }
      return swift_release();
    }
    id v39 = v36;
    unint64_t v40 = v37;
    uint64_t v41 = v38;
    uint64_t v42 = (uint64_t)v53;
    while (1)
    {
      if (!*(void *)(v35 + 16)) {
        goto LABEL_26;
      }
      sub_10009C394(v39, v40, BYTE1(v40) & 1);
      unint64_t v43 = sub_10031F91C(v39, v40 | (((v40 >> 8) & 1) << 8));
      if ((v44 & 1) == 0) {
        break;
      }
      uint64_t v45 = (const void *)(*(void *)(v35 + 56) + 848 * v43);
      memcpy(v60, v45, sizeof(v60));
      memmove(v61, v45, 0x350uLL);
      v46._uint64_t countAndFlagsBits = (uint64_t)v61;
      Filename.init(rawValue:)(v46);
      sub_10038ED74((uint64_t)v60);
      sub_1000D30C4(v39, v40, BYTE1(v40) & 1);
LABEL_27:
      sub_10061F058((uint64_t)v61, (uint64_t)v62);
      sub_10061F058((uint64_t)v62, (uint64_t)&v64);
      uint64_t v47 = sub_10096AE50();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v42, 1, 1, v47);
      sub_10074B824((uint64_t)v41);
      sub_100083498(v42);
      sub_1000D30C4(v39, v40, BYTE1(v40) & 1);
      sub_10061F0C0((uint64_t)v62);

      id v39 = sub_10061EE18();
      unint64_t v40 = v48;
      uint64_t v41 = v49;
      if (!v49) {
        goto LABEL_28;
      }
    }
    sub_1000D30C4(v39, v40, BYTE1(v40) & 1);
LABEL_26:
    sub_10061EFD8((uint64_t)v61);
    goto LABEL_27;
  }
  v62[0] = _swiftEmptyArrayStorage;
  uint64_t result = sub_100445FF4(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v58 = v12;
    uint64_t v50 = v11;
    uint64_t v51 = v3;
    uint64_t v15 = 0;
    uint64_t v13 = (void *)v62[0];
    unint64_t v57 = a1 & 0xC000000000000001;
    while (1)
    {
      long long v59 = v13;
      id v16 = v57 ? (id)sub_10096CC30() : *(id *)(a1 + 8 * v15 + 32);
      unint64_t v17 = v16;
      id v18 = objc_msgSend(v16, "itemIdentifier", v50, v51, v52);
      _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      char v19 = sub_100008C28();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
      sub_1000364D0(0x80007uLL, v20, v21);
      swift_bridgeObjectRelease();
      a1 = v56;
      uint64_t v22 = sub_10096BD10();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      id v25 = (id)_s9libfssync9VFSItemIDO7parsingACSgSS_tcfC_0(v22, v24);
      char v27 = v26;
      int v28 = ~v26;

      if (!v28) {
        goto LABEL_13;
      }

      char v29 = 0;
LABEL_14:
      uint64_t v13 = v59;
      v62[0] = v59;
      unint64_t v31 = v59[2];
      unint64_t v30 = v59[3];
      if (v31 >= v30 >> 1)
      {
        sub_100445FF4(v30 > 1, v31 + 1, 1);
        uint64_t v13 = (void *)v62[0];
      }
      void v13[2] = v31 + 1;
      uint64_t v32 = &v13[2 * v31];
      v32[4] = v25;
      ++v15;
      *((unsigned char *)v32 + 40) = v27;
      *((unsigned char *)v32 + 41) = v29;
      if (v58 == v15)
      {
        LOBYTE(a2) = v55;
        uint64_t v4 = v51;
        goto LABEL_18;
      }
    }

LABEL_13:
    id v25 = [v17 itemIdentifier];

    char v27 = 0;
    char v29 = 1;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_10061CFD8()
{
  sub_10061D1A8();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSearchEnumerator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10061D154()
{
  return type metadata accessor for FPFSSearchEnumerator();
}

uint64_t type metadata accessor for FPFSSearchEnumerator()
{
  uint64_t result = qword_100AD91D8;
  if (!qword_100AD91D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10061D1A8()
{
  uint64_t v1 = v0;
  if ((sub_1008435DC(v1, (unsigned __int8 *)v1) & 1) == 0)
  {
    objc_super v2 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_keepAlive];
    if (v2)
    {
      uint64_t v3 = swift_retain();
      v2(v3);
      sub_1000705CC((uint64_t)v2);
    }
    [*(id *)&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator] invalidate];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      id v6 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v6)
      {
        id v7 = [v6 session];

        [v7 asyncUnregisterLifetimeExtensionForObject:*(void *)&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender]];
        swift_unknownObjectRelease();
      }
    }
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v10)
      {
        uint64_t v11 = v10;
        id v14 = [v10 log];
      }
      else
      {
        id v14 = 0;
      }
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v9;
      *(void *)(v12 + 24) = v1;
      id v13 = v9;
      sub_1006B8108(v14, (uint64_t)"enumeratorHasBeenInvalidated(_:)", 32, 2, (uint64_t)sub_10012F508, v12);

      swift_release();
    }
  }
}

uint64_t sub_10061D458(unint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t (*a9)(unint64_t, void *, void *, uint64_t, uint64_t))
{
  id v13 = a3;
  unint64_t v14 = a1;
  uint64_t v15 = a9;
  if (a5)
  {
    swift_errorRetain();
    id v16 = a7;
    id v17 = a8;
    swift_errorRetain();
    id v18 = v16;
    id v19 = v17;
    swift_errorRetain();
    uint64_t v20 = sub_10096B470();
    os_log_type_t v21 = sub_10096C5B0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v58 = a4;
      uint64_t v22 = swift_slowAlloc();
      log = v20;
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412802;
      id v24 = v18;
      sub_10096C8C0();
      *uint64_t v23 = v18;

      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = NSFileProviderPage.description.getter();
      sub_100719D44(v25, v26, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2112;
      swift_getErrorValue();
      id v64 = Error.prettyDescription.getter(v63);
      sub_10096C8C0();
      v23[1] = v64;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v21, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v22, 0x20u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a4 = v58;
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    unint64_t v14 = a1;
    id v13 = a3;
    char v27 = a2;
    uint64_t v28 = a5;
  }
  else
  {
    id v30 = a3;
    id v31 = a7;
    id v32 = a8;
    swift_bridgeObjectRetain_n();
    id v33 = a2;
    id v34 = v30;
    id v35 = v31;
    id v36 = v32;
    id v37 = v33;
    uint64_t v38 = sub_10096B470();
    os_log_type_t v39 = sub_10096C5A0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v55 = v34;
      type = v38;
      uint64_t v59 = a4;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138413314;
      id v42 = v35;
      sub_10096C8C0();
      *uint64_t v41 = v35;

      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v43 = NSFileProviderPage.description.getter();
      sub_100719D44(v43, v44, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2048;
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      uint64_t v45 = 0x3E6C696E3CLL;
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 32) = 2080;
      if (a2)
      {
        uint64_t v46 = NSFileProviderPage.description.getter();
        unint64_t v48 = v47;
      }
      else
      {
        unint64_t v48 = 0xE500000000000000;
        uint64_t v46 = 0x3E6C696E3CLL;
      }
      sub_100719D44(v46, v48, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 42) = 2080;
      if (v13)
      {
        uint64_t v49 = sub_10096AF60();
        unint64_t v51 = v50;
        uint64_t v45 = sub_10096AEA0();
        unint64_t v53 = v52;
        sub_10001E9C0(v49, v51);
      }
      else
      {
        unint64_t v53 = 0xE500000000000000;
      }
      char v27 = a2;
      sub_100719D44(v45, v53, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, type, v39, "📖  %@: enumerating page %s done: %ld items next %s anchor:%s", (uint8_t *)v40, 0x34u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = a9;
      a4 = v59;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      char v27 = a2;
      uint64_t v15 = a9;
    }
    uint64_t v28 = 0;
  }
  return v15(v14, v27, v13, a4, v28);
}

uint64_t sub_10061DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a7(a1, a2, a3, a4, a5);
}

uint64_t sub_10061DE64(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if (objc_sync_enter(v3)) {
      sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v3);
    }
    uint64_t v4 = *(char **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
    swift_retain();
    if (objc_sync_exit(v3)) {
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v3);
    }

    if (v4)
    {

LABEL_7:
      __chkstk_darwin(v6);
      id v13 = v4;
      uint64_t v14 = a1;
      swift_retain();
      sub_1007DDCB4((uint64_t)"decorateItems(items:)", 21, 2, (uint64_t)sub_10061EFAC, (uint64_t)&v12, v7);
      swift_release();
      return swift_release();
    }
    __chkstk_darwin(v5);
    id v13 = v3;
    sub_10002B7CC(&qword_100AD0C78);
    sub_10096C6A0();

    uint64_t v4 = v16;
    if (v16) {
      goto LABEL_7;
    }
  }
  uint64_t v9 = sub_10096B470();
  os_log_type_t v10 = sub_10096C5B0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "backend or FPFS is invalidated, returning error", v11, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for NSFileProviderError(0);
  uint64_t v15 = -1002;
  sub_100042898((uint64_t)_swiftEmptyArrayStorage);
  sub_100025804((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
  sub_10096ABD0();
  return swift_willThrow();
}

uint64_t sub_10061E13C(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, unint64_t a10, uint64_t (*a11)(unint64_t, unint64_t, void, void *, uint64_t, uint64_t))
{
  uint64_t v12 = a6;
  unint64_t v14 = a2;
  id v16 = a11;
  if (a6)
  {
    swift_errorRetain();
    id v17 = a8;
    sub_10001EBB0(a9, a10);
    swift_errorRetain();
    id v18 = v17;
    sub_10001EBB0(a9, a10);
    swift_errorRetain();
    id v19 = sub_10096B470();
    os_log_type_t v20 = sub_10096C5B0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412802;
      loga = v19;
      uint64_t v55 = v12;
      id v23 = v18;
      sub_10096C8C0();
      *uint64_t v22 = v18;

      *(_WORD *)(v21 + 12) = 2080;
      sub_10001EBB0(a9, a10);
      uint64_t v24 = sub_10096AEA0();
      unint64_t v26 = v25;
      sub_10001E9C0(a9, a10);
      sub_100719D44(v24, v26, v64);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);
      *(_WORD *)(v21 + 22) = 2112;
      swift_getErrorValue();
      id v63 = Error.prettyDescription.getter(v62);
      sub_10096C8C0();
      v22[1] = v63;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, loga, v20, "📖  %@: enumerating from change %s failed: %@", (uint8_t *)v21, 0x20u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();

      return a11(a1, a2, a3 & 1, a4, a5, v55);
    }
    swift_errorRelease();

    sub_10001E9C0(a9, a10);
    sub_10001E9C0(a9, a10);
    swift_errorRelease();
    swift_errorRelease();
    unint64_t v48 = a1;
    id v16 = a11;
    unint64_t v14 = a2;
    char v39 = a3;
    uint64_t v49 = a4;
  }
  else
  {
    id v28 = a8;
    sub_10001EBB0(a9, a10);
    id v29 = a4;
    id v30 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001EBB0(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v29;
    id v32 = sub_10096B470();
    os_log_type_t v54 = sub_10096C5A0();
    if (os_log_type_enabled(v32, v54))
    {
      unint64_t v51 = v32;
      os_log_t log = v31;
      uint64_t v59 = a4;
      uint64_t v33 = swift_slowAlloc();
      id v34 = (void *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138413570;
      id v35 = v30;
      sub_10096C8C0();
      void *v34 = v30;

      *(_WORD *)(v33 + 12) = 2080;
      sub_10001EBB0(a9, a10);
      uint64_t v36 = sub_10096AEA0();
      unint64_t v38 = v37;
      sub_10001E9C0(a9, a10);
      sub_100719D44(v36, v38, v64);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);
      *(_WORD *)(v33 + 22) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      char v39 = a3;
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 32) = 2048;
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 42) = 2080;
      if (a3) {
        uint64_t v40 = 0x6F6D20736168202CLL;
      }
      else {
        uint64_t v40 = 0;
      }
      if (a3) {
        unint64_t v41 = 0xEA00000000006572;
      }
      else {
        unint64_t v41 = 0xE000000000000000;
      }
      sub_100719D44(v40, v41, v64);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 52) = 2080;
      if (v59)
      {
        uint64_t v42 = sub_10096AF60();
        unint64_t v44 = v43;
        uint64_t v45 = sub_10096AEA0();
        unint64_t v47 = v46;
        sub_10001E9C0(v42, v44);
      }
      else
      {
        unint64_t v47 = 0xE500000000000000;
        uint64_t v45 = 0x3E6C696E3CLL;
      }
      id v16 = a11;
      sub_100719D44(v45, v47, v64);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v54, "📖  %@: enumerating from change %s done: %ld updated, %ld deleted%s, next anchor:%s", (uint8_t *)v33, 0x3Eu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v12 = 0;
      uint64_t v50 = a5;
      uint64_t v49 = v59;
      unint64_t v48 = a1;
      return v16(v48, v14, v39 & 1, v49, v50, v12);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001E9C0(a9, a10);
    sub_10001E9C0(a9, a10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v39 = a3;
    unint64_t v48 = a1;
    uint64_t v49 = a4;
  }
  uint64_t v50 = a5;
  return v16(v48, v14, v39 & 1, v49, v50, v12);
}

uint64_t sub_10061E918(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  return a8(a1, a2, a3 & 1, a4, a5, a6);
}

unint64_t sub_10061EBC0()
{
  sub_10096CBD0(33);
  swift_bridgeObjectRelease();
  [*(id *)(v0 + OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender) requestEffectivePID];
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 62;
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  return 0xD00000000000001ELL;
}

uint64_t sub_10061ECAC()
{
  uint64_t result = sub_10096B480();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10061ED7C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10061ED8C()
{
  uint64_t v0 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10096D2D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

id sub_10061EE18()
{
  if (*(unsigned char *)(v1 + 32)) {
    return 0;
  }
  unint64_t v6 = *(void *)(v1 + 8);
  unint64_t v7 = *(void *)(*(void *)v1 + 16);
  if (v6 == v7)
  {
LABEL_8:
    uint64_t v0 = 0;
    *(unsigned char *)(v1 + 32) = 1;
    return v0;
  }
  if (v6 >= v7)
  {
    __break(1u);
LABEL_10:
    sub_10009C394(v0, v2, v3);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10096CE70();
    id result = (id)swift_bridgeObjectRelease();
    if (v4 == v11) {
      goto LABEL_7;
    }
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)v1 + 16 * v6;
  uint64_t v0 = *(void **)(v8 + 32);
  uint64_t v2 = *(unsigned __int8 *)(v8 + 40);
  char v3 = *(unsigned char *)(v8 + 41);
  *(void *)(v1 + 8) = v6 + 1;
  unint64_t v5 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  if (v5 >> 62) {
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = sub_10009C394(v0, v2, v3);
  if (v4 == v9)
  {
LABEL_7:
    sub_1000D30C4(v0, v2, v3);
    goto LABEL_8;
  }
LABEL_11:
  if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id result = *(id *)(v5 + 8 * v4 + 32);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_21;
  }
  id result = (id)sub_10096CC30();
LABEL_15:
  if (!__OFADD__(v4, 1))
  {
    *(void *)(v1 + 24) = v4 + 1;
    return v0;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_10061EF90@<X0>(void *a1@<X8>)
{
  return sub_1002751E4(*(void *)(v1 + 16), a1);
}

uint64_t sub_10061EFAC()
{
  return sub_10061CA84(*(void *)(v0 + 24), 0);
}

double sub_10061EFD8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 448) = 1;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(void *)(a1 + 840) = 0;
  return result;
}

uint64_t sub_10061F058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ACD988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10061F0C0(uint64_t a1)
{
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v16 = *(_OWORD *)(a1 + 432);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_10061F298(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    (void *)v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((unint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((void **)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(void *)(a1 + 448));
  return a1;
}

uint64_t sub_10061F298(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (a57 != 1)
  {
    uint64_t v77 = STACK[0x6F0];
    uint64_t v78 = STACK[0x6F8];
    uint64_t v75 = STACK[0x6E0];
    uint64_t v76 = STACK[0x6E8];
    uint64_t v73 = STACK[0x6D0];
    uint64_t v74 = STACK[0x6D8];
    uint64_t v71 = STACK[0x6C0];
    uint64_t v72 = STACK[0x6C8];
    uint64_t v69 = STACK[0x6B0];
    uint64_t v70 = STACK[0x6B8];
    uint64_t v67 = STACK[0x6A0];
    uint64_t v68 = STACK[0x6A8];
    uint64_t v66 = (void *)STACK[0x698];
    uint64_t v65 = STACK[0x690];
    uint64_t v64 = STACK[0x688];
    uint64_t v63 = STACK[0x680];
    uint64_t v62 = STACK[0x678];
    uint64_t v80 = STACK[0x668];
    uint64_t v81 = STACK[0x670];
    uint64_t v79 = STACK[0x660];
    uint64_t v61 = STACK[0x658];
    uint64_t v60 = STACK[0x650];
    uint64_t v59 = STACK[0x648];
    uint64_t v58 = STACK[0x640];
    uint64_t v57 = STACK[0x638];
    sub_10012EFE8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57);
    return sub_1000DBE04(v57, v58, v59, v60, v61, v79, v80, v81, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72,
             v73,
             v74,
             v75,
             v76,
             v77,
             v78);
  }
  return result;
}

uint64_t sub_10061F718()
{
  return swift_deallocObject();
}

uint64_t sub_10061F750()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10061F788()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_10061F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v24 = a5;
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  long long v13 = &v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_keepAlive];
  *long long v13 = 0;
  v13[1] = 0;
  v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated] = 0;
  uint64_t v14 = OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_changedItemsByID;
  *(void *)&v5[v14] = sub_100099324((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_deletedItemsIDs] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakAssign();
  *(void *)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator] = a4;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  long long v16 = v5;
  swift_unknownObjectRetain();
  if (!Strong || (id v17 = [Strong log], Strong, !v17)) {
    id v18 = (id)fp_default_log();
  }
  sub_10096B490();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v12, v9);
  *(void *)&v16[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_observer] = a2;
  *(void *)&v16[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender] = a1;
  id v19 = v24;
  *(void *)&v16[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_searchIdentifier] = v24;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v20 = v19;

  uint64_t v21 = (objc_class *)type metadata accessor for FPFSSearchEnumerator();
  v25.receiver = v16;
  v25.super_class = v21;
  return objc_msgSendSuper2(&v25, "init");
}

void sub_10061F9CC(void *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  _Block_copy(a2);
  long long v5 = a1;
  if (objc_sync_enter(v5)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v5);
  }
  char v6 = v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v5)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v5);
  }

  if ((v6 & 1) != 0 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    id aBlock[6] = (id)-1002;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100025804((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
    sub_10096ABD0();
    long long v12 = (void *)sub_10096ABE0();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v12);
    swift_release();
  }
  else
  {
    long long v8 = (void *)Strong;
    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = sub_100071780;
    v10[3] = v4;
    aBlock[4] = sub_100621D8C;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10061C8D0;
    aBlock[3] = &unk_100A947D8;
    uint64_t v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [v9 currentSyncAnchorWithCompletion:v11];
    _Block_release(v11);
    swift_release();

    swift_unknownObjectRelease();
  }
}

void sub_10061FC44(unint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  long long v13 = a3;
  uint64_t v16 = a9;
  if (a5)
  {
    swift_errorRetain();
    swift_errorRetain();
    id v17 = a7;
    id v18 = a8;
    swift_errorRetain();
    id v19 = v17;
    id v20 = v18;
    uint64_t v21 = sub_10096B470();
    os_log_type_t v22 = sub_10096C5B0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v59 = a2;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v61 = v13;
      uint64_t v24 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412802;
      os_log_t log = v21;
      id v25 = v19;
      sub_10096C8C0();
      *uint64_t v24 = v19;

      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = NSFileProviderPage.description.getter();
      sub_100719D44(v26, v27, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2112;
      swift_getErrorValue();
      id v64 = Error.prettyDescription.getter(v63);
      sub_10096C8C0();
      v24[1] = v64;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v22, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v23, 0x20u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      long long v13 = v61;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v59;
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    id v28 = a3;
    id v29 = a7;
    id v30 = a8;
    swift_bridgeObjectRetain_n();
    id v31 = a2;
    id v32 = v28;
    id v33 = v29;
    id v34 = v30;
    id v35 = v31;
    uint64_t v36 = sub_10096B470();
    os_log_type_t v37 = sub_10096C5A0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v55 = v35;
      os_log_type_t v56 = v37;
      type = v36;
      uint64_t v60 = a2;
      uint64_t v38 = swift_slowAlloc();
      char v39 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 138413314;
      id v40 = v33;
      sub_10096C8C0();
      *char v39 = v33;

      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v41 = NSFileProviderPage.description.getter();
      sub_100719D44(v41, v42, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = 0x3E6C696E3CLL;
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 32) = 2080;
      if (v60)
      {
        uint64_t v44 = NSFileProviderPage.description.getter();
        unint64_t v46 = v45;
      }
      else
      {
        unint64_t v46 = 0xE500000000000000;
        uint64_t v44 = 0x3E6C696E3CLL;
      }
      sub_100719D44(v44, v46, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 42) = 2080;
      long long v13 = a3;
      if (a3)
      {
        uint64_t v47 = sub_10096AF60();
        unint64_t v49 = v48;
        uint64_t v43 = sub_10096AEA0();
        unint64_t v51 = v50;
        unint64_t v52 = v49;
        long long v13 = a3;
        sub_10001E9C0(v47, v52);
      }
      else
      {
        unint64_t v51 = 0xE500000000000000;
      }
      sub_100719D44(v43, v51, &v65);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, type, v56, "📖  %@: enumerating page %s done: %ld items next %s anchor:%s", (uint8_t *)v38, 0x34u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a2 = v60;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      long long v13 = a3;
    }
    uint64_t v16 = a9;
  }
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  v53.super.Class isa = sub_10096C080().super.isa;
  if (a5) {
    os_log_type_t v54 = (void *)sub_10096ABE0();
  }
  else {
    os_log_type_t v54 = 0;
  }
  (*(void (**)(uint64_t, Class, void *, void *, uint64_t, void *))(v16 + 16))(v16, v53.super.isa, a2, v13, a4, v54);
}

uint64_t sub_100620338(void *a1, uint64_t a2, char *a3, const void *a4)
{
  uint64_t v60 = a2;
  uint64_t v7 = sub_10096B480();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v65 = &v53[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v10);
  long long v13 = &v53[-v12];
  __chkstk_darwin(v11);
  long long v15 = &v53[-v14];
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v8;
  *(void *)(v63 + 16) = a4;
  uint64_t v62 = *(void (**)(unsigned char *, char *, uint64_t))(v8 + 16);
  v62(v15, &a3[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v7);
  uint64_t v16 = a3;
  id v17 = a1;
  id v18 = v16;
  id v19 = v17;
  uint64_t v61 = a4;
  _Block_copy(a4);
  uint64_t v66 = v15;
  id v20 = sub_10096B470();
  os_log_type_t v21 = sub_10096C5A0();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v57 = v9;
    id v25 = (void *)v24;
    uint64_t v55 = v24;
    uint64_t v58 = swift_slowAlloc();
    aBlock[0] = v58;
    *(_DWORD *)uint64_t v23 = 138412546;
    os_log_t v56 = v20;
    uint64_t v59 = v7;
    uint64_t v68 = (uint64_t)v18;
    uint64_t v26 = v18;
    int v54 = v22;
    unint64_t v27 = v13;
    id v28 = v26;
    sub_10096C8C0();
    *id v25 = v18;
    uint64_t v9 = v57;

    long long v13 = v27;
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v29 = NSFileProviderPage.description.getter();
    uint64_t v68 = sub_100719D44(v29, v30, aBlock);
    sub_10096C8C0();

    uint64_t v7 = v59;
    swift_bridgeObjectRelease();
    id v20 = v56;
    _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v54, "📖  %@: enumerating page %s", (uint8_t *)v23, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v31 = v62;
  v62(v13, v66, v7);
  v31(v65, v13, v7);
  uint64_t v32 = v64;
  unint64_t v33 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  unint64_t v34 = (v9 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v32 + 32))(v36 + v33, v13, v7);
  *(void *)(v36 + v34) = v18;
  *(void *)(v36 + v35) = v19;
  os_log_type_t v37 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v63;
  *os_log_type_t v37 = sub_100130404;
  v37[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v38;
  char v39 = v18;
  id v40 = v19;
  swift_retain();
  if (objc_sync_enter(v39)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v39);
  }
  char v41 = v39[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v39)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v39);
  }

  if ((v41 & 1) != 0 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v68 = -1002;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100025804((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
    sub_10096ABD0();
    unint64_t v48 = (void *)aBlock[0];
    unint64_t v49 = v61;
    _Block_copy(v61);
    unint64_t v50 = v65;
    sub_10061FC44((unint64_t)_swiftEmptyArrayStorage, 0, 0, 0, (uint64_t)v48, (uint64_t)v65, v39, v40, (uint64_t)v49);
    _Block_release(v49);
    swift_release();

    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
    v51(v50, v7);
    v51(v66, v7);
  }
  else
  {
    uint64_t v43 = (void *)Strong;
    uint64_t v64 = *(void *)(v32 + 8);
    ((void (*)(unsigned char *, uint64_t))v64)(v65, v7);
    uint64_t v44 = *(void **)&v39[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    unint64_t v45 = (void *)swift_allocObject();
    v45[2] = v39;
    v45[3] = sub_100621C5C;
    v45[4] = v36;
    aBlock[4] = (uint64_t)sub_100621D48;
    aBlock[5] = (uint64_t)v45;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10061C7D4;
    aBlock[3] = (uint64_t)&unk_100A94760;
    unint64_t v46 = _Block_copy(aBlock);
    uint64_t v47 = v39;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [v44 enumerateItemsFromPage:v40 suggestedPageSize:v60 reply:v46];
    _Block_release(v46);
    swift_release();

    swift_unknownObjectRelease();
    ((void (*)(char *, uint64_t))v64)(v66, v7);
  }
  return swift_release();
}

void sub_100620A04(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  uint64_t v12 = a6;
  if (a6)
  {
    swift_errorRetain();
    swift_errorRetain();
    id v17 = a8;
    sub_10001EBB0(a9, a10);
    swift_errorRetain();
    id v18 = v17;
    sub_10001EBB0(a9, a10);
    id v19 = sub_10096B470();
    os_log_type_t v20 = sub_10096C5B0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v59 = v12;
      uint64_t v21 = swift_slowAlloc();
      int v22 = (void *)swift_slowAlloc();
      v62[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412802;
      id v23 = v18;
      sub_10096C8C0();
      *int v22 = v18;

      uint64_t v24 = a5;
      *(_WORD *)(v21 + 12) = 2080;
      sub_10001EBB0(a9, a10);
      uint64_t v25 = sub_10096AEA0();
      unint64_t v27 = v26;
      sub_10001E9C0(a9, a10);
      sub_100719D44(v25, v27, v62);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);
      *(_WORD *)(v21 + 22) = 2112;
      swift_getErrorValue();
      id v61 = Error.prettyDescription.getter(v60);
      id v28 = a4;
      sub_10096C8C0();
      v22[1] = v61;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "📖  %@: enumerating from change %s failed: %@", (uint8_t *)v21, 0x20u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v12 = v59;
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);
      swift_errorRelease();
      swift_errorRelease();
      id v28 = a4;
      uint64_t v24 = a5;
    }
  }
  else
  {
    id v29 = a8;
    sub_10001EBB0(a9, a10);
    id v30 = a4;
    id v31 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001EBB0(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = v30;
    unint64_t v33 = sub_10096B470();
    os_log_type_t v53 = sub_10096C5A0();
    if (os_log_type_enabled(v33, v53))
    {
      type = v32;
      char v54 = a3;
      os_log_t v56 = a4;
      uint64_t v34 = swift_slowAlloc();
      unint64_t v35 = (void *)swift_slowAlloc();
      v62[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138413570;
      unint64_t v57 = a1;
      id v36 = v31;
      sub_10096C8C0();
      *unint64_t v35 = v31;

      *(_WORD *)(v34 + 12) = 2080;
      sub_10001EBB0(a9, a10);
      uint64_t v37 = sub_10096AEA0();
      unint64_t v39 = v38;
      sub_10001E9C0(a9, a10);
      sub_100719D44(v37, v39, v62);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);
      *(_WORD *)(v34 + 22) = 2048;
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2048;
      id v28 = a4;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_10096CE70();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 42) = 2080;
      if (v54) {
        uint64_t v40 = 0x6F6D20736168202CLL;
      }
      else {
        uint64_t v40 = 0;
      }
      if (v54) {
        unint64_t v41 = 0xEA00000000006572;
      }
      else {
        unint64_t v41 = 0xE000000000000000;
      }
      sub_100719D44(v40, v41, v62);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 52) = 2080;
      if (a4)
      {
        uint64_t v42 = sub_10096AF60();
        unint64_t v44 = v43;
        uint64_t v45 = sub_10096AEA0();
        unint64_t v47 = v46;
        unint64_t v48 = v44;
        id v28 = v56;
        sub_10001E9C0(v42, v48);
      }
      else
      {
        unint64_t v47 = 0xE500000000000000;
        uint64_t v45 = 0x3E6C696E3CLL;
      }
      sub_100719D44(v45, v47, v62);
      sub_10096C8C0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v53, "📖  %@: enumerating from change %s done: %ld updated, %ld deleted%s, next anchor:%s", (uint8_t *)v34, 0x3Eu);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = a5;
      uint64_t v12 = 0;
      a3 = v54;
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001E9C0(a9, a10);
      sub_10001E9C0(a9, a10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = a5;
      uint64_t v12 = 0;
      id v28 = a4;
    }
  }
  sub_100011348(0, (unint64_t *)&unk_100ACD9F0);
  v49.super.Class isa = sub_10096C080().super.isa;
  sub_100011348(0, (unint64_t *)&unk_100ACEC40);
  v50.super.Class isa = sub_10096C080().super.isa;
  if (v12) {
    unint64_t v51 = (void *)sub_10096ABE0();
  }
  else {
    unint64_t v51 = 0;
  }
  (*(void (**)(uint64_t, Class, Class, void, void *, uint64_t, void *))(a11 + 16))(a11, v49.super.isa, v50.super.isa, a3 & 1, v28, v24, v51);
}

uint64_t sub_100621244(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, const void *a5)
{
  uint64_t v67 = a3;
  uint64_t v9 = sub_10096B480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v72 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v69 = &v60[-v14];
  __chkstk_darwin(v13);
  uint64_t v16 = &v60[-v15];
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = a5;
  uint64_t v74 = v10;
  id v17 = *(void (**)(unsigned char *, char *, uint64_t))(v10 + 16);
  v17(v16, &a4[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v9);
  id v18 = a4;
  sub_10001EBB0(a1, a2);
  id v19 = v18;
  sub_10001EBB0(a1, a2);
  uint64_t v68 = a5;
  _Block_copy(a5);
  uint64_t v73 = v16;
  os_log_type_t v20 = sub_10096B470();
  os_log_type_t v21 = sub_10096C5A0();
  int v22 = v21;
  BOOL v23 = os_log_type_enabled(v20, v21);
  uint64_t v70 = v19;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v66 = v9;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v63 = v11;
    unint64_t v27 = (void *)v26;
    uint64_t v64 = swift_slowAlloc();
    aBlock[0] = v64;
    *(_DWORD *)uint64_t v25 = 138412546;
    os_log_t v62 = v20;
    uint64_t v76 = (uint64_t)v19;
    uint64_t v65 = v17;
    id v28 = v19;
    int v61 = v22;
    id v29 = v28;
    sub_10096C8C0();
    *unint64_t v27 = v19;
    uint64_t v11 = v63;

    *(_WORD *)(v25 + 12) = 2080;
    sub_10001EBB0(a1, a2);
    uint64_t v30 = sub_10096AEA0();
    unint64_t v32 = v31;
    sub_10001E9C0(a1, a2);
    uint64_t v76 = sub_100719D44(v30, v32, aBlock);
    id v17 = v65;
    sub_10096C8C0();
    swift_bridgeObjectRelease();
    sub_10001E9C0(a1, a2);
    sub_10001E9C0(a1, a2);
    os_log_t v33 = v62;
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v61, "📖  %@: enumerating from change %s", (uint8_t *)v25, 0x16u);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v66;
    swift_slowDealloc();
  }
  else
  {

    sub_10001E9C0(a1, a2);
    sub_10001E9C0(a1, a2);
  }
  uint64_t v34 = v69;
  v17(v69, v73, v9);
  v17(v72, v34, v9);
  uint64_t v35 = v74;
  unint64_t v36 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  unint64_t v37 = (v11 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v39 + v36, v34, v9);
  uint64_t v40 = v70;
  *(void *)(v39 + v37) = v70;
  unint64_t v41 = (uint64_t *)(v39 + v38);
  *unint64_t v41 = a1;
  v41[1] = a2;
  uint64_t v42 = (void (**)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))(v39
                                                                                + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v43 = v71;
  *uint64_t v42 = sub_10012FC40;
  v42[1] = (void (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))v43;
  unint64_t v44 = v40;
  sub_10001EBB0(a1, a2);
  swift_retain();
  if (objc_sync_enter(v44)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v44);
  }
  char v45 = v44[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v44)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v44);
  }

  if ((v45 & 1) != 0 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v76 = -1002;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_100025804((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
    sub_10096ABD0();
    char v54 = (void *)aBlock[0];
    uint64_t v55 = v68;
    _Block_copy(v68);
    unint64_t v59 = a2;
    os_log_t v56 = v72;
    sub_100620A04((unint64_t)_swiftEmptyArrayStorage, (unint64_t)_swiftEmptyArrayStorage, 0, 0, 0, (uint64_t)v54, (uint64_t)v72, v44, a1, v59, (uint64_t)v55);
    _Block_release(v55);
    swift_release();

    unint64_t v57 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
    v57(v56, v9);
    v57(v73, v9);
  }
  else
  {
    unint64_t v47 = (void *)Strong;
    unint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
    v48(v72, v9);
    NSArray v49 = *(void **)&v44[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    swift_unknownObjectRetain();
    Class isa = sub_10096AF20().super.isa;
    unint64_t v51 = (void *)swift_allocObject();
    v51[2] = v44;
    v51[3] = sub_100621A5C;
    v51[4] = v39;
    aBlock[4] = (uint64_t)sub_100621B60;
    aBlock[5] = (uint64_t)v51;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10061C95C;
    aBlock[3] = (uint64_t)&unk_100A946C0;
    unint64_t v52 = _Block_copy(aBlock);
    os_log_type_t v53 = v44;
    swift_retain();
    swift_release();
    [v49 enumerateChangesFromToken:isa suggestedBatchSize:v67 reply:v52];
    _Block_release(v52);
    swift_release();

    swift_unknownObjectRelease();
    v48(v73, v9);
  }
  return swift_release();
}

uint64_t sub_100621988()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  sub_10001E9C0(*(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100621A5C(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(sub_10096B480() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v15 = (*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10061E13C(a1, a2, a3, a4, a5, a6, v6 + v14, *(void **)(v6 + v15), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(uint64_t (**)(unint64_t, unint64_t, void, void *, uint64_t, uint64_t))(v6 + ((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100621B60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10061E918(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v6 + 24));
}

uint64_t sub_100621B8C()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100621C5C(unint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_10096B480() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10061D458(a1, a2, a3, a4, a5, v5 + v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(unint64_t, void *, void *, uint64_t, uint64_t))(v5+ ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100621D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10061DAF4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24));
}

uint64_t sub_100621D54()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100621D8C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100621DD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FPFSMaterializedSetAnchor();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_10096AF60();
  int v13 = v11;
  char v14 = BYTE6(v12);
  switch(v12 >> 62)
  {
    case 1uLL:
      unint64_t v15 = HIDWORD(v11);
      sub_10001E9C0(v11, v12);
      if (__OFSUB__(v15, v13))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x10062213CLL);
      }
      if (v15 == v13) {
        goto LABEL_12;
      }
      goto LABEL_9;
    case 2uLL:
      uint64_t v31 = v3;
      uint64_t v16 = a3;
      uint64_t v17 = a2;
      uint64_t v19 = *(void *)(v11 + 16);
      uint64_t v18 = *(void *)(v11 + 24);
      sub_10001E9C0(v11, v12);
      uint64_t v20 = v18 - v19;
      if (__OFSUB__(v18, v19)) {
        goto LABEL_18;
      }
      a2 = v17;
      a3 = v16;
      uint64_t v4 = v31;
      if (!v20)
      {
LABEL_12:

        uint64_t v26 = sub_10096B180();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a3, a2, v26);
LABEL_13:
        *(void *)(a3 + *(int *)(v8 + 20)) = 0;
        return result;
      }
LABEL_9:
      uint64_t v31 = a2;
      sub_10096AA90();
      swift_allocObject();
      sub_10096AA80();
      uint64_t v21 = sub_10096AF60();
      unint64_t v23 = v22;
      sub_100622CD8(&qword_100AD91E8, (void (*)(uint64_t))type metadata accessor for FPFSMaterializedSetAnchor);
      sub_10096AA70();
      if (v4)
      {
        sub_10001E9C0(v21, v23);

        swift_release();
        uint64_t v24 = sub_10096B180();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v31, v24);
      }
      sub_10001E9C0(v21, v23);
      uint64_t v27 = sub_10096B180();
      sub_100622CD8((unint64_t *)&unk_100ACBCD0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = v31;
      char v29 = sub_10096BBE0();
      swift_release();

      if ((v29 & 1) == 0)
      {
        sub_100622198((uint64_t)v10);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a3, v28, v27);
        goto LABEL_13;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v28, v27);
      return sub_1006221F4((uint64_t)v10, a3);
    case 3uLL:
      sub_10001E9C0(v11, v12);
      goto LABEL_12;
    default:
      sub_10001E9C0(v11, v12);
      if (!v14) {
        goto LABEL_12;
      }
      goto LABEL_9;
  }
}

uint64_t type metadata accessor for FPFSMaterializedSetAnchor()
{
  uint64_t result = qword_100AD9248;
  if (!qword_100AD9248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100622198(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006221F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100622258(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10096B180();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100622324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006223A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10062241C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100622498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100622514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100622528);
}

uint64_t sub_100622528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096B180();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100622594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006225A8);
}

uint64_t sub_1006225A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10096B180();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100622618()
{
  uint64_t result = sub_10096B180();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006226B0(void *a1)
{
  uint64_t v3 = sub_10002B7CC(&qword_100AD9280);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_100622C84();
  sub_10096D590();
  v8[15] = 0;
  sub_10096B180();
  sub_100622CD8(&qword_100ACAD28, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10096D1A0();
  if (!v1)
  {
    type metadata accessor for FPFSMaterializedSetAnchor();
    v8[14] = 1;
    sub_10096D180();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100622864@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_10096B180();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10002B7CC(&qword_100AD9290);
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FPFSMaterializedSetAnchor();
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_100622C84();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v19 = v11;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  char v26 = 0;
  sub_100622CD8(&qword_100ACAD08, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v14 = v23;
  sub_10096D040();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v6, v14);
  char v25 = 1;
  uint64_t v15 = sub_10096D030();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  uint64_t v17 = (uint64_t)v19;
  uint64_t v16 = v20;
  *(void *)&v19[*(int *)(v9 + 20)] = v15;
  sub_100622D20(v17, v16);
  sub_1000268E0((uint64_t)a1);
  return sub_100622198(v17);
}

uint64_t sub_100622B88()
{
  if (*v0) {
    return 0x726F68636E61;
  }
  else {
    return 0x444955556264;
  }
}

uint64_t sub_100622BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100622F90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100622BDC(uint64_t a1)
{
  unint64_t v2 = sub_100622C84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100622C18(uint64_t a1)
{
  unint64_t v2 = sub_100622C84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100622C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100622864(a1, a2);
}

uint64_t sub_100622C6C(void *a1)
{
  return sub_1006226B0(a1);
}

unint64_t sub_100622C84()
{
  unint64_t result = qword_100AD9288;
  if (!qword_100AD9288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9288);
  }
  return result;
}

uint64_t sub_100622CD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100622D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for FPFSMaterializedSetAnchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100622E50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFSMaterializedSetAnchor.CodingKeys()
{
  return &type metadata for FPFSMaterializedSetAnchor.CodingKeys;
}

unint64_t sub_100622E8C()
{
  unint64_t result = qword_100AD9298;
  if (!qword_100AD9298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9298);
  }
  return result;
}

unint64_t sub_100622EE4()
{
  unint64_t result = qword_100AD92A0;
  if (!qword_100AD92A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD92A0);
  }
  return result;
}

unint64_t sub_100622F3C()
{
  unint64_t result = qword_100AD92A8[0];
  if (!qword_100AD92A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD92A8);
  }
  return result;
}

uint64_t sub_100622F90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444955556264 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F68636E61 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100623074()
{
  uint64_t result = type metadata accessor for SnapshotMutation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SnapshotMutation();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_100623148(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v660 = *(void *)(AssociatedTypeWitness - 8);
  int v690 = *(_DWORD *)(v660 + 80);
  uint64_t v624 = v2 + v690;
  uint64_t v626 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v626 - 8);
  uint64_t v635 = v3;
  int v687 = *(_DWORD *)(v3 + 80);
  uint64_t v629 = swift_getAssociatedTypeWitness();
  uint64_t v637 = *(void *)(v629 - 8);
  int v684 = *(_DWORD *)(v637 + 80);
  uint64_t v4 = v687 & 0xF8 | v684 | 7u;
  uint64_t v619 = v2 + v4;
  uint64_t v623 = *(void *)(v3 + 64) + 7;
  uint64_t v625 = v684 + 8;
  uint64_t v627 = *(void *)(v637 + 64) + 7;
  uint64_t v651 = sub_10096B0E0();
  uint64_t v5 = *(void *)(v651 - 8);
  int v680 = *(_DWORD *)(v5 + 80);
  uint64_t v6 = v680 | 7;
  uint64_t v707 = v6 + 16;
  unint64_t v631 = ((((v627 + ((v625 + (v623 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v684)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v644 = v680 + 12;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v645 = v7 + v680;
  uint64_t v646 = v7;
  uint64_t v647 = v680 + 10;
  uint64_t v639 = v5;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v8 = *(void *)(*(void *)(v651 - 8) + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  size_t __n = v8;
  size_t v648 = v8 + 7;
  unint64_t v668 = (((((((((v8
                + 7
                + ((v680
                  + 10
                  + ((((((v7
                        + ((v7
                          + v680
                          + ((v680 + 12) & ~(unint64_t)v680)) & ~(unint64_t)v680)
                        + 12) & 0xFFFFFFFFFFFFFFF8)
                      + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v680)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (((v668
        + 327
        + ((v6
          + 16
          + ((v2 + v4 + (v624 & ~(unint64_t)v690)) & ~v4)
          + ((((v627
              + ((v684 + 8 + (v623 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v684)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v662 = v687 & 0xF8 | v684 | 7u;
  unint64_t v699 = v4 | v690 | (unint64_t)v680;
  unint64_t v617 = v9 + 16;
  unint64_t v618 = v9 + 16 + v699;
  unint64_t v620 = v9 + 23;
  unint64_t v11 = ((((v9 + 23 + (v618 & ~v699)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v12 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v640 = v2;
  if (v12 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v12 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v12 > v10) {
    unint64_t v10 = v12;
  }
  if (v10 > v11) {
    unint64_t v11 = v10;
  }
  unint64_t v665 = v11;
  unint64_t v697 = v11 | 1;
  uint64_t v652 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(*(void *)(v652 - 8) + 64);
  uint64_t v657 = *(void *)(v652 - 8);
  int v676 = *(_DWORD *)(v657 + 80);
  uint64_t v621 = v13 + v676;
  uint64_t v622 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v622 - 8);
  uint64_t v634 = v14;
  int v672 = *(_DWORD *)(v14 + 80);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = v14;
  int v17 = *(_DWORD *)(*(void *)(v15 - 8) + 80);
  uint64_t v18 = v17;
  uint64_t v19 = v672 & 0xF8 | v17 | 7u;
  uint64_t v20 = v13 + v19;
  uint64_t v21 = *(void *)(v16 + 64) + 7;
  uint64_t v22 = v17 + 8;
  unint64_t v23 = ((((*(void *)(*(void *)(v15 - 8) + 64) + 7 + ((v18 + 8 + (v21 & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (((v668 + 327 + ((v707 + ((v13 + v19 + (v621 & ~(unint64_t)v676)) & ~v19) + v23) & ~v6)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v24 + 23;
  unint64_t v26 = ((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v27 = v24 + 16;
  uint64_t v28 = v676;
  uint64_t v29 = v19 | v676;
  uint64_t v30 = v29 | v680;
  unint64_t v31 = v27 + v30;
  unint64_t v32 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v32 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v32 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v32 > v26) {
    unint64_t v26 = v32;
  }
  if (v26 <= ((((v25 + ((v27 + v30) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v33 = ((((v25 + ((v27 + v30) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v33 = v26;
  }
  if ((v33 | 1) <= v697) {
    uint64_t v34 = v697;
  }
  else {
    uint64_t v34 = v33 | 1;
  }
  if ((v29 | v699) != 7
    || ((v687 | v690 | v684 | v680 | v676 | v672 | v17) & 0x100000) != 0
    || (unint64_t)(v34 + 1) > 0x18)
  {
    uint64_t v42 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v40 = (void *)(v42 + (((v29 | v699) + 16) & ~(v29 | v699)));
    swift_retain();
  }
  else
  {
    uint64_t v35 = v680 | 7;
    uint64_t v36 = v13;
    unsigned int v37 = a2[v34];
    unsigned int v38 = v37 - 2;
    if (v37 < 2)
    {
      uint64_t v40 = a1;
    }
    else
    {
      if (v34 <= 3) {
        uint64_t v39 = v34;
      }
      else {
        uint64_t v39 = 4;
      }
      uint64_t v40 = a1;
      switch(v39)
      {
        case 1:
          int v41 = *a2;
          if (v34 < 4) {
            goto LABEL_35;
          }
          goto LABEL_37;
        case 2:
          int v41 = *(unsigned __int16 *)a2;
          if (v34 >= 4) {
            goto LABEL_37;
          }
          goto LABEL_35;
        case 3:
          int v41 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v34 < 4) {
            goto LABEL_35;
          }
          goto LABEL_37;
        case 4:
          int v41 = *(_DWORD *)a2;
          if (v34 < 4) {
LABEL_35:
          }
            unsigned int v37 = (v41 | (v38 << (8 * v34))) + 2;
          else {
LABEL_37:
          }
            unsigned int v37 = v41 + 2;
          break;
        default:
          break;
      }
    }
    unint64_t v698 = ~(unint64_t)v680;
    unint64_t v43 = v668 + 16;
    if (v37 == 1)
    {
      unsigned int v44 = a2[v33];
      if (v44 >= 6 && v33 != 0) {
        unsigned int v44 = *(_DWORD *)a2 + 6;
      }
      unint64_t v46 = ~(unint64_t)v676;
      uint64_t v47 = ~v18;
      uint64_t v48 = ~v30;
      switch(v44)
      {
        case 1u:
          uint64_t v632 = v48;
          unint64_t v655 = v31;
          uint64_t v661 = v20;
          unint64_t v667 = v25;
          unint64_t v670 = v33;
          unint64_t v695 = v43;
          uint64_t v702 = v34;
          uint64_t v129 = *(void (**)(unint64_t, unint64_t, uint64_t))(v657 + 16);
          uint64_t v682 = v15;
          unint64_t v686 = v23;
          uint64_t v616 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
          uint64_t v689 = *(void *)(v15 - 8);
          uint64_t v692 = ~v35;
          uint64_t v674 = v47;
          uint64_t v678 = v22;
          uint64_t v130 = v21;
          unint64_t v131 = v46;
          v129((unint64_t)v40, (unint64_t)a2, v652);
          unint64_t v132 = ((unint64_t)v40 + v621) & v131;
          unint64_t v638 = v131;
          unint64_t v133 = (unint64_t)&a2[v621] & v131;
          v636 = v129;
          v129(v132, v133, v652);
          unint64_t v134 = (v132 + v36 + v19) & ~v19;
          uint64_t v641 = ~v19;
          unint64_t v135 = (v133 + v36 + v19) & ~v19;
          v628 = *(void (**)(unint64_t, unint64_t, uint64_t))(v634 + 16);
          v628(v134, v135, v622);
          uint64_t v136 = (void *)((v130 + v134) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v663 = v130;
          uint64_t v137 = (void *)((v130 + v135) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v136 = *v137;
          unint64_t v138 = ((unint64_t)v136 + v678) & v674;
          unint64_t v139 = ((unint64_t)v137 + v678) & v674;
          int v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v689 + 16);
          swift_bridgeObjectRetain();
          v630 = v140;
          v140(v138, v139, v682);
          long long v141 = (void *)((v616 + v139) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v142 = (void *)((v616 + v138) & 0xFFFFFFFFFFFFFFF8);
          void *v142 = *v141;
          unint64_t v143 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v144 = (void *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v143 = *v144;
          v143[1] = v144[1];
          unint64_t v145 = (void *)(v686 + v134);
          void *v145 = *(void *)(v686 + v135);
          v145[1] = *(void *)(v686 + v135 + 8);
          uint64_t v146 = (v707 + v686 + v134) & ~v35;
          uint64_t v147 = (v707 + v686 + v135) & ~v35;
          *(unsigned char *)uint64_t v146 = *(unsigned char *)v147;
          uint64_t v148 = v146 | 4;
          int v149 = *(_DWORD *)(v147 | 4);
          *(unsigned char *)(v148 + 4) = *(unsigned char *)((v147 | 4) + 4);
          *(_DWORD *)uint64_t v148 = v149;
          *(_WORD *)(v146 + 10) = *(_WORD *)(v147 + 0xA);
          unint64_t v150 = (v644 + v146) & v698;
          unint64_t v151 = (v644 + v147) & v698;
          unint64_t v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v639 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v152(v150, v151, v651);
          unint64_t v153 = (v645 + v150) & v698;
          unint64_t v154 = (v645 + v151) & v698;
          v152(v153, v154, v651);
          char v155 = (unsigned char *)(v153 + v646);
          unsigned char *v155 = *(unsigned char *)(v154 + v646);
          v155[1] = *(unsigned char *)(v154 + v646 + 1);
          v155[2] = *(unsigned char *)(v154 + v646 + 2);
          v155[3] = *(unsigned char *)(v154 + v646 + 3);
          v155[4] = *(unsigned char *)(v154 + v646 + 4);
          unint64_t v156 = (v153 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v157 = (v154 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v156 = *(void *)v157;
          *(void *)(v156 + 8) = *(void *)(v157 + 8);
          *(unsigned char *)(v156 + 16) = *(unsigned char *)(v157 + 16);
          *(unsigned char *)(v156 + 17) = *(unsigned char *)(v157 + 17);
          *(unsigned char *)(v156 + 18) = *(unsigned char *)(v157 + 18);
          *(unsigned char *)(v156 + 19) = *(unsigned char *)(v157 + 19);
          unint64_t v158 = (v156 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v158 = *(void *)v159;
          *(unsigned char *)(v158 + 8) = *(unsigned char *)(v159 + 8);
          *(unsigned char *)(v158 + 9) = *(unsigned char *)(v159 + 9);
          *(unsigned char *)(v158 + 10) = *(unsigned char *)(v159 + 10);
          *(unsigned char *)(v158 + 11) = *(unsigned char *)(v159 + 11);
          *(unsigned char *)(v158 + 12) = *(unsigned char *)(v159 + 12);
          unint64_t v160 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v161 = (void *)((v156 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v161 = *v160;
          unint64_t v162 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v163 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v162 = *(void *)v163;
          *(unsigned char *)(v162 + 8) = *(unsigned char *)(v163 + 8);
          *(unsigned char *)(v162 + 9) = *(unsigned char *)(v163 + 9);
          long long v164 = (void *)((v647 + v162) & v698);
          unint64_t v165 = (const void *)((v647 + v163) & v698);
          unint64_t v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v639 + 48);
          swift_bridgeObjectRetain();
          v649 = v152;
          if (v166(v165, 1, v651))
          {
            memcpy(v164, v165, __n);
          }
          else
          {
            v152((unint64_t)v164, (unint64_t)v165, v651);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v164, 0, 1, v651);
          }
          int v243 = (void *)(((unint64_t)v164 + v648) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v244 = (void *)(((unint64_t)v165 + v648) & 0xFFFFFFFFFFFFFFF8);
          void *v243 = *v244;
          unint64_t v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v246 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v247 = *(void *)v246;
          *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
          *(void *)unint64_t v245 = v247;
          unint64_t v248 = (void *)(((unint64_t)v243 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v249 = (void *)(((unint64_t)v244 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v248 = *v249;
          unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v251 = (uint64_t *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v252 = v251[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v253 = a1;
          if ((v252 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v250 = *(_OWORD *)v251;
          }
          else
          {
            uint64_t v317 = *v251;
            sub_10001EBB0(*v251, v252);
            *(void *)unint64_t v250 = v317;
            *(void *)(v250 + 8) = v252;
          }
          unint64_t v318 = (v250 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v319 = ((unint64_t)v251 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v320 = *(void *)v319;
          *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
          *(void *)unint64_t v318 = v320;
          *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
          unint64_t v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v322 = (v319 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v323 = *(_DWORD *)v322;
          *(unsigned char *)(v321 + 4) = *(unsigned char *)(v322 + 4);
          *(_DWORD *)unint64_t v321 = v323;
          unint64_t v324 = (void *)((v318 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v325 = (void *)((v319 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v324 = *v325;
          v324[1] = v325[1];
          unint64_t v326 = v146 + v695;
          unint64_t v327 = (long long *)(v147 + v695);
          unint64_t v328 = *((void *)v327 + 2);
          if (v328 >= 0xFFFFFFFF) {
            LODWORD(v328) = -1;
          }
          int v329 = v328 - 1;
          swift_bridgeObjectRetain();
          uint64_t v330 = v651;
          if (v329 < 0)
          {
            *(void *)unint64_t v326 = *(void *)v327;
            *(unsigned char *)(v326 + 8) = *((unsigned char *)v327 + 8);
            *(unsigned char *)(v326 + 9) = *((unsigned char *)v327 + 9);
            uint64_t v376 = *((void *)v327 + 2);
            swift_errorRetain();
            *(void *)(v326 + 16) = v376;
            uint64_t v377 = *((void *)v327 + 3);
            swift_errorRetain();
            *(void *)(v326 + 24) = v377;
            *(unsigned char *)(v326 + 32) = *((unsigned char *)v327 + 32);
            *(unsigned char *)(v326 + 33) = *((unsigned char *)v327 + 33);
            *(unsigned char *)(v326 + 34) = *((unsigned char *)v327 + 34);
            *(void *)(v326 + 40) = *((void *)v327 + 5);
            *(void *)(v326 + 48) = *((void *)v327 + 6);
            *(void *)(v326 + 56) = *((void *)v327 + 7);
            *(void *)(v326 + 64) = *((void *)v327 + 8);
            *(unsigned char *)(v326 + 72) = *((unsigned char *)v327 + 72);
            *(void *)(v326 + 80) = *((void *)v327 + 10);
            *(void *)(v326 + 88) = *((void *)v327 + 11);
            uint64_t v378 = (void *)*((void *)v327 + 12);
            *(void *)(v326 + 96) = v378;
            *(unsigned char *)(v326 + 104) = *((unsigned char *)v327 + 104);
            *(unsigned char *)(v326 + 105) = *((unsigned char *)v327 + 105);
            *(void *)(v326 + 112) = *((void *)v327 + 14);
            *(void *)(v326 + 120) = *((void *)v327 + 15);
            *(void *)(v326 + 128) = *((void *)v327 + 16);
            *(void *)(v326 + 136) = *((void *)v327 + 17);
            *(void *)(v326 + 144) = *((void *)v327 + 18);
            *(void *)(v326 + 152) = *((void *)v327 + 19);
            *(void *)(v326 + 160) = *((void *)v327 + 20);
            *(void *)(v326 + 168) = *((void *)v327 + 21);
            *(unsigned char *)(v326 + 176) = *((unsigned char *)v327 + 176);
            *(void *)(v326 + 184) = *((void *)v327 + 23);
            uint64_t v379 = *((void *)v327 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v380 = v378;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v379)
            {
              *(void *)(v326 + 192) = v379;
              *(void *)(v326 + 200) = *((void *)v327 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v326 + 192) = v327[12];
            }
            unint64_t v253 = a1;
            uint64_t v330 = v651;
            *(void *)(v326 + 208) = *((void *)v327 + 26);
            *(void *)(v326 + 216) = *((void *)v327 + 27);
            *(void *)(v326 + 224) = *((void *)v327 + 28);
            *(void *)(v326 + 232) = *((void *)v327 + 29);
            *(void *)(v326 + 240) = *((void *)v327 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v331 = *v327;
            long long v332 = v327[1];
            long long v333 = v327[3];
            *(_OWORD *)(v326 + 32) = v327[2];
            *(_OWORD *)(v326 + 48) = v333;
            *(_OWORD *)unint64_t v326 = v331;
            *(_OWORD *)(v326 + 16) = v332;
            long long v334 = v327[4];
            long long v335 = v327[5];
            long long v336 = v327[7];
            *(_OWORD *)(v326 + 96) = v327[6];
            *(_OWORD *)(v326 + 112) = v336;
            *(_OWORD *)(v326 + 64) = v334;
            *(_OWORD *)(v326 + 80) = v335;
            long long v337 = v327[8];
            long long v338 = v327[9];
            long long v339 = v327[11];
            *(_OWORD *)(v326 + 160) = v327[10];
            *(_OWORD *)(v326 + 176) = v339;
            *(_OWORD *)(v326 + 128) = v337;
            *(_OWORD *)(v326 + 144) = v338;
            long long v340 = v327[12];
            long long v341 = v327[13];
            long long v342 = v327[14];
            *(void *)(v326 + 240) = *((void *)v327 + 30);
            *(_OWORD *)(v326 + 208) = v341;
            *(_OWORD *)(v326 + 224) = v342;
            *(_OWORD *)(v326 + 192) = v340;
          }
          uint64_t v413 = (_OWORD *)((v326 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v414 = (long long *)(((unint64_t)v327 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v415 = *v414;
          *(_OWORD *)((char *)v413 + 9) = *(long long *)((char *)v414 + 9);
          *uint64_t v413 = v415;
          unint64_t v416 = (v326 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v417 = ((unint64_t)v327 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v418 = *(_OWORD *)v417;
          *(unsigned char *)(v416 + 16) = *(unsigned char *)(v417 + 16);
          *(_OWORD *)unint64_t v416 = v418;
          uint64_t v419 = (void *)((v326 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v420 = ((unint64_t)v327 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v421 = *(void *)v420;
          v420 += 15;
          void *v419 = v421;
          uint64_t v422 = (void *)(((unint64_t)v419 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v423 = *(void *)(v420 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v424 = *(void *)((v420 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v423, v424);
          *uint64_t v422 = v423;
          v422[1] = v424;
          unint64_t v425 = (unint64_t)&a2[v655] & v632;
          v636(((unint64_t)v253 + v655) & v632, v425, v652);
          unint64_t v704 = ((unint64_t)v253 + v655) & v632;
          unint64_t v426 = (v621 + v704) & v638;
          unint64_t v656 = v425;
          unint64_t v427 = (v621 + v425) & v638;
          v636(v426, v427, v652);
          uint64_t v428 = (v661 + v426) & v641;
          unint64_t v429 = (v661 + v427) & v641;
          v628(v428, v429, v622);
          uint64_t v430 = (void *)((v663 + v428) & 0xFFFFFFFFFFFFFFF8);
          long long v431 = (void *)((v663 + v429) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v430 = *v431;
          unint64_t v432 = ((unint64_t)v430 + v678) & v674;
          unint64_t v433 = ((unint64_t)v431 + v678) & v674;
          swift_bridgeObjectRetain();
          v630(v432, v433, v682);
          unint64_t v434 = (void *)((v616 + v432) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v435 = (void *)((v616 + v433) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v434 = *v435;
          uint64_t v436 = (void *)(((unint64_t)v434 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v437 = (void *)(((unint64_t)v435 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v436 = *v437;
          v436[1] = v437[1];
          uint64_t v438 = (void *)(v428 + v686);
          *uint64_t v438 = *(void *)(v429 + v686);
          v438[1] = *(void *)(v429 + v686 + 8);
          unint64_t v439 = (v707 + v428 + v686) & v692;
          unint64_t v440 = (v707 + v429 + v686) & v692;
          *(unsigned char *)unint64_t v439 = *(unsigned char *)v440;
          uint64_t v441 = v439 | 4;
          int v442 = *(_DWORD *)(v440 | 4);
          *(unsigned char *)(v441 + 4) = *(unsigned char *)((v440 | 4) + 4);
          *(_DWORD *)uint64_t v441 = v442;
          *(_WORD *)(v439 + 10) = *(_WORD *)(v440 + 0xA);
          unint64_t v443 = (v644 + v439) & v698;
          unint64_t v444 = (v644 + v440) & v698;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v649(v443, v444, v330);
          unint64_t v445 = (v645 + v443) & v698;
          unint64_t v446 = (v645 + v444) & v698;
          v649(v445, v446, v330);
          uint64_t v447 = (unsigned char *)(v445 + v646);
          *uint64_t v447 = *(unsigned char *)(v446 + v646);
          v447[1] = *(unsigned char *)(v446 + v646 + 1);
          v447[2] = *(unsigned char *)(v446 + v646 + 2);
          v447[3] = *(unsigned char *)(v446 + v646 + 3);
          v447[4] = *(unsigned char *)(v446 + v646 + 4);
          unint64_t v448 = (v445 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v449 = (v446 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v448 = *(void *)v449;
          *(void *)(v448 + 8) = *(void *)(v449 + 8);
          *(unsigned char *)(v448 + 16) = *(unsigned char *)(v449 + 16);
          *(unsigned char *)(v448 + 17) = *(unsigned char *)(v449 + 17);
          *(unsigned char *)(v448 + 18) = *(unsigned char *)(v449 + 18);
          *(unsigned char *)(v448 + 19) = *(unsigned char *)(v449 + 19);
          unint64_t v450 = (v448 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v451 = (v449 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v450 = *(void *)v451;
          *(unsigned char *)(v450 + 8) = *(unsigned char *)(v451 + 8);
          *(unsigned char *)(v450 + 9) = *(unsigned char *)(v451 + 9);
          *(unsigned char *)(v450 + 10) = *(unsigned char *)(v451 + 10);
          *(unsigned char *)(v450 + 11) = *(unsigned char *)(v451 + 11);
          *(unsigned char *)(v450 + 12) = *(unsigned char *)(v451 + 12);
          unint64_t v452 = (void *)((v448 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v453 = (void *)((v449 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v452 = *v453;
          unint64_t v454 = ((unint64_t)v452 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v455 = ((unint64_t)v453 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v454 = *(void *)v455;
          *(unsigned char *)(v454 + 8) = *(unsigned char *)(v455 + 8);
          *(unsigned char *)(v454 + 9) = *(unsigned char *)(v455 + 9);
          unsigned int v456 = (void *)((v647 + v454) & v698);
          int v457 = (const void *)((v647 + v455) & v698);
          swift_bridgeObjectRetain();
          if (v166(v457, 1, v330))
          {
            memcpy(v456, v457, __n);
          }
          else
          {
            v649((unint64_t)v456, (unint64_t)v457, v330);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v456, 0, 1, v330);
          }
          unint64_t v33 = v670;
          unsigned int v458 = (void *)(((unint64_t)v456 + v648) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v459 = (void *)(((unint64_t)v457 + v648) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v458 = *v459;
          unint64_t v460 = ((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v461 = ((unint64_t)v459 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v462 = *(void *)v461;
          *(unsigned char *)(v460 + 8) = *(unsigned char *)(v461 + 8);
          *(void *)unint64_t v460 = v462;
          uint64_t v463 = (void *)(((unint64_t)v458 + 31) & 0xFFFFFFFFFFFFFFF8);
          int v464 = (void *)(((unint64_t)v459 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v463 = *v464;
          unint64_t v465 = ((unint64_t)v463 + 15) & 0xFFFFFFFFFFFFFFF8;
          int v466 = (uint64_t *)(((unint64_t)v464 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v467 = v466[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v467 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v465 = *(_OWORD *)v466;
          }
          else
          {
            uint64_t v468 = *v466;
            sub_10001EBB0(*v466, v467);
            *(void *)unint64_t v465 = v468;
            *(void *)(v465 + 8) = v467;
          }
          unint64_t v469 = (v465 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v470 = ((unint64_t)v466 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v471 = *(void *)v470;
          *(unsigned char *)(v469 + 8) = *(unsigned char *)(v470 + 8);
          *(void *)unint64_t v469 = v471;
          *(unsigned char *)(v469 + 9) = *(unsigned char *)(v470 + 9);
          unint64_t v472 = (v469 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v473 = (v470 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v474 = *(_DWORD *)v473;
          *(unsigned char *)(v472 + 4) = *(unsigned char *)(v473 + 4);
          *(_DWORD *)unint64_t v472 = v474;
          uint64_t v475 = (void *)((v469 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v476 = (void *)((v470 + 25) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v475 = *v476;
          v475[1] = v476[1];
          unint64_t v477 = v439 + v695;
          uint64_t v478 = (long long *)(v440 + v695);
          unint64_t v479 = *(void *)(v440 + v695 + 16);
          if (v479 >= 0xFFFFFFFF) {
            LODWORD(v479) = -1;
          }
          int v480 = v479 - 1;
          swift_bridgeObjectRetain();
          if (v480 < 0)
          {
            *(void *)unint64_t v477 = *(void *)v478;
            *(unsigned char *)(v477 + 8) = *((unsigned char *)v478 + 8);
            *(unsigned char *)(v477 + 9) = *((unsigned char *)v478 + 9);
            uint64_t v493 = *((void *)v478 + 2);
            swift_errorRetain();
            *(void *)(v477 + 16) = v493;
            uint64_t v494 = *((void *)v478 + 3);
            swift_errorRetain();
            *(void *)(v477 + 24) = v494;
            *(unsigned char *)(v477 + 32) = *((unsigned char *)v478 + 32);
            *(unsigned char *)(v477 + 33) = *((unsigned char *)v478 + 33);
            *(unsigned char *)(v477 + 34) = *((unsigned char *)v478 + 34);
            *(void *)(v477 + 40) = *((void *)v478 + 5);
            *(void *)(v477 + 48) = *((void *)v478 + 6);
            *(void *)(v477 + 56) = *((void *)v478 + 7);
            *(void *)(v477 + 64) = *((void *)v478 + 8);
            *(unsigned char *)(v477 + 72) = *((unsigned char *)v478 + 72);
            *(void *)(v477 + 80) = *((void *)v478 + 10);
            *(void *)(v477 + 88) = *((void *)v478 + 11);
            v712 = (void *)*((void *)v478 + 12);
            *(void *)(v477 + 96) = v712;
            *(unsigned char *)(v477 + 104) = *((unsigned char *)v478 + 104);
            *(unsigned char *)(v477 + 105) = *((unsigned char *)v478 + 105);
            *(void *)(v477 + 112) = *((void *)v478 + 14);
            *(void *)(v477 + 120) = *((void *)v478 + 15);
            *(void *)(v477 + 128) = *((void *)v478 + 16);
            *(void *)(v477 + 136) = *((void *)v478 + 17);
            *(void *)(v477 + 144) = *((void *)v478 + 18);
            *(void *)(v477 + 152) = *((void *)v478 + 19);
            *(void *)(v477 + 160) = *((void *)v478 + 20);
            *(void *)(v477 + 168) = *((void *)v478 + 21);
            *(unsigned char *)(v477 + 176) = *((unsigned char *)v478 + 176);
            *(void *)(v477 + 184) = *((void *)v478 + 23);
            uint64_t v495 = *((void *)v478 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v496 = v712;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v495)
            {
              *(void *)(v477 + 192) = v495;
              *(void *)(v477 + 200) = *((void *)v478 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v477 + 192) = v478[12];
            }
            uint64_t v40 = a1;
            unint64_t v33 = v670;
            *(void *)(v477 + 208) = *((void *)v478 + 26);
            *(void *)(v477 + 216) = *((void *)v478 + 27);
            *(void *)(v477 + 224) = *((void *)v478 + 28);
            *(void *)(v477 + 232) = *((void *)v478 + 29);
            *(void *)(v477 + 240) = *((void *)v478 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v40 = v253;
            long long v481 = *v478;
            long long v482 = v478[1];
            long long v483 = v478[3];
            *(_OWORD *)(v477 + 32) = v478[2];
            *(_OWORD *)(v477 + 48) = v483;
            *(_OWORD *)unint64_t v477 = v481;
            *(_OWORD *)(v477 + 16) = v482;
            long long v484 = v478[4];
            long long v485 = v478[5];
            long long v486 = v478[7];
            *(_OWORD *)(v477 + 96) = v478[6];
            *(_OWORD *)(v477 + 112) = v486;
            *(_OWORD *)(v477 + 64) = v484;
            *(_OWORD *)(v477 + 80) = v485;
            long long v487 = v478[8];
            long long v488 = v478[9];
            long long v489 = v478[11];
            *(_OWORD *)(v477 + 160) = v478[10];
            *(_OWORD *)(v477 + 176) = v489;
            *(_OWORD *)(v477 + 128) = v487;
            *(_OWORD *)(v477 + 144) = v488;
            long long v490 = v478[12];
            long long v491 = v478[13];
            long long v492 = v478[14];
            *(void *)(v477 + 240) = *((void *)v478 + 30);
            *(_OWORD *)(v477 + 208) = v491;
            *(_OWORD *)(v477 + 224) = v492;
            *(_OWORD *)(v477 + 192) = v490;
          }
          v582 = (_OWORD *)((v477 + 255) & 0xFFFFFFFFFFFFFFF8);
          v583 = (long long *)(((unint64_t)v478 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v584 = *v583;
          *(_OWORD *)((char *)v582 + 9) = *(long long *)((char *)v583 + 9);
          _OWORD *v582 = v584;
          unint64_t v585 = (v477 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v586 = ((unint64_t)v478 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v587 = *(_OWORD *)v586;
          *(unsigned char *)(v585 + 16) = *(unsigned char *)(v586 + 16);
          *(_OWORD *)unint64_t v585 = v587;
          v588 = (void *)((v477 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v589 = ((unint64_t)v478 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v590 = *(void *)v589;
          v589 += 15;
          void *v588 = v590;
          v591 = (void *)(((unint64_t)v588 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v592 = *(void *)(v589 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v593 = *(void *)((v589 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v592, v593);
          void *v591 = v592;
          v591[1] = v593;
          uint64_t v34 = v702;
          v594 = (void *)((v667 + v704) & 0xFFFFFFFFFFFFFFF8);
          v595 = (void *)((v667 + v656) & 0xFFFFFFFFFFFFFFF8);
          void *v594 = *v595;
          v596 = (void *)(((unint64_t)v594 + 15) & 0xFFFFFFFFFFFFFFF8);
          v597 = (void *)(((unint64_t)v595 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v596 = *v597;
          v596[1] = v597[1];
          char v169 = 1;
          break;
        case 2u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v657 + 16))(v40, a2, v652);
          *((unsigned char *)v40 + v36) = a2[v36];
          unint64_t v167 = ((unint64_t)v40 + v36) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v168 = (unint64_t)&a2[v36] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v167 + 8) = *(void *)(v168 + 8);
          *(void *)(v167 + 16) = *(void *)(v168 + 16);
          char v169 = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v657 + 16))(v40, a2, v652);
          unint64_t v170 = (void *)(((unint64_t)v40 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v171 = (void *)((unint64_t)&a2[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v170 = *v171;
          v170[1] = v171[1];
          char v169 = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v657 + 16))(v40, a2, v652);
          *((unsigned char *)v40 + v36) = a2[v36];
          unint64_t v172 = ((unint64_t)v40 + v36) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v173 = (unint64_t)&a2[v36] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v172 + 8) = *(void *)(v173 + 8);
          *(void *)(v172 + 16) = *(void *)(v173 + 16);
          char v169 = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v657 + 16))(v40, a2, v652);
          long long v174 = (void *)(((unint64_t)v40 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
          long long v175 = (void *)((unint64_t)&a2[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
          *long long v174 = *v175;
          v174[1] = v175[1];
          char v169 = 5;
          break;
        default:
          unint64_t v666 = v27;
          unint64_t v669 = v33;
          unint64_t v693 = v43;
          uint64_t v700 = v34;
          uint64_t v615 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
          NSArray v49 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v657 + 16);
          uint64_t v681 = v15;
          unint64_t v685 = v23;
          uint64_t v688 = *(void *)(v15 - 8);
          uint64_t v673 = v47;
          uint64_t v677 = v22;
          uint64_t v50 = v21;
          uint64_t v51 = ~v28;
          v49(v40, a2, v652);
          unint64_t v52 = ((unint64_t)v40 + v621) & v51;
          unint64_t v53 = (unint64_t)&a2[v621] & v51;
          v49((void *)v52, (unsigned __int8 *)v53, v652);
          unint64_t v54 = (v52 + v36 + v19) & ~v19;
          unint64_t v55 = (v53 + v36 + v19) & ~v19;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v634 + 16))(v54, v55, v622);
          os_log_t v56 = (void *)((v50 + v54) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v57 = (void *)((v50 + v55) & 0xFFFFFFFFFFFFFFF8);
          *os_log_t v56 = *v57;
          unint64_t v58 = ((unint64_t)v56 + v677) & v673;
          unint64_t v59 = ((unint64_t)v57 + v677) & v673;
          uint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v688 + 16);
          swift_bridgeObjectRetain();
          v60(v58, v59, v681);
          int v61 = (void *)((v615 + v59) & 0xFFFFFFFFFFFFFFF8);
          os_log_t v62 = (void *)((v615 + v58) & 0xFFFFFFFFFFFFFFF8);
          void *v62 = *v61;
          uint64_t v63 = (void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v64 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v63 = *v64;
          v63[1] = v64[1];
          uint64_t v65 = (void *)(v685 + v54);
          *uint64_t v65 = *(void *)(v685 + v55);
          v65[1] = *(void *)(v685 + v55 + 8);
          uint64_t v66 = (v707 + v685 + v54) & ~v35;
          uint64_t v67 = (v707 + v685 + v55) & ~v35;
          *(unsigned char *)uint64_t v66 = *(unsigned char *)v67;
          uint64_t v68 = v66 | 4;
          int v69 = *(_DWORD *)(v67 | 4);
          *(unsigned char *)(v68 + 4) = *(unsigned char *)((v67 | 4) + 4);
          *(_DWORD *)uint64_t v68 = v69;
          *(_WORD *)(v66 + 10) = *(_WORD *)(v67 + 0xA);
          uint64_t v708 = v66;
          unint64_t v70 = (v644 + v66) & v698;
          uint64_t v691 = v67;
          unint64_t v71 = (v644 + v67) & v698;
          uint64_t v72 = *(void (**)(unint64_t, unint64_t, uint64_t))(v639 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v72(v70, v71, v651);
          unint64_t v73 = (v645 + v70) & v698;
          unint64_t v74 = (v645 + v71) & v698;
          v72(v73, v74, v651);
          uint64_t v75 = (unsigned char *)(v73 + v646);
          *uint64_t v75 = *(unsigned char *)(v74 + v646);
          v75[1] = *(unsigned char *)(v74 + v646 + 1);
          v75[2] = *(unsigned char *)(v74 + v646 + 2);
          v75[3] = *(unsigned char *)(v74 + v646 + 3);
          v75[4] = *(unsigned char *)(v74 + v646 + 4);
          unint64_t v76 = (v73 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v77 = (v74 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v76 = *(void *)v77;
          *(void *)(v76 + 8) = *(void *)(v77 + 8);
          *(unsigned char *)(v76 + 16) = *(unsigned char *)(v77 + 16);
          *(unsigned char *)(v76 + 17) = *(unsigned char *)(v77 + 17);
          *(unsigned char *)(v76 + 18) = *(unsigned char *)(v77 + 18);
          *(unsigned char *)(v76 + 19) = *(unsigned char *)(v77 + 19);
          unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v79 = (v77 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v78 = *(void *)v79;
          *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
          *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
          *(unsigned char *)(v78 + 10) = *(unsigned char *)(v79 + 10);
          *(unsigned char *)(v78 + 11) = *(unsigned char *)(v79 + 11);
          *(unsigned char *)(v78 + 12) = *(unsigned char *)(v79 + 12);
          uint64_t v80 = (void *)((v77 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v81 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v81 = *v80;
          unint64_t v82 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v83 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v82 = *(void *)v83;
          *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
          *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
          unint64_t v84 = (void *)((v647 + v82) & v698);
          unint64_t v85 = (const void *)((v647 + v83) & v698);
          unint64_t v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v639 + 48);
          swift_bridgeObjectRetain();
          if (v86(v85, 1, v651))
          {
            memcpy(v84, v85, __n);
          }
          else
          {
            v72((unint64_t)v84, (unint64_t)v85, v651);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v84, 0, 1, v651);
          }
          long long v223 = (void *)(((unint64_t)v84 + v648) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v224 = (void *)(((unint64_t)v85 + v648) & 0xFFFFFFFFFFFFFFF8);
          void *v223 = *v224;
          unint64_t v225 = ((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v226 = ((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v227 = *(void *)v226;
          *(unsigned char *)(v225 + 8) = *(unsigned char *)(v226 + 8);
          *(void *)unint64_t v225 = v227;
          long long v228 = (void *)(((unint64_t)v223 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v229 = (void *)(((unint64_t)v224 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v228 = *v229;
          unint64_t v230 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v231 = (uint64_t *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v232 = v231[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v33 = v669;
          if ((v232 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v230 = *(_OWORD *)v231;
          }
          else
          {
            uint64_t v266 = *v231;
            sub_10001EBB0(*v231, v232);
            *(void *)unint64_t v230 = v266;
            *(void *)(v230 + 8) = v232;
          }
          unint64_t v267 = (v230 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v268 = ((unint64_t)v231 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v269 = *(void *)v268;
          *(unsigned char *)(v267 + 8) = *(unsigned char *)(v268 + 8);
          *(void *)unint64_t v267 = v269;
          *(unsigned char *)(v267 + 9) = *(unsigned char *)(v268 + 9);
          unint64_t v270 = (v267 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v271 = (v268 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v272 = *(_DWORD *)v271;
          *(unsigned char *)(v270 + 4) = *(unsigned char *)(v271 + 4);
          *(_DWORD *)unint64_t v270 = v272;
          long long v273 = (void *)((v267 + 25) & 0xFFFFFFFFFFFFFFF8);
          long long v274 = (void *)((v268 + 25) & 0xFFFFFFFFFFFFFFF8);
          *long long v273 = *v274;
          v273[1] = v274[1];
          unint64_t v275 = v708 + v693;
          long long v276 = (long long *)(v691 + v693);
          unint64_t v277 = *(void *)(v691 + v693 + 16);
          if (v277 >= 0xFFFFFFFF) {
            LODWORD(v277) = -1;
          }
          int v278 = v277 - 1;
          swift_bridgeObjectRetain();
          if (v278 < 0)
          {
            *(void *)unint64_t v275 = *(void *)v276;
            *(unsigned char *)(v275 + 8) = *((unsigned char *)v276 + 8);
            *(unsigned char *)(v275 + 9) = *((unsigned char *)v276 + 9);
            uint64_t v368 = *((void *)v276 + 2);
            swift_errorRetain();
            *(void *)(v275 + 16) = v368;
            uint64_t v369 = *((void *)v276 + 3);
            swift_errorRetain();
            *(void *)(v275 + 24) = v369;
            *(unsigned char *)(v275 + 32) = *((unsigned char *)v276 + 32);
            *(unsigned char *)(v275 + 33) = *((unsigned char *)v276 + 33);
            *(unsigned char *)(v275 + 34) = *((unsigned char *)v276 + 34);
            *(void *)(v275 + 40) = *((void *)v276 + 5);
            *(void *)(v275 + 48) = *((void *)v276 + 6);
            *(void *)(v275 + 56) = *((void *)v276 + 7);
            *(void *)(v275 + 64) = *((void *)v276 + 8);
            *(unsigned char *)(v275 + 72) = *((unsigned char *)v276 + 72);
            *(void *)(v275 + 80) = *((void *)v276 + 10);
            *(void *)(v275 + 88) = *((void *)v276 + 11);
            v710 = (void *)*((void *)v276 + 12);
            *(void *)(v275 + 96) = v710;
            *(unsigned char *)(v275 + 104) = *((unsigned char *)v276 + 104);
            *(unsigned char *)(v275 + 105) = *((unsigned char *)v276 + 105);
            *(void *)(v275 + 112) = *((void *)v276 + 14);
            *(void *)(v275 + 120) = *((void *)v276 + 15);
            *(void *)(v275 + 128) = *((void *)v276 + 16);
            *(void *)(v275 + 136) = *((void *)v276 + 17);
            *(void *)(v275 + 144) = *((void *)v276 + 18);
            *(void *)(v275 + 152) = *((void *)v276 + 19);
            *(void *)(v275 + 160) = *((void *)v276 + 20);
            *(void *)(v275 + 168) = *((void *)v276 + 21);
            *(unsigned char *)(v275 + 176) = *((unsigned char *)v276 + 176);
            *(void *)(v275 + 184) = *((void *)v276 + 23);
            uint64_t v370 = *((void *)v276 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v371 = v710;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v370)
            {
              *(void *)(v275 + 192) = v370;
              *(void *)(v275 + 200) = *((void *)v276 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v275 + 192) = v276[12];
            }
            unint64_t v291 = v666;
            unint64_t v33 = v669;
            *(void *)(v275 + 208) = *((void *)v276 + 26);
            *(void *)(v275 + 216) = *((void *)v276 + 27);
            *(void *)(v275 + 224) = *((void *)v276 + 28);
            *(void *)(v275 + 232) = *((void *)v276 + 29);
            *(void *)(v275 + 240) = *((void *)v276 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v279 = *v276;
            long long v280 = v276[1];
            long long v281 = v276[3];
            *(_OWORD *)(v275 + 32) = v276[2];
            *(_OWORD *)(v275 + 48) = v281;
            *(_OWORD *)unint64_t v275 = v279;
            *(_OWORD *)(v275 + 16) = v280;
            long long v282 = v276[4];
            long long v283 = v276[5];
            long long v284 = v276[7];
            *(_OWORD *)(v275 + 96) = v276[6];
            *(_OWORD *)(v275 + 112) = v284;
            *(_OWORD *)(v275 + 64) = v282;
            *(_OWORD *)(v275 + 80) = v283;
            long long v285 = v276[8];
            long long v286 = v276[9];
            long long v287 = v276[11];
            *(_OWORD *)(v275 + 160) = v276[10];
            *(_OWORD *)(v275 + 176) = v287;
            *(_OWORD *)(v275 + 128) = v285;
            *(_OWORD *)(v275 + 144) = v286;
            long long v288 = v276[12];
            long long v289 = v276[13];
            long long v290 = v276[14];
            *(void *)(v275 + 240) = *((void *)v276 + 30);
            *(_OWORD *)(v275 + 208) = v289;
            *(_OWORD *)(v275 + 224) = v290;
            *(_OWORD *)(v275 + 192) = v288;
            unint64_t v291 = v666;
          }
          int v385 = (_OWORD *)((v275 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v386 = (long long *)(((unint64_t)v276 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v387 = *v386;
          *(_OWORD *)((char *)v385 + 9) = *(long long *)((char *)v386 + 9);
          _OWORD *v385 = v387;
          unint64_t v388 = (v275 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v389 = ((unint64_t)v276 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v390 = *(_OWORD *)v389;
          *(unsigned char *)(v388 + 16) = *(unsigned char *)(v389 + 16);
          *(_OWORD *)unint64_t v388 = v390;
          uint64_t v391 = (void *)((v275 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v392 = ((unint64_t)v276 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v393 = *(void *)v392;
          v392 += 15;
          *uint64_t v391 = v393;
          uint64_t v394 = (void *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v395 = *(void *)(v392 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v396 = *(void *)((v392 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v395, v396);
          char v169 = 0;
          *uint64_t v394 = v395;
          v394[1] = v396;
          uint64_t v40 = a1;
          uint64_t v397 = (void *)(((unint64_t)a1 + v291 + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v398 = (void *)((unint64_t)&a2[v291 + 7] & 0xFFFFFFFFFFFFFFF8);
          void *v397 = *v398;
          v397[1] = v398[1];
          uint64_t v34 = v700;
          break;
      }
      *((unsigned char *)v40 + v33) = v169;
      swift_bridgeObjectRetain();
      *((unsigned char *)v40 + v34) = 1;
    }
    else
    {
      unint64_t v87 = v665;
      unsigned int v88 = a2[v665];
      if (v88 >= 6 && v665 != 0) {
        unsigned int v88 = *(_DWORD *)a2 + 6;
      }
      unint64_t v90 = ~(unint64_t)v690;
      uint64_t v91 = ~v662;
      unint64_t v92 = ~(unint64_t)v684;
      switch(v88)
      {
        case 1u:
          unint64_t v658 = ~v699;
          unint64_t v696 = v668 + 16;
          uint64_t v701 = v34;
          long long v176 = v40;
          long long v177 = *(void (**)(unint64_t, unint64_t, uint64_t))(v660 + 16);
          v177((unint64_t)v176, (unint64_t)a2, AssociatedTypeWitness);
          unint64_t v178 = ((unint64_t)v176 + v624) & v90;
          v671 = v177;
          unint64_t v675 = ~(unint64_t)v690;
          unint64_t v179 = (unint64_t)&a2[v624] & v90;
          v177(v178, v179, AssociatedTypeWitness);
          unint64_t v180 = (v178 + v640 + v662) & v91;
          unint64_t v181 = (v179 + v640 + v662) & v91;
          v653 = *(void (**)(unint64_t, unint64_t, uint64_t))(v635 + 16);
          v653(v180, v181, v626);
          long long v182 = (void *)((v623 + v180) & 0xFFFFFFFFFFFFFFF8);
          long long v183 = (void *)((v623 + v181) & 0xFFFFFFFFFFFFFFF8);
          void *v182 = *v183;
          unint64_t v184 = ((unint64_t)v182 + v625) & v92;
          unint64_t v679 = ~(unint64_t)v684;
          unint64_t v185 = ((unint64_t)v183 + v625) & v92;
          long long v186 = *(void (**)(unint64_t, unint64_t, uint64_t))(v637 + 16);
          swift_bridgeObjectRetain();
          v664 = v186;
          v186(v184, v185, v629);
          long long v187 = (void *)((v627 + v185) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v188 = (void *)((v627 + v184) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v188 = *v187;
          unint64_t v189 = (void *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v190 = (void *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v189 = *v190;
          v189[1] = v190[1];
          long long v191 = (void *)(v631 + v180);
          *long long v191 = *(void *)(v631 + v181);
          v191[1] = *(void *)(v631 + v181 + 8);
          unint64_t v192 = (v707 + v631 + v180) & ~v35;
          unint64_t v193 = (v707 + v631 + v181) & ~v35;
          *(unsigned char *)unint64_t v192 = *(unsigned char *)v193;
          uint64_t v194 = v192 | 4;
          int v195 = *(_DWORD *)(v193 | 4);
          *(unsigned char *)(v194 + 4) = *(unsigned char *)((v193 | 4) + 4);
          *(_DWORD *)uint64_t v194 = v195;
          *(_WORD *)(v192 + 10) = *(_WORD *)(v193 + 0xA);
          unint64_t v196 = v192;
          unint64_t v197 = (v644 + v192) & v698;
          unint64_t v642 = v193;
          unint64_t v198 = (v644 + v193) & v698;
          uint64_t v199 = *(void (**)(unint64_t, unint64_t, uint64_t))(v639 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v199(v197, v198, v651);
          unint64_t v200 = (v645 + v197) & v698;
          unint64_t v201 = (v645 + v198) & v698;
          v199(v200, v201, v651);
          long long v202 = (unsigned char *)(v200 + v646);
          *long long v202 = *(unsigned char *)(v201 + v646);
          v202[1] = *(unsigned char *)(v201 + v646 + 1);
          v202[2] = *(unsigned char *)(v201 + v646 + 2);
          v202[3] = *(unsigned char *)(v201 + v646 + 3);
          v202[4] = *(unsigned char *)(v201 + v646 + 4);
          unint64_t v203 = (v200 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v204 = (v201 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v203 = *(void *)v204;
          *(void *)(v203 + 8) = *(void *)(v204 + 8);
          *(unsigned char *)(v203 + 16) = *(unsigned char *)(v204 + 16);
          *(unsigned char *)(v203 + 17) = *(unsigned char *)(v204 + 17);
          *(unsigned char *)(v203 + 18) = *(unsigned char *)(v204 + 18);
          *(unsigned char *)(v203 + 19) = *(unsigned char *)(v204 + 19);
          unint64_t v205 = (v203 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v206 = (v204 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v205 = *(void *)v206;
          *(unsigned char *)(v205 + 8) = *(unsigned char *)(v206 + 8);
          *(unsigned char *)(v205 + 9) = *(unsigned char *)(v206 + 9);
          *(unsigned char *)(v205 + 10) = *(unsigned char *)(v206 + 10);
          *(unsigned char *)(v205 + 11) = *(unsigned char *)(v206 + 11);
          *(unsigned char *)(v205 + 12) = *(unsigned char *)(v206 + 12);
          unint64_t v207 = (void *)((v204 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v208 = (void *)((v203 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v208 = *v207;
          unint64_t v209 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v210 = ((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v209 = *(void *)v210;
          *(unsigned char *)(v209 + 8) = *(unsigned char *)(v210 + 8);
          *(unsigned char *)(v209 + 9) = *(unsigned char *)(v210 + 9);
          long long v211 = (void *)((v647 + v209) & v698);
          long long v212 = (const void *)((v647 + v210) & v698);
          long long v213 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v639 + 48);
          swift_bridgeObjectRetain();
          v650 = v213;
          if (v213(v212, 1, v651))
          {
            memcpy(v211, v212, __n);
          }
          else
          {
            v199((unint64_t)v211, (unint64_t)v212, v651);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v211, 0, 1, v651);
          }
          unint64_t v254 = (void *)(((unint64_t)v211 + v648) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v255 = (void *)(((unint64_t)v212 + v648) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v254 = *v255;
          unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v257 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v258 = *(void *)v257;
          *(unsigned char *)(v256 + 8) = *(unsigned char *)(v257 + 8);
          *(void *)unint64_t v256 = v258;
          unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v260 = (void *)(((unint64_t)v255 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v259 = *v260;
          unint64_t v261 = ((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8;
          size_t v262 = (uint64_t *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v263 = v262[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v264 = ~v35;
          unint64_t v265 = a1;
          if ((v263 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v261 = *(_OWORD *)v262;
          }
          else
          {
            uint64_t v343 = *v262;
            sub_10001EBB0(*v262, v263);
            *(void *)unint64_t v261 = v343;
            *(void *)(v261 + 8) = v263;
          }
          v683 = v199;
          unint64_t v344 = (v261 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v345 = ((unint64_t)v262 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v346 = *(void *)v345;
          *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
          *(void *)unint64_t v344 = v346;
          *(unsigned char *)(v344 + 9) = *(unsigned char *)(v345 + 9);
          unint64_t v347 = (v344 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v348 = (v345 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v349 = *(_DWORD *)v348;
          *(unsigned char *)(v347 + 4) = *(unsigned char *)(v348 + 4);
          *(_DWORD *)unint64_t v347 = v349;
          long long v350 = (void *)((v344 + 25) & 0xFFFFFFFFFFFFFFF8);
          long long v351 = (void *)((v345 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v350 = *v351;
          v350[1] = v351[1];
          unint64_t v352 = v696 + v196;
          long long v353 = (long long *)(v696 + v642);
          unint64_t v354 = *(void *)(v696 + v642 + 16);
          if (v354 >= 0xFFFFFFFF) {
            LODWORD(v354) = -1;
          }
          int v355 = v354 - 1;
          swift_bridgeObjectRetain();
          if (v355 < 0)
          {
            *(void *)unint64_t v352 = *(void *)v353;
            *(unsigned char *)(v352 + 8) = *((unsigned char *)v353 + 8);
            *(unsigned char *)(v352 + 9) = *((unsigned char *)v353 + 9);
            uint64_t v381 = *((void *)v353 + 2);
            swift_errorRetain();
            *(void *)(v352 + 16) = v381;
            uint64_t v382 = *((void *)v353 + 3);
            swift_errorRetain();
            *(void *)(v352 + 24) = v382;
            *(unsigned char *)(v352 + 32) = *((unsigned char *)v353 + 32);
            *(unsigned char *)(v352 + 33) = *((unsigned char *)v353 + 33);
            *(unsigned char *)(v352 + 34) = *((unsigned char *)v353 + 34);
            *(void *)(v352 + 40) = *((void *)v353 + 5);
            *(void *)(v352 + 48) = *((void *)v353 + 6);
            *(void *)(v352 + 56) = *((void *)v353 + 7);
            *(void *)(v352 + 64) = *((void *)v353 + 8);
            *(unsigned char *)(v352 + 72) = *((unsigned char *)v353 + 72);
            *(void *)(v352 + 80) = *((void *)v353 + 10);
            *(void *)(v352 + 88) = *((void *)v353 + 11);
            v643 = (void *)*((void *)v353 + 12);
            *(void *)(v352 + 96) = v643;
            *(unsigned char *)(v352 + 104) = *((unsigned char *)v353 + 104);
            *(unsigned char *)(v352 + 105) = *((unsigned char *)v353 + 105);
            *(void *)(v352 + 112) = *((void *)v353 + 14);
            *(void *)(v352 + 120) = *((void *)v353 + 15);
            *(void *)(v352 + 128) = *((void *)v353 + 16);
            *(void *)(v352 + 136) = *((void *)v353 + 17);
            *(void *)(v352 + 144) = *((void *)v353 + 18);
            *(void *)(v352 + 152) = *((void *)v353 + 19);
            *(void *)(v352 + 160) = *((void *)v353 + 20);
            *(void *)(v352 + 168) = *((void *)v353 + 21);
            *(unsigned char *)(v352 + 176) = *((unsigned char *)v353 + 176);
            *(void *)(v352 + 184) = *((void *)v353 + 23);
            uint64_t v383 = *((void *)v353 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v384 = v643;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v383)
            {
              *(void *)(v352 + 192) = v383;
              *(void *)(v352 + 200) = *((void *)v353 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v352 + 192) = v353[12];
            }
            unint64_t v265 = a1;
            uint64_t v264 = ~v35;
            *(void *)(v352 + 208) = *((void *)v353 + 26);
            *(void *)(v352 + 216) = *((void *)v353 + 27);
            *(void *)(v352 + 224) = *((void *)v353 + 28);
            *(void *)(v352 + 232) = *((void *)v353 + 29);
            *(void *)(v352 + 240) = *((void *)v353 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v356 = *v353;
            long long v357 = v353[1];
            long long v358 = v353[3];
            *(_OWORD *)(v352 + 32) = v353[2];
            *(_OWORD *)(v352 + 48) = v358;
            *(_OWORD *)unint64_t v352 = v356;
            *(_OWORD *)(v352 + 16) = v357;
            long long v359 = v353[4];
            long long v360 = v353[5];
            long long v361 = v353[7];
            *(_OWORD *)(v352 + 96) = v353[6];
            *(_OWORD *)(v352 + 112) = v361;
            *(_OWORD *)(v352 + 64) = v359;
            *(_OWORD *)(v352 + 80) = v360;
            long long v362 = v353[8];
            long long v363 = v353[9];
            long long v364 = v353[11];
            *(_OWORD *)(v352 + 160) = v353[10];
            *(_OWORD *)(v352 + 176) = v364;
            *(_OWORD *)(v352 + 128) = v362;
            *(_OWORD *)(v352 + 144) = v363;
            long long v365 = v353[12];
            long long v366 = v353[13];
            long long v367 = v353[14];
            *(void *)(v352 + 240) = *((void *)v353 + 30);
            *(_OWORD *)(v352 + 208) = v366;
            *(_OWORD *)(v352 + 224) = v367;
            *(_OWORD *)(v352 + 192) = v365;
          }
          uint64_t v497 = (_OWORD *)((v352 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v498 = (long long *)(((unint64_t)v353 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v499 = *v498;
          *(_OWORD *)((char *)v497 + 9) = *(long long *)((char *)v498 + 9);
          *uint64_t v497 = v499;
          unint64_t v500 = (v352 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v501 = ((unint64_t)v353 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v502 = *(_OWORD *)v501;
          *(unsigned char *)(v500 + 16) = *(unsigned char *)(v501 + 16);
          *(_OWORD *)unint64_t v500 = v502;
          unint64_t v503 = (void *)((v352 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v504 = ((unint64_t)v353 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v505 = *(void *)v504;
          v504 += 15;
          void *v503 = v505;
          uint64_t v506 = (void *)(((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v507 = *(void *)(v504 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v508 = *(void *)((v504 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v507, v508);
          *uint64_t v506 = v507;
          v506[1] = v508;
          size_t v509 = v265;
          unint64_t v510 = (unint64_t)&a2[v618] & v658;
          v671(((unint64_t)v265 + v618) & v658, v510, AssociatedTypeWitness);
          unint64_t v705 = ((unint64_t)v265 + v618) & v658;
          unint64_t v511 = (v624 + v705) & v675;
          unint64_t v659 = v510;
          unint64_t v512 = (v624 + v510) & v675;
          v671(v511, v512, AssociatedTypeWitness);
          unint64_t v513 = (v619 + v511) & v91;
          unint64_t v514 = (v619 + v512) & v91;
          v653(v513, v514, v626);
          uint64_t v515 = (void *)((v623 + v513) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v516 = (void *)((v623 + v514) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v515 = *v516;
          unint64_t v517 = ((unint64_t)v515 + v625) & v679;
          unint64_t v518 = ((unint64_t)v516 + v625) & v679;
          swift_bridgeObjectRetain();
          v664(v517, v518, v629);
          uint64_t v519 = (void *)((v627 + v517) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v520 = (void *)((v627 + v518) & 0xFFFFFFFFFFFFFFF8);
          void *v519 = *v520;
          uint64_t v521 = (void *)(((unint64_t)v519 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v522 = (void *)(((unint64_t)v520 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v521 = *v522;
          v521[1] = v522[1];
          uint64_t v523 = (void *)(v513 + v631);
          *uint64_t v523 = *(void *)(v514 + v631);
          v523[1] = *(void *)(v514 + v631 + 8);
          unint64_t v524 = (v707 + v513 + v631) & v264;
          unint64_t v525 = (v707 + v514 + v631) & v264;
          *(unsigned char *)unint64_t v524 = *(unsigned char *)v525;
          uint64_t v526 = v524 | 4;
          int v527 = *(_DWORD *)(v525 | 4);
          *(unsigned char *)(v526 + 4) = *(unsigned char *)((v525 | 4) + 4);
          *(_DWORD *)uint64_t v526 = v527;
          *(_WORD *)(v524 + 10) = *(_WORD *)(v525 + 0xA);
          unint64_t v528 = (v644 + v524) & v698;
          unint64_t v529 = (v644 + v525) & v698;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v683(v528, v529, v651);
          unint64_t v530 = (v645 + v528) & v698;
          unint64_t v531 = (v645 + v529) & v698;
          v683(v530, v531, v651);
          v532 = (unsigned char *)(v530 + v646);
          unsigned char *v532 = *(unsigned char *)(v531 + v646);
          v532[1] = *(unsigned char *)(v531 + v646 + 1);
          v532[2] = *(unsigned char *)(v531 + v646 + 2);
          v532[3] = *(unsigned char *)(v531 + v646 + 3);
          v532[4] = *(unsigned char *)(v531 + v646 + 4);
          unint64_t v533 = (v530 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v534 = (v531 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v533 = *(void *)v534;
          *(void *)(v533 + 8) = *(void *)(v534 + 8);
          *(unsigned char *)(v533 + 16) = *(unsigned char *)(v534 + 16);
          *(unsigned char *)(v533 + 17) = *(unsigned char *)(v534 + 17);
          *(unsigned char *)(v533 + 18) = *(unsigned char *)(v534 + 18);
          *(unsigned char *)(v533 + 19) = *(unsigned char *)(v534 + 19);
          unint64_t v535 = (v533 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v536 = (v534 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v535 = *(void *)v536;
          *(unsigned char *)(v535 + 8) = *(unsigned char *)(v536 + 8);
          *(unsigned char *)(v535 + 9) = *(unsigned char *)(v536 + 9);
          *(unsigned char *)(v535 + 10) = *(unsigned char *)(v536 + 10);
          *(unsigned char *)(v535 + 11) = *(unsigned char *)(v536 + 11);
          *(unsigned char *)(v535 + 12) = *(unsigned char *)(v536 + 12);
          v537 = (void *)((v533 + 47) & 0xFFFFFFFFFFFFFFF8);
          v538 = (void *)((v534 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v537 = *v538;
          unint64_t v539 = ((unint64_t)v537 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v540 = ((unint64_t)v538 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v539 = *(void *)v540;
          *(unsigned char *)(v539 + 8) = *(unsigned char *)(v540 + 8);
          *(unsigned char *)(v539 + 9) = *(unsigned char *)(v540 + 9);
          v541 = (void *)((v647 + v539) & v698);
          v542 = (const void *)((v647 + v540) & v698);
          swift_bridgeObjectRetain();
          if (v650(v542, 1, v651))
          {
            memcpy(v541, v542, __n);
          }
          else
          {
            v683((unint64_t)v541, (unint64_t)v542, v651);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v541, 0, 1, v651);
          }
          v543 = (void *)(((unint64_t)v541 + v648) & 0xFFFFFFFFFFFFFFF8);
          v544 = (void *)(((unint64_t)v542 + v648) & 0xFFFFFFFFFFFFFFF8);
          void *v543 = *v544;
          unint64_t v545 = ((unint64_t)v543 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v546 = ((unint64_t)v544 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v547 = *(void *)v546;
          *(unsigned char *)(v545 + 8) = *(unsigned char *)(v546 + 8);
          *(void *)unint64_t v545 = v547;
          v548 = (void *)(((unint64_t)v543 + 31) & 0xFFFFFFFFFFFFFFF8);
          v549 = (void *)(((unint64_t)v544 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v548 = *v549;
          unint64_t v550 = ((unint64_t)v548 + 15) & 0xFFFFFFFFFFFFFFF8;
          v551 = (uint64_t *)(((unint64_t)v549 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v552 = v551[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v552 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v550 = *(_OWORD *)v551;
          }
          else
          {
            uint64_t v553 = *v551;
            sub_10001EBB0(*v551, v552);
            *(void *)unint64_t v550 = v553;
            *(void *)(v550 + 8) = v552;
          }
          unint64_t v554 = (v550 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v555 = ((unint64_t)v551 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v556 = *(void *)v555;
          *(unsigned char *)(v554 + 8) = *(unsigned char *)(v555 + 8);
          *(void *)unint64_t v554 = v556;
          *(unsigned char *)(v554 + 9) = *(unsigned char *)(v555 + 9);
          unint64_t v557 = (v554 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v558 = (v555 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v559 = *(_DWORD *)v558;
          *(unsigned char *)(v557 + 4) = *(unsigned char *)(v558 + 4);
          *(_DWORD *)unint64_t v557 = v559;
          v560 = (void *)((v554 + 25) & 0xFFFFFFFFFFFFFFF8);
          v561 = (void *)((v555 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v560 = *v561;
          v560[1] = v561[1];
          unint64_t v562 = v524 + v696;
          unint64_t v563 = v525 + v696;
          unint64_t v564 = *(void *)(v525 + v696 + 16);
          if (v564 >= 0xFFFFFFFF) {
            LODWORD(v564) = -1;
          }
          int v565 = v564 - 1;
          swift_bridgeObjectRetain();
          if (v565 < 0)
          {
            *(void *)unint64_t v562 = *(void *)v563;
            *(unsigned char *)(v562 + 8) = *(unsigned char *)(v563 + 8);
            *(unsigned char *)(v562 + 9) = *(unsigned char *)(v563 + 9);
            uint64_t v578 = *(void *)(v563 + 16);
            swift_errorRetain();
            *(void *)(v562 + 16) = v578;
            uint64_t v579 = *(void *)(v563 + 24);
            swift_errorRetain();
            *(void *)(v562 + 24) = v579;
            *(unsigned char *)(v562 + 32) = *(unsigned char *)(v563 + 32);
            *(unsigned char *)(v562 + 33) = *(unsigned char *)(v563 + 33);
            *(unsigned char *)(v562 + 34) = *(unsigned char *)(v563 + 34);
            *(void *)(v562 + 40) = *(void *)(v563 + 40);
            *(void *)(v562 + 48) = *(void *)(v563 + 48);
            *(void *)(v562 + 56) = *(void *)(v563 + 56);
            *(void *)(v562 + 64) = *(void *)(v563 + 64);
            *(unsigned char *)(v562 + 72) = *(unsigned char *)(v563 + 72);
            *(void *)(v562 + 80) = *(void *)(v563 + 80);
            *(void *)(v562 + 88) = *(void *)(v563 + 88);
            v713 = *(void **)(v563 + 96);
            *(void *)(v562 + 96) = v713;
            *(unsigned char *)(v562 + 104) = *(unsigned char *)(v563 + 104);
            *(unsigned char *)(v562 + 105) = *(unsigned char *)(v563 + 105);
            *(void *)(v562 + 112) = *(void *)(v563 + 112);
            *(void *)(v562 + 120) = *(void *)(v563 + 120);
            *(void *)(v562 + 128) = *(void *)(v563 + 128);
            *(void *)(v562 + 136) = *(void *)(v563 + 136);
            *(void *)(v562 + 144) = *(void *)(v563 + 144);
            *(void *)(v562 + 152) = *(void *)(v563 + 152);
            *(void *)(v562 + 160) = *(void *)(v563 + 160);
            *(void *)(v562 + 168) = *(void *)(v563 + 168);
            *(unsigned char *)(v562 + 176) = *(unsigned char *)(v563 + 176);
            *(void *)(v562 + 184) = *(void *)(v563 + 184);
            uint64_t v580 = *(void *)(v563 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v581 = v713;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v580)
            {
              *(void *)(v562 + 192) = v580;
              *(void *)(v562 + 200) = *(void *)(v563 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v562 + 192) = *(_OWORD *)(v563 + 192);
            }
            uint64_t v40 = a1;
            *(void *)(v562 + 208) = *(void *)(v563 + 208);
            *(void *)(v562 + 216) = *(void *)(v563 + 216);
            *(void *)(v562 + 224) = *(void *)(v563 + 224);
            *(void *)(v562 + 232) = *(void *)(v563 + 232);
            *(void *)(v562 + 240) = *(void *)(v563 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v566 = *(_OWORD *)v563;
            long long v567 = *(_OWORD *)(v563 + 16);
            long long v568 = *(_OWORD *)(v563 + 48);
            *(_OWORD *)(v562 + 32) = *(_OWORD *)(v563 + 32);
            *(_OWORD *)(v562 + 48) = v568;
            *(_OWORD *)unint64_t v562 = v566;
            *(_OWORD *)(v562 + 16) = v567;
            long long v569 = *(_OWORD *)(v563 + 64);
            long long v570 = *(_OWORD *)(v563 + 80);
            long long v571 = *(_OWORD *)(v563 + 112);
            *(_OWORD *)(v562 + 96) = *(_OWORD *)(v563 + 96);
            *(_OWORD *)(v562 + 112) = v571;
            *(_OWORD *)(v562 + 64) = v569;
            *(_OWORD *)(v562 + 80) = v570;
            long long v572 = *(_OWORD *)(v563 + 128);
            long long v573 = *(_OWORD *)(v563 + 144);
            long long v574 = *(_OWORD *)(v563 + 176);
            *(_OWORD *)(v562 + 160) = *(_OWORD *)(v563 + 160);
            *(_OWORD *)(v562 + 176) = v574;
            *(_OWORD *)(v562 + 128) = v572;
            *(_OWORD *)(v562 + 144) = v573;
            long long v575 = *(_OWORD *)(v563 + 192);
            long long v576 = *(_OWORD *)(v563 + 208);
            long long v577 = *(_OWORD *)(v563 + 224);
            *(void *)(v562 + 240) = *(void *)(v563 + 240);
            *(_OWORD *)(v562 + 208) = v576;
            *(_OWORD *)(v562 + 224) = v577;
            *(_OWORD *)(v562 + 192) = v575;
            uint64_t v40 = v509;
          }
          v598 = (_OWORD *)((v562 + 255) & 0xFFFFFFFFFFFFFFF8);
          v599 = (long long *)((v563 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v600 = *v599;
          *(_OWORD *)((char *)v598 + 9) = *(long long *)((char *)v599 + 9);
          _OWORD *v598 = v600;
          unint64_t v601 = (v562 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v602 = (v563 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v603 = *(_OWORD *)v602;
          *(unsigned char *)(v601 + 16) = *(unsigned char *)(v602 + 16);
          *(_OWORD *)unint64_t v601 = v603;
          v604 = (void *)((v562 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v605 = (v563 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v606 = *(void *)v605;
          v605 += 15;
          void *v604 = v606;
          v607 = (void *)(((unint64_t)v604 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v608 = *(void *)(v605 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v609 = *(void *)((v605 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v608, v609);
          void *v607 = v608;
          v607[1] = v609;
          v610 = (void *)((v620 + v705) & 0xFFFFFFFFFFFFFFF8);
          v611 = (void *)((v620 + v659) & 0xFFFFFFFFFFFFFFF8);
          void *v610 = *v611;
          v612 = (void *)(((unint64_t)v610 + 15) & 0xFFFFFFFFFFFFFFF8);
          v613 = (void *)(((unint64_t)v611 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v612 = *v613;
          v612[1] = v613[1];
          char v216 = 1;
          goto LABEL_148;
        case 2u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v660 + 16))(v40, a2, AssociatedTypeWitness);
          *((unsigned char *)v40 + v640) = a2[v640];
          unint64_t v214 = ((unint64_t)v40 + v640) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v215 = (unint64_t)&a2[v640] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v214 + 8) = *(void *)(v215 + 8);
          *(void *)(v214 + 16) = *(void *)(v215 + 16);
          char v216 = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v660 + 16))(v40, a2, AssociatedTypeWitness);
          long long v217 = (void *)(((unint64_t)v40 + v640 + 7) & 0xFFFFFFFFFFFFFFF8);
          long long v218 = (void *)((unint64_t)&a2[v640 + 7] & 0xFFFFFFFFFFFFFFF8);
          *long long v217 = *v218;
          v217[1] = v218[1];
          char v216 = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v660 + 16))(v40, a2, AssociatedTypeWitness);
          *((unsigned char *)v40 + v640) = a2[v640];
          unint64_t v219 = ((unint64_t)v40 + v640) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v220 = (unint64_t)&a2[v640] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v219 + 8) = *(void *)(v220 + 8);
          *(void *)(v219 + 16) = *(void *)(v220 + 16);
          char v216 = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v660 + 16))(v40, a2, AssociatedTypeWitness);
          unint64_t v221 = (void *)(((unint64_t)v40 + v640 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v222 = (void *)((unint64_t)&a2[v640 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v221 = *v222;
          v221[1] = v222[1];
          char v216 = 5;
          break;
        default:
          unint64_t v694 = v668 + 16;
          uint64_t v701 = v34;
          long long v93 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v660 + 16);
          v93(v40, a2, AssociatedTypeWitness);
          unint64_t v94 = ((unint64_t)v40 + v624) & v90;
          unint64_t v95 = (unint64_t)&a2[v624] & v90;
          v93((void *)v94, (unsigned __int8 *)v95, AssociatedTypeWitness);
          unint64_t v96 = (v94 + v640 + v662) & v91;
          unint64_t v97 = (v95 + v640 + v662) & v91;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v635 + 16))(v96, v97, v626);
          long long v98 = (void *)((v623 + v96) & 0xFFFFFFFFFFFFFFF8);
          long long v99 = (void *)((v623 + v97) & 0xFFFFFFFFFFFFFFF8);
          *long long v98 = *v99;
          unint64_t v100 = ((unint64_t)v98 + v625) & v92;
          unint64_t v101 = ((unint64_t)v99 + v625) & v92;
          long long v102 = *(void (**)(unint64_t, unint64_t, uint64_t))(v637 + 16);
          swift_bridgeObjectRetain();
          v102(v100, v101, v629);
          long long v103 = (void *)((v627 + v101) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v104 = (void *)((v627 + v100) & 0xFFFFFFFFFFFFFFF8);
          void *v104 = *v103;
          unint64_t v105 = (void *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v106 = (void *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v105 = *v106;
          v105[1] = v106[1];
          long long v107 = (void *)(v631 + v96);
          *long long v107 = *(void *)(v631 + v97);
          v107[1] = *(void *)(v631 + v97 + 8);
          unint64_t v108 = (v707 + v631 + v96) & ~v35;
          unint64_t v109 = (v707 + v631 + v97) & ~v35;
          *(unsigned char *)unint64_t v108 = *(unsigned char *)v109;
          uint64_t v110 = v108 | 4;
          int v111 = *(_DWORD *)(v109 | 4);
          *(unsigned char *)(v110 + 4) = *(unsigned char *)((v109 | 4) + 4);
          *(_DWORD *)uint64_t v110 = v111;
          *(_WORD *)(v108 + 10) = *(_WORD *)(v109 + 0xA);
          unint64_t v709 = v108;
          unint64_t v112 = (v644 + v108) & v698;
          unint64_t v113 = (v644 + v109) & v698;
          uint64_t v114 = *(void (**)(unint64_t, unint64_t, uint64_t))(v639 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v114(v112, v113, v651);
          unint64_t v115 = (v645 + v112) & v698;
          unint64_t v116 = (v645 + v113) & v698;
          v114(v115, v116, v651);
          uint64_t v117 = (unsigned char *)(v115 + v646);
          *uint64_t v117 = *(unsigned char *)(v116 + v646);
          v117[1] = *(unsigned char *)(v116 + v646 + 1);
          v117[2] = *(unsigned char *)(v116 + v646 + 2);
          v117[3] = *(unsigned char *)(v116 + v646 + 3);
          v117[4] = *(unsigned char *)(v116 + v646 + 4);
          unint64_t v118 = (v115 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v119 = (v116 + v646 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v118 = *(void *)v119;
          *(void *)(v118 + 8) = *(void *)(v119 + 8);
          *(unsigned char *)(v118 + 16) = *(unsigned char *)(v119 + 16);
          *(unsigned char *)(v118 + 17) = *(unsigned char *)(v119 + 17);
          *(unsigned char *)(v118 + 18) = *(unsigned char *)(v119 + 18);
          *(unsigned char *)(v118 + 19) = *(unsigned char *)(v119 + 19);
          unint64_t v120 = (v118 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v121 = (v119 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v120 = *(void *)v121;
          *(unsigned char *)(v120 + 8) = *(unsigned char *)(v121 + 8);
          *(unsigned char *)(v120 + 9) = *(unsigned char *)(v121 + 9);
          *(unsigned char *)(v120 + 10) = *(unsigned char *)(v121 + 10);
          *(unsigned char *)(v120 + 11) = *(unsigned char *)(v121 + 11);
          *(unsigned char *)(v120 + 12) = *(unsigned char *)(v121 + 12);
          unint64_t v122 = (void *)((v119 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v123 = (void *)((v118 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v123 = *v122;
          unint64_t v124 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v125 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v124 = *(void *)v125;
          *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
          *(unsigned char *)(v124 + 9) = *(unsigned char *)(v125 + 9);
          unint64_t v126 = (void *)((v647 + v124) & v698);
          uint64_t v127 = (const void *)((v647 + v125) & v698);
          uint64_t v128 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v639 + 48);
          swift_bridgeObjectRetain();
          if (v128(v127, 1, v651))
          {
            memcpy(v126, v127, __n);
          }
          else
          {
            v114((unint64_t)v126, (unint64_t)v127, v651);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v126, 0, 1, v651);
          }
          unint64_t v233 = (void *)(((unint64_t)v126 + v648) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v234 = (void *)(((unint64_t)v127 + v648) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v233 = *v234;
          unint64_t v235 = ((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = ((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v237 = *(void *)v236;
          *(unsigned char *)(v235 + 8) = *(unsigned char *)(v236 + 8);
          *(void *)unint64_t v235 = v237;
          long long v238 = (void *)(((unint64_t)v233 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v239 = (void *)(((unint64_t)v234 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v238 = *v239;
          unint64_t v240 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v241 = (uint64_t *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v242 = v241[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v242 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v240 = *(_OWORD *)v241;
          }
          else
          {
            uint64_t v292 = *v241;
            sub_10001EBB0(*v241, v242);
            *(void *)unint64_t v240 = v292;
            *(void *)(v240 + 8) = v242;
          }
          unint64_t v293 = (v240 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v294 = ((unint64_t)v241 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v295 = *(void *)v294;
          *(unsigned char *)(v293 + 8) = *(unsigned char *)(v294 + 8);
          *(void *)unint64_t v293 = v295;
          *(unsigned char *)(v293 + 9) = *(unsigned char *)(v294 + 9);
          unint64_t v296 = (v293 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v297 = (v294 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v298 = *(_DWORD *)v297;
          *(unsigned char *)(v296 + 4) = *(unsigned char *)(v297 + 4);
          *(_DWORD *)unint64_t v296 = v298;
          unint64_t v299 = (void *)((v293 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v300 = (void *)((v294 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v299 = *v300;
          v299[1] = v300[1];
          unint64_t v301 = v694 + v709;
          unint64_t v302 = v694 + v109;
          unint64_t v303 = *(void *)(v694 + v109 + 16);
          if (v303 >= 0xFFFFFFFF) {
            LODWORD(v303) = -1;
          }
          int v304 = v303 - 1;
          swift_bridgeObjectRetain();
          if (v304 < 0)
          {
            *(void *)unint64_t v301 = *(void *)v302;
            *(unsigned char *)(v301 + 8) = *(unsigned char *)(v302 + 8);
            *(unsigned char *)(v301 + 9) = *(unsigned char *)(v302 + 9);
            uint64_t v372 = *(void *)(v302 + 16);
            swift_errorRetain();
            *(void *)(v301 + 16) = v372;
            uint64_t v373 = *(void *)(v302 + 24);
            swift_errorRetain();
            *(void *)(v301 + 24) = v373;
            *(unsigned char *)(v301 + 32) = *(unsigned char *)(v302 + 32);
            *(unsigned char *)(v301 + 33) = *(unsigned char *)(v302 + 33);
            *(unsigned char *)(v301 + 34) = *(unsigned char *)(v302 + 34);
            *(void *)(v301 + 40) = *(void *)(v302 + 40);
            *(void *)(v301 + 48) = *(void *)(v302 + 48);
            *(void *)(v301 + 56) = *(void *)(v302 + 56);
            *(void *)(v301 + 64) = *(void *)(v302 + 64);
            *(unsigned char *)(v301 + 72) = *(unsigned char *)(v302 + 72);
            *(void *)(v301 + 80) = *(void *)(v302 + 80);
            *(void *)(v301 + 88) = *(void *)(v302 + 88);
            v711 = *(void **)(v302 + 96);
            *(void *)(v301 + 96) = v711;
            *(unsigned char *)(v301 + 104) = *(unsigned char *)(v302 + 104);
            *(unsigned char *)(v301 + 105) = *(unsigned char *)(v302 + 105);
            *(void *)(v301 + 112) = *(void *)(v302 + 112);
            *(void *)(v301 + 120) = *(void *)(v302 + 120);
            *(void *)(v301 + 128) = *(void *)(v302 + 128);
            *(void *)(v301 + 136) = *(void *)(v302 + 136);
            *(void *)(v301 + 144) = *(void *)(v302 + 144);
            *(void *)(v301 + 152) = *(void *)(v302 + 152);
            *(void *)(v301 + 160) = *(void *)(v302 + 160);
            *(void *)(v301 + 168) = *(void *)(v302 + 168);
            *(unsigned char *)(v301 + 176) = *(unsigned char *)(v302 + 176);
            *(void *)(v301 + 184) = *(void *)(v302 + 184);
            uint64_t v374 = *(void *)(v302 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v375 = v711;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v374)
            {
              *(void *)(v301 + 192) = v374;
              *(void *)(v301 + 200) = *(void *)(v302 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v301 + 192) = *(_OWORD *)(v302 + 192);
            }
            *(void *)(v301 + 208) = *(void *)(v302 + 208);
            *(void *)(v301 + 216) = *(void *)(v302 + 216);
            *(void *)(v301 + 224) = *(void *)(v302 + 224);
            *(void *)(v301 + 232) = *(void *)(v302 + 232);
            *(void *)(v301 + 240) = *(void *)(v302 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v305 = *(_OWORD *)v302;
            long long v306 = *(_OWORD *)(v302 + 16);
            long long v307 = *(_OWORD *)(v302 + 48);
            *(_OWORD *)(v301 + 32) = *(_OWORD *)(v302 + 32);
            *(_OWORD *)(v301 + 48) = v307;
            *(_OWORD *)unint64_t v301 = v305;
            *(_OWORD *)(v301 + 16) = v306;
            long long v308 = *(_OWORD *)(v302 + 64);
            long long v309 = *(_OWORD *)(v302 + 80);
            long long v310 = *(_OWORD *)(v302 + 112);
            *(_OWORD *)(v301 + 96) = *(_OWORD *)(v302 + 96);
            *(_OWORD *)(v301 + 112) = v310;
            *(_OWORD *)(v301 + 64) = v308;
            *(_OWORD *)(v301 + 80) = v309;
            long long v311 = *(_OWORD *)(v302 + 128);
            long long v312 = *(_OWORD *)(v302 + 144);
            long long v313 = *(_OWORD *)(v302 + 176);
            *(_OWORD *)(v301 + 160) = *(_OWORD *)(v302 + 160);
            *(_OWORD *)(v301 + 176) = v313;
            *(_OWORD *)(v301 + 128) = v311;
            *(_OWORD *)(v301 + 144) = v312;
            long long v314 = *(_OWORD *)(v302 + 192);
            long long v315 = *(_OWORD *)(v302 + 208);
            long long v316 = *(_OWORD *)(v302 + 224);
            *(void *)(v301 + 240) = *(void *)(v302 + 240);
            *(_OWORD *)(v301 + 208) = v315;
            *(_OWORD *)(v301 + 224) = v316;
            *(_OWORD *)(v301 + 192) = v314;
          }
          uint64_t v399 = (_OWORD *)((v301 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v400 = (long long *)((v302 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v401 = *v400;
          *(_OWORD *)((char *)v399 + 9) = *(long long *)((char *)v400 + 9);
          *uint64_t v399 = v401;
          unint64_t v402 = (v301 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v403 = (v302 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v404 = *(_OWORD *)v403;
          *(unsigned char *)(v402 + 16) = *(unsigned char *)(v403 + 16);
          *(_OWORD *)unint64_t v402 = v404;
          size_t v405 = (void *)((v301 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v406 = (v302 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v407 = *(void *)v406;
          v406 += 15;
          *size_t v405 = v407;
          uint64_t v408 = (void *)(((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v409 = *(void *)(v406 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v410 = *(void *)((v406 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v409, v410);
          char v216 = 0;
          *uint64_t v408 = v409;
          v408[1] = v410;
          uint64_t v40 = a1;
          uint64_t v411 = (void *)(((unint64_t)a1 + v617 + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v412 = (void *)((unint64_t)&a2[v617 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v411 = *v412;
          v411[1] = v412[1];
LABEL_148:
          uint64_t v34 = v701;
          unint64_t v87 = v665;
          break;
      }
      *((unsigned char *)v40 + v87) = v216;
      swift_bridgeObjectRetain();
      *((unsigned char *)v40 + v34) = 0;
    }
  }
  return v40;
}

uint64_t sub_100626800(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v173 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = *(unsigned __int8 *)(v173 + 80);
  uint64_t v134 = v1 + v2;
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v137 - 8);
  uint64_t v144 = v3;
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v139 = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(v139 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v145 + 80);
  uint64_t v6 = v4 | v5 | 7;
  uint64_t v129 = v1 + v6;
  uint64_t v132 = *(void *)(v3 + 64) + 7;
  uint64_t v133 = v5 + 8;
  uint64_t v150 = v5;
  unint64_t v141 = ((((*(void *)(v145 + 64) + 7 + ((v5 + 8 + (v132 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v147 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v147 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v188 = (v8 | 7) + 16;
  uint64_t v158 = v8 + 12;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v159 = v10 + v8;
  uint64_t v160 = v10 + 12;
  unint64_t v11 = (v8
       + 10
       + ((((((v10 + 12 + ((v10 + v8 + ((v8 + 12) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  uint64_t v176 = v7;
  if (!*(_DWORD *)(v7 + 84)) {
    ++v10;
  }
  uint64_t v161 = v8 + 10;
  uint64_t v162 = v10 + 7;
  unint64_t v177 = (((((((((v10 + 7 + v11) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (((v177 + 327 + ((v188 + v141 + ((v1 + v6 + ((v1 + v2) & ~v2)) & ~v6)) & ~(v8 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v153 = v2;
  uint64_t v14 = v6 | v2 | v8;
  unint64_t v128 = v12 + 16 + v14;
  unint64_t v15 = ((((v12 + 23 + (v128 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v1 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v154 = v1;
  if (v16 <= ((v1 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v1 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v148 = v15;
  uint64_t v149 = v6 | v2 | v8;
  unint64_t v182 = v15 | 1;
  uint64_t v163 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v163 - 8) + 64);
  uint64_t v171 = *(void *)(v163 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v171 + 80);
  uint64_t v130 = v17 + v18;
  uint64_t v131 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v131 - 8);
  uint64_t v143 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = v19;
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v24 = v20 | v23 | 7;
  uint64_t v25 = *(void *)(v22 + 64) + 7;
  uint64_t v26 = v23 + 8;
  unint64_t v27 = ((((*(void *)(*(void *)(v21 - 8) + 64) + 7 + ((v23 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = (((v177 + 327 + ((v188 + v27 + ((v17 + v24 + ((v17 + v18) & ~v18)) & ~v24)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v31 = v28 + 16;
  uint64_t v32 = v18 | v8 | v24;
  unint64_t v33 = v31 + v32;
  unint64_t v34 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v34 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v34 > v30) {
    unint64_t v30 = v34;
  }
  if (v30 <= ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v30 = ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v35 = v30 | 1;
  if ((v30 | 1) <= v182) {
    uint64_t v35 = v182;
  }
  unsigned int v36 = a1[v35];
  unsigned int v37 = v36 - 2;
  if (v36 < 2)
  {
    unint64_t v39 = v177;
  }
  else
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    unint64_t v39 = v177;
    switch(v38)
    {
      case 1:
        int v40 = *a1;
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_26:
        }
          unsigned int v36 = (v40 | (v37 << (8 * v35))) + 2;
        else {
LABEL_30:
        }
          unsigned int v36 = v40 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v41 = ~v9;
  uint64_t v42 = ~v8;
  if (v36 == 1)
  {
    unsigned int v43 = a1[v30];
    if (v43 >= 6 && v30 != 0) {
      unsigned int v43 = *(_DWORD *)a1 + 6;
    }
    uint64_t v45 = ~v18;
    uint64_t v46 = ~v24;
    uint64_t v47 = ~v23;
    uint64_t v48 = ~v32;
    switch(v43)
    {
      case 1u:
        uint64_t v136 = v48;
        unint64_t v138 = v33;
        uint64_t v146 = v17 + v24;
        uint64_t v181 = v41;
        unint64_t v184 = v39 + 16;
        uint64_t v67 = *(void (**)(unsigned __int8 *, uint64_t))(v171 + 8);
        unint64_t v175 = v27;
        uint64_t v169 = v21;
        uint64_t v178 = v17;
        uint64_t v68 = *(void *)(v21 - 8);
        uint64_t v156 = v47;
        uint64_t v167 = v26;
        uint64_t v69 = v25;
        v67(a1, v163);
        uint64_t v142 = v45;
        unint64_t v70 = (unint64_t)&a1[v130] & v45;
        int v140 = (void (*)(unint64_t, uint64_t))v67;
        v67((unsigned __int8 *)v70, v163);
        unint64_t v71 = (v70 + v178 + v24) & v46;
        uint64_t v72 = *(void (**)(unint64_t, uint64_t))(v143 + 8);
        v72(v71, v131);
        uint64_t v152 = v69;
        uint64_t v73 = ~v8;
        swift_bridgeObjectRelease();
        unint64_t v135 = *(void (**)(unint64_t, uint64_t))(v68 + 8);
        v135((v167 + ((v69 + v71) & 0xFFFFFFFFFFFFFFF8)) & v156, v169);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v74 = (v188 + v175 + v71) & v181;
        uint64_t v75 = (v158 + v74) & v42;
        unint64_t v76 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
        v76(v75, v147);
        uint64_t v77 = (v159 + v75) & v73;
        unint64_t v78 = (void (*)(unint64_t, uint64_t))v76;
        v76(v77, v147);
        swift_bridgeObjectRelease();
        uint64_t v179 = v73;
        unint64_t v79 = (v161
             + ((((((v160 + v77) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v73;
        uint64_t v80 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v176 + 48);
        if (!v80(v79, 1, v147)) {
          v78(v79, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v81 = (uint64_t *)((((((v162 + v79) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v82 = v81[1];
        if ((v82 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v81, v82);
        }
        swift_bridgeObjectRelease();
        unint64_t v83 = v74 + v184;
        LODWORD(v84) = -1;
        if (*(void *)(v74 + v184 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v84 = *(void *)(v83 + 16);
        }
        unint64_t v85 = (void (*)(uint64_t, uint64_t))v78;
        if ((int)v84 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v83 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v86 = (unint64_t)&a1[v138] & v136;
        v140(v86, v163);
        v140((v130 + v86) & v142, v163);
        unint64_t v87 = (v146 + ((v130 + v86) & v142)) & ~v24;
        v72(v87, v131);
        swift_bridgeObjectRelease();
        v135((v167 + ((v152 + v87) & 0xFFFFFFFFFFFFFFF8)) & v156, v169);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v88 = (v188 + v87 + v175) & v181;
        v85((v158 + v88) & v179, v147);
        uint64_t v89 = (v159 + ((v158 + v88) & v179)) & v179;
        v85(v89, v147);
        swift_bridgeObjectRelease();
        unint64_t v90 = (v161
             + ((((((v160 + v89) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v179;
        if (!v80(v90, 1, v147)) {
          v85(v90, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v91 = (uint64_t *)((((((v162 + v90) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v92 = v91[1];
        if ((v92 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v91, v92);
        }
        swift_bridgeObjectRelease();
        unint64_t v65 = v88 + v184;
        LODWORD(v93) = -1;
        if (*(void *)(v65 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v93 = *(void *)(v65 + 16);
        }
        if ((int)v93 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v65 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_59;
      case 2u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v171 + 8))(a1, v163);
        break;
      case 3u:
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v171 + 8))(a1, v163);
        break;
      default:
        uint64_t v180 = v41;
        unint64_t v183 = v39 + 16;
        unint64_t v54 = *(void (**)(unsigned __int8 *, uint64_t))(v171 + 8);
        unint64_t v174 = v27;
        uint64_t v168 = v21;
        uint64_t v55 = v17;
        uint64_t v56 = *(void *)(v21 - 8);
        uint64_t v155 = v47;
        uint64_t v166 = v26;
        uint64_t v151 = v25;
        v54(a1, v163);
        unint64_t v57 = (unint64_t)&a1[v130] & v45;
        v54((unsigned __int8 *)v57, v163);
        unint64_t v58 = (v57 + v55 + v24) & v46;
        (*(void (**)(unint64_t, uint64_t))(v143 + 8))(v58, v131);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v56 + 8))((v166 + ((v151 + v58) & 0xFFFFFFFFFFFFFFF8)) & v155, v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = (v188 + v174 + v58) & v180;
        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
        v60((v158 + v59) & ~v8, v147);
        uint64_t v61 = (v159 + ((v158 + v59) & ~v8)) & ~v8;
        v60(v61, v147);
        swift_bridgeObjectRelease();
        unint64_t v62 = (v161
             + ((((((v160 + v61) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v176 + 48))(v62, 1, v147)) {
          v60(v62, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v63 = (uint64_t *)((((((v162 + v62) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v64 = v63[1];
        if ((v64 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v63, v64);
        }
        swift_bridgeObjectRelease();
        unint64_t v65 = v59 + v183;
        LODWORD(v66) = -1;
        if (*(void *)(v65 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v66 = *(void *)(v65 + 16);
        }
        if ((int)v66 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v65 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_59:
        sub_1000CF144(*(void *)((((v65 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v65 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
    }
  }
  else
  {
    unsigned int v49 = a1[v148];
    if (v49 >= 6 && v148 != 0) {
      unsigned int v49 = *(_DWORD *)a1 + 6;
    }
    uint64_t v51 = ~v153;
    uint64_t v52 = ~v6;
    uint64_t v53 = ~v150;
    switch(v49)
    {
      case 1u:
        unint64_t v186 = v39 + 16;
        long long v106 = *(void (**)(unsigned __int8 *, uint64_t))(v173 + 8);
        uint64_t v107 = v41;
        v106(a1, AssociatedTypeWitness);
        long long v164 = (void (*)(unint64_t, uint64_t))v106;
        v106((unsigned __int8 *)((unint64_t)&a1[v134] & v51), AssociatedTypeWitness);
        unint64_t v108 = (((unint64_t)&a1[v134] & v51) + v154 + v6) & v52;
        unint64_t v170 = *(void (**)(unint64_t, uint64_t))(v144 + 8);
        v170(v108, v137);
        swift_bridgeObjectRelease();
        unint64_t v157 = *(void (**)(unint64_t, uint64_t))(v145 + 8);
        v157((v133 + ((v132 + v108) & 0xFFFFFFFFFFFFFFF8)) & v53, v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v109 = (v188 + v141 + v108) & v107;
        uint64_t v110 = *(void (**)(unint64_t, uint64_t))(v176 + 8);
        v110((v158 + v109) & v42, v147);
        unint64_t v111 = (v159 + ((v158 + v109) & v42)) & v42;
        unint64_t v172 = v110;
        v110(v111, v147);
        swift_bridgeObjectRelease();
        unint64_t v112 = (v161
              + ((((((v160 + v111) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        unint64_t v113 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v176 + 48);
        if (!v113(v112, 1, v147)) {
          v172(v112, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v114 = (uint64_t *)((((((v162 + v112) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v115 = v114[1];
        if ((v115 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v114, v115);
        }
        swift_bridgeObjectRelease();
        unint64_t v116 = v186 + v109;
        LODWORD(v117) = -1;
        if (*(void *)(v116 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v117 = *(void *)(v116 + 16);
        }
        if ((int)v117 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v116 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v118 = (unint64_t)&a1[v128] & ~v149;
        v164(v118, AssociatedTypeWitness);
        v164((v134 + v118) & v51, AssociatedTypeWitness);
        unint64_t v119 = (v129 + ((v134 + v118) & v51)) & v52;
        v170(v119, v137);
        swift_bridgeObjectRelease();
        v157((v133 + ((v132 + v119) & 0xFFFFFFFFFFFFFFF8)) & v53, v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v120 = (v188 + v119 + v141) & v107;
        v172((v158 + v120) & v42, v147);
        unint64_t v121 = (v159 + ((v158 + v120) & v42)) & v42;
        v172(v121, v147);
        swift_bridgeObjectRelease();
        unint64_t v122 = (v161
              + ((((((v160 + v121) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        if (!v113(v122, 1, v147)) {
          v172(v122, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v123 = (uint64_t *)((((((v162 + v122) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v124 = v123[1];
        if ((v124 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v123, v124);
        }
        swift_bridgeObjectRelease();
        unint64_t v125 = v120 + v186;
        LODWORD(v126) = -1;
        if (*(void *)(v120 + v186 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v126 = *(void *)(v125 + 16);
        }
        if ((int)v126 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v125 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v125 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v125 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
      case 2u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v173 + 8))(a1, AssociatedTypeWitness);
        break;
      case 3u:
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v173 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        unint64_t v185 = v39 + 16;
        unint64_t v94 = *(void (**)(unsigned __int8 *, uint64_t))(v173 + 8);
        uint64_t v95 = v41;
        v94(a1, AssociatedTypeWitness);
        v94((unsigned __int8 *)((unint64_t)&a1[v134] & v51), AssociatedTypeWitness);
        unint64_t v96 = (((unint64_t)&a1[v134] & v51) + v154 + v6) & v52;
        (*(void (**)(unint64_t, uint64_t))(v144 + 8))(v96, v137);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v145 + 8))((v133 + ((v132 + v96) & 0xFFFFFFFFFFFFFFF8)) & v53, v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v97 = (v188 + v141 + v96) & v95;
        unint64_t v98 = (v158 + v97) & v42;
        long long v99 = *(void (**)(unint64_t, uint64_t))(v176 + 8);
        v99(v98, v147);
        unint64_t v100 = (v159 + v98) & v42;
        v99(v100, v147);
        swift_bridgeObjectRelease();
        unint64_t v101 = (v161
              + ((((((v160 + v100) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v176 + 48))(v101, 1, v147)) {
          v99(v101, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v102 = (uint64_t *)((((((v162 + v101) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v103 = v102[1];
        if ((v103 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v102, v103);
        }
        swift_bridgeObjectRelease();
        unint64_t v104 = v185 + v97;
        LODWORD(v105) = -1;
        if (*(void *)(v104 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v105 = *(void *)(v104 + 16);
        }
        if ((int)v105 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v104 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v104 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v104 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006280AC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v680 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v680 + 80);
  uint64_t v635 = v2 + v3;
  uint64_t v639 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v639 - 8);
  uint64_t v648 = v4;
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v643 = swift_getAssociatedTypeWitness();
  uint64_t v652 = *(void *)(v643 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v652 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v629 = v2 + v7;
  uint64_t v634 = *(void *)(v4 + 64) + 7;
  uint64_t v637 = v6 + 8;
  uint64_t v666 = v6;
  uint64_t v641 = *(void *)(v652 + 64) + 7;
  unint64_t v645 = ((((v641 + ((v6 + 8 + (v634 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v673 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v673 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v699 = v9 | 7;
  uint64_t v713 = (v9 | 7) + 16;
  uint64_t v657 = v9 + 12;
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v658 = v10 + v9;
  uint64_t v659 = v10;
  uint64_t v660 = v9 + 10;
  uint64_t v653 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(*(void *)(v673 - 8) + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  size_t __n = v11;
  size_t v661 = v11 + 7;
  unint64_t v704 = (((((((((v11
                + 7
                + ((v9
                  + 10
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v689 = v7;
  unint64_t v12 = (((v704 + 327 + ((v713 + v645 + ((v2 + v7 + ((v2 + v3) & ~v3)) & ~v7)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v669 = v3;
  uint64_t v14 = v7 | v3 | v9;
  unint64_t v624 = v12 + 16;
  unint64_t v627 = v12 + 16 + v14;
  uint64_t v662 = v14;
  unint64_t v623 = v12 + 23;
  unint64_t v15 = ((((v12 + 23 + (v627 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v654 = v2;
  if (v16 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v686 = v15;
  unint64_t v694 = v15 | 1;
  uint64_t v675 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v675 - 8) + 64);
  uint64_t v684 = *(void *)(v675 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v684 + 80);
  uint64_t v631 = v17 + v18;
  uint64_t v632 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v632 - 8);
  uint64_t v650 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = v19;
  uint64_t v24 = v17;
  uint64_t v25 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v26 = v20 | v25 | 7;
  uint64_t v27 = v17 + v26;
  uint64_t v28 = *(void *)(v23 + 64) + 7;
  uint64_t v29 = v25 + 8;
  unint64_t v30 = ((((*(void *)(v22 + 64) + 7 + ((v25 + 8 + (v28 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v31 = (((v704 + 327 + ((v713 + v30 + ((v17 + v26 + ((v17 + v18) & ~v18)) & ~v26)) & ~v699)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v31 + 23;
  unint64_t v33 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v34 = v31 + 16;
  uint64_t v35 = v18 | v9 | v26;
  unint64_t v36 = v34 + v35;
  unint64_t v37 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v37 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 > v33) {
    unint64_t v33 = v37;
  }
  if (v33 <= ((((v32 + ((v34 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v38 = ((((v32 + ((v34 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v38 = v33;
  }
  if ((v38 | 1) <= v694) {
    uint64_t v39 = v694;
  }
  else {
    uint64_t v39 = v38 | 1;
  }
  unsigned int v40 = a2[v39];
  unsigned int v41 = v40 - 2;
  if (v40 < 2)
  {
    uint64_t v43 = a1;
  }
  else
  {
    if (v39 <= 3) {
      uint64_t v42 = v39;
    }
    else {
      uint64_t v42 = 4;
    }
    uint64_t v43 = a1;
    switch(v42)
    {
      case 1:
        int v44 = *a2;
        if (v39 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_31;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_31:
        }
          unsigned int v40 = (v44 | (v41 << (8 * v39))) + 2;
        else {
LABEL_33:
        }
          unsigned int v40 = v44 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = ~v9;
  if (v40 == 1)
  {
    unsigned int v46 = a2[v38];
    if (v46 >= 6 && v38 != 0) {
      unsigned int v46 = *(_DWORD *)a2 + 6;
    }
    uint64_t v48 = ~v25;
    uint64_t v49 = ~v35;
    switch(v46)
    {
      case 1u:
        uint64_t v640 = v49;
        unint64_t v625 = v36;
        unint64_t v628 = v32;
        uint64_t v655 = v27;
        unint64_t v671 = v38;
        unint64_t v707 = v704 + 16;
        uint64_t v697 = v39;
        uint64_t v131 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16);
        uint64_t v682 = v21;
        uint64_t v620 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
        uint64_t v691 = *(void *)(v21 - 8);
        uint64_t v692 = ~v9;
        uint64_t v702 = ~v699;
        unint64_t v688 = v30;
        uint64_t v679 = v29;
        uint64_t v132 = v28;
        uint64_t v133 = v48;
        v131(v43, a2, v675);
        uint64_t v134 = (v631 + v43) & ~v18;
        uint64_t v644 = ~v18;
        unint64_t v135 = (unint64_t)&a2[v631] & ~v18;
        unint64_t v642 = (void (*)(unint64_t, unint64_t, uint64_t))v131;
        v131(v134, (unsigned __int8 *)v135, v675);
        uint64_t v136 = (v134 + v24 + v26) & ~v26;
        uint64_t v646 = ~v26;
        unint64_t v137 = (v135 + v24 + v26) & ~v26;
        v636 = *(void (**)(uint64_t, unint64_t, uint64_t))(v650 + 16);
        v636(v136, v137, v632);
        unint64_t v138 = (void *)((v132 + v136) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v664 = v132;
        uint64_t v139 = (void *)((v132 + v137) & 0xFFFFFFFFFFFFFFF8);
        void *v138 = *v139;
        unint64_t v140 = ((unint64_t)v138 + v679) & v133;
        unint64_t v141 = ((unint64_t)v139 + v679) & v133;
        uint64_t v142 = *(void (**)(unint64_t, unint64_t, uint64_t))(v691 + 16);
        swift_bridgeObjectRetain();
        unint64_t v638 = v142;
        v142(v140, v141, v682);
        uint64_t v143 = (void *)((v620 + v141) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v144 = (void *)((v620 + v140) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v144 = *v143;
        uint64_t v145 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v146 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v145 = *v146;
        v145[1] = v146[1];
        uint64_t v147 = (void *)(v688 + v136);
        *uint64_t v147 = *(void *)(v688 + v137);
        v147[1] = *(void *)(v688 + v137 + 8);
        uint64_t v148 = (v713 + v688 + v136) & v702;
        uint64_t v149 = (v713 + v688 + v137) & v702;
        *(unsigned char *)uint64_t v148 = *(unsigned char *)v149;
        uint64_t v150 = v148 | 4;
        int v151 = *(_DWORD *)(v149 | 4);
        *(unsigned char *)(v150 + 4) = *(unsigned char *)((v149 | 4) + 4);
        *(_DWORD *)uint64_t v150 = v151;
        *(_WORD *)(v148 + 10) = *(_WORD *)(v149 + 0xA);
        uint64_t v152 = (v657 + v148) & v692;
        uint64_t v153 = (v657 + v149) & v692;
        uint64_t v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v653 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v154(v152, v153, v673);
        uint64_t v155 = (v658 + v152) & v692;
        uint64_t v156 = (v658 + v153) & v692;
        v154(v155, v156, v673);
        unint64_t v157 = (unsigned char *)(v155 + v659);
        unsigned char *v157 = *(unsigned char *)(v156 + v659);
        v157[1] = *(unsigned char *)(v156 + v659 + 1);
        v157[2] = *(unsigned char *)(v156 + v659 + 2);
        v157[3] = *(unsigned char *)(v156 + v659 + 3);
        v157[4] = *(unsigned char *)(v156 + v659 + 4);
        unint64_t v158 = (v155 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v159 = (v156 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v158 = *(void *)v159;
        *(void *)(v158 + 8) = *(void *)(v159 + 8);
        *(unsigned char *)(v158 + 16) = *(unsigned char *)(v159 + 16);
        *(unsigned char *)(v158 + 17) = *(unsigned char *)(v159 + 17);
        *(unsigned char *)(v158 + 18) = *(unsigned char *)(v159 + 18);
        *(unsigned char *)(v158 + 19) = *(unsigned char *)(v159 + 19);
        unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v161 = (v159 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v160 = *(void *)v161;
        *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
        *(unsigned char *)(v160 + 9) = *(unsigned char *)(v161 + 9);
        *(unsigned char *)(v160 + 10) = *(unsigned char *)(v161 + 10);
        *(unsigned char *)(v160 + 11) = *(unsigned char *)(v161 + 11);
        *(unsigned char *)(v160 + 12) = *(unsigned char *)(v161 + 12);
        uint64_t v162 = (void *)((v159 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v163 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v163 = *v162;
        unint64_t v164 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v165 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v164 = *(void *)v165;
        *(unsigned char *)(v164 + 8) = *(unsigned char *)(v165 + 8);
        *(unsigned char *)(v164 + 9) = *(unsigned char *)(v165 + 9);
        uint64_t v166 = (void *)((v660 + v164) & v692);
        uint64_t v167 = (const void *)((v660 + v165) & v692);
        uint64_t v168 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v653 + 48);
        swift_bridgeObjectRetain();
        v630 = v168;
        v649 = v154;
        if (v168(v167, 1, v673))
        {
          memcpy(v166, v167, __n);
        }
        else
        {
          v154((uint64_t)v166, (uint64_t)v167, v673);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v166, 0, 1, v673);
        }
        int v243 = (void *)(((unint64_t)v166 + v661) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v244 = (void *)(((unint64_t)v167 + v661) & 0xFFFFFFFFFFFFFFF8);
        void *v243 = *v244;
        unint64_t v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v247 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(void *)unint64_t v245 = v247;
        unint64_t v248 = (void *)(((unint64_t)v243 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v249 = (void *)(((unint64_t)v244 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v248 = *v249;
        unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v251 = (uint64_t *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v252 = v251[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = a1;
        if ((v252 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v250 = *(_OWORD *)v251;
        }
        else
        {
          uint64_t v316 = *v251;
          sub_10001EBB0(*v251, v252);
          *(void *)unint64_t v250 = v316;
          *(void *)(v250 + 8) = v252;
        }
        unint64_t v317 = (v250 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v318 = ((unint64_t)v251 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v319 = *(void *)v318;
        *(unsigned char *)(v317 + 8) = *(unsigned char *)(v318 + 8);
        *(void *)unint64_t v317 = v319;
        *(unsigned char *)(v317 + 9) = *(unsigned char *)(v318 + 9);
        unint64_t v320 = (v317 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v322 = *(_DWORD *)v321;
        *(unsigned char *)(v320 + 4) = *(unsigned char *)(v321 + 4);
        *(_DWORD *)unint64_t v320 = v322;
        int v323 = (void *)((v317 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v324 = (void *)((v318 + 25) & 0xFFFFFFFFFFFFFFF8);
        *int v323 = *v324;
        v323[1] = v324[1];
        unint64_t v325 = v148 + v707;
        unint64_t v326 = v149 + v707;
        unint64_t v327 = *(void *)(v326 + 16);
        if (v327 >= 0xFFFFFFFF) {
          LODWORD(v327) = -1;
        }
        int v328 = v327 - 1;
        swift_bridgeObjectRetain();
        uint64_t v329 = v673;
        if (v328 < 0)
        {
          *(void *)unint64_t v325 = *(void *)v326;
          *(unsigned char *)(v325 + 8) = *(unsigned char *)(v326 + 8);
          *(unsigned char *)(v325 + 9) = *(unsigned char *)(v326 + 9);
          uint64_t v377 = *(void *)(v326 + 16);
          swift_errorRetain();
          *(void *)(v325 + 16) = v377;
          uint64_t v378 = *(void *)(v326 + 24);
          swift_errorRetain();
          *(void *)(v325 + 24) = v378;
          *(unsigned char *)(v325 + 32) = *(unsigned char *)(v326 + 32);
          *(unsigned char *)(v325 + 33) = *(unsigned char *)(v326 + 33);
          *(unsigned char *)(v325 + 34) = *(unsigned char *)(v326 + 34);
          *(void *)(v325 + 40) = *(void *)(v326 + 40);
          *(void *)(v325 + 48) = *(void *)(v326 + 48);
          *(void *)(v325 + 56) = *(void *)(v326 + 56);
          *(void *)(v325 + 64) = *(void *)(v326 + 64);
          *(unsigned char *)(v325 + 72) = *(unsigned char *)(v326 + 72);
          *(void *)(v325 + 80) = *(void *)(v326 + 80);
          *(void *)(v325 + 88) = *(void *)(v326 + 88);
          uint64_t v379 = *(void **)(v326 + 96);
          *(void *)(v325 + 96) = v379;
          *(unsigned char *)(v325 + 104) = *(unsigned char *)(v326 + 104);
          *(unsigned char *)(v325 + 105) = *(unsigned char *)(v326 + 105);
          *(void *)(v325 + 112) = *(void *)(v326 + 112);
          *(void *)(v325 + 120) = *(void *)(v326 + 120);
          *(void *)(v325 + 128) = *(void *)(v326 + 128);
          *(void *)(v325 + 136) = *(void *)(v326 + 136);
          *(void *)(v325 + 144) = *(void *)(v326 + 144);
          *(void *)(v325 + 152) = *(void *)(v326 + 152);
          *(void *)(v325 + 160) = *(void *)(v326 + 160);
          *(void *)(v325 + 168) = *(void *)(v326 + 168);
          *(unsigned char *)(v325 + 176) = *(unsigned char *)(v326 + 176);
          *(void *)(v325 + 184) = *(void *)(v326 + 184);
          uint64_t v380 = *(void *)(v326 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v381 = v379;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v380)
          {
            *(void *)(v325 + 192) = v380;
            *(void *)(v325 + 200) = *(void *)(v326 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v325 + 192) = *(_OWORD *)(v326 + 192);
          }
          uint64_t v43 = a1;
          uint64_t v329 = v673;
          unint64_t v342 = v625;
          *(void *)(v325 + 208) = *(void *)(v326 + 208);
          *(void *)(v325 + 216) = *(void *)(v326 + 216);
          *(void *)(v325 + 224) = *(void *)(v326 + 224);
          *(void *)(v325 + 232) = *(void *)(v326 + 232);
          *(void *)(v325 + 240) = *(void *)(v326 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v330 = *(_OWORD *)v326;
          long long v331 = *(_OWORD *)(v326 + 16);
          long long v332 = *(_OWORD *)(v326 + 48);
          *(_OWORD *)(v325 + 32) = *(_OWORD *)(v326 + 32);
          *(_OWORD *)(v325 + 48) = v332;
          *(_OWORD *)unint64_t v325 = v330;
          *(_OWORD *)(v325 + 16) = v331;
          long long v333 = *(_OWORD *)(v326 + 64);
          long long v334 = *(_OWORD *)(v326 + 80);
          long long v335 = *(_OWORD *)(v326 + 112);
          *(_OWORD *)(v325 + 96) = *(_OWORD *)(v326 + 96);
          *(_OWORD *)(v325 + 112) = v335;
          *(_OWORD *)(v325 + 64) = v333;
          *(_OWORD *)(v325 + 80) = v334;
          long long v336 = *(_OWORD *)(v326 + 128);
          long long v337 = *(_OWORD *)(v326 + 144);
          long long v338 = *(_OWORD *)(v326 + 176);
          *(_OWORD *)(v325 + 160) = *(_OWORD *)(v326 + 160);
          *(_OWORD *)(v325 + 176) = v338;
          *(_OWORD *)(v325 + 128) = v336;
          *(_OWORD *)(v325 + 144) = v337;
          long long v339 = *(_OWORD *)(v326 + 192);
          long long v340 = *(_OWORD *)(v326 + 208);
          long long v341 = *(_OWORD *)(v326 + 224);
          *(void *)(v325 + 240) = *(void *)(v326 + 240);
          *(_OWORD *)(v325 + 208) = v340;
          *(_OWORD *)(v325 + 224) = v341;
          *(_OWORD *)(v325 + 192) = v339;
          unint64_t v342 = v625;
        }
        uint64_t v414 = (_OWORD *)((v325 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v415 = (long long *)((v326 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v416 = *v415;
        *(_OWORD *)((char *)v414 + 9) = *(long long *)((char *)v415 + 9);
        *uint64_t v414 = v416;
        unint64_t v417 = (v325 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v418 = (v326 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v419 = *(_OWORD *)v418;
        *(unsigned char *)(v417 + 16) = *(unsigned char *)(v418 + 16);
        *(_OWORD *)unint64_t v417 = v419;
        unint64_t v420 = (void *)((v325 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v421 = (v326 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v422 = *(void *)v421;
        v421 += 15;
        void *v420 = v422;
        uint64_t v423 = (void *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v424 = *(void *)(v421 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v425 = *(void *)((v421 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v424, v425);
        *uint64_t v423 = v424;
        v423[1] = v425;
        unint64_t v426 = (unint64_t)&a2[v342] & v640;
        v642((v342 + v43) & v640, v426, v675);
        uint64_t v710 = (v342 + v43) & v640;
        uint64_t v427 = (v631 + v710) & v644;
        unint64_t v674 = v426;
        unint64_t v428 = (v631 + v426) & v644;
        v642(v427, v428, v675);
        uint64_t v429 = (v655 + v427) & v646;
        unint64_t v430 = (v655 + v428) & v646;
        v636(v429, v430, v632);
        long long v431 = (void *)((v664 + v429) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v432 = (void *)((v664 + v430) & 0xFFFFFFFFFFFFFFF8);
        *long long v431 = *v432;
        unint64_t v433 = ((unint64_t)v431 + v679) & v133;
        unint64_t v434 = ((unint64_t)v432 + v679) & v133;
        swift_bridgeObjectRetain();
        v638(v433, v434, v682);
        uint64_t v435 = (void *)((v620 + v433) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v436 = (void *)((v620 + v434) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v435 = *v436;
        uint64_t v437 = (void *)(((unint64_t)v435 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v438 = (void *)(((unint64_t)v436 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v437 = *v438;
        v437[1] = v438[1];
        unint64_t v439 = (void *)(v429 + v688);
        *unint64_t v439 = *(void *)(v430 + v688);
        v439[1] = *(void *)(v430 + v688 + 8);
        uint64_t v440 = (v713 + v429 + v688) & v702;
        uint64_t v441 = (v713 + v430 + v688) & v702;
        *(unsigned char *)uint64_t v440 = *(unsigned char *)v441;
        uint64_t v442 = v440 | 4;
        int v443 = *(_DWORD *)(v441 | 4);
        *(unsigned char *)(v442 + 4) = *(unsigned char *)((v441 | 4) + 4);
        *(_DWORD *)uint64_t v442 = v443;
        *(_WORD *)(v440 + 10) = *(_WORD *)(v441 + 0xA);
        uint64_t v718 = v440;
        uint64_t v444 = (v657 + v440) & v692;
        uint64_t v445 = (v657 + v441) & v692;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v649(v444, v445, v329);
        uint64_t v446 = (v658 + v444) & v692;
        uint64_t v447 = (v658 + v445) & v692;
        v649(v446, v447, v329);
        unint64_t v448 = (unsigned char *)(v446 + v659);
        *unint64_t v448 = *(unsigned char *)(v447 + v659);
        v448[1] = *(unsigned char *)(v447 + v659 + 1);
        v448[2] = *(unsigned char *)(v447 + v659 + 2);
        v448[3] = *(unsigned char *)(v447 + v659 + 3);
        v448[4] = *(unsigned char *)(v447 + v659 + 4);
        unint64_t v449 = (v446 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v450 = (v447 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v449 = *(void *)v450;
        *(void *)(v449 + 8) = *(void *)(v450 + 8);
        *(unsigned char *)(v449 + 16) = *(unsigned char *)(v450 + 16);
        *(unsigned char *)(v449 + 17) = *(unsigned char *)(v450 + 17);
        *(unsigned char *)(v449 + 18) = *(unsigned char *)(v450 + 18);
        *(unsigned char *)(v449 + 19) = *(unsigned char *)(v450 + 19);
        unint64_t v451 = (v449 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v452 = (v450 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v451 = *(void *)v452;
        *(unsigned char *)(v451 + 8) = *(unsigned char *)(v452 + 8);
        *(unsigned char *)(v451 + 9) = *(unsigned char *)(v452 + 9);
        *(unsigned char *)(v451 + 10) = *(unsigned char *)(v452 + 10);
        *(unsigned char *)(v451 + 11) = *(unsigned char *)(v452 + 11);
        *(unsigned char *)(v451 + 12) = *(unsigned char *)(v452 + 12);
        unint64_t v453 = (void *)((v449 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v454 = (void *)((v450 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v453 = *v454;
        unint64_t v455 = ((unint64_t)v453 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v456 = ((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v455 = *(void *)v456;
        *(unsigned char *)(v455 + 8) = *(unsigned char *)(v456 + 8);
        *(unsigned char *)(v455 + 9) = *(unsigned char *)(v456 + 9);
        int v457 = (void *)((v660 + v455) & v692);
        unsigned int v458 = (const void *)((v660 + v456) & v692);
        swift_bridgeObjectRetain();
        if (v630(v458, 1, v329))
        {
          memcpy(v457, v458, __n);
        }
        else
        {
          v649((uint64_t)v457, (uint64_t)v458, v329);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v457, 0, 1, v329);
        }
        unint64_t v459 = v671;
        unint64_t v460 = (void *)(((unint64_t)v457 + v661) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v461 = (void *)(((unint64_t)v458 + v661) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v460 = *v461;
        unint64_t v462 = ((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v463 = ((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v464 = *(void *)v463;
        *(unsigned char *)(v462 + 8) = *(unsigned char *)(v463 + 8);
        *(void *)unint64_t v462 = v464;
        unint64_t v465 = (void *)(((unint64_t)v460 + 31) & 0xFFFFFFFFFFFFFFF8);
        int v466 = (void *)(((unint64_t)v461 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v465 = *v466;
        unint64_t v467 = ((unint64_t)v465 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v468 = (uint64_t *)(((unint64_t)v466 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v469 = v468[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v469 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v467 = *(_OWORD *)v468;
        }
        else
        {
          uint64_t v470 = *v468;
          sub_10001EBB0(*v468, v469);
          *(void *)unint64_t v467 = v470;
          *(void *)(v467 + 8) = v469;
        }
        unint64_t v471 = (v467 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v472 = ((unint64_t)v468 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v473 = *(void *)v472;
        *(unsigned char *)(v471 + 8) = *(unsigned char *)(v472 + 8);
        *(void *)unint64_t v471 = v473;
        *(unsigned char *)(v471 + 9) = *(unsigned char *)(v472 + 9);
        unint64_t v474 = (v471 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v475 = (v472 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v476 = *(_DWORD *)v475;
        *(unsigned char *)(v474 + 4) = *(unsigned char *)(v475 + 4);
        *(_DWORD *)unint64_t v474 = v476;
        unint64_t v477 = (void *)((v471 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v478 = (void *)((v472 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v477 = *v478;
        v477[1] = v478[1];
        unint64_t v479 = v718 + v707;
        unint64_t v480 = v441 + v707;
        unint64_t v481 = *(void *)(v441 + v707 + 16);
        if (v481 >= 0xFFFFFFFF) {
          LODWORD(v481) = -1;
        }
        int v482 = v481 - 1;
        swift_bridgeObjectRetain();
        if (v482 < 0)
        {
          *(void *)unint64_t v479 = *(void *)v480;
          *(unsigned char *)(v479 + 8) = *(unsigned char *)(v480 + 8);
          *(unsigned char *)(v479 + 9) = *(unsigned char *)(v480 + 9);
          uint64_t v498 = *(void *)(v480 + 16);
          swift_errorRetain();
          *(void *)(v479 + 16) = v498;
          uint64_t v499 = *(void *)(v480 + 24);
          swift_errorRetain();
          *(void *)(v479 + 24) = v499;
          *(unsigned char *)(v479 + 32) = *(unsigned char *)(v480 + 32);
          *(unsigned char *)(v479 + 33) = *(unsigned char *)(v480 + 33);
          *(unsigned char *)(v479 + 34) = *(unsigned char *)(v480 + 34);
          *(void *)(v479 + 40) = *(void *)(v480 + 40);
          *(void *)(v479 + 48) = *(void *)(v480 + 48);
          *(void *)(v479 + 56) = *(void *)(v480 + 56);
          *(void *)(v479 + 64) = *(void *)(v480 + 64);
          *(unsigned char *)(v479 + 72) = *(unsigned char *)(v480 + 72);
          *(void *)(v479 + 80) = *(void *)(v480 + 80);
          *(void *)(v479 + 88) = *(void *)(v480 + 88);
          v719 = *(void **)(v480 + 96);
          *(void *)(v479 + 96) = v719;
          *(unsigned char *)(v479 + 104) = *(unsigned char *)(v480 + 104);
          *(unsigned char *)(v479 + 105) = *(unsigned char *)(v480 + 105);
          *(void *)(v479 + 112) = *(void *)(v480 + 112);
          *(void *)(v479 + 120) = *(void *)(v480 + 120);
          *(void *)(v479 + 128) = *(void *)(v480 + 128);
          *(void *)(v479 + 136) = *(void *)(v480 + 136);
          *(void *)(v479 + 144) = *(void *)(v480 + 144);
          *(void *)(v479 + 152) = *(void *)(v480 + 152);
          *(void *)(v479 + 160) = *(void *)(v480 + 160);
          *(void *)(v479 + 168) = *(void *)(v480 + 168);
          *(unsigned char *)(v479 + 176) = *(unsigned char *)(v480 + 176);
          *(void *)(v479 + 184) = *(void *)(v480 + 184);
          uint64_t v500 = *(void *)(v480 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v501 = v719;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v500)
          {
            *(void *)(v479 + 192) = v500;
            *(void *)(v479 + 200) = *(void *)(v480 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v479 + 192) = *(_OWORD *)(v480 + 192);
          }
          uint64_t v496 = v710;
          uint64_t v43 = a1;
          unint64_t v459 = v671;
          unint64_t v497 = v674;
          unint64_t v495 = v628;
          *(void *)(v479 + 208) = *(void *)(v480 + 208);
          *(void *)(v479 + 216) = *(void *)(v480 + 216);
          *(void *)(v479 + 224) = *(void *)(v480 + 224);
          *(void *)(v479 + 232) = *(void *)(v480 + 232);
          *(void *)(v479 + 240) = *(void *)(v480 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v483 = *(_OWORD *)v480;
          long long v484 = *(_OWORD *)(v480 + 16);
          long long v485 = *(_OWORD *)(v480 + 48);
          *(_OWORD *)(v479 + 32) = *(_OWORD *)(v480 + 32);
          *(_OWORD *)(v479 + 48) = v485;
          *(_OWORD *)unint64_t v479 = v483;
          *(_OWORD *)(v479 + 16) = v484;
          long long v486 = *(_OWORD *)(v480 + 64);
          long long v487 = *(_OWORD *)(v480 + 80);
          long long v488 = *(_OWORD *)(v480 + 112);
          *(_OWORD *)(v479 + 96) = *(_OWORD *)(v480 + 96);
          *(_OWORD *)(v479 + 112) = v488;
          *(_OWORD *)(v479 + 64) = v486;
          *(_OWORD *)(v479 + 80) = v487;
          long long v489 = *(_OWORD *)(v480 + 128);
          long long v490 = *(_OWORD *)(v480 + 144);
          long long v491 = *(_OWORD *)(v480 + 176);
          *(_OWORD *)(v479 + 160) = *(_OWORD *)(v480 + 160);
          *(_OWORD *)(v479 + 176) = v491;
          *(_OWORD *)(v479 + 128) = v489;
          *(_OWORD *)(v479 + 144) = v490;
          long long v492 = *(_OWORD *)(v480 + 192);
          long long v493 = *(_OWORD *)(v480 + 208);
          long long v494 = *(_OWORD *)(v480 + 224);
          *(void *)(v479 + 240) = *(void *)(v480 + 240);
          *(_OWORD *)(v479 + 208) = v493;
          *(_OWORD *)(v479 + 224) = v494;
          *(_OWORD *)(v479 + 192) = v492;
          unint64_t v495 = v628;
          uint64_t v496 = v710;
          unint64_t v497 = v674;
        }
        long long v587 = (_OWORD *)((v479 + 255) & 0xFFFFFFFFFFFFFFF8);
        v588 = (long long *)((v480 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v589 = *v588;
        *(_OWORD *)((char *)v587 + 9) = *(long long *)((char *)v588 + 9);
        *long long v587 = v589;
        unint64_t v590 = (v479 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v591 = (v480 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v592 = *(_OWORD *)v591;
        *(unsigned char *)(v590 + 16) = *(unsigned char *)(v591 + 16);
        *(_OWORD *)unint64_t v590 = v592;
        unint64_t v593 = (void *)((v479 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v594 = (v480 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v595 = *(void *)v594;
        v594 += 15;
        *unint64_t v593 = v595;
        v596 = (void *)(((unint64_t)v593 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v597 = *(void *)(v594 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v598 = *(void *)((v594 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v597, v598);
        void *v596 = v597;
        v596[1] = v598;
        v599 = (void *)((v495 + v497) & 0xFFFFFFFFFFFFFFF8);
        long long v600 = (void *)((v495 + v496) & 0xFFFFFFFFFFFFFFF8);
        *long long v600 = *v599;
        unint64_t v601 = (void *)(((unint64_t)v600 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v602 = (void *)(((unint64_t)v599 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v601 = *v602;
        v601[1] = v602[1];
        char v172 = 1;
        unint64_t v90 = v459;
        char v171 = 1;
        uint64_t v39 = v697;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16))(v43, a2, v675);
        *(unsigned char *)(v24 + v43) = a2[v24];
        unint64_t v169 = (v24 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v170 = (unint64_t)&a2[v24] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v169 + 8) = *(void *)(v170 + 8);
        *(void *)(v169 + 16) = *(void *)(v170 + 16);
        char v171 = 1;
        char v172 = 2;
        goto LABEL_57;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16))(v43, a2, v675);
        uint64_t v173 = (void *)((v43 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v174 = (void *)((unint64_t)&a2[v24 + 7] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v173 = *v174;
        v173[1] = v174[1];
        char v171 = 1;
        char v172 = 3;
        goto LABEL_57;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16))(v43, a2, v675);
        *(unsigned char *)(v24 + v43) = a2[v24];
        unint64_t v175 = (v24 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v176 = (unint64_t)&a2[v24] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v175 + 8) = *(void *)(v176 + 8);
        *(void *)(v175 + 16) = *(void *)(v176 + 16);
        char v171 = 1;
        char v172 = 4;
        goto LABEL_57;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16))(v43, a2, v675);
        unint64_t v177 = (void *)((v43 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v178 = (void *)((unint64_t)&a2[v24 + 7] & 0xFFFFFFFFFFFFFFF8);
        void *v177 = *v178;
        v177[1] = v178[1];
        char v171 = 1;
        char v172 = 5;
LABEL_57:
        unint64_t v90 = v38;
        break;
      default:
        unint64_t v663 = v34;
        unint64_t v670 = v38;
        unint64_t v705 = v704 + 16;
        uint64_t v695 = v39;
        uint64_t v619 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
        uint64_t v50 = v24;
        uint64_t v51 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v684 + 16);
        uint64_t v678 = v29;
        uint64_t v681 = v21;
        uint64_t v52 = v43;
        uint64_t v690 = v22;
        uint64_t v700 = ~v699;
        unint64_t v687 = v30;
        uint64_t v53 = v43;
        uint64_t v54 = v28;
        uint64_t v667 = v48;
        v51(v52, a2, v675);
        uint64_t v55 = (v631 + v53) & ~v18;
        unint64_t v56 = (unint64_t)&a2[v631] & ~v18;
        v51(v55, (unsigned __int8 *)v56, v675);
        uint64_t v57 = (v55 + v50 + v26) & ~v26;
        unint64_t v58 = (v56 + v50 + v26) & ~v26;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v650 + 16))(v57, v58, v632);
        uint64_t v59 = (void *)((v54 + v57) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v60 = (void *)((v54 + v58) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v59 = *v60;
        unint64_t v61 = ((unint64_t)v59 + v678) & v667;
        unint64_t v62 = ((unint64_t)v60 + v678) & v667;
        uint64_t v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v690 + 16);
        swift_bridgeObjectRetain();
        v63(v61, v62, v681);
        unint64_t v64 = (void *)((v619 + v62) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v65 = (void *)((v619 + v61) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v65 = *v64;
        uint64_t v66 = (void *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v67 = (void *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        uint64_t v68 = (void *)(v687 + v57);
        void *v68 = *(void *)(v687 + v58);
        v68[1] = *(void *)(v687 + v58 + 8);
        uint64_t v69 = (v713 + v687 + v57) & v700;
        uint64_t v70 = (v713 + v687 + v58) & v700;
        *(unsigned char *)uint64_t v69 = *(unsigned char *)v70;
        uint64_t v71 = v69 | 4;
        int v72 = *(_DWORD *)(v70 | 4);
        *(unsigned char *)(v71 + 4) = *(unsigned char *)((v70 | 4) + 4);
        *(_DWORD *)uint64_t v71 = v72;
        *(_WORD *)(v69 + 10) = *(_WORD *)(v70 + 0xA);
        uint64_t v714 = v69;
        uint64_t v73 = (v657 + v69) & v45;
        uint64_t v74 = (v657 + v70) & v45;
        uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v653 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75(v73, v74, v673);
        uint64_t v76 = (v658 + v73) & v45;
        uint64_t v77 = (v658 + v74) & v45;
        v75(v76, v77, v673);
        unint64_t v78 = (unsigned char *)(v76 + v659);
        *unint64_t v78 = *(unsigned char *)(v77 + v659);
        v78[1] = *(unsigned char *)(v77 + v659 + 1);
        v78[2] = *(unsigned char *)(v77 + v659 + 2);
        v78[3] = *(unsigned char *)(v77 + v659 + 3);
        v78[4] = *(unsigned char *)(v77 + v659 + 4);
        unint64_t v79 = (v76 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v80 = (v77 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v79 = *(void *)v80;
        *(void *)(v79 + 8) = *(void *)(v80 + 8);
        *(unsigned char *)(v79 + 16) = *(unsigned char *)(v80 + 16);
        *(unsigned char *)(v79 + 17) = *(unsigned char *)(v80 + 17);
        *(unsigned char *)(v79 + 18) = *(unsigned char *)(v80 + 18);
        *(unsigned char *)(v79 + 19) = *(unsigned char *)(v80 + 19);
        unint64_t v81 = (v79 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v81 = *(void *)v82;
        *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
        *(unsigned char *)(v81 + 9) = *(unsigned char *)(v82 + 9);
        *(unsigned char *)(v81 + 10) = *(unsigned char *)(v82 + 10);
        *(unsigned char *)(v81 + 11) = *(unsigned char *)(v82 + 11);
        *(unsigned char *)(v81 + 12) = *(unsigned char *)(v82 + 12);
        unint64_t v83 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v84 = (void *)((v79 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v84 = *v83;
        unint64_t v85 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v86 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v85 = *(void *)v86;
        *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
        *(unsigned char *)(v85 + 9) = *(unsigned char *)(v86 + 9);
        unint64_t v87 = (void *)((v660 + v85) & v45);
        uint64_t v88 = (const void *)((v660 + v86) & v45);
        uint64_t v89 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v653 + 48);
        swift_bridgeObjectRetain();
        if (v89(v88, 1, v673))
        {
          memcpy(v87, v88, __n);
        }
        else
        {
          v75((uint64_t)v87, (uint64_t)v88, v673);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v87, 0, 1, v673);
        }
        long long v223 = (void *)(((unint64_t)v87 + v661) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v224 = (void *)(((unint64_t)v88 + v661) & 0xFFFFFFFFFFFFFFF8);
        void *v223 = *v224;
        unint64_t v225 = ((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v226 = ((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v227 = *(void *)v226;
        *(unsigned char *)(v225 + 8) = *(unsigned char *)(v226 + 8);
        *(void *)unint64_t v225 = v227;
        long long v228 = (void *)(((unint64_t)v223 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = (void *)(((unint64_t)v224 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v228 = *v229;
        unint64_t v230 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v231 = (uint64_t *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v232 = v231[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v232 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v230 = *(_OWORD *)v231;
        }
        else
        {
          uint64_t v264 = *v231;
          sub_10001EBB0(*v231, v232);
          *(void *)unint64_t v230 = v264;
          *(void *)(v230 + 8) = v232;
        }
        unint64_t v265 = (v230 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v266 = ((unint64_t)v231 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v267 = *(void *)v266;
        *(unsigned char *)(v265 + 8) = *(unsigned char *)(v266 + 8);
        *(void *)unint64_t v265 = v267;
        *(unsigned char *)(v265 + 9) = *(unsigned char *)(v266 + 9);
        unint64_t v268 = (v265 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v269 = (v266 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v270 = *(_DWORD *)v269;
        *(unsigned char *)(v268 + 4) = *(unsigned char *)(v269 + 4);
        *(_DWORD *)unint64_t v268 = v270;
        unint64_t v271 = (void *)((v265 + 25) & 0xFFFFFFFFFFFFFFF8);
        int v272 = (void *)((v266 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v271 = *v272;
        v271[1] = v272[1];
        unint64_t v273 = v714 + v705;
        unint64_t v274 = v70 + v705;
        unint64_t v275 = *(void *)(v70 + v705 + 16);
        if (v275 >= 0xFFFFFFFF) {
          LODWORD(v275) = -1;
        }
        int v276 = v275 - 1;
        swift_bridgeObjectRetain();
        if (v276 < 0)
        {
          *(void *)unint64_t v273 = *(void *)v274;
          *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
          *(unsigned char *)(v273 + 9) = *(unsigned char *)(v274 + 9);
          uint64_t v369 = *(void *)(v274 + 16);
          swift_errorRetain();
          *(void *)(v273 + 16) = v369;
          uint64_t v370 = *(void *)(v274 + 24);
          swift_errorRetain();
          *(void *)(v273 + 24) = v370;
          *(unsigned char *)(v273 + 32) = *(unsigned char *)(v274 + 32);
          *(unsigned char *)(v273 + 33) = *(unsigned char *)(v274 + 33);
          *(unsigned char *)(v273 + 34) = *(unsigned char *)(v274 + 34);
          *(void *)(v273 + 40) = *(void *)(v274 + 40);
          *(void *)(v273 + 48) = *(void *)(v274 + 48);
          *(void *)(v273 + 56) = *(void *)(v274 + 56);
          *(void *)(v273 + 64) = *(void *)(v274 + 64);
          *(unsigned char *)(v273 + 72) = *(unsigned char *)(v274 + 72);
          *(void *)(v273 + 80) = *(void *)(v274 + 80);
          *(void *)(v273 + 88) = *(void *)(v274 + 88);
          v716 = *(void **)(v274 + 96);
          *(void *)(v273 + 96) = v716;
          *(unsigned char *)(v273 + 104) = *(unsigned char *)(v274 + 104);
          *(unsigned char *)(v273 + 105) = *(unsigned char *)(v274 + 105);
          *(void *)(v273 + 112) = *(void *)(v274 + 112);
          *(void *)(v273 + 120) = *(void *)(v274 + 120);
          *(void *)(v273 + 128) = *(void *)(v274 + 128);
          *(void *)(v273 + 136) = *(void *)(v274 + 136);
          *(void *)(v273 + 144) = *(void *)(v274 + 144);
          *(void *)(v273 + 152) = *(void *)(v274 + 152);
          *(void *)(v273 + 160) = *(void *)(v274 + 160);
          *(void *)(v273 + 168) = *(void *)(v274 + 168);
          *(unsigned char *)(v273 + 176) = *(unsigned char *)(v274 + 176);
          *(void *)(v273 + 184) = *(void *)(v274 + 184);
          uint64_t v371 = *(void *)(v274 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v372 = v716;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v371)
          {
            *(void *)(v273 + 192) = v371;
            *(void *)(v273 + 200) = *(void *)(v274 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v273 + 192) = *(_OWORD *)(v274 + 192);
          }
          long long v289 = a2;
          *(void *)(v273 + 208) = *(void *)(v274 + 208);
          *(void *)(v273 + 216) = *(void *)(v274 + 216);
          *(void *)(v273 + 224) = *(void *)(v274 + 224);
          *(void *)(v273 + 232) = *(void *)(v274 + 232);
          *(void *)(v273 + 240) = *(void *)(v274 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v277 = *(_OWORD *)v274;
          long long v278 = *(_OWORD *)(v274 + 16);
          long long v279 = *(_OWORD *)(v274 + 48);
          *(_OWORD *)(v273 + 32) = *(_OWORD *)(v274 + 32);
          *(_OWORD *)(v273 + 48) = v279;
          *(_OWORD *)unint64_t v273 = v277;
          *(_OWORD *)(v273 + 16) = v278;
          long long v280 = *(_OWORD *)(v274 + 64);
          long long v281 = *(_OWORD *)(v274 + 80);
          long long v282 = *(_OWORD *)(v274 + 112);
          *(_OWORD *)(v273 + 96) = *(_OWORD *)(v274 + 96);
          *(_OWORD *)(v273 + 112) = v282;
          *(_OWORD *)(v273 + 64) = v280;
          *(_OWORD *)(v273 + 80) = v281;
          long long v283 = *(_OWORD *)(v274 + 128);
          long long v284 = *(_OWORD *)(v274 + 144);
          long long v285 = *(_OWORD *)(v274 + 176);
          *(_OWORD *)(v273 + 160) = *(_OWORD *)(v274 + 160);
          *(_OWORD *)(v273 + 176) = v285;
          *(_OWORD *)(v273 + 128) = v283;
          *(_OWORD *)(v273 + 144) = v284;
          long long v286 = *(_OWORD *)(v274 + 192);
          long long v287 = *(_OWORD *)(v274 + 208);
          long long v288 = *(_OWORD *)(v274 + 224);
          *(void *)(v273 + 240) = *(void *)(v274 + 240);
          *(_OWORD *)(v273 + 208) = v287;
          *(_OWORD *)(v273 + 224) = v288;
          *(_OWORD *)(v273 + 192) = v286;
          long long v289 = a2;
        }
        uint64_t v386 = (_OWORD *)((v273 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v387 = (long long *)((v274 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v388 = *v387;
        *(_OWORD *)((char *)v386 + 9) = *(long long *)((char *)v387 + 9);
        _OWORD *v386 = v388;
        unint64_t v389 = (v273 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v390 = (v274 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v391 = *(_OWORD *)v390;
        *(unsigned char *)(v389 + 16) = *(unsigned char *)(v390 + 16);
        *(_OWORD *)unint64_t v389 = v391;
        unint64_t v392 = (void *)((v273 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v393 = (v274 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v394 = *(void *)v393;
        v393 += 15;
        *unint64_t v392 = v394;
        uint64_t v395 = (void *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v396 = *(void *)(v393 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v397 = *(void *)((v393 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v396, v397);
        char v172 = 0;
        *uint64_t v395 = v396;
        v395[1] = v397;
        uint64_t v43 = a1;
        uint64_t v398 = (void *)((a1 + v663 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v399 = (void *)((unint64_t)&v289[v663 + 7] & 0xFFFFFFFFFFFFFFF8);
        void *v398 = *v399;
        v398[1] = v399[1];
        char v171 = 1;
        unint64_t v90 = v670;
        uint64_t v39 = v695;
        break;
    }
  }
  else
  {
    unint64_t v90 = v686;
    unsigned int v91 = a2[v686];
    if (v91 >= 6 && v686 != 0) {
      unsigned int v91 = *(_DWORD *)a2 + 6;
    }
    uint64_t v93 = ~v669;
    uint64_t v94 = ~v666;
    switch(v91)
    {
      case 1u:
        uint64_t v651 = ~v662;
        unint64_t v708 = v704 + 16;
        uint64_t v693 = v45;
        uint64_t v698 = v39;
        uint64_t v180 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16);
        v180(v43, a2, AssociatedTypeWitness);
        uint64_t v181 = (v635 + v43) & v93;
        uint64_t v668 = ~v669;
        unint64_t v665 = (void (*)(unint64_t, unint64_t, uint64_t))v180;
        v180(v181, (unsigned __int8 *)((unint64_t)&a2[v635] & ~v669), AssociatedTypeWitness);
        uint64_t v182 = (v181 + v654 + v689) & ~v689;
        uint64_t v672 = ~v689;
        unint64_t v183 = (((unint64_t)&a2[v635] & v668) + v654 + v689) & ~v689;
        v633 = *(void (**)(uint64_t, unint64_t, uint64_t))(v648 + 16);
        v633(v182, v183, v639);
        unint64_t v184 = (void *)((v634 + v182) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v185 = (void *)((v634 + v183) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v184 = *v185;
        unint64_t v186 = ((unint64_t)v184 + v637) & v94;
        uint64_t v685 = v94;
        unint64_t v187 = ((unint64_t)v185 + v637) & v94;
        uint64_t v188 = *(void (**)(unint64_t, unint64_t, uint64_t))(v652 + 16);
        swift_bridgeObjectRetain();
        unint64_t v656 = v188;
        v188(v186, v187, v643);
        unint64_t v189 = (void *)((v641 + v187) & 0xFFFFFFFFFFFFFFF8);
        long long v190 = (void *)((v641 + v186) & 0xFFFFFFFFFFFFFFF8);
        *long long v190 = *v189;
        long long v191 = (void *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v192 = (void *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v191 = *v192;
        v191[1] = v192[1];
        unint64_t v193 = (void *)(v645 + v182);
        *unint64_t v193 = *(void *)(v645 + v183);
        v193[1] = *(void *)(v645 + v183 + 8);
        unint64_t v194 = (v713 + v645 + v182) & ~v699;
        uint64_t v703 = ~v699;
        unint64_t v195 = (v713 + v645 + v183) & v703;
        *(unsigned char *)unint64_t v194 = *(unsigned char *)v195;
        uint64_t v196 = v194 | 4;
        int v197 = *(_DWORD *)(v195 | 4);
        *(unsigned char *)(v196 + 4) = *(unsigned char *)((v195 | 4) + 4);
        *(_DWORD *)uint64_t v196 = v197;
        *(_WORD *)(v194 + 10) = *(_WORD *)(v195 + 0xA);
        unint64_t v621 = v194;
        unint64_t v198 = (v657 + v194) & v693;
        unint64_t v199 = (v657 + v195) & v693;
        unint64_t v200 = *(void (**)(unint64_t, unint64_t, uint64_t))(v653 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v200(v198, v199, v673);
        unint64_t v201 = (v658 + v198) & v693;
        unint64_t v202 = (v658 + v199) & v693;
        v200(v201, v202, v673);
        unint64_t v203 = (unsigned char *)(v201 + v659);
        *unint64_t v203 = *(unsigned char *)(v202 + v659);
        v203[1] = *(unsigned char *)(v202 + v659 + 1);
        v203[2] = *(unsigned char *)(v202 + v659 + 2);
        v203[3] = *(unsigned char *)(v202 + v659 + 3);
        v203[4] = *(unsigned char *)(v202 + v659 + 4);
        unint64_t v204 = (v201 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v205 = (v202 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v204 = *(void *)v205;
        *(void *)(v204 + 8) = *(void *)(v205 + 8);
        *(unsigned char *)(v204 + 16) = *(unsigned char *)(v205 + 16);
        *(unsigned char *)(v204 + 17) = *(unsigned char *)(v205 + 17);
        *(unsigned char *)(v204 + 18) = *(unsigned char *)(v205 + 18);
        *(unsigned char *)(v204 + 19) = *(unsigned char *)(v205 + 19);
        unint64_t v206 = (v204 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v207 = (v205 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v206 = *(void *)v207;
        *(unsigned char *)(v206 + 8) = *(unsigned char *)(v207 + 8);
        *(unsigned char *)(v206 + 9) = *(unsigned char *)(v207 + 9);
        *(unsigned char *)(v206 + 10) = *(unsigned char *)(v207 + 10);
        *(unsigned char *)(v206 + 11) = *(unsigned char *)(v207 + 11);
        *(unsigned char *)(v206 + 12) = *(unsigned char *)(v207 + 12);
        unint64_t v208 = (void *)((v205 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v209 = (void *)((v204 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v209 = *v208;
        unint64_t v210 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v211 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v210 = *(void *)v211;
        *(unsigned char *)(v210 + 8) = *(unsigned char *)(v211 + 8);
        *(unsigned char *)(v210 + 9) = *(unsigned char *)(v211 + 9);
        long long v212 = (void *)((v660 + v210) & v693);
        long long v213 = (const void *)((v660 + v211) & v693);
        unint64_t v214 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v653 + 48);
        swift_bridgeObjectRetain();
        uint64_t v626 = v214;
        int v676 = v200;
        if (v214(v213, 1, v673))
        {
          memcpy(v212, v213, __n);
        }
        else
        {
          v200((unint64_t)v212, (unint64_t)v213, v673);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v212, 0, 1, v673);
        }
        unint64_t v253 = (void *)(((unint64_t)v212 + v661) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = (void *)(((unint64_t)v213 + v661) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v257 = *(void *)v256;
        *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
        *(void *)unint64_t v255 = v257;
        uint64_t v258 = (void *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v258 = *v259;
        unint64_t v260 = ((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v261 = (uint64_t *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v262 = v261[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v263 = v94;
        if ((v262 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v260 = *(_OWORD *)v261;
        }
        else
        {
          uint64_t v343 = *v261;
          sub_10001EBB0(*v261, v262);
          *(void *)unint64_t v260 = v343;
          *(void *)(v260 + 8) = v262;
        }
        unint64_t v344 = (v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v345 = ((unint64_t)v261 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v346 = *(void *)v345;
        *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
        *(void *)unint64_t v344 = v346;
        *(unsigned char *)(v344 + 9) = *(unsigned char *)(v345 + 9);
        unint64_t v347 = (v344 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v348 = (v345 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v349 = *(_DWORD *)v348;
        *(unsigned char *)(v347 + 4) = *(unsigned char *)(v348 + 4);
        *(_DWORD *)unint64_t v347 = v349;
        long long v350 = (void *)((v344 + 25) & 0xFFFFFFFFFFFFFFF8);
        long long v351 = (void *)((v345 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v350 = *v351;
        v350[1] = v351[1];
        unint64_t v352 = v708 + v621;
        unint64_t v353 = v708 + v195;
        unint64_t v354 = *(void *)(v708 + v195 + 16);
        if (v354 >= 0xFFFFFFFF) {
          LODWORD(v354) = -1;
        }
        int v355 = v354 - 1;
        swift_bridgeObjectRetain();
        if (v355 < 0)
        {
          *(void *)unint64_t v352 = *(void *)v353;
          *(unsigned char *)(v352 + 8) = *(unsigned char *)(v353 + 8);
          *(unsigned char *)(v352 + 9) = *(unsigned char *)(v353 + 9);
          uint64_t v382 = *(void *)(v353 + 16);
          swift_errorRetain();
          *(void *)(v352 + 16) = v382;
          uint64_t v383 = *(void *)(v353 + 24);
          swift_errorRetain();
          *(void *)(v352 + 24) = v383;
          *(unsigned char *)(v352 + 32) = *(unsigned char *)(v353 + 32);
          *(unsigned char *)(v352 + 33) = *(unsigned char *)(v353 + 33);
          *(unsigned char *)(v352 + 34) = *(unsigned char *)(v353 + 34);
          *(void *)(v352 + 40) = *(void *)(v353 + 40);
          *(void *)(v352 + 48) = *(void *)(v353 + 48);
          *(void *)(v352 + 56) = *(void *)(v353 + 56);
          *(void *)(v352 + 64) = *(void *)(v353 + 64);
          *(unsigned char *)(v352 + 72) = *(unsigned char *)(v353 + 72);
          *(void *)(v352 + 80) = *(void *)(v353 + 80);
          *(void *)(v352 + 88) = *(void *)(v353 + 88);
          uint64_t v622 = *(void **)(v353 + 96);
          *(void *)(v352 + 96) = v622;
          *(unsigned char *)(v352 + 104) = *(unsigned char *)(v353 + 104);
          *(unsigned char *)(v352 + 105) = *(unsigned char *)(v353 + 105);
          *(void *)(v352 + 112) = *(void *)(v353 + 112);
          *(void *)(v352 + 120) = *(void *)(v353 + 120);
          *(void *)(v352 + 128) = *(void *)(v353 + 128);
          *(void *)(v352 + 136) = *(void *)(v353 + 136);
          *(void *)(v352 + 144) = *(void *)(v353 + 144);
          *(void *)(v352 + 152) = *(void *)(v353 + 152);
          *(void *)(v352 + 160) = *(void *)(v353 + 160);
          *(void *)(v352 + 168) = *(void *)(v353 + 168);
          *(unsigned char *)(v352 + 176) = *(unsigned char *)(v353 + 176);
          *(void *)(v352 + 184) = *(void *)(v353 + 184);
          uint64_t v384 = *(void *)(v353 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v385 = v622;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v384)
          {
            *(void *)(v352 + 192) = v384;
            *(void *)(v352 + 200) = *(void *)(v353 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v352 + 192) = *(_OWORD *)(v353 + 192);
          }
          uint64_t v368 = a2;
          uint64_t v43 = a1;
          uint64_t v263 = v685;
          *(void *)(v352 + 208) = *(void *)(v353 + 208);
          *(void *)(v352 + 216) = *(void *)(v353 + 216);
          *(void *)(v352 + 224) = *(void *)(v353 + 224);
          *(void *)(v352 + 232) = *(void *)(v353 + 232);
          *(void *)(v352 + 240) = *(void *)(v353 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v356 = *(_OWORD *)v353;
          long long v357 = *(_OWORD *)(v353 + 16);
          long long v358 = *(_OWORD *)(v353 + 48);
          *(_OWORD *)(v352 + 32) = *(_OWORD *)(v353 + 32);
          *(_OWORD *)(v352 + 48) = v358;
          *(_OWORD *)unint64_t v352 = v356;
          *(_OWORD *)(v352 + 16) = v357;
          long long v359 = *(_OWORD *)(v353 + 64);
          long long v360 = *(_OWORD *)(v353 + 80);
          long long v361 = *(_OWORD *)(v353 + 112);
          *(_OWORD *)(v352 + 96) = *(_OWORD *)(v353 + 96);
          *(_OWORD *)(v352 + 112) = v361;
          *(_OWORD *)(v352 + 64) = v359;
          *(_OWORD *)(v352 + 80) = v360;
          long long v362 = *(_OWORD *)(v353 + 128);
          long long v363 = *(_OWORD *)(v353 + 144);
          long long v364 = *(_OWORD *)(v353 + 176);
          *(_OWORD *)(v352 + 160) = *(_OWORD *)(v353 + 160);
          *(_OWORD *)(v352 + 176) = v364;
          *(_OWORD *)(v352 + 128) = v362;
          *(_OWORD *)(v352 + 144) = v363;
          long long v365 = *(_OWORD *)(v353 + 192);
          long long v366 = *(_OWORD *)(v353 + 208);
          long long v367 = *(_OWORD *)(v353 + 224);
          *(void *)(v352 + 240) = *(void *)(v353 + 240);
          *(_OWORD *)(v352 + 208) = v366;
          *(_OWORD *)(v352 + 224) = v367;
          *(_OWORD *)(v352 + 192) = v365;
          uint64_t v368 = a2;
        }
        long long v502 = (_OWORD *)((v352 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v503 = (long long *)((v353 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v504 = *v503;
        *(_OWORD *)((char *)v502 + 9) = *(long long *)((char *)v503 + 9);
        *long long v502 = v504;
        unint64_t v505 = (v352 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v506 = (v353 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v507 = *(_OWORD *)v506;
        *(unsigned char *)(v505 + 16) = *(unsigned char *)(v506 + 16);
        *(_OWORD *)unint64_t v505 = v507;
        unint64_t v508 = (void *)((v352 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v509 = (v353 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v510 = *(void *)v509;
        v509 += 15;
        *unint64_t v508 = v510;
        unint64_t v511 = (void *)(((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v512 = *(void *)(v509 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v513 = *(void *)((v509 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v512, v513);
        void *v511 = v512;
        v511[1] = v513;
        v665((v627 + v43) & v651, (unint64_t)&v368[v627] & v651, AssociatedTypeWitness);
        uint64_t v683 = (v627 + v43) & v651;
        uint64_t v514 = (v635 + v683) & v668;
        unint64_t v711 = (unint64_t)&v368[v627] & v651;
        unint64_t v515 = (v635 + v711) & v668;
        v665(v514, v515, AssociatedTypeWitness);
        uint64_t v516 = (v629 + v514) & v672;
        uint64_t v517 = (v629 + v515) & v672;
        v633(v516, v517, v639);
        unint64_t v518 = (void *)((v634 + v516) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v519 = (void *)((v634 + v517) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v518 = *v519;
        unint64_t v520 = ((unint64_t)v518 + v637) & v263;
        unint64_t v521 = ((unint64_t)v519 + v637) & v263;
        swift_bridgeObjectRetain();
        v656(v520, v521, v643);
        uint64_t v522 = (void *)((v641 + v520) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v523 = (void *)((v641 + v521) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v522 = *v523;
        unint64_t v524 = (void *)(((unint64_t)v522 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v525 = (void *)(((unint64_t)v523 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v524 = *v525;
        v524[1] = v525[1];
        uint64_t v526 = (void *)(v516 + v645);
        *uint64_t v526 = *(void *)(v517 + v645);
        v526[1] = *(void *)(v517 + v645 + 8);
        unint64_t v527 = (v713 + v516 + v645) & v703;
        unint64_t v528 = (v713 + v517 + v645) & v703;
        *(unsigned char *)unint64_t v527 = *(unsigned char *)v528;
        uint64_t v529 = v527 | 4;
        int v530 = *(_DWORD *)(v528 | 4);
        *(unsigned char *)(v529 + 4) = *(unsigned char *)((v528 | 4) + 4);
        *(_DWORD *)uint64_t v529 = v530;
        *(_WORD *)(v527 + 10) = *(_WORD *)(v528 + 0xA);
        unint64_t v531 = (v657 + v527) & v693;
        unint64_t v532 = (v657 + v528) & v693;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v676(v531, v532, v673);
        unint64_t v533 = (v658 + v531) & v693;
        unint64_t v534 = (v658 + v532) & v693;
        v676(v533, v534, v673);
        unint64_t v535 = (unsigned char *)(v533 + v659);
        unsigned char *v535 = *(unsigned char *)(v534 + v659);
        v535[1] = *(unsigned char *)(v534 + v659 + 1);
        v535[2] = *(unsigned char *)(v534 + v659 + 2);
        v535[3] = *(unsigned char *)(v534 + v659 + 3);
        v535[4] = *(unsigned char *)(v534 + v659 + 4);
        unint64_t v536 = (v533 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v537 = (v534 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v536 = *(void *)v537;
        *(void *)(v536 + 8) = *(void *)(v537 + 8);
        *(unsigned char *)(v536 + 16) = *(unsigned char *)(v537 + 16);
        *(unsigned char *)(v536 + 17) = *(unsigned char *)(v537 + 17);
        *(unsigned char *)(v536 + 18) = *(unsigned char *)(v537 + 18);
        *(unsigned char *)(v536 + 19) = *(unsigned char *)(v537 + 19);
        unint64_t v538 = (v536 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v539 = (v537 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v538 = *(void *)v539;
        *(unsigned char *)(v538 + 8) = *(unsigned char *)(v539 + 8);
        *(unsigned char *)(v538 + 9) = *(unsigned char *)(v539 + 9);
        *(unsigned char *)(v538 + 10) = *(unsigned char *)(v539 + 10);
        *(unsigned char *)(v538 + 11) = *(unsigned char *)(v539 + 11);
        *(unsigned char *)(v538 + 12) = *(unsigned char *)(v539 + 12);
        unint64_t v540 = (void *)((v536 + 47) & 0xFFFFFFFFFFFFFFF8);
        v541 = (void *)((v537 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v540 = *v541;
        unint64_t v542 = ((unint64_t)v540 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v543 = ((unint64_t)v541 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v542 = *(void *)v543;
        *(unsigned char *)(v542 + 8) = *(unsigned char *)(v543 + 8);
        *(unsigned char *)(v542 + 9) = *(unsigned char *)(v543 + 9);
        v544 = (void *)((v660 + v542) & v693);
        unint64_t v545 = (const void *)((v660 + v543) & v693);
        swift_bridgeObjectRetain();
        if (v626(v545, 1, v673))
        {
          memcpy(v544, v545, __n);
        }
        else
        {
          v676((unint64_t)v544, (unint64_t)v545, v673);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v544, 0, 1, v673);
        }
        unint64_t v546 = (void *)(((unint64_t)v544 + v661) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v547 = (void *)(((unint64_t)v545 + v661) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v546 = *v547;
        unint64_t v548 = ((unint64_t)v546 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v549 = ((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v550 = *(void *)v549;
        *(unsigned char *)(v548 + 8) = *(unsigned char *)(v549 + 8);
        *(void *)unint64_t v548 = v550;
        v551 = (void *)(((unint64_t)v546 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v552 = (void *)(((unint64_t)v547 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v551 = *v552;
        unint64_t v553 = ((unint64_t)v551 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v554 = (uint64_t *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v555 = v554[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v555 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v553 = *(_OWORD *)v554;
        }
        else
        {
          uint64_t v556 = *v554;
          sub_10001EBB0(*v554, v555);
          *(void *)unint64_t v553 = v556;
          *(void *)(v553 + 8) = v555;
        }
        unint64_t v557 = (v553 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v558 = ((unint64_t)v554 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v559 = *(void *)v558;
        *(unsigned char *)(v557 + 8) = *(unsigned char *)(v558 + 8);
        *(void *)unint64_t v557 = v559;
        *(unsigned char *)(v557 + 9) = *(unsigned char *)(v558 + 9);
        unint64_t v560 = (v557 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v561 = (v558 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v562 = *(_DWORD *)v561;
        *(unsigned char *)(v560 + 4) = *(unsigned char *)(v561 + 4);
        *(_DWORD *)unint64_t v560 = v562;
        unint64_t v563 = (void *)((v557 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v564 = (void *)((v558 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v563 = *v564;
        v563[1] = v564[1];
        unint64_t v565 = v527 + v708;
        unint64_t v566 = v528 + v708;
        unint64_t v567 = *(void *)(v528 + v708 + 16);
        if (v567 >= 0xFFFFFFFF) {
          LODWORD(v567) = -1;
        }
        int v568 = v567 - 1;
        swift_bridgeObjectRetain();
        if (v568 < 0)
        {
          *(void *)unint64_t v565 = *(void *)v566;
          *(unsigned char *)(v565 + 8) = *(unsigned char *)(v566 + 8);
          *(unsigned char *)(v565 + 9) = *(unsigned char *)(v566 + 9);
          uint64_t v583 = *(void *)(v566 + 16);
          swift_errorRetain();
          *(void *)(v565 + 16) = v583;
          uint64_t v584 = *(void *)(v566 + 24);
          swift_errorRetain();
          *(void *)(v565 + 24) = v584;
          *(unsigned char *)(v565 + 32) = *(unsigned char *)(v566 + 32);
          *(unsigned char *)(v565 + 33) = *(unsigned char *)(v566 + 33);
          *(unsigned char *)(v565 + 34) = *(unsigned char *)(v566 + 34);
          *(void *)(v565 + 40) = *(void *)(v566 + 40);
          *(void *)(v565 + 48) = *(void *)(v566 + 48);
          *(void *)(v565 + 56) = *(void *)(v566 + 56);
          *(void *)(v565 + 64) = *(void *)(v566 + 64);
          *(unsigned char *)(v565 + 72) = *(unsigned char *)(v566 + 72);
          *(void *)(v565 + 80) = *(void *)(v566 + 80);
          *(void *)(v565 + 88) = *(void *)(v566 + 88);
          v720 = *(void **)(v566 + 96);
          *(void *)(v565 + 96) = v720;
          *(unsigned char *)(v565 + 104) = *(unsigned char *)(v566 + 104);
          *(unsigned char *)(v565 + 105) = *(unsigned char *)(v566 + 105);
          *(void *)(v565 + 112) = *(void *)(v566 + 112);
          *(void *)(v565 + 120) = *(void *)(v566 + 120);
          *(void *)(v565 + 128) = *(void *)(v566 + 128);
          *(void *)(v565 + 136) = *(void *)(v566 + 136);
          *(void *)(v565 + 144) = *(void *)(v566 + 144);
          *(void *)(v565 + 152) = *(void *)(v566 + 152);
          *(void *)(v565 + 160) = *(void *)(v566 + 160);
          *(void *)(v565 + 168) = *(void *)(v566 + 168);
          *(unsigned char *)(v565 + 176) = *(unsigned char *)(v566 + 176);
          *(void *)(v565 + 184) = *(void *)(v566 + 184);
          uint64_t v585 = *(void *)(v566 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v586 = v720;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v585)
          {
            *(void *)(v565 + 192) = v585;
            *(void *)(v565 + 200) = *(void *)(v566 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v565 + 192) = *(_OWORD *)(v566 + 192);
          }
          uint64_t v43 = a1;
          unint64_t v90 = v686;
          unint64_t v581 = v623;
          uint64_t v582 = v683;
          *(void *)(v565 + 208) = *(void *)(v566 + 208);
          *(void *)(v565 + 216) = *(void *)(v566 + 216);
          *(void *)(v565 + 224) = *(void *)(v566 + 224);
          *(void *)(v565 + 232) = *(void *)(v566 + 232);
          *(void *)(v565 + 240) = *(void *)(v566 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v569 = *(_OWORD *)v566;
          long long v570 = *(_OWORD *)(v566 + 16);
          long long v571 = *(_OWORD *)(v566 + 48);
          *(_OWORD *)(v565 + 32) = *(_OWORD *)(v566 + 32);
          *(_OWORD *)(v565 + 48) = v571;
          *(_OWORD *)unint64_t v565 = v569;
          *(_OWORD *)(v565 + 16) = v570;
          long long v572 = *(_OWORD *)(v566 + 64);
          long long v573 = *(_OWORD *)(v566 + 80);
          long long v574 = *(_OWORD *)(v566 + 112);
          *(_OWORD *)(v565 + 96) = *(_OWORD *)(v566 + 96);
          *(_OWORD *)(v565 + 112) = v574;
          *(_OWORD *)(v565 + 64) = v572;
          *(_OWORD *)(v565 + 80) = v573;
          long long v575 = *(_OWORD *)(v566 + 128);
          long long v576 = *(_OWORD *)(v566 + 144);
          long long v577 = *(_OWORD *)(v566 + 176);
          *(_OWORD *)(v565 + 160) = *(_OWORD *)(v566 + 160);
          *(_OWORD *)(v565 + 176) = v577;
          *(_OWORD *)(v565 + 128) = v575;
          *(_OWORD *)(v565 + 144) = v576;
          long long v578 = *(_OWORD *)(v566 + 192);
          long long v579 = *(_OWORD *)(v566 + 208);
          long long v580 = *(_OWORD *)(v566 + 224);
          *(void *)(v565 + 240) = *(void *)(v566 + 240);
          *(_OWORD *)(v565 + 208) = v579;
          *(_OWORD *)(v565 + 224) = v580;
          *(_OWORD *)(v565 + 192) = v578;
          unint64_t v90 = v686;
          unint64_t v581 = v623;
          uint64_t v582 = (v627 + v43) & v651;
        }
        long long v603 = (_OWORD *)((v565 + 255) & 0xFFFFFFFFFFFFFFF8);
        v604 = (long long *)((v566 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v605 = *v604;
        *(_OWORD *)((char *)v603 + 9) = *(long long *)((char *)v604 + 9);
        *long long v603 = v605;
        unint64_t v606 = (v565 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v607 = (v566 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v608 = *(_OWORD *)v607;
        *(unsigned char *)(v606 + 16) = *(unsigned char *)(v607 + 16);
        *(_OWORD *)unint64_t v606 = v608;
        unint64_t v609 = (void *)((v565 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v610 = (v566 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v611 = *(void *)v610;
        v610 += 15;
        *unint64_t v609 = v611;
        v612 = (void *)(((unint64_t)v609 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v613 = *(void *)(v610 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v614 = *(void *)((v610 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v613, v614);
        char v171 = 0;
        void *v612 = v613;
        v612[1] = v614;
        uint64_t v615 = (void *)((v581 + v582) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v616 = (void *)((v581 + v711) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v615 = *v616;
        unint64_t v617 = (void *)(((unint64_t)v615 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v618 = (void *)(((unint64_t)v616 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v617 = *v618;
        v617[1] = v618[1];
        char v172 = 1;
        uint64_t v39 = v698;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        *(unsigned char *)(v654 + v43) = a2[v654];
        unint64_t v215 = (v654 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v216 = (unint64_t)&a2[v654] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v215 + 8) = *(void *)(v216 + 8);
        *(void *)(v215 + 16) = *(void *)(v216 + 16);
        char v172 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        long long v217 = (void *)((v43 + v654 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v218 = (void *)((unint64_t)&a2[v654 + 7] & 0xFFFFFFFFFFFFFFF8);
        *long long v217 = *v218;
        v217[1] = v218[1];
        char v172 = 3;
        break;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        *(unsigned char *)(v654 + v43) = a2[v654];
        unint64_t v219 = (v654 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v220 = (unint64_t)&a2[v654] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v219 + 8) = *(void *)(v220 + 8);
        *(void *)(v219 + 16) = *(void *)(v220 + 16);
        char v172 = 4;
        break;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        unint64_t v221 = (void *)((v43 + v654 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v222 = (void *)((unint64_t)&a2[v654 + 7] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v221 = *v222;
        v221[1] = v222[1];
        char v172 = 5;
        break;
      default:
        uint64_t v701 = ~v699;
        unint64_t v706 = v704 + 16;
        uint64_t v696 = v39;
        uint64_t v95 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v680 + 16);
        v95(v43, a2, AssociatedTypeWitness);
        uint64_t v96 = (v635 + v43) & v93;
        unint64_t v97 = (unint64_t)&a2[v635] & ~v669;
        v95(v96, (unsigned __int8 *)v97, AssociatedTypeWitness);
        uint64_t v98 = (v96 + v654 + v689) & ~v689;
        unint64_t v99 = (v97 + v654 + v689) & ~v689;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v648 + 16))(v98, v99, v639);
        unint64_t v100 = (void *)((v634 + v98) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v101 = (void *)((v634 + v99) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v100 = *v101;
        unint64_t v102 = ((unint64_t)v100 + v637) & v94;
        unint64_t v103 = ((unint64_t)v101 + v637) & v94;
        unint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v652 + 16);
        swift_bridgeObjectRetain();
        v104(v102, v103, v643);
        uint64_t v105 = (void *)((v641 + v103) & 0xFFFFFFFFFFFFFFF8);
        long long v106 = (void *)((v641 + v102) & 0xFFFFFFFFFFFFFFF8);
        *long long v106 = *v105;
        uint64_t v107 = (void *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v108 = (void *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v107 = *v108;
        v107[1] = v108[1];
        unint64_t v109 = (void *)(v645 + v98);
        *unint64_t v109 = *(void *)(v645 + v99);
        v109[1] = *(void *)(v645 + v99 + 8);
        unint64_t v110 = (v713 + v645 + v98) & v701;
        unint64_t v111 = (v713 + v645 + v99) & v701;
        *(unsigned char *)unint64_t v110 = *(unsigned char *)v111;
        uint64_t v112 = v110 | 4;
        int v113 = *(_DWORD *)(v111 | 4);
        *(unsigned char *)(v112 + 4) = *(unsigned char *)((v111 | 4) + 4);
        *(_DWORD *)uint64_t v112 = v113;
        *(_WORD *)(v110 + 10) = *(_WORD *)(v111 + 0xA);
        unint64_t v114 = (v657 + v110) & v45;
        unint64_t v715 = v111;
        unint64_t v115 = (v657 + v111) & v45;
        unint64_t v116 = *(void (**)(unint64_t, unint64_t, uint64_t))(v653 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116(v114, v115, v673);
        unint64_t v117 = (v658 + v114) & v45;
        unint64_t v118 = (v658 + v115) & v45;
        v116(v117, v118, v673);
        unint64_t v119 = (unsigned char *)(v117 + v659);
        *unint64_t v119 = *(unsigned char *)(v118 + v659);
        v119[1] = *(unsigned char *)(v118 + v659 + 1);
        v119[2] = *(unsigned char *)(v118 + v659 + 2);
        v119[3] = *(unsigned char *)(v118 + v659 + 3);
        v119[4] = *(unsigned char *)(v118 + v659 + 4);
        unint64_t v120 = (v117 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v121 = (v118 + v659 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v120 = *(void *)v121;
        *(void *)(v120 + 8) = *(void *)(v121 + 8);
        *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
        *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
        *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
        *(unsigned char *)(v120 + 19) = *(unsigned char *)(v121 + 19);
        unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v123 = (v121 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v122 = *(void *)v123;
        *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
        *(unsigned char *)(v122 + 9) = *(unsigned char *)(v123 + 9);
        *(unsigned char *)(v122 + 10) = *(unsigned char *)(v123 + 10);
        *(unsigned char *)(v122 + 11) = *(unsigned char *)(v123 + 11);
        *(unsigned char *)(v122 + 12) = *(unsigned char *)(v123 + 12);
        unint64_t v124 = (void *)((v121 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v125 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v125 = *v124;
        unint64_t v126 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v127 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v126 = *(void *)v127;
        *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
        *(unsigned char *)(v126 + 9) = *(unsigned char *)(v127 + 9);
        unint64_t v128 = (void *)((v660 + v126) & v45);
        uint64_t v129 = (const void *)((v660 + v127) & v45);
        uint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v653 + 48);
        swift_bridgeObjectRetain();
        if (v130(v129, 1, v673))
        {
          memcpy(v128, v129, __n);
        }
        else
        {
          v116((unint64_t)v128, (unint64_t)v129, v673);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v653 + 56))(v128, 0, 1, v673);
        }
        unint64_t v233 = (void *)(((unint64_t)v128 + v661) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v234 = (void *)(((unint64_t)v129 + v661) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v233 = *v234;
        unint64_t v235 = ((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v236 = ((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v237 = *(void *)v236;
        *(unsigned char *)(v235 + 8) = *(unsigned char *)(v236 + 8);
        *(void *)unint64_t v235 = v237;
        long long v238 = (void *)(((unint64_t)v233 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v239 = (void *)(((unint64_t)v234 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v238 = *v239;
        unint64_t v240 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v241 = (uint64_t *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v242 = v241[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v242 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v240 = *(_OWORD *)v241;
        }
        else
        {
          uint64_t v290 = *v241;
          sub_10001EBB0(*v241, v242);
          *(void *)unint64_t v240 = v290;
          *(void *)(v240 + 8) = v242;
        }
        unint64_t v291 = (v240 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v292 = ((unint64_t)v241 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v293 = *(void *)v292;
        *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
        *(void *)unint64_t v291 = v293;
        *(unsigned char *)(v291 + 9) = *(unsigned char *)(v292 + 9);
        unint64_t v294 = (v291 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v296 = *(_DWORD *)v295;
        *(unsigned char *)(v294 + 4) = *(unsigned char *)(v295 + 4);
        *(_DWORD *)unint64_t v294 = v296;
        unint64_t v297 = (void *)((v291 + 25) & 0xFFFFFFFFFFFFFFF8);
        int v298 = (void *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v297 = *v298;
        v297[1] = v298[1];
        unint64_t v299 = v706 + v110;
        unint64_t v300 = (long long *)(v706 + v715);
        unint64_t v301 = *(void *)(v706 + v715 + 16);
        if (v301 >= 0xFFFFFFFF) {
          LODWORD(v301) = -1;
        }
        int v302 = v301 - 1;
        swift_bridgeObjectRetain();
        if (v302 < 0)
        {
          *(void *)unint64_t v299 = *(void *)v300;
          *(unsigned char *)(v299 + 8) = *((unsigned char *)v300 + 8);
          *(unsigned char *)(v299 + 9) = *((unsigned char *)v300 + 9);
          uint64_t v373 = *((void *)v300 + 2);
          swift_errorRetain();
          *(void *)(v299 + 16) = v373;
          uint64_t v374 = *((void *)v300 + 3);
          swift_errorRetain();
          *(void *)(v299 + 24) = v374;
          *(unsigned char *)(v299 + 32) = *((unsigned char *)v300 + 32);
          *(unsigned char *)(v299 + 33) = *((unsigned char *)v300 + 33);
          *(unsigned char *)(v299 + 34) = *((unsigned char *)v300 + 34);
          *(void *)(v299 + 40) = *((void *)v300 + 5);
          *(void *)(v299 + 48) = *((void *)v300 + 6);
          *(void *)(v299 + 56) = *((void *)v300 + 7);
          *(void *)(v299 + 64) = *((void *)v300 + 8);
          *(unsigned char *)(v299 + 72) = *((unsigned char *)v300 + 72);
          *(void *)(v299 + 80) = *((void *)v300 + 10);
          *(void *)(v299 + 88) = *((void *)v300 + 11);
          v717 = (void *)*((void *)v300 + 12);
          *(void *)(v299 + 96) = v717;
          *(unsigned char *)(v299 + 104) = *((unsigned char *)v300 + 104);
          *(unsigned char *)(v299 + 105) = *((unsigned char *)v300 + 105);
          *(void *)(v299 + 112) = *((void *)v300 + 14);
          *(void *)(v299 + 120) = *((void *)v300 + 15);
          *(void *)(v299 + 128) = *((void *)v300 + 16);
          *(void *)(v299 + 136) = *((void *)v300 + 17);
          *(void *)(v299 + 144) = *((void *)v300 + 18);
          *(void *)(v299 + 152) = *((void *)v300 + 19);
          *(void *)(v299 + 160) = *((void *)v300 + 20);
          *(void *)(v299 + 168) = *((void *)v300 + 21);
          *(unsigned char *)(v299 + 176) = *((unsigned char *)v300 + 176);
          *(void *)(v299 + 184) = *((void *)v300 + 23);
          uint64_t v375 = *((void *)v300 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v376 = v717;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v375)
          {
            *(void *)(v299 + 192) = v375;
            *(void *)(v299 + 200) = *((void *)v300 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v299 + 192) = v300[12];
          }
          long long v315 = a2;
          unint64_t v90 = v686;
          *(void *)(v299 + 208) = *((void *)v300 + 26);
          *(void *)(v299 + 216) = *((void *)v300 + 27);
          *(void *)(v299 + 224) = *((void *)v300 + 28);
          *(void *)(v299 + 232) = *((void *)v300 + 29);
          *(void *)(v299 + 240) = *((void *)v300 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v303 = *v300;
          long long v304 = v300[1];
          long long v305 = v300[3];
          *(_OWORD *)(v299 + 32) = v300[2];
          *(_OWORD *)(v299 + 48) = v305;
          *(_OWORD *)unint64_t v299 = v303;
          *(_OWORD *)(v299 + 16) = v304;
          long long v306 = v300[4];
          long long v307 = v300[5];
          long long v308 = v300[7];
          *(_OWORD *)(v299 + 96) = v300[6];
          *(_OWORD *)(v299 + 112) = v308;
          *(_OWORD *)(v299 + 64) = v306;
          *(_OWORD *)(v299 + 80) = v307;
          long long v309 = v300[8];
          long long v310 = v300[9];
          long long v311 = v300[11];
          *(_OWORD *)(v299 + 160) = v300[10];
          *(_OWORD *)(v299 + 176) = v311;
          *(_OWORD *)(v299 + 128) = v309;
          *(_OWORD *)(v299 + 144) = v310;
          long long v312 = v300[12];
          long long v313 = v300[13];
          long long v314 = v300[14];
          *(void *)(v299 + 240) = *((void *)v300 + 30);
          *(_OWORD *)(v299 + 208) = v313;
          *(_OWORD *)(v299 + 224) = v314;
          *(_OWORD *)(v299 + 192) = v312;
          long long v315 = a2;
          unint64_t v90 = v686;
        }
        uint64_t v400 = (_OWORD *)((v299 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v401 = (long long *)(((unint64_t)v300 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v402 = *v401;
        *(_OWORD *)((char *)v400 + 9) = *(long long *)((char *)v401 + 9);
        _OWORD *v400 = v402;
        unint64_t v403 = (v299 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v404 = ((unint64_t)v300 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v405 = *(_OWORD *)v404;
        *(unsigned char *)(v403 + 16) = *(unsigned char *)(v404 + 16);
        *(_OWORD *)unint64_t v403 = v405;
        unint64_t v406 = (void *)((v299 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v407 = ((unint64_t)v300 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v408 = *(void *)v407;
        v407 += 15;
        *unint64_t v406 = v408;
        uint64_t v409 = (void *)(((unint64_t)v406 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v410 = *(void *)(v407 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v411 = *(void *)((v407 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v410, v411);
        char v172 = 0;
        char v171 = 0;
        *uint64_t v409 = v410;
        v409[1] = v411;
        uint64_t v43 = a1;
        uint64_t v412 = (void *)((a1 + v624 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v413 = (void *)((unint64_t)&v315[v624 + 7] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v412 = *v413;
        v412[1] = v413[1];
        uint64_t v39 = v696;
        break;
    }
  }
  *(unsigned char *)(v43 + v90) = v172;
  swift_bridgeObjectRetain();
  *(unsigned char *)(v43 + v39) = v171;
  return v43;
}

unsigned __int8 *sub_10062B738(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v768 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v768 + 80);
    uint64_t v724 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v726 = v6;
    uint64_t v727 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v729 = *(void *)(v8 - 8);
    uint64_t v731 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v729 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v703 = v3 + v10;
    uint64_t v723 = *(void *)(v6 + 64) + 7;
    uint64_t v725 = v9 + 8;
    uint64_t v754 = v9;
    uint64_t v728 = *(void *)(v729 + 64) + 7;
    unint64_t v734 = ((((v728 + ((v9 + 8 + (v723 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v770 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v770 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v781 = (v12 | 7) + 16;
    uint64_t v740 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v741 = v13 + v12;
    uint64_t v706 = v13 + 12;
    uint64_t v742 = v12 + 10;
    uint64_t v736 = v13;
    uint64_t v737 = v11;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v770 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v15 = v14 + 7;
    unint64_t v751 = (((((((((v15
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    size_t v743 = v15;
    unint64_t v16 = (((v751 + 327 + ((v781 + v734 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v760 = v4;
    uint64_t v775 = v10;
    uint64_t v18 = v10 | v4 | v12;
    unint64_t v701 = v16 + 16;
    unint64_t v702 = v16 + 16 + v18;
    uint64_t v748 = v18;
    unint64_t v704 = v16 + 23;
    unint64_t v19 = ((((v16 + 23 + (v702 & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v738 = v3;
    if (v20 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v20 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v20 > v17) {
      unint64_t v17 = v20;
    }
    if (v17 > v19) {
      unint64_t v19 = v17;
    }
    unint64_t v772 = v19;
    unint64_t v746 = v19 | 1;
    uint64_t v762 = swift_getAssociatedTypeWitness();
    uint64_t v21 = *(void *)(*(void *)(v762 - 8) + 64);
    uint64_t v764 = *(void *)(v762 - 8);
    uint64_t v22 = *(unsigned __int8 *)(v764 + 80);
    uint64_t v711 = v21 + v22;
    uint64_t v23 = swift_getAssociatedTypeWitness();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v714 = v24;
    uint64_t v715 = v23;
    int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
    uint64_t v26 = swift_getAssociatedTypeWitness();
    uint64_t v27 = v12 | 7;
    uint64_t v717 = *(void *)(v26 - 8);
    uint64_t v719 = v26;
    uint64_t v28 = *(unsigned __int8 *)(v717 + 80);
    int v29 = v25 | v28;
    uint64_t v2 = a1;
    uint64_t v30 = v29 | 7u;
    uint64_t v700 = v21 + v30;
    uint64_t v712 = *(void *)(v24 + 64) + 7;
    uint64_t v713 = v28 + 8;
    uint64_t v716 = *(void *)(v717 + 64) + 7;
    unint64_t v31 = ((((v716 + ((v28 + 8 + (v712 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v32 = (((v751 + 327 + ((v781 + v31 + ((v21 + v30 + ((v21 + v22) & ~v22)) & ~v30)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = v32 + 23;
    unint64_t v34 = ((v32 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v35 = v32 + 16;
    uint64_t v36 = v22 | v12 | v30;
    unint64_t v699 = v35;
    unint64_t v37 = v35 + v36;
    unint64_t v38 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v744 = v21;
    unint64_t v39 = ((((v33 + ((v35 + v36) & ~v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v38 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v38 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v38 > v34) {
      unint64_t v34 = v38;
    }
    if (v34 <= v39) {
      unint64_t v40 = v39;
    }
    else {
      unint64_t v40 = v34;
    }
    if ((v40 | 1) <= v746) {
      uint64_t v41 = v746;
    }
    else {
      uint64_t v41 = v40 | 1;
    }
    unsigned int v42 = a1[v41];
    unsigned int v43 = v42 - 2;
    if (v42 >= 2)
    {
      if (v41 <= 3) {
        uint64_t v44 = v41;
      }
      else {
        uint64_t v44 = 4;
      }
      switch(v44)
      {
        case 1:
          int v45 = *a1;
          if (v41 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v45 = *(unsigned __int16 *)a1;
          if (v41 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v45 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v41 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v45 = *(_DWORD *)a1;
          if (v41 < 4) {
LABEL_33:
          }
            v45 |= v43 << (8 * v41);
LABEL_34:
          unsigned int v42 = v45 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v708 = ~v760;
    uint64_t v709 = ~v775;
    uint64_t v710 = ~v754;
    uint64_t v761 = ~v12;
    unint64_t v46 = v751 + 16;
    uint64_t v47 = ~v748;
    uint64_t v707 = ~v22;
    uint64_t v749 = ~v30;
    uint64_t v752 = ~v28;
    uint64_t v698 = ~v36;
    uint64_t v747 = ~v27;
    if (v42 == 1)
    {
      unsigned int v48 = a1[v40];
      BOOL v49 = v48 < 6 || v40 == 0;
      uint64_t v50 = a2;
      if (!v49) {
        unsigned int v48 = *(_DWORD *)a1 + 6;
      }
      switch(v48)
      {
        case 1u:
          uint64_t v674 = v47;
          unint64_t v679 = v37;
          unint64_t v671 = v33;
          unint64_t v687 = v40;
          unint64_t v755 = v46;
          uint64_t v692 = v41;
          unint64_t v63 = ((((v716 + ((v28 + 8 + (v712 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 16;
          unint64_t v64 = *(void (**)(unsigned __int8 *, uint64_t))(v764 + 8);
          uint64_t v65 = ~v27;
          v64(a1, v762);
          uint64_t v669 = (void (*)(unint64_t, uint64_t))v64;
          v64((unsigned __int8 *)((unint64_t)&a1[v711] & v707), v762);
          unint64_t v66 = (((unint64_t)&a1[v711] & v707) + v744 + v30) & v749;
          uint64_t v667 = *(void (**)(unint64_t, uint64_t))(v714 + 8);
          v667(v66, v715);
          swift_bridgeObjectRelease();
          unint64_t v665 = *(void (**)(unint64_t, uint64_t))(v717 + 8);
          v665((v713 + ((v712 + v66) & 0xFFFFFFFFFFFFFFF8)) & v752, v719);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v684 = v63;
          swift_bridgeObjectRelease();
          unint64_t v67 = (v781 + v63 + v66) & v65;
          uint64_t v68 = *(void (**)(unint64_t, uint64_t))(v737 + 8);
          v68((v740 + v67) & v761, v770);
          unint64_t v69 = (v741 + ((v740 + v67) & v761)) & v761;
          v68(v69, v770);
          swift_bridgeObjectRelease();
          unint64_t v70 = (v742
               + ((((((v706 + v69) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          unint64_t v663 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v737 + 48);
          if (!v663(v70, 1, v770)) {
            v68(v70, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = (uint64_t *)((((((v743 + v70) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v72 = v71[1];
          if ((v72 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v71, v72);
          }
          swift_bridgeObjectRelease();
          unint64_t v73 = v67 + v46;
          LODWORD(v74) = -1;
          if (*(void *)(v73 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v74 = *(void *)(v73 + 16);
          }
          if ((int)v74 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v73 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v73 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v73 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v64((unsigned __int8 *)((unint64_t)&a1[v679] & v698), v762);
          unint64_t v75 = (v711 + ((unint64_t)&a1[v679] & v698)) & v707;
          v669(v75, v762);
          unint64_t v76 = (v700 + v75) & v749;
          v667(v76, v715);
          swift_bridgeObjectRelease();
          v665((v713 + ((v712 + v76) & 0xFFFFFFFFFFFFFFF8)) & v752, v719);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = (v781 + v76 + v684) & v747;
          v68((v740 + v77) & v761, v770);
          uint64_t v78 = (v741 + ((v740 + v77) & v761)) & v761;
          v68(v78, v770);
          swift_bridgeObjectRelease();
          unint64_t v79 = (v742
               + ((((((v706 + v78) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          if (!v663(v79, 1, v770)) {
            v68(v79, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v80 = (uint64_t *)((((((v743 + v79) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v81 = v80[1];
          unint64_t v40 = v687;
          uint64_t v41 = v692;
          uint64_t v50 = a2;
          if ((v81 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v80, v81);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v77 + v755;
          LODWORD(v82) = -1;
          if (*(void *)(v77 + v755 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v82 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v679;
          unint64_t v31 = v684;
          uint64_t v47 = v674;
          if ((int)v82 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
        case 2u:
        case 4u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v764 + 8))(a1, v762);
          break;
        case 3u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v764 + 8))(a1, v762);
          break;
        default:
          unint64_t v755 = v46;
          uint64_t v673 = v47;
          unint64_t v678 = v37;
          unint64_t v671 = v33;
          uint64_t v53 = *(void (**)(unsigned __int8 *, uint64_t))(v764 + 8);
          uint64_t v54 = ~v27;
          v53(a1, v762);
          v53((unsigned __int8 *)((unint64_t)&a1[v711] & v707), v762);
          unint64_t v55 = (((unint64_t)&a1[v711] & v707) + v744 + v30) & v749;
          (*(void (**)(unint64_t, uint64_t))(v714 + 8))(v55, v715);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v717 + 8))((v713 + ((v712 + v55) & 0xFFFFFFFFFFFFFFF8)) & v752, v719);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v683 = v31;
          swift_bridgeObjectRelease();
          unint64_t v691 = (v781 + v31 + v55) & v54;
          unint64_t v56 = *(void (**)(unint64_t, uint64_t))(v737 + 8);
          v56((v740 + v691) & v761, v770);
          unint64_t v57 = (v741 + ((v740 + v691) & v761)) & v761;
          v56(v57, v770);
          swift_bridgeObjectRelease();
          unint64_t v58 = (v742
               + ((((((v706 + v57) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v737 + 48))(v58, 1, v770)) {
            v56(v58, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v59 = (uint64_t *)((((((v743 + v58) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v60 = v59[1];
          if ((v60 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v59, v60);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v691 + v46;
          LODWORD(v62) = -1;
          if (*(void *)(v691 + v755 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v62 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v678;
          unint64_t v31 = v683;
          uint64_t v47 = v673;
          if ((int)v62 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
      }
    }
    else
    {
      unsigned int v51 = a1[v772];
      BOOL v52 = v51 < 6 || v772 == 0;
      uint64_t v50 = a2;
      if (!v52) {
        unsigned int v51 = *(_DWORD *)a1 + 6;
      }
      switch(v51)
      {
        case 1u:
          uint64_t v676 = v47;
          unint64_t v681 = v37;
          unint64_t v688 = v40;
          unint64_t v671 = v33;
          unint64_t v755 = v46;
          unint64_t v92 = *(void (**)(unsigned __int8 *, uint64_t))(v768 + 8);
          uint64_t v93 = ~v27;
          v92(a1, AssociatedTypeWitness);
          unint64_t v670 = (void (*)(unint64_t, uint64_t))v92;
          v92((unsigned __int8 *)((unint64_t)&a1[v724] & v708), AssociatedTypeWitness);
          unint64_t v94 = (((unint64_t)&a1[v724] & v708) + v738 + v775) & v709;
          uint64_t v668 = *(void (**)(unint64_t, uint64_t))(v726 + 8);
          v668(v94, v727);
          swift_bridgeObjectRelease();
          uint64_t v666 = *(void (**)(unint64_t, uint64_t))(v729 + 8);
          v666((v725 + ((v723 + v94) & 0xFFFFFFFFFFFFFFF8)) & v710, v731);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v95 = (v781 + v734 + v94) & v93;
          uint64_t v96 = *(void (**)(unint64_t, uint64_t))(v737 + 8);
          v96((v740 + v95) & v761, v770);
          unint64_t v97 = (v741 + ((v740 + v95) & v761)) & v761;
          v96(v97, v770);
          swift_bridgeObjectRelease();
          unint64_t v98 = (v742
               + ((((((v706 + v97) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          uint64_t v664 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v737 + 48);
          if (!v664(v98, 1, v770)) {
            v96(v98, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v99 = (uint64_t *)((((((v743 + v98) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v100 = v99[1];
          if ((v100 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v99, v100);
          }
          swift_bridgeObjectRelease();
          unint64_t v101 = v46 + v95;
          LODWORD(v102) = -1;
          if (*(void *)(v101 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v102 = *(void *)(v101 + 16);
          }
          if ((int)v102 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v101 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v101 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v101 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v92((unsigned __int8 *)((unint64_t)&a1[v702] & v676), AssociatedTypeWitness);
          unint64_t v103 = (v724 + ((unint64_t)&a1[v702] & v676)) & v708;
          v670(v103, AssociatedTypeWitness);
          unint64_t v104 = (v703 + v103) & v709;
          v668(v104, v727);
          swift_bridgeObjectRelease();
          v666((v725 + ((v723 + v104) & 0xFFFFFFFFFFFFFFF8)) & v710, v731);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v105 = (v781 + v104 + v734) & v747;
          v96((v740 + v105) & v761, v770);
          unint64_t v106 = (v741 + ((v740 + v105) & v761)) & v761;
          v96(v106, v770);
          swift_bridgeObjectRelease();
          unint64_t v107 = (v742
                + ((((((v706 + v106) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          if (!v664(v107, 1, v770)) {
            v96(v107, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v108 = (uint64_t *)((((((v743 + v107) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v109 = v108[1];
          unint64_t v40 = v688;
          uint64_t v50 = a2;
          unint64_t v37 = v681;
          if ((v109 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v108, v109);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v105 + v755;
          LODWORD(v110) = -1;
          if (*(void *)(v105 + v755 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v110 = *(void *)(v61 + 16);
          }
          uint64_t v47 = v676;
          if ((int)v110 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
        case 2u:
        case 4u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v768 + 8))(a1, AssociatedTypeWitness);
          break;
        case 3u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v768 + 8))(a1, AssociatedTypeWitness);
          break;
        default:
          unint64_t v755 = v46;
          uint64_t v675 = v47;
          unint64_t v680 = v37;
          unint64_t v685 = ((((v716 + ((v28 + 8 + (v712 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v671 = v33;
          unint64_t v83 = *(void (**)(unsigned __int8 *, uint64_t))(v768 + 8);
          uint64_t v84 = ~v27;
          v83(a1, AssociatedTypeWitness);
          v83((unsigned __int8 *)((unint64_t)&a1[v724] & v708), AssociatedTypeWitness);
          unint64_t v85 = (((unint64_t)&a1[v724] & v708) + v738 + v775) & v709;
          (*(void (**)(unint64_t, uint64_t))(v726 + 8))(v85, v727);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v729 + 8))((v725 + ((v723 + v85) & 0xFFFFFFFFFFFFFFF8)) & v710, v731);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v693 = (v781 + v734 + v85) & v84;
          unint64_t v86 = *(void (**)(unint64_t, uint64_t))(v737 + 8);
          v86((v740 + v693) & v761, v770);
          unint64_t v87 = (v741 + ((v740 + v693) & v761)) & v761;
          v86(v87, v770);
          swift_bridgeObjectRelease();
          unint64_t v88 = (v742
               + ((((((v706 + v87) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v761;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v737 + 48))(v88, 1, v770)) {
            v86(v88, v770);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v89 = (uint64_t *)((((((v743 + v88) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v90 = v89[1];
          if ((v90 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v89, v90);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v46 + v693;
          LODWORD(v91) = -1;
          if (*(void *)(v755 + v693 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v91 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v680;
          unint64_t v31 = v685;
          uint64_t v47 = v675;
          if ((int)v91 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_117:
          sub_1000CF144(*(void *)((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v33 = v671;
          unint64_t v46 = v755;
          break;
      }
    }
    swift_bridgeObjectRelease();
    unsigned int v111 = v50[v41];
    unsigned int v112 = v111 - 2;
    if (v111 >= 2)
    {
      if (v41 <= 3) {
        uint64_t v113 = v41;
      }
      else {
        uint64_t v113 = 4;
      }
      switch(v113)
      {
        case 1:
          int v114 = *v50;
          if (v41 >= 4) {
            goto LABEL_139;
          }
          goto LABEL_126;
        case 2:
          int v114 = *(unsigned __int16 *)v50;
          if (v41 < 4) {
            goto LABEL_126;
          }
          goto LABEL_139;
        case 3:
          int v114 = *(unsigned __int16 *)v50 | (v50[2] << 16);
          if (v41 < 4) {
            goto LABEL_126;
          }
          goto LABEL_139;
        case 4:
          int v114 = *(_DWORD *)v50;
          if (v41 < 4)
          {
LABEL_126:
            unsigned int v111 = (v114 | (v112 << (8 * v41))) + 2;
            break;
          }
LABEL_139:
          if (v114 != -1) {
            goto LABEL_140;
          }
          goto LABEL_128;
        default:
          break;
      }
    }
    if (v111 == 1)
    {
LABEL_128:
      unsigned int v115 = v50[v40];
      if (v115 >= 6 && v40 != 0) {
        unsigned int v115 = *(_DWORD *)v50 + 6;
      }
      switch(v115)
      {
        case 1u:
          unint64_t v758 = v46;
          unint64_t v682 = v37;
          unint64_t v672 = v33;
          unint64_t v690 = v40;
          uint64_t v696 = v41;
          uint64_t v188 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16);
          v188(a1, v50, v762);
          unint64_t v189 = v31;
          v769 = (void (*)(unint64_t, unint64_t, uint64_t))v188;
          v188((unsigned __int8 *)((unint64_t)&a1[v711] & v707), (unsigned __int8 *)((unint64_t)&v50[v711] & v707), v762);
          unint64_t v190 = (((unint64_t)&a1[v711] & v707) + v744 + v30) & v749;
          unint64_t v191 = (((unint64_t)&v50[v711] & v707) + v744 + v30) & v749;
          v745 = *(void (**)(unint64_t, unint64_t, uint64_t))(v714 + 16);
          v745(v190, v191, v715);
          unint64_t v192 = (void *)((v712 + v190) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v193 = (void *)((v712 + v191) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v192 = *v193;
          unint64_t v194 = ((unint64_t)v192 + v713) & v752;
          unint64_t v195 = ((unint64_t)v193 + v713) & v752;
          uint64_t v196 = *(void (**)(unint64_t, unint64_t, uint64_t))(v717 + 16);
          swift_bridgeObjectRetain();
          v767 = v196;
          v196(v194, v195, v719);
          int v197 = (void *)((v716 + v195) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v198 = (void *)((v716 + v194) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v198 = *v197;
          unint64_t v199 = (void *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v200 = (void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v199 = *v200;
          v199[1] = v200[1];
          unint64_t v201 = (void *)(v189 + v190);
          unint64_t v686 = v189;
          *unint64_t v201 = *(void *)(v189 + v191);
          v201[1] = *(void *)(v189 + v191 + 8);
          uint64_t v202 = (v781 + v189 + v190) & v747;
          uint64_t v203 = (v781 + v189 + v191) & v747;
          *(unsigned char *)uint64_t v202 = *(unsigned char *)v203;
          uint64_t v204 = v202 | 4;
          int v205 = *(_DWORD *)(v203 | 4);
          *(unsigned char *)(v204 + 4) = *(unsigned char *)((v203 | 4) + 4);
          *(_DWORD *)uint64_t v204 = v205;
          *(_WORD *)(v202 + 10) = *(_WORD *)(v203 + 0xA);
          uint64_t v732 = v202;
          uint64_t v206 = (v740 + v202) & v761;
          uint64_t v730 = v203;
          uint64_t v207 = (v740 + v203) & v761;
          unint64_t v208 = *(void (**)(uint64_t, uint64_t, uint64_t))(v737 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v208(v206, v207, v770);
          uint64_t v209 = (v741 + v206) & v761;
          uint64_t v210 = (v741 + v207) & v761;
          v208(v209, v210, v770);
          unint64_t v211 = (unsigned char *)(v209 + v736);
          *unint64_t v211 = *(unsigned char *)(v210 + v736);
          v211[1] = *(unsigned char *)(v210 + v736 + 1);
          v211[2] = *(unsigned char *)(v210 + v736 + 2);
          v211[3] = *(unsigned char *)(v210 + v736 + 3);
          v211[4] = *(unsigned char *)(v210 + v736 + 4);
          unint64_t v212 = (v209 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v213 = (v210 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v212 = *(void *)v213;
          *(void *)(v212 + 8) = *(void *)(v213 + 8);
          *(unsigned char *)(v212 + 16) = *(unsigned char *)(v213 + 16);
          *(unsigned char *)(v212 + 17) = *(unsigned char *)(v213 + 17);
          *(unsigned char *)(v212 + 18) = *(unsigned char *)(v213 + 18);
          *(unsigned char *)(v212 + 19) = *(unsigned char *)(v213 + 19);
          unint64_t v214 = (v212 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v215 = (v213 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v214 = *(void *)v215;
          *(unsigned char *)(v214 + 8) = *(unsigned char *)(v215 + 8);
          *(unsigned char *)(v214 + 9) = *(unsigned char *)(v215 + 9);
          *(unsigned char *)(v214 + 10) = *(unsigned char *)(v215 + 10);
          *(unsigned char *)(v214 + 11) = *(unsigned char *)(v215 + 11);
          *(unsigned char *)(v214 + 12) = *(unsigned char *)(v215 + 12);
          unint64_t v216 = (void *)((v213 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v217 = (void *)((v212 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v217 = *v216;
          unint64_t v218 = ((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v219 = ((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v218 = *(void *)v219;
          *(unsigned char *)(v218 + 8) = *(unsigned char *)(v219 + 8);
          *(unsigned char *)(v218 + 9) = *(unsigned char *)(v219 + 9);
          unint64_t v220 = (void *)((v742 + v218) & v761);
          unint64_t v221 = (const void *)((v742 + v219) & v761);
          unint64_t v222 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v737 + 48);
          swift_bridgeObjectRetain();
          v735 = v222;
          v773 = v208;
          if (v222(v221, 1, v770))
          {
            memcpy(v220, v221, __n);
          }
          else
          {
            v208((uint64_t)v220, (uint64_t)v221, v770);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v220, 0, 1, v770);
          }
          unint64_t v297 = (void *)(((unint64_t)v220 + v743) & 0xFFFFFFFFFFFFFFF8);
          int v298 = (void *)(((unint64_t)v221 + v743) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v297 = *v298;
          unint64_t v299 = ((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v300 = ((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v301 = *(void *)v300;
          *(unsigned char *)(v299 + 8) = *(unsigned char *)(v300 + 8);
          *(void *)unint64_t v299 = v301;
          int v302 = (void *)(((unint64_t)v297 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v303 = (void *)(((unint64_t)v298 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v302 = *v303;
          unint64_t v304 = ((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v305 = (uint64_t *)(((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v306 = v305[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v307 = v747;
          if ((v306 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v304 = *(_OWORD *)v305;
          }
          else
          {
            uint64_t v369 = *v305;
            sub_10001EBB0(*v305, v306);
            *(void *)unint64_t v304 = v369;
            *(void *)(v304 + 8) = v306;
          }
          unint64_t v370 = (v304 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v371 = ((unint64_t)v305 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v372 = *(void *)v371;
          *(unsigned char *)(v370 + 8) = *(unsigned char *)(v371 + 8);
          *(void *)unint64_t v370 = v372;
          *(unsigned char *)(v370 + 9) = *(unsigned char *)(v371 + 9);
          unint64_t v373 = (v370 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v374 = (v371 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v375 = *(_DWORD *)v374;
          *(unsigned char *)(v373 + 4) = *(unsigned char *)(v374 + 4);
          *(_DWORD *)unint64_t v373 = v375;
          id v376 = (void *)((v370 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v377 = (void *)((v371 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v376 = *v377;
          v376[1] = v377[1];
          unint64_t v378 = v732 + v758;
          uint64_t v379 = (long long *)(v730 + v758);
          unint64_t v380 = *(void *)(v730 + v758 + 16);
          if (v380 >= 0xFFFFFFFF) {
            LODWORD(v380) = -1;
          }
          int v381 = v380 - 1;
          swift_bridgeObjectRetain();
          if (v381 < 0)
          {
            *(void *)unint64_t v378 = *(void *)v379;
            *(unsigned char *)(v378 + 8) = *((unsigned char *)v379 + 8);
            *(unsigned char *)(v378 + 9) = *((unsigned char *)v379 + 9);
            uint64_t v428 = *((void *)v379 + 2);
            swift_errorRetain();
            *(void *)(v378 + 16) = v428;
            uint64_t v429 = *((void *)v379 + 3);
            swift_errorRetain();
            *(void *)(v378 + 24) = v429;
            *(unsigned char *)(v378 + 32) = *((unsigned char *)v379 + 32);
            *(unsigned char *)(v378 + 33) = *((unsigned char *)v379 + 33);
            *(unsigned char *)(v378 + 34) = *((unsigned char *)v379 + 34);
            *(void *)(v378 + 40) = *((void *)v379 + 5);
            *(void *)(v378 + 48) = *((void *)v379 + 6);
            *(void *)(v378 + 56) = *((void *)v379 + 7);
            *(void *)(v378 + 64) = *((void *)v379 + 8);
            *(unsigned char *)(v378 + 72) = *((unsigned char *)v379 + 72);
            *(void *)(v378 + 80) = *((void *)v379 + 10);
            *(void *)(v378 + 88) = *((void *)v379 + 11);
            v733 = (void *)*((void *)v379 + 12);
            *(void *)(v378 + 96) = v733;
            *(unsigned char *)(v378 + 104) = *((unsigned char *)v379 + 104);
            *(unsigned char *)(v378 + 105) = *((unsigned char *)v379 + 105);
            *(void *)(v378 + 112) = *((void *)v379 + 14);
            *(void *)(v378 + 120) = *((void *)v379 + 15);
            *(void *)(v378 + 128) = *((void *)v379 + 16);
            *(void *)(v378 + 136) = *((void *)v379 + 17);
            *(void *)(v378 + 144) = *((void *)v379 + 18);
            *(void *)(v378 + 152) = *((void *)v379 + 19);
            *(void *)(v378 + 160) = *((void *)v379 + 20);
            *(void *)(v378 + 168) = *((void *)v379 + 21);
            *(unsigned char *)(v378 + 176) = *((unsigned char *)v379 + 176);
            *(void *)(v378 + 184) = *((void *)v379 + 23);
            uint64_t v430 = *((void *)v379 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v431 = v733;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v430)
            {
              *(void *)(v378 + 192) = v430;
              *(void *)(v378 + 200) = *((void *)v379 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v378 + 192) = v379[12];
            }
            uint64_t v50 = a2;
            uint64_t v394 = v770;
            uint64_t v307 = v747;
            *(void *)(v378 + 208) = *((void *)v379 + 26);
            *(void *)(v378 + 216) = *((void *)v379 + 27);
            *(void *)(v378 + 224) = *((void *)v379 + 28);
            *(void *)(v378 + 232) = *((void *)v379 + 29);
            *(void *)(v378 + 240) = *((void *)v379 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v382 = *v379;
            long long v383 = v379[1];
            long long v384 = v379[3];
            *(_OWORD *)(v378 + 32) = v379[2];
            *(_OWORD *)(v378 + 48) = v384;
            *(_OWORD *)unint64_t v378 = v382;
            *(_OWORD *)(v378 + 16) = v383;
            long long v385 = v379[4];
            long long v386 = v379[5];
            long long v387 = v379[7];
            *(_OWORD *)(v378 + 96) = v379[6];
            *(_OWORD *)(v378 + 112) = v387;
            *(_OWORD *)(v378 + 64) = v385;
            *(_OWORD *)(v378 + 80) = v386;
            long long v388 = v379[8];
            long long v389 = v379[9];
            long long v390 = v379[11];
            *(_OWORD *)(v378 + 160) = v379[10];
            *(_OWORD *)(v378 + 176) = v390;
            *(_OWORD *)(v378 + 128) = v388;
            *(_OWORD *)(v378 + 144) = v389;
            long long v391 = v379[12];
            long long v392 = v379[13];
            long long v393 = v379[14];
            *(void *)(v378 + 240) = *((void *)v379 + 30);
            *(_OWORD *)(v378 + 208) = v392;
            *(_OWORD *)(v378 + 224) = v393;
            *(_OWORD *)(v378 + 192) = v391;
            uint64_t v394 = v770;
          }
          uint64_t v464 = (_OWORD *)((v378 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v465 = (long long *)(((unint64_t)v379 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v466 = *v465;
          *(_OWORD *)((char *)v464 + 9) = *(long long *)((char *)v465 + 9);
          *uint64_t v464 = v466;
          unint64_t v467 = (v378 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v468 = ((unint64_t)v379 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v469 = *(_OWORD *)v468;
          *(unsigned char *)(v467 + 16) = *(unsigned char *)(v468 + 16);
          *(_OWORD *)unint64_t v467 = v469;
          uint64_t v470 = (void *)((v378 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v471 = ((unint64_t)v379 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v472 = *(void *)v471;
          v471 += 15;
          *uint64_t v470 = v472;
          uint64_t v473 = (void *)(((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v474 = *(void *)(v471 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v475 = *(void *)((v471 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v474, v475);
          *uint64_t v473 = v474;
          v473[1] = v475;
          uint64_t v2 = a1;
          v769((unint64_t)&a1[v682] & v698, (unint64_t)&v50[v682] & v698, v762);
          unint64_t v779 = (unint64_t)&a1[v682] & v698;
          unint64_t v476 = (v711 + v779) & v707;
          unint64_t v771 = (unint64_t)&v50[v682] & v698;
          unint64_t v477 = (v711 + v771) & v707;
          v769(v476, v477, v762);
          unint64_t v478 = (v700 + v476) & v749;
          unint64_t v479 = (v700 + v477) & v749;
          v745(v478, v479, v715);
          unint64_t v480 = (void *)((v712 + v478) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v481 = (void *)((v712 + v479) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v480 = *v481;
          unint64_t v482 = ((unint64_t)v480 + v713) & v752;
          unint64_t v483 = ((unint64_t)v481 + v713) & v752;
          swift_bridgeObjectRetain();
          v767(v482, v483, v719);
          long long v484 = (void *)((v716 + v482) & 0xFFFFFFFFFFFFFFF8);
          long long v485 = (void *)((v716 + v483) & 0xFFFFFFFFFFFFFFF8);
          *long long v484 = *v485;
          long long v486 = (void *)(((unint64_t)v484 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v487 = (void *)(((unint64_t)v485 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v486 = *v487;
          v486[1] = v487[1];
          long long v488 = (void *)(v478 + v686);
          *long long v488 = *(void *)(v479 + v686);
          v488[1] = *(void *)(v479 + v686 + 8);
          uint64_t v489 = (v781 + v478 + v686) & v307;
          uint64_t v490 = (v781 + v479 + v686) & v307;
          *(unsigned char *)uint64_t v489 = *(unsigned char *)v490;
          uint64_t v491 = v489 | 4;
          int v492 = *(_DWORD *)(v490 | 4);
          *(unsigned char *)(v491 + 4) = *(unsigned char *)((v490 | 4) + 4);
          *(_DWORD *)uint64_t v491 = v492;
          *(_WORD *)(v489 + 10) = *(_WORD *)(v490 + 10);
          uint64_t v493 = (v740 + v489) & v761;
          uint64_t v494 = (v740 + v490) & v761;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v773(v493, v494, v394);
          uint64_t v495 = (v741 + v493) & v761;
          uint64_t v496 = (v741 + v494) & v761;
          v773(v495, v496, v394);
          unint64_t v497 = (unsigned char *)(v495 + v736);
          *unint64_t v497 = *(unsigned char *)(v496 + v736);
          v497[1] = *(unsigned char *)(v496 + v736 + 1);
          v497[2] = *(unsigned char *)(v496 + v736 + 2);
          v497[3] = *(unsigned char *)(v496 + v736 + 3);
          v497[4] = *(unsigned char *)(v496 + v736 + 4);
          unint64_t v498 = (v495 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v499 = (v496 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v498 = *(void *)v499;
          *(void *)(v498 + 8) = *(void *)(v499 + 8);
          *(unsigned char *)(v498 + 16) = *(unsigned char *)(v499 + 16);
          *(unsigned char *)(v498 + 17) = *(unsigned char *)(v499 + 17);
          *(unsigned char *)(v498 + 18) = *(unsigned char *)(v499 + 18);
          *(unsigned char *)(v498 + 19) = *(unsigned char *)(v499 + 19);
          unint64_t v500 = (v498 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v501 = (v499 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v500 = *(void *)v501;
          *(unsigned char *)(v500 + 8) = *(unsigned char *)(v501 + 8);
          *(unsigned char *)(v500 + 9) = *(unsigned char *)(v501 + 9);
          *(unsigned char *)(v500 + 10) = *(unsigned char *)(v501 + 10);
          *(unsigned char *)(v500 + 11) = *(unsigned char *)(v501 + 11);
          *(unsigned char *)(v500 + 12) = *(unsigned char *)(v501 + 12);
          long long v502 = (void *)((v498 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v503 = (void *)((v499 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v502 = *v503;
          unint64_t v504 = ((unint64_t)v502 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v505 = ((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v504 = *(void *)v505;
          *(unsigned char *)(v504 + 8) = *(unsigned char *)(v505 + 8);
          *(unsigned char *)(v504 + 9) = *(unsigned char *)(v505 + 9);
          unint64_t v506 = (void *)((v742 + v504) & v761);
          long long v507 = (const void *)((v742 + v505) & v761);
          swift_bridgeObjectRetain();
          if (v735(v507, 1, v394))
          {
            memcpy(v506, v507, __n);
          }
          else
          {
            v773((uint64_t)v506, (uint64_t)v507, v394);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v506, 0, 1, v394);
          }
          uint64_t v41 = v696;
          unint64_t v508 = (void *)(((unint64_t)v506 + v743) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v509 = (void *)(((unint64_t)v507 + v743) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v508 = *v509;
          unint64_t v510 = ((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v511 = ((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v512 = *(void *)v511;
          *(unsigned char *)(v510 + 8) = *(unsigned char *)(v511 + 8);
          *(void *)unint64_t v510 = v512;
          unint64_t v513 = (void *)(((unint64_t)v508 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v514 = (void *)(((unint64_t)v509 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v513 = *v514;
          unint64_t v515 = ((unint64_t)v513 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v516 = (uint64_t *)(((unint64_t)v514 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v517 = v516[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v517 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v515 = *(_OWORD *)v516;
          }
          else
          {
            uint64_t v518 = *v516;
            sub_10001EBB0(*v516, v517);
            *(void *)unint64_t v515 = v518;
            *(void *)(v515 + 8) = v517;
          }
          unint64_t v519 = (v515 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v520 = ((unint64_t)v516 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v521 = *(void *)v520;
          *(unsigned char *)(v519 + 8) = *(unsigned char *)(v520 + 8);
          *(void *)unint64_t v519 = v521;
          *(unsigned char *)(v519 + 9) = *(unsigned char *)(v520 + 9);
          unint64_t v522 = (v519 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v523 = (v520 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v524 = *(_DWORD *)v523;
          *(unsigned char *)(v522 + 4) = *(unsigned char *)(v523 + 4);
          *(_DWORD *)unint64_t v522 = v524;
          unint64_t v525 = (void *)((v519 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v526 = (void *)((v520 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v525 = *v526;
          v525[1] = v526[1];
          unint64_t v527 = v489 + v758;
          unint64_t v528 = (long long *)(v490 + v758);
          unint64_t v529 = *(void *)(v490 + v758 + 16);
          if (v529 >= 0xFFFFFFFF) {
            LODWORD(v529) = -1;
          }
          int v530 = v529 - 1;
          swift_bridgeObjectRetain();
          if (v530 < 0)
          {
            *(void *)unint64_t v527 = *(void *)v528;
            *(unsigned char *)(v527 + 8) = *((unsigned char *)v528 + 8);
            *(unsigned char *)(v527 + 9) = *((unsigned char *)v528 + 9);
            uint64_t v543 = *((void *)v528 + 2);
            swift_errorRetain();
            *(void *)(v527 + 16) = v543;
            uint64_t v544 = *((void *)v528 + 3);
            swift_errorRetain();
            *(void *)(v527 + 24) = v544;
            *(unsigned char *)(v527 + 32) = *((unsigned char *)v528 + 32);
            *(unsigned char *)(v527 + 33) = *((unsigned char *)v528 + 33);
            *(unsigned char *)(v527 + 34) = *((unsigned char *)v528 + 34);
            *(void *)(v527 + 40) = *((void *)v528 + 5);
            *(void *)(v527 + 48) = *((void *)v528 + 6);
            *(void *)(v527 + 56) = *((void *)v528 + 7);
            *(void *)(v527 + 64) = *((void *)v528 + 8);
            *(unsigned char *)(v527 + 72) = *((unsigned char *)v528 + 72);
            *(void *)(v527 + 80) = *((void *)v528 + 10);
            *(void *)(v527 + 88) = *((void *)v528 + 11);
            v786 = (void *)*((void *)v528 + 12);
            *(void *)(v527 + 96) = v786;
            *(unsigned char *)(v527 + 104) = *((unsigned char *)v528 + 104);
            *(unsigned char *)(v527 + 105) = *((unsigned char *)v528 + 105);
            *(void *)(v527 + 112) = *((void *)v528 + 14);
            *(void *)(v527 + 120) = *((void *)v528 + 15);
            *(void *)(v527 + 128) = *((void *)v528 + 16);
            *(void *)(v527 + 136) = *((void *)v528 + 17);
            *(void *)(v527 + 144) = *((void *)v528 + 18);
            *(void *)(v527 + 152) = *((void *)v528 + 19);
            *(void *)(v527 + 160) = *((void *)v528 + 20);
            *(void *)(v527 + 168) = *((void *)v528 + 21);
            *(unsigned char *)(v527 + 176) = *((unsigned char *)v528 + 176);
            *(void *)(v527 + 184) = *((void *)v528 + 23);
            uint64_t v545 = *((void *)v528 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v546 = v786;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v545)
            {
              *(void *)(v527 + 192) = v545;
              *(void *)(v527 + 200) = *((void *)v528 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v527 + 192) = v528[12];
            }
            uint64_t v2 = a1;
            uint64_t v41 = v696;
            *(void *)(v527 + 208) = *((void *)v528 + 26);
            *(void *)(v527 + 216) = *((void *)v528 + 27);
            *(void *)(v527 + 224) = *((void *)v528 + 28);
            *(void *)(v527 + 232) = *((void *)v528 + 29);
            *(void *)(v527 + 240) = *((void *)v528 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v531 = *v528;
            long long v532 = v528[1];
            long long v533 = v528[3];
            *(_OWORD *)(v527 + 32) = v528[2];
            *(_OWORD *)(v527 + 48) = v533;
            *(_OWORD *)unint64_t v527 = v531;
            *(_OWORD *)(v527 + 16) = v532;
            long long v534 = v528[4];
            long long v535 = v528[5];
            long long v536 = v528[7];
            *(_OWORD *)(v527 + 96) = v528[6];
            *(_OWORD *)(v527 + 112) = v536;
            *(_OWORD *)(v527 + 64) = v534;
            *(_OWORD *)(v527 + 80) = v535;
            long long v537 = v528[8];
            long long v538 = v528[9];
            long long v539 = v528[11];
            *(_OWORD *)(v527 + 160) = v528[10];
            *(_OWORD *)(v527 + 176) = v539;
            *(_OWORD *)(v527 + 128) = v537;
            *(_OWORD *)(v527 + 144) = v538;
            long long v540 = v528[12];
            long long v541 = v528[13];
            long long v542 = v528[14];
            *(void *)(v527 + 240) = *((void *)v528 + 30);
            *(_OWORD *)(v527 + 208) = v541;
            *(_OWORD *)(v527 + 224) = v542;
            *(_OWORD *)(v527 + 192) = v540;
          }
          v630 = (_OWORD *)((v527 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v631 = (long long *)(((unint64_t)v528 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v632 = *v631;
          *(_OWORD *)((char *)v630 + 9) = *(long long *)((char *)v631 + 9);
          _OWORD *v630 = v632;
          unint64_t v633 = (v527 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v634 = ((unint64_t)v528 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v635 = *(_OWORD *)v634;
          *(unsigned char *)(v633 + 16) = *(unsigned char *)(v634 + 16);
          *(_OWORD *)unint64_t v633 = v635;
          v636 = (void *)((v527 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v637 = ((unint64_t)v528 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v638 = *(void *)v637;
          v637 += 15;
          void *v636 = v638;
          uint64_t v639 = (void *)(((unint64_t)v636 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v640 = *(void *)(v637 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v641 = *(void *)((v637 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v640, v641);
          *uint64_t v639 = v640;
          v639[1] = v641;
          unint64_t v642 = (void *)((v672 + v771) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v643 = (void *)((v672 + v779) & 0xFFFFFFFFFFFFFFF8);
          void *v643 = *v642;
          uint64_t v644 = (void *)(((unint64_t)v643 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v645 = (void *)(((unint64_t)v642 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v644 = *v645;
          v644[1] = v645[1];
          char v226 = 1;
          unint64_t v40 = v690;
          char v225 = 1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16))(a1, v50, v762);
          a1[v744] = v50[v744];
          unint64_t v223 = (unint64_t)&a1[v744] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v224 = (unint64_t)&v50[v744] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v223 + 8) = *(void *)(v224 + 8);
          *(void *)(v223 + 16) = *(void *)(v224 + 16);
          char v225 = 1;
          char v226 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16))(a1, v50, v762);
          uint64_t v227 = (void *)((unint64_t)&a1[v744 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v228 = (void *)((unint64_t)&v50[v744 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v227 = *v228;
          v227[1] = v228[1];
          char v225 = 1;
          char v226 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16))(a1, v50, v762);
          a1[v744] = v50[v744];
          unint64_t v229 = (unint64_t)&a1[v744] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v230 = (unint64_t)&v50[v744] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v229 + 8) = *(void *)(v230 + 8);
          *(void *)(v229 + 16) = *(void *)(v230 + 16);
          char v225 = 1;
          char v226 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16))(a1, v50, v762);
          unint64_t v231 = (void *)((unint64_t)&a1[v744 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v232 = (void *)((unint64_t)&v50[v744 + 7] & 0xFFFFFFFFFFFFFFF8);
          void *v231 = *v232;
          v231[1] = v232[1];
          char v225 = 1;
LABEL_160:
          char v226 = 5;
          break;
        default:
          unint64_t v689 = v40;
          unint64_t v756 = v46;
          uint64_t v694 = v41;
          unint64_t v117 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v764 + 16);
          v117(a1, v50, v762);
          unint64_t v118 = v31;
          v117((unsigned __int8 *)((unint64_t)&a1[v711] & v707), (unsigned __int8 *)((unint64_t)&v50[v711] & v707), v762);
          unint64_t v119 = (((unint64_t)&a1[v711] & v707) + v744 + v30) & v749;
          unint64_t v120 = (((unint64_t)&v50[v711] & v707) + v744 + v30) & v749;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v714 + 16))(v119, v120, v715);
          unint64_t v121 = (void *)((v712 + v119) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v122 = (void *)((v712 + v120) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v121 = *v122;
          unint64_t v123 = ((unint64_t)v121 + v713) & v752;
          unint64_t v124 = ((unint64_t)v122 + v713) & v752;
          unint64_t v125 = *(void (**)(unint64_t, unint64_t, uint64_t))(v717 + 16);
          swift_bridgeObjectRetain();
          v125(v123, v124, v719);
          unint64_t v126 = (void *)((v716 + v124) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v127 = (void *)((v716 + v123) & 0xFFFFFFFFFFFFFFF8);
          void *v127 = *v126;
          unint64_t v128 = (void *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v129 = (void *)(((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v128 = *v129;
          v128[1] = v129[1];
          uint64_t v130 = (void *)(v118 + v119);
          *uint64_t v130 = *(void *)(v118 + v120);
          v130[1] = *(void *)(v118 + v120 + 8);
          uint64_t v131 = (v781 + v118 + v119) & v747;
          uint64_t v132 = (v781 + v118 + v120) & v747;
          *(unsigned char *)uint64_t v131 = *(unsigned char *)v132;
          uint64_t v133 = v131 | 4;
          int v134 = *(_DWORD *)(v132 | 4);
          *(unsigned char *)(v133 + 4) = *(unsigned char *)((v132 | 4) + 4);
          *(_DWORD *)uint64_t v133 = v134;
          *(_WORD *)(v131 + 10) = *(_WORD *)(v132 + 0xA);
          uint64_t v782 = v131;
          uint64_t v135 = (v740 + v131) & v761;
          uint64_t v776 = v132;
          uint64_t v136 = (v740 + v132) & v761;
          unint64_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v737 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v137(v135, v136, v770);
          uint64_t v138 = (v741 + v135) & v761;
          uint64_t v139 = (v741 + v136) & v761;
          v137(v138, v139, v770);
          unint64_t v140 = (unsigned char *)(v138 + v736);
          *unint64_t v140 = *(unsigned char *)(v139 + v736);
          v140[1] = *(unsigned char *)(v139 + v736 + 1);
          v140[2] = *(unsigned char *)(v139 + v736 + 2);
          v140[3] = *(unsigned char *)(v139 + v736 + 3);
          v140[4] = *(unsigned char *)(v139 + v736 + 4);
          unint64_t v141 = (v138 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v142 = (v139 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v141 = *(void *)v142;
          *(void *)(v141 + 8) = *(void *)(v142 + 8);
          *(unsigned char *)(v141 + 16) = *(unsigned char *)(v142 + 16);
          *(unsigned char *)(v141 + 17) = *(unsigned char *)(v142 + 17);
          *(unsigned char *)(v141 + 18) = *(unsigned char *)(v142 + 18);
          *(unsigned char *)(v141 + 19) = *(unsigned char *)(v142 + 19);
          unint64_t v143 = (v141 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v144 = (v142 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v143 = *(void *)v144;
          *(unsigned char *)(v143 + 8) = *(unsigned char *)(v144 + 8);
          *(unsigned char *)(v143 + 9) = *(unsigned char *)(v144 + 9);
          *(unsigned char *)(v143 + 10) = *(unsigned char *)(v144 + 10);
          *(unsigned char *)(v143 + 11) = *(unsigned char *)(v144 + 11);
          *(unsigned char *)(v143 + 12) = *(unsigned char *)(v144 + 12);
          uint64_t v145 = (void *)((v142 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v146 = (void *)((v141 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v146 = *v145;
          unint64_t v147 = ((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v148 = ((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v147 = *(void *)v148;
          *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
          *(unsigned char *)(v147 + 9) = *(unsigned char *)(v148 + 9);
          uint64_t v149 = (void *)((v742 + v147) & v761);
          uint64_t v150 = (const void *)((v742 + v148) & v761);
          int v151 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v737 + 48);
          swift_bridgeObjectRetain();
          if (v151(v150, 1, v770))
          {
            memcpy(v149, v150, __n);
          }
          else
          {
            v137((uint64_t)v149, (uint64_t)v150, v770);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v149, 0, 1, v770);
          }
          unint64_t v275 = (void *)(((unint64_t)v149 + v743) & 0xFFFFFFFFFFFFFFF8);
          int v276 = (void *)(((unint64_t)v150 + v743) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v275 = *v276;
          unint64_t v277 = ((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v278 = ((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v279 = *(void *)v278;
          *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
          *(void *)unint64_t v277 = v279;
          long long v280 = (void *)(((unint64_t)v275 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v281 = (void *)(((unint64_t)v276 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v280 = *v281;
          unint64_t v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v283 = (uint64_t *)(((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v284 = v283[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          long long v285 = a2;
          if ((v284 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v282 = *(_OWORD *)v283;
          }
          else
          {
            uint64_t v319 = *v283;
            sub_10001EBB0(*v283, v284);
            *(void *)unint64_t v282 = v319;
            *(void *)(v282 + 8) = v284;
          }
          unint64_t v320 = (v282 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v321 = ((unint64_t)v283 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v322 = *(void *)v321;
          *(unsigned char *)(v320 + 8) = *(unsigned char *)(v321 + 8);
          *(void *)unint64_t v320 = v322;
          *(unsigned char *)(v320 + 9) = *(unsigned char *)(v321 + 9);
          unint64_t v323 = (v320 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v324 = (v321 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v325 = *(_DWORD *)v324;
          *(unsigned char *)(v323 + 4) = *(unsigned char *)(v324 + 4);
          *(_DWORD *)unint64_t v323 = v325;
          unint64_t v326 = (void *)((v320 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v327 = (void *)((v321 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v326 = *v327;
          v326[1] = v327[1];
          unint64_t v328 = v782 + v756;
          uint64_t v329 = (long long *)(v776 + v756);
          unint64_t v330 = *(void *)(v776 + v756 + 16);
          if (v330 >= 0xFFFFFFFF) {
            LODWORD(v330) = -1;
          }
          int v331 = v330 - 1;
          swift_bridgeObjectRetain();
          uint64_t v41 = v694;
          if (v331 < 0)
          {
            *(void *)unint64_t v328 = *(void *)v329;
            *(unsigned char *)(v328 + 8) = *((unsigned char *)v329 + 8);
            *(unsigned char *)(v328 + 9) = *((unsigned char *)v329 + 9);
            uint64_t v420 = *((void *)v329 + 2);
            swift_errorRetain();
            *(void *)(v328 + 16) = v420;
            uint64_t v421 = *((void *)v329 + 3);
            swift_errorRetain();
            *(void *)(v328 + 24) = v421;
            *(unsigned char *)(v328 + 32) = *((unsigned char *)v329 + 32);
            *(unsigned char *)(v328 + 33) = *((unsigned char *)v329 + 33);
            *(unsigned char *)(v328 + 34) = *((unsigned char *)v329 + 34);
            *(void *)(v328 + 40) = *((void *)v329 + 5);
            *(void *)(v328 + 48) = *((void *)v329 + 6);
            *(void *)(v328 + 56) = *((void *)v329 + 7);
            *(void *)(v328 + 64) = *((void *)v329 + 8);
            *(unsigned char *)(v328 + 72) = *((unsigned char *)v329 + 72);
            *(void *)(v328 + 80) = *((void *)v329 + 10);
            *(void *)(v328 + 88) = *((void *)v329 + 11);
            v784 = (void *)*((void *)v329 + 12);
            *(void *)(v328 + 96) = v784;
            *(unsigned char *)(v328 + 104) = *((unsigned char *)v329 + 104);
            *(unsigned char *)(v328 + 105) = *((unsigned char *)v329 + 105);
            *(void *)(v328 + 112) = *((void *)v329 + 14);
            *(void *)(v328 + 120) = *((void *)v329 + 15);
            *(void *)(v328 + 128) = *((void *)v329 + 16);
            *(void *)(v328 + 136) = *((void *)v329 + 17);
            *(void *)(v328 + 144) = *((void *)v329 + 18);
            *(void *)(v328 + 152) = *((void *)v329 + 19);
            *(void *)(v328 + 160) = *((void *)v329 + 20);
            *(void *)(v328 + 168) = *((void *)v329 + 21);
            *(unsigned char *)(v328 + 176) = *((unsigned char *)v329 + 176);
            *(void *)(v328 + 184) = *((void *)v329 + 23);
            uint64_t v422 = *((void *)v329 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v423 = v784;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v422)
            {
              *(void *)(v328 + 192) = v422;
              *(void *)(v328 + 200) = *((void *)v329 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v328 + 192) = v329[12];
            }
            uint64_t v2 = a1;
            uint64_t v41 = v694;
            long long v285 = a2;
            *(void *)(v328 + 208) = *((void *)v329 + 26);
            *(void *)(v328 + 216) = *((void *)v329 + 27);
            *(void *)(v328 + 224) = *((void *)v329 + 28);
            *(void *)(v328 + 232) = *((void *)v329 + 29);
            *(void *)(v328 + 240) = *((void *)v329 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v332 = *v329;
            long long v333 = v329[1];
            long long v334 = v329[3];
            *(_OWORD *)(v328 + 32) = v329[2];
            *(_OWORD *)(v328 + 48) = v334;
            *(_OWORD *)unint64_t v328 = v332;
            *(_OWORD *)(v328 + 16) = v333;
            long long v335 = v329[4];
            long long v336 = v329[5];
            long long v337 = v329[7];
            *(_OWORD *)(v328 + 96) = v329[6];
            *(_OWORD *)(v328 + 112) = v337;
            *(_OWORD *)(v328 + 64) = v335;
            *(_OWORD *)(v328 + 80) = v336;
            long long v338 = v329[8];
            long long v339 = v329[9];
            long long v340 = v329[11];
            *(_OWORD *)(v328 + 160) = v329[10];
            *(_OWORD *)(v328 + 176) = v340;
            *(_OWORD *)(v328 + 128) = v338;
            *(_OWORD *)(v328 + 144) = v339;
            long long v341 = v329[12];
            long long v342 = v329[13];
            long long v343 = v329[14];
            *(void *)(v328 + 240) = *((void *)v329 + 30);
            *(_OWORD *)(v328 + 208) = v342;
            *(_OWORD *)(v328 + 224) = v343;
            *(_OWORD *)(v328 + 192) = v341;
          }
          uint64_t v436 = (_OWORD *)((v328 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v437 = (long long *)(((unint64_t)v329 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v438 = *v437;
          *(_OWORD *)((char *)v436 + 9) = *(long long *)((char *)v437 + 9);
          *uint64_t v436 = v438;
          unint64_t v439 = (v328 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v440 = ((unint64_t)v329 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v441 = *(_OWORD *)v440;
          *(unsigned char *)(v439 + 16) = *(unsigned char *)(v440 + 16);
          *(_OWORD *)unint64_t v439 = v441;
          uint64_t v442 = (void *)((v328 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v443 = ((unint64_t)v329 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v444 = *(void *)v443;
          v443 += 15;
          *uint64_t v442 = v444;
          uint64_t v445 = (void *)(((unint64_t)v442 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v446 = *(void *)(v443 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v447 = *(void *)((v443 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v446, v447);
          char v226 = 0;
          *uint64_t v445 = v446;
          v445[1] = v447;
          unint64_t v448 = (void *)((unint64_t)&v2[v699 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v449 = (void *)((unint64_t)&v285[v699 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v448 = *v449;
          v448[1] = v449[1];
          char v225 = 1;
          unint64_t v40 = v689;
          break;
      }
    }
    else
    {
LABEL_140:
      unint64_t v40 = v772;
      unsigned int v152 = v50[v772];
      if (v152 >= 6 && v772 != 0) {
        unsigned int v152 = *(_DWORD *)v50 + 6;
      }
      switch(v152)
      {
        case 1u:
          unint64_t v759 = v46;
          uint64_t v677 = v47;
          uint64_t v697 = v41;
          unint64_t v233 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16);
          v233(a1, v50, AssociatedTypeWitness);
          v763 = (void (*)(unint64_t, unint64_t, uint64_t))v233;
          v233((unsigned __int8 *)((unint64_t)&a1[v724] & v708), (unsigned __int8 *)((unint64_t)&v50[v724] & v708), AssociatedTypeWitness);
          unint64_t v234 = (((unint64_t)&a1[v724] & v708) + v738 + v775) & v709;
          unint64_t v235 = (((unint64_t)&v50[v724] & v708) + v738 + v775) & v709;
          v750 = *(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16);
          v750(v234, v235, v727);
          unint64_t v236 = (void *)((v723 + v234) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v237 = (void *)((v723 + v235) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v236 = *v237;
          unint64_t v238 = ((unint64_t)v236 + v725) & v710;
          unint64_t v239 = ((unint64_t)v237 + v725) & v710;
          unint64_t v240 = *(void (**)(unint64_t, unint64_t, uint64_t))(v729 + 16);
          swift_bridgeObjectRetain();
          v753 = v240;
          v240(v238, v239, v731);
          unint64_t v241 = (void *)((v728 + v239) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v242 = (void *)((v728 + v238) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v242 = *v241;
          int v243 = (void *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v244 = (void *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v243 = *v244;
          v243[1] = v244[1];
          unint64_t v245 = (void *)(v734 + v234);
          *unint64_t v245 = *(void *)(v734 + v235);
          v245[1] = *(void *)(v734 + v235 + 8);
          unint64_t v246 = (v781 + v734 + v234) & v747;
          unint64_t v247 = (v781 + v734 + v235) & v747;
          *(unsigned char *)unint64_t v246 = *(unsigned char *)v247;
          uint64_t v248 = v246 | 4;
          int v249 = *(_DWORD *)(v247 | 4);
          *(unsigned char *)(v248 + 4) = *(unsigned char *)((v247 | 4) + 4);
          *(_DWORD *)uint64_t v248 = v249;
          *(_WORD *)(v246 + 10) = *(_WORD *)(v247 + 0xA);
          unint64_t v720 = v246;
          unint64_t v250 = (v740 + v246) & v761;
          unint64_t v718 = v247;
          unint64_t v251 = (v740 + v247) & v761;
          unint64_t v252 = *(void (**)(unint64_t, unint64_t, uint64_t))(v737 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v252(v250, v251, v770);
          unint64_t v253 = (v741 + v250) & v761;
          unint64_t v254 = (v741 + v251) & v761;
          v252(v253, v254, v770);
          unint64_t v255 = (unsigned char *)(v253 + v736);
          *unint64_t v255 = *(unsigned char *)(v254 + v736);
          v255[1] = *(unsigned char *)(v254 + v736 + 1);
          v255[2] = *(unsigned char *)(v254 + v736 + 2);
          v255[3] = *(unsigned char *)(v254 + v736 + 3);
          v255[4] = *(unsigned char *)(v254 + v736 + 4);
          unint64_t v256 = (v253 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v257 = (v254 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v256 = *(void *)v257;
          *(void *)(v256 + 8) = *(void *)(v257 + 8);
          *(unsigned char *)(v256 + 16) = *(unsigned char *)(v257 + 16);
          *(unsigned char *)(v256 + 17) = *(unsigned char *)(v257 + 17);
          *(unsigned char *)(v256 + 18) = *(unsigned char *)(v257 + 18);
          *(unsigned char *)(v256 + 19) = *(unsigned char *)(v257 + 19);
          unint64_t v258 = (v256 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v259 = (v257 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v258 = *(void *)v259;
          *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
          *(unsigned char *)(v258 + 9) = *(unsigned char *)(v259 + 9);
          *(unsigned char *)(v258 + 10) = *(unsigned char *)(v259 + 10);
          *(unsigned char *)(v258 + 11) = *(unsigned char *)(v259 + 11);
          *(unsigned char *)(v258 + 12) = *(unsigned char *)(v259 + 12);
          unint64_t v260 = (void *)((v257 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v261 = (void *)((v256 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v261 = *v260;
          unint64_t v262 = ((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v263 = ((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v262 = *(void *)v263;
          *(unsigned char *)(v262 + 8) = *(unsigned char *)(v263 + 8);
          *(unsigned char *)(v262 + 9) = *(unsigned char *)(v263 + 9);
          uint64_t v264 = (void *)((v742 + v262) & v761);
          unint64_t v265 = (const void *)((v742 + v263) & v761);
          unint64_t v266 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v737 + 48);
          swift_bridgeObjectRetain();
          v739 = v266;
          v765 = v252;
          if (v266(v265, 1, v770))
          {
            memcpy(v264, v265, __n);
          }
          else
          {
            v252((unint64_t)v264, (unint64_t)v265, v770);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v264, 0, 1, v770);
          }
          long long v308 = (void *)(((unint64_t)v264 + v743) & 0xFFFFFFFFFFFFFFF8);
          long long v309 = (void *)(((unint64_t)v265 + v743) & 0xFFFFFFFFFFFFFFF8);
          *long long v308 = *v309;
          unint64_t v310 = ((unint64_t)v308 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v311 = ((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v312 = *(void *)v311;
          *(unsigned char *)(v310 + 8) = *(unsigned char *)(v311 + 8);
          *(void *)unint64_t v310 = v312;
          long long v313 = (void *)(((unint64_t)v308 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v314 = (void *)(((unint64_t)v309 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v313 = *v314;
          unint64_t v315 = ((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v316 = (uint64_t *)(((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v317 = v316[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v318 = v747;
          if ((v317 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v315 = *(_OWORD *)v316;
          }
          else
          {
            uint64_t v395 = *v316;
            sub_10001EBB0(*v316, v317);
            *(void *)unint64_t v315 = v395;
            *(void *)(v315 + 8) = v317;
          }
          unint64_t v396 = (v315 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v397 = ((unint64_t)v316 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v398 = *(void *)v397;
          *(unsigned char *)(v396 + 8) = *(unsigned char *)(v397 + 8);
          *(void *)unint64_t v396 = v398;
          *(unsigned char *)(v396 + 9) = *(unsigned char *)(v397 + 9);
          unint64_t v399 = (v396 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v400 = (v397 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v401 = *(_DWORD *)v400;
          *(unsigned char *)(v399 + 4) = *(unsigned char *)(v400 + 4);
          *(_DWORD *)unint64_t v399 = v401;
          long long v402 = (void *)((v396 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v403 = (void *)((v397 + 25) & 0xFFFFFFFFFFFFFFF8);
          *long long v402 = *v403;
          v402[1] = v403[1];
          unint64_t v404 = v46 + v720;
          long long v405 = (long long *)(v759 + v718);
          unint64_t v406 = *(void *)(v759 + v718 + 16);
          if (v406 >= 0xFFFFFFFF) {
            LODWORD(v406) = -1;
          }
          int v407 = v406 - 1;
          swift_bridgeObjectRetain();
          if (v407 < 0)
          {
            *(void *)unint64_t v404 = *(void *)v405;
            *(unsigned char *)(v404 + 8) = *((unsigned char *)v405 + 8);
            *(unsigned char *)(v404 + 9) = *((unsigned char *)v405 + 9);
            uint64_t v432 = *((void *)v405 + 2);
            swift_errorRetain();
            *(void *)(v404 + 16) = v432;
            uint64_t v433 = *((void *)v405 + 3);
            swift_errorRetain();
            *(void *)(v404 + 24) = v433;
            *(unsigned char *)(v404 + 32) = *((unsigned char *)v405 + 32);
            *(unsigned char *)(v404 + 33) = *((unsigned char *)v405 + 33);
            *(unsigned char *)(v404 + 34) = *((unsigned char *)v405 + 34);
            *(void *)(v404 + 40) = *((void *)v405 + 5);
            *(void *)(v404 + 48) = *((void *)v405 + 6);
            *(void *)(v404 + 56) = *((void *)v405 + 7);
            *(void *)(v404 + 64) = *((void *)v405 + 8);
            *(unsigned char *)(v404 + 72) = *((unsigned char *)v405 + 72);
            *(void *)(v404 + 80) = *((void *)v405 + 10);
            *(void *)(v404 + 88) = *((void *)v405 + 11);
            v721 = (void *)*((void *)v405 + 12);
            *(void *)(v404 + 96) = v721;
            *(unsigned char *)(v404 + 104) = *((unsigned char *)v405 + 104);
            *(unsigned char *)(v404 + 105) = *((unsigned char *)v405 + 105);
            *(void *)(v404 + 112) = *((void *)v405 + 14);
            *(void *)(v404 + 120) = *((void *)v405 + 15);
            *(void *)(v404 + 128) = *((void *)v405 + 16);
            *(void *)(v404 + 136) = *((void *)v405 + 17);
            *(void *)(v404 + 144) = *((void *)v405 + 18);
            *(void *)(v404 + 152) = *((void *)v405 + 19);
            *(void *)(v404 + 160) = *((void *)v405 + 20);
            *(void *)(v404 + 168) = *((void *)v405 + 21);
            *(unsigned char *)(v404 + 176) = *((unsigned char *)v405 + 176);
            *(void *)(v404 + 184) = *((void *)v405 + 23);
            uint64_t v434 = *((void *)v405 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v435 = v721;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v434)
            {
              *(void *)(v404 + 192) = v434;
              *(void *)(v404 + 200) = *((void *)v405 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v404 + 192) = v405[12];
            }
            uint64_t v2 = a1;
            uint64_t v50 = a2;
            uint64_t v318 = v747;
            *(void *)(v404 + 208) = *((void *)v405 + 26);
            *(void *)(v404 + 216) = *((void *)v405 + 27);
            *(void *)(v404 + 224) = *((void *)v405 + 28);
            *(void *)(v404 + 232) = *((void *)v405 + 29);
            *(void *)(v404 + 240) = *((void *)v405 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v408 = *v405;
            long long v409 = v405[1];
            long long v410 = v405[3];
            *(_OWORD *)(v404 + 32) = v405[2];
            *(_OWORD *)(v404 + 48) = v410;
            *(_OWORD *)unint64_t v404 = v408;
            *(_OWORD *)(v404 + 16) = v409;
            long long v411 = v405[4];
            long long v412 = v405[5];
            long long v413 = v405[7];
            *(_OWORD *)(v404 + 96) = v405[6];
            *(_OWORD *)(v404 + 112) = v413;
            *(_OWORD *)(v404 + 64) = v411;
            *(_OWORD *)(v404 + 80) = v412;
            long long v414 = v405[8];
            long long v415 = v405[9];
            long long v416 = v405[11];
            *(_OWORD *)(v404 + 160) = v405[10];
            *(_OWORD *)(v404 + 176) = v416;
            *(_OWORD *)(v404 + 128) = v414;
            *(_OWORD *)(v404 + 144) = v415;
            long long v417 = v405[12];
            long long v418 = v405[13];
            long long v419 = v405[14];
            *(void *)(v404 + 240) = *((void *)v405 + 30);
            *(_OWORD *)(v404 + 208) = v418;
            *(_OWORD *)(v404 + 224) = v419;
            *(_OWORD *)(v404 + 192) = v417;
          }
          uint64_t v547 = (_OWORD *)((v404 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v548 = (long long *)(((unint64_t)v405 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v549 = *v548;
          *(_OWORD *)((char *)v547 + 9) = *(long long *)((char *)v548 + 9);
          *uint64_t v547 = v549;
          unint64_t v550 = (v404 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v551 = ((unint64_t)v405 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v552 = *(_OWORD *)v551;
          *(unsigned char *)(v550 + 16) = *(unsigned char *)(v551 + 16);
          *(_OWORD *)unint64_t v550 = v552;
          unint64_t v553 = (void *)((v404 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v554 = ((unint64_t)v405 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v555 = *(void *)v554;
          v554 += 15;
          *unint64_t v553 = v555;
          uint64_t v556 = (void *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v557 = *(void *)(v554 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v558 = *(void *)((v554 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v557, v558);
          *uint64_t v556 = v557;
          v556[1] = v558;
          v763((unint64_t)&v2[v702] & v677, (unint64_t)&v50[v702] & v677, AssociatedTypeWitness);
          unint64_t v780 = (unint64_t)&v2[v702] & v677;
          unint64_t v559 = (v724 + v780) & v708;
          unint64_t v722 = (unint64_t)&v50[v702] & v677;
          unint64_t v560 = (v724 + v722) & v708;
          v763(v559, v560, AssociatedTypeWitness);
          uint64_t v561 = (v703 + v559) & v709;
          unint64_t v562 = (v703 + v560) & v709;
          v750(v561, v562, v727);
          unint64_t v563 = (void *)((v723 + v561) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v564 = (void *)((v723 + v562) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v563 = *v564;
          unint64_t v565 = ((unint64_t)v563 + v725) & v710;
          unint64_t v566 = ((unint64_t)v564 + v725) & v710;
          swift_bridgeObjectRetain();
          v753(v565, v566, v731);
          unint64_t v567 = (void *)((v728 + v565) & 0xFFFFFFFFFFFFFFF8);
          int v568 = (void *)((v728 + v566) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v567 = *v568;
          long long v569 = (void *)(((unint64_t)v567 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v570 = (void *)(((unint64_t)v568 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v569 = *v570;
          v569[1] = v570[1];
          long long v571 = (void *)(v561 + v734);
          *long long v571 = *(void *)(v562 + v734);
          v571[1] = *(void *)(v562 + v734 + 8);
          unint64_t v572 = (v781 + v561 + v734) & v318;
          unint64_t v573 = (v781 + v562 + v734) & v318;
          *(unsigned char *)unint64_t v572 = *(unsigned char *)v573;
          uint64_t v574 = v572 | 4;
          int v575 = *(_DWORD *)(v573 | 4);
          *(unsigned char *)(v574 + 4) = *(unsigned char *)((v573 | 4) + 4);
          *(_DWORD *)uint64_t v574 = v575;
          *(_WORD *)(v572 + 10) = *(_WORD *)(v573 + 0xA);
          unint64_t v576 = (v740 + v572) & v761;
          unint64_t v577 = (v740 + v573) & v761;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v765(v576, v577, v770);
          unint64_t v578 = (v741 + v576) & v761;
          unint64_t v579 = (v741 + v577) & v761;
          v765(v578, v579, v770);
          long long v580 = (unsigned char *)(v578 + v736);
          *long long v580 = *(unsigned char *)(v579 + v736);
          v580[1] = *(unsigned char *)(v579 + v736 + 1);
          v580[2] = *(unsigned char *)(v579 + v736 + 2);
          v580[3] = *(unsigned char *)(v579 + v736 + 3);
          v580[4] = *(unsigned char *)(v579 + v736 + 4);
          unint64_t v581 = (v578 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v582 = (v579 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v581 = *(void *)v582;
          *(void *)(v581 + 8) = *(void *)(v582 + 8);
          *(unsigned char *)(v581 + 16) = *(unsigned char *)(v582 + 16);
          *(unsigned char *)(v581 + 17) = *(unsigned char *)(v582 + 17);
          *(unsigned char *)(v581 + 18) = *(unsigned char *)(v582 + 18);
          *(unsigned char *)(v581 + 19) = *(unsigned char *)(v582 + 19);
          unint64_t v583 = (v581 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v584 = (v582 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v583 = *(void *)v584;
          *(unsigned char *)(v583 + 8) = *(unsigned char *)(v584 + 8);
          *(unsigned char *)(v583 + 9) = *(unsigned char *)(v584 + 9);
          *(unsigned char *)(v583 + 10) = *(unsigned char *)(v584 + 10);
          *(unsigned char *)(v583 + 11) = *(unsigned char *)(v584 + 11);
          *(unsigned char *)(v583 + 12) = *(unsigned char *)(v584 + 12);
          uint64_t v585 = (void *)((v581 + 47) & 0xFFFFFFFFFFFFFFF8);
          id v586 = (void *)((v582 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v585 = *v586;
          unint64_t v587 = ((unint64_t)v585 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v588 = ((unint64_t)v586 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v587 = *(void *)v588;
          *(unsigned char *)(v587 + 8) = *(unsigned char *)(v588 + 8);
          *(unsigned char *)(v587 + 9) = *(unsigned char *)(v588 + 9);
          long long v589 = (void *)((v742 + v587) & v761);
          unint64_t v590 = (const void *)((v742 + v588) & v761);
          swift_bridgeObjectRetain();
          if (v739(v590, 1, v770))
          {
            memcpy(v589, v590, __n);
          }
          else
          {
            v765((unint64_t)v589, (unint64_t)v590, v770);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v589, 0, 1, v770);
          }
          unint64_t v591 = (void *)(((unint64_t)v589 + v743) & 0xFFFFFFFFFFFFFFF8);
          long long v592 = (void *)(((unint64_t)v590 + v743) & 0xFFFFFFFFFFFFFFF8);
          void *v591 = *v592;
          unint64_t v593 = ((unint64_t)v591 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v594 = ((unint64_t)v592 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v595 = *(void *)v594;
          *(unsigned char *)(v593 + 8) = *(unsigned char *)(v594 + 8);
          *(void *)unint64_t v593 = v595;
          v596 = (void *)(((unint64_t)v591 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v597 = (void *)(((unint64_t)v592 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v596 = *v597;
          unint64_t v598 = ((unint64_t)v596 + 15) & 0xFFFFFFFFFFFFFFF8;
          v599 = (uint64_t *)(((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v600 = v599[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v600 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v598 = *(_OWORD *)v599;
          }
          else
          {
            uint64_t v601 = *v599;
            sub_10001EBB0(*v599, v600);
            *(void *)unint64_t v598 = v601;
            *(void *)(v598 + 8) = v600;
          }
          unint64_t v602 = (v598 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v603 = ((unint64_t)v599 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v604 = *(void *)v603;
          *(unsigned char *)(v602 + 8) = *(unsigned char *)(v603 + 8);
          *(void *)unint64_t v602 = v604;
          *(unsigned char *)(v602 + 9) = *(unsigned char *)(v603 + 9);
          unint64_t v605 = (v602 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v606 = (v603 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v607 = *(_DWORD *)v606;
          *(unsigned char *)(v605 + 4) = *(unsigned char *)(v606 + 4);
          *(_DWORD *)unint64_t v605 = v607;
          long long v608 = (void *)((v602 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v609 = (void *)((v603 + 25) & 0xFFFFFFFFFFFFFFF8);
          *long long v608 = *v609;
          v608[1] = v609[1];
          unint64_t v610 = v572 + v759;
          uint64_t v611 = (long long *)(v573 + v759);
          unint64_t v612 = *(void *)(v573 + v759 + 16);
          if (v612 >= 0xFFFFFFFF) {
            LODWORD(v612) = -1;
          }
          int v613 = v612 - 1;
          swift_bridgeObjectRetain();
          unint64_t v40 = v772;
          if (v613 < 0)
          {
            *(void *)unint64_t v610 = *(void *)v611;
            *(unsigned char *)(v610 + 8) = *((unsigned char *)v611 + 8);
            *(unsigned char *)(v610 + 9) = *((unsigned char *)v611 + 9);
            uint64_t v626 = *((void *)v611 + 2);
            swift_errorRetain();
            *(void *)(v610 + 16) = v626;
            uint64_t v627 = *((void *)v611 + 3);
            swift_errorRetain();
            *(void *)(v610 + 24) = v627;
            *(unsigned char *)(v610 + 32) = *((unsigned char *)v611 + 32);
            *(unsigned char *)(v610 + 33) = *((unsigned char *)v611 + 33);
            *(unsigned char *)(v610 + 34) = *((unsigned char *)v611 + 34);
            *(void *)(v610 + 40) = *((void *)v611 + 5);
            *(void *)(v610 + 48) = *((void *)v611 + 6);
            *(void *)(v610 + 56) = *((void *)v611 + 7);
            *(void *)(v610 + 64) = *((void *)v611 + 8);
            *(unsigned char *)(v610 + 72) = *((unsigned char *)v611 + 72);
            *(void *)(v610 + 80) = *((void *)v611 + 10);
            *(void *)(v610 + 88) = *((void *)v611 + 11);
            v787 = (void *)*((void *)v611 + 12);
            *(void *)(v610 + 96) = v787;
            *(unsigned char *)(v610 + 104) = *((unsigned char *)v611 + 104);
            *(unsigned char *)(v610 + 105) = *((unsigned char *)v611 + 105);
            *(void *)(v610 + 112) = *((void *)v611 + 14);
            *(void *)(v610 + 120) = *((void *)v611 + 15);
            *(void *)(v610 + 128) = *((void *)v611 + 16);
            *(void *)(v610 + 136) = *((void *)v611 + 17);
            *(void *)(v610 + 144) = *((void *)v611 + 18);
            *(void *)(v610 + 152) = *((void *)v611 + 19);
            *(void *)(v610 + 160) = *((void *)v611 + 20);
            *(void *)(v610 + 168) = *((void *)v611 + 21);
            *(unsigned char *)(v610 + 176) = *((unsigned char *)v611 + 176);
            *(void *)(v610 + 184) = *((void *)v611 + 23);
            uint64_t v628 = *((void *)v611 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v629 = v787;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v628)
            {
              *(void *)(v610 + 192) = v628;
              *(void *)(v610 + 200) = *((void *)v611 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v610 + 192) = v611[12];
            }
            unint64_t v40 = v772;
            uint64_t v2 = a1;
            uint64_t v41 = v697;
            *(void *)(v610 + 208) = *((void *)v611 + 26);
            *(void *)(v610 + 216) = *((void *)v611 + 27);
            *(void *)(v610 + 224) = *((void *)v611 + 28);
            *(void *)(v610 + 232) = *((void *)v611 + 29);
            *(void *)(v610 + 240) = *((void *)v611 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v614 = *v611;
            long long v615 = v611[1];
            long long v616 = v611[3];
            *(_OWORD *)(v610 + 32) = v611[2];
            *(_OWORD *)(v610 + 48) = v616;
            *(_OWORD *)unint64_t v610 = v614;
            *(_OWORD *)(v610 + 16) = v615;
            long long v617 = v611[4];
            long long v618 = v611[5];
            long long v619 = v611[7];
            *(_OWORD *)(v610 + 96) = v611[6];
            *(_OWORD *)(v610 + 112) = v619;
            *(_OWORD *)(v610 + 64) = v617;
            *(_OWORD *)(v610 + 80) = v618;
            long long v620 = v611[8];
            long long v621 = v611[9];
            long long v622 = v611[11];
            *(_OWORD *)(v610 + 160) = v611[10];
            *(_OWORD *)(v610 + 176) = v622;
            *(_OWORD *)(v610 + 128) = v620;
            *(_OWORD *)(v610 + 144) = v621;
            long long v623 = v611[12];
            long long v624 = v611[13];
            long long v625 = v611[14];
            *(void *)(v610 + 240) = *((void *)v611 + 30);
            *(_OWORD *)(v610 + 208) = v624;
            *(_OWORD *)(v610 + 224) = v625;
            *(_OWORD *)(v610 + 192) = v623;
            uint64_t v41 = v697;
          }
          uint64_t v646 = (_OWORD *)((v610 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v647 = (long long *)(((unint64_t)v611 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v648 = *v647;
          *(_OWORD *)((char *)v646 + 9) = *(long long *)((char *)v647 + 9);
          *uint64_t v646 = v648;
          unint64_t v649 = (v610 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v650 = ((unint64_t)v611 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v651 = *(_OWORD *)v650;
          *(unsigned char *)(v649 + 16) = *(unsigned char *)(v650 + 16);
          *(_OWORD *)unint64_t v649 = v651;
          uint64_t v652 = (void *)((v610 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v653 = ((unint64_t)v611 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v654 = *(void *)v653;
          v653 += 15;
          *uint64_t v652 = v654;
          uint64_t v655 = (void *)(((unint64_t)v652 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v656 = *(void *)(v653 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v657 = *(void *)((v653 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v656, v657);
          char v225 = 0;
          *uint64_t v655 = v656;
          v655[1] = v657;
          uint64_t v658 = (void *)((v704 + v780) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v659 = (void *)((v704 + v722) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v658 = *v659;
          uint64_t v660 = (void *)(((unint64_t)v658 + 15) & 0xFFFFFFFFFFFFFFF8);
          size_t v661 = (void *)(((unint64_t)v659 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v660 = *v661;
          v660[1] = v661[1];
          char v226 = 1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16))(a1, v50, AssociatedTypeWitness);
          char v225 = 0;
          a1[v738] = v50[v738];
          unint64_t v267 = (unint64_t)&a1[v738] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v268 = (unint64_t)&v50[v738] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v267 + 8) = *(void *)(v268 + 8);
          *(void *)(v267 + 16) = *(void *)(v268 + 16);
          char v226 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16))(a1, v50, AssociatedTypeWitness);
          char v225 = 0;
          unint64_t v269 = (void *)((unint64_t)&a1[v738 + 7] & 0xFFFFFFFFFFFFFFF8);
          int v270 = (void *)((unint64_t)&v50[v738 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v269 = *v270;
          v269[1] = v270[1];
          char v226 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16))(a1, v50, AssociatedTypeWitness);
          char v225 = 0;
          a1[v738] = v50[v738];
          unint64_t v271 = (unint64_t)&a1[v738] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v272 = (unint64_t)&v50[v738] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v271 + 8) = *(void *)(v272 + 8);
          *(void *)(v271 + 16) = *(void *)(v272 + 16);
          char v226 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16))(a1, v50, AssociatedTypeWitness);
          char v225 = 0;
          unint64_t v273 = (void *)((unint64_t)&a1[v738 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v274 = (void *)((unint64_t)&v50[v738 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v273 = *v274;
          v273[1] = v274[1];
          goto LABEL_160;
        default:
          unint64_t v757 = v46;
          uint64_t v695 = v41;
          uint64_t v154 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v768 + 16);
          v154(a1, v50, AssociatedTypeWitness);
          v154((unsigned __int8 *)((unint64_t)&a1[v724] & v708), (unsigned __int8 *)((unint64_t)&v50[v724] & v708), AssociatedTypeWitness);
          unint64_t v155 = (((unint64_t)&a1[v724] & v708) + v738 + v775) & v709;
          unint64_t v156 = (((unint64_t)&v50[v724] & v708) + v738 + v775) & v709;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16))(v155, v156, v727);
          unint64_t v157 = (void *)((v723 + v155) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v158 = (void *)((v723 + v156) & 0xFFFFFFFFFFFFFFF8);
          void *v157 = *v158;
          unint64_t v159 = ((unint64_t)v157 + v725) & v710;
          unint64_t v160 = ((unint64_t)v158 + v725) & v710;
          unint64_t v161 = *(void (**)(unint64_t, unint64_t, uint64_t))(v729 + 16);
          swift_bridgeObjectRetain();
          v161(v159, v160, v731);
          uint64_t v162 = (void *)((v728 + v160) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v163 = (void *)((v728 + v159) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v163 = *v162;
          unint64_t v164 = (void *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v165 = (void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v164 = *v165;
          v164[1] = v165[1];
          uint64_t v166 = (void *)(v734 + v155);
          *uint64_t v166 = *(void *)(v734 + v156);
          v166[1] = *(void *)(v734 + v156 + 8);
          unint64_t v167 = (v781 + v734 + v155) & v747;
          unint64_t v168 = (v781 + v734 + v156) & v747;
          *(unsigned char *)unint64_t v167 = *(unsigned char *)v168;
          uint64_t v169 = v167 | 4;
          int v170 = *(_DWORD *)(v168 | 4);
          *(unsigned char *)(v169 + 4) = *(unsigned char *)((v168 | 4) + 4);
          *(_DWORD *)uint64_t v169 = v170;
          *(_WORD *)(v167 + 10) = *(_WORD *)(v168 + 0xA);
          unint64_t v783 = v167;
          unint64_t v171 = (v740 + v167) & v761;
          unint64_t v777 = v168;
          unint64_t v172 = (v740 + v168) & v761;
          uint64_t v173 = *(void (**)(unint64_t, unint64_t, uint64_t))(v737 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v173(v171, v172, v770);
          unint64_t v174 = (v741 + v171) & v761;
          unint64_t v175 = (v741 + v172) & v761;
          v173(v174, v175, v770);
          unint64_t v176 = (unsigned char *)(v174 + v736);
          *unint64_t v176 = *(unsigned char *)(v175 + v736);
          v176[1] = *(unsigned char *)(v175 + v736 + 1);
          v176[2] = *(unsigned char *)(v175 + v736 + 2);
          v176[3] = *(unsigned char *)(v175 + v736 + 3);
          v176[4] = *(unsigned char *)(v175 + v736 + 4);
          unint64_t v177 = (v174 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v178 = (v175 + v736 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v177 = *(void *)v178;
          *(void *)(v177 + 8) = *(void *)(v178 + 8);
          *(unsigned char *)(v177 + 16) = *(unsigned char *)(v178 + 16);
          *(unsigned char *)(v177 + 17) = *(unsigned char *)(v178 + 17);
          *(unsigned char *)(v177 + 18) = *(unsigned char *)(v178 + 18);
          *(unsigned char *)(v177 + 19) = *(unsigned char *)(v178 + 19);
          unint64_t v179 = (v177 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v180 = (v178 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v179 = *(void *)v180;
          *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
          *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
          *(unsigned char *)(v179 + 10) = *(unsigned char *)(v180 + 10);
          *(unsigned char *)(v179 + 11) = *(unsigned char *)(v180 + 11);
          *(unsigned char *)(v179 + 12) = *(unsigned char *)(v180 + 12);
          uint64_t v181 = (void *)((v178 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v182 = (void *)((v177 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v182 = *v181;
          unint64_t v183 = ((unint64_t)v182 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v184 = ((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v183 = *(void *)v184;
          *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
          *(unsigned char *)(v183 + 9) = *(unsigned char *)(v184 + 9);
          unint64_t v185 = (void *)((v742 + v183) & v761);
          unint64_t v186 = (const void *)((v742 + v184) & v761);
          unint64_t v187 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v737 + 48);
          swift_bridgeObjectRetain();
          if (v187(v186, 1, v770))
          {
            memcpy(v185, v186, __n);
          }
          else
          {
            v173((unint64_t)v185, (unint64_t)v186, v770);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v737 + 56))(v185, 0, 1, v770);
          }
          long long v286 = (void *)(((unint64_t)v185 + v743) & 0xFFFFFFFFFFFFFFF8);
          long long v287 = (void *)(((unint64_t)v186 + v743) & 0xFFFFFFFFFFFFFFF8);
          void *v286 = *v287;
          unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v289 = ((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v290 = *(void *)v289;
          *(unsigned char *)(v288 + 8) = *(unsigned char *)(v289 + 8);
          *(void *)unint64_t v288 = v290;
          unint64_t v291 = (void *)(((unint64_t)v286 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v292 = (void *)(((unint64_t)v287 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v291 = *v292;
          unint64_t v293 = ((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v294 = (uint64_t *)(((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v295 = v294[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v296 = a2;
          if ((v295 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v293 = *(_OWORD *)v294;
          }
          else
          {
            uint64_t v344 = *v294;
            sub_10001EBB0(*v294, v295);
            *(void *)unint64_t v293 = v344;
            *(void *)(v293 + 8) = v295;
          }
          unint64_t v345 = (v293 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v346 = ((unint64_t)v294 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v347 = *(void *)v346;
          *(unsigned char *)(v345 + 8) = *(unsigned char *)(v346 + 8);
          *(void *)unint64_t v345 = v347;
          *(unsigned char *)(v345 + 9) = *(unsigned char *)(v346 + 9);
          unint64_t v348 = (v345 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v349 = (v346 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v350 = *(_DWORD *)v349;
          *(unsigned char *)(v348 + 4) = *(unsigned char *)(v349 + 4);
          *(_DWORD *)unint64_t v348 = v350;
          long long v351 = (void *)((v345 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v352 = (void *)((v346 + 25) & 0xFFFFFFFFFFFFFFF8);
          *long long v351 = *v352;
          v351[1] = v352[1];
          unint64_t v353 = v757 + v783;
          unint64_t v354 = (long long *)(v757 + v777);
          unint64_t v355 = *(void *)(v757 + v777 + 16);
          if (v355 >= 0xFFFFFFFF) {
            LODWORD(v355) = -1;
          }
          int v356 = v355 - 1;
          swift_bridgeObjectRetain();
          uint64_t v41 = v695;
          if (v356 < 0)
          {
            *(void *)unint64_t v353 = *(void *)v354;
            *(unsigned char *)(v353 + 8) = *((unsigned char *)v354 + 8);
            *(unsigned char *)(v353 + 9) = *((unsigned char *)v354 + 9);
            uint64_t v424 = *((void *)v354 + 2);
            swift_errorRetain();
            *(void *)(v353 + 16) = v424;
            uint64_t v425 = *((void *)v354 + 3);
            swift_errorRetain();
            *(void *)(v353 + 24) = v425;
            *(unsigned char *)(v353 + 32) = *((unsigned char *)v354 + 32);
            *(unsigned char *)(v353 + 33) = *((unsigned char *)v354 + 33);
            *(unsigned char *)(v353 + 34) = *((unsigned char *)v354 + 34);
            *(void *)(v353 + 40) = *((void *)v354 + 5);
            *(void *)(v353 + 48) = *((void *)v354 + 6);
            *(void *)(v353 + 56) = *((void *)v354 + 7);
            *(void *)(v353 + 64) = *((void *)v354 + 8);
            *(unsigned char *)(v353 + 72) = *((unsigned char *)v354 + 72);
            *(void *)(v353 + 80) = *((void *)v354 + 10);
            *(void *)(v353 + 88) = *((void *)v354 + 11);
            v785 = (void *)*((void *)v354 + 12);
            *(void *)(v353 + 96) = v785;
            *(unsigned char *)(v353 + 104) = *((unsigned char *)v354 + 104);
            *(unsigned char *)(v353 + 105) = *((unsigned char *)v354 + 105);
            *(void *)(v353 + 112) = *((void *)v354 + 14);
            *(void *)(v353 + 120) = *((void *)v354 + 15);
            *(void *)(v353 + 128) = *((void *)v354 + 16);
            *(void *)(v353 + 136) = *((void *)v354 + 17);
            *(void *)(v353 + 144) = *((void *)v354 + 18);
            *(void *)(v353 + 152) = *((void *)v354 + 19);
            *(void *)(v353 + 160) = *((void *)v354 + 20);
            *(void *)(v353 + 168) = *((void *)v354 + 21);
            *(unsigned char *)(v353 + 176) = *((unsigned char *)v354 + 176);
            *(void *)(v353 + 184) = *((void *)v354 + 23);
            uint64_t v426 = *((void *)v354 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v427 = v785;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v426)
            {
              *(void *)(v353 + 192) = v426;
              *(void *)(v353 + 200) = *((void *)v354 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v353 + 192) = v354[12];
            }
            unint64_t v40 = v772;
            uint64_t v2 = a1;
            uint64_t v41 = v695;
            int v296 = a2;
            *(void *)(v353 + 208) = *((void *)v354 + 26);
            *(void *)(v353 + 216) = *((void *)v354 + 27);
            *(void *)(v353 + 224) = *((void *)v354 + 28);
            *(void *)(v353 + 232) = *((void *)v354 + 29);
            *(void *)(v353 + 240) = *((void *)v354 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v357 = *v354;
            long long v358 = v354[1];
            long long v359 = v354[3];
            *(_OWORD *)(v353 + 32) = v354[2];
            *(_OWORD *)(v353 + 48) = v359;
            *(_OWORD *)unint64_t v353 = v357;
            *(_OWORD *)(v353 + 16) = v358;
            long long v360 = v354[4];
            long long v361 = v354[5];
            long long v362 = v354[7];
            *(_OWORD *)(v353 + 96) = v354[6];
            *(_OWORD *)(v353 + 112) = v362;
            *(_OWORD *)(v353 + 64) = v360;
            *(_OWORD *)(v353 + 80) = v361;
            long long v363 = v354[8];
            long long v364 = v354[9];
            long long v365 = v354[11];
            *(_OWORD *)(v353 + 160) = v354[10];
            *(_OWORD *)(v353 + 176) = v365;
            *(_OWORD *)(v353 + 128) = v363;
            *(_OWORD *)(v353 + 144) = v364;
            long long v366 = v354[12];
            long long v367 = v354[13];
            long long v368 = v354[14];
            *(void *)(v353 + 240) = *((void *)v354 + 30);
            *(_OWORD *)(v353 + 208) = v367;
            *(_OWORD *)(v353 + 224) = v368;
            *(_OWORD *)(v353 + 192) = v366;
            unint64_t v40 = v772;
          }
          unint64_t v450 = (_OWORD *)((v353 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v451 = (long long *)(((unint64_t)v354 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v452 = *v451;
          *(_OWORD *)((char *)v450 + 9) = *(long long *)((char *)v451 + 9);
          *unint64_t v450 = v452;
          unint64_t v453 = (v353 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v454 = ((unint64_t)v354 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v455 = *(_OWORD *)v454;
          *(unsigned char *)(v453 + 16) = *(unsigned char *)(v454 + 16);
          *(_OWORD *)unint64_t v453 = v455;
          unint64_t v456 = (void *)((v353 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v457 = ((unint64_t)v354 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v458 = *(void *)v457;
          v457 += 15;
          *unint64_t v456 = v458;
          unint64_t v459 = (void *)(((unint64_t)v456 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v460 = *(void *)(v457 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v461 = *(void *)((v457 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v460, v461);
          char v226 = 0;
          char v225 = 0;
          *unint64_t v459 = v460;
          v459[1] = v461;
          unint64_t v462 = (void *)((unint64_t)&v2[v701 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v463 = (void *)((unint64_t)&v296[v701 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v462 = *v463;
          v462[1] = v463[1];
          break;
      }
    }
    v2[v40] = v226;
    swift_bridgeObjectRetain();
    v2[v41] = v225;
  }
  return v2;
}

uint64_t sub_100630054(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v506 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v506 + 80);
  uint64_t v460 = v2 + v3;
  uint64_t v463 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v463 - 8);
  uint64_t v473 = v4;
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v467 = swift_getAssociatedTypeWitness();
  uint64_t v474 = *(void *)(v467 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v474 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v451 = v2 + v7;
  uint64_t v458 = *(void *)(v4 + 64) + 7;
  uint64_t v462 = v6 + 8;
  uint64_t v492 = v6;
  uint64_t v465 = *(void *)(v474 + 64) + 7;
  unint64_t v469 = ((((v465 + ((v6 + 8 + (v458 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v476 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v476 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v530 = (v9 | 7) + 16;
  uint64_t v482 = v9 + 12;
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v483 = v10 + v9;
  uint64_t v484 = v10;
  uint64_t v485 = v9 + 10;
  uint64_t v477 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(*(void *)(v476 - 8) + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  size_t __n = v11;
  size_t v486 = v11 + 7;
  unint64_t v524 = (((((((((v11
                + 7
                + ((v9
                  + 10
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (((v524 + 327 + ((v530 + v469 + ((v2 + v7 + ((v2 + v3) & ~v3)) & ~v7)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v495 = v3;
  uint64_t v509 = v7;
  uint64_t v14 = v7 | v3 | v9;
  unint64_t v448 = v12 + 16;
  unint64_t v449 = v12 + 16 + v14;
  uint64_t v487 = v14;
  unint64_t v452 = v12 + 23;
  unint64_t v15 = ((((v12 + 23 + (v449 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v478 = v2;
  if (v16 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v512 = v15;
  unint64_t v519 = v15 | 1;
  uint64_t v499 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v499 - 8) + 64);
  uint64_t v504 = *(void *)(v499 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v504 + 80);
  uint64_t v454 = v17 + v18;
  uint64_t v456 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v456 - 8);
  uint64_t v472 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = v19;
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v24 = v20 | v23 | 7;
  uint64_t v25 = *(void *)(v22 + 64) + 7;
  uint64_t v26 = v23 + 8;
  unint64_t v27 = ((((*(void *)(*(void *)(v21 - 8) + 64) + 7 + ((v23 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = (((v524 + 327 + ((v530 + v27 + ((v17 + v24 + ((v17 + v18) & ~v18)) & ~v24)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v31 = v28 + 16;
  uint64_t v32 = v18 | v9 | v24;
  unint64_t v33 = v31 + v32;
  unint64_t v34 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v34 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v34 > v30) {
    unint64_t v30 = v34;
  }
  if (v30 <= ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v35 = v30;
  }
  if ((v35 | 1) <= v519) {
    uint64_t v36 = v519;
  }
  else {
    uint64_t v36 = v35 | 1;
  }
  unsigned int v37 = a2[v36];
  unsigned int v38 = v37 - 2;
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a2;
        if (v36 < 4) {
          goto LABEL_30;
        }
        goto LABEL_32;
      case 2:
        int v40 = *(unsigned __int16 *)a2;
        if (v36 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_30;
      case 3:
        int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v36 < 4) {
          goto LABEL_30;
        }
        goto LABEL_32;
      case 4:
        int v40 = *(_DWORD *)a2;
        if (v36 < 4) {
LABEL_30:
        }
          unsigned int v37 = (v40 | (v38 << (8 * v36))) + 2;
        else {
LABEL_32:
        }
          unsigned int v37 = v40 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v41 = ~(v9 | 7);
  uint64_t v42 = ~v9;
  if (v37 == 1)
  {
    unsigned int v43 = a2[v35];
    if (v43 >= 6 && v35 != 0) {
      unsigned int v43 = *(_DWORD *)a2 + 6;
    }
    uint64_t v45 = ~v18;
    uint64_t v46 = ~v23;
    uint64_t v47 = ~v32;
    switch(v43)
    {
      case 1u:
        uint64_t v461 = v47;
        unint64_t v468 = v33;
        uint64_t v470 = v17 + v24;
        unint64_t v475 = v29;
        unint64_t v489 = v35;
        uint64_t v522 = v41;
        unint64_t v527 = v524 + 16;
        uint64_t v514 = *(void *)(v21 - 8);
        uint64_t v517 = v36;
        uint64_t v113 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32);
        uint64_t v508 = v21;
        unint64_t v511 = v27;
        uint64_t v497 = v42;
        uint64_t v480 = *(void *)(v514 + 64) + 7;
        uint64_t v503 = v26;
        uint64_t v494 = v46;
        v113(a1, a2, v499);
        uint64_t v114 = (v454 + a1) & v45;
        uint64_t v464 = ~v18;
        unint64_t v115 = (unint64_t)&a2[v454] & v45;
        v113(v114, (unsigned __int8 *)v115, v499);
        uint64_t v116 = (v114 + v17 + v24) & ~v24;
        uint64_t v466 = ~v24;
        unint64_t v117 = (v115 + v17 + v24) & ~v24;
        unint64_t v459 = *(void (**)(uint64_t, unint64_t, uint64_t))(v472 + 32);
        v459(v116, v117, v456);
        unint64_t v118 = (void *)((v25 + v116) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v119 = (void *)((v25 + v117) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v118 = *v119;
        unint64_t v120 = ((unint64_t)v118 + v503) & v494;
        unint64_t v121 = ((unint64_t)v119 + v503) & v494;
        unint64_t v453 = *(void (**)(unint64_t, unint64_t, uint64_t))(v514 + 32);
        v453(v120, v121, v508);
        unint64_t v122 = (void *)((v480 + v120) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v123 = (void *)((v480 + v121) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v122 = *v123;
        *(_OWORD *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v511 + v116) = *(_OWORD *)(v511 + v117);
        uint64_t v124 = (v530 + v511 + v116) & v522;
        uint64_t v125 = (v530 + v511 + v117) & v522;
        *(unsigned char *)uint64_t v124 = *(unsigned char *)v125;
        uint64_t v126 = v124 | 4;
        int v127 = *(_DWORD *)(v125 | 4);
        *(unsigned char *)(v126 + 4) = *(unsigned char *)((v125 | 4) + 4);
        *(_DWORD *)uint64_t v126 = v127;
        *(_WORD *)(v124 + 10) = *(_WORD *)(v125 + 0xA);
        unint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32);
        v128((v482 + v124) & v497, (v482 + v125) & v497, v476);
        uint64_t v129 = (v483 + ((v482 + v124) & v497)) & v497;
        uint64_t v130 = (v483 + ((v482 + v125) & v497)) & v497;
        v128(v129, v130, v476);
        uint64_t v131 = (unsigned char *)(v129 + v484);
        *uint64_t v131 = *(unsigned char *)(v130 + v484);
        v131[1] = *(unsigned char *)(v130 + v484 + 1);
        v131[2] = *(unsigned char *)(v130 + v484 + 2);
        v131[3] = *(unsigned char *)(v130 + v484 + 3);
        v131[4] = *(unsigned char *)(v130 + v484 + 4);
        unint64_t v132 = (v129 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v133 = (v130 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v132 = *(_OWORD *)v133;
        *(unsigned char *)(v132 + 16) = *(unsigned char *)(v133 + 16);
        *(unsigned char *)(v132 + 17) = *(unsigned char *)(v133 + 17);
        *(unsigned char *)(v132 + 18) = *(unsigned char *)(v133 + 18);
        *(unsigned char *)(v132 + 19) = *(unsigned char *)(v133 + 19);
        unint64_t v134 = (v132 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v135 = (v133 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v134 = *(void *)v135;
        *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
        *(unsigned char *)(v134 + 9) = *(unsigned char *)(v135 + 9);
        *(unsigned char *)(v134 + 10) = *(unsigned char *)(v135 + 10);
        *(unsigned char *)(v134 + 11) = *(unsigned char *)(v135 + 11);
        *(unsigned char *)(v134 + 12) = *(unsigned char *)(v135 + 12);
        uint64_t v136 = (void *)((v133 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v137 = (void *)((v132 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v137 = *v136;
        unint64_t v138 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v139 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v138 = *(void *)v139;
        *(unsigned char *)(v138 + 8) = *(unsigned char *)(v139 + 8);
        *(unsigned char *)(v138 + 9) = *(unsigned char *)(v139 + 9);
        unint64_t v140 = (void *)((v485 + v138) & v497);
        unint64_t v141 = (const void *)((v485 + v139) & v497);
        unint64_t v450 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48);
        if (v450(v141, 1, v476))
        {
          memcpy(v140, v141, __n);
        }
        else
        {
          v128((uint64_t)v140, (uint64_t)v141, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v140, 0, 1, v476);
        }
        uint64_t v248 = v128;
        int v249 = (void *)(((unint64_t)v140 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v250 = (void *)(((unint64_t)v141 + v486) & 0xFFFFFFFFFFFFFFF8);
        *int v249 = *v250;
        unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v253 = *(void *)v252;
        *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
        *(void *)unint64_t v251 = v253;
        unint64_t v254 = (void *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v255 = (void *)(((unint64_t)v250 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v254 = *v255;
        unint64_t v256 = (_OWORD *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v257 = (_OWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v256 = *v257;
        unint64_t v258 = ((unint64_t)v256 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v259 = ((unint64_t)v257 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v260 = *(void *)v259;
        *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
        *(void *)unint64_t v258 = v260;
        *(unsigned char *)(v258 + 9) = *(unsigned char *)(v259 + 9);
        unint64_t v261 = (v258 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v262 = (v259 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v253) = *(_DWORD *)v262;
        *(unsigned char *)(v261 + 4) = *(unsigned char *)(v262 + 4);
        *(_DWORD *)unint64_t v261 = v253;
        *(_OWORD *)((v258 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v259 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v263 = v124 + v527;
        long long v264 = *(_OWORD *)(v125 + v527 + 112);
        long long v266 = *(_OWORD *)(v125 + v527 + 64);
        long long v265 = *(_OWORD *)(v125 + v527 + 80);
        *(_OWORD *)(v263 + 96) = *(_OWORD *)(v125 + v527 + 96);
        *(_OWORD *)(v263 + 112) = v264;
        *(_OWORD *)(v263 + 64) = v266;
        *(_OWORD *)(v263 + 80) = v265;
        long long v267 = *(_OWORD *)(v125 + v527 + 176);
        long long v269 = *(_OWORD *)(v125 + v527 + 128);
        long long v268 = *(_OWORD *)(v125 + v527 + 144);
        *(_OWORD *)(v263 + 160) = *(_OWORD *)(v125 + v527 + 160);
        *(_OWORD *)(v263 + 176) = v267;
        *(_OWORD *)(v263 + 128) = v269;
        *(_OWORD *)(v263 + 144) = v268;
        long long v271 = *(_OWORD *)(v125 + v527 + 208);
        long long v270 = *(_OWORD *)(v125 + v527 + 224);
        long long v272 = *(_OWORD *)(v125 + v527 + 192);
        *(void *)(v263 + 240) = *(void *)(v125 + v527 + 240);
        *(_OWORD *)(v263 + 208) = v271;
        *(_OWORD *)(v263 + 224) = v270;
        *(_OWORD *)(v263 + 192) = v272;
        long long v273 = *(_OWORD *)(v125 + v527);
        long long v274 = *(_OWORD *)(v125 + v527 + 16);
        long long v275 = *(_OWORD *)(v125 + v527 + 48);
        *(_OWORD *)(v263 + 32) = *(_OWORD *)(v125 + v527 + 32);
        *(_OWORD *)(v263 + 48) = v275;
        *(_OWORD *)unint64_t v263 = v273;
        *(_OWORD *)(v263 + 16) = v274;
        int v276 = (_OWORD *)((v124 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v277 = (long long *)((v125 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v278 = *v277;
        *(_OWORD *)((char *)v276 + 9) = *(long long *)((char *)v277 + 9);
        *int v276 = v278;
        unint64_t v279 = (v124 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v280 = (v125 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v281 = *(_OWORD *)v280;
        *(unsigned char *)(v279 + 16) = *(unsigned char *)(v280 + 16);
        *(_OWORD *)unint64_t v279 = v281;
        unint64_t v282 = (void *)((v124 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        long long v283 = (void *)((v125 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v282 = *v283;
        *(_OWORD *)(((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v284 = (v468 + a1) & v461;
        v113(v284, (unsigned __int8 *)((unint64_t)&a2[v468] & v461), v499);
        unint64_t v532 = (unint64_t)&a2[v468] & v461;
        unint64_t v285 = (v454 + v532) & v464;
        v113((v454 + v284) & v464, (unsigned __int8 *)v285, v499);
        uint64_t v286 = (v470 + ((v454 + v284) & v464)) & v466;
        unint64_t v287 = (v470 + v285) & v466;
        v459(v286, v287, v456);
        unint64_t v288 = (void *)((v25 + v286) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v289 = (void *)((v25 + v287) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v288 = *v289;
        unint64_t v290 = ((unint64_t)v288 + v503) & v494;
        unint64_t v291 = ((unint64_t)v289 + v503) & v494;
        v453(v290, v291, v508);
        unint64_t v292 = (void *)((v480 + v290) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v293 = (void *)((v480 + v291) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v292 = *v293;
        *(_OWORD *)(((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v293 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v286 + v511) = *(_OWORD *)(v287 + v511);
        uint64_t v294 = (v530 + v286 + v511) & v522;
        uint64_t v295 = (v530 + v287 + v511) & v522;
        *(unsigned char *)uint64_t v294 = *(unsigned char *)v295;
        uint64_t v296 = v294 | 4;
        int v297 = *(_DWORD *)(v295 | 4);
        *(unsigned char *)(v296 + 4) = *(unsigned char *)((v295 | 4) + 4);
        *(_DWORD *)uint64_t v296 = v297;
        *(_WORD *)(v294 + 10) = *(_WORD *)(v295 + 0xA);
        v248((v482 + v294) & v497, (v482 + v295) & v497, v476);
        uint64_t v298 = (v483 + ((v482 + v294) & v497)) & v497;
        uint64_t v299 = (v483 + ((v482 + v295) & v497)) & v497;
        v248(v298, v299, v476);
        unint64_t v300 = (unsigned char *)(v298 + v484);
        *unint64_t v300 = *(unsigned char *)(v299 + v484);
        v300[1] = *(unsigned char *)(v299 + v484 + 1);
        v300[2] = *(unsigned char *)(v299 + v484 + 2);
        v300[3] = *(unsigned char *)(v299 + v484 + 3);
        v300[4] = *(unsigned char *)(v299 + v484 + 4);
        unint64_t v301 = (v298 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v302 = (v299 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v301 = *(_OWORD *)v302;
        *(unsigned char *)(v301 + 16) = *(unsigned char *)(v302 + 16);
        *(unsigned char *)(v301 + 17) = *(unsigned char *)(v302 + 17);
        *(unsigned char *)(v301 + 18) = *(unsigned char *)(v302 + 18);
        *(unsigned char *)(v301 + 19) = *(unsigned char *)(v302 + 19);
        unint64_t v303 = (v301 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v304 = (v302 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v303 = *(void *)v304;
        *(unsigned char *)(v303 + 8) = *(unsigned char *)(v304 + 8);
        *(unsigned char *)(v303 + 9) = *(unsigned char *)(v304 + 9);
        *(unsigned char *)(v303 + 10) = *(unsigned char *)(v304 + 10);
        *(unsigned char *)(v303 + 11) = *(unsigned char *)(v304 + 11);
        *(unsigned char *)(v303 + 12) = *(unsigned char *)(v304 + 12);
        long long v305 = (void *)((v301 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v306 = (void *)((v302 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v305 = *v306;
        unint64_t v307 = ((unint64_t)v305 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v308 = ((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v307 = *(void *)v308;
        *(unsigned char *)(v307 + 8) = *(unsigned char *)(v308 + 8);
        *(unsigned char *)(v307 + 9) = *(unsigned char *)(v308 + 9);
        long long v309 = (void *)((v485 + v307) & v497);
        unint64_t v310 = (const void *)((v485 + v308) & v497);
        if (v450(v310, 1, v476))
        {
          memcpy(v309, v310, __n);
        }
        else
        {
          v248((uint64_t)v309, (uint64_t)v310, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v309, 0, 1, v476);
        }
        uint64_t v36 = v517;
        unint64_t v374 = (void *)(((unint64_t)v310 + v486) & 0xFFFFFFFFFFFFFFF8);
        int v375 = (void *)(((unint64_t)v309 + v486) & 0xFFFFFFFFFFFFFFF8);
        *int v375 = *v374;
        unint64_t v376 = ((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v377 = ((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v378 = *(void *)v377;
        *(unsigned char *)(v376 + 8) = *(unsigned char *)(v377 + 8);
        *(void *)unint64_t v376 = v378;
        uint64_t v379 = (void *)(((unint64_t)v375 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v380 = (void *)(((unint64_t)v374 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v379 = *v380;
        int v381 = (_OWORD *)(((unint64_t)v379 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v382 = (_OWORD *)(((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v381 = *v382;
        unint64_t v383 = ((unint64_t)v381 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v384 = ((unint64_t)v382 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v385 = *(void *)v384;
        *(unsigned char *)(v383 + 8) = *(unsigned char *)(v384 + 8);
        *(void *)unint64_t v383 = v385;
        *(unsigned char *)(v383 + 9) = *(unsigned char *)(v384 + 9);
        unint64_t v386 = (v383 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v387 = (v384 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v378) = *(_DWORD *)v387;
        *(unsigned char *)(v386 + 4) = *(unsigned char *)(v387 + 4);
        *(_DWORD *)unint64_t v386 = v378;
        *(_OWORD *)((v383 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v384 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v388 = v294 + v527;
        long long v389 = *(_OWORD *)(v295 + v527 + 112);
        long long v391 = *(_OWORD *)(v295 + v527 + 64);
        long long v390 = *(_OWORD *)(v295 + v527 + 80);
        *(_OWORD *)(v388 + 96) = *(_OWORD *)(v295 + v527 + 96);
        *(_OWORD *)(v388 + 112) = v389;
        *(_OWORD *)(v388 + 64) = v391;
        *(_OWORD *)(v388 + 80) = v390;
        long long v392 = *(_OWORD *)(v295 + v527 + 176);
        long long v394 = *(_OWORD *)(v295 + v527 + 128);
        long long v393 = *(_OWORD *)(v295 + v527 + 144);
        *(_OWORD *)(v388 + 160) = *(_OWORD *)(v295 + v527 + 160);
        *(_OWORD *)(v388 + 176) = v392;
        *(_OWORD *)(v388 + 128) = v394;
        *(_OWORD *)(v388 + 144) = v393;
        long long v396 = *(_OWORD *)(v295 + v527 + 208);
        long long v395 = *(_OWORD *)(v295 + v527 + 224);
        long long v397 = *(_OWORD *)(v295 + v527 + 192);
        *(void *)(v388 + 240) = *(void *)(v295 + v527 + 240);
        *(_OWORD *)(v388 + 208) = v396;
        *(_OWORD *)(v388 + 224) = v395;
        *(_OWORD *)(v388 + 192) = v397;
        long long v398 = *(_OWORD *)(v295 + v527);
        long long v399 = *(_OWORD *)(v295 + v527 + 16);
        long long v400 = *(_OWORD *)(v295 + v527 + 48);
        *(_OWORD *)(v388 + 32) = *(_OWORD *)(v295 + v527 + 32);
        *(_OWORD *)(v388 + 48) = v400;
        *(_OWORD *)unint64_t v388 = v398;
        *(_OWORD *)(v388 + 16) = v399;
        int v401 = (_OWORD *)((v294 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v402 = (long long *)((v295 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v403 = *v402;
        *(_OWORD *)((char *)v401 + 9) = *(long long *)((char *)v402 + 9);
        *int v401 = v403;
        unint64_t v404 = (v294 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v405 = (v295 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v406 = *(_OWORD *)v405;
        *(unsigned char *)(v404 + 16) = *(unsigned char *)(v405 + 16);
        *(_OWORD *)unint64_t v404 = v406;
        int v407 = (void *)((v294 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        long long v408 = (void *)((v295 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        *int v407 = *v408;
        *(_OWORD *)(((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v408 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v409 = (void *)((v475 + v284) & 0xFFFFFFFFFFFFFFF8);
        long long v410 = (void *)((v475 + v532) & 0xFFFFFFFFFFFFFFF8);
        *long long v409 = *v410;
        unint64_t v142 = (_OWORD *)(((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v145 = 1;
        unint64_t v77 = v489;
        char v144 = 1;
        uint64_t v83 = a1;
        break;
      case 2u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        *(unsigned char *)(v17 + a1) = a2[v17];
        unint64_t v142 = (_OWORD *)(((v17 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v143 = (_OWORD *)(((unint64_t)&a2[v17] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v144 = 1;
        char v145 = 2;
        goto LABEL_56;
      case 3u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        unint64_t v142 = (_OWORD *)((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        char v145 = 3;
        goto LABEL_56;
      case 4u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        *(unsigned char *)(v17 + a1) = a2[v17];
        unint64_t v142 = (_OWORD *)(((v17 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v143 = (_OWORD *)(((unint64_t)&a2[v17] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v144 = 1;
        char v145 = 4;
        goto LABEL_56;
      case 5u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        unint64_t v142 = (_OWORD *)((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        char v145 = 5;
LABEL_56:
        unint64_t v77 = v35;
        break;
      default:
        unint64_t v488 = v35;
        uint64_t v520 = v41;
        unint64_t v525 = v524 + 16;
        uint64_t v513 = *(void *)(v21 - 8);
        uint64_t v515 = v36;
        unsigned int v48 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32);
        uint64_t v507 = v21;
        unint64_t v510 = v27;
        uint64_t v496 = v42;
        uint64_t v479 = *(void *)(v513 + 64) + 7;
        uint64_t v502 = v26;
        uint64_t v493 = v46;
        v48(a1, a2, v499);
        uint64_t v49 = (v454 + a1) & v45;
        unint64_t v50 = (unint64_t)&a2[v454] & v45;
        v48(v49, (unsigned __int8 *)v50, v499);
        uint64_t v51 = (v49 + v17 + v24) & ~v24;
        unint64_t v52 = (v50 + v17 + v24) & ~v24;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v472 + 32))(v51, v52, v456);
        uint64_t v53 = (void *)((v25 + v51) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v54 = (void *)((v25 + v52) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v53 = *v54;
        unint64_t v55 = ((unint64_t)v53 + v502) & v493;
        unint64_t v56 = ((unint64_t)v54 + v502) & v493;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 32))(v55, v56, v507);
        unint64_t v57 = (void *)((v479 + v55) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v58 = (void *)((v479 + v56) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v57 = *v58;
        *(_OWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v510 + v51) = *(_OWORD *)(v510 + v52);
        uint64_t v59 = (v530 + v510 + v51) & v520;
        uint64_t v60 = (v530 + v510 + v52) & v520;
        *(unsigned char *)uint64_t v59 = *(unsigned char *)v60;
        uint64_t v61 = v59 | 4;
        int v62 = *(_DWORD *)(v60 | 4);
        *(unsigned char *)(v61 + 4) = *(unsigned char *)((v60 | 4) + 4);
        *(_DWORD *)uint64_t v61 = v62;
        *(_WORD *)(v59 + 10) = *(_WORD *)(v60 + 0xA);
        unint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32);
        v63((v482 + v59) & v496, (v482 + v60) & v496, v476);
        uint64_t v64 = (v483 + ((v482 + v59) & v496)) & v496;
        uint64_t v65 = (v483 + ((v482 + v60) & v496)) & v496;
        v63(v64, v65, v476);
        unint64_t v66 = (unsigned char *)(v64 + v484);
        *unint64_t v66 = *(unsigned char *)(v65 + v484);
        v66[1] = *(unsigned char *)(v65 + v484 + 1);
        v66[2] = *(unsigned char *)(v65 + v484 + 2);
        v66[3] = *(unsigned char *)(v65 + v484 + 3);
        v66[4] = *(unsigned char *)(v65 + v484 + 4);
        unint64_t v67 = (v64 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v68 = (v65 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v67 = *(_OWORD *)v68;
        *(unsigned char *)(v67 + 16) = *(unsigned char *)(v68 + 16);
        *(unsigned char *)(v67 + 17) = *(unsigned char *)(v68 + 17);
        *(unsigned char *)(v67 + 18) = *(unsigned char *)(v68 + 18);
        *(unsigned char *)(v67 + 19) = *(unsigned char *)(v68 + 19);
        unint64_t v69 = (v67 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v70 = (v68 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v69 = *(void *)v70;
        *(unsigned char *)(v69 + 8) = *(unsigned char *)(v70 + 8);
        *(unsigned char *)(v69 + 9) = *(unsigned char *)(v70 + 9);
        *(unsigned char *)(v69 + 10) = *(unsigned char *)(v70 + 10);
        *(unsigned char *)(v69 + 11) = *(unsigned char *)(v70 + 11);
        *(unsigned char *)(v69 + 12) = *(unsigned char *)(v70 + 12);
        uint64_t v71 = (void *)((v68 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v72 = (void *)((v67 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v72 = *v71;
        unint64_t v73 = ((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v74 = ((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v73 = *(void *)v74;
        *(unsigned char *)(v73 + 8) = *(unsigned char *)(v74 + 8);
        *(unsigned char *)(v73 + 9) = *(unsigned char *)(v74 + 9);
        unint64_t v75 = (void *)((v485 + v73) & v496);
        unint64_t v76 = (const void *)((v485 + v74) & v496);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48))(v76, 1, v476))
        {
          memcpy(v75, v76, __n);
        }
        else
        {
          v63((uint64_t)v75, (uint64_t)v76, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v75, 0, 1, v476);
        }
        uint64_t v36 = v515;
        char v145 = 0;
        unint64_t v178 = (void *)(((unint64_t)v76 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v179 = (void *)(((unint64_t)v75 + v486) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v179 = *v178;
        unint64_t v180 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v181 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v182 = *(void *)v181;
        *(unsigned char *)(v180 + 8) = *(unsigned char *)(v181 + 8);
        *(void *)unint64_t v180 = v182;
        unint64_t v183 = (void *)(((unint64_t)v179 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v184 = (void *)(((unint64_t)v178 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v183 = *v184;
        unint64_t v185 = (_OWORD *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v186 = (_OWORD *)(((unint64_t)v184 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v185 = *v186;
        unint64_t v187 = ((unint64_t)v185 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v188 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v189 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
        *(void *)unint64_t v187 = v189;
        *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
        unint64_t v190 = (v187 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v191 = (v188 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v182) = *(_DWORD *)v191;
        *(unsigned char *)(v190 + 4) = *(unsigned char *)(v191 + 4);
        *(_DWORD *)unint64_t v190 = v182;
        *(_OWORD *)((v187 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v188 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v192 = v59 + v525;
        long long v193 = *(_OWORD *)(v60 + v525 + 112);
        long long v195 = *(_OWORD *)(v60 + v525 + 64);
        long long v194 = *(_OWORD *)(v60 + v525 + 80);
        *(_OWORD *)(v192 + 96) = *(_OWORD *)(v60 + v525 + 96);
        *(_OWORD *)(v192 + 112) = v193;
        *(_OWORD *)(v192 + 64) = v195;
        *(_OWORD *)(v192 + 80) = v194;
        long long v196 = *(_OWORD *)(v60 + v525 + 176);
        long long v198 = *(_OWORD *)(v60 + v525 + 128);
        long long v197 = *(_OWORD *)(v60 + v525 + 144);
        *(_OWORD *)(v192 + 160) = *(_OWORD *)(v60 + v525 + 160);
        *(_OWORD *)(v192 + 176) = v196;
        *(_OWORD *)(v192 + 128) = v198;
        *(_OWORD *)(v192 + 144) = v197;
        long long v200 = *(_OWORD *)(v60 + v525 + 208);
        long long v199 = *(_OWORD *)(v60 + v525 + 224);
        long long v201 = *(_OWORD *)(v60 + v525 + 192);
        *(void *)(v192 + 240) = *(void *)(v60 + v525 + 240);
        *(_OWORD *)(v192 + 208) = v200;
        *(_OWORD *)(v192 + 224) = v199;
        *(_OWORD *)(v192 + 192) = v201;
        long long v202 = *(_OWORD *)(v60 + v525);
        long long v203 = *(_OWORD *)(v60 + v525 + 16);
        long long v204 = *(_OWORD *)(v60 + v525 + 48);
        *(_OWORD *)(v192 + 32) = *(_OWORD *)(v60 + v525 + 32);
        *(_OWORD *)(v192 + 48) = v204;
        *(_OWORD *)unint64_t v192 = v202;
        *(_OWORD *)(v192 + 16) = v203;
        int v205 = (_OWORD *)((v59 + v525 + 255) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v206 = (long long *)((v60 + v525 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v207 = *v206;
        *(_OWORD *)((char *)v205 + 9) = *(long long *)((char *)v206 + 9);
        *int v205 = v207;
        unint64_t v208 = (v59 + v525 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v209 = (v60 + v525 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v210 = *(_OWORD *)v209;
        *(unsigned char *)(v208 + 16) = *(unsigned char *)(v209 + 16);
        *(_OWORD *)unint64_t v208 = v210;
        unint64_t v211 = (void *)((v59 + v525 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v212 = (void *)((v60 + v525 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v211 = *v212;
        *(_OWORD *)(((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        unint64_t v142 = (_OWORD *)((a1 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v31 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        unint64_t v77 = v488;
        break;
    }
  }
  else
  {
    unint64_t v77 = v512;
    unsigned int v78 = a2[v512];
    if (v78 >= 6 && v512 != 0) {
      unsigned int v78 = *(_DWORD *)a2 + 6;
    }
    uint64_t v80 = ~v3;
    uint64_t v81 = ~v509;
    uint64_t v82 = ~v492;
    uint64_t v83 = a1;
    switch(v78)
    {
      case 1u:
        uint64_t v490 = ~v487;
        unint64_t v528 = v524 + 16;
        uint64_t v518 = v36;
        unint64_t v147 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32);
        uint64_t v498 = v42;
        uint64_t v148 = v41;
        uint64_t v149 = v80;
        v147(a1, a2, AssociatedTypeWitness);
        uint64_t v150 = (v460 + a1) & v149;
        uint64_t v500 = v149;
        unint64_t v151 = (unint64_t)&a2[v460] & v149;
        v147(v150, (unsigned __int8 *)v151, AssociatedTypeWitness);
        uint64_t v152 = (v150 + v478 + v509) & v81;
        uint64_t v505 = ~v509;
        unint64_t v153 = (v151 + v478 + v509) & v81;
        long long v455 = *(void (**)(uint64_t, unint64_t, uint64_t))(v473 + 32);
        v455(v152, v153, v463);
        uint64_t v154 = (void *)((v458 + v152) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v155 = (void *)((v458 + v153) & 0xFFFFFFFFFFFFFFF8);
        void *v154 = *v155;
        unint64_t v156 = ((unint64_t)v154 + v462) & v82;
        unint64_t v157 = ((unint64_t)v155 + v462) & v82;
        unint64_t v481 = *(void (**)(unint64_t, unint64_t, uint64_t))(v474 + 32);
        v481(v156, v157, v467);
        unint64_t v158 = (void *)((v465 + v156) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v159 = (void *)((v465 + v157) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v158 = *v159;
        *(_OWORD *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v469 + v152) = *(_OWORD *)(v469 + v153);
        unint64_t v160 = (v530 + v469 + v152) & v148;
        uint64_t v523 = v148;
        unint64_t v161 = (v530 + v469 + v153) & v148;
        *(unsigned char *)unint64_t v160 = *(unsigned char *)v161;
        uint64_t v162 = v160 | 4;
        int v163 = *(_DWORD *)(v161 | 4);
        *(unsigned char *)(v162 + 4) = *(unsigned char *)((v161 | 4) + 4);
        *(_DWORD *)uint64_t v162 = v163;
        *(_WORD *)(v160 + 10) = *(_WORD *)(v161 + 0xA);
        unint64_t v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v477 + 32);
        v164((v482 + v160) & v498, (v482 + v161) & v498, v476);
        unint64_t v165 = (v483 + ((v482 + v160) & v498)) & v498;
        unint64_t v166 = (v483 + ((v482 + v161) & v498)) & v498;
        v164(v165, v166, v476);
        unint64_t v167 = (unsigned char *)(v165 + v484);
        *unint64_t v167 = *(unsigned char *)(v166 + v484);
        v167[1] = *(unsigned char *)(v166 + v484 + 1);
        v167[2] = *(unsigned char *)(v166 + v484 + 2);
        v167[3] = *(unsigned char *)(v166 + v484 + 3);
        v167[4] = *(unsigned char *)(v166 + v484 + 4);
        unint64_t v168 = (v165 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v169 = (v166 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v168 = *(_OWORD *)v169;
        *(unsigned char *)(v168 + 16) = *(unsigned char *)(v169 + 16);
        *(unsigned char *)(v168 + 17) = *(unsigned char *)(v169 + 17);
        *(unsigned char *)(v168 + 18) = *(unsigned char *)(v169 + 18);
        *(unsigned char *)(v168 + 19) = *(unsigned char *)(v169 + 19);
        unint64_t v170 = (v168 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v171 = (v169 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v170 = *(void *)v171;
        *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
        *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
        *(unsigned char *)(v170 + 10) = *(unsigned char *)(v171 + 10);
        *(unsigned char *)(v170 + 11) = *(unsigned char *)(v171 + 11);
        *(unsigned char *)(v170 + 12) = *(unsigned char *)(v171 + 12);
        unint64_t v172 = (void *)((v169 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v173 = (void *)((v168 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v173 = *v172;
        unint64_t v174 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v175 = ((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v174 = *(void *)v175;
        *(unsigned char *)(v174 + 8) = *(unsigned char *)(v175 + 8);
        *(unsigned char *)(v174 + 9) = *(unsigned char *)(v175 + 9);
        unint64_t v176 = (void *)((v485 + v174) & v498);
        unint64_t v177 = (const void *)((v485 + v175) & v498);
        unint64_t v457 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48);
        if (v457(v177, 1, v476))
        {
          memcpy(v176, v177, __n);
        }
        else
        {
          v164((unint64_t)v176, (unint64_t)v177, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v176, 0, 1, v476);
        }
        unint64_t v311 = (void *)(((unint64_t)v176 + v486) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v312 = (void *)(((unint64_t)v177 + v486) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v311 = *v312;
        unint64_t v313 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v314 = ((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v315 = *(void *)v314;
        *(unsigned char *)(v313 + 8) = *(unsigned char *)(v314 + 8);
        *(void *)unint64_t v313 = v315;
        uint64_t v316 = (void *)(((unint64_t)v311 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v317 = (void *)(((unint64_t)v312 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v316 = *v317;
        uint64_t v318 = (_OWORD *)(((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v319 = (_OWORD *)(((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v318 = *v319;
        unint64_t v320 = ((unint64_t)v318 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v321 = ((unint64_t)v319 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v322 = *(void *)v321;
        *(unsigned char *)(v320 + 8) = *(unsigned char *)(v321 + 8);
        *(void *)unint64_t v320 = v322;
        *(unsigned char *)(v320 + 9) = *(unsigned char *)(v321 + 9);
        unint64_t v323 = (v320 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v324 = (v321 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v315) = *(_DWORD *)v324;
        *(unsigned char *)(v323 + 4) = *(unsigned char *)(v324 + 4);
        *(_DWORD *)unint64_t v323 = v315;
        *(_OWORD *)((v320 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v321 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v325 = v528 + v160;
        long long v326 = *(_OWORD *)(v528 + v161 + 112);
        long long v328 = *(_OWORD *)(v528 + v161 + 64);
        long long v327 = *(_OWORD *)(v528 + v161 + 80);
        *(_OWORD *)(v325 + 96) = *(_OWORD *)(v528 + v161 + 96);
        *(_OWORD *)(v325 + 112) = v326;
        *(_OWORD *)(v325 + 64) = v328;
        *(_OWORD *)(v325 + 80) = v327;
        long long v329 = *(_OWORD *)(v528 + v161 + 176);
        long long v331 = *(_OWORD *)(v528 + v161 + 128);
        long long v330 = *(_OWORD *)(v528 + v161 + 144);
        *(_OWORD *)(v325 + 160) = *(_OWORD *)(v528 + v161 + 160);
        *(_OWORD *)(v325 + 176) = v329;
        *(_OWORD *)(v325 + 128) = v331;
        *(_OWORD *)(v325 + 144) = v330;
        long long v333 = *(_OWORD *)(v528 + v161 + 208);
        long long v332 = *(_OWORD *)(v528 + v161 + 224);
        long long v334 = *(_OWORD *)(v528 + v161 + 192);
        *(void *)(v325 + 240) = *(void *)(v528 + v161 + 240);
        *(_OWORD *)(v325 + 208) = v333;
        *(_OWORD *)(v325 + 224) = v332;
        *(_OWORD *)(v325 + 192) = v334;
        long long v335 = *(_OWORD *)(v528 + v161);
        long long v336 = *(_OWORD *)(v528 + v161 + 16);
        long long v337 = *(_OWORD *)(v528 + v161 + 48);
        *(_OWORD *)(v325 + 32) = *(_OWORD *)(v528 + v161 + 32);
        *(_OWORD *)(v325 + 48) = v337;
        *(_OWORD *)unint64_t v325 = v335;
        *(_OWORD *)(v325 + 16) = v336;
        long long v338 = (_OWORD *)((v528 + v160 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v339 = (long long *)((v528 + v161 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v340 = *v339;
        *(_OWORD *)((char *)v338 + 9) = *(long long *)((char *)v339 + 9);
        _OWORD *v338 = v340;
        unint64_t v341 = (v528 + v160 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v342 = (v528 + v161 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v343 = *(_OWORD *)v342;
        *(unsigned char *)(v341 + 16) = *(unsigned char *)(v342 + 16);
        *(_OWORD *)unint64_t v341 = v343;
        uint64_t v344 = (void *)((v528 + v160 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v345 = (void *)((v528 + v161 + 311) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v344 = *v345;
        *(_OWORD *)(((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v345 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        unint64_t v346 = (unint64_t)&a2[v449] & v490;
        v147((v449 + a1) & v490, (unsigned __int8 *)v346, AssociatedTypeWitness);
        uint64_t v533 = (v449 + a1) & v490;
        uint64_t v347 = (v460 + v533) & v500;
        unint64_t v491 = v346;
        unint64_t v348 = (v460 + v346) & v500;
        v147(v347, (unsigned __int8 *)v348, AssociatedTypeWitness);
        uint64_t v349 = (v451 + v347) & v505;
        unint64_t v350 = (v451 + v348) & v505;
        v455(v349, v350, v463);
        long long v351 = (void *)((v458 + v349) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v352 = (void *)((v458 + v350) & 0xFFFFFFFFFFFFFFF8);
        *long long v351 = *v352;
        unint64_t v353 = ((unint64_t)v351 + v462) & v82;
        unint64_t v354 = ((unint64_t)v352 + v462) & v82;
        v481(v353, v354, v467);
        unint64_t v355 = (void *)((v465 + v353) & 0xFFFFFFFFFFFFFFF8);
        int v356 = (void *)((v465 + v354) & 0xFFFFFFFFFFFFFFF8);
        void *v355 = *v356;
        *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v349 + v469) = *(_OWORD *)(v350 + v469);
        unint64_t v357 = (v530 + v349 + v469) & v148;
        unint64_t v358 = (v530 + v350 + v469) & v148;
        *(unsigned char *)unint64_t v357 = *(unsigned char *)v358;
        uint64_t v359 = v357 | 4;
        int v360 = *(_DWORD *)(v358 | 4);
        *(unsigned char *)(v359 + 4) = *(unsigned char *)((v358 | 4) + 4);
        *(_DWORD *)uint64_t v359 = v360;
        *(_WORD *)(v357 + 10) = *(_WORD *)(((v530 + v350 + v469) & v523) + 0xA);
        v164((v482 + v357) & v498, (v482 + v358) & v498, v476);
        unint64_t v361 = (v483 + ((v482 + v357) & v498)) & v498;
        unint64_t v362 = (v483 + ((v482 + v358) & v498)) & v498;
        v164(v361, v362, v476);
        long long v363 = (unsigned char *)(v361 + v484);
        *long long v363 = *(unsigned char *)(v362 + v484);
        v363[1] = *(unsigned char *)(v362 + v484 + 1);
        v363[2] = *(unsigned char *)(v362 + v484 + 2);
        v363[3] = *(unsigned char *)(v362 + v484 + 3);
        v363[4] = *(unsigned char *)(v362 + v484 + 4);
        unint64_t v364 = (v361 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v365 = (v362 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v364 = *(_OWORD *)v365;
        *(unsigned char *)(v364 + 16) = *(unsigned char *)(v365 + 16);
        *(unsigned char *)(v364 + 17) = *(unsigned char *)(v365 + 17);
        *(unsigned char *)(v364 + 18) = *(unsigned char *)(v365 + 18);
        *(unsigned char *)(v364 + 19) = *(unsigned char *)(v365 + 19);
        unint64_t v366 = (v364 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v367 = (v365 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v366 = *(void *)v367;
        *(unsigned char *)(v366 + 8) = *(unsigned char *)(v367 + 8);
        *(unsigned char *)(v366 + 9) = *(unsigned char *)(v367 + 9);
        *(unsigned char *)(v366 + 10) = *(unsigned char *)(v367 + 10);
        *(unsigned char *)(v366 + 11) = *(unsigned char *)(v367 + 11);
        *(unsigned char *)(v366 + 12) = *(unsigned char *)(v367 + 12);
        long long v368 = (void *)((v364 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v369 = (void *)((v365 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v368 = *v369;
        unint64_t v370 = ((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v371 = ((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v370 = *(void *)v371;
        *(unsigned char *)(v370 + 8) = *(unsigned char *)(v371 + 8);
        *(unsigned char *)(v370 + 9) = *(unsigned char *)(v371 + 9);
        uint64_t v372 = (void *)((v485 + v370) & v498);
        unint64_t v373 = (const void *)((v485 + v371) & v498);
        if (v457(v373, 1, v476))
        {
          memcpy(v372, v373, __n);
        }
        else
        {
          v164((unint64_t)v372, (unint64_t)v373, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v372, 0, 1, v476);
        }
        uint64_t v36 = v518;
        char v144 = 0;
        long long v411 = (void *)(((unint64_t)v372 + v486) & 0xFFFFFFFFFFFFFFF8);
        long long v412 = (void *)(((unint64_t)v373 + v486) & 0xFFFFFFFFFFFFFFF8);
        *long long v411 = *v412;
        unint64_t v413 = ((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v414 = ((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v415 = *(void *)v414;
        *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
        *(void *)unint64_t v413 = v415;
        long long v416 = (void *)(((unint64_t)v411 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v417 = (void *)(((unint64_t)v412 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v416 = *v417;
        long long v418 = (_OWORD *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v419 = (_OWORD *)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v418 = *v419;
        unint64_t v420 = ((unint64_t)v418 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v421 = ((unint64_t)v419 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v422 = *(void *)v421;
        *(unsigned char *)(v420 + 8) = *(unsigned char *)(v421 + 8);
        *(void *)unint64_t v420 = v422;
        *(unsigned char *)(v420 + 9) = *(unsigned char *)(v421 + 9);
        unint64_t v423 = (v420 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v424 = (v421 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v415) = *(_DWORD *)v424;
        *(unsigned char *)(v423 + 4) = *(unsigned char *)(v424 + 4);
        *(_DWORD *)unint64_t v423 = v415;
        *(_OWORD *)((v420 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v421 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v425 = v357 + v528;
        long long v426 = *(_OWORD *)(v358 + v528 + 112);
        long long v428 = *(_OWORD *)(v358 + v528 + 64);
        long long v427 = *(_OWORD *)(v358 + v528 + 80);
        *(_OWORD *)(v425 + 96) = *(_OWORD *)(v358 + v528 + 96);
        *(_OWORD *)(v425 + 112) = v426;
        *(_OWORD *)(v425 + 64) = v428;
        *(_OWORD *)(v425 + 80) = v427;
        long long v429 = *(_OWORD *)(v358 + v528 + 176);
        long long v431 = *(_OWORD *)(v358 + v528 + 128);
        long long v430 = *(_OWORD *)(v358 + v528 + 144);
        *(_OWORD *)(v425 + 160) = *(_OWORD *)(v358 + v528 + 160);
        *(_OWORD *)(v425 + 176) = v429;
        *(_OWORD *)(v425 + 128) = v431;
        *(_OWORD *)(v425 + 144) = v430;
        long long v433 = *(_OWORD *)(v358 + v528 + 208);
        long long v432 = *(_OWORD *)(v358 + v528 + 224);
        long long v434 = *(_OWORD *)(v358 + v528 + 192);
        *(void *)(v425 + 240) = *(void *)(v358 + v528 + 240);
        *(_OWORD *)(v425 + 208) = v433;
        *(_OWORD *)(v425 + 224) = v432;
        *(_OWORD *)(v425 + 192) = v434;
        long long v435 = *(_OWORD *)(v358 + v528);
        long long v436 = *(_OWORD *)(v358 + v528 + 16);
        long long v437 = *(_OWORD *)(v358 + v528 + 48);
        *(_OWORD *)(v425 + 32) = *(_OWORD *)(v358 + v528 + 32);
        *(_OWORD *)(v425 + 48) = v437;
        *(_OWORD *)unint64_t v425 = v435;
        *(_OWORD *)(v425 + 16) = v436;
        long long v438 = (_OWORD *)((v357 + v528 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v439 = (long long *)((v358 + v528 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v440 = *v439;
        *(_OWORD *)((char *)v438 + 9) = *(long long *)((char *)v439 + 9);
        *long long v438 = v440;
        unint64_t v441 = (v357 + v528 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v442 = (v358 + v528 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v443 = *(_OWORD *)v442;
        *(unsigned char *)(v441 + 16) = *(unsigned char *)(v442 + 16);
        *(_OWORD *)unint64_t v441 = v443;
        uint64_t v444 = (void *)((v358 + v528 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v445 = (void *)((v357 + v528 + 311) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v445 = *v444;
        *(_OWORD *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v446 = (void *)((v452 + v491) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v447 = (void *)((v452 + v533) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v447 = *v446;
        unint64_t v142 = (_OWORD *)(((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)(((unint64_t)v446 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v145 = 1;
        unint64_t v77 = v512;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        *(unsigned char *)(v2 + a1) = a2[v2];
        unint64_t v142 = (_OWORD *)(((v2 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v143 = (_OWORD *)(((unint64_t)&a2[v2] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v145 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        unint64_t v142 = (_OWORD *)((a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v2 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v145 = 3;
        break;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        *(unsigned char *)(v2 + a1) = a2[v2];
        unint64_t v142 = (_OWORD *)(((v2 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v143 = (_OWORD *)(((unint64_t)&a2[v2] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v145 = 4;
        break;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        unint64_t v142 = (_OWORD *)((a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v2 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v145 = 5;
        break;
      default:
        uint64_t v521 = v41;
        unint64_t v526 = v524 + 16;
        uint64_t v516 = v36;
        uint64_t v84 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32);
        uint64_t v85 = v42;
        v84(a1, a2, AssociatedTypeWitness);
        unint64_t v86 = (unint64_t)&a2[v460] & ~v495;
        v84((v460 + a1) & ~v495, (unsigned __int8 *)v86, AssociatedTypeWitness);
        uint64_t v87 = (((v460 + a1) & ~v495) + v478 + v509) & v81;
        unint64_t v88 = (v86 + v478 + v509) & v81;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v473 + 32))(v87, v88, v463);
        uint64_t v89 = (void *)((v458 + v87) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v90 = (void *)((v458 + v88) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v89 = *v90;
        unint64_t v91 = ((unint64_t)v89 + v462) & v82;
        unint64_t v92 = ((unint64_t)v90 + v462) & v82;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v474 + 32))(v91, v92, v467);
        uint64_t v93 = (void *)((v465 + v91) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v94 = (void *)((v465 + v92) & 0xFFFFFFFFFFFFFFF8);
        void *v93 = *v94;
        *(_OWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v469 + v87) = *(_OWORD *)(v469 + v88);
        unint64_t v95 = (v530 + v469 + v87) & v521;
        unint64_t v96 = (v530 + v469 + v88) & v521;
        *(unsigned char *)unint64_t v95 = *(unsigned char *)v96;
        uint64_t v97 = v95 | 4;
        int v98 = *(_DWORD *)(v96 | 4);
        *(unsigned char *)(v97 + 4) = *(unsigned char *)((v96 | 4) + 4);
        *(_DWORD *)uint64_t v97 = v98;
        *(_WORD *)(v95 + 10) = *(_WORD *)(v96 + 0xA);
        unint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v477 + 32);
        v99((v482 + v95) & v85, (v482 + v96) & v85, v476);
        unint64_t v100 = (v483 + ((v482 + v95) & v85)) & v85;
        unint64_t v101 = (v483 + ((v482 + v96) & v85)) & v85;
        v99(v100, v101, v476);
        uint64_t v102 = (unsigned char *)(v100 + v484);
        unsigned char *v102 = *(unsigned char *)(v101 + v484);
        v102[1] = *(unsigned char *)(v101 + v484 + 1);
        v102[2] = *(unsigned char *)(v101 + v484 + 2);
        v102[3] = *(unsigned char *)(v101 + v484 + 3);
        v102[4] = *(unsigned char *)(v101 + v484 + 4);
        unint64_t v103 = (v100 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v104 = (v101 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v103 = *(_OWORD *)v104;
        *(unsigned char *)(v103 + 16) = *(unsigned char *)(v104 + 16);
        *(unsigned char *)(v103 + 17) = *(unsigned char *)(v104 + 17);
        *(unsigned char *)(v103 + 18) = *(unsigned char *)(v104 + 18);
        *(unsigned char *)(v103 + 19) = *(unsigned char *)(v104 + 19);
        unint64_t v105 = (v103 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v106 = (v104 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v105 = *(void *)v106;
        *(unsigned char *)(v105 + 8) = *(unsigned char *)(v106 + 8);
        *(unsigned char *)(v105 + 9) = *(unsigned char *)(v106 + 9);
        *(unsigned char *)(v105 + 10) = *(unsigned char *)(v106 + 10);
        *(unsigned char *)(v105 + 11) = *(unsigned char *)(v106 + 11);
        *(unsigned char *)(v105 + 12) = *(unsigned char *)(v106 + 12);
        unint64_t v107 = (void *)((v104 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v108 = (void *)((v103 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v108 = *v107;
        unint64_t v109 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v110 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v109 = *(void *)v110;
        *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
        *(unsigned char *)(v109 + 9) = *(unsigned char *)(v110 + 9);
        unsigned int v111 = (void *)((v485 + v109) & v85);
        unsigned int v112 = (const void *)((v485 + v110) & v85);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48))(v112, 1, v476))
        {
          memcpy(v111, v112, __n);
        }
        else
        {
          v99((unint64_t)v111, (unint64_t)v112, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v111, 0, 1, v476);
        }
        uint64_t v36 = v516;
        char v145 = 0;
        char v144 = 0;
        unint64_t v213 = (void *)(((unint64_t)v111 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v214 = (void *)(((unint64_t)v112 + v486) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v213 = *v214;
        unint64_t v215 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v216 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v217 = *(void *)v216;
        *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
        *(void *)unint64_t v215 = v217;
        unint64_t v218 = (void *)(((unint64_t)v213 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = (void *)(((unint64_t)v214 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v218 = *v219;
        unint64_t v220 = (_OWORD *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v221 = (_OWORD *)(((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v220 = *v221;
        unint64_t v222 = ((unint64_t)v220 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v223 = ((unint64_t)v221 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v224 = *(void *)v223;
        *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
        *(void *)unint64_t v222 = v224;
        *(unsigned char *)(v222 + 9) = *(unsigned char *)(v223 + 9);
        unint64_t v225 = (v222 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v226 = (v223 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v217) = *(_DWORD *)v226;
        *(unsigned char *)(v225 + 4) = *(unsigned char *)(v226 + 4);
        *(_DWORD *)unint64_t v225 = v217;
        *(_OWORD *)((v222 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v223 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v227 = v526 + v95;
        long long v228 = *(_OWORD *)(v526 + v96 + 112);
        long long v230 = *(_OWORD *)(v526 + v96 + 64);
        long long v229 = *(_OWORD *)(v526 + v96 + 80);
        *(_OWORD *)(v227 + 96) = *(_OWORD *)(v526 + v96 + 96);
        *(_OWORD *)(v227 + 112) = v228;
        *(_OWORD *)(v227 + 64) = v230;
        *(_OWORD *)(v227 + 80) = v229;
        long long v231 = *(_OWORD *)(v526 + v96 + 176);
        long long v233 = *(_OWORD *)(v526 + v96 + 128);
        long long v232 = *(_OWORD *)(v526 + v96 + 144);
        *(_OWORD *)(v227 + 160) = *(_OWORD *)(v526 + v96 + 160);
        *(_OWORD *)(v227 + 176) = v231;
        *(_OWORD *)(v227 + 128) = v233;
        *(_OWORD *)(v227 + 144) = v232;
        long long v235 = *(_OWORD *)(v526 + v96 + 208);
        long long v234 = *(_OWORD *)(v526 + v96 + 224);
        long long v236 = *(_OWORD *)(v526 + v96 + 192);
        *(void *)(v227 + 240) = *(void *)(v526 + v96 + 240);
        *(_OWORD *)(v227 + 208) = v235;
        *(_OWORD *)(v227 + 224) = v234;
        *(_OWORD *)(v227 + 192) = v236;
        long long v237 = *(_OWORD *)(v526 + v96);
        long long v238 = *(_OWORD *)(v526 + v96 + 16);
        long long v239 = *(_OWORD *)(v526 + v96 + 48);
        *(_OWORD *)(v227 + 32) = *(_OWORD *)(v526 + v96 + 32);
        *(_OWORD *)(v227 + 48) = v239;
        *(_OWORD *)unint64_t v227 = v237;
        *(_OWORD *)(v227 + 16) = v238;
        unint64_t v240 = (_OWORD *)((v526 + v95 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v241 = (long long *)((v526 + v96 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v242 = *v241;
        *(_OWORD *)((char *)v240 + 9) = *(long long *)((char *)v241 + 9);
        *unint64_t v240 = v242;
        unint64_t v243 = (v526 + v95 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v244 = (v526 + v96 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v245 = *(_OWORD *)v244;
        *(unsigned char *)(v243 + 16) = *(unsigned char *)(v244 + 16);
        *(_OWORD *)unint64_t v243 = v245;
        unint64_t v246 = (void *)((v526 + v95 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v247 = (void *)((v526 + v96 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v246 = *v247;
        *(_OWORD *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        unint64_t v142 = (_OWORD *)((a1 + v448 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v143 = (_OWORD *)((unint64_t)&a2[v448 + 7] & 0xFFFFFFFFFFFFFFF8);
        unint64_t v77 = v512;
        break;
    }
  }
  _OWORD *v142 = *v143;
  *(unsigned char *)(v83 + v77) = v145;
  *(unsigned char *)(v83 + v36) = v144;
  return v83;
}

unsigned __int8 *sub_100632800(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v590 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v590 + 80);
    uint64_t v550 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v552 = v6;
    uint64_t v553 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v555 = *(void *)(v8 - 8);
    uint64_t v556 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v555 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v533 = v3 + v10;
    uint64_t v549 = *(void *)(v6 + 64) + 7;
    uint64_t v551 = v9 + 8;
    uint64_t v571 = v9;
    uint64_t v554 = *(void *)(v555 + 64) + 7;
    unint64_t v557 = ((((v554 + ((v9 + 8 + (v549 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v585 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v585 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v601 = (v12 | 7) + 16;
    uint64_t v562 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v563 = v13 + v12;
    uint64_t v537 = v13 + 12;
    uint64_t v564 = v12 + 10;
    uint64_t v558 = v13;
    uint64_t v559 = v11;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v585 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v565 = v14 + 7;
    unint64_t v569 = (((((((((v14
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v573 = v4;
    unint64_t v15 = (((v569 + 327 + ((v601 + v557 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v594 = v10;
    uint64_t v17 = v10 | v4 | v12;
    unint64_t v531 = v15 + 16;
    unint64_t v532 = v15 + 16 + v17;
    uint64_t v566 = v17;
    unint64_t v534 = v15 + 23;
    unint64_t v18 = ((((v15 + 23 + (v532 & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v19 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v560 = v3;
    if (v19 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v19 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v19 > v16) {
      unint64_t v16 = v19;
    }
    if (v16 > v18) {
      unint64_t v18 = v16;
    }
    unint64_t v592 = v18;
    unint64_t v583 = v18 | 1;
    uint64_t v586 = swift_getAssociatedTypeWitness();
    uint64_t v20 = *(void *)(*(void *)(v586 - 8) + 64);
    uint64_t v588 = *(void *)(v586 - 8);
    uint64_t v21 = *(unsigned __int8 *)(v588 + 80);
    uint64_t v540 = v20 + v21;
    uint64_t v22 = swift_getAssociatedTypeWitness();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v543 = v23;
    uint64_t v544 = v22;
    int v24 = *(_DWORD *)(v23 + 80) & 0xF8;
    uint64_t v25 = swift_getAssociatedTypeWitness();
    uint64_t v26 = v23;
    uint64_t v546 = *(void *)(v25 - 8);
    uint64_t v547 = v25;
    uint64_t v27 = *(unsigned __int8 *)(v546 + 80);
    uint64_t v28 = v24 | v27 | 7;
    uint64_t v530 = v20 + v28;
    uint64_t v541 = *(void *)(v26 + 64) + 7;
    uint64_t v542 = v27 + 8;
    uint64_t v545 = *(void *)(v546 + 64) + 7;
    unint64_t v548 = ((((v545 + ((v27 + 8 + (v541 & 0xFFFFFFFFFFFFFFF8)) & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v29 = (((v569 + 327 + ((v601 + v548 + ((v20 + v28 + ((v20 + v21) & ~v21)) & ~v28)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = v29 + 23;
    unint64_t v31 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v32 = v29 + 16;
    uint64_t v33 = v21 | v12 | v28;
    unint64_t v528 = v32;
    unint64_t v529 = v32 + v33;
    unint64_t v34 = (v20 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v581 = v20;
    unint64_t v35 = ((((v30 + ((v32 + v33) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v34 <= ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v34 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v34 > v31) {
      unint64_t v31 = v34;
    }
    if (v31 <= v35) {
      unint64_t v36 = v35;
    }
    else {
      unint64_t v36 = v31;
    }
    if ((v36 | 1) <= v583) {
      uint64_t v37 = v583;
    }
    else {
      uint64_t v37 = v36 | 1;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 2;
    if (v38 < 2)
    {
      uint64_t v41 = a2;
      uint64_t v43 = v571;
      uint64_t v42 = v573;
      uint64_t v45 = v566;
      unint64_t v44 = v569;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = a2;
      uint64_t v43 = v571;
      uint64_t v42 = v573;
      uint64_t v45 = v566;
      unint64_t v44 = v569;
      switch(v40)
      {
        case 1:
          int v46 = *a1;
          if (v37 < 4) {
            goto LABEL_34;
          }
          goto LABEL_35;
        case 2:
          int v46 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 3:
          int v46 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 4:
          int v46 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_34:
          }
            v46 |= v39 << (8 * v37);
LABEL_35:
          unsigned int v38 = v46 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v539 = ~v42;
    uint64_t v570 = ~v594;
    uint64_t v572 = ~v43;
    uint64_t v584 = ~(v12 | 7);
    uint64_t v47 = ~v12;
    unint64_t v48 = v44 + 16;
    uint64_t v49 = ~v45;
    uint64_t v538 = ~v21;
    uint64_t v567 = ~v28;
    uint64_t v50 = ~v27;
    uint64_t v527 = ~v33;
    uint64_t v536 = ~v27;
    if (v38 == 1)
    {
      unsigned int v51 = a1[v36];
      if (v51 >= 6 && v36 != 0) {
        unsigned int v51 = *(_DWORD *)a1 + 6;
      }
      switch(v51)
      {
        case 1u:
          unint64_t v516 = v30;
          uint64_t v520 = ~v45;
          unint64_t v575 = v44 + 16;
          unint64_t v66 = *(void (**)(unsigned __int8 *, uint64_t))(v588 + 8);
          v66(a1, v586);
          v66((unsigned __int8 *)((unint64_t)&a1[v540] & v538), v586);
          unint64_t v67 = (((unint64_t)&a1[v540] & v538) + v581 + v28) & v567;
          unint64_t v511 = *(void (**)(unint64_t, uint64_t))(v543 + 8);
          v511(v67, v544);
          swift_bridgeObjectRelease();
          uint64_t v509 = *(void (**)(unint64_t, uint64_t))(v546 + 8);
          v509((v542 + ((v541 + v67) & 0xFFFFFFFFFFFFFFF8)) & v50, v547);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v68 = (v601 + v548 + v67) & v584;
          unint64_t v69 = *(void (**)(unint64_t, uint64_t))(v559 + 8);
          v69((v562 + v68) & v47, v585);
          unint64_t v70 = (v563 + ((v562 + v68) & v47)) & v47;
          uint64_t v513 = v69;
          v69(v70, v585);
          swift_bridgeObjectRelease();
          unint64_t v71 = (v564
               + ((((((v537 + v70) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          uint64_t v507 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v559 + 48);
          if (!v507(v71, 1, v585)) {
            v69(v71, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v72 = (uint64_t *)((((((v565 + v71) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v73 = v72[1];
          if ((v73 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v72, v73);
          }
          swift_bridgeObjectRelease();
          unint64_t v74 = v68 + v575;
          LODWORD(v75) = -1;
          if (*(void *)(v74 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v75 = *(void *)(v74 + 16);
          }
          if ((int)v75 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v74 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v66((unsigned __int8 *)((unint64_t)&a1[v529] & v527), v586);
          unint64_t v76 = (v540 + ((unint64_t)&a1[v529] & v527)) & v538;
          v66((unsigned __int8 *)v76, v586);
          unint64_t v77 = (v530 + v76) & v567;
          v511(v77, v544);
          swift_bridgeObjectRelease();
          v509((v542 + ((v541 + v77) & 0xFFFFFFFFFFFFFFF8)) & v536, v547);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v78 = (v601 + v77 + v548) & v584;
          v69((v562 + v78) & v47, v585);
          unint64_t v79 = (v563 + ((v562 + v78) & v47)) & v47;
          v69(v79, v585);
          swift_bridgeObjectRelease();
          unint64_t v80 = (v564
               + ((((((v537 + v79) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!v507(v80, 1, v585)) {
            v513(v80, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = (uint64_t *)((((((v565 + v80) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v82 = v81[1];
          uint64_t v41 = a2;
          unint64_t v53 = v592;
          if ((v82 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v81, v82);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v575;
          unint64_t v83 = v78 + v575;
          LODWORD(v84) = -1;
          if (*(void *)(v83 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v84 = *(void *)(v83 + 16);
          }
          uint64_t v2 = a1;
          if ((int)v84 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v83 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v30 = v516;
          goto LABEL_94;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v588 + 8))(a1, v586);
          unint64_t v53 = v592;
          break;
        default:
          unint64_t v515 = v30;
          uint64_t v520 = ~v45;
          unint64_t v574 = v44 + 16;
          uint64_t v523 = v37;
          unint64_t v56 = *(void (**)(unsigned __int8 *, uint64_t))(v588 + 8);
          v56(a1, v586);
          v56((unsigned __int8 *)((unint64_t)&a1[v540] & v538), v586);
          unint64_t v57 = (((unint64_t)&a1[v540] & v538) + v581 + v28) & v567;
          (*(void (**)(unint64_t, uint64_t))(v543 + 8))(v57, v544);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v546 + 8))((v542 + ((v541 + v57) & 0xFFFFFFFFFFFFFFF8)) & v50, v547);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v58 = (v601 + v548 + v57) & v584;
          uint64_t v59 = *(void (**)(unint64_t, uint64_t))(v559 + 8);
          v59((v562 + v58) & v47, v585);
          unint64_t v60 = (v563 + ((v562 + v58) & v47)) & v47;
          v59(v60, v585);
          swift_bridgeObjectRelease();
          unint64_t v61 = (v564
               + ((((((v537 + v60) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v559 + 48))(v61, 1, v585)) {
            v59(v61, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v62 = (uint64_t *)((((((v565 + v61) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v63 = v62[1];
          if ((v63 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v62, v63);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v574;
          unint64_t v64 = v58 + v574;
          LODWORD(v65) = -1;
          if (*(void *)(v64 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v65 = *(void *)(v64 + 16);
          }
          uint64_t v37 = v523;
          uint64_t v41 = a2;
          unint64_t v53 = v592;
          unint64_t v30 = v515;
          if ((int)v65 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v64 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_93;
      }
    }
    else
    {
      unint64_t v53 = v592;
      unsigned int v54 = a1[v592];
      if (v54 >= 6 && v592 != 0) {
        unsigned int v54 = *(_DWORD *)a1 + 6;
      }
      switch(v54)
      {
        case 1u:
          unint64_t v518 = v30;
          uint64_t v521 = ~v45;
          unint64_t v577 = v44 + 16;
          unint64_t v94 = *(void (**)(unsigned __int8 *, uint64_t))(v590 + 8);
          v94(a1, AssociatedTypeWitness);
          v94((unsigned __int8 *)((unint64_t)&a1[v550] & v539), AssociatedTypeWitness);
          unint64_t v95 = (((unint64_t)&a1[v550] & v539) + v560 + v594) & v570;
          unint64_t v512 = *(void (**)(unint64_t, uint64_t))(v552 + 8);
          v512(v95, v553);
          swift_bridgeObjectRelease();
          unint64_t v510 = *(void (**)(unint64_t, uint64_t))(v555 + 8);
          v510((v551 + ((v549 + v95) & 0xFFFFFFFFFFFFFFF8)) & v572, v556);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v96 = (v601 + v557 + v95) & v584;
          uint64_t v97 = *(void (**)(unint64_t, uint64_t))(v559 + 8);
          v97((v562 + v96) & v47, v585);
          unint64_t v98 = (v563 + ((v562 + v96) & v47)) & v47;
          uint64_t v514 = v97;
          v97(v98, v585);
          swift_bridgeObjectRelease();
          unint64_t v99 = (v564
               + ((((((v537 + v98) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          uint64_t v508 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v559 + 48);
          if (!v508(v99, 1, v585)) {
            v97(v99, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v100 = (uint64_t *)((((((v565 + v99) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v101 = v100[1];
          if ((v101 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v100, v101);
          }
          swift_bridgeObjectRelease();
          unint64_t v102 = v577 + v96;
          LODWORD(v103) = -1;
          if (*(void *)(v102 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v103 = *(void *)(v102 + 16);
          }
          if ((int)v103 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v102 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v102 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v102 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v94((unsigned __int8 *)((unint64_t)&a1[v532] & v521), AssociatedTypeWitness);
          unint64_t v104 = (v550 + ((unint64_t)&a1[v532] & v521)) & v539;
          v94((unsigned __int8 *)v104, AssociatedTypeWitness);
          unint64_t v105 = (v533 + v104) & v570;
          v512(v105, v553);
          swift_bridgeObjectRelease();
          v510((v551 + ((v549 + v105) & 0xFFFFFFFFFFFFFFF8)) & v572, v556);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v106 = (v601 + v105 + v557) & v584;
          v97((v562 + v106) & v47, v585);
          unint64_t v107 = (v563 + ((v562 + v106) & v47)) & v47;
          v97(v107, v585);
          swift_bridgeObjectRelease();
          unint64_t v108 = (v564
                + ((((((v537 + v107) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!v508(v108, 1, v585)) {
            v514(v108, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v109 = (uint64_t *)((((((v565 + v108) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v110 = v109[1];
          uint64_t v41 = a2;
          unint64_t v53 = v592;
          if ((v110 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v109, v110);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v577;
          unint64_t v111 = v106 + v577;
          LODWORD(v112) = -1;
          if (*(void *)(v111 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v112 = *(void *)(v111 + 16);
          }
          uint64_t v2 = a1;
          if ((int)v112 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v111 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v111 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v111 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v30 = v518;
          uint64_t v49 = v521;
          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v590 + 8))(a1, AssociatedTypeWitness);
          break;
        default:
          unint64_t v517 = v30;
          uint64_t v520 = ~v45;
          unint64_t v576 = v44 + 16;
          uint64_t v524 = v37;
          uint64_t v85 = *(void (**)(unsigned __int8 *, uint64_t))(v590 + 8);
          v85(a1, AssociatedTypeWitness);
          v85((unsigned __int8 *)((unint64_t)&a1[v550] & v539), AssociatedTypeWitness);
          unint64_t v86 = (((unint64_t)&a1[v550] & v539) + v560 + v594) & v570;
          (*(void (**)(unint64_t, uint64_t))(v552 + 8))(v86, v553);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v555 + 8))((v551 + ((v549 + v86) & 0xFFFFFFFFFFFFFFF8)) & v572, v556);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v87 = (v601 + v557 + v86) & v584;
          unint64_t v88 = *(void (**)(unint64_t, uint64_t))(v559 + 8);
          v88((v562 + v87) & v47, v585);
          unint64_t v89 = (v563 + ((v562 + v87) & v47)) & v47;
          v88(v89, v585);
          swift_bridgeObjectRelease();
          unint64_t v90 = (v564
               + ((((((v537 + v89) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v559 + 48))(v90, 1, v585)) {
            v88(v90, v585);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v91 = (uint64_t *)((((((v565 + v90) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v92 = v91[1];
          if ((v92 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v91, v92);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v576;
          unint64_t v64 = v576 + v87;
          LODWORD(v93) = -1;
          if (*(void *)(v64 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v93 = *(void *)(v64 + 16);
          }
          uint64_t v37 = v524;
          uint64_t v41 = a2;
          unint64_t v53 = v592;
          unint64_t v30 = v517;
          if ((int)v93 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v64 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_93:
          sub_1000CF144(*(void *)((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_94:
          uint64_t v49 = v520;
          break;
      }
    }
    swift_bridgeObjectRelease();
    unsigned int v113 = v41[v37];
    unsigned int v114 = v113 - 2;
    if (v113 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v115 = v37;
      }
      else {
        uint64_t v115 = 4;
      }
      switch(v115)
      {
        case 1:
          int v116 = *v41;
          if (v37 >= 4) {
            goto LABEL_137;
          }
          goto LABEL_126;
        case 2:
          int v116 = *(unsigned __int16 *)v41;
          if (v37 >= 4) {
            goto LABEL_137;
          }
          goto LABEL_126;
        case 3:
          int v116 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          if (v37 < 4) {
            goto LABEL_126;
          }
          goto LABEL_137;
        case 4:
          int v116 = *(_DWORD *)v41;
          if (v37 < 4)
          {
LABEL_126:
            unsigned int v113 = (v116 | (v114 << (8 * v37))) + 2;
            break;
          }
LABEL_137:
          if (v116 != -1) {
            goto LABEL_138;
          }
          goto LABEL_128;
        default:
          break;
      }
    }
    if (v113 == 1)
    {
LABEL_128:
      unsigned int v117 = v41[v36];
      if (v117 >= 6 && v36 != 0) {
        unsigned int v117 = *(_DWORD *)v41 + 6;
      }
      switch(v117)
      {
        case 1u:
          unint64_t v519 = v30;
          uint64_t v525 = v37;
          unint64_t v177 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32);
          v177(v2, v41, v586);
          unint64_t v178 = (unint64_t)&v41[v540] & v538;
          v177((unsigned __int8 *)((unint64_t)&v2[v540] & v538), (unsigned __int8 *)v178, v586);
          unint64_t v179 = (((unint64_t)&v2[v540] & v538) + v581 + v28) & v567;
          unint64_t v180 = (v178 + v581 + v28) & v567;
          unint64_t v593 = *(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 32);
          v593(v179, v180, v544);
          unint64_t v181 = (void *)((v541 + v179) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v182 = (void *)((v541 + v180) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v181 = *v182;
          unint64_t v183 = ((unint64_t)v181 + v542) & v536;
          unint64_t v184 = ((unint64_t)v182 + v542) & v536;
          unint64_t v591 = *(void (**)(unint64_t, unint64_t, uint64_t))(v546 + 32);
          v591(v183, v184, v547);
          unint64_t v185 = (void *)((v545 + v183) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v186 = (void *)((v545 + v184) & 0xFFFFFFFFFFFFFFF8);
          void *v185 = *v186;
          *(_OWORD *)(((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v548 + v179) = *(_OWORD *)(v548 + v180);
          unint64_t v187 = (v601 + v548 + v179) & v584;
          unint64_t v188 = (v601 + v548 + v180) & v584;
          *(unsigned char *)unint64_t v187 = *(unsigned char *)v188;
          uint64_t v189 = v187 | 4;
          int v190 = *(_DWORD *)(v188 | 4);
          *(unsigned char *)(v189 + 4) = *(unsigned char *)((v188 | 4) + 4);
          *(_DWORD *)uint64_t v189 = v190;
          *(_WORD *)(v187 + 10) = *(_WORD *)(v188 + 0xA);
          unint64_t v191 = *(void (**)(unint64_t, unint64_t, uint64_t))(v559 + 32);
          v191((v562 + v187) & v47, (v562 + v188) & v47, v585);
          unint64_t v192 = (v563 + ((v562 + v187) & v47)) & v47;
          unint64_t v193 = (v563 + ((v562 + v188) & v47)) & v47;
          uint64_t v595 = v191;
          v191(v192, v193, v585);
          long long v194 = (unsigned char *)(v192 + v558);
          unsigned char *v194 = *(unsigned char *)(v193 + v558);
          v194[1] = *(unsigned char *)(v193 + v558 + 1);
          v194[2] = *(unsigned char *)(v193 + v558 + 2);
          v194[3] = *(unsigned char *)(v193 + v558 + 3);
          v194[4] = *(unsigned char *)(v193 + v558 + 4);
          unint64_t v195 = (v192 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v196 = (v193 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v195 = *(_OWORD *)v196;
          *(unsigned char *)(v195 + 16) = *(unsigned char *)(v196 + 16);
          *(unsigned char *)(v195 + 17) = *(unsigned char *)(v196 + 17);
          *(unsigned char *)(v195 + 18) = *(unsigned char *)(v196 + 18);
          *(unsigned char *)(v195 + 19) = *(unsigned char *)(v196 + 19);
          unint64_t v197 = (v195 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v198 = (v196 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v197 = *(void *)v198;
          *(unsigned char *)(v197 + 8) = *(unsigned char *)(v198 + 8);
          *(unsigned char *)(v197 + 9) = *(unsigned char *)(v198 + 9);
          *(unsigned char *)(v197 + 10) = *(unsigned char *)(v198 + 10);
          *(unsigned char *)(v197 + 11) = *(unsigned char *)(v198 + 11);
          *(unsigned char *)(v197 + 12) = *(unsigned char *)(v198 + 12);
          long long v199 = (void *)((v196 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v200 = (void *)((v195 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v200 = *v199;
          unint64_t v201 = ((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v202 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v201 = *(void *)v202;
          *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
          *(unsigned char *)(v201 + 9) = *(unsigned char *)(v202 + 9);
          long long v203 = (void *)((v564 + v201) & v47);
          long long v204 = (const void *)((v564 + v202) & v47);
          unint64_t v582 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v559 + 48);
          if (v582(v204, 1, v585))
          {
            memcpy(v203, v204, __n);
          }
          else
          {
            v191((unint64_t)v203, (unint64_t)v204, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v203, 0, 1, v585);
          }
          unint64_t v308 = (void *)(((unint64_t)v203 + v565) & 0xFFFFFFFFFFFFFFF8);
          long long v309 = (void *)(((unint64_t)v204 + v565) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v308 = *v309;
          unint64_t v310 = ((unint64_t)v308 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v311 = ((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v312 = *(void *)v311;
          *(unsigned char *)(v310 + 8) = *(unsigned char *)(v311 + 8);
          *(void *)unint64_t v310 = v312;
          unint64_t v313 = (void *)(((unint64_t)v308 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v314 = (void *)(((unint64_t)v309 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v313 = *v314;
          uint64_t v315 = (_OWORD *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v316 = (_OWORD *)(((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v315 = *v316;
          unint64_t v317 = ((unint64_t)v315 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v318 = ((unint64_t)v316 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v319 = *(void *)v318;
          *(unsigned char *)(v317 + 8) = *(unsigned char *)(v318 + 8);
          *(void *)unint64_t v317 = v319;
          *(unsigned char *)(v317 + 9) = *(unsigned char *)(v318 + 9);
          unint64_t v320 = (v317 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v312) = *(_DWORD *)v321;
          *(unsigned char *)(v320 + 4) = *(unsigned char *)(v321 + 4);
          *(_DWORD *)unint64_t v320 = v312;
          *(_OWORD *)((v317 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v318 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v322 = v187 + v48;
          long long v323 = *(_OWORD *)(v188 + v48 + 112);
          long long v325 = *(_OWORD *)(v188 + v48 + 64);
          long long v324 = *(_OWORD *)(v188 + v48 + 80);
          *(_OWORD *)(v322 + 96) = *(_OWORD *)(v188 + v48 + 96);
          *(_OWORD *)(v322 + 112) = v323;
          *(_OWORD *)(v322 + 64) = v325;
          *(_OWORD *)(v322 + 80) = v324;
          long long v326 = *(_OWORD *)(v188 + v48 + 176);
          long long v328 = *(_OWORD *)(v188 + v48 + 128);
          long long v327 = *(_OWORD *)(v188 + v48 + 144);
          *(_OWORD *)(v322 + 160) = *(_OWORD *)(v188 + v48 + 160);
          *(_OWORD *)(v322 + 176) = v326;
          *(_OWORD *)(v322 + 128) = v328;
          *(_OWORD *)(v322 + 144) = v327;
          long long v330 = *(_OWORD *)(v188 + v48 + 208);
          long long v329 = *(_OWORD *)(v188 + v48 + 224);
          long long v331 = *(_OWORD *)(v188 + v48 + 192);
          *(void *)(v322 + 240) = *(void *)(v188 + v48 + 240);
          *(_OWORD *)(v322 + 208) = v330;
          *(_OWORD *)(v322 + 224) = v329;
          *(_OWORD *)(v322 + 192) = v331;
          long long v332 = *(_OWORD *)(v188 + v48);
          long long v333 = *(_OWORD *)(v188 + v48 + 16);
          long long v334 = *(_OWORD *)(v188 + v48 + 48);
          *(_OWORD *)(v322 + 32) = *(_OWORD *)(v188 + v48 + 32);
          *(_OWORD *)(v322 + 48) = v334;
          *(_OWORD *)unint64_t v322 = v332;
          *(_OWORD *)(v322 + 16) = v333;
          long long v335 = (_OWORD *)((v187 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v336 = (long long *)((v188 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v337 = *v336;
          *(_OWORD *)((char *)v335 + 9) = *(long long *)((char *)v336 + 9);
          _OWORD *v335 = v337;
          unint64_t v338 = (v187 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v339 = (v188 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v340 = *(_OWORD *)v339;
          *(unsigned char *)(v338 + 16) = *(unsigned char *)(v339 + 16);
          *(_OWORD *)unint64_t v338 = v340;
          unint64_t v341 = (void *)((v187 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v342 = (void *)((v188 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          void *v341 = *v342;
          *(_OWORD *)(((unint64_t)v341 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v343 = (unint64_t)&a1[v529] & v527;
          v177((unsigned __int8 *)v343, (unsigned __int8 *)((unint64_t)&a2[v529] & v527), v586);
          unint64_t v598 = (unint64_t)&a2[v529] & v527;
          unint64_t v344 = (v540 + v598) & v538;
          v177((unsigned __int8 *)((v540 + v343) & v538), (unsigned __int8 *)v344, v586);
          unint64_t v345 = (v530 + ((v540 + v343) & v538)) & v567;
          uint64_t v346 = (v530 + v344) & v567;
          v593(v345, v346, v544);
          uint64_t v347 = (void *)((v541 + v345) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v348 = (void *)((v541 + v346) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v347 = *v348;
          unint64_t v349 = ((unint64_t)v347 + v542) & v536;
          unint64_t v350 = ((unint64_t)v348 + v542) & v536;
          v591(v349, v350, v547);
          long long v351 = (void *)((v545 + v349) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v352 = (void *)((v545 + v350) & 0xFFFFFFFFFFFFFFF8);
          *long long v351 = *v352;
          *(_OWORD *)(((unint64_t)v351 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v352 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v345 + v548) = *(_OWORD *)(v346 + v548);
          unint64_t v353 = (v601 + v345 + v548) & v584;
          unint64_t v354 = (v601 + v346 + v548) & v584;
          *(unsigned char *)unint64_t v353 = *(unsigned char *)v354;
          uint64_t v355 = v353 | 4;
          int v356 = *(_DWORD *)(v354 | 4);
          *(unsigned char *)(v355 + 4) = *(unsigned char *)((v354 | 4) + 4);
          *(_DWORD *)uint64_t v355 = v356;
          *(_WORD *)(v353 + 10) = *(_WORD *)(v354 + 0xA);
          v595((v562 + v353) & v47, (v562 + v354) & v47, v585);
          unint64_t v357 = (v563 + ((v562 + v353) & v47)) & v47;
          unint64_t v358 = (v563 + ((v562 + v354) & v47)) & v47;
          v595(v357, v358, v585);
          uint64_t v359 = (unsigned char *)(v357 + v558);
          *uint64_t v359 = *(unsigned char *)(v358 + v558);
          v359[1] = *(unsigned char *)(v358 + v558 + 1);
          v359[2] = *(unsigned char *)(v358 + v558 + 2);
          v359[3] = *(unsigned char *)(v358 + v558 + 3);
          v359[4] = *(unsigned char *)(v358 + v558 + 4);
          unint64_t v360 = (v357 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v361 = (v358 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v360 = *(_OWORD *)v361;
          *(unsigned char *)(v360 + 16) = *(unsigned char *)(v361 + 16);
          *(unsigned char *)(v360 + 17) = *(unsigned char *)(v361 + 17);
          *(unsigned char *)(v360 + 18) = *(unsigned char *)(v361 + 18);
          *(unsigned char *)(v360 + 19) = *(unsigned char *)(v361 + 19);
          unint64_t v362 = (v360 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v363 = (v361 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v362 = *(void *)v363;
          *(unsigned char *)(v362 + 8) = *(unsigned char *)(v363 + 8);
          *(unsigned char *)(v362 + 9) = *(unsigned char *)(v363 + 9);
          *(unsigned char *)(v362 + 10) = *(unsigned char *)(v363 + 10);
          *(unsigned char *)(v362 + 11) = *(unsigned char *)(v363 + 11);
          *(unsigned char *)(v362 + 12) = *(unsigned char *)(v363 + 12);
          unint64_t v364 = (void *)((v360 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v365 = (void *)((v361 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v364 = *v365;
          unint64_t v366 = ((unint64_t)v364 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v367 = ((unint64_t)v365 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v366 = *(void *)v367;
          *(unsigned char *)(v366 + 8) = *(unsigned char *)(v367 + 8);
          *(unsigned char *)(v366 + 9) = *(unsigned char *)(v367 + 9);
          long long v368 = (void *)((v564 + v366) & v47);
          uint64_t v369 = (const void *)((v564 + v367) & v47);
          if (v582(v369, 1, v585))
          {
            memcpy(v368, v369, __n);
          }
          else
          {
            v595((unint64_t)v368, (unint64_t)v369, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v368, 0, 1, v585);
          }
          uint64_t v37 = v525;
          long long v433 = (void *)(((unint64_t)v369 + v565) & 0xFFFFFFFFFFFFFFF8);
          long long v434 = (void *)(((unint64_t)v368 + v565) & 0xFFFFFFFFFFFFFFF8);
          *long long v434 = *v433;
          unint64_t v435 = ((unint64_t)v434 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v436 = ((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v437 = *(void *)v436;
          *(unsigned char *)(v435 + 8) = *(unsigned char *)(v436 + 8);
          *(void *)unint64_t v435 = v437;
          long long v438 = (void *)(((unint64_t)v434 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v439 = (void *)(((unint64_t)v433 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v438 = *v439;
          long long v440 = (_OWORD *)(((unint64_t)v438 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v441 = (_OWORD *)(((unint64_t)v439 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v440 = *v441;
          unint64_t v442 = ((unint64_t)v440 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v443 = ((unint64_t)v441 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v444 = *(void *)v443;
          *(unsigned char *)(v442 + 8) = *(unsigned char *)(v443 + 8);
          *(void *)unint64_t v442 = v444;
          *(unsigned char *)(v442 + 9) = *(unsigned char *)(v443 + 9);
          unint64_t v445 = (v442 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v446 = (v443 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v437) = *(_DWORD *)v446;
          *(unsigned char *)(v445 + 4) = *(unsigned char *)(v446 + 4);
          *(_DWORD *)unint64_t v445 = v437;
          *(_OWORD *)((v442 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v443 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v447 = v353 + v48;
          long long v448 = *(_OWORD *)(v354 + v48 + 112);
          long long v450 = *(_OWORD *)(v354 + v48 + 64);
          long long v449 = *(_OWORD *)(v354 + v48 + 80);
          *(_OWORD *)(v447 + 96) = *(_OWORD *)(v354 + v48 + 96);
          *(_OWORD *)(v447 + 112) = v448;
          *(_OWORD *)(v447 + 64) = v450;
          *(_OWORD *)(v447 + 80) = v449;
          long long v451 = *(_OWORD *)(v354 + v48 + 176);
          long long v453 = *(_OWORD *)(v354 + v48 + 128);
          long long v452 = *(_OWORD *)(v354 + v48 + 144);
          *(_OWORD *)(v447 + 160) = *(_OWORD *)(v354 + v48 + 160);
          *(_OWORD *)(v447 + 176) = v451;
          *(_OWORD *)(v447 + 128) = v453;
          *(_OWORD *)(v447 + 144) = v452;
          long long v455 = *(_OWORD *)(v354 + v48 + 208);
          long long v454 = *(_OWORD *)(v354 + v48 + 224);
          long long v456 = *(_OWORD *)(v354 + v48 + 192);
          *(void *)(v447 + 240) = *(void *)(v354 + v48 + 240);
          *(_OWORD *)(v447 + 208) = v455;
          *(_OWORD *)(v447 + 224) = v454;
          *(_OWORD *)(v447 + 192) = v456;
          long long v457 = *(_OWORD *)(v354 + v48);
          long long v458 = *(_OWORD *)(v354 + v48 + 16);
          long long v459 = *(_OWORD *)(v354 + v48 + 48);
          *(_OWORD *)(v447 + 32) = *(_OWORD *)(v354 + v48 + 32);
          *(_OWORD *)(v447 + 48) = v459;
          *(_OWORD *)unint64_t v447 = v457;
          *(_OWORD *)(v447 + 16) = v458;
          uint64_t v460 = (_OWORD *)((v353 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v461 = (long long *)((v354 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v462 = *v461;
          *(_OWORD *)((char *)v460 + 9) = *(long long *)((char *)v461 + 9);
          *uint64_t v460 = v462;
          unint64_t v463 = (v353 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v464 = (v354 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v465 = *(_OWORD *)v464;
          *(unsigned char *)(v463 + 16) = *(unsigned char *)(v464 + 16);
          *(_OWORD *)unint64_t v463 = v465;
          uint64_t v466 = (void *)((v353 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v467 = (void *)((v354 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v466 = *v467;
          *(_OWORD *)(((unint64_t)v466 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v468 = (void *)((v519 + v343) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v469 = (void *)((v519 + v598) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v468 = *v469;
          int v205 = (_OWORD *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)(((unint64_t)v469 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v208 = 1;
          unint64_t v53 = v36;
          char v207 = 1;
          uint64_t v2 = a1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32))(v2, v41, v586);
          v2[v581] = v41[v581];
          int v205 = (_OWORD *)(((unint64_t)&v2[v581] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v206 = (_OWORD *)(((unint64_t)&v41[v581] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v207 = 1;
          char v208 = 2;
          goto LABEL_160;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32))(v2, v41, v586);
          int v205 = (_OWORD *)((unint64_t)&v2[v581 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&v41[v581 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v207 = 1;
          char v208 = 3;
          goto LABEL_160;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32))(v2, v41, v586);
          v2[v581] = v41[v581];
          int v205 = (_OWORD *)(((unint64_t)&v2[v581] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v206 = (_OWORD *)(((unint64_t)&v41[v581] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v207 = 1;
          char v208 = 4;
          goto LABEL_160;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32))(v2, v41, v586);
          int v205 = (_OWORD *)((unint64_t)&v2[v581 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&v41[v581 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v207 = 1;
          char v208 = 5;
          goto LABEL_160;
        default:
          unint64_t v578 = v48;
          unint64_t v119 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v588 + 32);
          v119(v2, v41, v586);
          unint64_t v120 = (unint64_t)&v41[v540] & v538;
          v119((unsigned __int8 *)((unint64_t)&v2[v540] & v538), (unsigned __int8 *)v120, v586);
          unint64_t v121 = (((unint64_t)&v2[v540] & v538) + v581 + v28) & v567;
          unint64_t v122 = (v120 + v581 + v28) & v567;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 32))(v121, v122, v544);
          unint64_t v123 = (void *)((v541 + v121) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v124 = (void *)((v541 + v122) & 0xFFFFFFFFFFFFFFF8);
          void *v123 = *v124;
          unint64_t v125 = ((unint64_t)v123 + v542) & v536;
          unint64_t v126 = ((unint64_t)v124 + v542) & v536;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v546 + 32))(v125, v126, v547);
          int v127 = (void *)((v545 + v125) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v128 = (void *)((v545 + v126) & 0xFFFFFFFFFFFFFFF8);
          void *v127 = *v128;
          *(_OWORD *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v548 + v121) = *(_OWORD *)(v548 + v122);
          unint64_t v129 = (v601 + v548 + v121) & v584;
          unint64_t v130 = (v601 + v548 + v122) & v584;
          *(unsigned char *)unint64_t v129 = *(unsigned char *)v130;
          uint64_t v131 = v129 | 4;
          int v132 = *(_DWORD *)(v130 | 4);
          *(unsigned char *)(v131 + 4) = *(unsigned char *)((v130 | 4) + 4);
          *(_DWORD *)uint64_t v131 = v132;
          *(_WORD *)(v129 + 10) = *(_WORD *)(v130 + 0xA);
          unint64_t v133 = *(void (**)(unint64_t, unint64_t, uint64_t))(v559 + 32);
          v133((v562 + v129) & v47, (v562 + v130) & v47, v585);
          unint64_t v134 = (v563 + ((v562 + v129) & v47)) & v47;
          unint64_t v135 = (v563 + ((v562 + v130) & v47)) & v47;
          v133(v134, v135, v585);
          uint64_t v136 = (unsigned char *)(v134 + v558);
          *uint64_t v136 = *(unsigned char *)(v135 + v558);
          v136[1] = *(unsigned char *)(v135 + v558 + 1);
          v136[2] = *(unsigned char *)(v135 + v558 + 2);
          v136[3] = *(unsigned char *)(v135 + v558 + 3);
          v136[4] = *(unsigned char *)(v135 + v558 + 4);
          unint64_t v137 = (v134 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v138 = (v135 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v137 = *(_OWORD *)v138;
          *(unsigned char *)(v137 + 16) = *(unsigned char *)(v138 + 16);
          *(unsigned char *)(v137 + 17) = *(unsigned char *)(v138 + 17);
          *(unsigned char *)(v137 + 18) = *(unsigned char *)(v138 + 18);
          *(unsigned char *)(v137 + 19) = *(unsigned char *)(v138 + 19);
          unint64_t v139 = (v137 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v140 = (v138 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v139 = *(void *)v140;
          *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
          *(unsigned char *)(v139 + 9) = *(unsigned char *)(v140 + 9);
          *(unsigned char *)(v139 + 10) = *(unsigned char *)(v140 + 10);
          *(unsigned char *)(v139 + 11) = *(unsigned char *)(v140 + 11);
          *(unsigned char *)(v139 + 12) = *(unsigned char *)(v140 + 12);
          unint64_t v141 = (void *)((v138 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v142 = (void *)((v137 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v142 = *v141;
          unint64_t v143 = ((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v144 = ((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v143 = *(void *)v144;
          *(unsigned char *)(v143 + 8) = *(unsigned char *)(v144 + 8);
          *(unsigned char *)(v143 + 9) = *(unsigned char *)(v144 + 9);
          char v145 = (void *)((v564 + v143) & v47);
          uint64_t v146 = (const void *)((v564 + v144) & v47);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v559 + 48))(v146, 1, v585))
          {
            memcpy(v145, v146, __n);
          }
          else
          {
            v133((unint64_t)v145, (unint64_t)v146, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v145, 0, 1, v585);
          }
          uint64_t v2 = a1;
          char v208 = 0;
          long long v237 = (void *)(((unint64_t)v146 + v565) & 0xFFFFFFFFFFFFFFF8);
          long long v238 = (void *)(((unint64_t)v145 + v565) & 0xFFFFFFFFFFFFFFF8);
          void *v238 = *v237;
          unint64_t v239 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v240 = ((unint64_t)v237 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v241 = *(void *)v240;
          *(unsigned char *)(v239 + 8) = *(unsigned char *)(v240 + 8);
          *(void *)unint64_t v239 = v241;
          long long v242 = (void *)(((unint64_t)v238 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v243 = (void *)(((unint64_t)v237 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v242 = *v243;
          unint64_t v244 = (_OWORD *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v245 = (_OWORD *)(((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v244 = *v245;
          unint64_t v246 = ((unint64_t)v244 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v247 = ((unint64_t)v245 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v248 = *(void *)v247;
          *(unsigned char *)(v246 + 8) = *(unsigned char *)(v247 + 8);
          *(void *)unint64_t v246 = v248;
          *(unsigned char *)(v246 + 9) = *(unsigned char *)(v247 + 9);
          unint64_t v249 = (v246 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v250 = (v247 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v241) = *(_DWORD *)v250;
          *(unsigned char *)(v249 + 4) = *(unsigned char *)(v250 + 4);
          *(_DWORD *)unint64_t v249 = v241;
          *(_OWORD *)((v246 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v247 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v251 = v129 + v578;
          long long v252 = *(_OWORD *)(v130 + v578 + 112);
          long long v254 = *(_OWORD *)(v130 + v578 + 64);
          long long v253 = *(_OWORD *)(v130 + v578 + 80);
          *(_OWORD *)(v251 + 96) = *(_OWORD *)(v130 + v578 + 96);
          *(_OWORD *)(v251 + 112) = v252;
          *(_OWORD *)(v251 + 64) = v254;
          *(_OWORD *)(v251 + 80) = v253;
          long long v255 = *(_OWORD *)(v130 + v578 + 176);
          long long v257 = *(_OWORD *)(v130 + v578 + 128);
          long long v256 = *(_OWORD *)(v130 + v578 + 144);
          *(_OWORD *)(v251 + 160) = *(_OWORD *)(v130 + v578 + 160);
          *(_OWORD *)(v251 + 176) = v255;
          *(_OWORD *)(v251 + 128) = v257;
          *(_OWORD *)(v251 + 144) = v256;
          long long v259 = *(_OWORD *)(v130 + v578 + 208);
          long long v258 = *(_OWORD *)(v130 + v578 + 224);
          long long v260 = *(_OWORD *)(v130 + v578 + 192);
          *(void *)(v251 + 240) = *(void *)(v130 + v578 + 240);
          *(_OWORD *)(v251 + 208) = v259;
          *(_OWORD *)(v251 + 224) = v258;
          *(_OWORD *)(v251 + 192) = v260;
          long long v261 = *(_OWORD *)(v130 + v578);
          long long v262 = *(_OWORD *)(v130 + v578 + 16);
          long long v263 = *(_OWORD *)(v130 + v578 + 48);
          *(_OWORD *)(v251 + 32) = *(_OWORD *)(v130 + v578 + 32);
          *(_OWORD *)(v251 + 48) = v263;
          *(_OWORD *)unint64_t v251 = v261;
          *(_OWORD *)(v251 + 16) = v262;
          long long v264 = (_OWORD *)((v129 + v578 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v265 = (long long *)((v130 + v578 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v266 = *v265;
          *(_OWORD *)((char *)v264 + 9) = *(long long *)((char *)v265 + 9);
          _OWORD *v264 = v266;
          unint64_t v267 = (v129 + v578 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v268 = (v130 + v578 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v269 = *(_OWORD *)v268;
          *(unsigned char *)(v267 + 16) = *(unsigned char *)(v268 + 16);
          *(_OWORD *)unint64_t v267 = v269;
          long long v270 = (void *)((v129 + v578 + 311) & 0xFFFFFFFFFFFFFFF8);
          long long v271 = (void *)((v130 + v578 + 311) & 0xFFFFFFFFFFFFFFF8);
          *long long v270 = *v271;
          *(_OWORD *)(((unint64_t)v270 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v271 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v205 = (_OWORD *)((unint64_t)&a1[v528 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&a2[v528 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v207 = 1;
LABEL_160:
          unint64_t v53 = v36;
          break;
      }
    }
    else
    {
LABEL_138:
      unsigned int v147 = v41[v53];
      if (v147 >= 6 && v53 != 0) {
        unsigned int v147 = *(_DWORD *)v41 + 6;
      }
      switch(v147)
      {
        case 1u:
          uint64_t v522 = v49;
          unint64_t v580 = v48;
          uint64_t v526 = v37;
          unint64_t v209 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32);
          v209(v2, v41, AssociatedTypeWitness);
          unint64_t v210 = (unint64_t)&v41[v550] & v539;
          v209((unsigned __int8 *)((unint64_t)&v2[v550] & v539), (unsigned __int8 *)v210, AssociatedTypeWitness);
          unint64_t v211 = (((unint64_t)&v2[v550] & v539) + v560 + v594) & v570;
          unint64_t v212 = (v210 + v560 + v594) & v570;
          v596 = *(void (**)(unint64_t, unint64_t, uint64_t))(v552 + 32);
          v596(v211, v212, v553);
          unint64_t v213 = (void *)((v549 + v211) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v214 = (void *)((v549 + v212) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v213 = *v214;
          unint64_t v215 = ((unint64_t)v213 + v551) & v572;
          unint64_t v216 = ((unint64_t)v214 + v551) & v572;
          unint64_t v587 = *(void (**)(unint64_t, unint64_t, uint64_t))(v555 + 32);
          v587(v215, v216, v556);
          uint64_t v217 = (void *)((v554 + v215) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v218 = (void *)((v554 + v216) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v217 = *v218;
          *(_OWORD *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v557 + v211) = *(_OWORD *)(v557 + v212);
          unint64_t v219 = (v601 + v557 + v211) & v584;
          unint64_t v220 = (v601 + v557 + v212) & v584;
          *(unsigned char *)unint64_t v219 = *(unsigned char *)v220;
          uint64_t v221 = v219 | 4;
          int v222 = *(_DWORD *)(v220 | 4);
          *(unsigned char *)(v221 + 4) = *(unsigned char *)((v220 | 4) + 4);
          *(_DWORD *)uint64_t v221 = v222;
          *(_WORD *)(v219 + 10) = *(_WORD *)(v220 + 0xA);
          unint64_t v223 = *(void (**)(unint64_t, unint64_t, uint64_t))(v559 + 32);
          v223((v562 + v219) & v47, (v562 + v220) & v47, v585);
          unint64_t v224 = (v563 + ((v562 + v219) & v47)) & v47;
          unint64_t v225 = (v563 + ((v562 + v220) & v47)) & v47;
          v223(v224, v225, v585);
          unint64_t v226 = (unsigned char *)(v224 + v558);
          *unint64_t v226 = *(unsigned char *)(v225 + v558);
          v226[1] = *(unsigned char *)(v225 + v558 + 1);
          v226[2] = *(unsigned char *)(v225 + v558 + 2);
          v226[3] = *(unsigned char *)(v225 + v558 + 3);
          v226[4] = *(unsigned char *)(v225 + v558 + 4);
          unint64_t v227 = (v224 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v228 = (v225 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v227 = *(_OWORD *)v228;
          *(unsigned char *)(v227 + 16) = *(unsigned char *)(v228 + 16);
          *(unsigned char *)(v227 + 17) = *(unsigned char *)(v228 + 17);
          *(unsigned char *)(v227 + 18) = *(unsigned char *)(v228 + 18);
          *(unsigned char *)(v227 + 19) = *(unsigned char *)(v228 + 19);
          unint64_t v229 = (v227 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v230 = (v228 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v229 = *(void *)v230;
          *(unsigned char *)(v229 + 8) = *(unsigned char *)(v230 + 8);
          *(unsigned char *)(v229 + 9) = *(unsigned char *)(v230 + 9);
          *(unsigned char *)(v229 + 10) = *(unsigned char *)(v230 + 10);
          *(unsigned char *)(v229 + 11) = *(unsigned char *)(v230 + 11);
          *(unsigned char *)(v229 + 12) = *(unsigned char *)(v230 + 12);
          long long v231 = (void *)((v228 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v232 = (void *)((v227 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v232 = *v231;
          unint64_t v233 = ((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v234 = ((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v233 = *(void *)v234;
          *(unsigned char *)(v233 + 8) = *(unsigned char *)(v234 + 8);
          *(unsigned char *)(v233 + 9) = *(unsigned char *)(v234 + 9);
          long long v235 = (void *)((v564 + v233) & v47);
          long long v236 = (const void *)((v564 + v234) & v47);
          int v568 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v559 + 48);
          if (v568(v236, 1, v585))
          {
            memcpy(v235, v236, __n);
          }
          else
          {
            v223((unint64_t)v235, (unint64_t)v236, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v235, 0, 1, v585);
          }
          unint64_t v370 = (void *)(((unint64_t)v235 + v565) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v371 = (void *)(((unint64_t)v236 + v565) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v370 = *v371;
          unint64_t v372 = ((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v373 = ((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v374 = *(void *)v373;
          *(unsigned char *)(v372 + 8) = *(unsigned char *)(v373 + 8);
          *(void *)unint64_t v372 = v374;
          int v375 = (void *)(((unint64_t)v370 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v376 = (void *)(((unint64_t)v371 + 31) & 0xFFFFFFFFFFFFFFF8);
          *int v375 = *v376;
          unint64_t v377 = (_OWORD *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v378 = (_OWORD *)(((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v377 = *v378;
          unint64_t v379 = ((unint64_t)v377 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v380 = ((unint64_t)v378 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v381 = *(void *)v380;
          *(unsigned char *)(v379 + 8) = *(unsigned char *)(v380 + 8);
          *(void *)unint64_t v379 = v381;
          *(unsigned char *)(v379 + 9) = *(unsigned char *)(v380 + 9);
          unint64_t v382 = (v379 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v383 = (v380 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v374) = *(_DWORD *)v383;
          *(unsigned char *)(v382 + 4) = *(unsigned char *)(v383 + 4);
          *(_DWORD *)unint64_t v382 = v374;
          *(_OWORD *)((v379 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v380 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v384 = v580 + v219;
          long long v385 = *(_OWORD *)(v580 + v220 + 112);
          long long v387 = *(_OWORD *)(v580 + v220 + 64);
          long long v386 = *(_OWORD *)(v580 + v220 + 80);
          *(_OWORD *)(v384 + 96) = *(_OWORD *)(v580 + v220 + 96);
          *(_OWORD *)(v384 + 112) = v385;
          *(_OWORD *)(v384 + 64) = v387;
          *(_OWORD *)(v384 + 80) = v386;
          long long v388 = *(_OWORD *)(v580 + v220 + 176);
          long long v390 = *(_OWORD *)(v580 + v220 + 128);
          long long v389 = *(_OWORD *)(v580 + v220 + 144);
          *(_OWORD *)(v384 + 160) = *(_OWORD *)(v580 + v220 + 160);
          *(_OWORD *)(v384 + 176) = v388;
          *(_OWORD *)(v384 + 128) = v390;
          *(_OWORD *)(v384 + 144) = v389;
          long long v392 = *(_OWORD *)(v580 + v220 + 208);
          long long v391 = *(_OWORD *)(v580 + v220 + 224);
          long long v393 = *(_OWORD *)(v580 + v220 + 192);
          *(void *)(v384 + 240) = *(void *)(v580 + v220 + 240);
          *(_OWORD *)(v384 + 208) = v392;
          *(_OWORD *)(v384 + 224) = v391;
          *(_OWORD *)(v384 + 192) = v393;
          long long v394 = *(_OWORD *)(v580 + v220);
          long long v395 = *(_OWORD *)(v580 + v220 + 16);
          long long v396 = *(_OWORD *)(v580 + v220 + 48);
          *(_OWORD *)(v384 + 32) = *(_OWORD *)(v580 + v220 + 32);
          *(_OWORD *)(v384 + 48) = v396;
          *(_OWORD *)unint64_t v384 = v394;
          *(_OWORD *)(v384 + 16) = v395;
          long long v397 = (_OWORD *)((v580 + v219 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v398 = (long long *)((v580 + v220 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v399 = *v398;
          *(_OWORD *)((char *)v397 + 9) = *(long long *)((char *)v398 + 9);
          _OWORD *v397 = v399;
          unint64_t v400 = (v580 + v219 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v401 = (v580 + v220 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v402 = *(_OWORD *)v401;
          *(unsigned char *)(v400 + 16) = *(unsigned char *)(v401 + 16);
          *(_OWORD *)unint64_t v400 = v402;
          long long v403 = (void *)((v580 + v219 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v404 = (void *)((v580 + v220 + 311) & 0xFFFFFFFFFFFFFFF8);
          *long long v403 = *v404;
          *(_OWORD *)(((unint64_t)v403 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v404 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v405 = (unint64_t)&a2[v532] & v522;
          v209((unsigned __int8 *)((unint64_t)&a1[v532] & v522), (unsigned __int8 *)v405, AssociatedTypeWitness);
          unint64_t v599 = (unint64_t)&a1[v532] & v522;
          unint64_t v406 = (v550 + v599) & v539;
          unint64_t v561 = v405;
          unint64_t v407 = (v550 + v405) & v539;
          v209((unsigned __int8 *)v406, (unsigned __int8 *)v407, AssociatedTypeWitness);
          unint64_t v408 = (v533 + v406) & v570;
          uint64_t v409 = (v533 + v407) & v570;
          v596(v408, v409, v553);
          long long v410 = (void *)((v549 + v408) & 0xFFFFFFFFFFFFFFF8);
          long long v411 = (void *)((v549 + v409) & 0xFFFFFFFFFFFFFFF8);
          *long long v410 = *v411;
          unint64_t v412 = ((unint64_t)v410 + v551) & v572;
          unint64_t v413 = ((unint64_t)v411 + v551) & v572;
          v587(v412, v413, v556);
          unint64_t v414 = (void *)((v554 + v412) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v415 = (void *)((v554 + v413) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v414 = *v415;
          *(_OWORD *)(((unint64_t)v414 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v408 + v557) = *(_OWORD *)(v409 + v557);
          unint64_t v416 = (v601 + v408 + v557) & v584;
          unint64_t v417 = (v601 + v409 + v557) & v584;
          *(unsigned char *)unint64_t v416 = *(unsigned char *)v417;
          uint64_t v418 = v416 | 4;
          int v419 = *(_DWORD *)(v417 | 4);
          *(unsigned char *)(v418 + 4) = *(unsigned char *)((v417 | 4) + 4);
          *(_DWORD *)uint64_t v418 = v419;
          *(_WORD *)(v416 + 10) = *(_WORD *)(v417 + 0xA);
          v223((v562 + v416) & v47, (v562 + v417) & v47, v585);
          unint64_t v420 = (v563 + ((v562 + v416) & v47)) & v47;
          unint64_t v421 = (v563 + ((v562 + v417) & v47)) & v47;
          v223(v420, v421, v585);
          uint64_t v422 = (unsigned char *)(v420 + v558);
          *uint64_t v422 = *(unsigned char *)(v421 + v558);
          v422[1] = *(unsigned char *)(v421 + v558 + 1);
          v422[2] = *(unsigned char *)(v421 + v558 + 2);
          v422[3] = *(unsigned char *)(v421 + v558 + 3);
          v422[4] = *(unsigned char *)(v421 + v558 + 4);
          unint64_t v423 = (v420 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v424 = (v421 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v423 = *(_OWORD *)v424;
          *(unsigned char *)(v423 + 16) = *(unsigned char *)(v424 + 16);
          *(unsigned char *)(v423 + 17) = *(unsigned char *)(v424 + 17);
          *(unsigned char *)(v423 + 18) = *(unsigned char *)(v424 + 18);
          *(unsigned char *)(v423 + 19) = *(unsigned char *)(v424 + 19);
          unint64_t v425 = (v423 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v426 = (v424 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v425 = *(void *)v426;
          *(unsigned char *)(v425 + 8) = *(unsigned char *)(v426 + 8);
          *(unsigned char *)(v425 + 9) = *(unsigned char *)(v426 + 9);
          *(unsigned char *)(v425 + 10) = *(unsigned char *)(v426 + 10);
          *(unsigned char *)(v425 + 11) = *(unsigned char *)(v426 + 11);
          *(unsigned char *)(v425 + 12) = *(unsigned char *)(v426 + 12);
          long long v427 = (void *)((v423 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v428 = (void *)((v424 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v427 = *v428;
          unint64_t v429 = ((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v430 = ((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v429 = *(void *)v430;
          *(unsigned char *)(v429 + 8) = *(unsigned char *)(v430 + 8);
          *(unsigned char *)(v429 + 9) = *(unsigned char *)(v430 + 9);
          long long v431 = (void *)((v564 + v429) & v47);
          long long v432 = (const void *)((v564 + v430) & v47);
          if (v568(v432, 1, v585))
          {
            memcpy(v431, v432, __n);
          }
          else
          {
            v223((unint64_t)v431, (unint64_t)v432, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v431, 0, 1, v585);
          }
          uint64_t v37 = v526;
          unint64_t v53 = v592;
          char v207 = 0;
          uint64_t v470 = (void *)(((unint64_t)v431 + v565) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v471 = (void *)(((unint64_t)v432 + v565) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v470 = *v471;
          unint64_t v472 = ((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v473 = ((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v474 = *(void *)v473;
          *(unsigned char *)(v472 + 8) = *(unsigned char *)(v473 + 8);
          *(void *)unint64_t v472 = v474;
          unint64_t v475 = (void *)(((unint64_t)v470 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v476 = (void *)(((unint64_t)v471 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v475 = *v476;
          uint64_t v477 = (_OWORD *)(((unint64_t)v475 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v478 = (_OWORD *)(((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v477 = *v478;
          unint64_t v479 = ((unint64_t)v477 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v480 = ((unint64_t)v478 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v481 = *(void *)v480;
          *(unsigned char *)(v479 + 8) = *(unsigned char *)(v480 + 8);
          *(void *)unint64_t v479 = v481;
          *(unsigned char *)(v479 + 9) = *(unsigned char *)(v480 + 9);
          unint64_t v482 = (v479 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v483 = (v480 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v474) = *(_DWORD *)v483;
          *(unsigned char *)(v482 + 4) = *(unsigned char *)(v483 + 4);
          *(_DWORD *)unint64_t v482 = v474;
          *(_OWORD *)((v479 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v480 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v484 = v416 + v580;
          long long v485 = *(_OWORD *)(v417 + v580 + 112);
          long long v487 = *(_OWORD *)(v417 + v580 + 64);
          long long v486 = *(_OWORD *)(v417 + v580 + 80);
          *(_OWORD *)(v484 + 96) = *(_OWORD *)(v417 + v580 + 96);
          *(_OWORD *)(v484 + 112) = v485;
          *(_OWORD *)(v484 + 64) = v487;
          *(_OWORD *)(v484 + 80) = v486;
          long long v488 = *(_OWORD *)(v417 + v580 + 176);
          long long v490 = *(_OWORD *)(v417 + v580 + 128);
          long long v489 = *(_OWORD *)(v417 + v580 + 144);
          *(_OWORD *)(v484 + 160) = *(_OWORD *)(v417 + v580 + 160);
          *(_OWORD *)(v484 + 176) = v488;
          *(_OWORD *)(v484 + 128) = v490;
          *(_OWORD *)(v484 + 144) = v489;
          long long v492 = *(_OWORD *)(v417 + v580 + 208);
          long long v491 = *(_OWORD *)(v417 + v580 + 224);
          long long v493 = *(_OWORD *)(v417 + v580 + 192);
          *(void *)(v484 + 240) = *(void *)(v417 + v580 + 240);
          *(_OWORD *)(v484 + 208) = v492;
          *(_OWORD *)(v484 + 224) = v491;
          *(_OWORD *)(v484 + 192) = v493;
          long long v494 = *(_OWORD *)(v417 + v580);
          long long v495 = *(_OWORD *)(v417 + v580 + 16);
          long long v496 = *(_OWORD *)(v417 + v580 + 48);
          *(_OWORD *)(v484 + 32) = *(_OWORD *)(v417 + v580 + 32);
          *(_OWORD *)(v484 + 48) = v496;
          *(_OWORD *)unint64_t v484 = v494;
          *(_OWORD *)(v484 + 16) = v495;
          uint64_t v497 = (_OWORD *)((v416 + v580 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v498 = (long long *)((v417 + v580 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v499 = *v498;
          *(_OWORD *)((char *)v497 + 9) = *(long long *)((char *)v498 + 9);
          *uint64_t v497 = v499;
          unint64_t v500 = (v416 + v580 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v501 = (v417 + v580 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v502 = *(_OWORD *)v501;
          *(unsigned char *)(v500 + 16) = *(unsigned char *)(v501 + 16);
          *(_OWORD *)unint64_t v500 = v502;
          uint64_t v503 = (void *)((v417 + v580 + 311) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v504 = (void *)((v416 + v580 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v504 = *v503;
          *(_OWORD *)(((unint64_t)v504 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v505 = (void *)((v534 + v561) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v506 = (void *)((v534 + v599) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v506 = *v505;
          int v205 = (_OWORD *)(((unint64_t)v506 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)(((unint64_t)v505 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v208 = 1;
          uint64_t v2 = a1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32))(v2, v41, AssociatedTypeWitness);
          char v207 = 0;
          v2[v560] = v41[v560];
          int v205 = (_OWORD *)(((unint64_t)&v2[v560] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v206 = (_OWORD *)(((unint64_t)&v41[v560] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v208 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32))(v2, v41, AssociatedTypeWitness);
          char v207 = 0;
          int v205 = (_OWORD *)((unint64_t)&v2[v560 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&v41[v560 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v208 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32))(v2, v41, AssociatedTypeWitness);
          char v207 = 0;
          v2[v560] = v41[v560];
          int v205 = (_OWORD *)(((unint64_t)&v2[v560] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v206 = (_OWORD *)(((unint64_t)&v41[v560] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v208 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32))(v2, v41, AssociatedTypeWitness);
          char v207 = 0;
          int v205 = (_OWORD *)((unint64_t)&v2[v560 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&v41[v560 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v208 = 5;
          break;
        default:
          unint64_t v579 = v48;
          uint64_t v149 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v590 + 32);
          v149(v2, v41, AssociatedTypeWitness);
          unint64_t v150 = (unint64_t)&v41[v550] & v539;
          v149((unsigned __int8 *)((unint64_t)&v2[v550] & v539), (unsigned __int8 *)v150, AssociatedTypeWitness);
          unint64_t v151 = (((unint64_t)&v2[v550] & v539) + v560 + v594) & v570;
          unint64_t v152 = (v150 + v560 + v594) & v570;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v552 + 32))(v151, v152, v553);
          unint64_t v153 = (void *)((v549 + v151) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v154 = (void *)((v549 + v152) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v153 = *v154;
          unint64_t v155 = ((unint64_t)v153 + v551) & v572;
          unint64_t v156 = ((unint64_t)v154 + v551) & v572;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v555 + 32))(v155, v156, v556);
          unint64_t v157 = (void *)((v554 + v155) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v158 = (void *)((v554 + v156) & 0xFFFFFFFFFFFFFFF8);
          void *v157 = *v158;
          *(_OWORD *)(((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v557 + v151) = *(_OWORD *)(v557 + v152);
          unint64_t v159 = (v601 + v557 + v151) & v584;
          unint64_t v160 = (v601 + v557 + v152) & v584;
          *(unsigned char *)unint64_t v159 = *(unsigned char *)v160;
          uint64_t v161 = v159 | 4;
          int v162 = *(_DWORD *)(v160 | 4);
          *(unsigned char *)(v161 + 4) = *(unsigned char *)((v160 | 4) + 4);
          *(_DWORD *)uint64_t v161 = v162;
          *(_WORD *)(v159 + 10) = *(_WORD *)(v160 + 0xA);
          int v163 = *(void (**)(unint64_t, unint64_t, uint64_t))(v559 + 32);
          v163((v562 + v159) & v47, (v562 + v160) & v47, v585);
          unint64_t v164 = (v563 + ((v562 + v159) & v47)) & v47;
          unint64_t v165 = (v563 + ((v562 + v160) & v47)) & v47;
          v163(v164, v165, v585);
          unint64_t v166 = (unsigned char *)(v164 + v558);
          *unint64_t v166 = *(unsigned char *)(v165 + v558);
          v166[1] = *(unsigned char *)(v165 + v558 + 1);
          v166[2] = *(unsigned char *)(v165 + v558 + 2);
          v166[3] = *(unsigned char *)(v165 + v558 + 3);
          v166[4] = *(unsigned char *)(v165 + v558 + 4);
          unint64_t v167 = (v164 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v168 = (v165 + v558 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v167 = *(_OWORD *)v168;
          *(unsigned char *)(v167 + 16) = *(unsigned char *)(v168 + 16);
          *(unsigned char *)(v167 + 17) = *(unsigned char *)(v168 + 17);
          *(unsigned char *)(v167 + 18) = *(unsigned char *)(v168 + 18);
          *(unsigned char *)(v167 + 19) = *(unsigned char *)(v168 + 19);
          unint64_t v169 = (v167 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = (v168 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v169 = *(void *)v170;
          *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
          *(unsigned char *)(v169 + 9) = *(unsigned char *)(v170 + 9);
          *(unsigned char *)(v169 + 10) = *(unsigned char *)(v170 + 10);
          *(unsigned char *)(v169 + 11) = *(unsigned char *)(v170 + 11);
          *(unsigned char *)(v169 + 12) = *(unsigned char *)(v170 + 12);
          unint64_t v171 = (void *)((v168 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v172 = (void *)((v167 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v172 = *v171;
          unint64_t v173 = ((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v174 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v173 = *(void *)v174;
          *(unsigned char *)(v173 + 8) = *(unsigned char *)(v174 + 8);
          *(unsigned char *)(v173 + 9) = *(unsigned char *)(v174 + 9);
          unint64_t v175 = (void *)((v564 + v173) & v47);
          unint64_t v176 = (const void *)((v564 + v174) & v47);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v559 + 48))(v176, 1, v585))
          {
            memcpy(v175, v176, __n);
          }
          else
          {
            v163((unint64_t)v175, (unint64_t)v176, v585);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v559 + 56))(v175, 0, 1, v585);
          }
          uint64_t v2 = a1;
          unint64_t v53 = v592;
          char v208 = 0;
          char v207 = 0;
          long long v273 = (void *)(((unint64_t)v175 + v565) & 0xFFFFFFFFFFFFFFF8);
          long long v274 = (void *)(((unint64_t)v176 + v565) & 0xFFFFFFFFFFFFFFF8);
          *long long v273 = *v274;
          unint64_t v275 = ((unint64_t)v273 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v276 = ((unint64_t)v274 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v277 = *(void *)v276;
          *(unsigned char *)(v275 + 8) = *(unsigned char *)(v276 + 8);
          *(void *)unint64_t v275 = v277;
          long long v278 = (void *)(((unint64_t)v273 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v279 = (void *)(((unint64_t)v274 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v278 = *v279;
          unint64_t v280 = (_OWORD *)(((unint64_t)v278 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v281 = (_OWORD *)(((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v280 = *v281;
          unint64_t v282 = ((unint64_t)v280 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v283 = ((unint64_t)v281 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v284 = *(void *)v283;
          *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
          *(void *)unint64_t v282 = v284;
          *(unsigned char *)(v282 + 9) = *(unsigned char *)(v283 + 9);
          unint64_t v285 = (v282 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v286 = (v283 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v277) = *(_DWORD *)v286;
          *(unsigned char *)(v285 + 4) = *(unsigned char *)(v286 + 4);
          *(_DWORD *)unint64_t v285 = v277;
          *(_OWORD *)((v282 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v283 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v287 = v579 + v159;
          long long v288 = *(_OWORD *)(v579 + v160 + 112);
          long long v290 = *(_OWORD *)(v579 + v160 + 64);
          long long v289 = *(_OWORD *)(v579 + v160 + 80);
          *(_OWORD *)(v287 + 96) = *(_OWORD *)(v579 + v160 + 96);
          *(_OWORD *)(v287 + 112) = v288;
          *(_OWORD *)(v287 + 64) = v290;
          *(_OWORD *)(v287 + 80) = v289;
          long long v291 = *(_OWORD *)(v579 + v160 + 176);
          long long v293 = *(_OWORD *)(v579 + v160 + 128);
          long long v292 = *(_OWORD *)(v579 + v160 + 144);
          *(_OWORD *)(v287 + 160) = *(_OWORD *)(v579 + v160 + 160);
          *(_OWORD *)(v287 + 176) = v291;
          *(_OWORD *)(v287 + 128) = v293;
          *(_OWORD *)(v287 + 144) = v292;
          long long v295 = *(_OWORD *)(v579 + v160 + 208);
          long long v294 = *(_OWORD *)(v579 + v160 + 224);
          long long v296 = *(_OWORD *)(v579 + v160 + 192);
          *(void *)(v287 + 240) = *(void *)(v579 + v160 + 240);
          *(_OWORD *)(v287 + 208) = v295;
          *(_OWORD *)(v287 + 224) = v294;
          *(_OWORD *)(v287 + 192) = v296;
          long long v297 = *(_OWORD *)(v579 + v160);
          long long v298 = *(_OWORD *)(v579 + v160 + 16);
          long long v299 = *(_OWORD *)(v579 + v160 + 48);
          *(_OWORD *)(v287 + 32) = *(_OWORD *)(v579 + v160 + 32);
          *(_OWORD *)(v287 + 48) = v299;
          *(_OWORD *)unint64_t v287 = v297;
          *(_OWORD *)(v287 + 16) = v298;
          unint64_t v300 = (_OWORD *)((v579 + v159 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v301 = (long long *)((v579 + v160 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v302 = *v301;
          *(_OWORD *)((char *)v300 + 9) = *(long long *)((char *)v301 + 9);
          *unint64_t v300 = v302;
          unint64_t v303 = (v579 + v159 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v304 = (v579 + v160 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v305 = *(_OWORD *)v304;
          *(unsigned char *)(v303 + 16) = *(unsigned char *)(v304 + 16);
          *(_OWORD *)unint64_t v303 = v305;
          unint64_t v306 = (void *)((v579 + v159 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v307 = (void *)((v579 + v160 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v306 = *v307;
          *(_OWORD *)(((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v307 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v205 = (_OWORD *)((unint64_t)&a1[v531 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (_OWORD *)((unint64_t)&a2[v531 + 7] & 0xFFFFFFFFFFFFFFF8);
          break;
      }
    }
    *int v205 = *v206;
    v2[v53] = v208;
    v2[v37] = v207;
  }
  return v2;
}

uint64_t sub_1006361F8(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v46 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v47 = *(void *)(v2 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  unint64_t v8 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unint64_t v44 = *(_DWORD *)(v9 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = (((((v47 + v46) & ~v46) + v47 + v7) & ~v7) + v10 + 16 + v8 + 16) & v44;
  uint64_t v11 = *(void *)(v9 + 64);
  int v43 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v18 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v19 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v20 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = v16 & 0xF8 | v20 | 7;
  unint64_t v22 = (((((v13 + v14) & ~v14) + v13 + v21) & ~v21)
       + v10
       + 16
       + ((((*(void *)(v17 + 64) + ((v20 + ((*(void *)(v15 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v44;
  uint64_t v23 = v14 | v10 | v21;
  unint64_t v24 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v25 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v43) {
    uint64_t v26 = v11;
  }
  else {
    uint64_t v26 = v11 + 1;
  }
  unint64_t v27 = ((((((((((v26
                + ((v10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v10)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v28 = (((v27 + v45) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((((v28 + 23 + ((v28 + (v7 | v46 | v10) + 16) & ~(v7 | v46 | v10))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v29 <= ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v29) {
    unint64_t v29 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v29) {
    unint64_t v29 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= v29) {
    unint64_t v18 = v29;
  }
  if (v19 > v18) {
    unint64_t v18 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v30 = (((v27 + v22) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((v30 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v32 = ((((v30 + 23 + ((v30 + v23 + 16) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 <= v31) {
    unint64_t v32 = v31;
  }
  if (v24 > v32) {
    unint64_t v32 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v25 > v32) {
    unint64_t v32 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 <= v32) {
    unint64_t v24 = v32;
  }
  if (v25 > v24) {
    unint64_t v24 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v33 = v24 + 1;
  if (v33 <= v18 + 1) {
    unint64_t v34 = v18 + 1;
  }
  else {
    unint64_t v34 = v33;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_46;
  }
  unint64_t v35 = v34 + 1;
  char v36 = 8 * (v34 + 1);
  if ((v34 + 1) <= 3)
  {
    unsigned int v39 = ((a2 + ~(-1 << v36) - 254) >> v36) + 1;
    if (HIWORD(v39))
    {
      int v37 = *(_DWORD *)((char *)a1 + v35);
      if (!v37) {
        goto LABEL_46;
      }
      goto LABEL_38;
    }
    if (v39 > 0xFF)
    {
      int v37 = *(unsigned __int16 *)((char *)a1 + v35);
      if (!*(unsigned __int16 *)((char *)a1 + v35)) {
        goto LABEL_46;
      }
      goto LABEL_38;
    }
    if (v39 < 2)
    {
LABEL_46:
      unsigned int v41 = *((unsigned __int8 *)a1 + v34);
      if (v41 >= 2) {
        return (v41 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v37 = *((unsigned __int8 *)a1 + v35);
  if (!*((unsigned char *)a1 + v35)) {
    goto LABEL_46;
  }
LABEL_38:
  int v40 = (v37 - 1) << v36;
  if (v35 > 3) {
    int v40 = 0;
  }
  if (v35)
  {
    if (v35 > 3) {
      LODWORD(v35) = 4;
    }
    switch((int)v35)
    {
      case 2:
        LODWORD(v35) = *a1;
        break;
      case 3:
        LODWORD(v35) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v35) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v35) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v35 | v40) + 255;
}

void sub_100636874(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v44 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v45 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  unint64_t v9 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unint64_t v43 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v10 + 64);
  int v42 = *(_DWORD *)(v10 + 84);
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v19 = (v45 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v20 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = v17 & 0xF8 | v21 | 7;
  unint64_t v23 = (((((v14 + v15) & ~v15) + v14 + v22) & ~v22)
       + v11
       + 16
       + ((((*(void *)(v18 + 64) + ((v21 + ((*(void *)(v16 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v43;
  uint64_t v24 = v15 | v11 | v22;
  unint64_t v25 = (v14 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v26 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v42) {
    uint64_t v27 = v12;
  }
  else {
    uint64_t v27 = v12 + 1;
  }
  unint64_t v28 = ((((((((((v27
                + ((v11
                  + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v11)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v29 = (((v28 + ((((((v45 + v44) & ~v44) + v45 + v8) & ~v8) + v11 + 16 + v9 + 16) & v43)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((((v29 + 23 + ((v29 + (v8 | v44 | v11) + 16) & ~(v8 | v44 | v11))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v30 <= ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v30 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v30) {
    unint64_t v30 = (v45 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v30) {
    unint64_t v30 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= v30) {
    unint64_t v19 = v30;
  }
  if (v20 > v19) {
    unint64_t v19 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v31 = (((v28 + v23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v33 = ((((v31 + 23 + ((v31 + v24 + 16) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (v25 > v33) {
    unint64_t v33 = (v14 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v26 > v33) {
    unint64_t v33 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v25 <= v33) {
    unint64_t v25 = v33;
  }
  if (v26 > v25) {
    unint64_t v25 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v34 = v25 + 1;
  if (v34 <= v19 + 1) {
    unint64_t v34 = v19 + 1;
  }
  size_t v35 = v34 + 1;
  if (a3 < 0xFF)
  {
    int v37 = 0;
    char v36 = a1;
  }
  else
  {
    char v36 = a1;
    if (v35 <= 3)
    {
      unsigned int v40 = ((a3 + ~(-1 << (8 * v35)) - 254) >> (8 * v35)) + 1;
      if (HIWORD(v40))
      {
        int v37 = 4;
      }
      else if (v40 >= 0x100)
      {
        int v37 = 2;
      }
      else
      {
        int v37 = v40 > 1;
      }
    }
    else
    {
      int v37 = 1;
    }
  }
  if (a2 > 0xFE)
  {
    unsigned int v38 = a2 - 255;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v34 != -1)
      {
        int v41 = v38 & ~(-1 << (8 * v35));
        bzero(v36, v35);
        if (v35 == 3)
        {
          *(_WORD *)char v36 = v41;
          v36[2] = BYTE2(v41);
        }
        else if (v35 == 2)
        {
          *(_WORD *)char v36 = v41;
        }
        else
        {
          unsigned char *v36 = v41;
        }
      }
    }
    else
    {
      bzero(v36, v34 + 1);
      *(_DWORD *)char v36 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        v36[v35] = v39;
        break;
      case 2:
        *(_WORD *)&v36[v35] = v39;
        break;
      case 3:
LABEL_57:
        __break(1u);
        JUMPOUT(0x100636F60);
      case 4:
        *(_DWORD *)&v36[v35] = v39;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v37)
    {
      case 1:
        v36[v35] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_46;
      case 2:
        *(_WORD *)&v36[v35] = 0;
        goto LABEL_45;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&v36[v35] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_46;
      default:
LABEL_45:
        if (a2) {
LABEL_46:
        }
          v36[v34] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100636F88(unsigned __int8 *a1)
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  unint64_t v9 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unint64_t v36 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = v12 + 1;
  }
  unint64_t v34 = ((((((((((v13
                + ((v11
                  + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v11)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v14 = (((v34 + ((((((v2 + v3) & ~v3) + v2 + v8) & ~v8) + v11 + 16 + v9 + 16) & v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = ((((v14 + 23 + ((v14 + (v8 | v3 | v11) + 16) & ~(v8 | v3 | v11))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v17 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v17 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= v15) {
    unint64_t v17 = v15;
  }
  if (v17 > v16) {
    unint64_t v16 = v17;
  }
  unint64_t v35 = v16 | 1;
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v22 | v24 | 7;
  unint64_t v26 = (((v34
         + ((((((v19 + v20) & ~v20) + v19 + v25) & ~v25)
           + v11
           + 16
           + ((((*(void *)(v23 + 64) + ((v24 + ((*(void *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16) & v36)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((v26 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v28 = ((((v26 + 23 + ((v26 + (v20 | v11 | v25) + 16) & ~(v20 | v11 | v25))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((v19 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v29 = (v19 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= v27) {
    unint64_t v29 = v27;
  }
  if (v29 > v28) {
    unint64_t v28 = v29;
  }
  unint64_t v30 = v28 | 1;
  if (v30 <= v35) {
    unint64_t v30 = v35;
  }
  uint64_t result = a1[v30];
  if (result >= 2)
  {
    if (v30 <= 3) {
      uint64_t v32 = v30;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a1;
        if (v30 < 4) {
          goto LABEL_29;
        }
        goto LABEL_31;
      case 2:
        int v33 = *(unsigned __int16 *)a1;
        if (v30 >= 4) {
          goto LABEL_31;
        }
        goto LABEL_29;
      case 3:
        int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v30 < 4) {
          goto LABEL_29;
        }
        goto LABEL_31;
      case 4:
        int v33 = *(_DWORD *)a1;
        if (v30 < 4) {
LABEL_29:
        }
          uint64_t result = (v33 | ((result - 2) << (8 * v30))) + 2;
        else {
LABEL_31:
        }
          uint64_t result = (v33 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_10063756C(unsigned char *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + ((v8 + ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v44 = *(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = v13 + 1;
  }
  unint64_t v42 = ((((((((((v14
                + ((v12
                  + ((((((v13 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v12)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v15 = (((v42 + ((((((v3 + v4) & ~v4) + v3 + v9) & ~v9) + v12 + 16 + v10 + 16) & v44)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = ((((v15 + 23 + ((v15 + (v9 | v4 | v12) + 16) & ~(v9 | v4 | v12))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  unint64_t v18 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v18 > v17) {
    unint64_t v17 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v19 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 > v17) {
    unint64_t v17 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v17) {
    unint64_t v17 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v17) {
    unint64_t v17 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  size_t v43 = v17 + 1;
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  uint64_t v25 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = v24 | v26 | 7;
  unint64_t v28 = (((v42
         + ((((((v21 + v22) & ~v22) + v21 + v27) & ~v27)
           + v12
           + 16
           + ((((*(void *)(v25 + 64) + ((v26 + ((*(void *)(v23 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16) & v44)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v31 = (v28 + (v22 | v12 | v27) + 16) & ~(v22 | v12 | v27);
  if (a2 > 1)
  {
    unint64_t v35 = ((((v29 + v31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v36 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v36 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v36 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v36 > v35) {
      unint64_t v35 = v36;
    }
    if (v35 > v30) {
      unint64_t v30 = v35;
    }
    unint64_t v37 = v30 | 1;
    if (v37 <= v43) {
      size_t v38 = v43;
    }
    else {
      size_t v38 = v37;
    }
    if (v38 <= 3) {
      char v39 = ((a2 - 2) >> (8 * v38)) + 2;
    }
    else {
      char v39 = 2;
    }
    if (v38 <= 3) {
      int v40 = (a2 - 2) & ~(-1 << (8 * v38));
    }
    else {
      int v40 = a2 - 2;
    }
    a1[v38] = v39;
    if (v38 >= 4) {
      int v41 = 4;
    }
    else {
      int v41 = v38;
    }
    bzero(a1, v38);
    switch(v41)
    {
      case 2:
        *(_WORD *)a1 = v40;
        break;
      case 3:
        *(_WORD *)a1 = v40;
        a1[2] = BYTE2(v40);
        break;
      case 4:
        *(_DWORD *)a1 = v40;
        break;
      default:
        *a1 = v40;
        break;
    }
  }
  else
  {
    unint64_t v32 = ((((v29 + v31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v21 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v33 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v33 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    if (v33 > v32) {
      unint64_t v32 = v33;
    }
    if (v32 > v30) {
      unint64_t v30 = v32;
    }
    unint64_t v34 = v30 | 1;
    if (v34 <= v43) {
      unint64_t v34 = v43;
    }
    a1[v34] = a2;
  }
}

uint64_t type metadata accessor for Mutation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100637BDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SnapshotMutation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for SnapshotMutation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    uint64_t v16 = sub_10064BBAC(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v14, v8);
    uint64_t v16 = sub_10064BBAC(v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return v16;
}

uint64_t VFSFileTree.performWithDiskDiagnosticAttributes(for:block:)(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + 216);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  id v9 = v7;
  swift_retain();
  swift_retain();
  sub_1006B8108(0, (uint64_t)"performWithDiskDiagnosticAttributes(for:block:)", 47, 2, (uint64_t)sub_10034BAC0, v8);

  return swift_release();
}

uint64_t VFSFileTree.performWithDiskDiagnosticAttributes(by:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + 216);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  objc_super v8[3] = v3;
  v8[4] = a2;
  v8[5] = a3;
  id v9 = v7;
  swift_retain();
  swift_retain();
  sub_1006B8108(0, (uint64_t)"performWithDiskDiagnosticAttributes(by:block:)", 46, 2, (uint64_t)sub_10034BB64, (uint64_t)v8);

  return swift_release();
}

Class sub_100637FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  id v8 = v3;
  Class result = (Class)sub_10096B080();
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = (uint64_t)v10;
  Class result = (Class)[v7 integerValue];
  BOOL v12 = __OFSUB__(v11, result);
  uint64_t v13 = v11 - (void)result;
  if (v12)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v13];
    Class v15 = sub_10063817C(a2, a3);

    return v15;
  }
  BOOL v12 = __OFSUB__(0, v13);
  uint64_t v16 = -v13;
  if (v12) {
    goto LABEL_19;
  }
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v16];
  Class v18 = sub_10063817C(a2, a3);

  if (!v18)
  {

    return 0;
  }
  Class result = (Class)[(objc_class *)v18 integerValue];
  if (!__OFADD__(result, 1))
  {
    Class v15 = (Class)[objc_allocWithZone((Class)NSNumber) initWithInteger:-((uint64_t)result + 1)];

    return v15;
  }
LABEL_20:
  __break(1u);
  return result;
}

Class sub_10063817C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  id v8 = v3;
  if (![v7 integerValue])
  {
    sub_100011348(0, (unint64_t *)&qword_100ACB6E0);
    v13.super.super.Class isa = sub_10096C810(0).super.super.isa;
LABEL_15:
    Class isa = v13.super.super.isa;

    return isa;
  }
  [v7 doubleValue];
  if (a1 < 2) {
LABEL_20:
  }
    sub_100713470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/tree/VFSFileTree+DiagnosticCollection.swift", 149, 2, 13);
  double v10 = log(v9);
  double v11 = v10 / log((double)a1);
  if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
  {
    if (v11 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v11 < 9.22337204e18)
    {
      if (!__OFSUB__(a2, 1))
      {
        if (a2 - 1 >= ((uint64_t)v11 & ~((uint64_t)v11 >> 63))) {
          uint64_t v14 = (uint64_t)v11 & ~((uint64_t)v11 >> 63);
        }
        else {
          uint64_t v14 = a2 - 1;
        }
        v13.super.super.Class isa = (Class)[objc_allocWithZone((Class)NSNumber) initWithInteger:v14];
        goto LABEL_15;
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  return 0;
}

uint64_t sub_1006382EC(int a1, void *a2, void (*a3)(uint64_t, uint64_t))
{
  swift_retain();
  if (objc_sync_enter(a2)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  }
  swift_release();
  swift_release();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  int v14 = a1;
  uint64_t v16 = 0;
  uint64_t v15 = 0;
  int v17 = 0;
  uint64_t v6 = fpfs_openfdbyhandle();
  if ((v6 & 0x80000000) != 0)
  {
    int v9 = sub_10096B4D0();
    uint64_t v10 = sub_1005970E0(v9, 0, 0, 0xAu);
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v12) = sub_10096A6F0();
    sub_100045CB4();
    sub_10096AA60();
    swift_errorRelease();
    swift_errorRetain();
    a3(v10, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v7 = v6;
    sub_1006386C8(v6, a2, &v11);
    sub_100595FB8(v7);
    a3(v11, 0);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1006384DC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t))
{
  swift_retain();
  if (objc_sync_enter(a2)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  }
  swift_release();
  swift_release();
  uint64_t v12 = a1;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v6 = fpfs_openfdbyhandle();
  if ((v6 & 0x80000000) != 0)
  {
    int v9 = sub_10096B4D0();
    uint64_t v10 = sub_1005970E0(v9, 0, 0, 0xAu);
    swift_willThrow();
    swift_errorRetain();
    LODWORD(v12) = sub_10096A6F0();
    sub_100045CB4();
    sub_10096AA60();
    swift_errorRelease();
    swift_errorRetain();
    a3(v10, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v7 = v6;
    sub_1006386C8(v6, a2, &v11);
    sub_100595FB8(v7);
    a3(v11, 0);
    return swift_bridgeObjectRelease();
  }
}

void sub_1006386C8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = (void *)swift_retain();
  if (objc_sync_enter(v9)) {
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  uint64_t v10 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  }
  swift_release();
  uint64_t v11 = v10 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL;
  uint64_t v12 = sub_10096AE50();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v11, v12);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  uint64_t v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) != 1)
  {
    sub_10096AD20(v14);
    uint64_t v15 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  id v17 = [objc_allocWithZone((Class)FPDiagnosticCollector) initWithFD:a1 trashURL:v15];

  id v25 = 0;
  if ([v17 collectDiagnosticDiskAttributesWithError:&v25])
  {
    id v18 = v25;
    id v19 = [v17 diagnostic];
    if (v19)
    {
      uint64_t v20 = v19;
      type metadata accessor for FPDiagnosticAttributeKey(0);
      sub_100011348(0, (unint64_t *)&qword_100ACBF00);
      sub_10002584C(&qword_100ACCFD8, type metadata accessor for FPDiagnosticAttributeKey);
      uint64_t v21 = sub_10096B9C0();

      id v22 = sub_100638A98(v21);
      swift_bridgeObjectRelease();

      *a3 = v22;
      return;
    }
    type metadata accessor for NSFileProviderError(0);
    v24[1] = -1005;
    sub_100042898((uint64_t)_swiftEmptyArrayStorage);
    sub_10002584C((unint64_t *)&unk_100ACAAB0, type metadata accessor for NSFileProviderError);
    sub_10096ABD0();
  }
  else
  {
    id v23 = v25;
    sub_10096ABF0();
  }
  swift_willThrow();
}

id sub_100638A98(uint64_t a1)
{
  void (*v179)(void **__return_ptr, void **);
  void *v180;
  id v181;
  id v182;
  NSObject *v183;
  os_log_type_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  char isUniquelyReferenced_nonNull_native;
  char v193;
  unint64_t v194;
  uint64_t v195;
  BOOL v196;
  uint64_t v197;
  char v198;
  unint64_t v199;
  char v200;
  void *v201;
  uint64_t v202;
  id v203;
  id v204;
  void *v205;
  id v206;
  uint64_t v207;
  BOOL v208;
  uint64_t v209;
  id result;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  long long v249;
  uint64_t v250;
  char *v251;
  id v252;
  void (**v253)(char *, uint64_t);
  uint64_t v254;
  id v255;
  void *v256;
  void *v257;

  uint64_t v2 = v1;
  long long v254 = sub_10096B480();
  uint64_t v4 = *(void *)(v254 - 8);
  __chkstk_darwin(v254);
  unint64_t v251 = (char *)&v211 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v211 - v11;
  sub_10096B0D0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, v10, v6);
  uint64_t v15 = (void *)FPDiagnosticAttributeKeyStatGencount;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_retain();
  unint64_t v250 = a1;
  unint64_t v247 = v2;
  unint64_t v214 = v6;
  unint64_t v213 = v7;
  unint64_t v212 = v12;
  unint64_t v215 = v4;
  if (!v16) {
    goto LABEL_7;
  }
  id v17 = v15;
  uint64_t v18 = sub_10031F918(v17);
  if ((v19 & 1) == 0)
  {

LABEL_7:
    long long v245 = 0;
    goto LABEL_8;
  }
  id v20 = *(id *)(*(void *)(a1 + 56) + 8 * v18);

  self;
  uint64_t v21 = (void *)swift_dynamicCastObjCClass();
  if (!v21)
  {

    goto LABEL_7;
  }
  long long v245 = v21;
LABEL_8:
  sub_10002B7CC(&qword_100AD9330);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100987D70;
  unint64_t v228 = (id)FPDiagnosticAttributeKeySysPageSize;
  *(void *)(v22 + 32) = FPDiagnosticAttributeKeySysPageSize;
  *(void *)(v22 + 40) = sub_10063A1DC;
  *(void *)(v22 + 48) = 0;
  unint64_t v225 = (id)FPDiagnosticAttributeKeySysUID;
  *(void *)(v22 + 56) = FPDiagnosticAttributeKeySysUID;
  *(void *)(v22 + 64) = sub_10063A1DC;
  id v23 = (void *)FPDiagnosticAttributeKeySysReadErrno;
  *(void *)(v22 + 72) = 0;
  *(void *)(v22 + 80) = v23;
  unint64_t v229 = v23;
  *(void *)(v22 + 88) = sub_10063A1DC;
  *(void *)(v22 + 96) = 0;
  unint64_t v233 = (id)FPDiagnosticAttributeKeySysDocIDResolutionOK;
  *(void *)(v22 + 104) = FPDiagnosticAttributeKeySysDocIDResolutionOK;
  *(void *)(v22 + 112) = sub_10063A1E8;
  *(void *)(v22 + 120) = 0;
  long long v232 = (id)FPDiagnosticAttributeKeyStatMode;
  *(void *)(v22 + 128) = FPDiagnosticAttributeKeyStatMode;
  *(void *)(v22 + 136) = sub_10063A1DC;
  *(void *)(v22 + 144) = 0;
  int v24 = (void *)FPDiagnosticAttributeKeyStatBtime;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_10063A400;
  *(void *)(v25 + 24) = v14;
  long long v235 = v24;
  *(void *)(v22 + 152) = v24;
  *(void *)(v22 + 160) = sub_10063A474;
  *(void *)(v22 + 168) = v25;
  unint64_t v218 = (id)FPDiagnosticAttributeKeyStatBtimeIsBusy;
  *(void *)(v22 + 176) = FPDiagnosticAttributeKeyStatBtimeIsBusy;
  *(void *)(v22 + 184) = sub_10063A1E8;
  *(void *)(v22 + 192) = 0;
  uint64_t v26 = (void *)FPDiagnosticAttributeKeyStatMtime;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_10063A400;
  *(void *)(v27 + 24) = v14;
  unint64_t v220 = v26;
  *(void *)(v22 + 200) = v26;
  *(void *)(v22 + 208) = sub_10063A4F8;
  *(void *)(v22 + 216) = v27;
  unint64_t v28 = (void *)FPDiagnosticAttributeKeyStatFinderInfoFlags;
  *(void *)(v22 + 224) = FPDiagnosticAttributeKeyStatFinderInfoFlags;
  *(void *)(v22 + 232) = sub_10063A1DC;
  unint64_t v246 = v14;
  unint64_t v29 = (void *)FPDiagnosticAttributeKeyStatUID;
  *(void *)(v22 + 240) = 0;
  *(void *)(v22 + 248) = v29;
  *(void *)(v22 + 256) = sub_10063A1F0;
  *(void *)(v22 + 264) = 0;
  unint64_t v30 = (void *)FPDiagnosticAttributeKeyStatBSDFlags;
  *(void *)(v22 + 272) = FPDiagnosticAttributeKeyStatBSDFlags;
  *(void *)(v22 + 280) = sub_10063A1DC;
  *(void *)(v22 + 288) = 0;
  *(void *)(v22 + 296) = v15;
  uint64_t v31 = v15;
  *(void *)(v22 + 304) = sub_10002E4B4;
  *(void *)(v22 + 312) = 0;
  unint64_t v216 = (id)FPDiagnosticAttributeKeyStatDocID;
  *(void *)(v22 + 320) = FPDiagnosticAttributeKeyStatDocID;
  *(void *)(v22 + 328) = sub_10063A1DC;
  unint64_t v32 = (void *)FPDiagnosticAttributeKeyStatItemACLCount;
  *(void *)(v22 + 336) = 0;
  *(void *)(v22 + 344) = v32;
  unint64_t v219 = v32;
  *(void *)(v22 + 352) = sub_10063A21C;
  *(void *)(v22 + 360) = 0;
  uint64_t v217 = (id)FPDiagnosticAttributeKeyStatFileID;
  *(void *)(v22 + 368) = FPDiagnosticAttributeKeyStatFileID;
  *(void *)(v22 + 376) = sub_10063A1DC;
  unint64_t v33 = (void *)FPDiagnosticAttributeKeyStatDataProtectionClass;
  *(void *)(v22 + 384) = 0;
  *(void *)(v22 + 392) = v33;
  uint64_t v221 = v33;
  *(void *)(v22 + 400) = sub_10063A1DC;
  *(void *)(v22 + 408) = 0;
  int v222 = (id)FPDiagnosticAttributeKeyStatHasMoreLinks;
  *(void *)(v22 + 416) = FPDiagnosticAttributeKeyStatHasMoreLinks;
  *(void *)(v22 + 424) = sub_10063A1E8;
  unint64_t v34 = (void *)FPDiagnosticAttributeKeyStatLogicalSize;
  *(void *)(v22 + 432) = 0;
  *(void *)(v22 + 440) = v34;
  unint64_t v224 = v34;
  *(void *)(v22 + 448) = sub_10063A248;
  *(void *)(v22 + 456) = 0;
  unint64_t v223 = (id)FPDiagnosticAttributeKeyStatPhysicalSize;
  *(void *)(v22 + 464) = FPDiagnosticAttributeKeyStatPhysicalSize;
  *(void *)(v22 + 472) = sub_10063A248;
  unint64_t v35 = (void *)FPDiagnosticAttributeKeyStatResourceForkSize;
  *(void *)(v22 + 480) = 0;
  *(void *)(v22 + 488) = v35;
  unint64_t v227 = v35;
  *(void *)(v22 + 496) = sub_10063A248;
  *(void *)(v22 + 504) = 0;
  long long v231 = (id)FPDiagnosticAttributeKeyStatDirEntryCount;
  *(void *)(v22 + 512) = FPDiagnosticAttributeKeyStatDirEntryCount;
  *(void *)(v22 + 520) = sub_10063A274;
  *(void *)(v22 + 528) = 0;
  unint64_t v230 = (id)FPDiagnosticAttributeKeyStatIsDirstatEnabled;
  *(void *)(v22 + 536) = FPDiagnosticAttributeKeyStatIsDirstatEnabled;
  *(void *)(v22 + 544) = sub_10063A1E8;
  *(void *)(v22 + 552) = 0;
  unint64_t v36 = (void *)FPDiagnosticAttributeKeyStatClosestSyncroot;
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v247;
  *(void *)(v37 + 16) = sub_10063A46C;
  *(void *)(v37 + 24) = v38;
  unint64_t v234 = v36;
  *(void *)(v22 + 560) = v36;
  *(void *)(v22 + 568) = sub_10063A4F8;
  *(void *)(v22 + 576) = v37;
  unint64_t v226 = (id)FPDiagnosticAttributeKeyStatParentACLCount;
  *(void *)(v22 + 584) = FPDiagnosticAttributeKeyStatParentACLCount;
  *(void *)(v22 + 592) = sub_10063A21C;
  *(void *)(v22 + 600) = 0;
  char v39 = (void *)FPDiagnosticAttributeKeyNameLength;
  *(void *)(v22 + 608) = FPDiagnosticAttributeKeyNameLength;
  *(void *)(v22 + 616) = sub_10063A274;
  *(void *)(v22 + 624) = 0;
  int v40 = (void *)FPDiagnosticAttributeKeyNameIsAppleDouble;
  *(void *)(v22 + 632) = FPDiagnosticAttributeKeyNameIsAppleDouble;
  *(void *)(v22 + 640) = sub_10063A1E8;
  *(void *)(v22 + 648) = 0;
  long long v236 = (id)FPDiagnosticAttributeKeyNameUnicodeNorm;
  *(void *)(v22 + 656) = FPDiagnosticAttributeKeyNameUnicodeNorm;
  *(void *)(v22 + 664) = sub_10063A1DC;
  *(void *)(v22 + 672) = 0;
  long long v237 = (id)FPDiagnosticAttributeKeyNamePathLength;
  *(void *)(v22 + 680) = FPDiagnosticAttributeKeyNamePathLength;
  *(void *)(v22 + 688) = sub_10063A274;
  *(void *)(v22 + 696) = 0;
  long long v238 = (id)FPDiagnosticAttributeKeyNamePathDepth;
  *(void *)(v22 + 704) = FPDiagnosticAttributeKeyNamePathDepth;
  *(void *)(v22 + 712) = sub_10063A274;
  *(void *)(v22 + 720) = 0;
  unint64_t v240 = (id)FPDiagnosticAttributeKeyNameExtension;
  *(void *)(v22 + 728) = FPDiagnosticAttributeKeyNameExtension;
  *(void *)(v22 + 736) = sub_10063A2DC;
  *(void *)(v22 + 744) = 0;
  unint64_t v239 = (id)FPDiagnosticAttributeKeyNameUTType;
  *(void *)(v22 + 752) = FPDiagnosticAttributeKeyNameUTType;
  *(void *)(v22 + 760) = sub_10063A1DC;
  *(void *)(v22 + 768) = 0;
  uint64_t v241 = (id)FPDiagnosticAttributeKeyNameIsTrashed;
  *(void *)(v22 + 776) = FPDiagnosticAttributeKeyNameIsTrashed;
  *(void *)(v22 + 784) = sub_10063A1DC;
  *(void *)(v22 + 792) = 0;
  long long v242 = (id)FPDiagnosticAttributeKeyNameIsDotFile;
  *(void *)(v22 + 800) = FPDiagnosticAttributeKeyNameIsDotFile;
  *(void *)(v22 + 808) = sub_10063A1DC;
  *(void *)(v22 + 816) = 0;
  unint64_t v243 = (id)FPDiagnosticAttributeKeyNameCharacterSets;
  *(void *)(v22 + 824) = FPDiagnosticAttributeKeyNameCharacterSets;
  *(void *)(v22 + 832) = sub_10063A1DC;
  *(void *)(v22 + 840) = 0;
  unint64_t v244 = (id)FPDiagnosticAttributeKeyXattrIsQuarantined;
  *(void *)(v22 + 848) = FPDiagnosticAttributeKeyXattrIsQuarantined;
  *(void *)(v22 + 856) = sub_10063A1E8;
  *(void *)(v22 + 864) = 0;
  uint64_t v248 = (id)FPDiagnosticAttributeKeyXattrHasDemotion;
  *(void *)(v22 + 872) = FPDiagnosticAttributeKeyXattrHasDemotion;
  *(void *)(v22 + 880) = sub_10063A1E8;
  *(void *)(v22 + 888) = 0;
  *(void *)&unint64_t v249 = FPDiagnosticAttributeKeyXattrHasPromotion;
  *(void *)(v22 + 896) = FPDiagnosticAttributeKeyXattrHasPromotion;
  *(void *)(v22 + 904) = sub_10063A1E8;
  *(void *)(v22 + 912) = 0;
  long long v252 = (id)FPDiagnosticAttributeKeyXattrHasBeforeBounce;
  *(void *)(v22 + 920) = FPDiagnosticAttributeKeyXattrHasBeforeBounce;
  *(void *)(v22 + 928) = sub_10063A1E8;
  *(void *)(v22 + 936) = 0;
  int v41 = (void *)FPDiagnosticAttributeKeyXattrCount;
  *(void *)(v22 + 944) = FPDiagnosticAttributeKeyXattrCount;
  *(void *)(v22 + 952) = sub_10063A274;
  *(void *)(v22 + 960) = 0;
  unint64_t v42 = (void *)FPDiagnosticAttributeKeyXattrCompressionType;
  *(void *)(v22 + 968) = FPDiagnosticAttributeKeyXattrCompressionType;
  *(void *)(v22 + 976) = sub_10063A1DC;
  *(void *)(v22 + 984) = 0;
  long long v253 = (void (**)(char *, uint64_t))FPDiagnosticAttributeKeyPurgeFlags;
  *(void *)(v22 + 992) = FPDiagnosticAttributeKeyPurgeFlags;
  *(void *)(v22 + 1000) = sub_10063A1DC;
  *(void *)(v22 + 1008) = 0;
  long long v255 = (id)FPDiagnosticAttributeKeyPurgeGencount;
  size_t v43 = v245;
  if (v245)
  {
    swift_retain_n();
    id v44 = v228;
    id v45 = v225;
    id v46 = v229;
    id v47 = v233;
    id v48 = v232;
    id v49 = v235;
    id v50 = v218;
    id v51 = v220;
    id v52 = v28;
    id v53 = v29;
    id v54 = v30;
    id v55 = v31;
    id v56 = v216;
    id v57 = v219;
    id v58 = v217;
    id v59 = v221;
    id v60 = v222;
    id v61 = v224;
    id v62 = v223;
    id v63 = v227;
    id v64 = v231;
    id v65 = v230;
    id v66 = v234;
    uint64_t v67 = v247;
    swift_retain();
    id v68 = v226;
    id v69 = v39;
    id v70 = v40;
    id v71 = v236;
    id v72 = v237;
    id v73 = v238;
    id v74 = v240;
    id v75 = v239;
    id v76 = v241;
    id v77 = v242;
    id v78 = v243;
    id v79 = v244;
    id v80 = v248;
    id v81 = (id)v249;
    id v82 = v252;
    id v83 = v41;
    id v84 = v42;
    uint64_t v85 = v253;
    id v86 = v255;
    id v87 = v255;
    id v88 = [v43 unsignedLongLongValue];
    size_t v43 = (void *)swift_allocObject();
    v43[2] = v88;
    unint64_t v89 = sub_10063A4F0;
  }
  else
  {
    swift_retain_n();
    id v90 = v228;
    id v91 = v225;
    id v92 = v229;
    id v93 = v233;
    id v94 = v232;
    id v95 = v235;
    id v96 = v218;
    id v97 = v220;
    id v98 = v28;
    id v99 = v29;
    id v100 = v30;
    id v101 = v31;
    id v102 = v216;
    id v103 = v219;
    id v104 = v217;
    id v105 = v221;
    id v106 = v222;
    id v107 = v224;
    id v108 = v223;
    id v109 = v227;
    id v110 = v231;
    id v111 = v230;
    id v112 = v234;
    uint64_t v67 = v247;
    swift_retain();
    id v113 = v226;
    id v114 = v39;
    id v115 = v40;
    id v116 = v236;
    id v117 = v237;
    id v118 = v238;
    id v119 = v240;
    id v120 = v239;
    id v121 = v241;
    id v122 = v242;
    id v123 = v243;
    id v124 = v244;
    id v125 = v248;
    id v126 = (id)v249;
    id v127 = v252;
    id v128 = v41;
    id v129 = v42;
    unint64_t v130 = v253;
    id v86 = v255;
    id v131 = v255;
    unint64_t v89 = FPItem.extentmap.getter;
  }
  int v132 = v89;
  uint64_t v133 = swift_allocObject();
  *(void *)(v133 + 16) = v132;
  *(void *)(v133 + 24) = v43;
  *(void *)(v22 + 1016) = v86;
  *(void *)(v22 + 1024) = sub_10063A4F8;
  *(void *)(v22 + 1032) = v133;
  uint64_t v134 = FPDiagnosticAttributeKeyPurgeAtime;
  long long v255 = (id)FPDiagnosticAttributeKeyPurgeAtime;
  uint64_t v135 = swift_allocObject();
  uint64_t v136 = v246;
  *(void *)(v135 + 16) = sub_10063A400;
  *(void *)(v135 + 24) = v136;
  *(void *)(v22 + 1040) = v134;
  *(void *)(v22 + 1048) = sub_10063A4F8;
  *(void *)(v22 + 1056) = v135;
  uint64_t v137 = FPDiagnosticAttributeKeyPurgeSyncroot;
  long long v253 = (void (**)(char *, uint64_t))FPDiagnosticAttributeKeyPurgeSyncroot;
  uint64_t v138 = swift_allocObject();
  *(void *)(v138 + 16) = sub_10063A46C;
  *(void *)(v138 + 24) = v67;
  *(void *)(v22 + 1064) = v137;
  *(void *)(v22 + 1072) = sub_10063A4F8;
  *(void *)(v22 + 1080) = v138;
  long long v252 = (id)FPDiagnosticAttributeKeyAPFSAvailableSpace;
  *(void *)(v22 + 1088) = FPDiagnosticAttributeKeyAPFSAvailableSpace;
  *(void *)(v22 + 1096) = sub_10063A274;
  *(void *)(v22 + 1104) = 0;
  *(void *)&unint64_t v249 = FPDiagnosticAttributeKeyAPFSFlags;
  *(void *)(v22 + 1112) = FPDiagnosticAttributeKeyAPFSFlags;
  *(void *)(v22 + 1120) = sub_10063A1DC;
  *(void *)(v22 + 1128) = 0;
  uint64_t v248 = (id)FPDiagnosticAttributeKeyAPFSBlockSize;
  *(void *)(v22 + 1136) = FPDiagnosticAttributeKeyAPFSBlockSize;
  *(void *)(v22 + 1144) = sub_10063A1DC;
  *(void *)(v22 + 1152) = 0;
  unint64_t v139 = (void *)FPDiagnosticAttributeKeyAPFSRole;
  *(void *)(v22 + 1160) = FPDiagnosticAttributeKeyAPFSRole;
  *(void *)(v22 + 1168) = sub_10063A1DC;
  *(void *)(v22 + 1176) = 0;
  unint64_t v140 = (void *)FPDiagnosticAttributeKeyAPFSEncrypted;
  *(void *)(v22 + 1184) = FPDiagnosticAttributeKeyAPFSEncrypted;
  *(void *)(v22 + 1192) = sub_10063A1E8;
  *(void *)(v22 + 1200) = 0;
  unint64_t v141 = (void *)FPDiagnosticAttributeKeyDiagFailuresBitmap;
  *(void *)(v22 + 1208) = FPDiagnosticAttributeKeyDiagFailuresBitmap;
  *(void *)(v22 + 1216) = sub_10063A1DC;
  *(void *)(v22 + 1224) = 0;
  unint64_t v142 = (void *)FPDiagnosticAttributeKeyDiagErrorDomain;
  *(void *)(v22 + 1232) = FPDiagnosticAttributeKeyDiagErrorDomain;
  *(void *)(v22 + 1240) = sub_10063A1DC;
  *(void *)(v22 + 1248) = 0;
  unint64_t v143 = (void *)FPDiagnosticAttributeKeyDiagErrorCode;
  *(void *)(v22 + 1256) = FPDiagnosticAttributeKeyDiagErrorCode;
  *(void *)(v22 + 1264) = sub_10063A1DC;
  *(void *)(v22 + 1272) = 0;
  unint64_t v144 = (void *)FPDiagnosticAttributeKeyDiagUnderlyingErrorDomain;
  *(void *)(v22 + 1280) = FPDiagnosticAttributeKeyDiagUnderlyingErrorDomain;
  *(void *)(v22 + 1288) = sub_10063A1DC;
  *(void *)(v22 + 1296) = 0;
  char v145 = (void *)FPDiagnosticAttributeKeyDiagUnderlyingErrorCode;
  *(void *)(v22 + 1304) = FPDiagnosticAttributeKeyDiagUnderlyingErrorCode;
  *(void *)(v22 + 1312) = sub_10063A1DC;
  *(void *)(v22 + 1320) = 0;
  swift_retain();
  swift_retain();
  id v146 = v255;
  unsigned int v147 = v253;
  id v148 = v252;
  id v149 = (id)v249;
  id v150 = v248;
  id v151 = v139;
  id v152 = v140;
  id v153 = v141;
  id v154 = v142;
  id v155 = v143;
  id v156 = v144;
  id v157 = v145;
  unint64_t v158 = sub_10009618C(v22);
  uint64_t v159 = v250;
  uint64_t v160 = *(void *)(v250 + 64);
  long long v252 = (id)(v250 + 64);
  uint64_t v161 = 1 << *(unsigned char *)(v250 + 32);
  uint64_t v162 = -1;
  if (v161 < 64) {
    uint64_t v162 = ~(-1 << v161);
  }
  unint64_t v163 = v162 & v160;
  long long v255 = (id)((unint64_t)(v161 + 63) >> 6);
  long long v253 = (void (**)(char *, uint64_t))(v215 + 8);
  swift_bridgeObjectRetain();
  uint64_t v164 = 0;
  unint64_t v244 = &_swiftEmptyDictionarySingleton;
  *(void *)&long long v165 = 136315138;
  unint64_t v249 = v165;
  uint64_t v248 = (char *)&type metadata for Any + 8;
  unint64_t v166 = v251;
  while (1)
  {
    if (v163)
    {
      unint64_t v167 = __clz(__rbit64(v163));
      v163 &= v163 - 1;
      unint64_t v168 = v167 | (v164 << 6);
      goto LABEL_32;
    }
    uint64_t v169 = v164 + 1;
    if (__OFADD__(v164, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v169 >= (uint64_t)v255) {
      goto LABEL_49;
    }
    unint64_t v170 = *((void *)v252 + v169);
    ++v164;
    if (!v170)
    {
      uint64_t v164 = v169 + 1;
      if (v169 + 1 >= (uint64_t)v255) {
        goto LABEL_49;
      }
      unint64_t v170 = *((void *)v252 + v164);
      if (!v170)
      {
        uint64_t v164 = v169 + 2;
        if (v169 + 2 >= (uint64_t)v255) {
          goto LABEL_49;
        }
        unint64_t v170 = *((void *)v252 + v164);
        if (!v170) {
          break;
        }
      }
    }
LABEL_31:
    unint64_t v163 = (v170 - 1) & v170;
    unint64_t v168 = __clz(__rbit64(v170)) + (v164 << 6);
LABEL_32:
    uint64_t v172 = 8 * v168;
    unint64_t v173 = *(void **)(*(void *)(v159 + 56) + v172);
    uint64_t v174 = *(void *)(v158 + 16);
    id v175 = *(id *)(*(void *)(v159 + 48) + v172);
    unint64_t v176 = v173;
    if (v174 && (uint64_t v177 = sub_10031F918(v175), (v178 & 1) != 0))
    {
      unint64_t v179 = *(void (**)(void **__return_ptr, void **))(*(void *)(v158 + 56) + 16 * v177);
      long long v257 = v176;
      swift_retain();
      v179(&v256, &v257);
      swift_release();
      unint64_t v180 = v256;
      if (v256)
      {
        unint64_t v188 = (void *)_sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        int v190 = v189;
        long long v242 = v180;
        unint64_t v191 = v244;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v257 = v191;
        uint64_t v241 = v188;
        unint64_t v243 = v190;
        long long v194 = sub_10000DDD0((uint64_t)v188, (uint64_t)v190);
        unint64_t v195 = v191[2];
        unint64_t v196 = (v193 & 1) == 0;
        unint64_t v197 = v195 + v196;
        if (__OFADD__(v195, v196)) {
          goto LABEL_52;
        }
        unint64_t v198 = v193;
        if (v191[3] >= v197)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10091F61C();
          }
        }
        else
        {
          sub_10037916C(v197, isUniquelyReferenced_nonNull_native);
          long long v199 = sub_10000DDD0((uint64_t)v241, (uint64_t)v243);
          if ((v198 & 1) != (v200 & 1)) {
            goto LABEL_54;
          }
          long long v194 = v199;
        }
        unint64_t v166 = v251;
        unint64_t v201 = v257;
        unint64_t v244 = v257;
        if (v198)
        {
          unint64_t v202 = v257[7];

          long long v203 = v242;
          *(void *)(v202 + 8 * v194) = v242;
          long long v204 = v203;
        }
        else
        {
          v257[(v194 >> 6) + 8] |= 1 << v194;
          int v205 = (void *)(v201[6] + 16 * v194);
          long long v204 = v242;
          uint64_t v206 = v243;
          *int v205 = v241;
          v205[1] = v206;
          *(void *)(v201[7] + 8 * v194) = v204;
          char v207 = v201[2];
          char v208 = __OFADD__(v207, 1);
          unint64_t v209 = v207 + 1;
          if (v208) {
            goto LABEL_53;
          }
          v201[2] = v209;
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
      unint64_t v181 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      uint64_t v182 = v175;
      unint64_t v183 = sub_10096B470();
      unint64_t v184 = sub_10096C5C0();
      if (os_log_type_enabled(v183, v184))
      {
        unint64_t v185 = swift_slowAlloc();
        long long v257 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v185 = v249;
        unint64_t v186 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
        *(void *)(v185 + 4) = sub_100719D44(v186, v187, (uint64_t *)&v257);

        uint64_t v159 = v250;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v183, v184, "Ignoring entry %s in telemetry: unknown entry", (uint8_t *)v185, 0xCu);
        swift_arrayDestroy();
        unint64_t v166 = v251;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*v253)(v166, v254);
    }
  }
  uint64_t v171 = v169 + 3;
  if (v171 >= (uint64_t)v255)
  {
LABEL_49:
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v213 + 8))(v212, v214);
    return v244;
  }
  unint64_t v170 = *((void *)v252 + v171);
  if (v170)
  {
    uint64_t v164 = v171;
    goto LABEL_31;
  }
  while (1)
  {
    uint64_t v164 = v171 + 1;
    if (__OFADD__(v171, 1)) {
      break;
    }
    if (v164 >= (uint64_t)v255) {
      goto LABEL_49;
    }
    unint64_t v170 = *((void *)v252 + v164);
    ++v171;
    if (v170) {
      goto LABEL_31;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  Class result = (id)sub_10096D3C0();
  __break(1u);
  return result;
}

char *sub_100639D98(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = a1;
  if (![v3 integerValue])
  {
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithInteger:0];

    return (char *)v8;
  }
  Class v5 = sub_10063817C(16, 10);
  if (!v5)
  {

    return 0;
  }
  Class v6 = v5;
  Class result = (char *)[(objc_class *)v5 integerValue];
  if (!__OFADD__(result, 1))
  {
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithInteger:result + 1];

    return (char *)v8;
  }
  __break(1u);
  return result;
}

id sub_100639E80()
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v1 = (uint64_t)[result integerValue];
    if (v1 == getuid())
    {
      return [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
    }
    else if (v1)
    {
      id v2 = objc_allocWithZone((Class)NSNumber);
      if (v1 > 999) {
        uint64_t v3 = 3;
      }
      else {
        uint64_t v3 = 2;
      }
      return [v2 initWithInteger:v3];
    }
    else
    {
      return [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
    }
  }
  return result;
}

id sub_100639F34(uint64_t a1, void *a2)
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (!result) {
    return result;
  }
  id v4 = [result unsignedLongLongValue];
  Class v5 = (void *)swift_retain();
  if (objc_sync_enter(v5)) {
    goto LABEL_13;
  }
  uint64_t v6 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_14;
  }
  swift_release();
  id v7 = *(id *)(v6 + 24);
  swift_release();
  if (v4 == v7) {
    return [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
  }
  id v8 = (void *)swift_retain();
  if (objc_sync_enter(v8)) {
LABEL_13:
  }
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  uint64_t v9 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
LABEL_14:
  }
    sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
  swift_release();
  uint64_t v10 = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  char v11 = sub_100942660((uint64_t)v4, v10);
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone((Class)NSNumber);
  if (v11) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = 2;
  }
  return [v12 initWithInteger:v13];
}

id sub_10063A0B0(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = a1;
  if ([v3 integerValue] == (id)128)
  {

    id v5 = v4;
    return v4;
  }
  sub_100845F00(2);
  uint64_t v8 = v7;

  return (id)v8;
}

id sub_10063A13C(uint64_t a1, id a2)
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    id v4 = [result unsignedLongLongValue];
    if (v4 == a2)
    {
      return [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
    }
    else
    {
      id v5 = v4;
      id v6 = objc_allocWithZone((Class)NSNumber);
      if (v5 <= a2) {
        uint64_t v7 = 2;
      }
      else {
        uint64_t v7 = 1;
      }
      return [v6 initWithInteger:v7];
    }
  }
  return result;
}

id sub_10063A1DC@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_10063A1E8(uint64_t *a1@<X8>)
{
}

id sub_10063A1F0@<X0>(void *a1@<X8>)
{
  id result = sub_100639E80();
  *a1 = result;
  return result;
}

id sub_10063A21C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_10063A0B0(*a1);
  *a2 = result;
  return result;
}

char *sub_10063A248@<X0>(void **a1@<X0>, char **a2@<X8>)
{
  id result = sub_100639D98(*a1);
  *a2 = result;
  return result;
}

void sub_10063A274(uint64_t *a1@<X8>)
{
}

void sub_10063A27C(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4) {
    sub_100845F00(a1);
  }
  *a2 = v4;
}

void *sub_10063A2DC@<X0>(void *a1@<X8>)
{
  self;
  id result = (void *)swift_dynamicCastObjCClass();
  if (result)
  {
    id v3 = objc_msgSend(result, "fp_obfuscatedFilename");
    _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();

    NSString v4 = sub_10096BC00();
    id result = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_10063A370()
{
  uint64_t v1 = sub_10096B0E0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

Class sub_10063A400()
{
  uint64_t v1 = *(void *)(sub_10096B0E0() - 8);
  return sub_100637FE0(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 12, 8);
}

id sub_10063A46C(uint64_t a1)
{
  return sub_100639F34(a1, v1);
}

uint64_t sub_10063A474@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10063A4A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10063A4E0()
{
  return swift_deallocObject();
}

id sub_10063A4F0(uint64_t a1)
{
  return sub_10063A13C(a1, *(id *)(v1 + 16));
}

ValueMetadata *type metadata accessor for NSecTimestamp()
{
  return &type metadata for NSecTimestamp;
}

ValueMetadata *type metadata accessor for NSecTimeInterval()
{
  return &type metadata for NSecTimeInterval;
}

unint64_t sub_10063A534()
{
  unint64_t result = qword_100AD9338;
  if (!qword_100AD9338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9338);
  }
  return result;
}

void sub_10063A588(uint64_t a1, uint64_t a2)
{
  if (a2 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v2 = a2 - a1;
    if (__OFSUB__(a2, a1))
    {
      __break(1u);
    }
    else
    {
      sub_10014D284();
      sub_10096C9C0();
      v6._uint64_t countAndFlagsBits = 10272;
      v6._object = (void *)0xE200000000000000;
      sub_10096BDC0(v6);
      if ((v2 & 0x8000000000000000) == 0)
      {
        uint64_t v3 = 0;
        NSString v4 = (void *)0xE000000000000000;
LABEL_7:
        v7._uint64_t countAndFlagsBits = sub_10063AA90(v2);
        sub_10096BDC0(v7);
        swift_bridgeObjectRelease();
        v8._uint64_t countAndFlagsBits = v3;
        v8._object = v4;
        sub_10096BDC0(v8);
        swift_bridgeObjectRelease();
        v9._uint64_t countAndFlagsBits = 41;
        v9._object = (void *)0xE100000000000000;
        sub_10096BDC0(v9);
        return;
      }
      BOOL v5 = __OFSUB__(0, v2);
      uint64_t v2 = -v2;
      if (!v5)
      {
        NSString v4 = (void *)0xE100000000000000;
        uint64_t v3 = 45;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
}

void *sub_10063A69C(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 == *result);
  }
  __break(1u);
  return result;
}

void *sub_10063A6B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, *v2)) {
    __break(1u);
  }
  else {
    *a2 = *result - *v2;
  }
  return result;
}

void *sub_10063A6D4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*v2, *result)) {
    __break(1u);
  }
  else {
    *a2 = *v2 + *result;
  }
  return result;
}

void *sub_10063A6F0(void *result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (__OFADD__(*a4, *a6))
  {
    __break(1u);
  }
  else
  {
    *unint64_t result = *a4 + *a6;
    return 0;
  }
  return result;
}

uint64_t sub_10063A714()
{
  uint64_t result = *v0;
  if ((*v0 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = 0;
LABEL_5:
    v4._uint64_t countAndFlagsBits = sub_10063AA90(result);
    sub_10096BDC0(v4);
    swift_bridgeObjectRelease();
    return v2;
  }
  BOOL v3 = __OFSUB__(0, result);
  uint64_t result = -result;
  if (!v3)
  {
    uint64_t v2 = 45;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void *sub_10063A788(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 - *result > 0);
  }
  __break(1u);
  return result;
}

void *sub_10063A7A8(void *result, void *a2)
{
  if (!__OFSUB__(*result, *a2)) {
    return (void *)(*result - *a2 < 1);
  }
  __break(1u);
  return result;
}

void *sub_10063A7C8(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 - *result < 1);
  }
  __break(1u);
  return result;
}

void *sub_10063A7E8(void *result, void *a2)
{
  if (!__OFSUB__(*result, *a2)) {
    return (void *)(*result - *a2 > 0);
  }
  __break(1u);
  return result;
}

void *sub_10063A808()
{
  return &protocol witness table for Int;
}

unint64_t sub_10063A818()
{
  unint64_t result = qword_100AD9340;
  if (!qword_100AD9340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9340);
  }
  return result;
}

void *sub_10063A86C()
{
  return &protocol witness table for Int;
}

void *sub_10063A878()
{
  return &protocol witness table for Int;
}

BOOL sub_10063A884(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_10063A898(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10063A8AC(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_10063A8C0(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_10063A8D4()
{
  return sub_10096C9C0();
}

uint64_t sub_10063A934()
{
  return sub_10096C040();
}

uint64_t sub_10063A994()
{
  return sub_10096BFD0();
}

unint64_t sub_10063A9E8()
{
  unint64_t result = qword_100AD9348;
  if (!qword_100AD9348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9348);
  }
  return result;
}

unint64_t sub_10063AA3C()
{
  unint64_t result = qword_100AD9350;
  if (!qword_100AD9350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9350);
  }
  return result;
}

uint64_t sub_10063AA90(uint64_t a1)
{
  if (a1 >= 3600000000000)
  {
    uint64_t v4 = sub_10096D220();
    v7._uint64_t countAndFlagsBits = 104;
    v7._object = (void *)0xE100000000000000;
    sub_10096BDC0(v7);
    v8._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v8);
    swift_bridgeObjectRelease();
    v2._uint64_t countAndFlagsBits = 7235949;
    v2._object = (void *)0xE300000000000000;
  }
  else if (a1 >= 60000000000)
  {
    uint64_t v4 = sub_10096D220();
    v9._uint64_t countAndFlagsBits = 7235949;
    v9._object = (void *)0xE300000000000000;
    sub_10096BDC0(v9);
    v10._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v10);
    swift_bridgeObjectRelease();
    v2._uint64_t countAndFlagsBits = 115;
    v2._object = (void *)0xE100000000000000;
  }
  else
  {
    uint64_t v1 = a1 / 1000000 % 1000;
    if (a1 <= 999999999)
    {
      uint64_t v4 = sub_10096D220();
      if (v1 >= 1)
      {
        v11._uint64_t countAndFlagsBits = 29549;
        v11._object = (void *)0xE200000000000000;
        sub_10096BDC0(v11);
        v12._uint64_t countAndFlagsBits = sub_10096D220();
        sub_10096BDC0(v12);
        swift_bridgeObjectRelease();
      }
      v2._uint64_t countAndFlagsBits = 7583170;
      v2._object = (void *)0xA300000000000000;
    }
    else
    {
      uint64_t v4 = sub_10096D220();
      v5._uint64_t countAndFlagsBits = 115;
      v5._object = (void *)0xE100000000000000;
      sub_10096BDC0(v5);
      v6._uint64_t countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v6);
      swift_bridgeObjectRelease();
      v2._uint64_t countAndFlagsBits = 29549;
      v2._object = (void *)0xE200000000000000;
    }
  }
  sub_10096BDC0(v2);
  return v4;
}

uint64_t sub_10063ADA8()
{
  uint64_t v0 = sub_10096B0E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  BOOL v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B0D0();
  sub_10096B080();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return (uint64_t)v7;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10063AECC(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC((uint64_t *)&unk_100ACB5E0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v11 = (char *)&v18 - v10;
  sub_10016D1D8(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10016D178(a1);
    sub_10016D178((uint64_t)v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  sub_10096B080();
  double v14 = v13;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t result = v15(v9, v5);
  double v17 = v14 * 1000000000.0;
  if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v17 < 9.22337204e18)
  {
    uint64_t v12 = (uint64_t)v17;
    sub_10016D178(a1);
    v15(v11, v5);
    return v12;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_10063B120(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10096B180();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_10063B200(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10063B290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10063B324(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10063B3B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10096B180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10063B444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063B458);
}

uint64_t sub_10063B458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B180();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10063B528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063B53C);
}

uint64_t sub_10063B53C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10096B180();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for FPFSPendingSetAnchor()
{
  uint64_t result = qword_100AD93B0;
  if (!qword_100AD93B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10063B644()
{
  uint64_t result = sub_10096B180();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10063B6E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100AD93F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_10063BE18();
  sub_10096D590();
  char v12 = 0;
  sub_10096B180();
  sub_100591364(&qword_100ACAD28);
  sub_10096D1A0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for FPFSPendingSetAnchor() + 20));
    v10[15] = 1;
    sub_1003FBECC();
    sub_10096D1A0();
    v10[14] = 2;
    sub_10096D180();
    v10[13] = 3;
    sub_10096D160();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10063B8FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_10096B180();
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v22 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002B7CC(&qword_100AD9400);
  uint64_t v20 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for FPFSPendingSetAnchor();
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10063BE18();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  uint64_t v18 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v21;
  char v28 = 0;
  sub_100591364(&qword_100ACAD08);
  double v14 = v22;
  uint64_t v13 = v23;
  sub_10096D040();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v4);
  char v27 = 1;
  sub_1003FBE78();
  sub_10096D040();
  *(void *)(v11 + v8[5]) = v24;
  char v26 = 2;
  *(void *)(v11 + v8[6]) = sub_10096D030();
  char v25 = 3;
  char v15 = sub_10096D010();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v13);
  *(unsigned char *)(v11 + v8[7]) = v15 & 1;
  sub_10063BE6C(v11, v19);
  sub_1000268E0((uint64_t)v18);
  return sub_10063BED0(v11);
}

unint64_t sub_10063BCA4()
{
  unint64_t result = 0x53676E69646E6570;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x74657366666FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10063BD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10063C138(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10063BD70(uint64_t a1)
{
  unint64_t v2 = sub_10063BE18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063BDAC(uint64_t a1)
{
  unint64_t v2 = sub_10063BE18();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10063BDE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10063B8FC(a1, a2);
}

uint64_t sub_10063BE00(void *a1)
{
  return sub_10063B6E8(a1);
}

unint64_t sub_10063BE18()
{
  unint64_t result = qword_100AD93F8;
  if (!qword_100AD93F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD93F8);
  }
  return result;
}

uint64_t sub_10063BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSPendingSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063BED0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFSPendingSetAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FPFSPendingSetAnchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063BFF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFSPendingSetAnchor.CodingKeys()
{
  return &type metadata for FPFSPendingSetAnchor.CodingKeys;
}

unint64_t sub_10063C034()
{
  unint64_t result = qword_100AD9408;
  if (!qword_100AD9408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9408);
  }
  return result;
}

unint64_t sub_10063C08C()
{
  unint64_t result = qword_100AD9410;
  if (!qword_100AD9410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9410);
  }
  return result;
}

unint64_t sub_10063C0E4()
{
  unint64_t result = qword_100AD9418;
  if (!qword_100AD9418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9418);
  }
  return result;
}

uint64_t sub_10063C138(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53676E69646E6570 && a2 == 0xEE00444955557465;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001009AE030 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001009AE050)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void __swiftcall VFSItemHandle.init(fileID:parentID:docID:genCount:name:)(libfssync::VFSItemHandle *__return_ptr retstr, Swift::UInt64 fileID, Swift::UInt64 parentID, Swift::UInt32 docID, Swift::UInt32 genCount, libfssync::Filename_optional name)
{
  retstr->fileID = fileID;
  retstr->parentID = parentID;
  retstr->docID = docID;
  retstr->genCount = genCount;
  retstr->name = name;
}

uint64_t sub_10063C318(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t CapturedContent.fid.getter()
{
  return *(void *)v0;
}

uint64_t VFSItemHandle.parentID.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t VFSItemHandle.parentID.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

libfssync::Filename (__swiftcall *VFSItemHandle.parentID.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t VFSLookupScope.deviceID.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t VFSItemHandle.docID.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

libfssync::Filename (__swiftcall *VFSItemHandle.docID.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t VFSItemHandle.genCount.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t VFSItemHandle.genCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

libfssync::Filename (__swiftcall *VFSItemHandle.genCount.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

uint64_t VFSItemHandle.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VFSItemHandle.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

libfssync::Filename (__swiftcall *VFSItemHandle.name.modify())(Swift::String rawValue)
{
  return Filename.init(rawValue:);
}

BOOL VFSItemHandle.allowPathLookup.getter()
{
  return *(void *)(v0 + 8) && *(void *)(v0 + 32) != 0;
}

uint64_t sub_10063C484()
{
  uint64_t result = 0x4449656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449746E65726170;
      break;
    case 2:
      uint64_t result = 0x4449636F64;
      break;
    case 3:
      uint64_t result = 0x746E756F436E6567;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10063C520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10063CEAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10063C548(uint64_t a1)
{
  unint64_t v2 = sub_10063CDF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063C584(uint64_t a1)
{
  unint64_t v2 = sub_10063CDF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t VFSItemHandle.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002B7CC(&qword_100AD9420);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002689C(a1, a1[3]);
  sub_10063CDF0();
  sub_10096D590();
  v11[0] = 0;
  sub_10096D1F0();
  if (!v2)
  {
    v11[0] = 1;
    sub_10096D1F0();
    v11[0] = 2;
    sub_10096D1E0();
    v11[0] = 3;
    sub_10096D1E0();
    sub_10063CE44(v3 + 24, (uint64_t)v12);
    sub_10063CE44((uint64_t)v12, (uint64_t)v11);
    v10[15] = 4;
    sub_100157BC4();
    sub_10096D100();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double VFSItemHandle.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10063D0AC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10063C808(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s9libfssync13VFSItemHandleV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_10063C854(void *a1)
{
  return VFSItemHandle.encode(to:)(a1);
}

uint64_t sub_10063C890@<X0>(uint64_t a1@<X2>, _DWORD *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_10063D6C8;
  *(void *)(v5 + 24) = v4;
  v10[4] = sub_10002BF28;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_10002BF58;
  v10[3] = &unk_100A94CE0;
  uint64_t v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  sub_10096BCF0();
  int v7 = fpfs_gethandle_at();
  swift_release();
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  else {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_10063CA18(long long *a1, uint64_t *a2)
{
  long long v3 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  if (*((void *)a1 + 3))
  {
    long long v14 = *a1;
    sub_10096BDE0();
    sub_10001F9C0();
    uint64_t v5 = sub_10096C910();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    long long v3 = v14;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  *(_OWORD *)a2 = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v7;
  sub_10003DAF4(v8, v9, v10, v11, v12);
  return 0;
}

uint64_t _s9libfssync13VFSItemHandleV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16)
    || *(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20))
  {
    return 0;
  }
  unint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a2 + 32);
  if (!v4) {
    return !v5;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  sub_10063D6E0(a1);
  sub_10063D6E0(a1);
  sub_10063D6E0(a2);
  uint64_t v8 = sub_10002C020(v6, v4);
  if (v9)
  {
    if (v8 == 12565487 && v9 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_10096BD70();
      sub_1000364D0(v12, v6, v4);
      sub_10021E550(a1);
      uint64_t v6 = sub_10096BD10();
      unint64_t v4 = v13;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v11 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRetain();
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10002C020(v7, v5);
  uint64_t v16 = v15;
  sub_10021E550(a2);
  if (!v16) {
    goto LABEL_22;
  }
  if (v14 != 12565487 || v16 != 0xA300000000000000)
  {
    char v17 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_21;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_10096BD70();
  sub_1000364D0(v18, v7, v5);
  sub_10021E550(a2);
  uint64_t v7 = sub_10096BD10();
  unint64_t v5 = v19;
  swift_bridgeObjectRelease();
LABEL_23:
  if (v6 == v7 && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    sub_10021E550(a2);
    sub_10021E550(a1);
    sub_10021E550(a1);
    return 1;
  }
  char v20 = sub_10096D2D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10021E550(a2);
  sub_10021E550(a1);
  sub_10021E550(a1);
  return (v20 & 1) != 0;
}

unint64_t sub_10063CDF0()
{
  unint64_t result = qword_100AD9428;
  if (!qword_100AD9428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9428);
  }
  return result;
}

uint64_t sub_10063CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002B7CC(&qword_100ADF5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063CEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449746E65726170 && a2 == 0xE800000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449636F64 && a2 == 0xE500000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F436E6567 && a2 == 0xE800000000000000 || (sub_10096D2D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10096D2D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_10063D0AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10002B7CC(&qword_100AD9448);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002689C(a1, a1[3]);
  sub_10063CDF0();
  sub_10096D570();
  if (v2) {
    return sub_1000268E0((uint64_t)a1);
  }
  LOBYTE(v17) = 0;
  uint64_t v9 = sub_10096D090();
  LOBYTE(v17) = 1;
  uint64_t v10 = sub_10096D090();
  LOBYTE(v17) = 2;
  int v19 = sub_10096D080();
  LOBYTE(v17) = 3;
  int v16 = sub_10096D080();
  char v20 = 4;
  sub_100157D68();
  sub_10096CFB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v17;
  uint64_t v12 = v18;
  uint64_t result = sub_1000268E0((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  int v14 = v16;
  *(_DWORD *)(a2 + 16) = v19;
  *(_DWORD *)(a2 + 20) = v14;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  return result;
}

uint64_t destroy for VFSItemHandle()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSItemHandle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSItemHandle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemHandle()
{
  return &type metadata for VFSItemHandle;
}

unsigned char *storeEnumTagSinglePayload for VFSItemHandle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063D578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemHandle.CodingKeys()
{
  return &type metadata for VFSItemHandle.CodingKeys;
}

unint64_t sub_10063D5B4()
{
  unint64_t result = qword_100AD9430;
  if (!qword_100AD9430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9430);
  }
  return result;
}

unint64_t sub_10063D60C()
{
  unint64_t result = qword_100AD9438;
  if (!qword_100AD9438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9438);
  }
  return result;
}

unint64_t sub_10063D664()
{
  unint64_t result = qword_100AD9440;
  if (!qword_100AD9440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9440);
  }
  return result;
}

uint64_t sub_10063D6B8()
{
  return swift_deallocObject();
}

uint64_t sub_10063D6C8(long long *a1)
{
  return sub_10063CA18(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10063D6D0()
{
  return swift_deallocObject();
}

uint64_t sub_10063D6E0(uint64_t a1)
{
  return a1;
}

double sub_10063D70C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10001725C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1001FAC78(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10063D770(uint64_t a1, uint64_t a2)
{
  return sub_10063D7A0(a1, a2, (uint64_t (*)(void))sub_1003204B0);
}

uint64_t sub_10063D788(uint64_t a1, uint64_t a2)
{
  return sub_10063D7A0(a1, a2, (uint64_t (*)(void))sub_1003204C8);
}

uint64_t sub_10063D7A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a2 + 16) && (uint64_t v4 = a3(), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_10063D7EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_10031F918(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_10063D830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_10096B3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v13);
  id v47 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  uint64_t aBlock = 0x2070756B6F6F6CLL;
  unint64_t v49 = 0xE700000000000000;
  uint64_t v45 = a1;
  uint64_t v54 = a1;
  v55._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v55);
  swift_bridgeObjectRelease();
  unint64_t v16 = v49;
  uint64_t v43 = aBlock;
  id v44 = v12;
  sub_10002B70C((uint64_t)v12, (uint64_t)v10, &qword_100AD0830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    id v17 = v15;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v10, &qword_100AD0830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  uint64_t v18 = v47;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v47, v6, v3);
  uint64_t v41 = *(int *)(v13 + 20);
  *(void *)&v18[v41] = v15;
  int v19 = &v18[*(int *)(v13 + 24)];
  *(void *)int v19 = "SQLDB: Lookup item by fileID";
  *((void *)v19 + 1) = 28;
  unint64_t v42 = v19;
  v19[16] = 2;
  id v20 = v15;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100973BB0;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_1000240A4();
  *(void *)(v21 + 32) = v43;
  *(void *)(v21 + 40) = v16;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v44, &qword_100AD0830);
  uint64_t v22 = v46;
  uint64_t v23 = *(void **)(v46 + qword_100B0B260);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v45;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100640628;
  *(void *)(v26 + 24) = v24;
  id v52 = sub_1001F8FDC;
  uint64_t v53 = v26;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v49 = 1107296256;
  id v50 = sub_10017090C;
  id v51 = &unk_100A94D58;
  char v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  id v28 = [v23 fetchSwift:v27 error:&aBlock];
  _Block_release(v27);
  id v29 = (id)aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v28)
  {
    sub_10096ABF0();

    swift_willThrow();
    goto LABEL_15;
  }
  if (([v28 next] & 1) == 0)
  {
    uint64_t v34 = sub_10002B7CC(&qword_100ACCB10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v39, 1, 1, v34);
LABEL_14:

    goto LABEL_15;
  }
  uint64_t v31 = sub_1003FE014();
  uint64_t v33 = v39;
  uint64_t v32 = v40;
  sub_100550BB0(v31, v28, 0, v39);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_10002B7CC(&qword_100ACCB10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
    goto LABEL_14;
  }

  swift_bridgeObjectRelease();
LABEL_15:
  sub_10096C760();
  uint64_t v36 = (uint64_t)v47;
  sub_10096B3A0();
  sub_10020E1F8(v36);
  return swift_release();
}

uint64_t sub_10063DEC4(void *a1, uint64_t a2)
{
  sub_10096CBD0(71);
  v15._uint64_t countAndFlagsBits = 0x205443454C4553;
  v15._object = (void *)0xE700000000000000;
  sub_10096BDC0(v15);
  uint64_t v4 = *(void *)(a2 + qword_100B0B280);
  uint64_t v5 = *(void **)(a2 + qword_100B0B280 + 8);
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = v4;
  v16._object = v5;
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x204D4F524620200ALL;
  v17._object = (void *)0xE800000000000000;
  sub_10096BDC0(v17);
  uint64_t v6 = a2 + qword_100B0B270;
  uint64_t v7 = *(void *)(a2 + qword_100B0B270);
  uint64_t v8 = *(void **)(v6 + 8);
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v7;
  v18._object = v8;
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 0x44455845444E4920;
  v19._object = (void *)0xEC00000020594220;
  sub_10096BDC0(v19);
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v7;
  v20._object = v8;
  sub_10096BDC0(v20);
  swift_bridgeObjectRelease();
  v21._object = (void *)0x80000001009A95E0;
  v21._uint64_t countAndFlagsBits = 0xD000000000000024;
  sub_10096BDC0(v21);
  Class isa = sub_10096D540().super.super.isa;
  id v10 = [a1 bindObjectParameter:isa];

  uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v13 = v12;

  v22._uint64_t countAndFlagsBits = v11;
  v22._object = v13;
  sub_10096BDC0(v22);
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_10063E084()
{
  void (*v4)(void **__return_ptr, uint64_t, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), uint64_t, uint64_t);
  uint64_t v5;
  void *v6;
  char v7;

  if (*(unsigned char *)(v0 + 72) != 1) {
    return *(void **)(v0 + 64);
  }
  swift_beginAccess();
  double result = sub_10014D51C(*(void *)(v0 + 16));
  if (!result)
  {
LABEL_7:
    *(void *)(v0 + 64) = result;
    *(unsigned char *)(v0 + 72) = 0;
    return result;
  }
  uint64_t v3 = v2;

  double result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void (**)(void **__return_ptr, uint64_t, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), uint64_t, uint64_t))(*(void *)result + 432);
    uint64_t v5 = sub_10002B7CC(&qword_100ACE960);
    v4(&v6, 1, "itemCount", 9, 2, sub_100640660, v3, v5);
    swift_release();
    swift_release();
    if (v7) {
      double result = 0;
    }
    else {
      double result = v6;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_10063E1A4@<X0>(uint64_t a1@<X8>)
{
  double result = sub_1007CAEF8();
  if (v1)
  {
    swift_errorRelease();
    double result = 0;
  }
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v1 != 0;
  return result;
}

uint64_t sub_10063E1FC@<X0>(char **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v74 = (char *)a3;
  uint64_t v6 = sub_10096B480();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  id v72 = a2;
  id v73 = v13;
  uint64_t v14 = *((unsigned int *)a1 + 4);
  Swift::String v15 = a1[3];
  id v68 = a1[1];
  uint64_t v70 = v7;
  id v71 = (void *)v6;
  Swift::String v16 = v3;
  if (v15)
  {
    uint64_t v80 = sub_10096BDE0();
    uint64_t v81 = v17;
    uint64_t v78 = 58;
    unint64_t v79 = 0xE100000000000000;
    uint64_t v76 = 47;
    unint64_t v77 = 0xE100000000000000;
    sub_10001F9C0();
    uint64_t v69 = sub_10096C910();
    Swift::String v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v69 = 0;
    Swift::String v19 = 0;
  }
  uint64_t v20 = sub_10002B7CC(&qword_100ACCB10);
  Swift::String v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v12, 1, 1, v20);
  switch(*((_DWORD *)a1 + 10))
  {
    case 1:
    case 3:
      uint64_t v22 = (uint64_t)v73;
      if (v14)
      {
        id v71 = v19;
        char v23 = 0;
        uint64_t v82 = v14;
LABEL_9:
        char v83 = v23;
        uint64_t v24 = v16;
        swift_beginAccess();
        uint64_t v25 = v16[2];
        if (!*(void *)(v25 + 16)) {
          goto LABEL_48;
        }
        id v26 = v72;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_10031F918(v26);
        if ((v28 & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_48:
          swift_beginAccess();
          sub_1004956D8(&v84, v22);
          swift_endAccess();
          swift_bridgeObjectRelease();
          return sub_10001AE98((uint64_t)v12, (uint64_t)v74, (uint64_t *)&unk_100AD0CF0);
        }
        id v29 = *(char **)(*(void *)(v25 + 56) + 8 * v27);
        swift_retain();

        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v30 = v16[3];
        if (*(void *)(v30 + 16))
        {
          id v31 = v26;
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_10031F918(v31);
          if ((v33 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)v16);
          }
          Swift::String v16 = *(void **)(*(void *)(v30 + 56) + 8 * v32);
          swift_retain_n();

          swift_bridgeObjectRelease();
          if (objc_sync_enter(v16)) {
            goto LABEL_54;
          }
          uint64_t v34 = v16[20];
          swift_retain();
          if (objc_sync_exit(v16)) {
            sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)v16);
          }
          swift_release();
          uint64_t v35 = *(char **)(v34 + 24);
          uint64_t v36 = swift_release();
          if ((char *)v22 == v35)
          {
            (*(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v29 + 2) + 96))(&v78, v36);
            uint64_t v82 = v78;
            char v83 = v79;
          }
          if (v68 != v35) {
            goto LABEL_46;
          }
          uint64_t v37 = qword_100ACC040;
          id v26 = v71;
          swift_bridgeObjectRetain();
          if (v37 == -1)
          {
            if (!v26) {
              goto LABEL_46;
            }
            goto LABEL_20;
          }
        }
        else
        {
          __break(1u);
        }
        swift_once();
        if (!v26) {
          goto LABEL_46;
        }
LABEL_20:
        uint64_t v38 = (void *)*((void *)&static Filename.trashName + 1);
        uint64_t v75 = static Filename.trashName;
        unint64_t v39 = (unint64_t)v71;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_10002C020(v69, v39);
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        v67[1] = v24;
        if (v42)
        {
          if (v40 == 12565487 && v42 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_32:
            id v68 = v29;
            unint64_t v50 = (unint64_t)v71;
            swift_bridgeObjectRetain();
            uint64_t v51 = v69;
            unint64_t v52 = sub_10096BD70();
            sub_1000364D0(v52, v51, v50);
            id v29 = v68;
            swift_bridgeObjectRelease();
            uint64_t v69 = sub_10096BD10();
            uint64_t v70 = v53;
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
          char v49 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_32;
          }
        }
        uint64_t v70 = swift_bridgeObjectRetain();
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_10002C020(v75, (unint64_t)v38);
        uint64_t v56 = v55;
        swift_bridgeObjectRelease();
        id v72 = v38;
        if (v56)
        {
          if (v54 == 12565487 && v56 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_39:
            swift_bridgeObjectRetain();
            uint64_t v58 = v75;
            unint64_t v59 = sub_10096BD70();
            sub_1000364D0(v59, v58, (unint64_t)v38);
            swift_bridgeObjectRelease();
            uint64_t v60 = sub_10096BD10();
            id v62 = v61;
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v73;
            goto LABEL_41;
          }
          char v57 = sub_10096D2D0();
          swift_bridgeObjectRelease();
          if (v57) {
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRetain();
        id v62 = v38;
        uint64_t v22 = (uint64_t)v73;
        uint64_t v60 = v75;
LABEL_41:
        if (v69 == v60 && (void *)v70 == v62)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v63 = swift_bridgeObjectRelease_n();
        }
        else
        {
          char v64 = sub_10096D2D0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = swift_bridgeObjectRelease();
          if ((v64 & 1) == 0) {
            goto LABEL_46;
          }
        }
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v29 + 2) + 104))(&v78, v63);
        uint64_t v82 = v78;
        char v83 = v79;
LABEL_46:
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v66 = *(void *)__chkstk_darwin(Strong);
          (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(v66 + 432))(1, "fetchItem(with:inDomainID:)", 27, 2, sub_100640640);
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_48;
        }
        goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      v21(v74, 1, 1, v20);
      uint64_t v47 = (uint64_t)v12;
      return sub_10002B770(v47, (uint64_t *)&unk_100AD0CF0);
    case 2:
    case 4:
      uint64_t v22 = (uint64_t)v73;
      if (!v73)
      {
        swift_bridgeObjectRelease();
        v21(v74, 1, 1, v20);
        return sub_10002B770((uint64_t)v12, (uint64_t *)&unk_100AD0CF0);
      }
      id v71 = v19;
      uint64_t v82 = (uint64_t)v73;
      char v23 = 1;
      goto LABEL_9;
    default:
      id v73 = v12;
      swift_bridgeObjectRelease();
      id v43 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      id v44 = sub_10096B470();
      os_log_type_t v45 = sub_10096C5A0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Item kind undefined.", v46, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, void *))(v70 + 8))(v9, v71);
      v21(v74, 1, 1, v20);
      uint64_t v47 = (uint64_t)v73;
      return sub_10002B770(v47, (uint64_t *)&unk_100AD0CF0);
  }
}

uint64_t sub_10063EBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10096B480();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007C9A68(*(void *)a3, *(unsigned __int8 *)(a3 + 8), 0, (uint64_t)v12);
  if (!v3) {
    return sub_10012DF00((uint64_t)v12, a1);
  }
  id v13 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_errorRetain();
  uint64_t v14 = sub_10096B470();
  os_log_type_t v15 = sub_10096C5B0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v22 = v6;
    Swift::String v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = v7;
    Swift::String v18 = (void *)v17;
    *(_DWORD *)Swift::String v16 = 138412290;
    swift_getErrorValue();
    id v19 = Error.prettyDescription.getter(v24);
    id v23 = v19;
    uint64_t v6 = v22;
    sub_10096C8C0();
    *Swift::String v18 = v19;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching the item in the FSSnapshot: %@", v16, 0xCu);
    sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
    swift_arrayDestroy();
    uint64_t v7 = v21;
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

BOOL sub_10063EE5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  if (sub_1004AE748(a1, *(void *)(v5 + 32))) {
    return 1;
  }
  swift_beginAccess();
  uint64_t v12 = sub_1004AE748(a1, *(void *)(v5 + 40));
  if (v12) {
    return 0;
  }
  uint64_t v13 = *(void *)(v5 + 48);
  int v14 = *(unsigned __int8 *)(v5 + 56);
  if (v14 == 1 && v13) {
    return 1;
  }
  int v15 = a3 & 1 & v14;
  if (a3) {
    a2 = *(void *)(v5 + 48);
  }
  if (v15 != 1)
  {
LABEL_13:
    if (a2 < 1) {
      return 0;
    }
    if (a5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  if (v13)
  {
    uint64_t v12 = (uint64_t)sub_10063E084();
    a2 = v12;
    goto LABEL_13;
  }
  a2 = 0x7FFFFFFFLL;
  if (a5)
  {
LABEL_15:
    uint64_t v12 = (uint64_t)sub_10063E084();
    a4 = v12;
  }
LABEL_16:
  if (a4 >= 1)
  {
    if (a4 >= (unint64_t)a2)
    {
      sub_1008687D4(v12, 0.0, 1.0);
      return v16 < (double)a2 / (double)a4;
    }
    return 1;
  }
  return 0;
}

uint64_t sub_10063EF80(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  uint64_t v47 = a3;
  uint64_t v48 = a5;
  char v49 = a4;
  uint64_t v54 = sub_10096B480();
  uint64_t v6 = *(void *)(v54 - 8);
  uint64_t v7 = __chkstk_darwin(v54);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v50 = (char *)v42 - v10;
  uint64_t v11 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v45 = (uint64_t)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10002B7CC((uint64_t *)&unk_100AD0CF0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v42 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v42 - v21;
  id v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v51 = v11;
  v23((char *)v42 - v21, 1, 1, v11);
  uint64_t v53 = a2;
  uint64_t v24 = v52;
  sub_10063D830(a2, (uint64_t)v20);
  if (v24)
  {
    id v44 = v22;
    uint64_t v52 = v6;
    id v25 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    swift_errorRetain();
    id v26 = sub_10096B470();
    os_log_type_t v27 = sub_10096C5B0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      id v43 = v9;
      uint64_t v29 = v28;
      uint64_t v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134349314;
      uint64_t v56 = v53;
      sub_10096C8C0();
      *(_WORD *)(v29 + 12) = 2114;
      v42[1] = v29 + 14;
      swift_getErrorValue();
      id v31 = Error.prettyDescription.getter(v55);
      uint64_t v56 = (uint64_t)v31;
      sub_10096C8C0();
      *uint64_t v30 = v31;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Error retrieving item %{public}llu error: %{public}@", (uint8_t *)v29, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v9 = v43;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v32 = v51;
    uint64_t v6 = v52;
    uint64_t v22 = v44;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v54);
  }
  else
  {
    sub_10002B770((uint64_t)v22, (uint64_t *)&unk_100AD0CF0);
    sub_10001AE98((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_100AD0CF0);
    uint64_t v32 = v51;
  }
  sub_10002B70C((uint64_t)v22, (uint64_t)v17, (uint64_t *)&unk_100AD0CF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v32) == 1)
  {
    sub_10002B770((uint64_t)v17, (uint64_t *)&unk_100AD0CF0);
    id v33 = (id)fpfs_current_or_default_log();
    uint64_t v34 = v50;
    sub_10096B490();
    uint64_t v35 = sub_10096B470();
    os_log_type_t v36 = sub_10096C5B0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134349056;
      uint64_t v56 = v53;
      sub_10096C8C0();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Enumeration returned a fileID for which no item can be found: %{public}llu", v37, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v34, v54);
  }
  else
  {
    uint64_t v38 = v45;
    sub_10001AE98((uint64_t)v17, v45, &qword_100ACCB10);
    uint64_t v39 = v46;
    swift_beginAccess();
    char v40 = sub_1004AE748(v53, *(void *)(v39 + 32));
    v49(v38, v40 & 1, v47);
    sub_10002B770(v38, &qword_100ACCB10);
  }
  return sub_10002B770((uint64_t)v22, (uint64_t *)&unk_100AD0CF0);
}

uint64_t sub_10063F524(int a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v52 = a3;
  uint64_t v51 = a2;
  uint64_t v8 = *(void *)(v3 + 48);
  int v42 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v46 = v8;
  if (v42 == 1) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = (uint64_t)sub_10063E084() < v8;
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v44 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  int v48 = a1 | v9;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v40 = v10;
  uint64_t v41 = (char *)&type metadata for () + 8;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      uint64_t v18 = (v14 - 1) & v14;
      unint64_t v19 = v17 | (v16 << 6);
    }
    else
    {
      if (__OFADD__(v16++, 1)) {
        goto LABEL_49;
      }
      if (v16 >= v45) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v44 + 8 * v16);
      if (!v21)
      {
        int64_t v22 = v16 + 1;
        if (v16 + 1 >= v45) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v44 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v16 + 2;
          if (v16 + 2 >= v45) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v44 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v16 + 3;
            if (v16 + 3 >= v45) {
              return swift_release();
            }
            unint64_t v21 = *(void *)(v44 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_50;
                }
                if (v16 >= v45) {
                  return swift_release();
                }
                unint64_t v21 = *(void *)(v44 + 8 * v16);
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
        int64_t v16 = v22;
      }
LABEL_20:
      uint64_t v18 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
    }
    uint64_t v23 = 8 * v19;
    uint64_t v24 = *(void **)(*(void *)(v10 + 48) + v23);
    uint64_t v25 = *(void *)(*(void *)(v10 + 56) + v23);
    unint64_t v49 = v18;
    int64_t v50 = v16;
    if (v48)
    {
      uint64_t result = swift_weakLoadStrong();
      if (!result) {
        goto LABEL_52;
      }
      id v26 = (void *)__chkstk_darwin(result);
      uint64_t v35 = v25;
      uint64_t v36 = v51;
      id v37 = v52;
      uint64_t v38 = v6;
      uint64_t v39 = v24;
      uint64_t v47 = (void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)(), uint64_t *, char *))(*v26 + 432);
      os_log_type_t v27 = *v47;
      uint64_t v28 = v24;
      id v29 = v24;
      swift_retain();
      v27(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_10063FE00, &v34, v41);
      if (v5)
      {
        swift_release();

        swift_release();
        return swift_release();
      }
      uint64_t v10 = v40;
      goto LABEL_7;
    }
    id v30 = v24;
    swift_retain();
    uint64_t result = v46;
    id v43 = v24;
    if (v42) {
      break;
    }
LABEL_28:
    if (result < -1) {
      goto LABEL_48;
    }
    if ((unint64_t)(result + 1) >= 3)
    {
      uint64_t v31 = (unint64_t)result >> 1;
      goto LABEL_36;
    }
LABEL_40:
    uint64_t result = swift_weakLoadStrong();
    uint64_t v28 = v43;
    if (!result) {
      goto LABEL_53;
    }
    uint64_t v33 = __chkstk_darwin(result);
    uint64_t v35 = v25;
    uint64_t v36 = v6;
    id v37 = v30;
    uint64_t v38 = v51;
    uint64_t v39 = v52;
    (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(*(void *)v33 + 432))(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_10063FDD4);
    if (v5)
    {
      swift_release();
LABEL_43:

      swift_release();
      return swift_release();
    }
LABEL_7:
    swift_release();

    uint64_t result = swift_release();
    unint64_t v14 = v49;
    int64_t v16 = v50;
  }
  if (v46)
  {
    uint64_t result = (uint64_t)sub_10063E084();
    goto LABEL_28;
  }
  uint64_t v31 = 0x3FFFFFFFLL;
LABEL_36:
  while (v31)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      goto LABEL_51;
    }
    uint64_t v32 = __chkstk_darwin(result);
    uint64_t v35 = v6;
    uint64_t v36 = v25;
    id v37 = v30;
    uint64_t v38 = v51;
    uint64_t v39 = v52;
    (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(*(void *)v32 + 432))(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_10063FDA8);
    uint64_t result = swift_release();
    if (v5) {
      goto LABEL_43;
    }
    if (!--v31) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

void sub_10063FA68(uint64_t a1, void (*a2)(char *, void, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  swift_retain();
  swift_retain();
  id v10 = a5;
  sub_1005E0FF4(a1, a2, a3, a4, (uint64_t)v10);
}

uint64_t sub_10063FAEC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 32);
  unint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_10070ED94(v12);
    uint64_t result = sub_100929CF0(v11);
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      char v16 = v15;
      uint64_t v30 = a2;
      uint64_t v31 = a3;
      uint64_t v17 = v15 & 1;
      if (v13)
      {
        uint64_t v28 = a4;
        uint64_t v29 = a5;
        uint64_t v18 = result;
        uint64_t v19 = v14;
        sub_1001302C0(result, v14, v15 & 1);
        uint64_t v26 = v18;
        uint64_t v27 = v19;
        do
        {
          uint64_t v20 = v19;
          uint64_t v21 = v18;
          char v22 = v17 & 1;
          uint64_t v18 = sub_100929D94(v18, v19, v17 & 1, v11);
          uint64_t v19 = v23;
          uint64_t v17 = v24 & 1;
          sub_100130288(v21, v20, v22);
          --v13;
        }
        while (v13);
        sub_100130288(v26, v27, v16 & 1);
        a5 = v29;
        a4 = v28;
      }
      else
      {
        uint64_t v18 = result;
        uint64_t v19 = v14;
      }
      uint64_t v25 = sub_100929E7C(v18, v19, v17, v11);
      sub_100130288(v18, v19, v17);
      swift_bridgeObjectRelease();
      return sub_10063EF80(v30, v25, v31, a4, a5);
    }
  }
  return result;
}

uint64_t sub_10063FC74(uint64_t a1, uint64_t a2, void *a3, void (*a4)(char *, void, id), uint64_t a5)
{
  uint64_t v10 = *(void *)(a2 + 48);
  if (*(unsigned char *)(a2 + 56) == 1)
  {
    if (v10) {
      uint64_t v10 = (uint64_t)sub_10063E084();
    }
    else {
      uint64_t v10 = 0x7FFFFFFFLL;
    }
  }
  if (v10 >= 0) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  uint64_t v12 = v11 >> 1;
  swift_retain();
  id v13 = a3;
  swift_retain();
  sub_1005E0B9C(v12, a1, (uint64_t *)a2, v13, a4, a5);
  return swift_release();
}

uint64_t sub_10063FD34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FSSnapshotChecker()
{
  return self;
}

uint64_t sub_10063FDA8()
{
  return sub_10063FE2C((uint64_t (*)(void, void, void, void, void))sub_10063FAEC);
}

uint64_t sub_10063FDD4()
{
  return sub_10063FE2C((uint64_t (*)(void, void, void, void, void))sub_10063FC74);
}

uint64_t sub_10063FE00()
{
  return sub_10063FE2C((uint64_t (*)(void, void, void, void, void))sub_10063FA68);
}

uint64_t sub_10063FE2C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10063FE58(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10096B480();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002B7CC(&qword_100ACCB10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v45 - v12;
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = (void *)swift_retain();
  if (objc_sync_enter(v15)) {
    goto LABEL_32;
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_33;
  }
  swift_release();
  swift_release();
  uint64_t v53 = v14;
  long long v54 = 0u;
  long long v55 = 0u;
  uint64_t v16 = fpfs_openfdbyhandle();
  if ((v16 & 0x80000000) == 0)
  {
    sub_100595FB8(v16);
    return 1;
  }
  uint64_t v47 = v5;
  int v18 = sub_10096B4D0();
  sub_1005970E0(v18, 0, 0, 0xAu);
  swift_willThrow();
  swift_errorRetain();
  LODWORD(v53) = sub_10096A6F0();
  sub_100045CB4();
  sub_10096AA60();
  swift_errorRelease();
  swift_errorRetain();
  LODWORD(v53) = sub_10096A6A0();
  char v19 = sub_10096AA60();
  swift_errorRelease();
  if ((v19 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v20 = *(void *)a1;
  int v21 = *(unsigned __int8 *)(a1 + 8);
  sub_10002B70C(a1, (uint64_t)v13, &qword_100ACCB10);
  if (v21 == 2 && !v20)
  {
    sub_10002B770((uint64_t)v13, &qword_100ACCB10);
    goto LABEL_11;
  }
  uint64_t v22 = *(void *)v13;
  unsigned int v23 = v13[8];
  sub_10002B770((uint64_t)v13, &qword_100ACCB10);
  if (v23 >= 2 && v22)
  {
LABEL_11:
    id v24 = (id)fpfs_current_or_default_log();
    sub_10096B490();
    sub_10002B70C(a1, (uint64_t)v11, &qword_100ACCB10);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v25 = sub_10096B470();
    os_log_type_t v26 = sub_10096C5B0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      int64_t v45 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v53 = v46;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v28 = sub_1004AD7A8();
      uint64_t v50 = sub_100719D44(v28, v29, &v53);
      sub_10096C8C0();
      swift_bridgeObjectRelease();
      sub_10002B770((uint64_t)v11, &qword_100ACCB10);
      *(_WORD *)(v27 + 12) = 2112;
      swift_getErrorValue();
      id v30 = Error.prettyDescription.getter(v52);
      uint64_t v50 = (uint64_t)v30;
      sub_10096C8C0();
      *int64_t v45 = v30;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Error trying to access(%s): %@", (uint8_t *)v27, 0x16u);
      sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10002B770((uint64_t)v11, &qword_100ACCB10);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v4);
    return 0;
  }
  swift_errorRelease();
  uint64_t v31 = *(void *)(a1 + 16);
  int v32 = *(unsigned __int8 *)(a1 + 24);
  if (v32 == 1) {
    goto LABEL_27;
  }
  if (v32 != 2)
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
    return result;
  }
  uint64_t v33 = (void *)swift_retain();
  int v34 = objc_sync_enter(v33);
  if (!v31)
  {
    if (v34) {
      goto LABEL_32;
    }
    uint64_t v37 = a2[20];
    swift_retain();
    if (objc_sync_exit(a2)) {
      goto LABEL_33;
    }
    swift_release();
    uint64_t v31 = *(void *)(v37 + 24);
    swift_release();
    goto LABEL_27;
  }
  if (v34) {
    goto LABEL_32;
  }
  uint64_t v35 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_33;
  }
  swift_release();
  uint64_t v31 = *(void *)(v35 + 40);
  char v36 = *(unsigned char *)(v35 + 48);
  swift_release();
  if ((v36 & 1) == 0)
  {
LABEL_27:
    uint64_t v38 = (void *)swift_retain();
    if (!objc_sync_enter(v38))
    {
      swift_retain();
      if (!objc_sync_exit(a2))
      {
        swift_release();
        swift_release();
        uint64_t v53 = v31;
        long long v54 = 0u;
        long long v55 = 0u;
        uint64_t v39 = fpfs_openfdbyhandle();
        if ((v39 & 0x80000000) == 0)
        {
          uint64_t v40 = v39;
          uint64_t v41 = *(void *)(a1 + 136);
          uint64_t v53 = *(void *)(a1 + 128);
          *(void *)&long long v54 = v41;
          uint64_t v50 = 47;
          unint64_t v51 = 0xE100000000000000;
          uint64_t v48 = 58;
          unint64_t v49 = 0xE100000000000000;
          sub_10001F9C0();
          sub_10096C910();
          uint64_t v42 = sub_10096BCF0();
          swift_bridgeObjectRelease();
          int v43 = faccessat(v40, (const char *)(v42 + 32), 0, 32);
          swift_release();
          sub_100595FB8(v40);
          return v43 == 0;
        }
        int v44 = sub_10096B4D0();
        sub_1005970E0(v44, 0, 0, 0xAu);
        swift_willThrow();
        swift_errorRetain();
        LODWORD(v53) = sub_10096A6F0();
        sub_10096AA60();
        swift_errorRelease();
        swift_errorRelease();
        return 0;
      }
LABEL_33:
      sub_1007130F8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 318, (uint64_t)a2);
    }
LABEL_32:
    sub_1007130E4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/utilities/Utilities.swift", 103, 2, 314, (uint64_t)a2);
  }
  return 0;
}

uint64_t sub_1006405F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100640628(void *a1)
{
  return sub_10063DEC4(a1, *(void *)(v1 + 16));
}

uint64_t sub_100640630()
{
  return swift_deallocObject();
}

uint64_t sub_100640640()
{
  return sub_10063EBA0(v0[2], v0[3], v0[4]);
}

void *sub_100640660@<X0>(uint64_t a1@<X8>)
{
  return sub_10063E1A4(a1);
}

uint64_t sub_10064067C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10096B480();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v29 - v8;
  if ((*(unsigned char *)(v0 + 33) & 1) == 0)
  {
    id v10 = [self defaultManager];
    uint64_t v12 = *(void **)(v1 + 16);
    uint64_t v11 = *(void *)(v1 + 24);
    NSString v13 = sub_10096BC00();
    id v31 = 0;
    unsigned int v14 = [v10 createDirectoryAtPath:v13 withIntermediateDirectories:1 attributes:0 error:&v31];

    id v15 = v31;
    if (v14)
    {
      id v31 = v12;
      uint64_t v32 = v11;
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = 97;
      v34._object = (void *)0xE100000000000000;
      sub_10096BDC0(v34);
      sub_10096BCF0();
      id v16 = v15;
      swift_bridgeObjectRelease();
      fpfs_removeat();
      swift_release();
      id v31 = v12;
      uint64_t v32 = v11;
      swift_bridgeObjectRetain();
      v35._uint64_t countAndFlagsBits = 98;
      v35._object = (void *)0xE100000000000000;
      sub_10096BDC0(v35);
      sub_10096BCF0();
      swift_bridgeObjectRelease();
      fpfs_removeat();
      swift_release();
      id v31 = v12;
      uint64_t v32 = v11;
      swift_bridgeObjectRetain();
      v36._uint64_t countAndFlagsBits = 97;
      v36._object = (void *)0xE100000000000000;
      sub_10096BDC0(v36);
      sub_10096BCF0();
      swift_bridgeObjectRelease();
      int v17 = sub_10096B4C0();
      uint64_t result = swift_release();
      if ((v17 & 0x80000000) == 0)
      {
        fpfs_track_document();
        uint64_t result = close(v17);
      }
      *(unsigned char *)(v1 + 33) = 1;
      if (*(unsigned char *)(v1 + 34) == 1)
      {
        id v18 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        char v19 = sub_10096B470();
        os_log_type_t v20 = sub_10096C5D0();
        if (os_log_type_enabled(v19, v20))
        {
          int v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "💀 tombstone slayer setup succeeded after previous failure", v21, 2u);
          swift_slowDealloc();
        }

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
        *(unsigned char *)(v1 + 34) = 0;
      }
    }
    else
    {
      id v22 = v31;
      sub_10096ABF0();

      swift_willThrow();
      if (*(unsigned char *)(v1 + 34))
      {
        return swift_errorRelease();
      }
      else
      {
        id v23 = (id)fpfs_current_or_default_log();
        sub_10096B490();
        swift_errorRetain();
        id v24 = sub_10096B470();
        os_log_type_t v25 = sub_10096C5C0();
        if (os_log_type_enabled(v24, v25))
        {
          os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = (void *)swift_slowAlloc();
          uint64_t v30 = v3;
          *(_DWORD *)os_log_type_t v26 = 138412290;
          unint64_t v29 = v26 + 4;
          swift_getErrorValue();
          id v28 = Error.prettyDescription.getter(v33);
          id v31 = v28;
          uint64_t v3 = v30;
          sub_10096C8C0();
          *uint64_t v27 = v28;
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "💀 cannot setup tombstone slayer: %@", v26, 0xCu);
          sub_10002B7CC((uint64_t *)&unk_100ACCBC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        *(unsigned char *)(v1 + 34) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_100640B50()
{
  swift_bridgeObjectRetain();
  v2._uint64_t countAndFlagsBits = 97;
  v2._object = (void *)0xE100000000000000;
  sub_10096BDC0(v2);
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  fpfs_removeat();
  swift_release();
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = 98;
  v3._object = (void *)0xE100000000000000;
  sub_10096BDC0(v3);
  sub_10096BCF0();
  swift_bridgeObjectRelease();
  fpfs_removeat();
  swift_release();
  sub_10096BCF0();
  fpfs_removeat();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100640C3C()
{
  sub_100640B50();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DocumentTrackingTombstoneSlayer()
{
  return self;
}

uint64_t sub_100640C94()
{
  uint64_t v1 = sub_10096B480();
  uint64_t v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  sub_10064067C();
  uint64_t result = sub_10084B138((void *(*)(void *__return_ptr, uint64_t))sub_100641140);
  *(unsigned char *)(v0 + 32) = (*(unsigned char *)(v0 + 32) & 1) == 0;
  return result;
}

uint64_t sub_100641004@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = 97;
  }
  else
  {
    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = 98;
  }
  v4._object = (void *)0xE100000000000000;
  sub_10096BDC0(v4);
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 98;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 97;
  }
  v5._object = (void *)0xE100000000000000;
  sub_10096BDC0(v5);
  uint64_t v6 = sub_10096BCF0();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10096BCF0();
  swift_bridgeObjectRelease();
  int v8 = renameatx_np(-2, (const char *)(v6 + 32), -2, (const char *)(v7 + 32), 4u);
  swift_release();
  uint64_t result = swift_release();
  *a2 = v8;
  return result;
}

uint64_t sub_100641140@<X0>(int *a1@<X8>)
{
  return sub_100641004(v1, a1);
}

uint64_t sub_10064115C()
{
  uint64_t result = type metadata accessor for SnapshotItem();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    unsigned int v14 = &v13;
    uint64_t v8 = v2;
    uint64_t v9 = v2;
    id v10 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v11 = &unk_100988478;
    swift_getTupleTypeLayout();
    id v15 = &v12;
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      id v16 = &v7;
      swift_getTupleTypeLayout2();
      int v17 = &v6;
      swift_getTupleTypeLayout3();
      id v18 = &v5;
      swift_getTupleTypeLayout2();
      char v19 = &v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_10064131C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v354 = *(void *)(AssociatedTypeWitness - 8);
  int v356 = *(_DWORD *)(v354 + 80);
  uint64_t v3 = v356;
  uint64_t v347 = v2 + v356;
  uint64_t v349 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v349 - 8);
  uint64_t v352 = v4;
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v351 = swift_getAssociatedTypeWitness();
  uint64_t v353 = *(void *)(v351 - 8);
  int v6 = *(_DWORD *)(v353 + 80);
  uint64_t v7 = v5 & 0xF8 | v6 | 7u;
  uint64_t v345 = v2 + v7;
  uint64_t v346 = *(void *)(v4 + 64) + 7;
  uint64_t v348 = v6 + 8;
  uint64_t v350 = *(void *)(v353 + 64) + 7;
  unint64_t v8 = ((((v350 + ((v348 + (v346 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v9 = sub_10096B0E0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v13 = *(void *)(v10 + 64);
  }
  else {
    size_t v13 = v12 + 1;
  }
  unint64_t v14 = ((((((v11 | 7) + 16 + ((v2 + v7 + (v347 & ~(unint64_t)v356)) & ~v7) + v8) & ~(v11 | 7))
         + ((((((((((v13
                   + 7
                   + ((v11
                     + 10
                     + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 23;
  unint64_t v16 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = v14 + 16;
  unint64_t v18 = v7 | v356 | v11;
  unint64_t v19 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v19 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v16) {
    unint64_t v16 = v19;
  }
  if (v16 <= ((((v15 + ((v17 + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = ((((v15 + ((v17 + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v20 = v16;
  }
  if (v18 != 7 || ((v5 | v356 | v6 | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || (v20 | 1) > 0x18)
  {
    uint64_t v59 = *a2;
    *a1 = *a2;
    a1 = (void *)(v59 + ((v18 + 16) & ~v18));
    swift_retain();
  }
  else
  {
    unint64_t v357 = ((((v350
             + ((v6 + 8 + (v346 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unsigned int v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 >= 6 && v20 != 0) {
      unsigned int v21 = *(_DWORD *)a2 + 6;
    }
    unint64_t v343 = v17;
    uint64_t v23 = ~v3;
    switch(v21)
    {
      case 1u:
        size_t __na = v13;
        size_t v336 = v13 + 7;
        unint64_t v340 = ((((((((((v13
                       + 7
                       + ((v11
                         + 10
                         + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                     + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        uint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v354 + 16);
        uint64_t v338 = v9;
        uint64_t v342 = *(void *)(v9 - 8);
        uint64_t v332 = ~v11;
        unint64_t v334 = v11 + 10;
        unint64_t v328 = v11 + 12;
        uint64_t v330 = v12 + v11;
        uint64_t v324 = ~(v11 | 7);
        uint64_t v326 = (v11 | 7) + 16;
        unint64_t v322 = ~(unint64_t)v6;
        uint64_t v344 = *(void *)(v10 + 64);
        v60((unint64_t)a1, (unint64_t)a2, AssociatedTypeWitness);
        unint64_t v61 = ((unint64_t)a1 + v347) & v23;
        uint64_t v315 = v23;
        unint64_t v62 = ((unint64_t)a2 + v347) & v23;
        uint64_t v312 = v60;
        v60(v61, v62, AssociatedTypeWitness);
        unint64_t v63 = (v61 + v2 + v7) & ~v7;
        uint64_t v313 = ~v7;
        unint64_t v64 = (v62 + v2 + v7) & ~v7;
        unint64_t v310 = *(void (**)(unint64_t, unint64_t, uint64_t))(v352 + 16);
        v310(v63, v64, v349);
        id v65 = (void *)((v346 + v63) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v66 = (void *)((v346 + v64) & 0xFFFFFFFFFFFFFFF8);
        *id v65 = *v66;
        unint64_t v67 = ((unint64_t)v65 + v348) & v322;
        unint64_t v68 = ((unint64_t)v66 + v348) & v322;
        uint64_t v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v353 + 16);
        swift_bridgeObjectRetain();
        unint64_t v311 = v69;
        v69(v67, v68, v351);
        uint64_t v70 = (void *)((v350 + v68) & 0xFFFFFFFFFFFFFFF8);
        id v71 = (void *)((v350 + v67) & 0xFFFFFFFFFFFFFFF8);
        *id v71 = *v70;
        id v72 = (void *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v73 = (void *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v72 = *v73;
        v72[1] = v73[1];
        id v74 = (void *)(v8 + v63);
        *id v74 = *(void *)(v8 + v64);
        v74[1] = *(void *)(v8 + v64 + 8);
        unint64_t v75 = (v326 + v8 + v63) & v324;
        unint64_t v76 = (v326 + v8 + v64) & v324;
        *(unsigned char *)unint64_t v75 = *(unsigned char *)v76;
        uint64_t v77 = v75 | 4;
        int v78 = *(_DWORD *)(v76 | 4);
        *(unsigned char *)(v77 + 4) = *(unsigned char *)((v76 | 4) + 4);
        *(_DWORD *)uint64_t v77 = v78;
        *(_WORD *)(v75 + 10) = *(_WORD *)(v76 + 0xA);
        unint64_t v307 = v75;
        unint64_t v308 = v76;
        unint64_t v79 = (v328 + v75) & v332;
        unint64_t v80 = (v328 + v76) & v332;
        uint64_t v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v342 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81(v79, v80, v338);
        unint64_t v82 = (v330 + v79) & v332;
        unint64_t v83 = (v330 + v80) & v332;
        v81(v82, v83, v338);
        uint64_t v84 = (unsigned char *)(v82 + v12);
        *uint64_t v84 = *(unsigned char *)(v83 + v12);
        v84[1] = *(unsigned char *)(v83 + v12 + 1);
        v84[2] = *(unsigned char *)(v83 + v12 + 2);
        v84[3] = *(unsigned char *)(v83 + v12 + 3);
        v84[4] = *(unsigned char *)(v83 + v12 + 4);
        unint64_t v85 = (v82 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v86 = (v83 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v85 = *(void *)v86;
        *(void *)(v85 + 8) = *(void *)(v86 + 8);
        *(unsigned char *)(v85 + 16) = *(unsigned char *)(v86 + 16);
        *(unsigned char *)(v85 + 17) = *(unsigned char *)(v86 + 17);
        *(unsigned char *)(v85 + 18) = *(unsigned char *)(v86 + 18);
        *(unsigned char *)(v85 + 19) = *(unsigned char *)(v86 + 19);
        unint64_t v87 = (v85 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v88 = (v86 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v87 = *(void *)v88;
        *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
        *(unsigned char *)(v87 + 9) = *(unsigned char *)(v88 + 9);
        *(unsigned char *)(v87 + 10) = *(unsigned char *)(v88 + 10);
        *(unsigned char *)(v87 + 11) = *(unsigned char *)(v88 + 11);
        *(unsigned char *)(v87 + 12) = *(unsigned char *)(v88 + 12);
        unint64_t v89 = (void *)((v86 + 47) & 0xFFFFFFFFFFFFFFF8);
        id v90 = (void *)((v85 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v90 = *v89;
        unint64_t v91 = ((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v92 = ((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v91 = *(void *)v92;
        *(unsigned char *)(v91 + 8) = *(unsigned char *)(v92 + 8);
        *(unsigned char *)(v91 + 9) = *(unsigned char *)(v92 + 9);
        id v93 = (void *)((v334 + v91) & v332);
        id v94 = (const void *)((v334 + v92) & v332);
        id v95 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v342 + 48);
        swift_bridgeObjectRetain();
        long long v309 = v95;
        unint64_t v316 = v15;
        unint64_t v320 = v20;
        unint64_t v314 = v81;
        if (v95(v94, 1, v338))
        {
          memcpy(v93, v94, __na);
        }
        else
        {
          v81((unint64_t)v93, (unint64_t)v94, v338);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v342 + 56))(v93, 0, 1, v338);
        }
        id v117 = (void *)(((unint64_t)v93 + v336) & 0xFFFFFFFFFFFFFFF8);
        id v118 = (void *)(((unint64_t)v94 + v336) & 0xFFFFFFFFFFFFFFF8);
        *id v117 = *v118;
        unint64_t v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v120 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v121 = *(void *)v120;
        *(unsigned char *)(v119 + 8) = *(unsigned char *)(v120 + 8);
        *(void *)unint64_t v119 = v121;
        id v122 = (void *)(((unint64_t)v117 + 31) & 0xFFFFFFFFFFFFFFF8);
        id v123 = (void *)(((unint64_t)v118 + 31) & 0xFFFFFFFFFFFFFFF8);
        *id v122 = *v123;
        unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v125 = (uint64_t *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v126 = v125[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v127 = a2;
        if ((v126 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v124 = *(_OWORD *)v125;
        }
        else
        {
          uint64_t v155 = *v125;
          sub_10001EBB0(*v125, v126);
          *(void *)unint64_t v124 = v155;
          *(void *)(v124 + 8) = v126;
        }
        uint64_t v156 = v315;
        unint64_t v157 = (v124 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v158 = ((unint64_t)v125 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v159 = *(void *)v158;
        *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
        *(void *)unint64_t v157 = v159;
        *(unsigned char *)(v157 + 9) = *(unsigned char *)(v158 + 9);
        unint64_t v160 = (v157 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v161 = (v158 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v162 = *(_DWORD *)v161;
        *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
        *(_DWORD *)unint64_t v160 = v162;
        unint64_t v163 = (void *)((v157 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v164 = (void *)((v158 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v163 = *v164;
        v163[1] = v164[1];
        unint64_t v165 = v340 + v307;
        unint64_t v166 = (long long *)(v340 + v308);
        unint64_t v167 = *(void *)(v340 + v308 + 16);
        if (v167 >= 0xFFFFFFFF) {
          LODWORD(v167) = -1;
        }
        int v168 = v167 - 1;
        swift_bridgeObjectRetain();
        if (v168 < 0)
        {
          *(void *)unint64_t v165 = *(void *)v166;
          *(unsigned char *)(v165 + 8) = *((unsigned char *)v166 + 8);
          *(unsigned char *)(v165 + 9) = *((unsigned char *)v166 + 9);
          uint64_t v185 = *((void *)v166 + 2);
          swift_errorRetain();
          *(void *)(v165 + 16) = v185;
          uint64_t v186 = *((void *)v166 + 3);
          swift_errorRetain();
          *(void *)(v165 + 24) = v186;
          *(unsigned char *)(v165 + 32) = *((unsigned char *)v166 + 32);
          *(unsigned char *)(v165 + 33) = *((unsigned char *)v166 + 33);
          *(unsigned char *)(v165 + 34) = *((unsigned char *)v166 + 34);
          *(void *)(v165 + 40) = *((void *)v166 + 5);
          *(void *)(v165 + 48) = *((void *)v166 + 6);
          *(void *)(v165 + 56) = *((void *)v166 + 7);
          *(void *)(v165 + 64) = *((void *)v166 + 8);
          *(unsigned char *)(v165 + 72) = *((unsigned char *)v166 + 72);
          *(void *)(v165 + 80) = *((void *)v166 + 10);
          *(void *)(v165 + 88) = *((void *)v166 + 11);
          unint64_t v187 = (void *)*((void *)v166 + 12);
          *(void *)(v165 + 96) = v187;
          *(unsigned char *)(v165 + 104) = *((unsigned char *)v166 + 104);
          *(unsigned char *)(v165 + 105) = *((unsigned char *)v166 + 105);
          *(void *)(v165 + 112) = *((void *)v166 + 14);
          *(void *)(v165 + 120) = *((void *)v166 + 15);
          *(void *)(v165 + 128) = *((void *)v166 + 16);
          *(void *)(v165 + 136) = *((void *)v166 + 17);
          *(void *)(v165 + 144) = *((void *)v166 + 18);
          *(void *)(v165 + 152) = *((void *)v166 + 19);
          *(void *)(v165 + 160) = *((void *)v166 + 20);
          *(void *)(v165 + 168) = *((void *)v166 + 21);
          *(unsigned char *)(v165 + 176) = *((unsigned char *)v166 + 176);
          *(void *)(v165 + 184) = *((void *)v166 + 23);
          uint64_t v188 = *((void *)v166 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v189 = v187;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v188)
          {
            *(void *)(v165 + 192) = v188;
            *(void *)(v165 + 200) = *((void *)v166 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v165 + 192) = v166[12];
          }
          uint64_t v156 = v315;
          id v127 = a2;
          *(void *)(v165 + 208) = *((void *)v166 + 26);
          *(void *)(v165 + 216) = *((void *)v166 + 27);
          *(void *)(v165 + 224) = *((void *)v166 + 28);
          *(void *)(v165 + 232) = *((void *)v166 + 29);
          *(void *)(v165 + 240) = *((void *)v166 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v169 = *v166;
          long long v170 = v166[1];
          long long v171 = v166[3];
          *(_OWORD *)(v165 + 32) = v166[2];
          *(_OWORD *)(v165 + 48) = v171;
          *(_OWORD *)unint64_t v165 = v169;
          *(_OWORD *)(v165 + 16) = v170;
          long long v172 = v166[4];
          long long v173 = v166[5];
          long long v174 = v166[7];
          *(_OWORD *)(v165 + 96) = v166[6];
          *(_OWORD *)(v165 + 112) = v174;
          *(_OWORD *)(v165 + 64) = v172;
          *(_OWORD *)(v165 + 80) = v173;
          long long v175 = v166[8];
          long long v176 = v166[9];
          long long v177 = v166[11];
          *(_OWORD *)(v165 + 160) = v166[10];
          *(_OWORD *)(v165 + 176) = v177;
          *(_OWORD *)(v165 + 128) = v175;
          *(_OWORD *)(v165 + 144) = v176;
          long long v178 = v166[12];
          long long v179 = v166[13];
          long long v180 = v166[14];
          *(void *)(v165 + 240) = *((void *)v166 + 30);
          *(_OWORD *)(v165 + 208) = v179;
          *(_OWORD *)(v165 + 224) = v180;
          *(_OWORD *)(v165 + 192) = v178;
        }
        long long v204 = (_OWORD *)((v165 + 255) & 0xFFFFFFFFFFFFFFF8);
        int v205 = (long long *)(((unint64_t)v166 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v206 = *v205;
        *(_OWORD *)((char *)v204 + 9) = *(long long *)((char *)v205 + 9);
        *long long v204 = v206;
        unint64_t v207 = (v165 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v208 = ((unint64_t)v166 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v209 = *(_OWORD *)v208;
        *(unsigned char *)(v207 + 16) = *(unsigned char *)(v208 + 16);
        *(_OWORD *)unint64_t v207 = v209;
        unint64_t v210 = (void *)((v165 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v211 = ((unint64_t)v166 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v212 = *(void *)v211;
        v211 += 15;
        *unint64_t v210 = v212;
        unint64_t v213 = (void *)(((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v214 = *(void *)(v211 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v215 = *(void *)((v211 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v214, v215);
        *unint64_t v213 = v214;
        v213[1] = v215;
        unint64_t v216 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v217 = ((unint64_t)v127 + v15) & 0xFFFFFFFFFFFFFFF8;
        v312(v216, v217, AssociatedTypeWitness);
        unint64_t v218 = (v347 + v216) & v156;
        unint64_t v362 = ((unint64_t)v127 + v316) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v219 = (v347 + v217) & v156;
        v312(v218, v219, AssociatedTypeWitness);
        unint64_t v220 = (v345 + v218) & v313;
        unint64_t v221 = (v345 + v219) & v313;
        v310(v220, v221, v349);
        int v222 = (void *)((v346 + v220) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v223 = (void *)((v346 + v221) & 0xFFFFFFFFFFFFFFF8);
        void *v222 = *v223;
        unint64_t v224 = ((unint64_t)v222 + v348) & v322;
        unint64_t v225 = ((unint64_t)v223 + v348) & v322;
        swift_bridgeObjectRetain();
        v311(v224, v225, v351);
        unint64_t v226 = (void *)((v350 + v224) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v227 = (void *)((v350 + v225) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v226 = *v227;
        unint64_t v228 = (void *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = (void *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v228 = *v229;
        v228[1] = v229[1];
        unint64_t v230 = (void *)(v220 + v357);
        *unint64_t v230 = *(void *)(v221 + v357);
        v230[1] = *(void *)(v221 + v357 + 8);
        unint64_t v231 = (v326 + v220 + v357) & v324;
        unint64_t v232 = (v326 + v221 + v357) & v324;
        *(unsigned char *)unint64_t v231 = *(unsigned char *)v232;
        uint64_t v233 = v231 | 4;
        int v234 = *(_DWORD *)(v232 | 4);
        *(unsigned char *)(v233 + 4) = *(unsigned char *)((v232 | 4) + 4);
        *(_DWORD *)uint64_t v233 = v234;
        *(_WORD *)(v231 + 10) = *(_WORD *)(v232 + 0xA);
        unint64_t v235 = (v328 + v231) & v332;
        unint64_t v236 = (v328 + v232) & v332;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v314(v235, v236, v338);
        unint64_t v237 = (v330 + v236) & v332;
        v314((v330 + v235) & v332, v237, v338);
        long long v238 = (unsigned char *)(((v330 + v235) & v332) + v344);
        unsigned char *v238 = *(unsigned char *)(v237 + v344);
        v238[1] = *(unsigned char *)(v237 + v344 + 1);
        v238[2] = *(unsigned char *)(v237 + v344 + 2);
        v238[3] = *(unsigned char *)(v237 + v344 + 3);
        v238[4] = *(unsigned char *)(v237 + v344 + 4);
        unint64_t v239 = (unint64_t)(v238 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v240 = (v237 + v344 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v239 = *(void *)v240;
        *(void *)(v239 + 8) = *(void *)(v240 + 8);
        *(unsigned char *)(v239 + 16) = *(unsigned char *)(v240 + 16);
        *(unsigned char *)(v239 + 17) = *(unsigned char *)(v240 + 17);
        *(unsigned char *)(v239 + 18) = *(unsigned char *)(v240 + 18);
        *(unsigned char *)(v239 + 19) = *(unsigned char *)(v240 + 19);
        unint64_t v241 = (v239 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v242 = (v240 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v241 = *(void *)v242;
        *(unsigned char *)(v241 + 8) = *(unsigned char *)(v242 + 8);
        *(unsigned char *)(v241 + 9) = *(unsigned char *)(v242 + 9);
        *(unsigned char *)(v241 + 10) = *(unsigned char *)(v242 + 10);
        *(unsigned char *)(v241 + 11) = *(unsigned char *)(v242 + 11);
        *(unsigned char *)(v241 + 12) = *(unsigned char *)(v242 + 12);
        unint64_t v243 = (void *)((v239 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v244 = (void *)((v240 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v243 = *v244;
        unint64_t v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v245 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(unsigned char *)(v245 + 9) = *(unsigned char *)(v246 + 9);
        unint64_t v247 = (void *)((v334 + v245) & v332);
        uint64_t v248 = (const void *)((v334 + v246) & v332);
        swift_bridgeObjectRetain();
        if (v309(v248, 1, v338))
        {
          memcpy(v247, v248, __na);
        }
        else
        {
          v314((unint64_t)v247, (unint64_t)v248, v338);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v342 + 56))(v247, 0, 1, v338);
        }
        unint64_t v249 = (void *)(((unint64_t)v247 + v336) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v250 = (void *)(((unint64_t)v248 + v336) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v249 = *v250;
        unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v253 = *(void *)v252;
        *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
        *(void *)unint64_t v251 = v253;
        long long v254 = (void *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v255 = (void *)(((unint64_t)v250 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v254 = *v255;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        long long v257 = (uint64_t *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v258 = v257[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v258 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v256 = *(_OWORD *)v257;
        }
        else
        {
          uint64_t v259 = *v257;
          sub_10001EBB0(*v257, v258);
          *(void *)unint64_t v256 = v259;
          *(void *)(v256 + 8) = v258;
        }
        unint64_t v260 = (v256 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v261 = ((unint64_t)v257 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v262 = *(void *)v261;
        *(unsigned char *)(v260 + 8) = *(unsigned char *)(v261 + 8);
        *(void *)unint64_t v260 = v262;
        *(unsigned char *)(v260 + 9) = *(unsigned char *)(v261 + 9);
        unint64_t v263 = (v260 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v264 = (v261 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v265 = *(_DWORD *)v264;
        *(unsigned char *)(v263 + 4) = *(unsigned char *)(v264 + 4);
        *(_DWORD *)unint64_t v263 = v265;
        long long v266 = (void *)((v260 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v267 = (void *)((v261 + 25) & 0xFFFFFFFFFFFFFFF8);
        *long long v266 = *v267;
        v266[1] = v267[1];
        unint64_t v268 = v231 + v340;
        unint64_t v269 = v232 + v340;
        unint64_t v270 = *(void *)(v232 + v340 + 16);
        if (v270 >= 0xFFFFFFFF) {
          LODWORD(v270) = -1;
        }
        int v271 = v270 - 1;
        swift_bridgeObjectRetain();
        if (v271 < 0)
        {
          *(void *)unint64_t v268 = *(void *)v269;
          *(unsigned char *)(v268 + 8) = *(unsigned char *)(v269 + 8);
          *(unsigned char *)(v268 + 9) = *(unsigned char *)(v269 + 9);
          uint64_t v287 = *(void *)(v269 + 16);
          swift_errorRetain();
          *(void *)(v268 + 16) = v287;
          uint64_t v288 = *(void *)(v269 + 24);
          swift_errorRetain();
          *(void *)(v268 + 24) = v288;
          *(unsigned char *)(v268 + 32) = *(unsigned char *)(v269 + 32);
          *(unsigned char *)(v268 + 33) = *(unsigned char *)(v269 + 33);
          *(unsigned char *)(v268 + 34) = *(unsigned char *)(v269 + 34);
          *(void *)(v268 + 40) = *(void *)(v269 + 40);
          *(void *)(v268 + 48) = *(void *)(v269 + 48);
          *(void *)(v268 + 56) = *(void *)(v269 + 56);
          *(void *)(v268 + 64) = *(void *)(v269 + 64);
          *(unsigned char *)(v268 + 72) = *(unsigned char *)(v269 + 72);
          *(void *)(v268 + 80) = *(void *)(v269 + 80);
          *(void *)(v268 + 88) = *(void *)(v269 + 88);
          unint64_t v360 = *(void **)(v269 + 96);
          *(void *)(v268 + 96) = v360;
          *(unsigned char *)(v268 + 104) = *(unsigned char *)(v269 + 104);
          *(unsigned char *)(v268 + 105) = *(unsigned char *)(v269 + 105);
          *(void *)(v268 + 112) = *(void *)(v269 + 112);
          *(void *)(v268 + 120) = *(void *)(v269 + 120);
          *(void *)(v268 + 128) = *(void *)(v269 + 128);
          *(void *)(v268 + 136) = *(void *)(v269 + 136);
          *(void *)(v268 + 144) = *(void *)(v269 + 144);
          *(void *)(v268 + 152) = *(void *)(v269 + 152);
          *(void *)(v268 + 160) = *(void *)(v269 + 160);
          *(void *)(v268 + 168) = *(void *)(v269 + 168);
          *(unsigned char *)(v268 + 176) = *(unsigned char *)(v269 + 176);
          *(void *)(v268 + 184) = *(void *)(v269 + 184);
          uint64_t v289 = *(void *)(v269 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v290 = v360;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v289)
          {
            *(void *)(v268 + 192) = v289;
            *(void *)(v268 + 200) = *(void *)(v269 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v268 + 192) = *(_OWORD *)(v269 + 192);
          }
          unint64_t v284 = v320;
          unint64_t v285 = v316;
          unint64_t v286 = ((unint64_t)a1 + v316) & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v268 + 208) = *(void *)(v269 + 208);
          *(void *)(v268 + 216) = *(void *)(v269 + 216);
          *(void *)(v268 + 224) = *(void *)(v269 + 224);
          *(void *)(v268 + 232) = *(void *)(v269 + 232);
          *(void *)(v268 + 240) = *(void *)(v269 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v272 = *(_OWORD *)v269;
          long long v273 = *(_OWORD *)(v269 + 16);
          long long v274 = *(_OWORD *)(v269 + 48);
          *(_OWORD *)(v268 + 32) = *(_OWORD *)(v269 + 32);
          *(_OWORD *)(v268 + 48) = v274;
          *(_OWORD *)unint64_t v268 = v272;
          *(_OWORD *)(v268 + 16) = v273;
          long long v275 = *(_OWORD *)(v269 + 64);
          long long v276 = *(_OWORD *)(v269 + 80);
          long long v277 = *(_OWORD *)(v269 + 112);
          *(_OWORD *)(v268 + 96) = *(_OWORD *)(v269 + 96);
          *(_OWORD *)(v268 + 112) = v277;
          *(_OWORD *)(v268 + 64) = v275;
          *(_OWORD *)(v268 + 80) = v276;
          long long v278 = *(_OWORD *)(v269 + 128);
          long long v279 = *(_OWORD *)(v269 + 144);
          long long v280 = *(_OWORD *)(v269 + 176);
          *(_OWORD *)(v268 + 160) = *(_OWORD *)(v269 + 160);
          *(_OWORD *)(v268 + 176) = v280;
          *(_OWORD *)(v268 + 128) = v278;
          *(_OWORD *)(v268 + 144) = v279;
          long long v281 = *(_OWORD *)(v269 + 192);
          long long v282 = *(_OWORD *)(v269 + 208);
          long long v283 = *(_OWORD *)(v269 + 224);
          *(void *)(v268 + 240) = *(void *)(v269 + 240);
          *(_OWORD *)(v268 + 208) = v282;
          *(_OWORD *)(v268 + 224) = v283;
          *(_OWORD *)(v268 + 192) = v281;
          unint64_t v284 = v320;
          unint64_t v285 = v316;
          unint64_t v286 = ((unint64_t)a1 + v316) & 0xFFFFFFFFFFFFFFF8;
        }
        long long v291 = (_OWORD *)((v268 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v292 = (long long *)((v269 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v293 = *v292;
        *(_OWORD *)((char *)v291 + 9) = *(long long *)((char *)v292 + 9);
        _OWORD *v291 = v293;
        unint64_t v294 = (v268 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v295 = (v269 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v296 = *(_OWORD *)v295;
        *(unsigned char *)(v294 + 16) = *(unsigned char *)(v295 + 16);
        *(_OWORD *)unint64_t v294 = v296;
        long long v297 = (void *)((v268 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v298 = (v269 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v299 = *(void *)v298;
        v298 += 15;
        *long long v297 = v299;
        unint64_t v300 = (void *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v301 = *(void *)(v298 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v302 = *(void *)((v298 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v301, v302);
        *unint64_t v300 = v301;
        v300[1] = v302;
        unint64_t v303 = (void *)((v285 + v362) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v304 = (void *)((v285 + v286) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v304 = *v303;
        long long v305 = (void *)(((unint64_t)v304 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v306 = (void *)(((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v305 = *v306;
        v305[1] = v306[1];
        *((unsigned char *)a1 + v284) = 1;
        break;
      case 2u:
        id v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v354 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v2) = *((unsigned char *)a2 + v2);
        unint64_t v97 = ((unint64_t)a1 + v2) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v98 = ((unint64_t)a2 + v2) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v97 + 8) = *(void *)(v98 + 8);
        *(void *)(v97 + 16) = *(void *)(v98 + 16);
        char v99 = 2;
        goto LABEL_29;
      case 3u:
        id v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v354 + 16))(a1, a2, AssociatedTypeWitness);
        id v100 = (void *)(((unint64_t)a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        id v101 = (void *)(((unint64_t)a2 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        *id v100 = *v101;
        v100[1] = v101[1];
        char v99 = 3;
        goto LABEL_29;
      case 4u:
        id v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v354 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v2) = *((unsigned char *)a2 + v2);
        unint64_t v102 = ((unint64_t)a1 + v2) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v103 = ((unint64_t)a2 + v2) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v102 + 8) = *(void *)(v103 + 8);
        *(void *)(v102 + 16) = *(void *)(v103 + 16);
        char v99 = 4;
        goto LABEL_29;
      case 5u:
        id v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v354 + 16))(a1, a2, AssociatedTypeWitness);
        id v104 = (void *)(((unint64_t)a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        id v105 = (void *)(((unint64_t)a2 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        void *v104 = *v105;
        v104[1] = v105[1];
        char v99 = 5;
LABEL_29:
        *((unsigned char *)v96 + v20) = v99;
        break;
      default:
        size_t __n = v13;
        unint64_t v319 = v20;
        size_t v335 = v13 + 7;
        unint64_t v339 = ((((((((((v13
                       + 7
                       + ((v11
                         + 10
                         + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                     + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        id v24 = *(void (**)(void *, void *, uint64_t))(v354 + 16);
        uint64_t v337 = v9;
        uint64_t v341 = *(void *)(v9 - 8);
        uint64_t v331 = ~v11;
        unint64_t v333 = v11 + 10;
        unint64_t v327 = v11 + 12;
        uint64_t v329 = v12 + v11;
        uint64_t v323 = ~(v11 | 7);
        uint64_t v325 = (v11 | 7) + 16;
        unint64_t v321 = ~(unint64_t)v6;
        v24(a1, a2, AssociatedTypeWitness);
        unint64_t v25 = ((unint64_t)a1 + v347) & v23;
        unint64_t v26 = ((unint64_t)a2 + v347) & v23;
        v24((void *)v25, (void *)v26, AssociatedTypeWitness);
        unint64_t v27 = (v25 + v2 + v7) & ~v7;
        unint64_t v28 = (v26 + v2 + v7) & ~v7;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v352 + 16))(v27, v28, v349);
        unint64_t v29 = (void *)((v346 + v27) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v30 = (void *)((v346 + v28) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v29 = *v30;
        unint64_t v31 = ((unint64_t)v29 + v348) & v321;
        unint64_t v32 = ((unint64_t)v30 + v348) & v321;
        uint64_t v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v353 + 16);
        swift_bridgeObjectRetain();
        v33(v31, v32, v351);
        Swift::String v34 = (void *)((v350 + v32) & 0xFFFFFFFFFFFFFFF8);
        Swift::String v35 = (void *)((v350 + v31) & 0xFFFFFFFFFFFFFFF8);
        *Swift::String v35 = *v34;
        Swift::String v36 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v37 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v36 = *v37;
        v36[1] = v37[1];
        uint64_t v38 = (void *)(v357 + v27);
        void *v38 = *(void *)(v357 + v28);
        v38[1] = *(void *)(v357 + v28 + 8);
        unint64_t v39 = (v325 + v357 + v27) & v323;
        unint64_t v40 = (v325 + v357 + v28) & v323;
        *(unsigned char *)unint64_t v39 = *(unsigned char *)v40;
        uint64_t v41 = v39 | 4;
        int v42 = *(_DWORD *)(v40 | 4);
        *(unsigned char *)(v41 + 4) = *(unsigned char *)((v40 | 4) + 4);
        *(_DWORD *)uint64_t v41 = v42;
        *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
        unint64_t v358 = v39;
        unint64_t v43 = (v327 + v39) & v331;
        unint64_t v44 = (v327 + v40) & v331;
        int64_t v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v341 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45(v43, v44, v337);
        unint64_t v46 = (v329 + v44) & v331;
        v45((v329 + v43) & v331, v46, v337);
        uint64_t v47 = (unsigned char *)(((v329 + v43) & v331) + v12);
        unsigned char *v47 = *(unsigned char *)(v46 + v12);
        v47[1] = *(unsigned char *)(v46 + v12 + 1);
        void v47[2] = *(unsigned char *)(v46 + v12 + 2);
        v47[3] = *(unsigned char *)(v46 + v12 + 3);
        v47[4] = *(unsigned char *)(v46 + v12 + 4);
        unint64_t v48 = (unint64_t)(v47 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v49 = (v46 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v48 = *(void *)v49;
        *(void *)(v48 + 8) = *(void *)(v49 + 8);
        *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
        *(unsigned char *)(v48 + 17) = *(unsigned char *)(v49 + 17);
        *(unsigned char *)(v48 + 18) = *(unsigned char *)(v49 + 18);
        *(unsigned char *)(v48 + 19) = *(unsigned char *)(v49 + 19);
        unint64_t v50 = (v48 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v50 = *(void *)v51;
        *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
        *(unsigned char *)(v50 + 9) = *(unsigned char *)(v51 + 9);
        *(unsigned char *)(v50 + 10) = *(unsigned char *)(v51 + 10);
        *(unsigned char *)(v50 + 11) = *(unsigned char *)(v51 + 11);
        *(unsigned char *)(v50 + 12) = *(unsigned char *)(v51 + 12);
        uint64_t v52 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v53 = (void *)((v48 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v53 = *v52;
        unint64_t v54 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v55 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v54 = *(void *)v55;
        *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
        *(unsigned char *)(v54 + 9) = *(unsigned char *)(v55 + 9);
        uint64_t v56 = (void *)((v333 + v54) & v331);
        char v57 = (const void *)((v333 + v55) & v331);
        uint64_t v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v341 + 48);
        swift_bridgeObjectRetain();
        if (v58(v57, 1, v337))
        {
          memcpy(v56, v57, __n);
        }
        else
        {
          v45((unint64_t)v56, (unint64_t)v57, v337);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v341 + 56))(v56, 0, 1, v337);
        }
        id v107 = (void *)(((unint64_t)v56 + v335) & 0xFFFFFFFFFFFFFFF8);
        id v108 = (void *)(((unint64_t)v57 + v335) & 0xFFFFFFFFFFFFFFF8);
        *id v107 = *v108;
        unint64_t v109 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v110 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v111 = *(void *)v110;
        *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
        *(void *)unint64_t v109 = v111;
        id v112 = (void *)(((unint64_t)v107 + 31) & 0xFFFFFFFFFFFFFFF8);
        id v113 = (void *)(((unint64_t)v108 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v112 = *v113;
        unint64_t v114 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v115 = (uint64_t *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v116 = v115[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v116 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v114 = *(_OWORD *)v115;
        }
        else
        {
          uint64_t v128 = *v115;
          sub_10001EBB0(*v115, v116);
          *(void *)unint64_t v114 = v128;
          *(void *)(v114 + 8) = v116;
        }
        unint64_t v129 = (v114 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v115 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v131 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(void *)unint64_t v129 = v131;
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        unint64_t v132 = (v129 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v133 = (v130 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v134 = *(_DWORD *)v133;
        *(unsigned char *)(v132 + 4) = *(unsigned char *)(v133 + 4);
        *(_DWORD *)unint64_t v132 = v134;
        uint64_t v135 = (void *)((v129 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v136 = (void *)((v130 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v135 = *v136;
        v135[1] = v136[1];
        unint64_t v137 = v339 + v358;
        unint64_t v138 = v339 + v40;
        unint64_t v139 = *(void *)(v138 + 16);
        if (v139 >= 0xFFFFFFFF) {
          LODWORD(v139) = -1;
        }
        int v140 = v139 - 1;
        swift_bridgeObjectRetain();
        unint64_t v141 = a2;
        if (v140 < 0)
        {
          *(void *)unint64_t v137 = *(void *)v138;
          *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
          *(unsigned char *)(v137 + 9) = *(unsigned char *)(v138 + 9);
          uint64_t v181 = *(void *)(v138 + 16);
          swift_errorRetain();
          *(void *)(v137 + 16) = v181;
          uint64_t v182 = *(void *)(v138 + 24);
          swift_errorRetain();
          *(void *)(v137 + 24) = v182;
          *(unsigned char *)(v137 + 32) = *(unsigned char *)(v138 + 32);
          *(unsigned char *)(v137 + 33) = *(unsigned char *)(v138 + 33);
          *(unsigned char *)(v137 + 34) = *(unsigned char *)(v138 + 34);
          *(void *)(v137 + 40) = *(void *)(v138 + 40);
          *(void *)(v137 + 48) = *(void *)(v138 + 48);
          *(void *)(v137 + 56) = *(void *)(v138 + 56);
          *(void *)(v137 + 64) = *(void *)(v138 + 64);
          *(unsigned char *)(v137 + 72) = *(unsigned char *)(v138 + 72);
          *(void *)(v137 + 80) = *(void *)(v138 + 80);
          *(void *)(v137 + 88) = *(void *)(v138 + 88);
          uint64_t v359 = *(void **)(v138 + 96);
          *(void *)(v137 + 96) = v359;
          *(unsigned char *)(v137 + 104) = *(unsigned char *)(v138 + 104);
          *(unsigned char *)(v137 + 105) = *(unsigned char *)(v138 + 105);
          *(void *)(v137 + 112) = *(void *)(v138 + 112);
          *(void *)(v137 + 120) = *(void *)(v138 + 120);
          *(void *)(v137 + 128) = *(void *)(v138 + 128);
          *(void *)(v137 + 136) = *(void *)(v138 + 136);
          *(void *)(v137 + 144) = *(void *)(v138 + 144);
          *(void *)(v137 + 152) = *(void *)(v138 + 152);
          *(void *)(v137 + 160) = *(void *)(v138 + 160);
          *(void *)(v137 + 168) = *(void *)(v138 + 168);
          *(unsigned char *)(v137 + 176) = *(unsigned char *)(v138 + 176);
          *(void *)(v137 + 184) = *(void *)(v138 + 184);
          uint64_t v183 = *(void *)(v138 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v184 = v359;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v183)
          {
            *(void *)(v137 + 192) = v183;
            *(void *)(v137 + 200) = *(void *)(v138 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v137 + 192) = *(_OWORD *)(v138 + 192);
          }
          unint64_t v154 = v319;
          unint64_t v141 = a2;
          *(void *)(v137 + 208) = *(void *)(v138 + 208);
          *(void *)(v137 + 216) = *(void *)(v138 + 216);
          *(void *)(v137 + 224) = *(void *)(v138 + 224);
          *(void *)(v137 + 232) = *(void *)(v138 + 232);
          *(void *)(v137 + 240) = *(void *)(v138 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v142 = *(_OWORD *)v138;
          long long v143 = *(_OWORD *)(v138 + 16);
          long long v144 = *(_OWORD *)(v138 + 48);
          *(_OWORD *)(v137 + 32) = *(_OWORD *)(v138 + 32);
          *(_OWORD *)(v137 + 48) = v144;
          *(_OWORD *)unint64_t v137 = v142;
          *(_OWORD *)(v137 + 16) = v143;
          long long v145 = *(_OWORD *)(v138 + 64);
          long long v146 = *(_OWORD *)(v138 + 80);
          long long v147 = *(_OWORD *)(v138 + 112);
          *(_OWORD *)(v137 + 96) = *(_OWORD *)(v138 + 96);
          *(_OWORD *)(v137 + 112) = v147;
          *(_OWORD *)(v137 + 64) = v145;
          *(_OWORD *)(v137 + 80) = v146;
          long long v148 = *(_OWORD *)(v138 + 128);
          long long v149 = *(_OWORD *)(v138 + 144);
          long long v150 = *(_OWORD *)(v138 + 176);
          *(_OWORD *)(v137 + 160) = *(_OWORD *)(v138 + 160);
          *(_OWORD *)(v137 + 176) = v150;
          *(_OWORD *)(v137 + 128) = v148;
          *(_OWORD *)(v137 + 144) = v149;
          long long v151 = *(_OWORD *)(v138 + 192);
          long long v152 = *(_OWORD *)(v138 + 208);
          long long v153 = *(_OWORD *)(v138 + 224);
          *(void *)(v137 + 240) = *(void *)(v138 + 240);
          *(_OWORD *)(v137 + 208) = v152;
          *(_OWORD *)(v137 + 224) = v153;
          *(_OWORD *)(v137 + 192) = v151;
          unint64_t v154 = v319;
        }
        int v190 = (_OWORD *)((v137 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v191 = (long long *)((v138 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v192 = *v191;
        *(_OWORD *)((char *)v190 + 9) = *(long long *)((char *)v191 + 9);
        *int v190 = v192;
        unint64_t v193 = (v137 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v194 = (v138 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v195 = *(_OWORD *)v194;
        *(unsigned char *)(v193 + 16) = *(unsigned char *)(v194 + 16);
        *(_OWORD *)unint64_t v193 = v195;
        unint64_t v196 = (void *)((v137 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v197 = (v138 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v198 = *(void *)v197;
        v197 += 15;
        *unint64_t v196 = v198;
        long long v199 = (void *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v200 = *(void *)(v197 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v201 = *(void *)((v197 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v200, v201);
        *long long v199 = v200;
        v199[1] = v201;
        unint64_t v202 = (void *)(((unint64_t)a1 + v343 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v203 = (void *)(((unint64_t)v141 + v343 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v202 = *v203;
        v202[1] = v203[1];
        *((unsigned char *)a1 + v154) = 0;
        break;
    }
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100642EC0(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v106 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v106 + 80);
  uint64_t v102 = v2 + v3;
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v103 = v4;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v104 = *(void *)(v7 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v104 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v98 = v2 + v9;
  uint64_t v10 = a1;
  uint64_t v100 = *(void *)(v5 + 64) + 7;
  uint64_t v101 = v8 + 8;
  unint64_t v11 = ((((*(void *)(v104 + 64) + 7 + ((v8 + 8 + (v100 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v99 = sub_10096B0E0();
  uint64_t v12 = *(void *)(v99 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | 7) + 16;
  uint64_t v15 = v13 + 12;
  uint64_t v16 = *(void *)(v12 + 64);
  uint64_t v17 = v16 + v13;
  uint64_t v18 = v16 + 12;
  uint64_t v19 = v13 + 10;
  unint64_t v20 = (v13
       + 10
       + ((((((v16 + 12 + ((v16 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v16;
  }
  uint64_t v21 = v16 + 7;
  unint64_t v22 = ((((((((((v16 + 7 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v23 = (((((v14 + v11 + ((v2 + v9 + ((v2 + v3) & ~v3)) & ~v9)) & ~(v13 | 7)) + v22 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v23 + 23;
  unint64_t v25 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v26 = v23 + 16;
  uint64_t v27 = v9 | v3 | v13;
  unint64_t v28 = v26 + v27;
  unint64_t v29 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v30 = ((((v24 + ((v26 + v27) & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v29 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v29 > v25) {
    unint64_t v25 = v29;
  }
  if (v25 > v30) {
    unint64_t v30 = v25;
  }
  unsigned int v31 = *((unsigned __int8 *)v10 + v30);
  if (v31 >= 6 && v30 != 0) {
    unsigned int v31 = *v10 + 6;
  }
  uint64_t v33 = ~(v13 | 7);
  uint64_t v34 = ~v13;
  uint64_t v35 = ~v27;
  switch(v31)
  {
    case 1u:
      uint64_t v72 = v35;
      unint64_t v76 = v28;
      unint64_t v81 = v22;
      uint64_t v97 = v21;
      uint64_t v73 = *(void *)(v99 - 8);
      uint64_t v47 = *(void (**)(_DWORD *, uint64_t))(v106 + 8);
      uint64_t v95 = v19;
      uint64_t v91 = v17;
      uint64_t v93 = v18;
      uint64_t v87 = v14;
      uint64_t v89 = v15;
      uint64_t v83 = v33;
      uint64_t v85 = v34;
      uint64_t v48 = ~v8;
      v47(v10, AssociatedTypeWitness);
      uint64_t v74 = ~v3;
      unint64_t v49 = ((unint64_t)v10 + v102) & ~v3;
      v47((_DWORD *)v49, AssociatedTypeWitness);
      uint64_t v75 = ~v9;
      unint64_t v50 = (v49 + v2 + v9) & ~v9;
      id v71 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v71(v50, v103);
      swift_bridgeObjectRelease();
      uint64_t v79 = v48;
      uint64_t v77 = v7;
      uint64_t v70 = *(void (**)(unint64_t, uint64_t))(v104 + 8);
      v70((v101 + ((v100 + v50) & 0xFFFFFFFFFFFFFFF8)) & v48, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v51 = (v87 + v11 + v50) & v83;
      uint64_t v52 = *(void (**)(unint64_t, uint64_t))(v73 + 8);
      v52((v89 + v51) & v85, v99);
      unint64_t v53 = (v91 + ((v89 + v51) & v85)) & v85;
      v52(v53, v99);
      swift_bridgeObjectRelease();
      unint64_t v54 = (v95 + ((((((v93 + v53) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v85;
      uint64_t v69 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v73 + 48);
      if (!v69(v54, 1, v99)) {
        v52(v54, v99);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v55 = (uint64_t *)((((((v97 + v54) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v56 = v55[1];
      if ((v56 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v55, v56);
      }
      swift_bridgeObjectRelease();
      unint64_t v57 = v81 + v51;
      LODWORD(v58) = -1;
      if (*(void *)(v57 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v58 = *(void *)(v57 + 16);
      }
      if ((int)v58 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v57 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v57 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v57 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      unint64_t v59 = ((unint64_t)v10 + v76) & v72;
      v47((_DWORD *)v59, AssociatedTypeWitness);
      v47((_DWORD *)((v102 + v59) & v74), AssociatedTypeWitness);
      unint64_t v60 = (v98 + ((v102 + v59) & v74)) & v75;
      v71(v60, v103);
      swift_bridgeObjectRelease();
      v70((v101 + ((v100 + v60) & 0xFFFFFFFFFFFFFFF8)) & v79, v77);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v61 = (v87 + v60 + v11) & v83;
      v52((v89 + v61) & v85, v99);
      unint64_t v62 = (v91 + ((v89 + v61) & v85)) & v85;
      v52(v62, v99);
      swift_bridgeObjectRelease();
      unint64_t v63 = (v95 + ((((((v93 + v62) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v85;
      if (!v69(v63, 1, v99)) {
        v52(v63, v99);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v64 = (uint64_t *)((((((v97 + v63) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v65 = v64[1];
      if ((v65 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v64, v65);
      }
      swift_bridgeObjectRelease();
      unint64_t v66 = v61 + v81;
      LODWORD(v67) = -1;
      if (*(void *)(v66 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v67 = *(void *)(v66 + 16);
      }
      if ((int)v67 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v66 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v66 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v66 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      break;
    case 2u:
    case 4u:
      (*(void (**)(_DWORD *, uint64_t))(v106 + 8))(v10, AssociatedTypeWitness);
      break;
    case 3u:
    case 5u:
      (*(void (**)(_DWORD *, uint64_t))(v106 + 8))(v10, AssociatedTypeWitness);
      break;
    default:
      uint64_t v96 = v21;
      unint64_t v80 = v22;
      Swift::String v36 = *(void (**)(_DWORD *, uint64_t))(v106 + 8);
      uint64_t v94 = v19;
      uint64_t v90 = v17;
      uint64_t v92 = v18;
      uint64_t v86 = v14;
      uint64_t v88 = v15;
      uint64_t v82 = v33;
      uint64_t v84 = v34;
      uint64_t v78 = ~v8;
      v36(v10, AssociatedTypeWitness);
      unint64_t v37 = ((unint64_t)v10 + v102) & ~v3;
      v36((_DWORD *)v37, AssociatedTypeWitness);
      unint64_t v38 = (v37 + v2 + v9) & ~v9;
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v38, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v104 + 8))((v101 + ((v100 + v38) & 0xFFFFFFFFFFFFFFF8)) & v78, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v39 = (v86 + v11 + v38) & v82;
      unint64_t v40 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
      v40((v88 + v39) & v84, v99);
      unint64_t v41 = (v90 + ((v88 + v39) & v84)) & v84;
      v40(v41, v99);
      swift_bridgeObjectRelease();
      unint64_t v42 = (v94 + ((((((v92 + v41) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v84;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v42, 1, v99)) {
        v40(v42, v99);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v43 = (uint64_t *)((((((v96 + v42) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v44 = v43[1];
      if ((v44 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v43, v44);
      }
      swift_bridgeObjectRelease();
      unint64_t v45 = v80 + v39;
      LODWORD(v46) = -1;
      if (*(void *)(v45 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v46 = *(void *)(v45 + 16);
      }
      if ((int)v46 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v45 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v45 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v45 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      break;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100643B5C(uint64_t a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v356 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v356 + 80);
  uint64_t v348 = v3 + v4;
  uint64_t v350 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v350 - 8);
  uint64_t v354 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v352 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v352 - 8);
  uint64_t v8 = v5;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v346 = v3 + v10;
  unint64_t v11 = a2;
  uint64_t v347 = *(void *)(v8 + 64) + 7;
  uint64_t v349 = v9 + 8;
  uint64_t v351 = *(void *)(v7 + 64) + 7;
  unint64_t v353 = ((((v351 + ((v9 + 8 + (v347 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v12 = sub_10096B0E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v16 = v15 + v14;
  if (*(_DWORD *)(v13 + 84)) {
    size_t v17 = *(void *)(v13 + 64);
  }
  else {
    size_t v17 = v15 + 1;
  }
  unint64_t v18 = ((((((v14 | 7) + 16 + v353 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v14 | 7))
         + ((((((((((v17
                   + 7
                   + ((v14
                     + 10
                     + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 23;
  unint64_t v20 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v18 + 16;
  uint64_t v22 = v10 | v4 | v14;
  unint64_t v23 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v23 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v23 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v23 > v20) {
    unint64_t v20 = v23;
  }
  if (v20 <= ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v24 = v20;
  }
  unsigned int v25 = *((unsigned __int8 *)v11 + v24);
  if (v25 >= 6 && v24 != 0) {
    unsigned int v25 = *v11 + 6;
  }
  uint64_t v27 = ~v9;
  switch(v25)
  {
    case 1u:
      uint64_t v311 = ~v22;
      unint64_t v313 = v21 + v22;
      size_t __na = v17;
      size_t v342 = v17 + 7;
      unint64_t v316 = v19;
      unint64_t v344 = ((((((((((v17
                     + 7
                     + ((v14
                       + 10
                       + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v324 = v24;
      uint64_t v317 = v12;
      unint64_t v66 = *(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 16);
      uint64_t v326 = v13;
      uint64_t v340 = v14 + 10;
      uint64_t v334 = ~v14;
      uint64_t v336 = (v14 | 7) + 16;
      uint64_t v338 = v14 + 12;
      uint64_t v330 = ~(v14 | 7);
      uint64_t v332 = *(void *)(v13 + 64);
      uint64_t v328 = ~v9;
      uint64_t v67 = ~v4;
      v66(a1, (unint64_t)v11, AssociatedTypeWitness);
      uint64_t v68 = (v348 + a1) & v67;
      unint64_t v321 = v11;
      unint64_t v69 = ((unint64_t)v11 + v348) & v67;
      uint64_t v312 = v66;
      v66(v68, v69, AssociatedTypeWitness);
      uint64_t v70 = (v68 + v3 + v10) & ~v10;
      uint64_t v314 = ~v10;
      unint64_t v71 = (v69 + v3 + v10) & ~v10;
      long long v309 = *(void (**)(uint64_t, unint64_t, uint64_t))(v354 + 16);
      v309(v70, v71, v350);
      uint64_t v72 = (void *)((v347 + v70) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v73 = (void *)((v347 + v71) & 0xFFFFFFFFFFFFFFF8);
      void *v72 = *v73;
      unint64_t v74 = ((unint64_t)v72 + v349) & v328;
      unint64_t v75 = ((unint64_t)v73 + v349) & v328;
      unint64_t v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      unint64_t v310 = v76;
      v76(v74, v75, v352);
      uint64_t v77 = (void *)((v351 + v75) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v78 = (void *)((v351 + v74) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v78 = *v77;
      uint64_t v79 = (void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v80 = (void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v79 = *v80;
      v79[1] = v80[1];
      unint64_t v81 = (void *)(v353 + v70);
      *unint64_t v81 = *(void *)(v353 + v71);
      v81[1] = *(void *)(v353 + v71 + 8);
      unint64_t v82 = (v336 + v353 + v70) & v330;
      unint64_t v83 = (v336 + v353 + v71) & v330;
      *(unsigned char *)unint64_t v82 = *(unsigned char *)v83;
      uint64_t v84 = v82 | 4;
      int v85 = *(_DWORD *)(v83 | 4);
      *(unsigned char *)(v84 + 4) = *(unsigned char *)((v83 | 4) + 4);
      *(_DWORD *)uint64_t v84 = v85;
      *(_WORD *)(v82 + 10) = *(_WORD *)(v83 + 0xA);
      unint64_t v86 = (v338 + v82) & v334;
      unint64_t v307 = v83;
      unint64_t v87 = (v338 + v83) & v334;
      uint64_t v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v326 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v88(v86, v87, v317);
      unint64_t v89 = (v16 + v87) & v334;
      v88((v16 + v86) & v334, v89, v317);
      uint64_t v90 = (unsigned char *)(((v16 + v86) & v334) + v332);
      unsigned char *v90 = *(unsigned char *)(v89 + v332);
      v90[1] = *(unsigned char *)(v89 + v332 + 1);
      v90[2] = *(unsigned char *)(v89 + v332 + 2);
      v90[3] = *(unsigned char *)(v89 + v332 + 3);
      v90[4] = *(unsigned char *)(v89 + v332 + 4);
      unint64_t v91 = (unint64_t)(v90 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v92 = (v89 + v332 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v91 = *(void *)v92;
      *(void *)(v91 + 8) = *(void *)(v92 + 8);
      *(unsigned char *)(v91 + 16) = *(unsigned char *)(v92 + 16);
      *(unsigned char *)(v91 + 17) = *(unsigned char *)(v92 + 17);
      *(unsigned char *)(v91 + 18) = *(unsigned char *)(v92 + 18);
      *(unsigned char *)(v91 + 19) = *(unsigned char *)(v92 + 19);
      unint64_t v93 = (v91 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v94 = (v92 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v93 = *(void *)v94;
      *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
      *(unsigned char *)(v93 + 9) = *(unsigned char *)(v94 + 9);
      *(unsigned char *)(v93 + 10) = *(unsigned char *)(v94 + 10);
      *(unsigned char *)(v93 + 11) = *(unsigned char *)(v94 + 11);
      *(unsigned char *)(v93 + 12) = *(unsigned char *)(v94 + 12);
      uint64_t v95 = (void *)((v92 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v96 = (void *)((v91 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v96 = *v95;
      unint64_t v97 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v98 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v97 = *(void *)v98;
      *(unsigned char *)(v97 + 8) = *(unsigned char *)(v98 + 8);
      *(unsigned char *)(v97 + 9) = *(unsigned char *)(v98 + 9);
      uint64_t v99 = (void *)((v340 + v97) & v334);
      uint64_t v100 = (const void *)((v340 + v98) & v334);
      uint64_t v101 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v326 + 48);
      swift_bridgeObjectRetain();
      unint64_t v308 = v101;
      uint64_t v315 = v88;
      if (v101(v100, 1, v317))
      {
        memcpy(v99, v100, __na);
      }
      else
      {
        v88((unint64_t)v99, (unint64_t)v100, v317);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v326 + 56))(v99, 0, 1, v317);
      }
      id v122 = (void *)(((unint64_t)v99 + v342) & 0xFFFFFFFFFFFFFFF8);
      id v123 = (void *)(((unint64_t)v100 + v342) & 0xFFFFFFFFFFFFFFF8);
      *id v122 = *v123;
      unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v126 = *(void *)v125;
      *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
      *(void *)unint64_t v124 = v126;
      id v127 = (void *)(((unint64_t)v122 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (void *)(((unint64_t)v123 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v127 = *v128;
      unint64_t v129 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v130 = (uint64_t *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v131 = v130[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v131 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v129 = *(_OWORD *)v130;
      }
      else
      {
        uint64_t v158 = *v130;
        sub_10001EBB0(*v130, v131);
        *(void *)unint64_t v129 = v158;
        *(void *)(v129 + 8) = v131;
      }
      unint64_t v159 = (v129 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v161 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(void *)unint64_t v159 = v161;
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      unint64_t v162 = (v159 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v163 = (v160 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v164 = *(_DWORD *)v163;
      *(unsigned char *)(v162 + 4) = *(unsigned char *)(v163 + 4);
      *(_DWORD *)unint64_t v162 = v164;
      unint64_t v165 = (void *)((v159 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v166 = (void *)((v160 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v165 = *v166;
      v165[1] = v166[1];
      unint64_t v167 = v344 + v82;
      int v168 = (long long *)(v344 + v307);
      unint64_t v169 = *(void *)(v344 + v307 + 16);
      if (v169 >= 0xFFFFFFFF) {
        LODWORD(v169) = -1;
      }
      int v170 = v169 - 1;
      swift_bridgeObjectRetain();
      if (v170 < 0)
      {
        *(void *)unint64_t v167 = *(void *)v168;
        *(unsigned char *)(v167 + 8) = *((unsigned char *)v168 + 8);
        *(unsigned char *)(v167 + 9) = *((unsigned char *)v168 + 9);
        uint64_t v188 = *((void *)v168 + 2);
        swift_errorRetain();
        *(void *)(v167 + 16) = v188;
        uint64_t v189 = *((void *)v168 + 3);
        swift_errorRetain();
        *(void *)(v167 + 24) = v189;
        *(unsigned char *)(v167 + 32) = *((unsigned char *)v168 + 32);
        *(unsigned char *)(v167 + 33) = *((unsigned char *)v168 + 33);
        *(unsigned char *)(v167 + 34) = *((unsigned char *)v168 + 34);
        *(void *)(v167 + 40) = *((void *)v168 + 5);
        *(void *)(v167 + 48) = *((void *)v168 + 6);
        *(void *)(v167 + 56) = *((void *)v168 + 7);
        *(void *)(v167 + 64) = *((void *)v168 + 8);
        *(unsigned char *)(v167 + 72) = *((unsigned char *)v168 + 72);
        *(void *)(v167 + 80) = *((void *)v168 + 10);
        *(void *)(v167 + 88) = *((void *)v168 + 11);
        int v190 = (void *)*((void *)v168 + 12);
        *(void *)(v167 + 96) = v190;
        *(unsigned char *)(v167 + 104) = *((unsigned char *)v168 + 104);
        *(unsigned char *)(v167 + 105) = *((unsigned char *)v168 + 105);
        *(void *)(v167 + 112) = *((void *)v168 + 14);
        *(void *)(v167 + 120) = *((void *)v168 + 15);
        *(void *)(v167 + 128) = *((void *)v168 + 16);
        *(void *)(v167 + 136) = *((void *)v168 + 17);
        *(void *)(v167 + 144) = *((void *)v168 + 18);
        *(void *)(v167 + 152) = *((void *)v168 + 19);
        *(void *)(v167 + 160) = *((void *)v168 + 20);
        *(void *)(v167 + 168) = *((void *)v168 + 21);
        *(unsigned char *)(v167 + 176) = *((unsigned char *)v168 + 176);
        *(void *)(v167 + 184) = *((void *)v168 + 23);
        uint64_t v191 = *((void *)v168 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v192 = v190;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v191)
        {
          *(void *)(v167 + 192) = v191;
          *(void *)(v167 + 200) = *((void *)v168 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v167 + 192) = v168[12];
        }
        uint64_t v183 = v315;
        *(void *)(v167 + 208) = *((void *)v168 + 26);
        *(void *)(v167 + 216) = *((void *)v168 + 27);
        *(void *)(v167 + 224) = *((void *)v168 + 28);
        *(void *)(v167 + 232) = *((void *)v168 + 29);
        *(void *)(v167 + 240) = *((void *)v168 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v171 = *v168;
        long long v172 = v168[1];
        long long v173 = v168[3];
        *(_OWORD *)(v167 + 32) = v168[2];
        *(_OWORD *)(v167 + 48) = v173;
        *(_OWORD *)unint64_t v167 = v171;
        *(_OWORD *)(v167 + 16) = v172;
        long long v174 = v168[4];
        long long v175 = v168[5];
        long long v176 = v168[7];
        *(_OWORD *)(v167 + 96) = v168[6];
        *(_OWORD *)(v167 + 112) = v176;
        *(_OWORD *)(v167 + 64) = v174;
        *(_OWORD *)(v167 + 80) = v175;
        long long v177 = v168[8];
        long long v178 = v168[9];
        long long v179 = v168[11];
        *(_OWORD *)(v167 + 160) = v168[10];
        *(_OWORD *)(v167 + 176) = v179;
        *(_OWORD *)(v167 + 128) = v177;
        *(_OWORD *)(v167 + 144) = v178;
        long long v180 = v168[12];
        long long v181 = v168[13];
        long long v182 = v168[14];
        *(void *)(v167 + 240) = *((void *)v168 + 30);
        *(_OWORD *)(v167 + 208) = v181;
        *(_OWORD *)(v167 + 224) = v182;
        *(_OWORD *)(v167 + 192) = v180;
        uint64_t v183 = v88;
      }
      unint64_t v207 = (_OWORD *)((v167 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v208 = (long long *)(((unint64_t)v168 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v209 = *v208;
      *(_OWORD *)((char *)v207 + 9) = *(long long *)((char *)v208 + 9);
      *unint64_t v207 = v209;
      unint64_t v210 = (v167 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v211 = ((unint64_t)v168 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v212 = *(_OWORD *)v211;
      *(unsigned char *)(v210 + 16) = *(unsigned char *)(v211 + 16);
      *(_OWORD *)unint64_t v210 = v212;
      unint64_t v213 = (void *)((v167 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v214 = ((unint64_t)v168 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v215 = *(void *)v214;
      v214 += 15;
      *unint64_t v213 = v215;
      unint64_t v216 = (void *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v217 = *(void *)(v214 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v218 = *(void *)((v214 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v217, v218);
      *unint64_t v216 = v217;
      v216[1] = v218;
      v312((v313 + a1) & v311, ((unint64_t)v321 + v313) & v311, AssociatedTypeWitness);
      uint64_t v345 = (v313 + a1) & v311;
      uint64_t v219 = (v348 + v345) & v67;
      unint64_t v322 = ((unint64_t)v321 + v313) & v311;
      unint64_t v220 = (v348 + v322) & v67;
      v312(v219, v220, AssociatedTypeWitness);
      uint64_t v221 = (v346 + v219) & v314;
      uint64_t v222 = (v346 + v220) & v314;
      v309(v221, v222, v350);
      unint64_t v223 = (void *)((v347 + v221) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v224 = (void *)((v347 + v222) & 0xFFFFFFFFFFFFFFF8);
      void *v223 = *v224;
      unint64_t v225 = ((unint64_t)v223 + v349) & v328;
      unint64_t v226 = ((unint64_t)v224 + v349) & v328;
      swift_bridgeObjectRetain();
      v310(v225, v226, v352);
      unint64_t v227 = (void *)((v351 + v225) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v228 = (void *)((v351 + v226) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v227 = *v228;
      unint64_t v229 = (void *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v230 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v229 = *v230;
      v229[1] = v230[1];
      unint64_t v231 = (void *)(v221 + v353);
      void *v231 = *(void *)(v222 + v353);
      v231[1] = *(void *)(v222 + v353 + 8);
      unint64_t v232 = (v336 + v221 + v353) & v330;
      unint64_t v233 = (v336 + v222 + v353) & v330;
      *(unsigned char *)unint64_t v232 = *(unsigned char *)v233;
      uint64_t v234 = v232 | 4;
      int v235 = *(_DWORD *)(v233 | 4);
      *(unsigned char *)(v234 + 4) = *(unsigned char *)((v233 | 4) + 4);
      *(_DWORD *)uint64_t v234 = v235;
      *(_WORD *)(v232 + 10) = *(_WORD *)(v233 + 0xA);
      unint64_t v236 = (v338 + v232) & v334;
      unint64_t v237 = (v338 + v233) & v334;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v183(v236, v237, v317);
      unint64_t v238 = (v16 + v236) & v334;
      unint64_t v239 = (v16 + v237) & v334;
      v183(v238, v239, v317);
      unint64_t v240 = (unsigned char *)(v238 + v332);
      *unint64_t v240 = *(unsigned char *)(v239 + v332);
      v240[1] = *(unsigned char *)(v239 + v332 + 1);
      v240[2] = *(unsigned char *)(v239 + v332 + 2);
      v240[3] = *(unsigned char *)(v239 + v332 + 3);
      v240[4] = *(unsigned char *)(v239 + v332 + 4);
      unint64_t v241 = (v238 + v332 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v242 = (v239 + v332 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v241 = *(void *)v242;
      *(void *)(v241 + 8) = *(void *)(v242 + 8);
      *(unsigned char *)(v241 + 16) = *(unsigned char *)(v242 + 16);
      *(unsigned char *)(v241 + 17) = *(unsigned char *)(v242 + 17);
      *(unsigned char *)(v241 + 18) = *(unsigned char *)(v242 + 18);
      *(unsigned char *)(v241 + 19) = *(unsigned char *)(v242 + 19);
      unint64_t v243 = (v241 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v244 = (v242 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v243 = *(void *)v244;
      *(unsigned char *)(v243 + 8) = *(unsigned char *)(v244 + 8);
      *(unsigned char *)(v243 + 9) = *(unsigned char *)(v244 + 9);
      *(unsigned char *)(v243 + 10) = *(unsigned char *)(v244 + 10);
      *(unsigned char *)(v243 + 11) = *(unsigned char *)(v244 + 11);
      *(unsigned char *)(v243 + 12) = *(unsigned char *)(v244 + 12);
      unint64_t v245 = (void *)((v241 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v246 = (void *)((v242 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v245 = *v246;
      unint64_t v247 = ((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v248 = ((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v247 = *(void *)v248;
      *(unsigned char *)(v247 + 8) = *(unsigned char *)(v248 + 8);
      *(unsigned char *)(v247 + 9) = *(unsigned char *)(v248 + 9);
      unint64_t v249 = (void *)((v340 + v247) & v334);
      unint64_t v250 = (const void *)((v340 + v248) & v334);
      swift_bridgeObjectRetain();
      if (v308(v250, 1, v317))
      {
        memcpy(v249, v250, __na);
      }
      else
      {
        v183((unint64_t)v249, (unint64_t)v250, v317);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v326 + 56))(v249, 0, 1, v317);
      }
      unint64_t v251 = (void *)(((unint64_t)v249 + v342) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v252 = (void *)(((unint64_t)v250 + v342) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v251 = *v252;
      unint64_t v253 = ((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v254 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v255 = *(void *)v254;
      *(unsigned char *)(v253 + 8) = *(unsigned char *)(v254 + 8);
      *(void *)unint64_t v253 = v255;
      unint64_t v256 = (void *)(((unint64_t)v251 + 31) & 0xFFFFFFFFFFFFFFF8);
      long long v257 = (void *)(((unint64_t)v252 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v256 = *v257;
      unint64_t v258 = ((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v259 = (uint64_t *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v260 = v259[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v260 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v258 = *(_OWORD *)v259;
      }
      else
      {
        uint64_t v261 = *v259;
        sub_10001EBB0(*v259, v260);
        *(void *)unint64_t v258 = v261;
        *(void *)(v258 + 8) = v260;
      }
      unint64_t v262 = (v258 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v263 = ((unint64_t)v259 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v264 = *(void *)v263;
      *(unsigned char *)(v262 + 8) = *(unsigned char *)(v263 + 8);
      *(void *)unint64_t v262 = v264;
      *(unsigned char *)(v262 + 9) = *(unsigned char *)(v263 + 9);
      unint64_t v265 = (v262 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v266 = (v263 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v267 = *(_DWORD *)v266;
      *(unsigned char *)(v265 + 4) = *(unsigned char *)(v266 + 4);
      *(_DWORD *)unint64_t v265 = v267;
      unint64_t v268 = (void *)((v262 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v269 = (void *)((v263 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v268 = *v269;
      v268[1] = v269[1];
      unint64_t v270 = v232 + v344;
      unint64_t v271 = v233 + v344;
      unint64_t v272 = *(void *)(v233 + v344 + 16);
      if (v272 >= 0xFFFFFFFF) {
        LODWORD(v272) = -1;
      }
      int v273 = v272 - 1;
      swift_bridgeObjectRetain();
      if (v273 < 0)
      {
        *(void *)unint64_t v270 = *(void *)v271;
        *(unsigned char *)(v270 + 8) = *(unsigned char *)(v271 + 8);
        *(unsigned char *)(v270 + 9) = *(unsigned char *)(v271 + 9);
        uint64_t v286 = *(void *)(v271 + 16);
        swift_errorRetain();
        *(void *)(v270 + 16) = v286;
        uint64_t v287 = *(void *)(v271 + 24);
        swift_errorRetain();
        *(void *)(v270 + 24) = v287;
        *(unsigned char *)(v270 + 32) = *(unsigned char *)(v271 + 32);
        *(unsigned char *)(v270 + 33) = *(unsigned char *)(v271 + 33);
        *(unsigned char *)(v270 + 34) = *(unsigned char *)(v271 + 34);
        *(void *)(v270 + 40) = *(void *)(v271 + 40);
        *(void *)(v270 + 48) = *(void *)(v271 + 48);
        *(void *)(v270 + 56) = *(void *)(v271 + 56);
        *(void *)(v270 + 64) = *(void *)(v271 + 64);
        *(unsigned char *)(v270 + 72) = *(unsigned char *)(v271 + 72);
        *(void *)(v270 + 80) = *(void *)(v271 + 80);
        *(void *)(v270 + 88) = *(void *)(v271 + 88);
        uint64_t v359 = *(void **)(v271 + 96);
        *(void *)(v270 + 96) = v359;
        *(unsigned char *)(v270 + 104) = *(unsigned char *)(v271 + 104);
        *(unsigned char *)(v270 + 105) = *(unsigned char *)(v271 + 105);
        *(void *)(v270 + 112) = *(void *)(v271 + 112);
        *(void *)(v270 + 120) = *(void *)(v271 + 120);
        *(void *)(v270 + 128) = *(void *)(v271 + 128);
        *(void *)(v270 + 136) = *(void *)(v271 + 136);
        *(void *)(v270 + 144) = *(void *)(v271 + 144);
        *(void *)(v270 + 152) = *(void *)(v271 + 152);
        *(void *)(v270 + 160) = *(void *)(v271 + 160);
        *(void *)(v270 + 168) = *(void *)(v271 + 168);
        *(unsigned char *)(v270 + 176) = *(unsigned char *)(v271 + 176);
        *(void *)(v270 + 184) = *(void *)(v271 + 184);
        uint64_t v288 = *(void *)(v271 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v289 = v359;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v288)
        {
          *(void *)(v270 + 192) = v288;
          *(void *)(v270 + 200) = *(void *)(v271 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v270 + 192) = *(_OWORD *)(v271 + 192);
        }
        unint64_t v24 = v324;
        *(void *)(v270 + 208) = *(void *)(v271 + 208);
        *(void *)(v270 + 216) = *(void *)(v271 + 216);
        *(void *)(v270 + 224) = *(void *)(v271 + 224);
        *(void *)(v270 + 232) = *(void *)(v271 + 232);
        *(void *)(v270 + 240) = *(void *)(v271 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v274 = *(_OWORD *)v271;
        long long v275 = *(_OWORD *)(v271 + 16);
        long long v276 = *(_OWORD *)(v271 + 48);
        *(_OWORD *)(v270 + 32) = *(_OWORD *)(v271 + 32);
        *(_OWORD *)(v270 + 48) = v276;
        *(_OWORD *)unint64_t v270 = v274;
        *(_OWORD *)(v270 + 16) = v275;
        long long v277 = *(_OWORD *)(v271 + 64);
        long long v278 = *(_OWORD *)(v271 + 80);
        long long v279 = *(_OWORD *)(v271 + 112);
        *(_OWORD *)(v270 + 96) = *(_OWORD *)(v271 + 96);
        *(_OWORD *)(v270 + 112) = v279;
        *(_OWORD *)(v270 + 64) = v277;
        *(_OWORD *)(v270 + 80) = v278;
        long long v280 = *(_OWORD *)(v271 + 128);
        long long v281 = *(_OWORD *)(v271 + 144);
        long long v282 = *(_OWORD *)(v271 + 176);
        *(_OWORD *)(v270 + 160) = *(_OWORD *)(v271 + 160);
        *(_OWORD *)(v270 + 176) = v282;
        *(_OWORD *)(v270 + 128) = v280;
        *(_OWORD *)(v270 + 144) = v281;
        long long v283 = *(_OWORD *)(v271 + 192);
        long long v284 = *(_OWORD *)(v271 + 208);
        long long v285 = *(_OWORD *)(v271 + 224);
        *(void *)(v270 + 240) = *(void *)(v271 + 240);
        *(_OWORD *)(v270 + 208) = v284;
        *(_OWORD *)(v270 + 224) = v285;
        *(_OWORD *)(v270 + 192) = v283;
        unint64_t v24 = v324;
      }
      id v290 = (_OWORD *)((v270 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v291 = (long long *)((v271 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v292 = *v291;
      *(_OWORD *)((char *)v290 + 9) = *(long long *)((char *)v291 + 9);
      _OWORD *v290 = v292;
      unint64_t v293 = (v270 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v294 = (v271 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v295 = *(_OWORD *)v294;
      *(unsigned char *)(v293 + 16) = *(unsigned char *)(v294 + 16);
      *(_OWORD *)unint64_t v293 = v295;
      long long v296 = (void *)((v270 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v297 = (v271 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v298 = *(void *)v297;
      v297 += 15;
      *long long v296 = v298;
      uint64_t v299 = (void *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v300 = *(void *)(v297 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v301 = *(void *)((v297 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v300, v301);
      *uint64_t v299 = v300;
      v299[1] = v301;
      unint64_t v302 = (void *)((v316 + v345) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v303 = (void *)((v316 + v322) & 0xFFFFFFFFFFFFFFF8);
      void *v302 = *v303;
      unint64_t v304 = (void *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v305 = (void *)(((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v304 = *v305;
      v304[1] = v305[1];
      char v105 = 1;
      uint64_t v102 = a1;
      break;
    case 2u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v356 + 16))(a1, v11, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v11 + v3);
      unint64_t v103 = (v3 + a1) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = ((unint64_t)v11 + v3) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v103 + 8) = *(void *)(v104 + 8);
      *(void *)(v103 + 16) = *(void *)(v104 + 16);
      char v105 = 2;
      break;
    case 3u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v356 + 16))(a1, v11, AssociatedTypeWitness);
      uint64_t v106 = (void *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      id v107 = (void *)(((unint64_t)v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v106 = *v107;
      v106[1] = v107[1];
      char v105 = 3;
      break;
    case 4u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v356 + 16))(a1, v11, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v11 + v3);
      unint64_t v108 = (v3 + a1) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v109 = ((unint64_t)v11 + v3) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v108 + 8) = *(void *)(v109 + 8);
      *(void *)(v108 + 16) = *(void *)(v109 + 16);
      char v105 = 4;
      break;
    case 5u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v356 + 16))(a1, v11, AssociatedTypeWitness);
      unint64_t v110 = (void *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v111 = (void *)(((unint64_t)v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      void *v110 = *v111;
      v110[1] = v111[1];
      char v105 = 5;
      break;
    default:
      size_t __n = v17;
      size_t v341 = v17 + 7;
      unint64_t v343 = ((((((((((v17
                     + 7
                     + ((v14
                       + 10
                       + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v323 = v24;
      unint64_t v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v356 + 16);
      uint64_t v325 = *(void *)(v12 - 8);
      uint64_t v339 = v14 + 10;
      uint64_t v333 = ~v14;
      uint64_t v335 = (v14 | 7) + 16;
      uint64_t v337 = v14 + 12;
      uint64_t v329 = ~(v14 | 7);
      uint64_t v331 = *(void *)(v13 + 64);
      uint64_t v327 = v27;
      uint64_t v29 = ~v4;
      v28(a1, (unint64_t)v11, AssociatedTypeWitness);
      unint64_t v30 = v28;
      uint64_t v31 = (v348 + a1) & v29;
      unint64_t v320 = v11;
      unint64_t v32 = ((unint64_t)v11 + v348) & v29;
      v30(v31, v32, AssociatedTypeWitness);
      uint64_t v33 = (v31 + v3 + v10) & ~v10;
      unint64_t v34 = (v32 + v3 + v10) & ~v10;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v354 + 16))(v33, v34, v350);
      uint64_t v35 = (void *)((v347 + v33) & 0xFFFFFFFFFFFFFFF8);
      Swift::String v36 = (void *)((v347 + v34) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v35 = *v36;
      uint64_t v37 = v12;
      unint64_t v38 = ((unint64_t)v35 + v349) & v327;
      unint64_t v39 = ((unint64_t)v36 + v349) & v327;
      unint64_t v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v40(v38, v39, v352);
      unint64_t v41 = (void *)((v351 + v39) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v42 = (void *)((v351 + v38) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v42 = *v41;
      unint64_t v43 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v44 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v43 = *v44;
      v43[1] = v44[1];
      unint64_t v45 = (void *)(v353 + v33);
      *unint64_t v45 = *(void *)(v353 + v34);
      v45[1] = *(void *)(v353 + v34 + 8);
      unint64_t v46 = (v335 + v353 + v33) & v329;
      unint64_t v47 = (v335 + v353 + v34) & v329;
      *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
      uint64_t v48 = v46 | 4;
      int v49 = *(_DWORD *)(v47 | 4);
      *(unsigned char *)(v48 + 4) = *(unsigned char *)((v47 | 4) + 4);
      *(_DWORD *)uint64_t v48 = v49;
      *(_WORD *)(v46 + 10) = *(_WORD *)(v47 + 0xA);
      unint64_t v50 = (v337 + v46) & v333;
      unint64_t v357 = v47;
      unint64_t v51 = (v337 + v47) & v333;
      uint64_t v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v325 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(v50, v51, v37);
      unint64_t v53 = (v16 + v51) & v333;
      v52((v16 + v50) & v333, v53, v37);
      unint64_t v54 = (unsigned char *)(((v16 + v50) & v333) + v331);
      *unint64_t v54 = *(unsigned char *)(v53 + v331);
      v54[1] = *(unsigned char *)(v53 + v331 + 1);
      v54[2] = *(unsigned char *)(v53 + v331 + 2);
      v54[3] = *(unsigned char *)(v53 + v331 + 3);
      v54[4] = *(unsigned char *)(v53 + v331 + 4);
      unint64_t v55 = (unint64_t)(v54 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v56 = (v53 + v331 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = *(void *)(v56 + 8);
      *(unsigned char *)(v55 + 16) = *(unsigned char *)(v56 + 16);
      *(unsigned char *)(v55 + 17) = *(unsigned char *)(v56 + 17);
      *(unsigned char *)(v55 + 18) = *(unsigned char *)(v56 + 18);
      *(unsigned char *)(v55 + 19) = *(unsigned char *)(v56 + 19);
      unint64_t v57 = (v55 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v58 = (v56 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v57 = *(void *)v58;
      *(unsigned char *)(v57 + 8) = *(unsigned char *)(v58 + 8);
      *(unsigned char *)(v57 + 9) = *(unsigned char *)(v58 + 9);
      *(unsigned char *)(v57 + 10) = *(unsigned char *)(v58 + 10);
      *(unsigned char *)(v57 + 11) = *(unsigned char *)(v58 + 11);
      *(unsigned char *)(v57 + 12) = *(unsigned char *)(v58 + 12);
      unint64_t v59 = (void *)((v56 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v60 = (void *)((v55 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v60 = *v59;
      unint64_t v61 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v61 = *(void *)v62;
      *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
      *(unsigned char *)(v61 + 9) = *(unsigned char *)(v62 + 9);
      unint64_t v63 = (void *)((v339 + v61) & v333);
      unint64_t v64 = (const void *)((v339 + v62) & v333);
      unint64_t v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v325 + 48);
      swift_bridgeObjectRetain();
      if (v65(v64, 1, v37))
      {
        memcpy(v63, v64, __n);
      }
      else
      {
        v52((unint64_t)v63, (unint64_t)v64, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v325 + 56))(v63, 0, 1, v37);
      }
      id v112 = (void *)(((unint64_t)v63 + v341) & 0xFFFFFFFFFFFFFFF8);
      id v113 = (void *)(((unint64_t)v64 + v341) & 0xFFFFFFFFFFFFFFF8);
      void *v112 = *v113;
      unint64_t v114 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v115 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v116 = *(void *)v115;
      *(unsigned char *)(v114 + 8) = *(unsigned char *)(v115 + 8);
      *(void *)unint64_t v114 = v116;
      id v117 = (void *)(((unint64_t)v112 + 31) & 0xFFFFFFFFFFFFFFF8);
      id v118 = (void *)(((unint64_t)v113 + 31) & 0xFFFFFFFFFFFFFFF8);
      *id v117 = *v118;
      unint64_t v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v120 = (uint64_t *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v121 = v120[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v121 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v119 = *(_OWORD *)v120;
      }
      else
      {
        uint64_t v132 = *v120;
        sub_10001EBB0(*v120, v121);
        *(void *)unint64_t v119 = v132;
        *(void *)(v119 + 8) = v121;
      }
      unint64_t v133 = (v119 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v134 = ((unint64_t)v120 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v135 = *(void *)v134;
      *(unsigned char *)(v133 + 8) = *(unsigned char *)(v134 + 8);
      *(void *)unint64_t v133 = v135;
      *(unsigned char *)(v133 + 9) = *(unsigned char *)(v134 + 9);
      unint64_t v136 = (v133 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v137 = (v134 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v138 = *(_DWORD *)v137;
      *(unsigned char *)(v136 + 4) = *(unsigned char *)(v137 + 4);
      *(_DWORD *)unint64_t v136 = v138;
      unint64_t v139 = (void *)((v133 + 25) & 0xFFFFFFFFFFFFFFF8);
      int v140 = (void *)((v134 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v139 = *v140;
      v139[1] = v140[1];
      unint64_t v141 = v343 + v46;
      long long v142 = (long long *)(v343 + v357);
      unint64_t v143 = *(void *)(v343 + v357 + 16);
      if (v143 >= 0xFFFFFFFF) {
        LODWORD(v143) = -1;
      }
      int v144 = v143 - 1;
      swift_bridgeObjectRetain();
      if (v144 < 0)
      {
        *(void *)unint64_t v141 = *(void *)v142;
        *(unsigned char *)(v141 + 8) = *((unsigned char *)v142 + 8);
        *(unsigned char *)(v141 + 9) = *((unsigned char *)v142 + 9);
        uint64_t v184 = *((void *)v142 + 2);
        swift_errorRetain();
        *(void *)(v141 + 16) = v184;
        uint64_t v185 = *((void *)v142 + 3);
        swift_errorRetain();
        *(void *)(v141 + 24) = v185;
        *(unsigned char *)(v141 + 32) = *((unsigned char *)v142 + 32);
        *(unsigned char *)(v141 + 33) = *((unsigned char *)v142 + 33);
        *(unsigned char *)(v141 + 34) = *((unsigned char *)v142 + 34);
        *(void *)(v141 + 40) = *((void *)v142 + 5);
        *(void *)(v141 + 48) = *((void *)v142 + 6);
        *(void *)(v141 + 56) = *((void *)v142 + 7);
        *(void *)(v141 + 64) = *((void *)v142 + 8);
        *(unsigned char *)(v141 + 72) = *((unsigned char *)v142 + 72);
        *(void *)(v141 + 80) = *((void *)v142 + 10);
        *(void *)(v141 + 88) = *((void *)v142 + 11);
        unint64_t v358 = (void *)*((void *)v142 + 12);
        *(void *)(v141 + 96) = v358;
        *(unsigned char *)(v141 + 104) = *((unsigned char *)v142 + 104);
        *(unsigned char *)(v141 + 105) = *((unsigned char *)v142 + 105);
        *(void *)(v141 + 112) = *((void *)v142 + 14);
        *(void *)(v141 + 120) = *((void *)v142 + 15);
        *(void *)(v141 + 128) = *((void *)v142 + 16);
        *(void *)(v141 + 136) = *((void *)v142 + 17);
        *(void *)(v141 + 144) = *((void *)v142 + 18);
        *(void *)(v141 + 152) = *((void *)v142 + 19);
        *(void *)(v141 + 160) = *((void *)v142 + 20);
        *(void *)(v141 + 168) = *((void *)v142 + 21);
        *(unsigned char *)(v141 + 176) = *((unsigned char *)v142 + 176);
        *(void *)(v141 + 184) = *((void *)v142 + 23);
        uint64_t v186 = *((void *)v142 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v187 = v358;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v186)
        {
          *(void *)(v141 + 192) = v186;
          *(void *)(v141 + 200) = *((void *)v142 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v141 + 192) = v142[12];
        }
        unint64_t v157 = v320;
        unint64_t v24 = v323;
        *(void *)(v141 + 208) = *((void *)v142 + 26);
        *(void *)(v141 + 216) = *((void *)v142 + 27);
        *(void *)(v141 + 224) = *((void *)v142 + 28);
        *(void *)(v141 + 232) = *((void *)v142 + 29);
        *(void *)(v141 + 240) = *((void *)v142 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v145 = *v142;
        long long v146 = v142[1];
        long long v147 = v142[3];
        *(_OWORD *)(v141 + 32) = v142[2];
        *(_OWORD *)(v141 + 48) = v147;
        *(_OWORD *)unint64_t v141 = v145;
        *(_OWORD *)(v141 + 16) = v146;
        long long v148 = v142[4];
        long long v149 = v142[5];
        long long v150 = v142[7];
        *(_OWORD *)(v141 + 96) = v142[6];
        *(_OWORD *)(v141 + 112) = v150;
        *(_OWORD *)(v141 + 64) = v148;
        *(_OWORD *)(v141 + 80) = v149;
        long long v151 = v142[8];
        long long v152 = v142[9];
        long long v153 = v142[11];
        *(_OWORD *)(v141 + 160) = v142[10];
        *(_OWORD *)(v141 + 176) = v153;
        *(_OWORD *)(v141 + 128) = v151;
        *(_OWORD *)(v141 + 144) = v152;
        long long v154 = v142[12];
        long long v155 = v142[13];
        long long v156 = v142[14];
        *(void *)(v141 + 240) = *((void *)v142 + 30);
        *(_OWORD *)(v141 + 208) = v155;
        *(_OWORD *)(v141 + 224) = v156;
        *(_OWORD *)(v141 + 192) = v154;
        unint64_t v157 = v320;
        unint64_t v24 = v323;
      }
      unint64_t v193 = (_OWORD *)((v141 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v194 = (long long *)(((unint64_t)v142 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v195 = *v194;
      *(_OWORD *)((char *)v193 + 9) = *(long long *)((char *)v194 + 9);
      *unint64_t v193 = v195;
      unint64_t v196 = (v141 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v197 = ((unint64_t)v142 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v198 = *(_OWORD *)v197;
      *(unsigned char *)(v196 + 16) = *(unsigned char *)(v197 + 16);
      *(_OWORD *)unint64_t v196 = v198;
      long long v199 = (void *)((v141 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v200 = ((unint64_t)v142 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v201 = *(void *)v200;
      v200 += 15;
      *long long v199 = v201;
      unint64_t v202 = (void *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v203 = *(void *)(v200 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v204 = *(void *)((v200 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v203, v204);
      char v105 = 0;
      *unint64_t v202 = v203;
      v202[1] = v204;
      uint64_t v102 = a1;
      int v205 = (void *)((a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      long long v206 = (void *)(((unint64_t)v157 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      *int v205 = *v206;
      v205[1] = v206[1];
      break;
  }
  *(unsigned char *)(v102 + v24) = v105;
  swift_bridgeObjectRetain();
  return v102;
}

_DWORD *sub_100645690(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v391 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v391 + 80);
    uint64_t v372 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v374 = v6;
    uint64_t v375 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v377 = *(void *)(v8 - 8);
    uint64_t v378 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v377 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v361 = v3 + v10;
    uint64_t v371 = *(void *)(v6 + 64) + 7;
    uint64_t v373 = v9 + 8;
    uint64_t v376 = *(void *)(v377 + 64) + 7;
    unint64_t v380 = ((((v376 + ((v9 + 8 + (v371 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v386 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v386 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v379 = (v12 | 7) + 16;
    uint64_t v381 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v382 = v13 + v12;
    uint64_t v14 = v13 + 12;
    uint64_t v384 = v12 + 10;
    uint64_t v366 = v13;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v15 = *(void *)(*(void *)(v386 - 8) + 64);
    }
    else {
      size_t v15 = v13 + 1;
    }
    size_t __n = v15;
    size_t v385 = v15 + 7;
    unint64_t v16 = ((((((((((v15
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v17 = (((((v379 + v380 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7)) + v16 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = v17 + 23;
    unint64_t v19 = ((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v17 + 16;
    uint64_t v21 = v10 | v4 | v12;
    unint64_t v358 = v20;
    unint64_t v359 = v20 + v21;
    unint64_t v22 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    unint64_t v23 = ((((v18 + ((v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v22 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 > v19) {
      unint64_t v19 = v22;
    }
    if (v19 <= v23) {
      unint64_t v24 = v23;
    }
    else {
      unint64_t v24 = v19;
    }
    unsigned int v25 = *((unsigned __int8 *)a1 + v24);
    if (v25 >= 6 && v24 != 0) {
      unsigned int v25 = *a1 + 6;
    }
    uint64_t v27 = ~v4;
    uint64_t v368 = ~v10;
    uint64_t v369 = ~v9;
    uint64_t v370 = ~(v12 | 7);
    uint64_t v383 = ~v12;
    uint64_t v28 = ~v21;
    uint64_t v367 = *(void *)(v386 - 8);
    switch(v25)
    {
      case 1u:
        uint64_t v352 = ~v21;
        unint64_t v364 = v24;
        unint64_t v347 = v18;
        unint64_t v356 = v16;
        unint64_t v80 = *(void (**)(_DWORD *, uint64_t))(v391 + 8);
        v80(a1, AssociatedTypeWitness);
        uint64_t v349 = v27;
        v80((_DWORD *)(((unint64_t)a1 + v372) & v27), AssociatedTypeWitness);
        unint64_t v81 = ((((unint64_t)a1 + v372) & v27) + v3 + v10) & v368;
        size_t v341 = *(void (**)(unint64_t, uint64_t))(v374 + 8);
        v341(v81, v375);
        swift_bridgeObjectRelease();
        uint64_t v338 = *(void (**)(unint64_t, uint64_t))(v377 + 8);
        v338((v373 + ((v371 + v81) & 0xFFFFFFFFFFFFFFF8)) & v369, v378);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v82 = (v379 + v380 + v81) & v370;
        unint64_t v83 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v83((v381 + v82) & v383, v386);
        unint64_t v84 = (v382 + ((v381 + v82) & v383)) & v383;
        v83(v84, v386);
        swift_bridgeObjectRelease();
        unint64_t v85 = (v384
             + ((((((v14 + v84) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v383;
        uint64_t v337 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
        if (!v337(v85, 1, v386)) {
          v83(v85, v386);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v86 = (uint64_t *)((((((v385 + v85) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v87 = v86[1];
        if ((v87 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v86, v87);
        }
        swift_bridgeObjectRelease();
        unint64_t v88 = v356 + v82;
        LODWORD(v89) = -1;
        if (*(void *)(v356 + v82 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v89 = *(void *)(v356 + v82 + 16);
        }
        uint64_t v29 = v391;
        if ((int)v89 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v88 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v88 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v88 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        v80((_DWORD *)(((unint64_t)a1 + v359) & v352), AssociatedTypeWitness);
        unint64_t v90 = (v372 + (((unint64_t)a1 + v359) & v352)) & v349;
        v80((_DWORD *)v90, AssociatedTypeWitness);
        unint64_t v91 = (v361 + v90) & v368;
        v341(v91, v375);
        swift_bridgeObjectRelease();
        v338((v373 + ((v371 + v91) & 0xFFFFFFFFFFFFFFF8)) & v369, v378);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v92 = (v379 + v91 + v380) & v370;
        v83((v381 + v92) & v383, v386);
        unint64_t v93 = (v382 + ((v381 + v92) & v383)) & v383;
        v83(v93, v386);
        swift_bridgeObjectRelease();
        unint64_t v94 = (v384
             + ((((((v14 + v93) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v383;
        if (!v337(v94, 1, v386)) {
          v83(v94, v386);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v95 = (uint64_t *)((((((v385 + v94) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v96 = v95[1];
        if ((v96 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v95, v96);
        }
        swift_bridgeObjectRelease();
        unint64_t v97 = v92 + v356;
        unint64_t v16 = v356;
        LODWORD(v98) = -1;
        if (*(void *)(v97 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v98 = *(void *)(v97 + 16);
        }
        uint64_t v27 = v349;
        uint64_t v28 = v352;
        if ((int)v98 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v97 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v97 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v97 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v18 = v347;
        unint64_t v41 = a2;
        unint64_t v24 = v364;
        break;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        uint64_t v29 = v391;
        (*(void (**)(_DWORD *, uint64_t))(v391 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_30;
      default:
        uint64_t v351 = ~v21;
        unint64_t v362 = v24;
        unint64_t v346 = v18;
        unint64_t v355 = v16;
        unint64_t v30 = *(void (**)(_DWORD *, uint64_t))(v391 + 8);
        v30(a1, AssociatedTypeWitness);
        unint64_t v31 = ((unint64_t)a1 + v372) & v27;
        v30((_DWORD *)v31, AssociatedTypeWitness);
        unint64_t v32 = (v31 + v3 + v10) & v368;
        (*(void (**)(unint64_t, uint64_t))(v374 + 8))(v32, v375);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v377 + 8))((v373 + ((v371 + v32) & 0xFFFFFFFFFFFFFFF8)) & v369, v378);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v33 = (v379 + v380 + v32) & v370;
        unint64_t v34 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v34((v381 + v33) & v383, v386);
        unint64_t v35 = (v382 + ((v381 + v33) & v383)) & v383;
        v34(v35, v386);
        swift_bridgeObjectRelease();
        unint64_t v36 = (v384
             + ((((((v14 + v35) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v383;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v36, 1, v386)) {
          v34(v36, v386);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = (uint64_t *)((((((v385 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v38 = v37[1];
        if ((v38 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v37, v38);
        }
        swift_bridgeObjectRelease();
        unint64_t v16 = v355;
        unint64_t v39 = v355 + v33;
        LODWORD(v40) = -1;
        if (*(void *)(v355 + v33 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v40 = *(void *)(v355 + v33 + 16);
        }
        unint64_t v18 = v346;
        uint64_t v29 = v391;
        unint64_t v24 = v362;
        uint64_t v28 = v351;
        if ((int)v40 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v39 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v39 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v39 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_30:
        unint64_t v41 = a2;
        break;
    }
    swift_bridgeObjectRelease();
    unsigned int v42 = *((unsigned __int8 *)v41 + v24);
    if (v42 >= 6 && v24 != 0) {
      unsigned int v42 = *v41 + 6;
    }
    switch(v42)
    {
      case 1u:
        uint64_t v353 = v28;
        unint64_t v365 = v24;
        unint64_t v348 = v18;
        unint64_t v357 = v16;
        uint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16);
        v99((unint64_t)a1, (unint64_t)v41, AssociatedTypeWitness);
        unint64_t v100 = ((unint64_t)a1 + v372) & v27;
        uint64_t v350 = v27;
        unint64_t v101 = ((unint64_t)v41 + v372) & v27;
        uint64_t v345 = v99;
        v99(v100, v101, AssociatedTypeWitness);
        unint64_t v102 = (v100 + v3 + v10) & v368;
        unint64_t v103 = (v101 + v3 + v10) & v368;
        unint64_t v343 = *(void (**)(unint64_t, unint64_t, uint64_t))(v374 + 16);
        v343(v102, v103, v375);
        unint64_t v104 = (void *)((v371 + v102) & 0xFFFFFFFFFFFFFFF8);
        char v105 = (void *)((v371 + v103) & 0xFFFFFFFFFFFFFFF8);
        void *v104 = *v105;
        unint64_t v106 = ((unint64_t)v104 + v373) & v369;
        unint64_t v107 = ((unint64_t)v105 + v373) & v369;
        unint64_t v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 16);
        swift_bridgeObjectRetain();
        unint64_t v344 = v108;
        v108(v106, v107, v378);
        unint64_t v109 = (void *)((v376 + v107) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v110 = (void *)((v376 + v106) & 0xFFFFFFFFFFFFFFF8);
        void *v110 = *v109;
        uint64_t v111 = (void *)(((unint64_t)v110 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v112 = (void *)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v111 = *v112;
        v111[1] = v112[1];
        id v113 = (void *)(v380 + v102);
        *id v113 = *(void *)(v380 + v103);
        v113[1] = *(void *)(v380 + v103 + 8);
        unint64_t v114 = (v379 + v380 + v102) & v370;
        unint64_t v115 = (v379 + v380 + v103) & v370;
        *(unsigned char *)unint64_t v114 = *(unsigned char *)v115;
        uint64_t v116 = v114 | 4;
        int v117 = *(_DWORD *)(v115 | 4);
        *(unsigned char *)(v116 + 4) = *(unsigned char *)((v115 | 4) + 4);
        *(_DWORD *)uint64_t v116 = v117;
        *(_WORD *)(v114 + 10) = *(_WORD *)(v115 + 0xA);
        unint64_t v340 = v114;
        unint64_t v118 = (v381 + v114) & v383;
        unint64_t v339 = v115;
        unint64_t v119 = (v381 + v115) & v383;
        unint64_t v120 = *(void (**)(unint64_t, unint64_t, uint64_t))(v367 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v120(v118, v119, v386);
        unint64_t v121 = (v382 + v119) & v383;
        v120((v382 + v118) & v383, v121, v386);
        id v122 = (unsigned char *)(((v382 + v118) & v383) + v366);
        *id v122 = *(unsigned char *)(v121 + v366);
        v122[1] = *(unsigned char *)(v121 + v366 + 1);
        void v122[2] = *(unsigned char *)(v121 + v366 + 2);
        v122[3] = *(unsigned char *)(v121 + v366 + 3);
        v122[4] = *(unsigned char *)(v121 + v366 + 4);
        unint64_t v123 = (unint64_t)(v122 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v124 = (v121 + v366 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v123 = *(void *)v124;
        *(void *)(v123 + 8) = *(void *)(v124 + 8);
        *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
        *(unsigned char *)(v123 + 17) = *(unsigned char *)(v124 + 17);
        *(unsigned char *)(v123 + 18) = *(unsigned char *)(v124 + 18);
        *(unsigned char *)(v123 + 19) = *(unsigned char *)(v124 + 19);
        unint64_t v125 = (v123 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v126 = (v124 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v125 = *(void *)v126;
        *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
        *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
        *(unsigned char *)(v125 + 10) = *(unsigned char *)(v126 + 10);
        *(unsigned char *)(v125 + 11) = *(unsigned char *)(v126 + 11);
        *(unsigned char *)(v125 + 12) = *(unsigned char *)(v126 + 12);
        id v127 = (void *)((v124 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v128 = (void *)((v123 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v128 = *v127;
        unint64_t v129 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v129 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        unint64_t v131 = (void *)((v384 + v129) & v383);
        uint64_t v132 = (const void *)((v384 + v130) & v383);
        unint64_t v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v367 + 48);
        swift_bridgeObjectRetain();
        size_t v342 = v133;
        if (v133(v132, 1, v386))
        {
          memcpy(v131, v132, __n);
        }
        else
        {
          v120((unint64_t)v131, (unint64_t)v132, v386);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v367 + 56))(v131, 0, 1, v386);
        }
        long long v153 = (void *)(((unint64_t)v131 + v385) & 0xFFFFFFFFFFFFFFF8);
        long long v154 = (void *)(((unint64_t)v132 + v385) & 0xFFFFFFFFFFFFFFF8);
        *long long v153 = *v154;
        unint64_t v155 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v156 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v157 = *(void *)v156;
        *(unsigned char *)(v155 + 8) = *(unsigned char *)(v156 + 8);
        *(void *)unint64_t v155 = v157;
        uint64_t v158 = (void *)(((unint64_t)v153 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v159 = (void *)(((unint64_t)v154 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v158 = *v159;
        unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v161 = (uint64_t *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v162 = v161[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v162 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v160 = *(_OWORD *)v161;
        }
        else
        {
          uint64_t v188 = *v161;
          sub_10001EBB0(*v161, v162);
          *(void *)unint64_t v160 = v188;
          *(void *)(v160 + 8) = v162;
        }
        unint64_t v189 = (v160 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v190 = ((unint64_t)v161 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v191 = *(void *)v190;
        *(unsigned char *)(v189 + 8) = *(unsigned char *)(v190 + 8);
        *(void *)unint64_t v189 = v191;
        *(unsigned char *)(v189 + 9) = *(unsigned char *)(v190 + 9);
        unint64_t v192 = (v189 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v193 = (v190 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v194 = *(_DWORD *)v193;
        *(unsigned char *)(v192 + 4) = *(unsigned char *)(v193 + 4);
        *(_DWORD *)unint64_t v192 = v194;
        long long v195 = (void *)((v189 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v196 = (void *)((v190 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v195 = *v196;
        v195[1] = v196[1];
        unint64_t v197 = v357 + v340;
        long long v198 = (long long *)(v357 + v339);
        unint64_t v199 = *(void *)(v357 + v339 + 16);
        if (v199 >= 0xFFFFFFFF) {
          LODWORD(v199) = -1;
        }
        int v200 = v199 - 1;
        swift_bridgeObjectRetain();
        if (v200 < 0)
        {
          *(void *)unint64_t v197 = *(void *)v198;
          *(unsigned char *)(v197 + 8) = *((unsigned char *)v198 + 8);
          *(unsigned char *)(v197 + 9) = *((unsigned char *)v198 + 9);
          uint64_t v217 = *((void *)v198 + 2);
          swift_errorRetain();
          *(void *)(v197 + 16) = v217;
          uint64_t v218 = *((void *)v198 + 3);
          swift_errorRetain();
          *(void *)(v197 + 24) = v218;
          *(unsigned char *)(v197 + 32) = *((unsigned char *)v198 + 32);
          *(unsigned char *)(v197 + 33) = *((unsigned char *)v198 + 33);
          *(unsigned char *)(v197 + 34) = *((unsigned char *)v198 + 34);
          *(void *)(v197 + 40) = *((void *)v198 + 5);
          *(void *)(v197 + 48) = *((void *)v198 + 6);
          *(void *)(v197 + 56) = *((void *)v198 + 7);
          *(void *)(v197 + 64) = *((void *)v198 + 8);
          *(unsigned char *)(v197 + 72) = *((unsigned char *)v198 + 72);
          *(void *)(v197 + 80) = *((void *)v198 + 10);
          *(void *)(v197 + 88) = *((void *)v198 + 11);
          uint64_t v219 = (void *)*((void *)v198 + 12);
          *(void *)(v197 + 96) = v219;
          *(unsigned char *)(v197 + 104) = *((unsigned char *)v198 + 104);
          *(unsigned char *)(v197 + 105) = *((unsigned char *)v198 + 105);
          *(void *)(v197 + 112) = *((void *)v198 + 14);
          *(void *)(v197 + 120) = *((void *)v198 + 15);
          *(void *)(v197 + 128) = *((void *)v198 + 16);
          *(void *)(v197 + 136) = *((void *)v198 + 17);
          *(void *)(v197 + 144) = *((void *)v198 + 18);
          *(void *)(v197 + 152) = *((void *)v198 + 19);
          *(void *)(v197 + 160) = *((void *)v198 + 20);
          *(void *)(v197 + 168) = *((void *)v198 + 21);
          *(unsigned char *)(v197 + 176) = *((unsigned char *)v198 + 176);
          *(void *)(v197 + 184) = *((void *)v198 + 23);
          uint64_t v220 = *((void *)v198 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v221 = v219;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v220)
          {
            *(void *)(v197 + 192) = v220;
            *(void *)(v197 + 200) = *((void *)v198 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v197 + 192) = v198[12];
          }
          uint64_t v213 = v353;
          *(void *)(v197 + 208) = *((void *)v198 + 26);
          *(void *)(v197 + 216) = *((void *)v198 + 27);
          *(void *)(v197 + 224) = *((void *)v198 + 28);
          *(void *)(v197 + 232) = *((void *)v198 + 29);
          *(void *)(v197 + 240) = *((void *)v198 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v201 = *v198;
          long long v202 = v198[1];
          long long v203 = v198[3];
          *(_OWORD *)(v197 + 32) = v198[2];
          *(_OWORD *)(v197 + 48) = v203;
          *(_OWORD *)unint64_t v197 = v201;
          *(_OWORD *)(v197 + 16) = v202;
          long long v204 = v198[4];
          long long v205 = v198[5];
          long long v206 = v198[7];
          *(_OWORD *)(v197 + 96) = v198[6];
          *(_OWORD *)(v197 + 112) = v206;
          *(_OWORD *)(v197 + 64) = v204;
          *(_OWORD *)(v197 + 80) = v205;
          long long v207 = v198[8];
          long long v208 = v198[9];
          long long v209 = v198[11];
          *(_OWORD *)(v197 + 160) = v198[10];
          *(_OWORD *)(v197 + 176) = v209;
          *(_OWORD *)(v197 + 128) = v207;
          *(_OWORD *)(v197 + 144) = v208;
          long long v210 = v198[12];
          long long v211 = v198[13];
          long long v212 = v198[14];
          *(void *)(v197 + 240) = *((void *)v198 + 30);
          *(_OWORD *)(v197 + 208) = v211;
          *(_OWORD *)(v197 + 224) = v212;
          *(_OWORD *)(v197 + 192) = v210;
          uint64_t v213 = v353;
        }
        unint64_t v236 = (_OWORD *)((v197 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v237 = (long long *)(((unint64_t)v198 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v238 = *v237;
        *(_OWORD *)((char *)v236 + 9) = *(long long *)((char *)v237 + 9);
        *unint64_t v236 = v238;
        unint64_t v239 = (v197 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v240 = ((unint64_t)v198 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v241 = *(_OWORD *)v240;
        *(unsigned char *)(v239 + 16) = *(unsigned char *)(v240 + 16);
        *(_OWORD *)unint64_t v239 = v241;
        unint64_t v242 = (void *)((v197 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v243 = ((unint64_t)v198 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v244 = *(void *)v243;
        v243 += 15;
        *unint64_t v242 = v244;
        unint64_t v245 = (void *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v246 = *(void *)(v243 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v247 = *(void *)((v243 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v246, v247);
        *unint64_t v245 = v246;
        v245[1] = v247;
        unint64_t v248 = ((unint64_t)a2 + v359) & v213;
        v345(((unint64_t)a1 + v359) & v213, v248, AssociatedTypeWitness);
        unint64_t v390 = ((unint64_t)a1 + v359) & v213;
        unint64_t v249 = (v372 + v390) & v350;
        unint64_t v360 = v248;
        unint64_t v250 = (v372 + v248) & v350;
        v345(v249, v250, AssociatedTypeWitness);
        unint64_t v251 = (v361 + v249) & v368;
        uint64_t v252 = (v361 + v250) & v368;
        v343(v251, v252, v375);
        unint64_t v253 = (void *)((v371 + v251) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = (void *)((v371 + v252) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + v373) & v369;
        unint64_t v256 = ((unint64_t)v254 + v373) & v369;
        swift_bridgeObjectRetain();
        v344(v255, v256, v378);
        long long v257 = (void *)((v376 + v255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v258 = (void *)((v376 + v256) & 0xFFFFFFFFFFFFFFF8);
        void *v257 = *v258;
        uint64_t v259 = (void *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v260 = (void *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v259 = *v260;
        v259[1] = v260[1];
        uint64_t v261 = (void *)(v251 + v380);
        void *v261 = *(void *)(v252 + v380);
        v261[1] = *(void *)(v252 + v380 + 8);
        unint64_t v262 = (v379 + v251 + v380) & v370;
        unint64_t v263 = (v379 + v252 + v380) & v370;
        *(unsigned char *)unint64_t v262 = *(unsigned char *)v263;
        uint64_t v264 = v262 | 4;
        int v265 = *(_DWORD *)(v263 | 4);
        *(unsigned char *)(v264 + 4) = *(unsigned char *)((v263 | 4) + 4);
        *(_DWORD *)uint64_t v264 = v265;
        *(_WORD *)(v262 + 10) = *(_WORD *)(v263 + 0xA);
        unint64_t v396 = v262;
        unint64_t v266 = (v381 + v262) & v383;
        unint64_t v267 = (v381 + v263) & v383;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v120(v266, v267, v386);
        unint64_t v268 = (v382 + v266) & v383;
        unint64_t v269 = (v382 + v267) & v383;
        v120(v268, v269, v386);
        unint64_t v270 = (unsigned char *)(v268 + v366);
        *unint64_t v270 = *(unsigned char *)(v269 + v366);
        v270[1] = *(unsigned char *)(v269 + v366 + 1);
        v270[2] = *(unsigned char *)(v269 + v366 + 2);
        v270[3] = *(unsigned char *)(v269 + v366 + 3);
        v270[4] = *(unsigned char *)(v269 + v366 + 4);
        unint64_t v271 = (v268 + v366 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v272 = (v269 + v366 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v271 = *(void *)v272;
        *(void *)(v271 + 8) = *(void *)(v272 + 8);
        *(unsigned char *)(v271 + 16) = *(unsigned char *)(v272 + 16);
        *(unsigned char *)(v271 + 17) = *(unsigned char *)(v272 + 17);
        *(unsigned char *)(v271 + 18) = *(unsigned char *)(v272 + 18);
        *(unsigned char *)(v271 + 19) = *(unsigned char *)(v272 + 19);
        unint64_t v273 = (v271 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v274 = (v272 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v273 = *(void *)v274;
        *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
        *(unsigned char *)(v273 + 9) = *(unsigned char *)(v274 + 9);
        *(unsigned char *)(v273 + 10) = *(unsigned char *)(v274 + 10);
        *(unsigned char *)(v273 + 11) = *(unsigned char *)(v274 + 11);
        *(unsigned char *)(v273 + 12) = *(unsigned char *)(v274 + 12);
        long long v275 = (void *)((v271 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v276 = (void *)((v272 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v275 = *v276;
        unint64_t v277 = ((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v278 = ((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v277 = *(void *)v278;
        *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
        *(unsigned char *)(v277 + 9) = *(unsigned char *)(v278 + 9);
        long long v279 = (void *)((v384 + v277) & v383);
        long long v280 = (const void *)((v384 + v278) & v383);
        swift_bridgeObjectRetain();
        if (v342(v280, 1, v386))
        {
          memcpy(v279, v280, __n);
        }
        else
        {
          v120((unint64_t)v279, (unint64_t)v280, v386);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v367 + 56))(v279, 0, 1, v386);
        }
        long long v281 = (void *)(((unint64_t)v279 + v385) & 0xFFFFFFFFFFFFFFF8);
        long long v282 = (void *)(((unint64_t)v280 + v385) & 0xFFFFFFFFFFFFFFF8);
        *long long v281 = *v282;
        unint64_t v283 = ((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v284 = ((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v285 = *(void *)v284;
        *(unsigned char *)(v283 + 8) = *(unsigned char *)(v284 + 8);
        *(void *)unint64_t v283 = v285;
        uint64_t v286 = (void *)(((unint64_t)v281 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v287 = (void *)(((unint64_t)v282 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v286 = *v287;
        unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v289 = (uint64_t *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v290 = v289[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v290 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v288 = *(_OWORD *)v289;
        }
        else
        {
          uint64_t v291 = *v289;
          sub_10001EBB0(*v289, v290);
          *(void *)unint64_t v288 = v291;
          *(void *)(v288 + 8) = v290;
        }
        unint64_t v292 = (v288 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v293 = ((unint64_t)v289 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v294 = *(void *)v293;
        *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
        *(void *)unint64_t v292 = v294;
        *(unsigned char *)(v292 + 9) = *(unsigned char *)(v293 + 9);
        unint64_t v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v296 = (v293 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v297 = *(_DWORD *)v296;
        *(unsigned char *)(v295 + 4) = *(unsigned char *)(v296 + 4);
        *(_DWORD *)unint64_t v295 = v297;
        uint64_t v298 = (void *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v299 = (void *)((v293 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v298 = *v299;
        v298[1] = v299[1];
        unint64_t v300 = v396 + v357;
        unint64_t v301 = v263 + v357;
        unint64_t v302 = *(void *)(v263 + v357 + 16);
        if (v302 >= 0xFFFFFFFF) {
          LODWORD(v302) = -1;
        }
        int v303 = v302 - 1;
        swift_bridgeObjectRetain();
        if (v303 < 0)
        {
          *(void *)unint64_t v300 = *(void *)v301;
          *(unsigned char *)(v300 + 8) = *(unsigned char *)(v301 + 8);
          *(unsigned char *)(v300 + 9) = *(unsigned char *)(v301 + 9);
          uint64_t v317 = *(void *)(v301 + 16);
          swift_errorRetain();
          *(void *)(v300 + 16) = v317;
          uint64_t v318 = *(void *)(v301 + 24);
          swift_errorRetain();
          *(void *)(v300 + 24) = v318;
          *(unsigned char *)(v300 + 32) = *(unsigned char *)(v301 + 32);
          *(unsigned char *)(v300 + 33) = *(unsigned char *)(v301 + 33);
          *(unsigned char *)(v300 + 34) = *(unsigned char *)(v301 + 34);
          *(void *)(v300 + 40) = *(void *)(v301 + 40);
          *(void *)(v300 + 48) = *(void *)(v301 + 48);
          *(void *)(v300 + 56) = *(void *)(v301 + 56);
          *(void *)(v300 + 64) = *(void *)(v301 + 64);
          *(unsigned char *)(v300 + 72) = *(unsigned char *)(v301 + 72);
          *(void *)(v300 + 80) = *(void *)(v301 + 80);
          *(void *)(v300 + 88) = *(void *)(v301 + 88);
          long long v397 = *(void **)(v301 + 96);
          *(void *)(v300 + 96) = v397;
          *(unsigned char *)(v300 + 104) = *(unsigned char *)(v301 + 104);
          *(unsigned char *)(v300 + 105) = *(unsigned char *)(v301 + 105);
          *(void *)(v300 + 112) = *(void *)(v301 + 112);
          *(void *)(v300 + 120) = *(void *)(v301 + 120);
          *(void *)(v300 + 128) = *(void *)(v301 + 128);
          *(void *)(v300 + 136) = *(void *)(v301 + 136);
          *(void *)(v300 + 144) = *(void *)(v301 + 144);
          *(void *)(v300 + 152) = *(void *)(v301 + 152);
          *(void *)(v300 + 160) = *(void *)(v301 + 160);
          *(void *)(v300 + 168) = *(void *)(v301 + 168);
          *(unsigned char *)(v300 + 176) = *(unsigned char *)(v301 + 176);
          *(void *)(v300 + 184) = *(void *)(v301 + 184);
          uint64_t v388 = *(void *)(v301 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v319 = v397;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v388)
          {
            *(void *)(v300 + 192) = v388;
            *(void *)(v300 + 200) = *(void *)(v301 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v300 + 192) = *(_OWORD *)(v301 + 192);
          }
          unint64_t v316 = v365;
          *(void *)(v300 + 208) = *(void *)(v301 + 208);
          *(void *)(v300 + 216) = *(void *)(v301 + 216);
          *(void *)(v300 + 224) = *(void *)(v301 + 224);
          *(void *)(v300 + 232) = *(void *)(v301 + 232);
          *(void *)(v300 + 240) = *(void *)(v301 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v304 = *(_OWORD *)v301;
          long long v305 = *(_OWORD *)(v301 + 16);
          long long v306 = *(_OWORD *)(v301 + 48);
          *(_OWORD *)(v300 + 32) = *(_OWORD *)(v301 + 32);
          *(_OWORD *)(v300 + 48) = v306;
          *(_OWORD *)unint64_t v300 = v304;
          *(_OWORD *)(v300 + 16) = v305;
          long long v307 = *(_OWORD *)(v301 + 64);
          long long v308 = *(_OWORD *)(v301 + 80);
          long long v309 = *(_OWORD *)(v301 + 112);
          *(_OWORD *)(v300 + 96) = *(_OWORD *)(v301 + 96);
          *(_OWORD *)(v300 + 112) = v309;
          *(_OWORD *)(v300 + 64) = v307;
          *(_OWORD *)(v300 + 80) = v308;
          long long v310 = *(_OWORD *)(v301 + 128);
          long long v311 = *(_OWORD *)(v301 + 144);
          long long v312 = *(_OWORD *)(v301 + 176);
          *(_OWORD *)(v300 + 160) = *(_OWORD *)(v301 + 160);
          *(_OWORD *)(v300 + 176) = v312;
          *(_OWORD *)(v300 + 128) = v310;
          *(_OWORD *)(v300 + 144) = v311;
          long long v313 = *(_OWORD *)(v301 + 192);
          long long v314 = *(_OWORD *)(v301 + 208);
          long long v315 = *(_OWORD *)(v301 + 224);
          *(void *)(v300 + 240) = *(void *)(v301 + 240);
          *(_OWORD *)(v300 + 208) = v314;
          *(_OWORD *)(v300 + 224) = v315;
          *(_OWORD *)(v300 + 192) = v313;
          unint64_t v316 = v365;
        }
        unint64_t v320 = (_OWORD *)((v300 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v321 = (long long *)((v301 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v322 = *v321;
        *(_OWORD *)((char *)v320 + 9) = *(long long *)((char *)v321 + 9);
        *unint64_t v320 = v322;
        unint64_t v323 = (v300 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v324 = (v301 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v325 = *(_OWORD *)v324;
        *(unsigned char *)(v323 + 16) = *(unsigned char *)(v324 + 16);
        *(_OWORD *)unint64_t v323 = v325;
        uint64_t v326 = (void *)((v300 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v327 = (v301 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v328 = *(void *)v327;
        v327 += 15;
        void *v326 = v328;
        uint64_t v329 = (void *)(((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v330 = *(void *)(v327 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v331 = *(void *)((v327 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v330, v331);
        *uint64_t v329 = v330;
        v329[1] = v331;
        uint64_t v332 = (void *)((v348 + v390) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v333 = (void *)((v348 + v360) & 0xFFFFFFFFFFFFFFF8);
        void *v332 = *v333;
        uint64_t v334 = (void *)(((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v335 = (void *)(((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v334 = *v335;
        v334[1] = v335[1];
        char v136 = 1;
        unint64_t v24 = v316;
        break;
      case 2u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v41, AssociatedTypeWitness);
        *((unsigned char *)a1 + v3) = *((unsigned char *)v41 + v3);
        unint64_t v134 = ((unint64_t)a1 + v3) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v135 = ((unint64_t)v41 + v3) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v134 + 8) = *(void *)(v135 + 8);
        *(void *)(v134 + 16) = *(void *)(v135 + 16);
        char v136 = 2;
        break;
      case 3u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v41, AssociatedTypeWitness);
        unint64_t v137 = (void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        int v138 = (void *)(((unint64_t)v41 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        void *v137 = *v138;
        v137[1] = v138[1];
        char v136 = 3;
        break;
      case 4u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v41, AssociatedTypeWitness);
        *((unsigned char *)a1 + v3) = *((unsigned char *)v41 + v3);
        unint64_t v139 = ((unint64_t)a1 + v3) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v140 = ((unint64_t)v41 + v3) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v139 + 8) = *(void *)(v140 + 8);
        *(void *)(v139 + 16) = *(void *)(v140 + 16);
        char v136 = 4;
        break;
      case 5u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v41, AssociatedTypeWitness);
        unint64_t v141 = (void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v142 = (void *)(((unint64_t)v41 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v141 = *v142;
        v141[1] = v142[1];
        char v136 = 5;
        break;
      default:
        unint64_t v363 = v24;
        unint64_t v44 = v41;
        unint64_t v45 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16);
        v45(a1, v44, AssociatedTypeWitness);
        unint64_t v46 = ((unint64_t)a1 + v372) & v27;
        unint64_t v47 = ((unint64_t)v44 + v372) & v27;
        v45((_DWORD *)v46, (_DWORD *)v47, AssociatedTypeWitness);
        unint64_t v48 = (v46 + v3 + v10) & v368;
        unint64_t v49 = (v47 + v3 + v10) & v368;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v374 + 16))(v48, v49, v375);
        unint64_t v50 = (void *)((v371 + v48) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v51 = (void *)((v371 + v49) & 0xFFFFFFFFFFFFFFF8);
        void *v50 = *v51;
        unint64_t v52 = ((unint64_t)v50 + v373) & v369;
        unint64_t v53 = ((unint64_t)v51 + v373) & v369;
        unint64_t v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 16);
        swift_bridgeObjectRetain();
        v54(v52, v53, v378);
        unint64_t v55 = (void *)((v376 + v53) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v56 = (void *)((v376 + v52) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v56 = *v55;
        unint64_t v57 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v58 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v57 = *v58;
        v57[1] = v58[1];
        unint64_t v59 = (void *)(v380 + v48);
        *unint64_t v59 = *(void *)(v380 + v49);
        v59[1] = *(void *)(v380 + v49 + 8);
        unint64_t v60 = (v379 + v380 + v48) & v370;
        unint64_t v61 = (v379 + v380 + v49) & v370;
        *(unsigned char *)unint64_t v60 = *(unsigned char *)v61;
        uint64_t v62 = v60 | 4;
        int v63 = *(_DWORD *)(v61 | 4);
        *(unsigned char *)(v62 + 4) = *(unsigned char *)((v61 | 4) + 4);
        *(_DWORD *)uint64_t v62 = v63;
        *(_WORD *)(v60 + 10) = *(_WORD *)(v61 + 0xA);
        unint64_t v392 = v61;
        unint64_t v394 = v60;
        unint64_t v64 = (v381 + v60) & v383;
        unint64_t v65 = (v381 + v61) & v383;
        unint64_t v66 = *(void (**)(unint64_t, unint64_t, uint64_t))(v367 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66(v64, v65, v386);
        unint64_t v67 = (v382 + v65) & v383;
        v66((v382 + v64) & v383, v67, v386);
        uint64_t v68 = (unsigned char *)(((v382 + v64) & v383) + v366);
        unsigned char *v68 = *(unsigned char *)(v67 + v366);
        v68[1] = *(unsigned char *)(v67 + v366 + 1);
        v68[2] = *(unsigned char *)(v67 + v366 + 2);
        v68[3] = *(unsigned char *)(v67 + v366 + 3);
        v68[4] = *(unsigned char *)(v67 + v366 + 4);
        unint64_t v69 = (unint64_t)(v68 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v70 = (v67 + v366 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v69 = *(void *)v70;
        *(void *)(v69 + 8) = *(void *)(v70 + 8);
        *(unsigned char *)(v69 + 16) = *(unsigned char *)(v70 + 16);
        *(unsigned char *)(v69 + 17) = *(unsigned char *)(v70 + 17);
        *(unsigned char *)(v69 + 18) = *(unsigned char *)(v70 + 18);
        *(unsigned char *)(v69 + 19) = *(unsigned char *)(v70 + 19);
        unint64_t v71 = (v69 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v72 = (v70 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v71 = *(void *)v72;
        *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
        *(unsigned char *)(v71 + 9) = *(unsigned char *)(v72 + 9);
        *(unsigned char *)(v71 + 10) = *(unsigned char *)(v72 + 10);
        *(unsigned char *)(v71 + 11) = *(unsigned char *)(v72 + 11);
        *(unsigned char *)(v71 + 12) = *(unsigned char *)(v72 + 12);
        uint64_t v73 = (void *)((v70 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v74 = (void *)((v69 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v74 = *v73;
        unint64_t v75 = ((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v76 = ((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v75 = *(void *)v76;
        *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
        *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
        uint64_t v77 = (void *)((v384 + v75) & v383);
        uint64_t v78 = (const void *)((v384 + v76) & v383);
        uint64_t v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v367 + 48);
        swift_bridgeObjectRetain();
        if (v79(v78, 1, v386))
        {
          memcpy(v77, v78, __n);
        }
        else
        {
          v66((unint64_t)v77, (unint64_t)v78, v386);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v367 + 56))(v77, 0, 1, v386);
        }
        unint64_t v143 = (void *)(((unint64_t)v77 + v385) & 0xFFFFFFFFFFFFFFF8);
        int v144 = (void *)(((unint64_t)v78 + v385) & 0xFFFFFFFFFFFFFFF8);
        void *v143 = *v144;
        unint64_t v145 = ((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v146 = ((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v147 = *(void *)v146;
        *(unsigned char *)(v145 + 8) = *(unsigned char *)(v146 + 8);
        *(void *)unint64_t v145 = v147;
        long long v148 = (void *)(((unint64_t)v143 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v149 = (void *)(((unint64_t)v144 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v148 = *v149;
        unint64_t v150 = ((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8;
        long long v151 = (uint64_t *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v152 = v151[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v152 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v150 = *(_OWORD *)v151;
        }
        else
        {
          uint64_t v163 = *v151;
          sub_10001EBB0(*v151, v152);
          *(void *)unint64_t v150 = v163;
          *(void *)(v150 + 8) = v152;
        }
        unint64_t v164 = (v150 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v165 = ((unint64_t)v151 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v166 = *(void *)v165;
        *(unsigned char *)(v164 + 8) = *(unsigned char *)(v165 + 8);
        *(void *)unint64_t v164 = v166;
        *(unsigned char *)(v164 + 9) = *(unsigned char *)(v165 + 9);
        unint64_t v167 = (v164 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v168 = (v165 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v169 = *(_DWORD *)v168;
        *(unsigned char *)(v167 + 4) = *(unsigned char *)(v168 + 4);
        *(_DWORD *)unint64_t v167 = v169;
        int v170 = (void *)((v164 + 25) & 0xFFFFFFFFFFFFFFF8);
        long long v171 = (void *)((v165 + 25) & 0xFFFFFFFFFFFFFFF8);
        *int v170 = *v171;
        v170[1] = v171[1];
        unint64_t v172 = v16 + v394;
        long long v173 = (long long *)(v16 + v392);
        unint64_t v174 = *(void *)(v16 + v392 + 16);
        if (v174 >= 0xFFFFFFFF) {
          LODWORD(v174) = -1;
        }
        int v175 = v174 - 1;
        swift_bridgeObjectRetain();
        unint64_t v24 = v363;
        if (v175 < 0)
        {
          *(void *)unint64_t v172 = *(void *)v173;
          *(unsigned char *)(v172 + 8) = *((unsigned char *)v173 + 8);
          *(unsigned char *)(v172 + 9) = *((unsigned char *)v173 + 9);
          uint64_t v214 = *((void *)v173 + 2);
          swift_errorRetain();
          *(void *)(v172 + 16) = v214;
          uint64_t v215 = *((void *)v173 + 3);
          swift_errorRetain();
          *(void *)(v172 + 24) = v215;
          *(unsigned char *)(v172 + 32) = *((unsigned char *)v173 + 32);
          *(unsigned char *)(v172 + 33) = *((unsigned char *)v173 + 33);
          *(unsigned char *)(v172 + 34) = *((unsigned char *)v173 + 34);
          *(void *)(v172 + 40) = *((void *)v173 + 5);
          *(void *)(v172 + 48) = *((void *)v173 + 6);
          *(void *)(v172 + 56) = *((void *)v173 + 7);
          *(void *)(v172 + 64) = *((void *)v173 + 8);
          *(unsigned char *)(v172 + 72) = *((unsigned char *)v173 + 72);
          *(void *)(v172 + 80) = *((void *)v173 + 10);
          *(void *)(v172 + 88) = *((void *)v173 + 11);
          long long v395 = (void *)*((void *)v173 + 12);
          *(void *)(v172 + 96) = v395;
          *(unsigned char *)(v172 + 104) = *((unsigned char *)v173 + 104);
          *(unsigned char *)(v172 + 105) = *((unsigned char *)v173 + 105);
          *(void *)(v172 + 112) = *((void *)v173 + 14);
          *(void *)(v172 + 120) = *((void *)v173 + 15);
          *(void *)(v172 + 128) = *((void *)v173 + 16);
          *(void *)(v172 + 136) = *((void *)v173 + 17);
          *(void *)(v172 + 144) = *((void *)v173 + 18);
          *(void *)(v172 + 152) = *((void *)v173 + 19);
          *(void *)(v172 + 160) = *((void *)v173 + 20);
          *(void *)(v172 + 168) = *((void *)v173 + 21);
          *(unsigned char *)(v172 + 176) = *((unsigned char *)v173 + 176);
          *(void *)(v172 + 184) = *((void *)v173 + 23);
          uint64_t v387 = *((void *)v173 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v216 = v395;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v387)
          {
            *(void *)(v172 + 192) = v387;
            *(void *)(v172 + 200) = *((void *)v173 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v172 + 192) = v173[12];
          }
          unint64_t v24 = v363;
          *(void *)(v172 + 208) = *((void *)v173 + 26);
          *(void *)(v172 + 216) = *((void *)v173 + 27);
          *(void *)(v172 + 224) = *((void *)v173 + 28);
          *(void *)(v172 + 232) = *((void *)v173 + 29);
          *(void *)(v172 + 240) = *((void *)v173 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v176 = *v173;
          long long v177 = v173[1];
          long long v178 = v173[3];
          *(_OWORD *)(v172 + 32) = v173[2];
          *(_OWORD *)(v172 + 48) = v178;
          *(_OWORD *)unint64_t v172 = v176;
          *(_OWORD *)(v172 + 16) = v177;
          long long v179 = v173[4];
          long long v180 = v173[5];
          long long v181 = v173[7];
          *(_OWORD *)(v172 + 96) = v173[6];
          *(_OWORD *)(v172 + 112) = v181;
          *(_OWORD *)(v172 + 64) = v179;
          *(_OWORD *)(v172 + 80) = v180;
          long long v182 = v173[8];
          long long v183 = v173[9];
          long long v184 = v173[11];
          *(_OWORD *)(v172 + 160) = v173[10];
          *(_OWORD *)(v172 + 176) = v184;
          *(_OWORD *)(v172 + 128) = v182;
          *(_OWORD *)(v172 + 144) = v183;
          long long v185 = v173[12];
          long long v186 = v173[13];
          long long v187 = v173[14];
          *(void *)(v172 + 240) = *((void *)v173 + 30);
          *(_OWORD *)(v172 + 208) = v186;
          *(_OWORD *)(v172 + 224) = v187;
          *(_OWORD *)(v172 + 192) = v185;
        }
        uint64_t v222 = (_OWORD *)((v172 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v223 = (long long *)(((unint64_t)v173 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v224 = *v223;
        *(_OWORD *)((char *)v222 + 9) = *(long long *)((char *)v223 + 9);
        _OWORD *v222 = v224;
        unint64_t v225 = (v172 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v226 = ((unint64_t)v173 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v227 = *(_OWORD *)v226;
        *(unsigned char *)(v225 + 16) = *(unsigned char *)(v226 + 16);
        *(_OWORD *)unint64_t v225 = v227;
        unint64_t v228 = (void *)((v172 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = ((unint64_t)v173 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v230 = *(void *)v229;
        v229 += 15;
        void *v228 = v230;
        unint64_t v231 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v232 = *(void *)(v229 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v233 = *(void *)((v229 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v232, v233);
        char v136 = 0;
        void *v231 = v232;
        v231[1] = v233;
        uint64_t v234 = (void *)(((unint64_t)a1 + v358 + 7) & 0xFFFFFFFFFFFFFFF8);
        int v235 = (void *)(((unint64_t)a2 + v358 + 7) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v234 = *v235;
        v234[1] = v235[1];
        break;
    }
    *((unsigned char *)a1 + v24) = v136;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100647AA8(uint64_t a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v278 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v278 + 80);
  uint64_t v271 = v3 + v4;
  uint64_t v273 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v273 - 8);
  uint64_t v275 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = a2;
  uint64_t v276 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v276 + 80);
  uint64_t v11 = v6 | v10 | 7;
  uint64_t v269 = v3 + v11;
  uint64_t v270 = *(void *)(v8 + 64) + 7;
  uint64_t v272 = v10 + 8;
  uint64_t v274 = *(void *)(v276 + 64) + 7;
  unint64_t v12 = ((((v274 + ((v10 + 8 + (v270 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v13 = sub_10096B0E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84)) {
    size_t v17 = *(void *)(v14 + 64);
  }
  else {
    size_t v17 = v16 + 1;
  }
  unint64_t v18 = ((((((v15 | 7) + 16 + v12 + ((v3 + v11 + ((v3 + v4) & ~v4)) & ~v11)) & ~(v15 | 7))
         + ((((((((((v17
                   + 7
                   + ((v15
                     + 10
                     + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 23;
  unint64_t v20 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v18 + 16;
  uint64_t v22 = v11 | v4 | v15;
  unint64_t v267 = v21;
  unint64_t v23 = v21 + v22;
  unint64_t v24 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v25 = ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 > v20) {
    unint64_t v20 = v24;
  }
  if (v20 <= v25) {
    unint64_t v26 = v25;
  }
  else {
    unint64_t v26 = v20;
  }
  unsigned int v27 = *((unsigned __int8 *)v9 + v26);
  if (v27 >= 6 && v26 != 0) {
    unsigned int v27 = *v9 + 6;
  }
  uint64_t v29 = ~v4;
  switch(v27)
  {
    case 1u:
      unint64_t v246 = v26;
      uint64_t v233 = ~v22;
      unint64_t v237 = v19;
      size_t __na = v17;
      size_t v264 = v17 + 7;
      unint64_t v266 = ((((((((((v17
                     + 7
                     + ((v15
                       + 10
                       + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v268 = *(void *)(v14 + 64);
      unint64_t v249 = ((((v274 + ((v10 + 8 + (v270 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v60 = *(void (**)(uint64_t, unint64_t, uint64_t))(v278 + 32);
      uint64_t v254 = v7;
      uint64_t v241 = v13;
      uint64_t v248 = *(void *)(v13 - 8);
      uint64_t v256 = ~v15;
      uint64_t v260 = v16 + v15;
      uint64_t v262 = v15 + 10;
      uint64_t v258 = v15 + 12;
      uint64_t v251 = ~(v15 | 7);
      uint64_t v253 = (v15 | 7) + 16;
      v60(a1, (unint64_t)v9, AssociatedTypeWitness);
      unint64_t v61 = v9;
      uint64_t v62 = (v271 + a1) & v29;
      uint64_t v244 = v61;
      uint64_t v235 = v29;
      unint64_t v63 = ((unint64_t)v61 + v271) & v29;
      uint64_t v234 = v60;
      v60(v62, v63, AssociatedTypeWitness);
      uint64_t v64 = (v62 + v3 + v11) & ~v11;
      uint64_t v236 = ~v11;
      unint64_t v65 = (v63 + v3 + v11) & ~v11;
      uint64_t v232 = *(void (**)(uint64_t, unint64_t, uint64_t))(v275 + 32);
      v232(v64, v65, v273);
      unint64_t v66 = (void *)((v270 + v64) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v67 = (void *)((v270 + v65) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v66 = *v67;
      unint64_t v68 = ((unint64_t)v66 + v272) & ~v10;
      uint64_t v242 = ~v10;
      unint64_t v69 = ((unint64_t)v67 + v272) & ~v10;
      unint64_t v231 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 32);
      v231(v68, v69, v254);
      unint64_t v70 = (void *)((v274 + v68) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v71 = (void *)((v274 + v69) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v70 = *v71;
      *(_OWORD *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v12 + v64) = *(_OWORD *)(v12 + v65);
      unint64_t v72 = (v253 + v12 + v64) & v251;
      unint64_t v73 = (v253 + v12 + v65) & v251;
      *(unsigned char *)unint64_t v72 = *(unsigned char *)v73;
      uint64_t v74 = v72 | 4;
      int v75 = *(_DWORD *)(v73 | 4);
      *(unsigned char *)(v74 + 4) = *(unsigned char *)((v73 | 4) + 4);
      *(_DWORD *)uint64_t v74 = v75;
      *(_WORD *)(v72 + 10) = *(_WORD *)(v73 + 0xA);
      unint64_t v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v248 + 32);
      v76((v258 + v72) & v256, (v258 + v73) & v256, v241);
      unint64_t v77 = (v260 + ((v258 + v72) & v256)) & v256;
      unint64_t v78 = (v260 + ((v258 + v73) & v256)) & v256;
      v76(v77, v78, v241);
      uint64_t v79 = (unsigned char *)(v77 + v268);
      *uint64_t v79 = *(unsigned char *)(v78 + v268);
      v79[1] = *(unsigned char *)(v78 + v268 + 1);
      v79[2] = *(unsigned char *)(v78 + v268 + 2);
      v79[3] = *(unsigned char *)(v78 + v268 + 3);
      v79[4] = *(unsigned char *)(v78 + v268 + 4);
      unint64_t v80 = (v77 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v81 = (v78 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v80 = *(_OWORD *)v81;
      *(unsigned char *)(v80 + 16) = *(unsigned char *)(v81 + 16);
      *(unsigned char *)(v80 + 17) = *(unsigned char *)(v81 + 17);
      *(unsigned char *)(v80 + 18) = *(unsigned char *)(v81 + 18);
      *(unsigned char *)(v80 + 19) = *(unsigned char *)(v81 + 19);
      unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v83 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v82 = *(void *)v83;
      *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
      *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
      *(unsigned char *)(v82 + 10) = *(unsigned char *)(v83 + 10);
      *(unsigned char *)(v82 + 11) = *(unsigned char *)(v83 + 11);
      *(unsigned char *)(v82 + 12) = *(unsigned char *)(v83 + 12);
      unint64_t v84 = (void *)((v81 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v85 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v85 = *v84;
      unint64_t v86 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v87 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v86 = *(void *)v87;
      *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
      *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
      unint64_t v88 = (void *)((v262 + v86) & v256);
      uint64_t v89 = (const void *)((v262 + v87) & v256);
      uint64_t v230 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v248 + 48);
      unint64_t v229 = v76;
      if (v230(v89, 1, v241))
      {
        memcpy(v88, v89, __na);
      }
      else
      {
        v76((unint64_t)v88, (unint64_t)v89, v241);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v88, 0, 1, v241);
      }
      unint64_t v129 = (void *)(((unint64_t)v88 + v264) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v130 = (void *)(((unint64_t)v89 + v264) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v129 = *v130;
      unint64_t v131 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v132 = ((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v133 = *(void *)v132;
      *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
      *(void *)unint64_t v131 = v133;
      unint64_t v134 = (void *)(((unint64_t)v129 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v135 = (void *)(((unint64_t)v130 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v134 = *v135;
      char v136 = (_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v137 = (_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v136 = *v137;
      unint64_t v138 = ((unint64_t)v136 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v139 = ((unint64_t)v137 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v140 = *(void *)v139;
      *(unsigned char *)(v138 + 8) = *(unsigned char *)(v139 + 8);
      *(void *)unint64_t v138 = v140;
      *(unsigned char *)(v138 + 9) = *(unsigned char *)(v139 + 9);
      unint64_t v141 = (v138 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v142 = (v139 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v133) = *(_DWORD *)v142;
      *(unsigned char *)(v141 + 4) = *(unsigned char *)(v142 + 4);
      *(_DWORD *)unint64_t v141 = v133;
      *(_OWORD *)((v138 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v139 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v143 = v266 + v72;
      long long v144 = *(_OWORD *)(v266 + v73 + 112);
      long long v146 = *(_OWORD *)(v266 + v73 + 64);
      long long v145 = *(_OWORD *)(v266 + v73 + 80);
      *(_OWORD *)(v143 + 96) = *(_OWORD *)(v266 + v73 + 96);
      *(_OWORD *)(v143 + 112) = v144;
      *(_OWORD *)(v143 + 64) = v146;
      *(_OWORD *)(v143 + 80) = v145;
      long long v147 = *(_OWORD *)(v266 + v73 + 176);
      long long v149 = *(_OWORD *)(v266 + v73 + 128);
      long long v148 = *(_OWORD *)(v266 + v73 + 144);
      *(_OWORD *)(v143 + 160) = *(_OWORD *)(v266 + v73 + 160);
      *(_OWORD *)(v143 + 176) = v147;
      *(_OWORD *)(v143 + 128) = v149;
      *(_OWORD *)(v143 + 144) = v148;
      long long v151 = *(_OWORD *)(v266 + v73 + 208);
      long long v150 = *(_OWORD *)(v266 + v73 + 224);
      long long v152 = *(_OWORD *)(v266 + v73 + 192);
      *(void *)(v143 + 240) = *(void *)(v266 + v73 + 240);
      *(_OWORD *)(v143 + 208) = v151;
      *(_OWORD *)(v143 + 224) = v150;
      *(_OWORD *)(v143 + 192) = v152;
      long long v153 = *(_OWORD *)(v266 + v73);
      long long v154 = *(_OWORD *)(v266 + v73 + 16);
      long long v155 = *(_OWORD *)(v266 + v73 + 48);
      *(_OWORD *)(v143 + 32) = *(_OWORD *)(v266 + v73 + 32);
      *(_OWORD *)(v143 + 48) = v155;
      *(_OWORD *)unint64_t v143 = v153;
      *(_OWORD *)(v143 + 16) = v154;
      unint64_t v156 = (_OWORD *)((v266 + v72 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v157 = (long long *)((v266 + v73 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v158 = *v157;
      *(_OWORD *)((char *)v156 + 9) = *(long long *)((char *)v157 + 9);
      *unint64_t v156 = v158;
      unint64_t v159 = (v266 + v72 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v266 + v73 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v161 = *(_OWORD *)v160;
      *(unsigned char *)(v159 + 16) = *(unsigned char *)(v160 + 16);
      *(_OWORD *)unint64_t v159 = v161;
      unint64_t v162 = (void *)((v266 + v72 + 311) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v163 = (void *)((v266 + v73 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v162 = *v163;
      *(_OWORD *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v164 = (v23 + a1) & v233;
      unint64_t v165 = ((unint64_t)v244 + v23) & v233;
      v234(v164, v165, AssociatedTypeWitness);
      v234((v271 + v164) & v235, (v271 + v165) & v235, AssociatedTypeWitness);
      uint64_t v166 = (v269 + ((v271 + v164) & v235)) & v236;
      uint64_t v167 = (v269 + ((v271 + v165) & v235)) & v236;
      v232(v166, v167, v273);
      unint64_t v168 = (void *)((v270 + v166) & 0xFFFFFFFFFFFFFFF8);
      int v169 = (void *)((v270 + v167) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + v272) & v242;
      unint64_t v171 = ((unint64_t)v169 + v272) & v242;
      v231(v170, v171, v254);
      unint64_t v172 = (void *)((v274 + v170) & 0xFFFFFFFFFFFFFFF8);
      long long v173 = (void *)((v274 + v171) & 0xFFFFFFFFFFFFFFF8);
      void *v172 = *v173;
      *(_OWORD *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v166 + v249) = *(_OWORD *)(v167 + v249);
      unint64_t v174 = (v253 + v166 + v249) & v251;
      unint64_t v175 = (v253 + v167 + v249) & v251;
      *(unsigned char *)unint64_t v174 = *(unsigned char *)v175;
      uint64_t v176 = v174 | 4;
      int v177 = *(_DWORD *)(v175 | 4);
      *(unsigned char *)(v176 + 4) = *(unsigned char *)((v175 | 4) + 4);
      *(_DWORD *)uint64_t v176 = v177;
      *(_WORD *)(v174 + 10) = *(_WORD *)(v175 + 0xA);
      v229((v258 + v174) & v256, (v258 + v175) & v256, v241);
      unint64_t v178 = (v260 + ((v258 + v174) & v256)) & v256;
      unint64_t v179 = (v260 + ((v258 + v175) & v256)) & v256;
      v229(v178, v179, v241);
      long long v180 = (unsigned char *)(v178 + v268);
      *long long v180 = *(unsigned char *)(v179 + v268);
      v180[1] = *(unsigned char *)(v179 + v268 + 1);
      v180[2] = *(unsigned char *)(v179 + v268 + 2);
      v180[3] = *(unsigned char *)(v179 + v268 + 3);
      v180[4] = *(unsigned char *)(v179 + v268 + 4);
      unint64_t v181 = (v178 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v182 = (v179 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v181 = *(_OWORD *)v182;
      *(unsigned char *)(v181 + 16) = *(unsigned char *)(v182 + 16);
      *(unsigned char *)(v181 + 17) = *(unsigned char *)(v182 + 17);
      *(unsigned char *)(v181 + 18) = *(unsigned char *)(v182 + 18);
      *(unsigned char *)(v181 + 19) = *(unsigned char *)(v182 + 19);
      unint64_t v183 = (v181 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v184 = (v182 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v183 = *(void *)v184;
      *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
      *(unsigned char *)(v183 + 9) = *(unsigned char *)(v184 + 9);
      *(unsigned char *)(v183 + 10) = *(unsigned char *)(v184 + 10);
      *(unsigned char *)(v183 + 11) = *(unsigned char *)(v184 + 11);
      *(unsigned char *)(v183 + 12) = *(unsigned char *)(v184 + 12);
      long long v185 = (void *)((v181 + 47) & 0xFFFFFFFFFFFFFFF8);
      long long v186 = (void *)((v182 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v185 = *v186;
      unint64_t v187 = ((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v188 = ((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v187 = *(void *)v188;
      *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
      *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
      unint64_t v189 = (void *)((v262 + v187) & v256);
      unint64_t v190 = (const void *)((v262 + v188) & v256);
      if (v230(v190, 1, v241))
      {
        memcpy(v189, v190, __na);
      }
      else
      {
        v229((unint64_t)v189, (unint64_t)v190, v241);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v189, 0, 1, v241);
      }
      uint64_t v191 = (void *)(((unint64_t)v189 + v264) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v192 = (void *)(((unint64_t)v190 + v264) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v191 = *v192;
      unint64_t v193 = ((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v194 = ((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v195 = *(void *)v194;
      *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
      *(void *)unint64_t v193 = v195;
      unint64_t v196 = (void *)(((unint64_t)v191 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v197 = (void *)(((unint64_t)v192 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v196 = *v197;
      long long v198 = (_OWORD *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v199 = (_OWORD *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v198 = *v199;
      unint64_t v200 = ((unint64_t)v198 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v201 = ((unint64_t)v199 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v202 = *(void *)v201;
      *(unsigned char *)(v200 + 8) = *(unsigned char *)(v201 + 8);
      *(void *)unint64_t v200 = v202;
      *(unsigned char *)(v200 + 9) = *(unsigned char *)(v201 + 9);
      unint64_t v203 = (v200 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v204 = (v201 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v195) = *(_DWORD *)v204;
      *(unsigned char *)(v203 + 4) = *(unsigned char *)(v204 + 4);
      *(_DWORD *)unint64_t v203 = v195;
      *(_OWORD *)((v200 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v201 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v205 = v174 + v266;
      long long v206 = *(_OWORD *)(v175 + v266 + 112);
      long long v208 = *(_OWORD *)(v175 + v266 + 64);
      long long v207 = *(_OWORD *)(v175 + v266 + 80);
      *(_OWORD *)(v205 + 96) = *(_OWORD *)(v175 + v266 + 96);
      *(_OWORD *)(v205 + 112) = v206;
      *(_OWORD *)(v205 + 64) = v208;
      *(_OWORD *)(v205 + 80) = v207;
      long long v209 = *(_OWORD *)(v175 + v266 + 176);
      long long v211 = *(_OWORD *)(v175 + v266 + 128);
      long long v210 = *(_OWORD *)(v175 + v266 + 144);
      *(_OWORD *)(v205 + 160) = *(_OWORD *)(v175 + v266 + 160);
      *(_OWORD *)(v205 + 176) = v209;
      *(_OWORD *)(v205 + 128) = v211;
      *(_OWORD *)(v205 + 144) = v210;
      long long v213 = *(_OWORD *)(v175 + v266 + 208);
      long long v212 = *(_OWORD *)(v175 + v266 + 224);
      long long v214 = *(_OWORD *)(v175 + v266 + 192);
      *(void *)(v205 + 240) = *(void *)(v175 + v266 + 240);
      *(_OWORD *)(v205 + 208) = v213;
      *(_OWORD *)(v205 + 224) = v212;
      *(_OWORD *)(v205 + 192) = v214;
      long long v215 = *(_OWORD *)(v175 + v266);
      long long v216 = *(_OWORD *)(v175 + v266 + 16);
      long long v217 = *(_OWORD *)(v175 + v266 + 48);
      *(_OWORD *)(v205 + 32) = *(_OWORD *)(v175 + v266 + 32);
      *(_OWORD *)(v205 + 48) = v217;
      *(_OWORD *)unint64_t v205 = v215;
      *(_OWORD *)(v205 + 16) = v216;
      uint64_t v218 = (_OWORD *)((v174 + v266 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v219 = (long long *)((v175 + v266 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v220 = *v219;
      *(_OWORD *)((char *)v218 + 9) = *(long long *)((char *)v219 + 9);
      _OWORD *v218 = v220;
      unint64_t v221 = (v174 + v266 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v222 = (v175 + v266 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v223 = *(_OWORD *)v222;
      *(unsigned char *)(v221 + 16) = *(unsigned char *)(v222 + 16);
      *(_OWORD *)unint64_t v221 = v223;
      long long v224 = (void *)((v175 + v266 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v225 = (void *)((v174 + v266 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v225 = *v224;
      *(_OWORD *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v226 = (void *)((v237 + v165) & 0xFFFFFFFFFFFFFFF8);
      long long v227 = (void *)((v237 + v164) & 0xFFFFFFFFFFFFFFF8);
      *long long v227 = *v226;
      unint64_t v91 = (_OWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 1;
      uint64_t v90 = a1;
      unint64_t v26 = v246;
      break;
    case 2u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v9 + v3);
      unint64_t v91 = (_OWORD *)(((v3 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
      unint64_t v92 = (_OWORD *)((((unint64_t)v9 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
      char v93 = 2;
      break;
    case 3u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      unint64_t v91 = (_OWORD *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v9 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 3;
      break;
    case 4u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v9 + v3);
      unint64_t v91 = (_OWORD *)(((v3 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
      unint64_t v92 = (_OWORD *)((((unint64_t)v9 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
      char v93 = 4;
      break;
    case 5u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      unint64_t v91 = (_OWORD *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v9 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 5;
      break;
    default:
      size_t __n = v17;
      size_t v263 = v17 + 7;
      unint64_t v265 = ((((((((((v17
                     + 7
                     + ((v15
                       + 10
                       + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v245 = v26;
      unint64_t v30 = *(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32);
      uint64_t v240 = v13;
      uint64_t v247 = *(void *)(v13 - 8);
      uint64_t v259 = v16 + v15;
      uint64_t v261 = v15 + 10;
      uint64_t v255 = ~v15;
      uint64_t v257 = v15 + 12;
      uint64_t v250 = ~(v15 | 7);
      uint64_t v252 = (v15 | 7) + 16;
      v30(a1, v9, AssociatedTypeWitness);
      unint64_t v31 = v9;
      uint64_t v32 = (v271 + a1) & v29;
      unint64_t v243 = v31;
      unint64_t v33 = ((unint64_t)v31 + v271) & v29;
      v30(v32, (_DWORD *)v33, AssociatedTypeWitness);
      uint64_t v34 = (v32 + v3 + v11) & ~v11;
      unint64_t v35 = (v33 + v3 + v11) & ~v11;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v275 + 32))(v34, v35, v273);
      unint64_t v36 = (void *)((v270 + v34) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v37 = (void *)((v270 + v35) & 0xFFFFFFFFFFFFFFF8);
      void *v36 = *v37;
      unint64_t v38 = ((unint64_t)v36 + v272) & ~v10;
      unint64_t v39 = ((unint64_t)v37 + v272) & ~v10;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 32))(v38, v39, v7);
      uint64_t v40 = (void *)((v274 + v38) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v41 = (void *)((v274 + v39) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v40 = *v41;
      *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v12 + v34) = *(_OWORD *)(v12 + v35);
      unint64_t v42 = (v252 + v12 + v34) & v250;
      unint64_t v43 = (v252 + v12 + v35) & v250;
      *(unsigned char *)unint64_t v42 = *(unsigned char *)v43;
      uint64_t v44 = v42 | 4;
      int v45 = *(_DWORD *)(v43 | 4);
      *(unsigned char *)(v44 + 4) = *(unsigned char *)((v43 | 4) + 4);
      *(_DWORD *)uint64_t v44 = v45;
      *(_WORD *)(v42 + 10) = *(_WORD *)(v43 + 0xA);
      unint64_t v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v247 + 32);
      v46((v257 + v42) & v255, (v257 + v43) & v255, v240);
      unint64_t v47 = (v259 + ((v257 + v42) & v255)) & v255;
      unint64_t v48 = (v259 + ((v257 + v43) & v255)) & v255;
      v46(v47, v48, v240);
      unint64_t v49 = (unsigned char *)(v47 + v16);
      *unint64_t v49 = *(unsigned char *)(v48 + v16);
      v49[1] = *(unsigned char *)(v48 + v16 + 1);
      v49[2] = *(unsigned char *)(v48 + v16 + 2);
      v49[3] = *(unsigned char *)(v48 + v16 + 3);
      v49[4] = *(unsigned char *)(v48 + v16 + 4);
      unint64_t v50 = (v47 + v16 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = (v48 + v16 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
      *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
      *(unsigned char *)(v50 + 17) = *(unsigned char *)(v51 + 17);
      *(unsigned char *)(v50 + 18) = *(unsigned char *)(v51 + 18);
      *(unsigned char *)(v50 + 19) = *(unsigned char *)(v51 + 19);
      unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (v51 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v52 = *(void *)v53;
      *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
      *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
      *(unsigned char *)(v52 + 10) = *(unsigned char *)(v53 + 10);
      *(unsigned char *)(v52 + 11) = *(unsigned char *)(v53 + 11);
      *(unsigned char *)(v52 + 12) = *(unsigned char *)(v53 + 12);
      unint64_t v54 = (void *)((v51 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v55 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v55 = *v54;
      unint64_t v56 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v57 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v56 = *(void *)v57;
      *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
      *(unsigned char *)(v56 + 9) = *(unsigned char *)(v57 + 9);
      unint64_t v58 = (void *)((v261 + v56) & v255);
      unint64_t v59 = (const void *)((v261 + v57) & v255);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v247 + 48))(v59, 1, v240))
      {
        memcpy(v58, v59, __n);
      }
      else
      {
        v46((unint64_t)v58, (unint64_t)v59, v240);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v247 + 56))(v58, 0, 1, v240);
      }
      char v93 = 0;
      unint64_t v94 = (void *)(((unint64_t)v58 + v263) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v95 = (void *)(((unint64_t)v59 + v263) & 0xFFFFFFFFFFFFFFF8);
      void *v94 = *v95;
      unint64_t v96 = ((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v97 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v98 = *(void *)v97;
      *(unsigned char *)(v96 + 8) = *(unsigned char *)(v97 + 8);
      *(void *)unint64_t v96 = v98;
      uint64_t v99 = (void *)(((unint64_t)v94 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v100 = (void *)(((unint64_t)v95 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v99 = *v100;
      unint64_t v101 = (_OWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v102 = (_OWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v101 = *v102;
      unint64_t v103 = ((unint64_t)v101 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = ((unint64_t)v102 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v105 = *(void *)v104;
      *(unsigned char *)(v103 + 8) = *(unsigned char *)(v104 + 8);
      *(void *)unint64_t v103 = v105;
      *(unsigned char *)(v103 + 9) = *(unsigned char *)(v104 + 9);
      unint64_t v106 = (v103 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v107 = (v104 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v98) = *(_DWORD *)v107;
      *(unsigned char *)(v106 + 4) = *(unsigned char *)(v107 + 4);
      *(_DWORD *)unint64_t v106 = v98;
      *(_OWORD *)((v103 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v104 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v108 = v265 + v42;
      long long v109 = *(_OWORD *)(v265 + v43 + 112);
      long long v111 = *(_OWORD *)(v265 + v43 + 64);
      long long v110 = *(_OWORD *)(v265 + v43 + 80);
      *(_OWORD *)(v108 + 96) = *(_OWORD *)(v265 + v43 + 96);
      *(_OWORD *)(v108 + 112) = v109;
      *(_OWORD *)(v108 + 64) = v111;
      *(_OWORD *)(v108 + 80) = v110;
      long long v112 = *(_OWORD *)(v265 + v43 + 176);
      long long v114 = *(_OWORD *)(v265 + v43 + 128);
      long long v113 = *(_OWORD *)(v265 + v43 + 144);
      *(_OWORD *)(v108 + 160) = *(_OWORD *)(v265 + v43 + 160);
      *(_OWORD *)(v108 + 176) = v112;
      *(_OWORD *)(v108 + 128) = v114;
      *(_OWORD *)(v108 + 144) = v113;
      long long v116 = *(_OWORD *)(v265 + v43 + 208);
      long long v115 = *(_OWORD *)(v265 + v43 + 224);
      long long v117 = *(_OWORD *)(v265 + v43 + 192);
      *(void *)(v108 + 240) = *(void *)(v265 + v43 + 240);
      *(_OWORD *)(v108 + 208) = v116;
      *(_OWORD *)(v108 + 224) = v115;
      *(_OWORD *)(v108 + 192) = v117;
      long long v118 = *(_OWORD *)(v265 + v43);
      long long v119 = *(_OWORD *)(v265 + v43 + 16);
      long long v120 = *(_OWORD *)(v265 + v43 + 48);
      *(_OWORD *)(v108 + 32) = *(_OWORD *)(v265 + v43 + 32);
      *(_OWORD *)(v108 + 48) = v120;
      *(_OWORD *)unint64_t v108 = v118;
      *(_OWORD *)(v108 + 16) = v119;
      unint64_t v121 = (_OWORD *)((v265 + v42 + 255) & 0xFFFFFFFFFFFFFFF8);
      id v122 = (long long *)((v265 + v43 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v123 = *v122;
      *(_OWORD *)((char *)v121 + 9) = *(long long *)((char *)v122 + 9);
      *unint64_t v121 = v123;
      unint64_t v124 = (v265 + v42 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = (v265 + v43 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v126 = *(_OWORD *)v125;
      *(unsigned char *)(v124 + 16) = *(unsigned char *)(v125 + 16);
      *(_OWORD *)unint64_t v124 = v126;
      id v127 = (void *)((v265 + v42 + 311) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (void *)((v265 + v43 + 311) & 0xFFFFFFFFFFFFFFF8);
      void *v127 = *v128;
      *(_OWORD *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v90 = a1;
      unint64_t v91 = (_OWORD *)((a1 + v267 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v26 = v245;
      unint64_t v92 = (_OWORD *)(((unint64_t)v243 + v267 + 7) & 0xFFFFFFFFFFFFFFF8);
      break;
  }
  *unint64_t v91 = *v92;
  *(unsigned char *)(v90 + v26) = v93;
  return v90;
}

_DWORD *sub_100648E80(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v306 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v306 + 80);
    uint64_t v290 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v292 = v6;
    uint64_t v293 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v296 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v296 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v276 = v3 + v10;
    uint64_t v289 = *(void *)(v6 + 64) + 7;
    uint64_t v291 = v9 + 8;
    uint64_t v294 = *(void *)(v8 + 64) + 7;
    unint64_t v297 = ((((v294 + ((v9 + 8 + (v289 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v302 = sub_10096B0E0();
    uint64_t v11 = *(void *)(v302 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v295 = (v12 | 7) + 16;
    uint64_t v298 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v299 = v13 + v12;
    uint64_t v301 = v12 + 10;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v302 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v15 = v14 + 7;
    unint64_t v16 = ((((((((((v14
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v17 = (((((v295 + v297 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7)) + v16 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = v17 + 23;
    unint64_t v19 = ((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v17 + 16;
    uint64_t v21 = v10 | v4 | v12;
    unint64_t v274 = v20;
    unint64_t v275 = v20 + v21;
    unint64_t v22 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    unint64_t v277 = v18;
    unint64_t v23 = ((((v18 + ((v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v22 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 > v19) {
      unint64_t v19 = v22;
    }
    if (v19 > v23) {
      unint64_t v23 = v19;
    }
    unsigned int v24 = *((unsigned __int8 *)v2 + v23);
    unint64_t v305 = v23;
    if (v24 >= 6 && v23 != 0) {
      unsigned int v24 = *v2 + 6;
    }
    uint64_t v285 = ~v4;
    uint64_t v286 = ~v10;
    uint64_t v287 = ~v9;
    uint64_t v288 = ~(v12 | 7);
    uint64_t v300 = ~v12;
    uint64_t v273 = ~v21;
    unint64_t v27 = v23;
    uint64_t v26 = v306;
    uint64_t v280 = v8;
    switch(v24)
    {
      case 1u:
        size_t v282 = v15;
        uint64_t v40 = *(void (**)(unint64_t, uint64_t))(v306 + 8);
        v40((unint64_t)v2, AssociatedTypeWitness);
        uint64_t v262 = v40;
        v40(((unint64_t)v2 + v290) & v285, AssociatedTypeWitness);
        unint64_t v41 = ((((unint64_t)v2 + v290) & v285) + v3 + v10) & v286;
        uint64_t v259 = *(void (**)(unint64_t, uint64_t))(v292 + 8);
        v259(v41, v293);
        swift_bridgeObjectRelease();
        uint64_t v258 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
        v258((v291 + ((v289 + v41) & 0xFFFFFFFFFFFFFFF8)) & v287, v296);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v255 = (v295 + v297 + v41) & v288;
        unint64_t v42 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v42((v298 + v255) & v300, v302);
        unint64_t v43 = (v299 + ((v298 + v255) & v300)) & v300;
        unint64_t v265 = v42;
        v42(v43, v302);
        swift_bridgeObjectRelease();
        unint64_t v44 = (v301
             + ((((((v13 + 12 + v43) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v300;
        uint64_t v269 = v11;
        uint64_t v257 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
        if (!v257(v44, 1, v302)) {
          v42(v44, v302);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v45 = (uint64_t *)((((((v282 + v44) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v46 = v45[1];
        if ((v46 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v45, v46);
        }
        swift_bridgeObjectRelease();
        unint64_t v47 = v16 + v255;
        LODWORD(v48) = -1;
        if (*(void *)(v16 + v255 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v48 = *(void *)(v16 + v255 + 16);
        }
        if ((int)v48 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v47 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v47 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v47 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        v262(((unint64_t)v2 + v275) & v273, AssociatedTypeWitness);
        unint64_t v256 = ((unint64_t)v2 + v275) & v273;
        v262((v290 + v256) & v285, AssociatedTypeWitness);
        unint64_t v49 = (v276 + ((v290 + v256) & v285)) & v286;
        v259(v49, v293);
        swift_bridgeObjectRelease();
        v258((v291 + ((v289 + v49) & 0xFFFFFFFFFFFFFFF8)) & v287, v296);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v50 = (v295 + v49 + v297) & v288;
        v265((v298 + v50) & v300, v302);
        unint64_t v51 = (v299 + ((v298 + v50) & v300)) & v300;
        v265(v51, v302);
        swift_bridgeObjectRelease();
        unint64_t v52 = (v301
             + ((((((v13 + 12 + v51) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v300;
        if (!v257(v52, 1, v302)) {
          v265(v52, v302);
        }
        size_t v15 = v282;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v53 = (uint64_t *)((((((v282 + v52) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v54 = v53[1];
        uint64_t v28 = a2;
        if ((v54 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v53, v54);
        }
        swift_bridgeObjectRelease();
        unint64_t v38 = v50 + v16;
        LODWORD(v55) = -1;
        if (*(void *)(v50 + v16 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v55 = *(void *)(v50 + v16 + 16);
        }
        uint64_t v11 = v269;
        unint64_t v27 = v305;
        if ((int)v55 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v38 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_49;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        (*(void (**)(_DWORD *, uint64_t))(v306 + 8))(v2, AssociatedTypeWitness);
        uint64_t v28 = a2;
        break;
      default:
        size_t v281 = v15;
        unint64_t v278 = v16;
        uint64_t v29 = *(void (**)(_DWORD *, uint64_t))(v306 + 8);
        v29(v2, AssociatedTypeWitness);
        v29((_DWORD *)(((unint64_t)v2 + v290) & v285), AssociatedTypeWitness);
        unint64_t v30 = ((((unint64_t)v2 + v290) & v285) + v3 + v10) & v286;
        (*(void (**)(unint64_t, uint64_t))(v292 + 8))(v30, v293);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))((v291 + ((v289 + v30) & 0xFFFFFFFFFFFFFFF8)) & v287, v296);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v266 = (v295 + v297 + v30) & v288;
        unint64_t v31 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v31((v298 + v266) & v300, v302);
        unint64_t v32 = (v299 + ((v298 + v266) & v300)) & v300;
        v31(v32, v302);
        swift_bridgeObjectRelease();
        unint64_t v33 = (v301
             + ((((((v13 + 12 + v32) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v300;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v33, 1, v302)) {
          v31(v33, v302);
        }
        size_t v34 = v281 + v33;
        size_t v15 = v281;
        unint64_t v35 = (v34 & 0xFFFFFFFFFFFFFFF8) + 31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v36 = (uint64_t *)(((v35 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v37 = v36[1];
        if ((v37 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v36, v37);
        }
        swift_bridgeObjectRelease();
        unint64_t v16 = v278;
        unint64_t v38 = v278 + v266;
        LODWORD(v39) = -1;
        if (*(void *)(v278 + v266 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v39 = *(void *)(v278 + v266 + 16);
        }
        uint64_t v28 = a2;
        unint64_t v27 = v305;
        if ((int)v39 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v38 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_49:
        sub_1000CF144(*(void *)((((v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v26 = v306;
        break;
    }
    swift_bridgeObjectRelease();
    unsigned int v56 = *((unsigned __int8 *)v28 + v27);
    if (v56 >= 6 && v27 != 0) {
      unsigned int v56 = *v28 + 6;
    }
    switch(v56)
    {
      case 1u:
        size_t v284 = v15;
        unint64_t v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v26 + 32);
        v88((unint64_t)v2, (unint64_t)v28, AssociatedTypeWitness);
        uint64_t v261 = v2;
        unint64_t v89 = ((unint64_t)v2 + v290) & v285;
        size_t v263 = v88;
        v88(v89, ((unint64_t)v28 + v290) & v285, AssociatedTypeWitness);
        unint64_t v90 = (v89 + v3 + v10) & v286;
        unint64_t v91 = ((((unint64_t)v28 + v290) & v285) + v3 + v10) & v286;
        uint64_t v260 = *(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 32);
        v260(v90, v91, v293);
        unint64_t v92 = (void *)((v289 + v90) & 0xFFFFFFFFFFFFFFF8);
        char v93 = (void *)((v289 + v91) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v92 = *v93;
        uint64_t v94 = v11;
        unint64_t v95 = ((unint64_t)v92 + v291) & v287;
        unint64_t v96 = ((unint64_t)v93 + v291) & v287;
        unint64_t v267 = *(void (**)(unint64_t, unint64_t, uint64_t))(v280 + 32);
        v267(v95, v96, v296);
        unint64_t v97 = (void *)((v294 + v95) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v98 = (void *)((v294 + v96) & 0xFFFFFFFFFFFFFFF8);
        void *v97 = *v98;
        *(_OWORD *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v297 + v90) = *(_OWORD *)(v297 + v91);
        unint64_t v99 = (v295 + v297 + v90) & v288;
        unint64_t v100 = (v295 + v297 + v91) & v288;
        *(unsigned char *)unint64_t v99 = *(unsigned char *)v100;
        uint64_t v101 = v99 | 4;
        int v102 = *(_DWORD *)(v100 | 4);
        *(unsigned char *)(v101 + 4) = *(unsigned char *)((v100 | 4) + 4);
        *(_DWORD *)uint64_t v101 = v102;
        *(_WORD *)(v99 + 10) = *(_WORD *)(v100 + 0xA);
        unint64_t v103 = *(void (**)(unint64_t, unint64_t, uint64_t))(v94 + 32);
        v103((v298 + v99) & v300, (v298 + v100) & v300, v302);
        unint64_t v104 = (v299 + ((v298 + v99) & v300)) & v300;
        unint64_t v105 = (v299 + ((v298 + v100) & v300)) & v300;
        v103(v104, v105, v302);
        unint64_t v106 = (unsigned char *)(v104 + v13);
        *unint64_t v106 = *(unsigned char *)(v105 + v13);
        v106[1] = *(unsigned char *)(v105 + v13 + 1);
        v106[2] = *(unsigned char *)(v105 + v13 + 2);
        v106[3] = *(unsigned char *)(v105 + v13 + 3);
        v106[4] = *(unsigned char *)(v105 + v13 + 4);
        unint64_t v107 = (v104 + v13 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v108 = (v105 + v13 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v108;
        *(unsigned char *)(v107 + 16) = *(unsigned char *)(v108 + 16);
        *(unsigned char *)(v107 + 17) = *(unsigned char *)(v108 + 17);
        *(unsigned char *)(v107 + 18) = *(unsigned char *)(v108 + 18);
        *(unsigned char *)(v107 + 19) = *(unsigned char *)(v108 + 19);
        unint64_t v109 = (v107 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v110 = (v108 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v109 = *(void *)v110;
        *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
        *(unsigned char *)(v109 + 9) = *(unsigned char *)(v110 + 9);
        *(unsigned char *)(v109 + 10) = *(unsigned char *)(v110 + 10);
        *(unsigned char *)(v109 + 11) = *(unsigned char *)(v110 + 11);
        *(unsigned char *)(v109 + 12) = *(unsigned char *)(v110 + 12);
        long long v111 = (void *)((v108 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v112 = (void *)((v107 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v112 = *v111;
        unint64_t v113 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v114 = ((unint64_t)v111 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v113 = *(void *)v114;
        *(unsigned char *)(v113 + 8) = *(unsigned char *)(v114 + 8);
        *(unsigned char *)(v113 + 9) = *(unsigned char *)(v114 + 9);
        long long v115 = (void *)((v301 + v113) & v300);
        long long v116 = (const void *)((v301 + v114) & v300);
        uint64_t v268 = v13;
        uint64_t v271 = v94;
        size_t v264 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48);
        if (v264(v116, 1, v302))
        {
          memcpy(v115, v116, __n);
        }
        else
        {
          v103((unint64_t)v115, (unint64_t)v116, v302);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v115, 0, 1, v302);
        }
        uint64_t v2 = v261;
        long long v155 = (void *)(((unint64_t)v115 + v284) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v156 = (void *)(((unint64_t)v116 + v284) & 0xFFFFFFFFFFFFFFF8);
        void *v155 = *v156;
        unint64_t v157 = ((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v158 = ((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v159 = *(void *)v158;
        *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
        *(void *)unint64_t v157 = v159;
        unint64_t v160 = (void *)(((unint64_t)v155 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v161 = (void *)(((unint64_t)v156 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v160 = *v161;
        unint64_t v162 = (_OWORD *)(((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v163 = (_OWORD *)(((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v162 = *v163;
        unint64_t v164 = ((unint64_t)v162 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v166 = *(void *)v165;
        *(unsigned char *)(v164 + 8) = *(unsigned char *)(v165 + 8);
        *(void *)unint64_t v164 = v166;
        *(unsigned char *)(v164 + 9) = *(unsigned char *)(v165 + 9);
        unint64_t v167 = (v164 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v168 = (v165 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v159) = *(_DWORD *)v168;
        *(unsigned char *)(v167 + 4) = *(unsigned char *)(v168 + 4);
        *(_DWORD *)unint64_t v167 = v159;
        *(_OWORD *)((v164 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v165 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v169 = v16 + v99;
        long long v170 = *(_OWORD *)(v16 + v100 + 112);
        long long v172 = *(_OWORD *)(v16 + v100 + 64);
        long long v171 = *(_OWORD *)(v16 + v100 + 80);
        *(_OWORD *)(v169 + 96) = *(_OWORD *)(v16 + v100 + 96);
        *(_OWORD *)(v169 + 112) = v170;
        *(_OWORD *)(v169 + 64) = v172;
        *(_OWORD *)(v169 + 80) = v171;
        long long v173 = *(_OWORD *)(v16 + v100 + 176);
        long long v175 = *(_OWORD *)(v16 + v100 + 128);
        long long v174 = *(_OWORD *)(v16 + v100 + 144);
        *(_OWORD *)(v169 + 160) = *(_OWORD *)(v16 + v100 + 160);
        *(_OWORD *)(v169 + 176) = v173;
        *(_OWORD *)(v169 + 128) = v175;
        *(_OWORD *)(v169 + 144) = v174;
        long long v177 = *(_OWORD *)(v16 + v100 + 208);
        long long v176 = *(_OWORD *)(v16 + v100 + 224);
        long long v178 = *(_OWORD *)(v16 + v100 + 192);
        *(void *)(v169 + 240) = *(void *)(v16 + v100 + 240);
        *(_OWORD *)(v169 + 208) = v177;
        *(_OWORD *)(v169 + 224) = v176;
        *(_OWORD *)(v169 + 192) = v178;
        long long v179 = *(_OWORD *)(v16 + v100);
        long long v180 = *(_OWORD *)(v16 + v100 + 16);
        long long v181 = *(_OWORD *)(v16 + v100 + 48);
        *(_OWORD *)(v169 + 32) = *(_OWORD *)(v16 + v100 + 32);
        *(_OWORD *)(v169 + 48) = v181;
        *(_OWORD *)unint64_t v169 = v179;
        *(_OWORD *)(v169 + 16) = v180;
        unint64_t v182 = (_OWORD *)((v16 + v99 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v183 = (long long *)((v16 + v100 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v184 = *v183;
        *(_OWORD *)((char *)v182 + 9) = *(long long *)((char *)v183 + 9);
        _OWORD *v182 = v184;
        unint64_t v185 = (v16 + v99 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v186 = (v16 + v100 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v187 = *(_OWORD *)v186;
        *(unsigned char *)(v185 + 16) = *(unsigned char *)(v186 + 16);
        *(_OWORD *)unint64_t v185 = v187;
        unint64_t v188 = (void *)((v16 + v99 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v189 = (void *)((v16 + v100 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v188 = *v189;
        *(_OWORD *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v190 = ((unint64_t)v261 + v275) & v273;
        v263(v190, ((unint64_t)a2 + v275) & v273, AssociatedTypeWitness);
        unint64_t v304 = ((unint64_t)a2 + v275) & v273;
        unint64_t v191 = (v290 + v304) & v285;
        v263((v290 + v190) & v285, v191, AssociatedTypeWitness);
        unint64_t v192 = (v276 + ((v290 + v190) & v285)) & v286;
        uint64_t v193 = (v276 + v191) & v286;
        v260(v192, v193, v293);
        unint64_t v194 = (void *)((v289 + v192) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v195 = (void *)((v289 + v193) & 0xFFFFFFFFFFFFFFF8);
        void *v194 = *v195;
        unint64_t v196 = ((unint64_t)v194 + v291) & v287;
        unint64_t v197 = ((unint64_t)v195 + v291) & v287;
        v267(v196, v197, v296);
        long long v198 = (void *)((v294 + v196) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v199 = (void *)((v294 + v197) & 0xFFFFFFFFFFFFFFF8);
        *long long v198 = *v199;
        *(_OWORD *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v192 + v297) = *(_OWORD *)(v193 + v297);
        unint64_t v200 = (v295 + v192 + v297) & v288;
        unint64_t v201 = (v295 + v193 + v297) & v288;
        *(unsigned char *)unint64_t v200 = *(unsigned char *)v201;
        uint64_t v202 = v200 | 4;
        int v203 = *(_DWORD *)(v201 | 4);
        *(unsigned char *)(v202 + 4) = *(unsigned char *)((v201 | 4) + 4);
        *(_DWORD *)uint64_t v202 = v203;
        *(_WORD *)(v200 + 10) = *(_WORD *)(v201 + 0xA);
        v103((v298 + v200) & v300, (v298 + v201) & v300, v302);
        unint64_t v204 = (v299 + ((v298 + v200) & v300)) & v300;
        unint64_t v205 = (v299 + ((v298 + v201) & v300)) & v300;
        v103(v204, v205, v302);
        long long v206 = (unsigned char *)(v204 + v268);
        *long long v206 = *(unsigned char *)(v205 + v268);
        v206[1] = *(unsigned char *)(v205 + v268 + 1);
        v206[2] = *(unsigned char *)(v205 + v268 + 2);
        v206[3] = *(unsigned char *)(v205 + v268 + 3);
        v206[4] = *(unsigned char *)(v205 + v268 + 4);
        unint64_t v207 = (v204 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v208 = (v205 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v207 = *(_OWORD *)v208;
        *(unsigned char *)(v207 + 16) = *(unsigned char *)(v208 + 16);
        *(unsigned char *)(v207 + 17) = *(unsigned char *)(v208 + 17);
        *(unsigned char *)(v207 + 18) = *(unsigned char *)(v208 + 18);
        *(unsigned char *)(v207 + 19) = *(unsigned char *)(v208 + 19);
        unint64_t v209 = (v207 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v210 = (v208 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v209 = *(void *)v210;
        *(unsigned char *)(v209 + 8) = *(unsigned char *)(v210 + 8);
        *(unsigned char *)(v209 + 9) = *(unsigned char *)(v210 + 9);
        *(unsigned char *)(v209 + 10) = *(unsigned char *)(v210 + 10);
        *(unsigned char *)(v209 + 11) = *(unsigned char *)(v210 + 11);
        *(unsigned char *)(v209 + 12) = *(unsigned char *)(v210 + 12);
        long long v211 = (void *)((v207 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v212 = (void *)((v208 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v211 = *v212;
        unint64_t v213 = ((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v214 = ((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v213 = *(void *)v214;
        *(unsigned char *)(v213 + 8) = *(unsigned char *)(v214 + 8);
        *(unsigned char *)(v213 + 9) = *(unsigned char *)(v214 + 9);
        long long v215 = (void *)((v301 + v213) & v300);
        long long v216 = (const void *)((v301 + v214) & v300);
        if (v264(v216, 1, v302))
        {
          memcpy(v215, v216, __n);
        }
        else
        {
          v103((unint64_t)v215, (unint64_t)v216, v302);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v271 + 56))(v215, 0, 1, v302);
        }
        long long v217 = (void *)(((unint64_t)v215 + v284) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v218 = (void *)(((unint64_t)v216 + v284) & 0xFFFFFFFFFFFFFFF8);
        *long long v217 = *v218;
        unint64_t v219 = ((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v220 = ((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v221 = *(void *)v220;
        *(unsigned char *)(v219 + 8) = *(unsigned char *)(v220 + 8);
        *(void *)unint64_t v219 = v221;
        unint64_t v222 = (void *)(((unint64_t)v217 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v223 = (void *)(((unint64_t)v218 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v222 = *v223;
        long long v224 = (_OWORD *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v225 = (_OWORD *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v224 = *v225;
        unint64_t v226 = ((unint64_t)v224 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v227 = ((unint64_t)v225 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v228 = *(void *)v227;
        *(unsigned char *)(v226 + 8) = *(unsigned char *)(v227 + 8);
        *(void *)unint64_t v226 = v228;
        *(unsigned char *)(v226 + 9) = *(unsigned char *)(v227 + 9);
        unint64_t v229 = (v226 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v230 = (v227 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v221) = *(_DWORD *)v230;
        *(unsigned char *)(v229 + 4) = *(unsigned char *)(v230 + 4);
        *(_DWORD *)unint64_t v229 = v221;
        *(_OWORD *)((v226 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v227 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v231 = v200 + v16;
        long long v232 = *(_OWORD *)(v201 + v16 + 112);
        long long v234 = *(_OWORD *)(v201 + v16 + 64);
        long long v233 = *(_OWORD *)(v201 + v16 + 80);
        *(_OWORD *)(v231 + 96) = *(_OWORD *)(v201 + v16 + 96);
        *(_OWORD *)(v231 + 112) = v232;
        *(_OWORD *)(v231 + 64) = v234;
        *(_OWORD *)(v231 + 80) = v233;
        long long v235 = *(_OWORD *)(v201 + v16 + 176);
        long long v237 = *(_OWORD *)(v201 + v16 + 128);
        long long v236 = *(_OWORD *)(v201 + v16 + 144);
        *(_OWORD *)(v231 + 160) = *(_OWORD *)(v201 + v16 + 160);
        *(_OWORD *)(v231 + 176) = v235;
        *(_OWORD *)(v231 + 128) = v237;
        *(_OWORD *)(v231 + 144) = v236;
        long long v239 = *(_OWORD *)(v201 + v16 + 208);
        long long v238 = *(_OWORD *)(v201 + v16 + 224);
        long long v240 = *(_OWORD *)(v201 + v16 + 192);
        *(void *)(v231 + 240) = *(void *)(v201 + v16 + 240);
        *(_OWORD *)(v231 + 208) = v239;
        *(_OWORD *)(v231 + 224) = v238;
        *(_OWORD *)(v231 + 192) = v240;
        long long v241 = *(_OWORD *)(v201 + v16);
        long long v242 = *(_OWORD *)(v201 + v16 + 16);
        long long v243 = *(_OWORD *)(v201 + v16 + 48);
        *(_OWORD *)(v231 + 32) = *(_OWORD *)(v201 + v16 + 32);
        *(_OWORD *)(v231 + 48) = v243;
        *(_OWORD *)unint64_t v231 = v241;
        *(_OWORD *)(v231 + 16) = v242;
        uint64_t v244 = (_OWORD *)((v200 + v16 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v245 = (long long *)((v201 + v16 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v246 = *v245;
        *(_OWORD *)((char *)v244 + 9) = *(long long *)((char *)v245 + 9);
        *uint64_t v244 = v246;
        unint64_t v247 = (v200 + v16 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v248 = (v201 + v16 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v249 = *(_OWORD *)v248;
        *(unsigned char *)(v247 + 16) = *(unsigned char *)(v248 + 16);
        *(_OWORD *)unint64_t v247 = v249;
        uint64_t v250 = (void *)((v201 + v16 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v251 = (void *)((v200 + v16 + 311) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v251 = *v250;
        *(_OWORD *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v252 = (void *)((v277 + v304) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v253 = (void *)((v277 + v190) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v253 = *v252;
        long long v117 = (_OWORD *)(((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v118 = (_OWORD *)(((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v119 = 1;
        unint64_t v27 = v305;
        break;
      case 2u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        *((unsigned char *)v2 + v3) = *((unsigned char *)v28 + v3);
        long long v117 = (_OWORD *)((((unint64_t)v2 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        long long v118 = (_OWORD *)((((unint64_t)v28 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        char v119 = 2;
        break;
      case 3u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        long long v117 = (_OWORD *)(((unint64_t)v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v118 = (_OWORD *)(((unint64_t)v28 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        char v119 = 3;
        break;
      case 4u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        *((unsigned char *)v2 + v3) = *((unsigned char *)v28 + v3);
        long long v117 = (_OWORD *)((((unint64_t)v2 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        long long v118 = (_OWORD *)((((unint64_t)v28 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        char v119 = 4;
        break;
      case 5u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        long long v117 = (_OWORD *)(((unint64_t)v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v118 = (_OWORD *)(((unint64_t)v28 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        char v119 = 5;
        break;
      default:
        size_t v283 = v15;
        unint64_t v279 = v16;
        uint64_t v270 = v11;
        unint64_t v58 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32);
        v58(v2, v28, AssociatedTypeWitness);
        v58((_DWORD *)(((unint64_t)v2 + v290) & v285), (_DWORD *)(((unint64_t)v28 + v290) & v285), AssociatedTypeWitness);
        uint64_t v59 = (((unint64_t)v28 + v290) & v285) + v3;
        unint64_t v60 = ((((unint64_t)v2 + v290) & v285) + v3 + v10) & v286;
        uint64_t v61 = (v59 + v10) & v286;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v292 + 32))(v60, v61, v293);
        uint64_t v62 = (void *)((v289 + v60) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v63 = (void *)((v289 + v61) & 0xFFFFFFFFFFFFFFF8);
        void *v62 = *v63;
        uint64_t v64 = v13;
        unint64_t v65 = ((unint64_t)v62 + v291) & v287;
        unint64_t v66 = ((unint64_t)v63 + v291) & v287;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v280 + 32))(v65, v66, v296);
        unint64_t v67 = (void *)((v294 + v65) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v68 = (void *)((v294 + v66) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v67 = *v68;
        *(_OWORD *)(((unint64_t)v67 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v297 + v60) = *(_OWORD *)(v297 + v61);
        unint64_t v69 = (v295 + v297 + v60) & v288;
        unint64_t v70 = (v295 + v297 + v61) & v288;
        *(unsigned char *)unint64_t v69 = *(unsigned char *)v70;
        uint64_t v71 = v69 | 4;
        int v72 = *(_DWORD *)(v70 | 4);
        *(unsigned char *)(v71 + 4) = *(unsigned char *)((v70 | 4) + 4);
        *(_DWORD *)uint64_t v71 = v72;
        *(_WORD *)(v69 + 10) = *(_WORD *)(v70 + 0xA);
        unint64_t v308 = v69;
        unint64_t v73 = (v298 + v69) & v300;
        uint64_t v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 32);
        v74(v73, (v298 + v70) & v300, v302);
        unint64_t v75 = (v299 + v73) & v300;
        unint64_t v76 = (v299 + ((v298 + v70) & v300)) & v300;
        v74(v75, v76, v302);
        unint64_t v77 = (unsigned char *)(v75 + v64);
        *unint64_t v77 = *(unsigned char *)(v76 + v64);
        v77[1] = *(unsigned char *)(v76 + v64 + 1);
        v77[2] = *(unsigned char *)(v76 + v64 + 2);
        v77[3] = *(unsigned char *)(v76 + v64 + 3);
        v77[4] = *(unsigned char *)(v76 + v64 + 4);
        unint64_t v78 = (v75 + v64 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v79 = (v76 + v64 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v78 = *(_OWORD *)v79;
        *(unsigned char *)(v78 + 16) = *(unsigned char *)(v79 + 16);
        *(unsigned char *)(v78 + 17) = *(unsigned char *)(v79 + 17);
        *(unsigned char *)(v78 + 18) = *(unsigned char *)(v79 + 18);
        *(unsigned char *)(v78 + 19) = *(unsigned char *)(v79 + 19);
        unint64_t v80 = (v78 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v81 = (v79 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v80 = *(void *)v81;
        *(unsigned char *)(v80 + 8) = *(unsigned char *)(v81 + 8);
        *(unsigned char *)(v80 + 9) = *(unsigned char *)(v81 + 9);
        *(unsigned char *)(v80 + 10) = *(unsigned char *)(v81 + 10);
        *(unsigned char *)(v80 + 11) = *(unsigned char *)(v81 + 11);
        *(unsigned char *)(v80 + 12) = *(unsigned char *)(v81 + 12);
        unint64_t v82 = (void *)((v79 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v83 = (void *)((v78 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v83 = *v82;
        unint64_t v84 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v85 = ((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v84 = *(void *)v85;
        *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
        *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
        unint64_t v86 = (void *)((v301 + v84) & v300);
        unint64_t v87 = (const void *)((v301 + v85) & v300);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v270 + 48))(v87, 1, v302))
        {
          memcpy(v86, v87, __n);
        }
        else
        {
          v74((unint64_t)v86, (unint64_t)v87, v302);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v270 + 56))(v86, 0, 1, v302);
        }
        unint64_t v27 = v305;
        char v119 = 0;
        long long v120 = (void *)(((unint64_t)v86 + v283) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v121 = (void *)(((unint64_t)v87 + v283) & 0xFFFFFFFFFFFFFFF8);
        void *v120 = *v121;
        unint64_t v122 = ((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v123 = ((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v124 = *(void *)v123;
        *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
        *(void *)unint64_t v122 = v124;
        unint64_t v125 = (void *)(((unint64_t)v120 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v126 = (void *)(((unint64_t)v121 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v125 = *v126;
        id v127 = (_OWORD *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v128 = (_OWORD *)(((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v127 = *v128;
        unint64_t v129 = ((unint64_t)v127 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v128 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v131 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(void *)unint64_t v129 = v131;
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        unint64_t v132 = (v129 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v133 = (v130 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v124) = *(_DWORD *)v133;
        *(unsigned char *)(v132 + 4) = *(unsigned char *)(v133 + 4);
        *(_DWORD *)unint64_t v132 = v124;
        *(_OWORD *)((v129 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v130 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v134 = v279 + v308;
        long long v135 = *(_OWORD *)(v279 + v70 + 112);
        long long v137 = *(_OWORD *)(v279 + v70 + 64);
        long long v136 = *(_OWORD *)(v279 + v70 + 80);
        *(_OWORD *)(v134 + 96) = *(_OWORD *)(v279 + v70 + 96);
        *(_OWORD *)(v134 + 112) = v135;
        *(_OWORD *)(v134 + 64) = v137;
        *(_OWORD *)(v134 + 80) = v136;
        long long v138 = *(_OWORD *)(v279 + v70 + 176);
        long long v140 = *(_OWORD *)(v279 + v70 + 128);
        long long v139 = *(_OWORD *)(v279 + v70 + 144);
        *(_OWORD *)(v134 + 160) = *(_OWORD *)(v279 + v70 + 160);
        *(_OWORD *)(v134 + 176) = v138;
        *(_OWORD *)(v134 + 128) = v140;
        *(_OWORD *)(v134 + 144) = v139;
        long long v142 = *(_OWORD *)(v279 + v70 + 208);
        long long v141 = *(_OWORD *)(v279 + v70 + 224);
        long long v143 = *(_OWORD *)(v279 + v70 + 192);
        *(void *)(v134 + 240) = *(void *)(v279 + v70 + 240);
        *(_OWORD *)(v134 + 208) = v142;
        *(_OWORD *)(v134 + 224) = v141;
        *(_OWORD *)(v134 + 192) = v143;
        long long v144 = *(_OWORD *)(v279 + v70);
        long long v145 = *(_OWORD *)(v279 + v70 + 16);
        long long v146 = *(_OWORD *)(v279 + v70 + 48);
        *(_OWORD *)(v134 + 32) = *(_OWORD *)(v279 + v70 + 32);
        *(_OWORD *)(v134 + 48) = v146;
        *(_OWORD *)unint64_t v134 = v144;
        *(_OWORD *)(v134 + 16) = v145;
        long long v147 = (_OWORD *)((v279 + v308 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v148 = (long long *)((v279 + v70 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v149 = *v148;
        *(_OWORD *)((char *)v147 + 9) = *(long long *)((char *)v148 + 9);
        *long long v147 = v149;
        unint64_t v150 = (v279 + v308 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v151 = (v279 + v70 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v152 = *(_OWORD *)v151;
        *(unsigned char *)(v150 + 16) = *(unsigned char *)(v151 + 16);
        *(_OWORD *)unint64_t v150 = v152;
        long long v153 = (void *)((v279 + v308 + 311) & 0xFFFFFFFFFFFFFFF8);
        long long v154 = (void *)((v279 + v70 + 311) & 0xFFFFFFFFFFFFFFF8);
        *long long v153 = *v154;
        *(_OWORD *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v117 = (_OWORD *)(((unint64_t)v2 + v274 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v118 = (_OWORD *)(((unint64_t)a2 + v274 + 7) & 0xFFFFFFFFFFFFFFF8);
        break;
    }
    *long long v117 = *v118;
    *((unsigned char *)v2 + v27) = v119;
  }
  return v2;
}

uint64_t sub_10064AB78(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = (((((v4 + v5) & ~v5) + v4 + v10) & ~v10) + v13 + v11 + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v12 + 64);
  unint64_t v16 = (v13
       + ((((((v15 + ((v15 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  uint64_t v17 = v10 | v5 | v13;
  unint64_t v18 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v19 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v15;
  }
  unint64_t v20 = (((v14
         + ((((((((((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((v20 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v22 = ((((v20 + 23 + ((v20 + v17 + 16) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  if (v18 > v22) {
    unint64_t v22 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v22) {
    unint64_t v22 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v22) {
    unint64_t v22 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 <= v22) {
    unint64_t v23 = v22;
  }
  else {
    unint64_t v23 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_33;
  }
  unint64_t v24 = v23 + 1;
  char v25 = 8 * (v23 + 1);
  if ((v23 + 1) <= 3)
  {
    unsigned int v28 = ((a2 + ~(-1 << v25) - 250) >> v25) + 1;
    if (HIWORD(v28))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v28 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v28 < 2)
    {
LABEL_33:
      unsigned int v30 = *((unsigned __int8 *)a1 + v23);
      if (v30 >= 6) {
        return (v30 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_33;
  }
LABEL_25:
  int v29 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v29 = 0;
  }
  if (v24)
  {
    if (v24 > 3) {
      LODWORD(v24) = 4;
    }
    switch((int)v24)
    {
      case 2:
        LODWORD(v24) = *a1;
        break;
      case 3:
        LODWORD(v24) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v24) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v24) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v24 | v29) + 251;
}

void sub_10064AFA8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  unint64_t v12 = (((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11) + v14 + v12 + 32) & (*(_DWORD *)(v13 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(v13 + 64);
  unint64_t v17 = (v14
       + ((((((v16 + ((v16 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v14;
  uint64_t v18 = v11 | v6 | v14;
  unint64_t v19 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v20 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!*(_DWORD *)(v13 + 84)) {
    ++v16;
  }
  unint64_t v21 = (((v15
         + ((((((((((v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v23 = ((((v21 + 23 + ((v21 + v18 + 16) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= v22) {
    unint64_t v23 = v22;
  }
  if (v19 > v23) {
    unint64_t v23 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v23) {
    unint64_t v23 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v23) {
    unint64_t v23 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v23) {
    unint64_t v23 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  size_t v24 = v23 + 1;
  if (a3 < 0xFB)
  {
    int v26 = 0;
    char v25 = a1;
  }
  else
  {
    char v25 = a1;
    if (v24 <= 3)
    {
      unsigned int v29 = ((a3 + ~(-1 << (8 * v24)) - 250) >> (8 * v24)) + 1;
      if (HIWORD(v29))
      {
        int v26 = 4;
      }
      else if (v29 >= 0x100)
      {
        int v26 = 2;
      }
      else
      {
        int v26 = v29 > 1;
      }
    }
    else
    {
      int v26 = 1;
    }
  }
  if (a2 > 0xFA)
  {
    unsigned int v27 = a2 - 251;
    if (v24 < 4)
    {
      int v28 = (v27 >> (8 * v24)) + 1;
      if (v23 != -1)
      {
        int v30 = v27 & ~(-1 << (8 * v24));
        bzero(v25, v24);
        if (v24 == 3)
        {
          *(_WORD *)char v25 = v30;
          v25[2] = BYTE2(v30);
        }
        else if (v24 == 2)
        {
          *(_WORD *)char v25 = v30;
        }
        else
        {
          *char v25 = v30;
        }
      }
    }
    else
    {
      bzero(v25, v23 + 1);
      *(_DWORD *)char v25 = v27;
      int v28 = 1;
    }
    switch(v26)
    {
      case 1:
        v25[v24] = v28;
        break;
      case 2:
        *(_WORD *)&v25[v24] = v28;
        break;
      case 3:
LABEL_44:
        __break(1u);
        JUMPOUT(0x10064B44CLL);
      case 4:
        *(_DWORD *)&v25[v24] = v28;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v26)
    {
      case 1:
        v25[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 2:
        *(_WORD *)&v25[v24] = 0;
        goto LABEL_32;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&v25[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      default:
LABEL_32:
        if (a2) {
LABEL_33:
        }
          v25[v23] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10064B474(_DWORD *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + ((v8 + ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = v13 + 1;
  }
  unint64_t v15 = (((((((((v3 + v4) & ~v4) + v3 + v9) & ~v9) + v12 + v10 + 32) & (*(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
         + ((((((((((v14
                   + ((v12
                     + ((((((v13 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 10) & ~v12)
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = ((((v15 + 23 + ((v15 + (v9 | v4 | v12) + 16) & ~(v9 | v4 | v12))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((v3 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v18 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v18 <= v16) {
    unint64_t v18 = v16;
  }
  if (v18 > v17) {
    unint64_t v17 = v18;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v17);
  if (result >= 6 && v17 != 0) {
    return (*a1 + 6);
  }
  return result;
}

void sub_10064B790(unsigned char *a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_10096B0E0() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  unint64_t v16 = (((((((((v4 + v5) & ~v5) + v4 + v10) & ~v10) + v13 + v11 + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
         + ((((((((((v15
                   + ((v13
                     + ((((((v14 + ((v14 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 10) & ~v13)
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v16 + 23;
  unint64_t v18 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v19 = (v16 + (v10 | v5 | v13) + 16) & ~(v10 | v5 | v13);
  if (a2 > 5)
  {
    unint64_t v22 = ((((v17 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v23 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v23 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v23 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v23 > v22) {
      unint64_t v22 = v23;
    }
    if (v22 <= v18) {
      size_t v24 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      size_t v24 = v22;
    }
    if (v24) {
      char v25 = 6;
    }
    else {
      char v25 = ((a2 - 6) >> (8 * v24)) + 6;
    }
    if (v24) {
      unsigned int v26 = a2 - 6;
    }
    else {
      unsigned int v26 = 0;
    }
    a1[v24] = v25;
    if (v24 >= 4) {
      int v27 = 4;
    }
    else {
      int v27 = v24;
    }
    bzero(a1, v24);
    switch(v27)
    {
      case 2:
        *(_WORD *)a1 = v26;
        break;
      case 3:
        *(_WORD *)a1 = v26;
        a1[2] = BYTE2(v26);
        break;
      case 4:
        *(_DWORD *)a1 = v26;
        break;
      default:
        *a1 = v26;
        break;
    }
  }
  else
  {
    unint64_t v20 = ((((v17 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v4 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v21 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v21 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    if (v21 > v20) {
      unint64_t v20 = v21;
    }
    if (v20 > v18) {
      unint64_t v18 = v20;
    }
    a1[v18] = a2;
  }
}

uint64_t type metadata accessor for SnapshotMutation()
{
  return sub_10014D080();
}

uint64_t sub_10064BBAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  int v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v57 = (char *)&v56 - v9;
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - v14;
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      __chkstk_darwin(EnumCaseMultiPayload);
      strcpy((char *)&v56 - 32, "from to  reason ");
      uint64_t v60 = v12;
      unint64_t v61 = v12;
      uint64_t v62 = &type metadata for Fields;
      unint64_t v63 = &type metadata for String;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v26 = *(void *)&v17[TupleTypeMetadata[16]];
      int v27 = (uint64_t *)&v17[TupleTypeMetadata[20]];
      uint64_t v29 = *v27;
      int v28 = (void *)v27[1];
      uint64_t v30 = v58;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v15, &v17[TupleTypeMetadata[12]], v12);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      sub_10096CBD0(24);
      v67._uint64_t countAndFlagsBits = 0x657461647075;
      v67._object = (void *)0xE600000000000000;
      sub_10096BDC0(v67);
      swift_getWitnessTable();
      sub_10096D270();
      v68._uint64_t countAndFlagsBits = 0x3A736666696420;
      v68._object = (void *)0xE700000000000000;
      sub_10096BDC0(v68);
      v69._uint64_t countAndFlagsBits = sub_1006096B0(v26);
      sub_10096BDC0(v69);
      swift_bridgeObjectRelease();
      v70._uint64_t countAndFlagsBits = 0x3A79687720;
      v70._object = (void *)0xE500000000000000;
      sub_10096BDC0(v70);
      v71._uint64_t countAndFlagsBits = v29;
      v71._object = v28;
      sub_10096BDC0(v71);
      swift_bridgeObjectRelease();
      uint64_t v24 = v60;
      unint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
      v31(v15, v12);
      v31(v17, v12);
      break;
    case 2:
      sub_100033BE8((uint64_t *)&unk_100AD7510);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      char v33 = v17[*(int *)(TupleTypeMetadata3 + 48)];
      size_t v34 = (uint64_t *)&v17[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v36 = *v34;
      unint64_t v35 = (void *)v34[1];
      uint64_t v37 = v59;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v11, v17, AssociatedTypeWitness);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      sub_10096CBD0(22);
      v72._uint64_t countAndFlagsBits = 0x693C6574656C6564;
      v72._object = (void *)0xEA00000000003A64;
      sub_10096BDC0(v72);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      if (v33) {
        v38._uint64_t countAndFlagsBits = 0x6973727563657220;
      }
      else {
        v38._uint64_t countAndFlagsBits = 0;
      }
      if (v33) {
        uint64_t v39 = (void *)0xEA00000000006576;
      }
      else {
        uint64_t v39 = (void *)0xE000000000000000;
      }
      v38._object = v39;
      sub_10096BDC0(v38);
      swift_bridgeObjectRelease();
      v73._uint64_t countAndFlagsBits = 0x3A79687720;
      v73._object = (void *)0xE500000000000000;
      sub_10096BDC0(v73);
      v74._uint64_t countAndFlagsBits = v36;
      v74._object = v35;
      sub_10096BDC0(v74);
      swift_bridgeObjectRelease();
      v75._uint64_t countAndFlagsBits = 62;
      v75._object = (void *)0xE100000000000000;
      sub_10096BDC0(v75);
      uint64_t v24 = v60;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, AssociatedTypeWitness);
      break;
    case 3:
      uint64_t v40 = (uint64_t *)&v17[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v42 = *v40;
      unint64_t v41 = (void *)v40[1];
      uint64_t v43 = v59;
      unint64_t v44 = v57;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v57, v17, AssociatedTypeWitness);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      sub_10096CBD0(24);
      v45._uint64_t countAndFlagsBits = 0x614C6574656C6564;
      v45._object = (void *)0xEE003A64693C797ALL;
      goto LABEL_20;
    case 4:
      uint64_t v46 = swift_getTupleTypeMetadata3();
      int v47 = v17[*(int *)(v46 + 48)];
      uint64_t v48 = (uint64_t *)&v17[*(int *)(v46 + 64)];
      uint64_t v50 = *v48;
      unint64_t v49 = (void *)v48[1];
      uint64_t v51 = v59;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v7, v17, AssociatedTypeWitness);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      sub_10096CBD0(31);
      v76._object = (void *)0x80000001009A47A0;
      v76._uint64_t countAndFlagsBits = 0xD000000000000013;
      sub_10096BDC0(v76);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      if (v47) {
        v52._uint64_t countAndFlagsBits = 0x6973727563657220;
      }
      else {
        v52._uint64_t countAndFlagsBits = 0;
      }
      if (v47) {
        unint64_t v53 = (void *)0xEA00000000006576;
      }
      else {
        unint64_t v53 = (void *)0xE000000000000000;
      }
      v52._object = v53;
      sub_10096BDC0(v52);
      swift_bridgeObjectRelease();
      v77._uint64_t countAndFlagsBits = 0x3A79687720;
      v77._object = (void *)0xE500000000000000;
      sub_10096BDC0(v77);
      v78._uint64_t countAndFlagsBits = v50;
      v78._object = v49;
      sub_10096BDC0(v78);
      swift_bridgeObjectRelease();
      v79._uint64_t countAndFlagsBits = 62;
      v79._object = (void *)0xE100000000000000;
      sub_10096BDC0(v79);
      uint64_t v24 = v60;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v7, AssociatedTypeWitness);
      break;
    case 5:
      unint64_t v54 = (uint64_t *)&v17[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v42 = *v54;
      unint64_t v41 = (void *)v54[1];
      uint64_t v43 = v59;
      unint64_t v44 = v57;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v57, v17, AssociatedTypeWitness);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      sub_10096CBD0(18);
      v45._uint64_t countAndFlagsBits = 0x3A64693C656E6F6ELL;
      v45._object = (void *)0xE800000000000000;
LABEL_20:
      sub_10096BDC0(v45);
      swift_getAssociatedConformanceWitness();
      sub_10096D270();
      v80._uint64_t countAndFlagsBits = 0x3A79687720;
      v80._object = (void *)0xE500000000000000;
      sub_10096BDC0(v80);
      v81._uint64_t countAndFlagsBits = v42;
      v81._object = v41;
      sub_10096BDC0(v81);
      swift_bridgeObjectRelease();
      v82._uint64_t countAndFlagsBits = 62;
      v82._object = (void *)0xE100000000000000;
      sub_10096BDC0(v82);
      uint64_t v24 = v60;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, AssociatedTypeWitness);
      break;
    default:
      unint64_t v20 = (uint64_t *)&v17[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v21 = *v20;
      unint64_t v22 = (void *)v20[1];
      uint64_t v23 = v58;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v15, v17, v12);
      uint64_t v60 = 0;
      unint64_t v61 = 0xE000000000000000;
      v64._uint64_t countAndFlagsBits = 0x747265736E69;
      v64._object = (void *)0xE600000000000000;
      sub_10096BDC0(v64);
      swift_getWitnessTable();
      sub_10096D270();
      v65._uint64_t countAndFlagsBits = 0x3A79687720;
      v65._object = (void *)0xE500000000000000;
      sub_10096BDC0(v65);
      v66._uint64_t countAndFlagsBits = v21;
      v66._object = v22;
      sub_10096BDC0(v66);
      swift_bridgeObjectRelease();
      uint64_t v24 = v60;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
      break;
  }
  return v24;
}

uint64_t sub_10064C500(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = __chkstk_darwin(a1);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)v22 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9;
  unint64_t v11 = *(void (**)(char *))(v2 + 16);
  v11((char *)v22 - v9);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = ((uint64_t (*)(char *, char *, uint64_t))v11)(v5, v10, a1);
    __chkstk_darwin(v14);
    strcpy((char *)&v22[-4], "from to  reason ");
    v22[0] = type metadata accessor for SnapshotItem();
    v22[1] = v22[0];
    v22[2] = &type metadata for Fields;
    v22[3] = &type metadata for String;
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v16 = &v5[*(int *)(TupleTypeMetadata + 48)];
    uint64_t v17 = *(void *)&v5[*(int *)(TupleTypeMetadata + 64)];
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for SnapshotItem();
    uint64_t v19 = *(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8);
    v19(v16, v18);
    v19(v5, v18);
    if (!v17) {
      goto LABEL_6;
    }
  }
  else if (EnumCaseMultiPayload == 5)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v8, v10, a1);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getTupleTypeMetadata2();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, a1);
    return sub_10096C5A0();
  }
  uint64_t v20 = sub_10096C5D0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, a1);
  return v20;
}

uint64_t sub_10064C854()
{
  uint64_t result = type metadata accessor for ReconciliationID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10064C8FC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10064C93C(a1);
  return v2;
}

uint64_t sub_10064C93C(uint64_t a1)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 128)) = 0;
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v4 = type metadata accessor for ReconciliationID();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + *(void *)(*(void *)v1 + 112), a1, v4);
  return v1;
}

uint64_t sub_10064CA68@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v49) = a2;
  uint64_t v47 = a1;
  uint64_t v50 = a3;
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = sub_10096C890();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v38 - v9;
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v38 - v11;
  uint64_t v12 = *(void *)(v4 + 88);
  uint64_t v46 = *(void *)(v12 - 8);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v51 = v6;
  uint64_t v52 = v12;
  long long v53 = *(_OWORD *)(v5 + 96);
  uint64_t v15 = type metadata accessor for ReconciliationID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v18 = __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)(v4 + 128);
  if (*((unsigned char *)v3 + v23) == 1 && (v49 & 1) == 0)
  {
    uint64_t v24 = (uint64_t)v3 + *(void *)(v5 + 120);
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v50, v24, v15);
  }
  uint64_t v40 = v20;
  uint64_t v41 = v19;
  *((unsigned char *)v3 + v23) = 1;
  uint64_t v26 = (uint64_t)v3 + *(void *)(*v3 + 120);
  swift_beginAccess();
  int v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v49 = v26;
  v27(v22, v26, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = v27;
    uint64_t v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v14, v22, v12);
    uint64_t v29 = v48;
    uint64_t v30 = v54;
    (*(void (**)(char *))(**(void **)(v47 + 16) + 152))(v14);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
    if (v30) {
      return result;
    }
    uint64_t v31 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v29, 1, v6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
      uint64_t v33 = v49;
      uint64_t v32 = v50;
    }
    else
    {
      size_t v34 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      unint64_t v35 = v42;
      v34(v42, v29, v6);
      uint64_t v36 = v40;
      v34(v40, v35, v6);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v41, v36, v15);
      uint64_t v33 = v49;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v33, v37, v15);
      swift_endAccess();
      uint64_t v32 = v50;
    }
    int v27 = v39;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    uint64_t v33 = v49;
    uint64_t v32 = v50;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v27)(v32, v33, v15);
}

uint64_t sub_10064CFB8(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = v2[10];
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = v2[12];
  uint64_t v11 = v2[13];
  uint64_t v26 = v7;
  uint64_t v27 = v3;
  v21[1] = v10;
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v6, v15, v3);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_10096D270();
    uint64_t v18 = v24;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v15, v7);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_10096D270();
    uint64_t v18 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  }
  return v18;
}

uint64_t sub_10064D2C8(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v23 = (char *)&v21 - v5;
  uint64_t v6 = v2[10];
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = v2[12];
  uint64_t v10 = v2[13];
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v14, v3);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v3, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v8, v14, v6);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v6, v9);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  }
  return v18 & 1;
}

uint64_t sub_10064D5D8(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v23 = (char *)&v21 - v5;
  uint64_t v6 = v2[10];
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = v2[12];
  uint64_t v10 = v2[13];
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v14, v3);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 72))(v3, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v8, v14, v6);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v6, v9);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  }
  return v18 & 1;
}

uint64_t sub_10064D8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 104);
  uint64_t v16 = *(void *)(*v1 + 80);
  long long v15 = *(_OWORD *)(v4 + 88);
  long long v17 = v15;
  uint64_t v18 = v5;
  uint64_t v6 = type metadata accessor for ReconciliationID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - v8, (uint64_t)v1 + *(void *)(v3 + 112), v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = v15;
  uint64_t v12 = *(void *)(v15 - 8);
  uint64_t v13 = v12;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, void))(v12 + 32))(a1, v9, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v11);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v12 + 56))(a1, 1, 1, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_10064DAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  long long v4 = *(_OWORD *)(*v1 + 96);
  v15[0] = *(_OWORD *)(*v1 + 80);
  v15[1] = v15[0];
  v15[2] = v4;
  uint64_t v5 = type metadata accessor for ReconciliationID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = (uint64_t)v1 + *(void *)(v3 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = *(void *)&v15[0];
  uint64_t v12 = *(void *)(*(void *)&v15[0] - 8);
  uint64_t v13 = v12;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v12 + 56))(a1, 1, 1, *(void *)&v15[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(uint64_t, char *, void))(v12 + 32))(a1, v8, *(void *)&v15[0]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_10064DCEC(uint64_t a1, uint64_t a2)
{
  return sub_1005EC104(a1 + *(void *)(*(void *)a1 + 112), a2 + *(void *)(*(void *)a2 + 112), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_10064DD28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return sub_1005EC6F4(a1, v2);
}

uint64_t sub_10064DDB4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for ReconciliationID();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 120), v2);
  return v0;
}

uint64_t sub_10064DEA0()
{
  sub_10064DDB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPFSID()
{
  return swift_getGenericMetadata();
}

Swift::Int sub_10064DF10()
{
  sub_10096D4B0();
  sub_10064DD28((uint64_t)v1);
  return sub_10096D500();
}

Swift::Int sub_10064DF50()
{
  return sub_10064DF10();
}

uint64_t sub_10064DF74(uint64_t a1)
{
  return sub_10064DD28(a1);
}

Swift::Int sub_10064DF98()
{
  sub_10096D4B0();
  sub_10064DD28((uint64_t)v1);
  return sub_10096D500();
}

uint64_t sub_10064DFD8(uint64_t a1)
{
  return sub_10064CFB8(a1);
}

uint64_t sub_10064DFFC(uint64_t *a1, uint64_t *a2)
{
  return sub_10064DCEC(*a1, *a2);
}

uint64_t sub_10064E008()
{
  return swift_getWitnessTable();
}

libfssync::EvictionUrgency __swiftcall EvictionUrgency.bump(to:)(libfssync::EvictionUrgency to)
{
  if (to == libfssync_EvictionUrgency_nonEvictable) {
    return 0;
  }
  if (v1 == libfssync_EvictionUrgency_nonEvictable) {
    return v1;
  }
  if (v1 == libfssync_EvictionUrgency_unknown)
  {
    if (to <= libfssync_EvictionUrgency_high) {
      return 4;
    }
  }
  else if (to <= v1)
  {
    return v1;
  }
  return to;
}

uint64_t EvictionUrgency.onDiskValue.getter(char a1)
{
  return qword_100988718[a1];
}

libfssync::EvictionUrgency __swiftcall NSFileProviderContentPolicy.evictabilityUrgencyByContentPolicy()()
{
  if (v0 == 1002 || v0 == 3) {
    libfssync::EvictionUrgency v2 = libfssync_EvictionUrgency_softwareUpdate;
  }
  else {
    libfssync::EvictionUrgency v2 = libfssync_EvictionUrgency_high;
  }
  if (v0 == 500) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t EvictionUrgency.description.getter(char a1)
{
  uint64_t result = 0x74636976456E6F6ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 6579565;
      break;
    case 4:
      uint64_t result = 1751607656;
      break;
    case 5:
      uint64_t result = 21843;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10064E154()
{
  uint64_t result = 0x74636976456E6F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 6579565;
      break;
    case 4:
      uint64_t result = 1751607656;
      break;
    case 5:
      uint64_t result = 21843;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10064E200()
{
  return sub_10096C040();
}

uint64_t sub_10064E260()
{
  return sub_10096BFD0();
}

unint64_t sub_10064E2B4()
{
  unint64_t result = qword_100AD97F0;
  if (!qword_100AD97F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD97F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EvictionUrgency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10064E3D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EvictionUrgency()
{
  return &type metadata for EvictionUrgency;
}

unint64_t sub_10064E40C()
{
  unint64_t result = qword_100AD97F8;
  if (!qword_100AD97F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD97F8);
  }
  return result;
}

uint64_t UnsafeMutablePointer<A>.withFullPath<A>(cb:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  libfssync::EvictionUrgency v2 = (const char *)fpfs_fileattrs_fullpath();
  if (!v2) {
    return a1(0, 0);
  }
  int v3 = v2;
  int64_t v4 = strlen(v2);
  if (v4 < 1) {
    return a1(0, 0);
  }
  int64_t v5 = v4;
  id v6 = [self defaultManager];
  id v7 = [v6 stringWithFileSystemRepresentation:v3 length:v5];

  uint64_t v8 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v10 = v9;

  a1(v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t UnsafeMutablePointer<A>.withFilename<A>(cb:)(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  if (!v4) {
    return a1(0, 0);
  }
  int64_t v5 = strlen(*(const char **)(a3 + 24));
  if (v5 < 1) {
    return a1(0, 0);
  }
  int64_t v6 = v5;
  id v7 = [self defaultManager];
  id v8 = [v7 stringWithFileSystemRepresentation:v4 length:v6];

  uint64_t v9 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v11 = v10;

  a1(v9, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064E674(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11 = (const char *)fpfs_fileattrs_fullpath();
  if (v11 && (uint64_t v12 = v11, v13 = strlen(v11), v13 > 0))
  {
    int64_t v14 = v13;
    id v15 = [self defaultManager];
    id v16 = [v15 stringWithFileSystemRepresentation:v12 length:v14];

    uint64_t v17 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v19 = v18;

    a3(&v21, a5, v17, v19);
    if (v6)
    {
      *a6 = v6;
      swift_errorRelease();
    }
    else
    {
      *a2 = 0;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10064E7E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (const char *)fpfs_fileattrs_fullpath();
  if (v9 && (uint64_t v10 = v9, v11 = strlen(v9), v11 > 0))
  {
    int64_t v12 = v11;
    id v13 = [self defaultManager];
    id v14 = [v13 stringWithFileSystemRepresentation:v10 length:v12];

    uint64_t v15 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
    uint64_t v17 = v16;

    a3(&v25, a5, v15, v17);
    if (v5) {
      uint64_t v18 = v5;
    }
    else {
      uint64_t v18 = v25;
    }
    uint64_t v22 = *(void *)a2;
    char v23 = *(unsigned char *)(a2 + 8);
    *(void *)a2 = v18;
    *(unsigned char *)(a2 + 8) = v5 != 0;
    sub_1003545C4(v22, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100358858();
    uint64_t v19 = swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_100984A70;
    *(unsigned char *)(v20 + 16) = 10;
    uint64_t v21 = *(void *)a2;
    LOBYTE(v20) = *(unsigned char *)(a2 + 8);
    *(void *)a2 = v19;
    *(unsigned char *)(a2 + 8) = 1;
    sub_1003545C4(v21, v20);
  }
  return 0;
}

uint64_t sub_10064E960(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  return sub_10064E9A0(a1, a2, a3, a4, a5, (uint64_t *)&unk_100ACEC90);
}

uint64_t sub_10064E980(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  return sub_10064E9A0(a1, a2, a3, a4, a5, (uint64_t *)&unk_100ACEC50);
}

uint64_t sub_10064E9A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v40 = a5;
  uint64_t v41 = a4;
  uint64_t v42 = a3;
  uint64_t v9 = sub_10002B7CC(a6);
  uint64_t v10 = __chkstk_darwin(v9);
  int64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (uint64_t *)((char *)&v38 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v38 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v38 - v19);
  uint64_t v21 = (const char *)fpfs_fileattrs_fullpath();
  if (!v21)
  {
    sub_100358858();
    uint64_t v30 = swift_allocError();
    *(_OWORD *)uint64_t v31 = xmmword_100984A70;
    *(unsigned char *)(v31 + 16) = 10;
    *uint64_t v20 = v30;
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (uint64_t)v20;
    uint64_t v33 = a2;
LABEL_7:
    sub_1000148B8(v32, v33, a6);
    return 0;
  }
  uint64_t v22 = v21;
  uint64_t v39 = a2;
  int64_t v23 = strlen(v21);
  if (v23 <= 0)
  {
    sub_100358858();
    uint64_t v34 = swift_allocError();
    *(_OWORD *)uint64_t v35 = xmmword_100984A70;
    *(unsigned char *)(v35 + 16) = 10;
    *uint64_t v20 = v34;
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (uint64_t)v20;
    uint64_t v33 = v39;
    goto LABEL_7;
  }
  int64_t v24 = v23;
  id v25 = [self defaultManager];
  id v26 = [v25 stringWithFileSystemRepresentation:v22 length:v24];

  uint64_t v27 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v29 = v28;

  v42(v40, v27, v29);
  if (v6)
  {
    *uint64_t v15 = v6;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_10001AE98((uint64_t)v12, (uint64_t)v15, a6);
  }
  uint64_t v36 = v39;
  sub_10001AE98((uint64_t)v15, (uint64_t)v18, a6);
  sub_1000148B8((uint64_t)v18, v36, a6);
  swift_bridgeObjectRelease();
  return 0;
}

ValueMetadata *type metadata accessor for JobReason()
{
  return &type metadata for JobReason;
}

BOOL sub_10064EC78(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_10064ECA4(const mach_header_64 *a1)
{
  uint64_t result = 0;
  if ((uint64_t)a1 < 0x400000)
  {
    if ((uint64_t)a1 <= 1023)
    {
      if ((uint64_t)a1 <= 127)
      {
        switch((unint64_t)a1)
        {
          case 1uLL:
            uint64_t result = 0x6C6169726574616DLL;
            break;
          case 2uLL:
            uint64_t result = 0x6E6F697463697665;
            break;
          case 4uLL:
          case 8uLL:
            uint64_t result = 0xD000000000000013;
            break;
          case 0x10uLL:
            uint64_t result = 0x6F4E7265646C6F66;
            break;
          case 0x20uLL:
            uint64_t result = 0xD000000000000014;
            break;
          case 0x40uLL:
            uint64_t result = 0xD000000000000016;
            break;
          default:
            return result;
        }
        return result;
      }
      unint64_t v22 = 0xD000000000000012;
      uint64_t v27 = 0x697665526D657469;
      if (a1 != (const mach_header_64 *)512) {
        uint64_t v27 = 0;
      }
      if (a1 == (const mach_header_64 *)256) {
        unint64_t v23 = 0xD000000000000014;
      }
      else {
        unint64_t v23 = v27;
      }
      BOOL v25 = a1 == (const mach_header_64 *)128;
    }
    else
    {
      if ((uint64_t)a1 < 0x8000)
      {
        if ((uint64_t)a1 <= 4095)
        {
          if (a1 == (const mach_header_64 *)2048) {
            unint64_t v28 = 0xD000000000000011;
          }
          else {
            unint64_t v28 = 0;
          }
          if (a1 == (const mach_header_64 *)1024) {
            return 0xD000000000000011;
          }
          else {
            return v28;
          }
        }
        else
        {
          unint64_t v15 = 0xD00000000000001FLL;
          unint64_t v16 = 0xD000000000000011;
          if (a1 != (const mach_header_64 *)0x4000) {
            unint64_t v16 = 0;
          }
          if (a1 != (const mach_header_64 *)0x2000) {
            unint64_t v15 = v16;
          }
          if (a1 == (const mach_header_64 *)4096) {
            return 0xD000000000000013;
          }
          else {
            return v15;
          }
        }
      }
      if ((uint64_t)a1 < 0x40000)
      {
        uint64_t v4 = 0x6F706D496B736964;
        uint64_t v5 = 0x6F706D496B736964;
        if (a1 != (const mach_header_64 *)0x20000) {
          uint64_t v5 = 0;
        }
        if (a1 != (const mach_header_64 *)0x10000) {
          uint64_t v4 = v5;
        }
        if (a1 == (const mach_header_64 *)0x8000) {
          return 0x65526D6165727473;
        }
        else {
          return v4;
        }
      }
      unint64_t v22 = 0xD000000000000010;
      unint64_t v23 = 0xD000000000000015;
      uint64_t v24 = 0x6165726C4179616DLL;
      if (a1 != (const mach_header_64 *)0x200000) {
        uint64_t v24 = 0;
      }
      if (a1 != (const mach_header_64 *)0x80000) {
        unint64_t v23 = v24;
      }
      BOOL v25 = a1 == (const mach_header_64 *)0x40000;
    }
    if (v25) {
      return v22;
    }
    else {
      return v23;
    }
  }
  if ((uint64_t)a1 <= 0x1FFFFFFFFLL)
  {
    if ((uint64_t)a1 <= 0x7FFFFFF)
    {
      uint64_t v10 = 0x67696E556D657469;
      if (a1 != (const mach_header_64 *)0x4000000) {
        uint64_t v10 = 0;
      }
      if (a1 == (const mach_header_64 *)0x2000000) {
        uint64_t v11 = 0x6F6E67496D657469;
      }
      else {
        uint64_t v11 = v10;
      }
      if (a1 == (const mach_header_64 *)0x1000000) {
        uint64_t v12 = 0x756F72676B636162;
      }
      else {
        uint64_t v12 = v11;
      }
      uint64_t v13 = 0x72654D736D657469;
      uint64_t v14 = 0x7571655272657375;
      if (a1 != (const mach_header_64 *)0x800000) {
        uint64_t v14 = 0;
      }
      if (a1 != (const mach_header_64 *)0x400000) {
        uint64_t v13 = v14;
      }
      if ((uint64_t)a1 <= 0xFFFFFF) {
        return v13;
      }
      else {
        return v12;
      }
    }
    else if ((uint64_t)a1 > 0x3FFFFFFF)
    {
      if (a1 == (const mach_header_64 *)0x40000000)
      {
        return 0xD00000000000001BLL;
      }
      else if (a1 == (const mach_header_64 *)0x80000000)
      {
        return 0x65766F4D6D657469;
      }
      else if (a1 == &_mh_execute_header)
      {
        return 0xD00000000000001BLL;
      }
    }
    else if (a1 == (const mach_header_64 *)0x8000000)
    {
      return 0x55746E65746E6F63;
    }
    else
    {
      if (a1 == (const mach_header_64 *)0x20000000) {
        unint64_t v3 = 0xD000000000000014;
      }
      else {
        unint64_t v3 = 0;
      }
      if (a1 == (const mach_header_64 *)0x10000000) {
        return 0xD000000000000012;
      }
      else {
        return v3;
      }
    }
    return result;
  }
  if ((uint64_t)a1 <= 0x3FFFFFFFFFLL)
  {
    if ((uint64_t)a1 <= 0x7FFFFFFFFLL)
    {
      uint64_t v6 = 0x200000000;
      unint64_t v7 = 0xD00000000000001ALL;
      BOOL v8 = a1 == (const mach_header_64 *)0x400000000;
      uint64_t v9 = 0x74616C7563657073;
LABEL_89:
      if (!v8) {
        uint64_t v9 = 0;
      }
      if (a1 == (const mach_header_64 *)v6) {
        return v7;
      }
      else {
        return v9;
      }
    }
    uint64_t v17 = 0x800000000;
    unint64_t v18 = 0xD00000000000001ALL;
    uint64_t v19 = 0x1000000000;
    BOOL v20 = a1 == (const mach_header_64 *)0x2000000000;
    uint64_t v21 = 0x64616F6C70756572;
  }
  else
  {
    if ((uint64_t)a1 <= 0x1FFFFFFFFFFLL)
    {
      if (a1 == (const mach_header_64 *)0x4000000000) {
        return 0x74616C7563657073;
      }
      uint64_t v6 = 0x8000000000;
      unint64_t v7 = 0xD00000000000001ELL;
      BOOL v8 = a1 == (const mach_header_64 *)0x10000000000;
      uint64_t v9 = 0x684364656E6E6970;
      goto LABEL_89;
    }
    uint64_t v17 = 0x20000000000;
    unint64_t v18 = 0xD000000000000011;
    uint64_t v19 = 0x40000000000;
    BOOL v20 = a1 == (const mach_header_64 *)0x80000000000;
    uint64_t v21 = 0x446D7269666E6F63;
  }
  if (!v20) {
    uint64_t v21 = 0;
  }
  if (a1 == (const mach_header_64 *)v19) {
    unint64_t v26 = 0xD000000000000013;
  }
  else {
    unint64_t v26 = v21;
  }
  if (a1 == (const mach_header_64 *)v17) {
    return v18;
  }
  else {
    return v26;
  }
}

uint64_t sub_10064F4E8()
{
  return sub_10064ECA4(*v0);
}

uint64_t sub_10064F4F0()
{
  return sub_10060967C(*v0);
}

uint64_t sub_10064F4F8()
{
  return sub_1006F0148(*v0);
}

unint64_t sub_10064F504()
{
  unint64_t result = qword_100AD9800;
  if (!qword_100AD9800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9800);
  }
  return result;
}

unint64_t sub_10064F55C()
{
  unint64_t result = qword_100AD9808;
  if (!qword_100AD9808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9808);
  }
  return result;
}

unint64_t sub_10064F5B4()
{
  unint64_t result = qword_100AD9810;
  if (!qword_100AD9810)
  {
    sub_100033BE8(&qword_100AD9818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9810);
  }
  return result;
}

unint64_t sub_10064F614()
{
  unint64_t result = qword_100AD9820;
  if (!qword_100AD9820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9820);
  }
  return result;
}

unint64_t sub_10064F66C()
{
  unint64_t result = qword_100AD9828;
  if (!qword_100AD9828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9828);
  }
  return result;
}

uint64_t sub_10064F6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10064F7C0(a1, a2, a3, (uint64_t (*)(void))sub_10064F6EC, (uint64_t (*)(void))sub_10064F740);
}

unint64_t sub_10064F6EC()
{
  unint64_t result = qword_100AD9850;
  if (!qword_100AD9850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9850);
  }
  return result;
}

unint64_t sub_10064F740()
{
  unint64_t result = qword_100AD9858;
  if (!qword_100AD9858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9858);
  }
  return result;
}

uint64_t sub_10064F794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10064F7C0(a1, a2, a3, (uint64_t (*)(void))sub_10064F7FC, (uint64_t (*)(void))sub_10064F850);
}

uint64_t sub_10064F7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10064F7FC()
{
  unint64_t result = qword_100AD9860;
  if (!qword_100AD9860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9860);
  }
  return result;
}

unint64_t sub_10064F850()
{
  unint64_t result = qword_100AD9868;
  if (!qword_100AD9868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9868);
  }
  return result;
}

unint64_t static FPCKPendingSetInternalError.errorDomain.getter()
{
  return 0xD000000000000021;
}

uint64_t FPCKPendingSetInternalError.errorCode.getter(uint64_t a1, char a2)
{
  uint64_t result = 1;
  switch(a2)
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 8;
      break;
    case 5:
      uint64_t result = 9;
      break;
    case 6:
      uint64_t result = 14;
      break;
    case 7:
      uint64_t result = 15;
      break;
    case 8:
      uint64_t result = 5;
      break;
    case 9:
      uint64_t result = 13;
      break;
    case 10:
      uint64_t result = 12;
      break;
    case 11:
      uint64_t result = qword_100988A70[a1];
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10064F980(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 112) == 2)
  {
    uint64_t v4 = *(void *)(a1 + 96);
    uint64_t v3 = *(void *)(a1 + 104);
    swift_retain();
    uint64_t v5 = sub_10064FA1C(a2, 18, 0xBu);
    sub_1000D31F8(v4, v3, 2);
    return v5;
  }
  else
  {
    return sub_10064FA1C(a2, 19, 0xBu);
  }
}

uint64_t sub_10064FA1C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6 = sub_10096B0E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096B0D0();
  sub_10096B080();
  double v11 = v10;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  double v13 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__((uint64_t)v13, -86400000000000))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2;
  if ((uint64_t)v13 - 86400000000000 >= a1)
  {
    sub_1004A485C();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v15 = a2;
    *(unsigned char *)(v15 + 8) = a3;
  }
  sub_10064FEA4(a2, a3);
  return v14;
}

unint64_t FPCKPendingSetInternalError.errorUserInfo.getter(uint64_t a1, unsigned __int8 a2)
{
  sub_10002B7CC(&qword_100ACE1E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100973BB0;
  *(void *)(inited + 32) = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  *(void *)(inited + 40) = v5;
  *(void *)&long long v18 = a1;
  BYTE8(v18) = a2;
  sub_10064FEA4(a1, a2);
  uint64_t v6 = sub_10096BCC0();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  unint64_t v8 = sub_10004621C(inited);
  if (a2 < 8u) {
    goto LABEL_2;
  }
  if (a2 - 8 >= 2)
  {
    if (a2 != 10) {
      return v8;
    }
LABEL_2:
    if (!a1) {
      return v8;
    }
  }
  uint64_t v9 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  uint64_t v11 = v10;
  swift_getErrorValue();
  uint64_t v19 = v17;
  uint64_t v12 = sub_10009C958((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v16, v17);
  sub_100042A48(&v18, v15);
  sub_10064FEA4(a1, a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10037BFD0(v15, v9, v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  return v8;
}

uint64_t sub_10064FD64()
{
  uint64_t result = 1;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 8;
      break;
    case 5:
      uint64_t result = 9;
      break;
    case 6:
      uint64_t result = 14;
      break;
    case 7:
      uint64_t result = 15;
      break;
    case 8:
      uint64_t result = 5;
      break;
    case 9:
      uint64_t result = 13;
      break;
    case 0xA:
      uint64_t result = 12;
      break;
    case 0xB:
      uint64_t result = qword_100988A70[*(void *)v0];
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10064FE20()
{
  return FPCKPendingSetInternalError.errorUserInfo.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_10064FE2C(uint64_t a1)
{
  unint64_t v2 = sub_100650244();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10064FE68(uint64_t a1)
{
  unint64_t v2 = sub_100650244();

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10064FEA4(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 0xAu) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_10064FEA4(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FPCKPendingSetInternalError(uint64_t a1)
{
  return sub_10064FF14(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_10064FF14(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 0xAu) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t assignWithCopy for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_10064FEA4(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_10064FF14(v5, v6);
  return a1;
}

uint64_t assignWithTake for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_10064FF14(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FPCKPendingSetInternalError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 0xB) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FPCKPendingSetInternalError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 245;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100650048(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 0xAu) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 11);
  }
}

uint64_t sub_100650060(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xB)
  {
    *(void *)uint64_t result = a2 - 11;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FPCKPendingSetInternalError()
{
  return &type metadata for FPCKPendingSetInternalError;
}

uint64_t sub_100650088(uint64_t a1, uint64_t a2)
{
  switch(a1)
  {
    case 2:
      sub_1004A485C();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v4 = a2;
      *(unsigned char *)(v4 + 8) = 0;
      goto LABEL_11;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      goto LABEL_5;
    case 4:
      sub_1004A485C();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 6;
      goto LABEL_10;
    case 8:
      sub_1004A485C();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 5;
      goto LABEL_10;
    case 16:
      sub_1004A485C();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 7;
      goto LABEL_10;
    default:
      if (a1 == 1024)
      {
        sub_1004A485C();
        uint64_t v3 = swift_allocError();
        *(void *)uint64_t v5 = a2;
        char v6 = 1;
LABEL_10:
        *(unsigned char *)(v5 + 8) = v6;
LABEL_11:
        swift_errorRetain();
      }
      else
      {
LABEL_5:
        if (a2)
        {
          swift_errorRetain();
          return a2;
        }
        else
        {
          sub_1004A485C();
          uint64_t v3 = swift_allocError();
          *(void *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 8) = 11;
        }
      }
      return v3;
  }
}

unint64_t sub_100650244()
{
  unint64_t result = qword_100AD9870[0];
  if (!qword_100AD9870[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD9870);
  }
  return result;
}

uint64_t sub_10065029C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100650324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10096C230();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a7;
  _OWORD v15[3] = a8;
  v15[4] = a9;
  v15[5] = a1;
  void v15[6] = a2;
  sub_100651140((uint64_t)sub_100651118, (uint64_t)v15, v9, a7, a8, a9);
  if (v10) {
    return swift_release();
  }
  int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_10096CBD0(66);
    v18._object = (void *)0x80000001009AE650;
    v18._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    sub_10096BDC0(v18);
    sub_10096D260();
    v19._uint64_t countAndFlagsBits = 46;
    v19._object = (void *)0xE100000000000000;
    sub_10096BDC0(v19);
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006504DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002B7CC(&qword_100AD6540);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10096C270();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_100651398((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_10096C260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_10096C230();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100AD9900;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100650718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  long long v5 = *(_OWORD *)(*(void *)a4 + 96);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(*(void *)a4 + 80);
  *(_OWORD *)(v4 + 32) = v5;
  type metadata accessor for StuckDeletionMonitor();
  swift_getWitnessTable();
  uint64_t v7 = sub_10096C230();
  return _swift_task_switch(sub_1006507F0, v7, v6);
}

uint64_t sub_1006507F0()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 48) + 64);
  swift_retain();
  return _swift_task_switch(sub_100650864, 0, 0);
}

uint64_t sub_100650864()
{
  if (*(void *)(v0 + 56))
  {
    sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
    sub_10096C280();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006508F8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v8 = a1;
  uint64_t v9 = v1;
  long long v3 = *(_OWORD *)(v2 + 96);
  long long v10 = *(_OWORD *)(v2 + 80);
  long long v11 = v3;
  uint64_t v4 = type metadata accessor for StuckDeletionMonitor();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_100650324((uint64_t)sub_1006510EC, (uint64_t)v7, (uint64_t)"libfssync/StuckDeletionMonitor.swift", 36, 2, 73, v4, (uint64_t)&type metadata for () + 8, WitnessTable);
}

uint64_t sub_1006509C8(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = *a1;
  sub_10002689C(a2, v6);
  sub_10059A0E8(0xD000000000000021, (void *)0x80000001009A3F10, v6, v7);
  uint64_t v9 = a1[7];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_10002689C(a2, v10);
  long long v12 = *(_OWORD *)(v8 + 96);
  v18[1] = *(_OWORD *)(v8 + 80);
  void v18[2] = v12;
  uint64_t v19 = v9;
  swift_bridgeObjectRetain();
  sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_100651254, (uint64_t)v18, v10, (uint64_t)&type metadata for () + 8, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_10002689C(a2, v13);
  sub_10059A0E8(0xD00000000000001DLL, (void *)0x80000001009A3F40, v13, v14);
  uint64_t v15 = a2[3];
  uint64_t v16 = a2[4];
  sub_10002689C(a2, v15);
  return sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_100651278, a3, v15, (uint64_t)&type metadata for () + 8, v16);
}

uint64_t sub_100650B80(void *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_10096C890();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_10096C360())
  {
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_10002689C(a1, v10);
    return sub_10059A0E8(0xD000000000000013, (void *)0x80000001009A3F90, v10, v11);
  }
  uint64_t v36 = AssociatedConformanceWitness;
  uint64_t v37 = a1;
  uint64_t v33 = v2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10096CAA0();
    uint64_t result = sub_10096C370();
    a2 = v41;
    uint64_t v32 = v42;
    uint64_t v13 = v43;
    uint64_t v35 = v44;
    unint64_t v14 = v45;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 56);
    uint64_t v32 = a2 + 56;
    uint64_t v17 = ~v15;
    uint64_t v18 = -v15;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v14 = v19 & v16;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v13 = v17;
    uint64_t v35 = 0;
  }
  uint64_t v34 = a2 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v46 = AssociatedTypeWitness - 8;
  uint64_t v30 = v13;
  int64_t v31 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v38 = a2;
  while (a2 < 0)
  {
    if (!sub_10096CAD0()) {
      goto LABEL_29;
    }
    sub_10096D290();
    swift_unknownObjectRelease();
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
LABEL_12:
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, AssociatedTypeWitness);
    uint64_t v25 = v37[3];
    uint64_t v24 = v37[4];
    sub_10002689C(v37, v25);
    uint64_t v39 = 0;
    uint64_t v40 = (void *)0xE000000000000000;
    sub_10096D270();
    sub_10059A0E8(v39, v40, v25, v24);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, AssociatedTypeWitness);
    a2 = v38;
  }
  if (v14)
  {
    unint64_t v20 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v21 = v20 | (v35 << 6);
LABEL_11:
    uint64_t v22 = *(void *)(a2 + 48);
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v8, v22 + *(void *)(v23 + 72) * v21, AssociatedTypeWitness);
    goto LABEL_12;
  }
  int64_t v26 = v35 + 1;
  if (!__OFADD__(v35, 1))
  {
    if (v26 >= v31) {
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v32 + 8 * v26);
    uint64_t v28 = v35 + 1;
    if (!v27)
    {
      uint64_t v28 = v35 + 2;
      if (v35 + 2 >= v31) {
        goto LABEL_29;
      }
      unint64_t v27 = *(void *)(v32 + 8 * v28);
      if (!v27)
      {
        uint64_t v28 = v35 + 3;
        if (v35 + 3 >= v31) {
          goto LABEL_29;
        }
        unint64_t v27 = *(void *)(v32 + 8 * v28);
        if (!v27)
        {
          uint64_t v29 = v35 + 4;
          while (v31 != v29)
          {
            unint64_t v27 = *(void *)(v32 + 8 * v29++);
            if (v27)
            {
              uint64_t v28 = v29 - 1;
              goto LABEL_26;
            }
          }
LABEL_29:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
          return sub_1000146B4();
        }
      }
    }
LABEL_26:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v28 << 6);
    uint64_t v35 = v28;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100651038()
{
  return sub_10096C800();
}

uint64_t sub_10065105C()
{
  swift_weakDestroy();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10065109C()
{
  sub_10065105C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StuckDeletionMonitor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1006510EC(uint64_t *a1)
{
  return sub_1006509C8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100651108()
{
  return swift_deallocObject();
}

uint64_t sub_100651118()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_100651140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  swift_retain();
  uint64_t v14 = a3;
  sub_100651228(&v14);
  return swift_release();
}

uint64_t sub_1006511F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100651228(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 40))(*a1);
}

uint64_t sub_100651254(void *a1)
{
  return sub_100650B80(a1, *(void *)(v1 + 48));
}

uint64_t sub_100651278(uint64_t a1)
{
  return sub_1000A62E4(a1);
}

uint64_t sub_1006512A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006512E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1003103E8;
  return sub_100650718(a1, v4, v5, v6);
}

uint64_t sub_100651398(uint64_t a1)
{
  uint64_t v2 = sub_10002B7CC(&qword_100AD6540);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006513F8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100651430()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1006514B8()
{
  return 0xD000000000000221;
}

unint64_t sub_1006514D4()
{
  return 0xD000000000000073;
}

unint64_t sub_1006514F0()
{
  return 0xD000000000000092;
}

unint64_t sub_10065150C()
{
  return 0xD000000000000086;
}

unint64_t sub_100651528()
{
  return 0xD00000000000006ELL;
}

unint64_t sub_100651544()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_100651564()
{
  uint64_t v0 = sub_10002B7CC(&qword_100ACA8C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10096A630();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10096A5E0();
  uint64_t v7 = sub_10096AE50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_10096A640();
  sub_10002B770((uint64_t)v2, &qword_100ACA8C0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t result = swift_errorRelease();
  qword_100B0B2B0 = (uint64_t)&off_100A6CC68;
  return result;
}

void sub_1006516F0()
{
  qword_100B0B2B8 = (uint64_t)&off_100A6B9F8;
}

void sub_100651704()
{
  qword_100B0B2C0 = (uint64_t)&off_100A6C7C8;
}

uint64_t sub_10065171C()
{
  sub_10014D284();
  v1._uint64_t countAndFlagsBits = sub_10096BEB0();
  sub_10096BDC0(v1);
  swift_bridgeObjectRelease();
  return 74;
}

uint64_t sub_10065178C()
{
  return 1280267850;
}

BOOL sub_10065179C()
{
  return sub_100171278() || sub_100171278();
}

void sub_1006517E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v11 = *(void **)(v4 + 16);
  long long v12 = (void *)swift_allocObject();
  v12[2] = v6;
  v12[3] = a1;
  v12[4] = a2;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = sub_10058A7B4;
  v13[3] = v12;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A959B0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v15 = [v11 fetchSwift:v14 error:aBlock];
  _Block_release(v14);
  id v17 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6) {
    __break(1u);
  }
  if (v15)
  {
    if (objc_msgSend(v15, "next", v17))
    {
      while (1)
      {
        sub_100651A70(a3, a4, v15);
        if (v5) {
          break;
        }
        if (([v15 next] & 1) == 0) {
          goto LABEL_9;
        }
      }
    }
LABEL_9:
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_100651A70(void (*a1)(uint64_t), uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for FSOrFPJob();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1006FCC9C(a3, 0, v6, WitnessTable, (uint64_t)&v9);
  if (!v3)
  {
    a1(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_100651B38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void *)swift_allocObject();
  unsigned __int8 v8 = v7;
  _OWORD v7[2] = sub_10065D640;
  v7[3] = v6;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A95938;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v10 = [v5 fetchSwift:v9 error:aBlock];
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    unsigned __int8 v8 = [v10 next];
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return v8 & 1;
}

unint64_t sub_100651D28(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_10096CBD0(39);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = a2(a1);
  sub_10096BDC0(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x2054494D494C200ALL;
  v6._object = (void *)0xE900000000000031;
  sub_10096BDC0(v6);
  return 0xD00000000000001CLL;
}

uint64_t sub_100651DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v10 = 0xF000000000000007;
  long long v5 = *(_OWORD *)(v4 + 560);
  v8[1] = *(_OWORD *)(v4 + 544);
  _OWORD v8[2] = v5;
  uint64_t v9 = &v10;
  sub_1006517E4(a1, a2, (void (*)(uint64_t))sub_10065D5EC, (uint64_t)v8);
  uint64_t v6 = v10;
  if (v3) {
    sub_10010D854(v10);
  }
  return v6;
}

uint64_t sub_100651E78(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100651DE0(a1, a2);
  if (!v2)
  {
    if ((~result & 0xF000000000000007) != 0)
    {
      if (result < 0)
      {
        uint64_t result = sub_10096CE20();
        __break(1u);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100651F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100651DE0(a1, a2);
  if (v2) {
    return v4;
  }
  if ((~v3 & 0xF000000000000007) == 0) {
    return 0;
  }
  if (v3 < 0) {
    return v3 & 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_10096CE20();
  __break(1u);
  return result;
}

uint64_t sub_100651F90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void **)(v3 + 16);
  [v6 assertOnQueue];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = a1;
  unsigned __int8 v8 = (void *)swift_allocObject();
  _OWORD v8[2] = sub_10065D5D4;
  _OWORD v8[3] = v7;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A958C0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v10 = [v6 executeSwift:v9 error:aBlock];
  _Block_release(v9);
  id v11 = aBlock[0];
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v9) {
    __break(1u);
  }
  if (v10)
  {
    id v12 = [v6 lastInsertedRowID];
    a2[3] = &type metadata for SQLJobID;
    a2[4] = sub_10058A824();
    uint64_t result = swift_release();
    *a2 = v12;
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006521BC(uint64_t a1, void *a2, uint64_t a3)
{
  long long v5 = (void *)*a2;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_10096CBD0(100);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v33._object = (void *)0x80000001009AEFE0;
  sub_10096BDC0(v33);
  uint64_t v6 = a2[8];
  uint64_t v7 = (void *)a2[9];
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = v6;
  v34._object = v7;
  sub_10096BDC0(v34);
  swift_bridgeObjectRelease();
  v35._object = (void *)0xEA00000000002820;
  v35._uint64_t countAndFlagsBits = 0x5345554C41560A29;
  sub_10096BDC0(v35);
  uint64_t v8 = v5[68];
  unint64_t v9 = v5[69];
  uint64_t v10 = v5[70];
  id v11 = (void *)v5[71];
  sub_10061515C(a3);
  uint64_t v30 = &type metadata for Int;
  uint64_t v27 = v12;
  uint64_t v13 = sub_1003AC444((uint64_t)&v27);
  id v15 = v14;
  sub_10002B770((uint64_t)&v27, (uint64_t *)&unk_100ACE0F0);
  if (!v15) {
    goto LABEL_4;
  }
  v36._uint64_t countAndFlagsBits = v13;
  v36._object = v15;
  sub_10096BDC0(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
  v37._object = (void *)0xEA00000000002020;
  sub_10096BDC0(v37);
  uint64_t v16 = sub_10061515C(a3);
  uint64_t v30 = &type metadata for UInt;
  uint64_t v27 = v16;
  uint64_t v17 = sub_1003AC444((uint64_t)&v27);
  uint64_t v19 = v18;
  sub_10002B770((uint64_t)&v27, (uint64_t *)&unk_100ACE0F0);
  if (v19)
  {
    v38._uint64_t countAndFlagsBits = v17;
    v38._object = v19;
    sub_10096BDC0(v38);
    swift_bridgeObjectRelease();
    v39._uint64_t countAndFlagsBits = 0x2020202020200A2CLL;
    v39._object = (void *)0xEA00000000002020;
    sub_10096BDC0(v39);
    uint64_t v26 = a3;
    swift_retain();
    uint64_t v27 = v8;
    unint64_t v28 = v9;
    uint64_t v29 = v10;
    uint64_t v30 = v11;
    uint64_t v20 = type metadata accessor for FSOrFPJob();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v22 = sub_1003AA6C4((uint64_t)&v26, v20, WitnessTable);
    uint64_t v24 = v23;
    swift_release();
    v40._uint64_t countAndFlagsBits = v22;
    v40._object = v24;
    sub_10096BDC0(v40);
    swift_bridgeObjectRelease();
    v41._uint64_t countAndFlagsBits = 41;
    v41._object = (void *)0xE100000000000000;
    sub_10096BDC0(v41);
    return v31;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006524C8(void **a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void ***)(v1 + 16);
  [v4 assertOnQueue];
  uint64_t v5 = v3[68];
  uint64_t v6 = v3[69];
  uint64_t v7 = v3[70];
  uint64_t v8 = v3[71];
  sub_100615324((uint64_t)a1, (uint64_t)&aBlock);
  if (!v45)
  {
    sub_10002B770((uint64_t)&aBlock, qword_100ACE608);
LABEL_36:
    sub_1007147A4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift", 138, 2, 187);
  }
  sub_10002B7CC(&qword_100AD6E60);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_36;
  }
  id v9 = v41;
  uint64_t v10 = sub_100615748((uint64_t)a1);
  if (v12 == 3 || (v12 == 4 ? (BOOL v13 = (v10 & 0xFFFFFFFFFFFFFFFELL | v11) == 0) : (BOOL v13 = 0), v13))
  {
    if (*(unsigned char *)(v1 + 48) == 1)
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v41;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_10058AB3C;
      *(void *)(v8 + 24) = v14;
      uint64_t v46 = sub_1001FB2E8;
      uint64_t v47 = v8;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_10017090C;
      unint64_t v45 = &unk_100A95848;
      id v15 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t aBlock = 0;
      id v9 = [v4 executeSwift:v15 error:&aBlock];
      _Block_release(v15);
      a1 = aBlock;
      uint64_t v4 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
LABEL_24:
        if (v9) {
          return swift_release();
        }
        sub_10096ABF0();

        swift_willThrow();
        return swift_release();
      }
      __break(1u);
    }
  }
  uint64_t v17 = sub_100615748((uint64_t)a1);
  if (v19 != 1) {
    goto LABEL_23;
  }
  uint64_t v20 = v17;
  if (!v17)
  {
    sub_10009C5FC(0, v18, 1);
    goto LABEL_23;
  }
  id v39 = v9;
  Swift::String v40 = v4;
  unint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 88);
  uint64_t v22 = v18;
  uint64_t v23 = sub_10009C5FC(v17, v18, 1);
  uint64_t v24 = v21(v23);
  if (v26 != 3 || v24 != 1 || v25 != 0)
  {
    sub_10017DCB0(v24, v25, v26);
    sub_1000D31F8(v20, v22, 1);
    id v9 = v39;
    uint64_t v4 = v40;
LABEL_23:
    uint64_t v29 = (void *)swift_allocObject();
    void v29[2] = v5;
    v29[3] = v6;
    v29[4] = v7;
    v29[5] = v8;
    v29[6] = a1;
    v29[7] = v9;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_10065D4C8;
    *(void *)(v30 + 24) = v29;
    uint64_t v46 = sub_1001FB2E8;
    uint64_t v47 = v30;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_10017090C;
    unint64_t v45 = &unk_100A95758;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t aBlock = 0;
    LODWORD(v9) = [v4 executeSwift:v31 error:&aBlock];
    _Block_release(v31);
    uint64_t v4 = aBlock;
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v31 & 1) == 0) {
      goto LABEL_24;
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  uint64_t v33 = v20;
  Swift::String v34 = (void *)swift_allocObject();
  v34[2] = v5;
  v34[3] = v6;
  v34[4] = v7;
  v34[5] = v8;
  v34[6] = a1;
  v34[7] = v39;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_10065D530;
  *(void *)(v35 + 24) = v34;
  uint64_t v46 = sub_1001FB2E8;
  uint64_t v47 = v35;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  uint64_t v44 = sub_10017090C;
  unint64_t v45 = &unk_100A957D0;
  Swift::String v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v37 = [v40 executeSwift:v36 error:&aBlock];
  _Block_release(v36);
  Swift::String v38 = aBlock;
  LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v36) {
    goto LABEL_34;
  }
  if (v37)
  {
    sub_1000D31F8(v33, v22, 1);
    return swift_release();
  }
  sub_10096ABF0();

  swift_willThrow();
  sub_1000D31F8(v33, v22, 1);
  return swift_release();
}

unint64_t sub_100652B28(uint64_t a1, uint64_t a2)
{
  sub_10096CBD0(36);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = sub_10025E124(a2, 0);
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  return 0xD000000000000022;
}

uint64_t sub_100652BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = 0xE000000000000000;
  sub_10096CBD0(156);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0xD000000000000013;
  v26._object = (void *)0x80000001009A5240;
  sub_10096BDC0(v26);
  uint64_t v4 = sub_100615748(a2);
  uint64_t v6 = v5;
  char v8 = v7;
  sub_10009C5FC(v4, v5, v7);
  uint64_t v9 = sub_1004B5754(v4, v6, v8, 0x696C756465686373, 0xEB000000005F676ELL);
  uint64_t v11 = v10;
  sub_1000D31F8(v4, v6, v8);
  v27._uint64_t countAndFlagsBits = v9;
  v27._object = v11;
  sub_10096BDC0(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v28._object = (void *)0x80000001009A5260;
  sub_10096BDC0(v28);
  sub_10061515C(a2);
  uint64_t v23 = &type metadata for Int;
  v22[0] = v12;
  uint64_t v13 = sub_1003AC444((uint64_t)v22);
  id v15 = v14;
  sub_10002B770((uint64_t)v22, (uint64_t *)&unk_100ACE0F0);
  if (!v15) {
    goto LABEL_4;
  }
  v29._uint64_t countAndFlagsBits = v13;
  v29._object = v15;
  sub_10096BDC0(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 0xD000000000000039;
  v30._object = (void *)0x80000001009A52A0;
  sub_10096BDC0(v30);
  uint64_t v16 = sub_10061515C(a2);
  uint64_t v23 = &type metadata for UInt;
  v22[0] = v16;
  uint64_t v17 = sub_1003AC444((uint64_t)v22);
  char v19 = v18;
  sub_10002B770((uint64_t)v22, (uint64_t *)&unk_100ACE0F0);
  if (v19)
  {
    v31._uint64_t countAndFlagsBits = v17;
    v31._object = v19;
    sub_10096BDC0(v31);
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = 0x4552454857200A29;
    v32._object = (void *)0xEE00203D20646920;
    sub_10096BDC0(v32);
    v33._uint64_t countAndFlagsBits = sub_10025E124(a3, 0);
    sub_10096BDC0(v33);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

unint64_t sub_100652EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10096CBD0(36);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100615748(a2);
  uint64_t v7 = v6;
  char v9 = v8;
  sub_10009C5FC(v5, v6, v8);
  uint64_t v10 = sub_1004B5754(v5, v7, v9, 0x696C756465686373, 0xEB000000005F676ELL);
  uint64_t v12 = v11;
  sub_1000D31F8(v5, v7, v9);
  v14._uint64_t countAndFlagsBits = v10;
  v14._object = v12;
  sub_10096BDC0(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x204552454857200ALL;
  v15._object = (void *)0xED0000203D206469;
  sub_10096BDC0(v15);
  v16._uint64_t countAndFlagsBits = sub_10025E124(a3, 0);
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

void **sub_10065301C(uint64_t a1, void **a2)
{
  Swift::String v76 = (void (**)(char *, uint64_t))a2;
  Swift::String v82 = (void **)a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 544);
  uint64_t v4 = *(void *)(*(void *)v2 + 560);
  uint64_t v5 = *(ValueMetadata **)(*(void *)v2 + 568);
  uint64_t v79 = *(void *)(*(void *)v2 + 552);
  uint64_t v80 = v3;
  uint64_t v83 = v3;
  uint64_t v84 = v79;
  uint64_t v85 = v4;
  unint64_t v86 = v5;
  uint64_t v68 = type metadata accessor for PersistenceTrigger();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  Swift::String v66 = (void ***)((char *)&v65 - v6);
  uint64_t v7 = sub_10096B3D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v81 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10002B7CC(&qword_100AD0830);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v65 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v16);
  Swift::String v78 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100ACC1C8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_100B0B648;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  unint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  v91._uint64_t countAndFlagsBits = 0x2074736973726570;
  v91._object = (void *)0xE800000000000000;
  sub_10096BDC0(v91);
  uint64_t v90 = (uint64_t)v82;
  uint64_t v83 = v80;
  uint64_t v84 = v79;
  Swift::String v70 = v5;
  uint64_t v71 = v4;
  uint64_t v85 = v4;
  unint64_t v86 = v5;
  uint64_t v19 = type metadata accessor for FSOrFPJob();
  swift_getWitnessTable();
  sub_10096D270();
  unint64_t v20 = v89;
  Swift::String v73 = v88;
  Swift::String v74 = v15;
  sub_1005A1AEC((uint64_t)v15, (uint64_t)v13);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  uint64_t v69 = v19;
  if (v21 == 1)
  {
    id v22 = v18;
    uint64_t v23 = v81;
    sub_10096B3B0();
    sub_10002B770((uint64_t)v13, &qword_100AD0830);
  }
  else
  {
    uint64_t v23 = v81;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v81, v13, v7);
  }
  uint64_t v24 = (uint64_t)v78;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v78, v23, v7);
  uint64_t v72 = *(int *)(v16 + 20);
  *(void *)(v24 + v72) = v18;
  unint64_t v25 = (char *)(v24 + *(int *)(v16 + 24));
  *(void *)unint64_t v25 = "SQLDB: Persist Job";
  *((void *)v25 + 1) = 18;
  v25[16] = 2;
  id v26 = v18;
  swift_bridgeObjectRetain();
  sub_10096C770();
  sub_10002B7CC((uint64_t *)&unk_100ACA8B0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100973BB0;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_1000240A4();
  *(void *)(v27 + 32) = v73;
  *(void *)(v27 + 40) = v20;
  sub_10096B390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v81, v7);
  swift_bridgeObjectRelease();
  sub_10002B770((uint64_t)v74, &qword_100AD0830);
  uint64_t v28 = *(void *)(v77 + 24);
  swift_retain();
  Swift::String v29 = v82;
  uint64_t v30 = v75;
  Swift::String v31 = v76;
  sub_100178298((uint64_t)v82, v76);
  if (!v30)
  {
    uint64_t v75 = v28;
    Swift::String v81 = v25;
    swift_release();
    Swift::String v32 = v70;
    unint64_t v33 = sub_100615740((uint64_t)v29);
    swift_retain();
    swift_retain();
    sub_100178298(v33, v31);
    swift_release();
    swift_release();
    uint64_t Strong = (void **)swift_weakLoadStrong();
    if (Strong)
    {
      sub_1001F1504((uint64_t)v29, Strong);
      swift_release();
      char v36 = sub_100615748((uint64_t)v29);
      if (v37) {
        goto LABEL_19;
      }
      char v38 = v36;
      if ((v36 & 1) == 0)
      {
LABEL_16:
        if (v38 < 0)
        {
          if (swift_weakLoadStrong())
          {
            sub_1006C8B2C();
            swift_release();
            goto LABEL_19;
          }
          goto LABEL_68;
        }
LABEL_19:
        uint64_t v83 = v80;
        uint64_t v84 = v79;
        uint64_t v85 = v71;
        unint64_t v86 = v32;
        type metadata accessor for ItemJob();
        uint64_t v44 = swift_dynamicCastClass();
        if (v44)
        {
          uint64_t v45 = v44;
          int v46 = *(unsigned __int8 *)(v44 + 112);
          if ((v46 == 3 || v46 == 4 && !(*(void *)(v44 + 96) & 0xFFFFFFFFFFFFFFFELL | *(void *)(v44 + 104)))
            && (uint64_t v83 = v80,
                uint64_t v84 = v79,
                uint64_t v85 = v71,
                unint64_t v86 = v70,
                type metadata accessor for Materialization.MaterializeItem(),
                (uint64_t v47 = swift_dynamicCastClass()) != 0))
          {
            uint64_t v48 = v47;
            swift_retain();
            sub_10095DEBC(v48, (void **)v76);
          }
          else
          {
            swift_retain();
          }
          sub_1001FFCA0(v45);
          uint64_t v24 = (uint64_t)v78;
LABEL_64:
          sub_10096C760();
          goto LABEL_8;
        }
        sub_100615324((uint64_t)v29, (uint64_t)&v83);
        uint64_t v49 = v86;
        sub_10002B770((uint64_t)&v83, qword_100ACE608);
        if (v49)
        {
          sub_1006524C8(v29);
          uint64_t v50 = sub_100615748((uint64_t)v29);
          uint64_t v24 = (uint64_t)v78;
          switch(v52)
          {
            case 1:
              if (v50) {
                goto LABEL_39;
              }
              char v56 = 1;
              goto LABEL_45;
            case 2:
              goto LABEL_46;
            case 3:
            case 4:
              if (!swift_weakLoadStrong()) {
                goto LABEL_70;
              }
              uint64_t v61 = (uint64_t)v66;
              *Swift::String v66 = v29;
              uint64_t v62 = v68;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              sub_1006C8248(v61);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v61, v62);
              if (!swift_weakLoadStrong()) {
                goto LABEL_58;
              }
              uint64_t v63 = sub_1006C7F70();
              swift_release();
              if (!v63) {
                goto LABEL_59;
              }
              if (!swift_weakLoadStrong()) {
                goto LABEL_73;
              }
              Swift::String v29 = v82;
              (*(void (**)(void))(*(void *)v63 + 128))();
              goto LABEL_57;
            default:
              if (!v51)
              {
                char v56 = 0;
LABEL_45:
                sub_1000D31F8(v50, v51, v56);
LABEL_46:
                swift_retain();
                goto LABEL_61;
              }
LABEL_39:
              if (!swift_weakLoadStrong()) {
                goto LABEL_72;
              }
              uint64_t v57 = (uint64_t)v66;
              *Swift::String v66 = v29;
              uint64_t v58 = v68;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              sub_1006C8248(v57);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v57, v58);
              if (!swift_weakLoadStrong())
              {
LABEL_58:
                swift_retain();
                Swift::String v29 = v82;
                uint64_t v24 = (uint64_t)v78;
LABEL_61:
                sub_100615748((uint64_t)v29);
                if (v64 == 1 && swift_weakLoadStrong())
                {
                  sub_1006C05B4();
                  swift_release();
                }
                goto LABEL_64;
              }
              uint64_t v59 = sub_1006C7F70();
              swift_release();
              if (v59)
              {
                if (swift_weakLoadStrong())
                {
                  Swift::String v29 = v82;
                  (*(void (**)(void))(*(void *)v59 + 136))();
LABEL_57:
                  swift_release();
                  swift_release();
                  swift_retain();
                  break;
                }
LABEL_74:
                __break(1u);
                JUMPOUT(0x100653EC8);
              }
LABEL_59:
              swift_retain();
              Swift::String v29 = v82;
              break;
          }
LABEL_60:
          uint64_t v24 = (uint64_t)v78;
          goto LABEL_61;
        }
        unint64_t v88 = v29;
        uint64_t v53 = sub_100615748((uint64_t)v29);
        if (v55 == 3 || v55 == 4 && !(v53 & 0xFFFFFFFFFFFFFFFELL | v54)) && (*(unsigned char *)(v77 + 48))
        {
          unint64_t v86 = &type metadata for SQLVolatileJobID;
          unint64_t v87 = sub_10065D210();
          uint64_t v83 = 0x7FFFFFFFFFFFFFFFLL;
          swift_retain();
        }
        else
        {
          swift_retain();
          sub_100651F90((uint64_t)v29, &v83);
        }
        sub_100615380((uint64_t)&v83);
        swift_retain();
        if (!swift_weakLoadStrong() || (uint64_t v60 = sub_1006C7F70(), swift_release(), !v60))
        {
LABEL_51:
          swift_release();
          goto LABEL_60;
        }
        if (swift_weakLoadStrong())
        {
          (*(void (**)(void))(*(void *)v60 + 120))();
          swift_release();
          swift_release();
          goto LABEL_51;
        }
LABEL_71:
        swift_release();
        __break(1u);
LABEL_72:
        __break(1u);
        __break(1u);
LABEL_73:
        __break(1u);
        __break(1u);
        goto LABEL_74;
      }
      if (!swift_weakLoadStrong())
      {
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      uint64_t v39 = sub_1006F2FD0();
      swift_retain();
      swift_release();
      uint64_t v40 = *(void *)(v39 + 16);
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (!v41)
      {
        *(void *)(v39 + 16) = v42;
        swift_release();
        uint64_t v43 = swift_weakLoadStrong();
        Swift::String v32 = v70;
        if (!v43) {
          goto LABEL_69;
        }
        sub_1004FA42C();
        swift_release();
        goto LABEL_16;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_67;
  }
  swift_release();
  sub_10096C760();
LABEL_8:
  sub_10096B3A0();
  sub_10020E1F8(v24);
  return v29;
}

void sub_100653EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8 = (void *)*v6;
  uint64_t v9 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = a5;
  if (__OFADD__(v9, a5))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v9 + a5)
  {
    uint64_t v32 = a5;
    uint64_t v33 = a3;
    uint64_t v37 = a4;
    uint64_t v12 = __chkstk_darwin(a1);
    char v29 = v13;
    uint64_t v30 = v14;
    uint64_t v31 = v15;
    __chkstk_darwin(v12);
    uint64_t v17 = v16[68];
    uint64_t v18 = v16[69];
    v28[2] = v17;
    v28[3] = v18;
    uint64_t v19 = v16[70];
    uint64_t v20 = v16[71];
    v28[4] = v19;
    v28[5] = v20;
    v28[6] = a6;
    v28[7] = &v33;
    v28[8] = v21;
    v28[9] = &v37;
    sub_1006517E4((uint64_t)sub_10065D448, v22, (void (*)(uint64_t))sub_10065D454, (uint64_t)v28);
    if (v7) {
      return;
    }
    uint64_t v10 = v32;
  }
  else
  {
    uint64_t v17 = v8[68];
    uint64_t v18 = v8[69];
    uint64_t v19 = v8[70];
    uint64_t v20 = v8[71];
  }
  uint64_t v37 = *a6;
  uint64_t v33 = v17;
  uint64_t v34 = v18;
  uint64_t v35 = v19;
  uint64_t v36 = v20;
  type metadata accessor for SchedulableJob();
  sub_10096C1C0();
  swift_getWitnessTable();
  if ((sub_10096C460() & 1) == 0)
  {
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_10096BBD0();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10096C160();
    swift_bridgeObjectRelease();
    if (v23 >= v10) {
      uint64_t v24 = v10;
    }
    else {
      uint64_t v24 = v23;
    }
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v33 = sub_10096C200();
      uint64_t v34 = v25;
      uint64_t v35 = v26;
      uint64_t v36 = v27;
      sub_10096CA20();
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_10096C4B0();
      swift_unknownObjectRelease();
      return;
    }
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_1006541E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10096CBD0(120);
  v15._uint64_t countAndFlagsBits = 0xD000000000000013;
  v15._object = (void *)0x8000000100999090;
  sub_10096BDC0(v15);
  v16._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x64697320444E410ALL;
  v17._object = (void *)0xEC000000203D2065;
  sub_10096BDC0(v17);
  v18._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x80000001009AEF80;
  v19._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_10096BDC0(v19);
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  id v6 = a1;
  sub_10002B7CC(&qword_100ACEA00);
  sub_100025500(&qword_100ACEA08, &qword_100ACEA00);
  sub_10001F9C0();
  uint64_t v7 = sub_10096BF90();
  uint64_t v9 = v8;
  swift_release();
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = v7;
  v20._object = v9;
  sub_10096BDC0(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 41;
  v21._object = (void *)0xE100000000000000;
  sub_10096BDC0(v21);
  v22._uint64_t countAndFlagsBits = 40;
  v22._object = (void *)0xE100000000000000;
  sub_10096BDC0(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v23._object = (void *)0x80000001009AEFA0;
  sub_10096BDC0(v23);
  id v10 = [v6 bindLongParameter:a4];
  uint64_t v11 = _sSo28NSFileProviderItemIdentifiera9libfssyncE15parseableStringSSvg_0();
  char v13 = v12;

  v24._uint64_t countAndFlagsBits = v11;
  v24._object = v13;
  sub_10096BDC0(v24);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100654498(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a4;
  uint64_t v15 = sub_10096B480();
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = v15;
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(sub_100615198(a1))
  {
    case 2u:
    case 3u:
      if ((uint64_t)*a3 < 1) {
        return 1;
      }
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      uint64_t v35 = a8;
      uint64_t v36 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v33 = sub_1001EA038(a1);
      sub_10096C1C0();
      swift_retain();
      sub_10096C180();
      if (__OFSUB__(*a3, 1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x100654888);
      }
      --*a3;
      break;
    case 4u:
    case 5u:
      if ((uint64_t)*a5 < 1) {
        return 1;
      }
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      uint64_t v35 = a8;
      uint64_t v36 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v33 = sub_1001EA038(a1);
      sub_10096C1C0();
      swift_retain();
      sub_10096C180();
      if (__OFSUB__(*a5, 1)) {
        goto LABEL_15;
      }
      --*a5;
      break;
    case 6u:
    case 7u:
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      uint64_t v35 = a8;
      uint64_t v36 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v33 = sub_1001EA038(a1);
      sub_10096C1C0();
      swift_retain();
      sub_10096C180();
      return 1;
    default:
      id v18 = (id)fpfs_current_or_default_log();
      sub_10096B490();
      swift_retain_n();
      Swift::String v19 = sub_10096B470();
      os_log_type_t v20 = sub_10096C5C0();
      int v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v22 = swift_slowAlloc();
        int v29 = v21;
        Swift::String v23 = (uint8_t *)v22;
        uint64_t v30 = swift_slowAlloc();
        uint64_t v33 = v30;
        uint64_t v28 = v23;
        *(_DWORD *)Swift::String v23 = 136315138;
        v27[1] = v23 + 4;
        LOBYTE(v37) = sub_100615198(a1);
        sub_10002B7CC(&qword_100AD9998);
        uint64_t v24 = sub_10096BCC0();
        uint64_t v37 = sub_100719D44(v24, v25, &v33);
        sub_10096C8C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v29, "unexpected %s job in fetchRunnableJobs", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
      return 1;
  }
  return 1;
}

uint64_t sub_1006548B0(unsigned int a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7 = *(void *)(*(void *)v5 + 560);
  uint64_t v8 = *(void *)(*(void *)v5 + 568);
  Swift::String v91 = *(void **)(*(void *)v5 + 552);
  unint64_t v92 = *(void **)(*(void *)v5 + 544);
  unint64_t v96 = v92;
  unint64_t v97 = v91;
  uint64_t v89 = v8;
  uint64_t v90 = v7;
  uint64_t v98 = v7;
  uint64_t v99 = v8;
  type metadata accessor for SchedulableJob();
  uint64_t v100 = sub_10096C110();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v88 = a3;
  if (v9)
  {
    uint64_t v10 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    do
    {
      sub_10009CA78(v10, (uint64_t)&v96);
      sub_10009CA78((uint64_t)&v96, (uint64_t)v93);
      sub_10002B7CC(&qword_100AD6E60);
      char v12 = swift_dynamicCast();
      if ((v12 & 1) == 0) {
        uint64_t v94 = 0;
      }
      char v95 = v12 ^ 1;
      sub_1000268E0((uint64_t)&v96);
      if ((v95 & 1) == 0)
      {
        uint64_t v13 = v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1006A4540(0, v11[2] + 1, 1, v11);
        }
        unint64_t v15 = v11[2];
        unint64_t v14 = v11[3];
        if (v15 >= v14 >> 1) {
          uint64_t v11 = sub_1006A4540((void *)(v14 > 1), v15 + 1, 1, v11);
        }
        v11[2] = v15 + 1;
        v11[v15 + 4] = v13;
      }
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    int64_t v16 = v11[2];
    if (v16) {
      goto LABEL_13;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    id v18 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  uint64_t v11 = _swiftEmptyArrayStorage;
  int64_t v16 = _swiftEmptyArrayStorage[2];
  if (!v16) {
    goto LABEL_19;
  }
LABEL_13:
  unint64_t v96 = _swiftEmptyArrayStorage;
  sub_100446214(0, v16, 0);
  uint64_t v17 = 0;
  id v18 = v96;
  unint64_t v19 = v96[2];
  do
  {
    uint64_t v20 = v11[v17 + 4];
    unint64_t v96 = v18;
    unint64_t v21 = v18[3];
    if (v19 >= v21 >> 1)
    {
      sub_100446214(v21 > 1, v19 + 1, 1);
      id v18 = v96;
    }
    ++v17;
    void v18[2] = v19 + 1;
    v18[v19++ + 4] = v20;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v22 = sub_1001FA5DC((uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v23 = v81;
  uint64_t v24 = v87;
  unint64_t v25 = a4;
  uint64_t v83 = v22;
  if (a1) {
    goto LABEL_37;
  }
  uint64_t v26 = a4(0);
  uint64_t v28 = *(void *)(v26 + 16);
  uint64_t v27 = *(void *)(v26 + 24);
  uint64_t result = swift_release();
  BOOL v30 = __OFSUB__(v27, v28);
  uint64_t v31 = v27 - v28;
  if (v30)
  {
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v32 = a4(6);
  uint64_t v33 = *(void *)(v32 + 16);
  uint64_t v34 = *(void *)(v32 + 24);
  uint64_t result = swift_release();
  uint64_t v35 = v34 - v33;
  if (__OFSUB__(v34, v33))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v36 = a4(2);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = *(void *)(v36 + 24);
  uint64_t result = swift_release();
  if (__OFSUB__(v38, v37))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v78 = v38 - v37;
  uint64_t v39 = a4(4);
  uint64_t v41 = *(void *)(v39 + 16);
  uint64_t v40 = *(void *)(v39 + 24);
  uint64_t result = swift_release();
  uint64_t v42 = v40 - v41;
  if (__OFSUB__(v40, v41))
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  unint64_t v96 = (void *)sub_10096C110();
  uint64_t v43 = *(void *)(v87 + 24);
  uint64_t v44 = v35;
  uint64_t v45 = sub_10020407C(v88, v31, v35);
  if (v81)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v43;
  }
  uint64_t v46 = v45;
  if (!sub_10096C1A0()) {
    goto LABEL_35;
  }
  uint64_t v47 = 4;
  while (1)
  {
    uint64_t v48 = v47 - 4;
    BOOL v49 = sub_10096C130();
    sub_10096C0E0();
    if (!v49) {
      break;
    }
    uint64_t v50 = *(void *)(v46 + 8 * v47);
    swift_retain();
    uint64_t v51 = v47 - 3;
    if (__OFADD__(v48, 1)) {
      goto LABEL_34;
    }
LABEL_31:
    sub_100615198(*(void *)(v50 + 40));
    v93[0] = v50;
    sub_10096C1C0();
    sub_10096C180();
    ++v47;
    if (v51 == sub_10096C1A0()) {
      goto LABEL_35;
    }
  }
  uint64_t v50 = sub_10096CC20();
  uint64_t v51 = v47 - 3;
  if (!__OFADD__(v48, 1)) {
    goto LABEL_31;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v52 = v44;
  uint64_t v24 = v87;
  sub_100653EDC(0, v83, v78, v42, v52, (uint64_t *)&v96);
  swift_bridgeObjectRelease();
  if (a1 != 2) {
    goto LABEL_54;
  }
  unint64_t v25 = a4;
LABEL_37:
  uint64_t v53 = v25(1);
  uint64_t v55 = *(void *)(v53 + 16);
  uint64_t v54 = *(void *)(v53 + 24);
  uint64_t result = swift_release();
  BOOL v30 = __OFSUB__(v54, v55);
  uint64_t v56 = v54 - v55;
  if (v30) {
    goto LABEL_63;
  }
  uint64_t v57 = v25(7);
  uint64_t v58 = *(void *)(v57 + 16);
  uint64_t v59 = *(void *)(v57 + 24);
  uint64_t result = swift_release();
  uint64_t v60 = v59 - v58;
  if (__OFSUB__(v59, v58))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v61 = v25(3);
  uint64_t v62 = *(void *)(v61 + 16);
  uint64_t v63 = *(void *)(v61 + 24);
  uint64_t result = swift_release();
  BOOL v30 = __OFSUB__(v63, v62);
  uint64_t v64 = v63 - v62;
  if (v30)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v65 = v25(5);
  uint64_t v67 = *(void *)(v65 + 16);
  uint64_t v66 = *(void *)(v65 + 24);
  uint64_t result = swift_release();
  uint64_t v68 = v66 - v67;
  if (__OFSUB__(v66, v67))
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v82 = v64;
  v93[0] = sub_10096C110();
  uint64_t v43 = *(void *)(v24 + 32);
  uint64_t v69 = v60;
  uint64_t v70 = sub_10020407C(v88, v56, v60);
  if (v23) {
    goto LABEL_42;
  }
  uint64_t v71 = v70;
  uint64_t v79 = v68;
  unint64_t v96 = v91;
  unint64_t v97 = v92;
  uint64_t v98 = v89;
  uint64_t v99 = v90;
  type metadata accessor for SchedulableJob();
  if (!sub_10096C1A0()) {
    goto LABEL_53;
  }
  uint64_t v72 = 4;
  while (2)
  {
    uint64_t v73 = v72 - 4;
    BOOL v74 = sub_10096C130();
    sub_10096C0E0();
    if (v74)
    {
      uint64_t v75 = *(void *)(v71 + 8 * v72);
      swift_retain();
      uint64_t v76 = v72 - 3;
      if (__OFADD__(v73, 1)) {
        break;
      }
      goto LABEL_49;
    }
    uint64_t v75 = sub_10096CC20();
    uint64_t v76 = v72 - 3;
    if (!__OFADD__(v73, 1))
    {
LABEL_49:
      sub_100615198(*(void *)(v75 + 40));
      unint64_t v96 = (void *)sub_1001EA15C();
      sub_10096C1C0();
      sub_10096C180();
      swift_release();
      ++v72;
      if (v76 == sub_10096C1A0()) {
        goto LABEL_53;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_53:
  swift_bridgeObjectRelease();
  sub_100653EDC(1, v83, v82, v79, v69, v93);
  swift_bridgeObjectRelease();
LABEL_54:
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return v100;
  }
  swift_bridgeObjectRetain();
  uint64_t v77 = sub_10096C160();
  swift_bridgeObjectRelease();
  if (v77 || sub_10095C28C() < 1) {
    return v100;
  }
  swift_bridgeObjectRetain();
  sub_1006548B0(a1, 0, v88, a4, a5);
  uint64_t v43 = sub_10096C100();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1006550DC(unsigned int a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_1006548B0(a1, 1, a2, a3, a4);
}

void **sub_100655104(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_100207DF0(a2, a3, a4 & 1);
}

void *sub_100655148(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100205EB4(a1, a2, a3 & 1, a4);
}

void *sub_100655170(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100205EB4(a1, a2, a3 & 1, a4);
}

uint64_t sub_100655198()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 544);
  uint64_t v3 = *(void *)(*(void *)v0 + 552);
  uint64_t v4 = *(void *)(*(void *)v0 + 560);
  uint64_t v5 = *(void *)(*(void *)v0 + 568);
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v6 = type metadata accessor for TestingOperation();
  uint64_t v21 = sub_10096C110();
  uint64_t v14 = v0;
  unint64_t v15 = &v21;
  sub_1006517E4((uint64_t)sub_100206F64, 0, (void (*)(uint64_t))sub_10065D198, (uint64_t)v13);
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_100206E90();
  sub_10096C1C0();
  swift_getWitnessTable();
  sub_10096C170();
  uint64_t v16 = sub_100206E90();
  __chkstk_darwin(v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  type metadata accessor for TestingOperation();
  uint64_t v8 = sub_10096C1C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1003FC0AC((void (*)(char *, char *))sub_10065D1D4, KeyPath, v8, v6, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v11;
  sub_10096C170();
  return v21;
}

uint64_t sub_10065542C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 552);
  uint64_t v6 = *(ValueMetadata **)(*a2 + 568);
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v86 = sub_10096C890();
  uint64_t v81 = *(char **)(v86 - 8);
  uint64_t v8 = __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v73 - v9;
  uint64_t v83 = *(void *)(v7 - 8);
  __chkstk_darwin(v8);
  uint64_t v82 = (char *)&v73 - v10;
  char v12 = *(ValueMetadata **)(v4 + 560);
  uint64_t AssociatedTypeWitness = *(void *)(v4 + 544);
  uint64_t v11 = AssociatedTypeWitness;
  uint64_t v88 = (char *)v5;
  uint64_t v89 = v12;
  uint64_t v90 = v6;
  uint64_t v76 = type metadata accessor for TestingOperation();
  __chkstk_darwin(v76);
  uint64_t v77 = (char *)&v73 - v13;
  uint64_t v14 = type metadata accessor for SnapshotItem();
  uint64_t v15 = sub_10096C890();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v84 = (char *)v14;
  uint64_t v19 = *(void *)(v14 - 8);
  uint64_t v20 = __chkstk_darwin(v16);
  uint64_t v23 = (char *)&v73 - v22;
  uint64_t v79 = (char *)v5;
  uint64_t v80 = v6;
  BOOL v74 = (char *)v11;
  uint64_t v75 = v12;
  if (a1 < 0)
  {
    int v29 = (char *)v85;
    uint64_t AssociatedTypeWitness = v5;
    uint64_t v88 = (char *)v11;
    uint64_t v89 = v6;
    uint64_t v90 = v12;
    uint64_t v30 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    type metadata accessor for Bouncing.BounceItem();
    uint64_t Strong = swift_dynamicCastClass();
    if (!Strong) {
      goto LABEL_25;
    }
    uint64_t v31 = Strong;
    uint64_t Strong = swift_weakLoadStrong();
    a1 = v86;
    if (Strong)
    {
      uint64_t v32 = *(void *)(Strong + 40);
      swift_retain();
      swift_retain();
      swift_release();
      uint64_t v33 = v31 + *(void *)(*(void *)v31 + 576);
      uint64_t v34 = v91;
      (*(void (**)(uint64_t, uint64_t))(*(void *)v32 + 240))(v33, 1);
      if (v34) {
        goto LABEL_5;
      }
      uint64_t v36 = v7;
      uint64_t v37 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v29, 1, v36) == 1)
      {
        swift_release();
        swift_release();
        (*((void (**)(char *, uint64_t))v81 + 1))(v29, a1);
      }
      else
      {
        uint64_t v42 = v82;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v82, v29, v36);
        uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)v32 + 296))(v33);
        uint64_t v91 = v36;
        if (v44)
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v91);
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v57 = v43;
          uint64_t v85 = v30;
          __chkstk_darwin(v43);
          strcpy((char *)&v73 - 32, " item newName version ");
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v88 = (char *)v86;
          uint64_t v89 = &type metadata for Filename;
          uint64_t v90 = (ValueMetadata *)&type metadata for UInt;
          uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
          uint64_t v59 = v77;
          uint64_t v60 = &v77[TupleTypeMetadata[12]];
          uint64_t v84 = &v77[TupleTypeMetadata[16]];
          uint64_t v86 = TupleTypeMetadata[20];
          uint64_t v61 = (uint64_t)v79;
          uint64_t v62 = swift_getAssociatedTypeWitness();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v59, v33, v62);
          uint64_t v63 = v83;
          uint64_t v64 = v42;
          uint64_t v65 = v91;
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v60, v64, v91);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v65);
          uint64_t v66 = (uint64_t *)(v31 + *(void *)(*(void *)v31 + 592));
          uint64_t v67 = *v66;
          uint64_t v68 = v66[1];
          uint64_t v69 = v84;
          *(void *)uint64_t v84 = v67;
          *((void *)v69 + 1) = v68;
          *(void *)&v59[v86] = v57;
          uint64_t AssociatedTypeWitness = v61;
          uint64_t v88 = v74;
          uint64_t v89 = v80;
          uint64_t v90 = v75;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_10096C1C0();
          swift_bridgeObjectRetain();
          sub_10096C180();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v63 + 8))(v82, v65);
        }
      }
      return 1;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __chkstk_darwin(Strong);
    uint64_t v71 = v79;
    *(&v73 - 6) = (uint64_t)v74;
    *(&v73 - 5) = (uint64_t)v71;
    uint64_t v72 = v80;
    *(&v73 - 4) = (uint64_t)v75;
    *(&v73 - 3) = (uint64_t)v72;
    *(&v73 - 2) = a1;
    fp_preconditionFailure(_:file:line:)((uint64_t (*)(uint64_t))sub_10065D200, (uint64_t)(&v73 - 8), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift", 138, 2, 520);
  }
  uint64_t v83 = v21;
  uint64_t v85 = v20;
  uint64_t v86 = (uint64_t)v23;
  uint64_t AssociatedTypeWitness = v11;
  uint64_t v88 = (char *)v5;
  uint64_t v89 = v12;
  uint64_t v90 = v6;
  type metadata accessor for Bouncing.BounceItem();
  uint64_t Strong = swift_dynamicCastClass();
  if (!Strong) {
    goto LABEL_25;
  }
  uint64_t v25 = Strong;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(Strong + 32);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v27 = v25 + *(void *)(*(void *)v25 + 576);
  uint64_t v28 = v91;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v26 + 240))(v27, 1);
  if (v28)
  {
LABEL_5:
    swift_release();
    swift_release();
    return 1;
  }
  uint64_t v35 = v84;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v19 + 48))(v18, 1, v84) == 1)
  {
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v85);
  }
  else
  {
    (*(void (**)(uint64_t, char *, char *))(v19 + 32))(v86, v18, v35);
    uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 296))(v27);
    uint64_t v91 = 0;
    uint64_t v40 = v19;
    uint64_t v41 = v35;
    uint64_t v83 = v40;
    if (v39)
    {
      (*(void (**)(uint64_t, char *))(v83 + 8))(v86, v35);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v45 = v38;
      __chkstk_darwin(v38);
      strcpy((char *)&v73 - 32, " item newName version ");
      uint64_t v46 = v75;
      uint64_t v82 = (char *)a1;
      uint64_t v47 = (uint64_t)v74;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v88 = (char *)v85;
      uint64_t v89 = &type metadata for Filename;
      uint64_t v90 = (ValueMetadata *)&type metadata for UInt;
      uint64_t v48 = (int *)swift_getTupleTypeMetadata();
      BOOL v49 = v77;
      uint64_t v50 = &v77[v48[12]];
      uint64_t v81 = &v77[v48[16]];
      uint64_t v85 = v48[20];
      uint64_t v51 = swift_getAssociatedTypeWitness();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v27, v51);
      uint64_t v52 = v83;
      (*(void (**)(char *, uint64_t, char *))(v83 + 16))(v50, v86, v41);
      (*(void (**)(char *, void, uint64_t, char *))(v52 + 56))(v50, 0, 1, v41);
      uint64_t v53 = (uint64_t *)(v25 + *(void *)(*(void *)v25 + 592));
      uint64_t v54 = *v53;
      uint64_t v55 = v53[1];
      uint64_t v56 = v81;
      *(void *)uint64_t v81 = v54;
      *((void *)v56 + 1) = v55;
      *(void *)&v49[v85] = v45;
      uint64_t AssociatedTypeWitness = v47;
      uint64_t v88 = v79;
      uint64_t v89 = v46;
      uint64_t v90 = v80;
      type metadata accessor for DirectionalTestingOperation();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_10096C1C0();
      swift_bridgeObjectRetain();
      sub_10096C180();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, char *))(v52 + 8))(v86, v41);
    }
  }
  return 1;
}

uint64_t sub_100656028()
{
  sub_10096CBD0(26);
  v1._object = (void *)0x8000000100999330;
  v1._uint64_t countAndFlagsBits = 0xD000000000000018;
  sub_10096BDC0(v1);
  type metadata accessor for FSOrFPJob();
  swift_getWitnessTable();
  sub_10096D270();
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  sub_10096BDC0(v2);
  return 0;
}

uint64_t sub_10065610C@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2 = (void *)type metadata accessor for TestingOperation();
  return sub_100690E68(v2, a1);
}

uint64_t sub_100656160(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = (void *)swift_allocObject();
  LOBYTE(v1) = (_BYTE)v6;
  _OWORD v6[2] = sub_10065D180;
  void v6[3] = v3;
  aBlock[4] = sub_1001FB2E8;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A95668;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v8 = [v5 fetchSwift:v7 error:aBlock];
  _Block_release(v7);
  id v9 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v8)
  {
    if ([v8 next]) {
      goto LABEL_4;
    }
    uint64_t v1 = *(void *)(v3 + 24);
    char v11 = sub_100207418();
    if (v2)
    {
      swift_release();

      return v1 & 1;
    }
    if (v11 & 1) != 0 || (char v13 = sub_100207418(), (v13))
    {
LABEL_4:
      swift_release();

      LOBYTE(v1) = 1;
    }
    else if (a1)
    {
      LOBYTE(v1) = sub_100960060();
      swift_release();
    }
    else
    {
      swift_release();

      LOBYTE(v1) = 0;
    }
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return v1 & 1;
}

uint64_t sub_1006563C0()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = sub_1006C7F60();
    swift_release();
    if (v1 < 0)
    {
      sub_10096CBD0(33);
      swift_bridgeObjectRelease();
      v2._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v2._object = (void *)0x80000001009AEE60;
      v8._uint64_t countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v2._uint64_t countAndFlagsBits = 0;
      v2._object = (void *)0xE000000000000000;
      sub_10096CBD0(72);
      v3._object = (void *)0x8000000100999240;
      v3._uint64_t countAndFlagsBits = 0xD000000000000018;
      sub_10096BDC0(v3);
      v4._uint64_t countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v4);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = 0xD000000000000025;
      v5._object = (void *)0x8000000100999260;
      sub_10096BDC0(v5);
      v6._uint64_t countAndFlagsBits = sub_10096D220();
      sub_10096BDC0(v6);
      swift_bridgeObjectRelease();
      v7._uint64_t countAndFlagsBits = 0x290A30203D2029;
      v7._object = (void *)0xE700000000000000;
      sub_10096BDC0(v7);
    }
    sub_10096CBD0(70);
    v9._uint64_t countAndFlagsBits = 0xD000000000000031;
    v9._object = (void *)0x80000001009AEE20;
    sub_10096BDC0(v9);
    if (qword_100ACC0C8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_10002B7CC((uint64_t *)&unk_100AD0EC0);
    sub_100025500((unint64_t *)&unk_100AD6B80, (uint64_t *)&unk_100AD0EC0);
    sub_10001F9C0();
    v10._uint64_t countAndFlagsBits = sub_10096BF90();
    sub_10096BDC0(v10);
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 41;
    v11._object = (void *)0xE100000000000000;
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 40;
    v12._object = (void *)0xE100000000000000;
    sub_10096BDC0(v12);
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = 0x20444E412020200ALL;
    v13._object = (void *)0xE800000000000000;
    sub_10096BDC0(v13);
    sub_10096BDC0(v2);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0x2054494D494C200ALL;
    v14._object = (void *)0xE900000000000031;
    sub_10096BDC0(v14);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1006566FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  char v7 = a1 & 1;
  Swift::String v8 = (void *)*v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  Swift::String v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v8[68];
  *(void *)(v14 + 24) = v8[69];
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v8[70];
  *(void *)(v14 + 48) = v8[71];
  *(void *)(v14 + 56) = a4;
  *(unsigned char *)(v14 + 64) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, a3);
  *(void *)(v14 + v13) = v4;
  swift_retain();
  return sub_10065D3B8;
}

uint64_t sub_1006568A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = (uint64_t (*)())0xE000000000000000;
  sub_10096CBD0(75);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0x203D2065646973;
  v24._object = (void *)0xE700000000000000;
  sub_10096BDC0(v24);
  uint64_t v19 = (uint64_t (*)@<X0>(uint64_t *@<X8>))&type metadata for Int;
  uint64_t v16 = a2 & 1;
  uint64_t v11 = sub_1003AC444((uint64_t)&v16);
  unint64_t v13 = v12;
  sub_10002B770((uint64_t)&v16, (uint64_t *)&unk_100ACE0F0);
  if (v13)
  {
    v25._uint64_t countAndFlagsBits = v11;
    v25._object = v13;
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000016;
    v26._object = (void *)0x80000001009AEF60;
    sub_10096BDC0(v26);
    v27._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a6 + 40) + 32))(a1, a5);
    sub_10096BDC0(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 0x70797420444E410ALL;
    v28._object = (void *)0xED0000204E492065;
    sub_10096BDC0(v28);
    uint64_t v14 = *(void *)(a4 + 96);
    v21._uint64_t countAndFlagsBits = 40;
    v21._object = (void *)0xE100000000000000;
    uint64_t v16 = v14;
    uint64_t v17 = (uint64_t (*)())sub_10065CD38;
    uint64_t v18 = 0;
    uint64_t v19 = sub_10065CD50;
    uint64_t v20 = 0;
    swift_bridgeObjectRetain();
    sub_10002B7CC((uint64_t *)&unk_100AD6B90);
    sub_100025500(&qword_100ACE9F0, (uint64_t *)&unk_100AD6B90);
    sub_10001F9C0();
    v29._uint64_t countAndFlagsBits = sub_10096BF90();
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = 41;
    v30._object = (void *)0xE100000000000000;
    sub_10096BDC0(v30);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    v31._uint64_t countAndFlagsBits = 0xD000000000000019;
    v31._object = (void *)0x80000001009997E0;
    sub_10096BDC0(v31);
    if (qword_100ACC0C0 != -1) {
      swift_once();
    }
    v21._uint64_t countAndFlagsBits = 40;
    v21._object = (void *)0xE100000000000000;
    uint64_t v16 = qword_100B0B2B8;
    uint64_t v17 = sub_1007950B4;
    uint64_t v18 = 0;
    swift_bridgeObjectRetain();
    sub_10002B7CC((uint64_t *)&unk_100AD0EC0);
    sub_100025500((unint64_t *)&unk_100AD6B80, (uint64_t *)&unk_100AD0EC0);
    v32._uint64_t countAndFlagsBits = sub_10096BF90();
    sub_10096BDC0(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 41;
    v33._object = (void *)0xE100000000000000;
    sub_10096BDC0(v33);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_100656C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  char v7 = a1 & 1;
  Swift::String v8 = (void *)*v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v8[68];
  *(void *)(v14 + 24) = v8[69];
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v8[70];
  *(void *)(v14 + 48) = v8[71];
  *(void *)(v14 + 56) = a4;
  *(unsigned char *)(v14 + 64) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, a3);
  *(void *)(v14 + v13) = v4;
  swift_retain();
  return sub_10065D300;
}

uint64_t sub_100656E04(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = (uint64_t (*)())0xE000000000000000;
  sub_10096CBD0(165);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0x203D3D2065646973;
  v24._object = (void *)0xE800000000000000;
  sub_10096BDC0(v24);
  uint64_t v19 = (uint64_t (*)@<X0>(uint64_t *@<X8>))&type metadata for Int;
  uint64_t v16 = a2 & 1;
  uint64_t v11 = sub_1003AC444((uint64_t)&v16);
  unint64_t v13 = v12;
  sub_10002B770((uint64_t)&v16, (uint64_t *)&unk_100ACE0F0);
  if (v13)
  {
    v25._uint64_t countAndFlagsBits = v11;
    v25._object = v13;
    sub_10096BDC0(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000017;
    v26._object = (void *)0x80000001009AEEE0;
    sub_10096BDC0(v26);
    v27._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a6 + 40) + 32))(a1, a5);
    sub_10096BDC0(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 0x70797420444E410ALL;
    v28._object = (void *)0xED0000204E492065;
    sub_10096BDC0(v28);
    uint64_t v14 = *(void *)(a4 + 96);
    v21._uint64_t countAndFlagsBits = 40;
    v21._object = (void *)0xE100000000000000;
    uint64_t v16 = v14;
    uint64_t v17 = (uint64_t (*)())sub_10065CD38;
    uint64_t v18 = 0;
    uint64_t v19 = sub_10065CD50;
    uint64_t v20 = 0;
    swift_bridgeObjectRetain();
    sub_10002B7CC((uint64_t *)&unk_100AD6B90);
    sub_100025500(&qword_100ACE9F0, (uint64_t *)&unk_100AD6B90);
    sub_10001F9C0();
    v29._uint64_t countAndFlagsBits = sub_10096BF90();
    sub_10096BDC0(v29);
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = 41;
    v30._object = (void *)0xE100000000000000;
    sub_10096BDC0(v30);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    v31._uint64_t countAndFlagsBits = 0xD000000000000019;
    v31._object = (void *)0x80000001009997E0;
    sub_10096BDC0(v31);
    if (qword_100ACC0C0 != -1) {
      swift_once();
    }
    v21._uint64_t countAndFlagsBits = 40;
    v21._object = (void *)0xE100000000000000;
    uint64_t v16 = qword_100B0B2B8;
    uint64_t v17 = sub_1007950B4;
    uint64_t v18 = 0;
    swift_bridgeObjectRetain();
    sub_10002B7CC((uint64_t *)&unk_100AD0EC0);
    sub_100025500((unint64_t *)&unk_100AD6B80, (uint64_t *)&unk_100AD0EC0);
    v32._uint64_t countAndFlagsBits = sub_10096BF90();
    sub_10096BDC0(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 41;
    v33._object = (void *)0xE100000000000000;
    sub_10096BDC0(v33);
    swift_bridgeObjectRelease();
    sub_10096BDC0(v21);
    swift_bridgeObjectRelease();
    v34._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v34._object = (void *)0x80000001009AEF00;
    sub_10096BDC0(v34);
    uint64_t v16 = 3;
    v35._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v35);
    swift_bridgeObjectRelease();
    v36._uint64_t countAndFlagsBits = 0xD000000000000015;
    v36._object = (void *)0x80000001009AEF20;
    sub_10096BDC0(v36);
    uint64_t v16 = 8;
    v37._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 0xD000000000000018;
    v38._object = (void *)0x80000001009AEF40;
    sub_10096BDC0(v38);
    uint64_t v16 = 1;
    v39._uint64_t countAndFlagsBits = sub_10096D220();
    sub_10096BDC0(v39);
    swift_bridgeObjectRelease();
    v40._uint64_t countAndFlagsBits = 0x29202020200ALL;
    v40._object = (void *)0xE600000000000000;
    sub_10096BDC0(v40);
    return v22;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006572BC(uint64_t a1)
{
  return sub_1006574C8(a1, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1006566FC, (uint64_t)sub_10065D3B8) & 1;
}

uint64_t sub_100657300(uint64_t a1)
{
  return sub_100657388(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1006566FC, (uint64_t)sub_10065D3B8) & 1;
}

uint64_t sub_100657344(uint64_t a1)
{
  return sub_100657388(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100656C5C, (uint64_t)sub_10065D300) & 1;
}

uint64_t sub_100657388(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  a2(1, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  char v9 = sub_100651B38(a3, v8);
  swift_release();
  return v9 & 1;
}

uint64_t sub_100657484(uint64_t a1)
{
  return sub_1006574C8(a1, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_100656C5C, (uint64_t)sub_10065D300) & 1;
}

uint64_t sub_1006574C8(uint64_t a1, void (*a2)(void, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  a2(0, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  char v9 = sub_100651B38(a3, v8);
  swift_release();
  return v9 & 1;
}

uint64_t sub_1006575C4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1006566FC(0, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v6 = sub_100651E78((uint64_t)sub_10065D3B8, v5);
  if (v1) {
    return swift_release();
  }
  uint64_t v8 = v6;
  swift_release();
  if (v8)
  {
    type metadata accessor for Propagation.PropagationJob();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_100657734(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1006566FC(1, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v6 = sub_100651F00((uint64_t)sub_10065D3B8, v5);
  if (v1) {
    return swift_release();
  }
  uint64_t v8 = v6;
  swift_release();
  if (v8)
  {
    type metadata accessor for Propagation.PropagationJob();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_1006578A4(uint64_t a1, char a2)
{
  return sub_10020858C(a2) & 1;
}

uint64_t sub_1006578E0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_10096C890();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  char v7 = (char *)&v15 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    uint64_t v13 = a1;
    uint64_t v14 = v12;
    (*(void (**)(uint64_t))(*(void *)v12 + 152))(v13);
    swift_release();
    if (!v1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v4);
        return 0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
        uint64_t v14 = sub_10095FB34((uint64_t)v10);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
      }
    }
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100657B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  v14[5] = a2;
  uint64_t v10 = v4[68];
  uint64_t v11 = v4[69];
  uint64_t v12 = v4[70];
  uint64_t v13 = v4[71];
  v14[0] = v10;
  v14[1] = v11;
  v14[2] = v12;
  v14[3] = v13;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  sub_10096C1C0();
  sub_10096C890();
  uint64_t v5 = sub_10002B7CC(&qword_100AD9988);
  sub_100827804((void (*)(char *, char *))sub_10065D15C, (uint64_t)&v9, (uint64_t)&type metadata for Never, v5, v6, (uint64_t)v14);
  uint64_t v7 = sub_100202D1C(a1, v14[0]);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100657CEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v11[11] = *a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[7] = a2;
  v11[8] = a3;
  v11[9] = a4;
  v11[10] = a5;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  uint64_t v7 = sub_10096C1C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1003FC0AC((void (*)(char *, char *))sub_10065D7B8, (uint64_t)v11, v7, (uint64_t)&type metadata for JobCode, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
  *a6 = result;
  return result;
}

uint64_t sub_100657DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  v14[5] = a2;
  uint64_t v10 = v4[68];
  uint64_t v11 = v4[69];
  uint64_t v12 = v4[70];
  uint64_t v13 = v4[71];
  v14[0] = v11;
  v14[1] = v10;
  v14[2] = v13;
  v14[3] = v12;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  sub_10096C1C0();
  sub_10096C890();
  uint64_t v5 = sub_10002B7CC(&qword_100AD9988);
  sub_100827804((void (*)(char *, char *))sub_10065D0FC, (uint64_t)&v9, (uint64_t)&type metadata for Never, v5, v6, (uint64_t)v14);
  uint64_t v7 = sub_100202D1C(a1, v14[0]);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100657F10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v11[11] = *a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[7] = a3;
  v11[8] = a2;
  v11[9] = a5;
  v11[10] = a4;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  uint64_t v7 = sub_10096C1C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1003FC0AC((void (*)(char *, char *))sub_10065D120, (uint64_t)v11, v7, (uint64_t)&type metadata for JobCode, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
  *a6 = result;
  return result;
}

uint64_t sub_100657FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = sub_1007B3004();
  return sub_1002032EC(a1, v5, a3) & 1;
}

uint64_t sub_100658040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = sub_1007B3004();
  return sub_1002032EC(a1, v5, a3) & 1;
}

uint64_t sub_1006580A0(int a1, uint64_t a2, unint64_t a3, int a4)
{
  LOBYTE(a4) = sub_100179FC0(a1, a2, a3, a4);
  swift_release();
  return a4 & 1;
}

uint64_t sub_100658118(int a1, uint64_t a2, unint64_t a3, int a4)
{
  LOBYTE(a4) = sub_100179FC0(a1, a2, a3, a4);
  swift_release();
  return a4 & 1;
}

uint64_t sub_100658190(uint64_t a1, char a2)
{
  swift_retain();
  uint64_t v4 = sub_1001798C0(a1, a2);
  swift_release();
  return v4;
}

uint64_t sub_1006581F0(uint64_t a1, char a2)
{
  swift_retain();
  uint64_t v4 = sub_1001798C0(a1, a2);
  swift_release();
  return v4;
}

uint64_t sub_100658250(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_10096C890();
  uint64_t v5 = *(void *)(v18 - 8);
  uint64_t v6 = __chkstk_darwin(v18);
  uint64_t v17 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - v8;
  v15[1] = *(void *)(v1 + 24);
  uint64_t v16 = a1;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11((char *)v15 - v8, a1, AssociatedTypeWitness);
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v12(v9, 0, 1, AssociatedTypeWitness);
  swift_retain();
  sub_10016F230(5, 0, 0, (uint64_t)v9);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v18);
  }
  else
  {
    v15[0] = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v15[0])(v9, v18);
    swift_release();
    uint64_t v13 = (uint64_t)v17;
    v11(v17, v16, AssociatedTypeWitness);
    v12((char *)v13, 0, 1, AssociatedTypeWitness);
    swift_retain();
    sub_10016F230(6, 0, 0, v13);
    ((void (*)(char *, uint64_t))v15[0])(v17, v18);
  }
  return swift_release();
}

uint64_t sub_1006584DC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_10096C890();
  uint64_t v5 = *(void *)(v18 - 8);
  uint64_t v6 = __chkstk_darwin(v18);
  uint64_t v17 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - v8;
  v15[1] = *(void *)(v1 + 32);
  uint64_t v16 = a1;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11((char *)v15 - v8, a1, AssociatedTypeWitness);
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v12(v9, 0, 1, AssociatedTypeWitness);
  swift_retain();
  sub_10016F230(5, 0, 0, (uint64_t)v9);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v18);
  }
  else
  {
    v15[0] = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v15[0])(v9, v18);
    swift_release();
    uint64_t v13 = (uint64_t)v17;
    v11(v17, v16, AssociatedTypeWitness);
    v12((char *)v13, 0, 1, AssociatedTypeWitness);
    swift_retain();
    sub_10016F230(6, 0, 0, v13);
    ((void (*)(char *, uint64_t))v15[0])(v17, v18);
  }
  return swift_release();
}

uint64_t sub_100658768(uint64_t a1)
{
  return sub_1006587C0(a1, (void (*)(uint64_t))sub_10017AC6C);
}

uint64_t sub_100658794(uint64_t a1)
{
  return sub_1006587C0(a1, (void (*)(uint64_t))sub_10017AA38);
}

uint64_t sub_1006587C0(uint64_t a1, void (*a2)(uint64_t))
{
  return swift_release();
}

void sub_100658818(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v7 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_10096B0D0();
    sub_10096B080();
    double v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    double v13 = v12 * 1000000000.0;
    if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v13 > -9.22337204e18)
      {
        if (v13 < 9.22337204e18)
        {
          sub_100959390(a1, a3, (uint64_t)v13);
          if (v3) {
            return;
          }
          goto LABEL_6;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_6:
  if (a2) {
    sub_10095AB08(a1, a2);
  }
}

void sub_1006589AC()
{
}

uint64_t sub_100658A08()
{
  swift_retain();
  char v1 = sub_1001750A8();
  swift_release();
  if (!v0)
  {
    if (v1)
    {
      char v1 = 1;
    }
    else
    {
      swift_retain();
      char v1 = sub_1001750A8();
      swift_release();
    }
  }
  return v1 & 1;
}

uint64_t sub_100658AA4()
{
  swift_retain();
  sub_100174B24();
  uint64_t result = swift_release();
  if (!v0)
  {
    swift_retain();
    sub_100174B24();
    return swift_release();
  }
  return result;
}

uint64_t sub_100658B18()
{
  swift_retain();
  sub_10016F3E4();
  swift_release();
  swift_retain();
  sub_10016F3E4();

  return swift_release();
}

uint64_t sub_100658B7C(uint64_t a1, char a2)
{
  uint64_t v6 = *(void *)(*(void *)v2 + 544);
  uint64_t v8 = *(void *)(*(void *)v2 + 560);
  uint64_t v9 = *(void *)(*(void *)v2 + 568);
  uint64_t v17 = *(void *)(*(void *)v2 + 552);
  uint64_t v7 = v17;
  uint64_t v18 = v8;
  uint64_t v19 = v9;
  type metadata accessor for FSOrFPJob();
  uint64_t v20 = sub_10096C110();
  uint64_t v16 = 0;
  LOBYTE(v17) = 1;
  uint64_t v13 = a1;
  char v14 = a2 & 1;
  uint64_t v15 = 100;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = v8;
  v11[5] = v9;
  v11[6] = &v20;
  v11[7] = &v16;
  sub_1006517E4((uint64_t)sub_10020E84C, (uint64_t)v12, (void (*)(uint64_t))sub_10065D0D4, (uint64_t)v11);
  if (!v3)
  {
    uint64_t v2 = v20;
    swift_bridgeObjectRetain();
    sub_10096C160();
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100658D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a1;
  swift_retain();
  v16[0] = a4;
  v16[1] = a5;
  v16[2] = a6;
  uint64_t v17 = a7;
  type metadata accessor for FSOrFPJob();
  sub_10096C1C0();
  sub_10096C180();
  sub_100615324(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_10002B770((uint64_t)v16, qword_100ACE608);
    goto LABEL_5;
  }
  sub_10002B7CC(&qword_100AD6E60);
  if (!swift_dynamicCast())
  {
LABEL_5:
    uint64_t v14 = 0;
    char v13 = 1;
    goto LABEL_6;
  }
  char v13 = 0;
  uint64_t v14 = v18;
LABEL_6:
  *(void *)a3 = v14;
  *(unsigned char *)(a3 + 8) = v13;
  return 1;
}

uint64_t sub_100658E28(uint64_t a1, char a2)
{
  uint64_t result = sub_100204FE0(a1, a2 & 1);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_100658E60(uint64_t a1, char a2)
{
  uint64_t result = sub_100204FE0(a1, a2 & 1);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_100658E98(char a1, char a2)
{
  uint64_t v6 = *(void ***)(*v2 + 544);
  uint64_t v7 = *(void *)(*v2 + 552);
  uint64_t v8 = *(id (**)(uint64_t, void *))(*v2 + 560);
  uint64_t v9 = *(void **)(*v2 + 568);
  if (a2)
  {
    type metadata accessor for Job();
    sub_1007B1CC0(a1);
    uint64_t aBlock = v6;
    uint64_t v20 = v7;
    Swift::String v21 = v8;
    uint64_t v22 = v9;
    type metadata accessor for ItemJob();
    if (swift_dynamicCastMetatype()) {
      goto LABEL_5;
    }
  }
  else
  {
    type metadata accessor for Job();
    sub_1007B1CC0(a1);
    uint64_t aBlock = v6;
    uint64_t v20 = v7;
    Swift::String v21 = v8;
    uint64_t v22 = v9;
    type metadata accessor for ItemJob();
    if (swift_dynamicCastMetatype())
    {
LABEL_5:
      char v10 = sub_100207A14(a1);
      if (!v3) {
        a1 = v10;
      }
      return a1 & 1;
    }
  }
  double v11 = (void *)v2[2];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(unsigned char *)(v12 + 17) = a2 & 1;
  uint64_t v13 = swift_allocObject();
  a1 = v13;
  *(void *)(v13 + 16) = sub_10065D0B8;
  *(void *)(v13 + 24) = v12;
  unint64_t v23 = sub_1001FB2E8;
  uint64_t v24 = v13;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  Swift::String v21 = sub_10017090C;
  uint64_t v22 = &unk_100A95618;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  id v15 = [v11 fetchSwift:v14 error:&aBlock];
  _Block_release(v14);
  uint64_t v16 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v15)
  {
    a1 = [v15 next];
    swift_release();
  }
  else
  {
    sub_10096ABF0();

    swift_willThrow();
    swift_release();
  }
  return a1 & 1;
}

uint64_t sub_1006591AC(uint64_t a1, char a2, char a3)
{
  v13[1] = 0xE000000000000000;
  sub_10096CBD0(87);
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0xD000000000000033;
  v17._object = (void *)0x80000001009AED80;
  sub_10096BDC0(v17);
  v13[0] = 2;
  v18._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v18);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 0x20444E412020200ALL;
  v19._object = (void *)0xEF203D2065707974;
  sub_10096BDC0(v19);
  uint64_t v5 = qword_100988DD8[a2];
  uint64_t v14 = &type metadata for Int;
  v13[0] = v5;
  uint64_t v6 = sub_1003AC444((uint64_t)v13);
  uint64_t v8 = v7;
  sub_10002B770((uint64_t)v13, (uint64_t *)&unk_100ACE0F0);
  if (!v8) {
    goto LABEL_4;
  }
  v20._uint64_t countAndFlagsBits = v6;
  v20._object = v8;
  sub_10096BDC0(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 0x20444E412020200ALL;
  v21._object = (void *)0xEF203D2065646973;
  sub_10096BDC0(v21);
  uint64_t v14 = &type metadata for Int;
  v13[0] = a3 & 1;
  uint64_t v9 = sub_1003AC444((uint64_t)v13);
  double v11 = v10;
  sub_10002B770((uint64_t)v13, (uint64_t *)&unk_100ACE0F0);
  if (v11)
  {
    v22._uint64_t countAndFlagsBits = v9;
    v22._object = v11;
    sub_10096BDC0(v22);
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006593AC()
{
  return sub_10020A6E4() & 1;
}

uint64_t sub_1006593D4()
{
  char v1 = sub_10020ACD4();
  if (!v0)
  {
    if (v1) {
      char v1 = 1;
    }
    else {
      char v1 = sub_10020ACD4();
    }
  }
  return v1 & 1;
}

void *sub_100659420()
{
  return sub_100205474();
}

void *sub_100659448(uint64_t a1)
{
  return sub_1002058C4(a1);
}

uint64_t sub_100659470(void *a1, uint64_t a2)
{
  return sub_10020653C(a1, a2);
}

uint64_t sub_100659498(int a1, uint64_t a2)
{
  uint64_t v20 = a2;
  int v19 = a1;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006F2F34();
    swift_retain();
    swift_release();
    sub_1001E5DF4();
    swift_release();
    long long v29 = v31;
    uint64_t v30 = v32;
    type metadata accessor for JobLockRule();
    swift_getWitnessTable();
    sub_10096BA30();
    sub_100033BE8(&qword_100ACE5F8);
    swift_getWitnessTable();
    sub_10096CD60();
    swift_getWitnessTable();
    sub_100025500((unint64_t *)&qword_100ACE600, &qword_100ACE5F8);
    sub_10096CD40();
    swift_getWitnessTable();
    uint64_t v3 = sub_10096CC00();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v4 = swift_getWitnessTable();
    uint64_t v5 = sub_100025500(&qword_100ACE9F8, &qword_100ACE5F8);
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    uint64_t v26 = swift_getWitnessTable();
    uint64_t v6 = swift_getWitnessTable();
    uint64_t v8 = sub_1003FC0AC((void (*)(char *, char *))sub_100659A68, 0, v3, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v6, (uint64_t)&protocol witness table for Never, v7);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_1006F2F3C();
      swift_retain();
      swift_release();
      sub_1001E5DF4();
      swift_release();
      long long v29 = v31;
      uint64_t v30 = v32;
      type metadata accessor for JobLockRule();
      swift_getWitnessTable();
      sub_10096BA30();
      swift_getWitnessTable();
      sub_10096CD60();
      swift_getWitnessTable();
      sub_10096CD40();
      swift_getWitnessTable();
      uint64_t v9 = sub_10096CC00();
      uint64_t v25 = swift_getWitnessTable();
      uint64_t v23 = swift_getWitnessTable();
      uint64_t v24 = v5;
      uint64_t v22 = swift_getWitnessTable();
      uint64_t v10 = swift_getWitnessTable();
      uint64_t v12 = sub_1003FC0AC((void (*)(char *, char *))sub_100659A68, 0, v9, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v10, (uint64_t)&protocol witness table for Never, v11);
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)&long long v31 = v8;
      sub_1003FC638(v12);
      uint64_t v13 = sub_1001FA650(v8);
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v15 = __chkstk_darwin(v14);
      char v18 = v19 & 1;
      __chkstk_darwin(v15);
      v17[2] = v13;
      v17[3] = v21;
      v17[4] = v20;
      sub_1006517E4((uint64_t)sub_10065D2D0, v16, (void (*)(uint64_t))sub_10065D2D8, (uint64_t)v17);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100659A68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10020D1B8(a1, a2);
}

uint64_t sub_100659A80(uint64_t a1, char a2)
{
  v7[1] = 0xE000000000000000;
  sub_10096CBD0(65);
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x203D2065646973;
  v10._object = (void *)0xE700000000000000;
  sub_10096BDC0(v10);
  v7[3] = &type metadata for Int;
  v7[0] = a2 & 1;
  uint64_t v3 = sub_1003AC444((uint64_t)v7);
  uint64_t v5 = v4;
  sub_10002B770((uint64_t)v7, (uint64_t *)&unk_100ACE0F0);
  if (v5)
  {
    v11._uint64_t countAndFlagsBits = v3;
    v11._object = v5;
    sub_10096BDC0(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 0xD000000000000038;
    v12._object = (void *)0x80000001009AEEA0;
    sub_10096BDC0(v12);
    return v8;
  }
  else
  {
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100659BB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void *)(*(void *)a3 + 552);
  uint64_t v8 = *(void *)(*(void *)a3 + 568);
  uint64_t v18 = *(void *)(*(void *)a3 + 560);
  uint64_t v19 = *(void *)(*(void *)a3 + 544);
  sub_100615324(a1, (uint64_t)&v20);
  uint64_t v9 = v23;
  if (v23)
  {
    uint64_t v10 = v24;
    sub_10002689C(&v20, v23);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    uint64_t v13 = v12;
    sub_1000268E0((uint64_t)&v20);
    sub_1000340D8(v11, v13, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B770((uint64_t)&v20, qword_100ACE608);
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = sub_1006C9158(a1);
    swift_release();
    uint64_t v16 = a4[3];
    uint64_t v17 = a4[4];
    sub_10002689C(a4, v16);
    if (v15 < 0)
    {
      v27._uint64_t countAndFlagsBits = 0x3A70669286E27366;
      v27._object = (void *)0xA800000000000000;
      sub_10096BDC0(v27);
      uint64_t v25 = v15 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v20 = v7;
      uint64_t v21 = v19;
      uint64_t v22 = v8;
      uint64_t v23 = v18;
    }
    else
    {
      v26._uint64_t countAndFlagsBits = 0x3A73669286E27066;
      v26._object = (void *)0xA800000000000000;
      sub_10096BDC0(v26);
      uint64_t v25 = v15;
      uint64_t v20 = v19;
      uint64_t v21 = v7;
      uint64_t v22 = v18;
      uint64_t v23 = v8;
    }
    type metadata accessor for Job();
    swift_getWitnessTable();
    sub_10096D270();
    v28._uint64_t countAndFlagsBits = sub_10096CC10();
    sub_10096BDC0(v28);
    swift_bridgeObjectRelease();
    sub_10059A0E8(0, (void *)0xE000000000000000, v16, v17);
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100659E7C(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t result = swift_weakLoadStrong();
  if (a1)
  {
    if (result)
    {
      sub_1006F2F3C();
      swift_retain();
      swift_release();
      char v16 = sub_1001E6128();
      swift_release();
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = a2[3];
        uint64_t v18 = a2[4];
        sub_10002689C(a2, v17);
        sub_10059A0E8(0xD000000000000018, (void *)0x80000001009AED20, v17, v18);
        uint64_t v19 = a2[3];
        uint64_t v20 = a2[4];
        sub_10002689C(a2, v19);
        sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_10065CFEC, v3, v19, (uint64_t)&type metadata for () + 8, v20);
      }
      goto LABEL_9;
    }
  }
  else
  {
    if (result)
    {
      sub_1006F2F34();
      swift_retain();
      swift_release();
      char v7 = sub_1001E6128();
      swift_release();
      if ((v7 & 1) == 0)
      {
        uint64_t v8 = a2[3];
        uint64_t v9 = a2[4];
        sub_10002689C(a2, v8);
        sub_10059A0E8(0xD000000000000018, (void *)0x80000001009AED20, v8, v9);
        uint64_t v10 = a2[3];
        uint64_t v11 = a2[4];
        sub_10002689C(a2, v10);
        sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_10065D04C, v3, v10, (uint64_t)&type metadata for () + 8, v11);
      }
      uint64_t v12 = a2[3];
      uint64_t v13 = a2[4];
      sub_10002689C(a2, v12);
      sub_10059A0E8(0x72676B636162202BLL, (void *)0xEC000000646E756FLL, v12, v13);
      uint64_t v14 = a2[3];
      uint64_t v15 = a2[4];
      sub_10002689C(a2, v14);
      sub_10059A1B8(8224, 0xE200000000000000, sub_10065D07C, v3, v14, (uint64_t)&type metadata for () + 8, v15);
LABEL_9:
      char v21 = a1 & 1;
      swift_retain();
      sub_10017AEA0(a2);
      swift_release();
      uint64_t v22 = a2[3];
      uint64_t v23 = a2[4];
      sub_10002689C(a2, v22);
      sub_10059A0E8(0xD000000000000012, (void *)0x80000001009AED40, v22, v23);
      uint64_t v24 = a2[3];
      uint64_t v25 = a2[4];
      Swift::String v26 = sub_10002689C(a2, v24);
      __chkstk_darwin(v26);
      void v29[2] = v3;
      char v30 = v21;
      sub_10059A1B8(8224, 0xE200000000000000, (void (*)(void *))sub_10065D01C, (uint64_t)v29, v24, (uint64_t)&type metadata for () + 8, v25);
      uint64_t v27 = a2[3];
      uint64_t v28 = a2[4];
      sub_10002689C(a2, v27);
      sub_10059A0E8(0x6A206D657469202BLL, (void *)0xEB0000000073626FLL, v27, v28);
      return sub_10020CDFC((uint64_t)a2);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10065A2C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    swift_retain();
    swift_release();
    sub_1001E64A8();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10065A338(uint64_t a1, char a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v9 = *(_OWORD *)(*(void *)v7 + 560);
  long long v14 = *(_OWORD *)(*(void *)v7 + 544);
  uint64_t v23 = 0;
  char v22 = a2 & 1 ^ (a3 < 3u);
  uint64_t v15 = a6;
  long long v16 = v9;
  uint64_t v17 = a7;
  uint64_t v18 = &v22;
  uint64_t v19 = a4;
  unsigned __int8 v20 = a3;
  uint64_t v21 = a5;
  void v10[2] = a6;
  v10[3] = a7;
  v10[4] = a1;
  v10[5] = a5;
  uint64_t v11 = v7;
  uint64_t v12 = &v23;
  sub_1006517E4((uint64_t)sub_10065D264, (uint64_t)v13, (void (*)(uint64_t))sub_10065D2A8, (uint64_t)v10);
  if (!v8 && v23 >= 1)
  {
    if (swift_weakLoadStrong())
    {
      sub_1006C05B4();
      swift_release();
    }
  }
}

uint64_t sub_10065A448(uint64_t a1, unsigned __int8 *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  sub_10096CBD0(111);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0x203D2065646973;
  v32._object = (void *)0xE700000000000000;
  sub_10096BDC0(v32);
  uint64_t v15 = *a2;
  long long v29 = &type metadata for Int;
  v28[0] = v15;
  uint64_t v16 = sub_1003AC444((uint64_t)v28);
  uint64_t v18 = v17;
  sub_10002B770((uint64_t)v28, (uint64_t *)&unk_100ACE0F0);
  if (!v18) {
    goto LABEL_5;
  }
  v33._uint64_t countAndFlagsBits = v16;
  v33._object = v18;
  sub_10096BDC0(v33);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 0xD000000000000016;
  v34._object = (void *)0x80000001009A52E0;
  sub_10096BDC0(v34);
  v35._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a11 + 40) + 32))(a1, a8);
  sub_10096BDC0(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 0x70797420444E410ALL;
  v36._object = (void *)0xEC000000203D2065;
  sub_10096BDC0(v36);
  uint64_t v19 = qword_100988DD8[a4];
  long long v29 = &type metadata for Int;
  v28[0] = v19;
  uint64_t v20 = sub_1003AC444((uint64_t)v28);
  char v22 = v21;
  sub_10002B770((uint64_t)v28, (uint64_t *)&unk_100ACE0F0);
  if (!v22) {
    goto LABEL_5;
  }
  v37._uint64_t countAndFlagsBits = v20;
  v37._object = v22;
  sub_10096BDC0(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 0xD000000000000018;
  v38._object = (void *)0x8000000100998F50;
  sub_10096BDC0(v38);
  v28[0] = 0;
  v39._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 0xD000000000000024;
  v40._object = (void *)0x8000000100999020;
  sub_10096BDC0(v40);
  long long v29 = &type metadata for Int;
  v28[0] = a5;
  uint64_t v23 = sub_1003AC444((uint64_t)v28);
  uint64_t v25 = v24;
  sub_10002B770((uint64_t)v28, (uint64_t *)&unk_100ACE0F0);
  if (v25)
  {
    v41._uint64_t countAndFlagsBits = v23;
    v41._object = v25;
    sub_10096BDC0(v41);
    swift_bridgeObjectRelease();
    return v30;
  }
  else
  {
LABEL_5:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10065A70C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v88 = a3;
  uint64_t v84 = a5;
  uint64_t v93 = a2;
  uint64_t v8 = *(void *)(*(void *)a4 + 544);
  uint64_t v9 = *(void *)(*(void *)a4 + 568);
  uint64_t v10 = *(void *)(*(void *)a4 + 560);
  uint64_t v94 = *(void *)(*(void *)a4 + 552);
  uint64_t v7 = v94;
  uint64_t v95 = v8;
  uint64_t v96 = v9;
  uint64_t v97 = v10;
  uint64_t v11 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = sub_10096C890();
  uint64_t v86 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v14 = (_OWORD *)((char *)&v82 - v13);
  uint64_t v90 = v8;
  uint64_t v91 = v9;
  uint64_t v94 = v8;
  uint64_t v95 = v7;
  uint64_t v92 = v7;
  uint64_t v98 = v10;
  uint64_t v96 = v10;
  uint64_t v97 = v9;
  uint64_t v15 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v16 = sub_10096C890();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v82 - v18;
  uint64_t v87 = a1;
  uint64_t v85 = a4;
  if (((unint64_t)a1 & 0x8000000000000000) != 0)
  {
    uint64_t v83 = v12;
    swift_retain();
    sub_1001C9044(v15, v14);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v14, 0, 1, v11);
    if (!swift_weakLoadStrong())
    {
LABEL_70:
      __break(1u);
      JUMPOUT(0x10065B1B8);
    }
    uint64_t v94 = v92;
    uint64_t v95 = v90;
    uint64_t v96 = v91;
    uint64_t v97 = v98;
    uint64_t v29 = type metadata accessor for JobRegistry();
    uint64_t v30 = (void **)sub_1006BA40C(v29);
    swift_release();
    uint64_t v31 = v89;
    uint64_t v32 = sub_1001F1398((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v14, v88, v30);
    if (v31)
    {
      (*(void (**)(_OWORD *, uint64_t))(v86 + 8))(v14, v83);
      goto LABEL_8;
    }
    uint64_t v89 = v32;
    uint64_t v93 = v33;
    uint64_t v45 = v14;
    char v46 = v34;
    (*(void (**)(_OWORD *, uint64_t))(v86 + 8))(v45, v83);
    swift_release();
    uint64_t v47 = sub_100615748((uint64_t)v87);
    char v50 = v46;
    uint64_t v51 = v47;
    uint64_t v52 = v48;
    switch(v46)
    {
      case 1:
        uint64_t v53 = v93;
        uint64_t v54 = v89;
        if (v49 != 1) {
          goto LABEL_64;
        }
        uint64_t v55 = v89;
        uint64_t v56 = v93;
        char v57 = 1;
        goto LABEL_51;
      case 2:
        uint64_t v53 = v93;
        uint64_t v54 = v89;
        if (v49 != 2) {
          goto LABEL_64;
        }
        uint64_t v55 = v89;
        uint64_t v56 = v93;
        char v57 = 2;
        goto LABEL_51;
      case 3:
        uint64_t v53 = v93;
        uint64_t v54 = v89;
        if (v49 != 3) {
          goto LABEL_64;
        }
        uint64_t v94 = v89;
        uint64_t v63 = v93;
        sub_10009C5FC(v47, v48, 3);
        sub_10009C5FC(v54, v63, 3);
        sub_10009C5FC(v51, v52, 3);
        sub_10009C5FC(v54, v63, 3);
        sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
        uint64_t v64 = sub_10096BCC0();
        uint64_t v66 = v65;
        uint64_t v94 = v51;
        swift_errorRetain();
        if (v64 == sub_10096BCC0() && v66 == v67)
        {
          swift_bridgeObjectRelease_n();
          sub_1000D31F8(v51, v52, 3);
          uint64_t v54 = v89;
          uint64_t v68 = v93;
          sub_1000D31F8(v89, v93, 3);
          sub_1000D31F8(v51, v52, 3);
          uint64_t v53 = v68;
          char v50 = v46;
          goto LABEL_63;
        }
        char v76 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000D31F8(v51, v52, 3);
        uint64_t v54 = v89;
        uint64_t v77 = v93;
        sub_1000D31F8(v89, v93, 3);
        sub_1000D31F8(v51, v52, 3);
        uint64_t v53 = v77;
        char v50 = v46;
        if (v76)
        {
LABEL_63:
          uint64_t v55 = v54;
          uint64_t v56 = v53;
          char v57 = v50;
LABEL_51:
          sub_1000D31F8(v55, v56, v57);
          goto LABEL_9;
        }
        goto LABEL_64;
      case 4:
        uint64_t v53 = v93;
        uint64_t v54 = v89;
        if (v89 | v93)
        {
          if (v49 == 4 && v47 == 1 && !v48)
          {
            uint64_t v58 = 1;
LABEL_48:
            sub_10009C5FC(v58, 0, 4);
            goto LABEL_9;
          }
        }
        else if (v49 == 4 && !(v47 | v48))
        {
          uint64_t v58 = 0;
          goto LABEL_48;
        }
LABEL_64:
        uint64_t v78 = *(void *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
        uint64_t v79 = *(void *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
        *(void *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v54;
        *(void *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = v53;
        char v80 = *(unsigned char *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70);
        *(unsigned char *)(((unint64_t)a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70) = v50;
        char v81 = v50;
        sub_10009C5FC(v54, v53, v50);
        sub_1000D31F8(v78, v79, v80);
        sub_1006524C8(v87);
        swift_release();
        if (v81 != 1)
        {
          sub_1000D31F8(v89, v93, v81);
          return 1;
        }
        sub_1000D31F8(v89, v93, 1);
        BOOL v74 = v84;
        uint64_t v75 = *v84 + 1;
        if (!__OFADD__(*v84, 1))
        {
LABEL_66:
          *BOOL v74 = v75;
          return 1;
        }
        __break(1u);
        goto LABEL_69;
      default:
        uint64_t v53 = v93;
        uint64_t v54 = v89;
        if (v49 || v89 != v47) {
          goto LABEL_64;
        }
        goto LABEL_63;
    }
  }
  uint64_t v20 = *(v15 - 1);
  (*(void (**)(char *, uint64_t, void *))(v20 + 16))(v19, v93, v15);
  (*(void (**)(char *, void, uint64_t, void *))(v20 + 56))(v19, 0, 1, v15);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  char v22 = (void **)Strong;
  uint64_t v94 = v90;
  uint64_t v95 = v92;
  uint64_t v96 = v98;
  uint64_t v97 = v91;
  type metadata accessor for JobRegistry();
  uint64_t v23 = v87;
  uint64_t v24 = swift_retain();
  uint64_t v25 = v89;
  uint64_t v26 = sub_1001F1398(v24, (uint64_t)v19, v88, v22);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_8:
    swift_release();
LABEL_9:
    swift_release();
    return 1;
  }
  uint64_t v93 = v26;
  uint64_t v88 = v27;
  uint64_t v89 = 0;
  char v36 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release();
  uint64_t v37 = sub_100615748((uint64_t)v23);
  uint64_t v40 = v37;
  uint64_t v41 = v38;
  uint64_t v42 = v23;
  switch(v36)
  {
    case 1:
      uint64_t v43 = v88;
      uint64_t v44 = v93;
      if (v39 != 1) {
        goto LABEL_52;
      }
      uint64_t v55 = v93;
      uint64_t v56 = v88;
      char v57 = 1;
      goto LABEL_51;
    case 2:
      uint64_t v43 = v88;
      uint64_t v44 = v93;
      if (v39 != 2) {
        goto LABEL_52;
      }
      uint64_t v55 = v93;
      uint64_t v56 = v88;
      char v57 = 2;
      goto LABEL_51;
    case 3:
      uint64_t v43 = v88;
      uint64_t v44 = v93;
      if (v39 != 3) {
        goto LABEL_52;
      }
      uint64_t v94 = v93;
      sub_10009C5FC(v37, v38, 3);
      sub_10009C5FC(v44, v43, 3);
      sub_10009C5FC(v40, v41, 3);
      sub_10009C5FC(v44, v43, 3);
      sub_10002B7CC((uint64_t *)&unk_100ACB6B0);
      uint64_t v59 = sub_10096BCC0();
      uint64_t v61 = v60;
      uint64_t v94 = v40;
      swift_errorRetain();
      if (v59 == sub_10096BCC0() && v61 == v62)
      {
        swift_bridgeObjectRelease_n();
        sub_1000D31F8(v40, v41, 3);
        uint64_t v44 = v93;
        sub_1000D31F8(v93, v43, 3);
        sub_1000D31F8(v40, v41, 3);
      }
      else
      {
        char v69 = sub_10096D2D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000D31F8(v40, v41, 3);
        uint64_t v44 = v93;
        sub_1000D31F8(v93, v43, 3);
        sub_1000D31F8(v40, v41, 3);
        uint64_t v42 = v87;
        if ((v69 & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_50:
      uint64_t v55 = v44;
      uint64_t v56 = v43;
      char v57 = v36;
      goto LABEL_51;
    case 4:
      uint64_t v43 = v88;
      uint64_t v44 = v93;
      if (v93 | v88)
      {
        if (v39 == 4 && v37 == 1 && !v38)
        {
          uint64_t v58 = 1;
          goto LABEL_48;
        }
      }
      else if (v39 == 4 && !(v37 | v38))
      {
        uint64_t v58 = 0;
        goto LABEL_48;
      }
LABEL_52:
      uint64_t v70 = (uint64_t)v42[12];
      uint64_t v71 = (uint64_t)v42[13];
      v42[12] = (void *)v44;
      v42[13] = (void *)v43;
      char v72 = *((unsigned char *)v42 + 112);
      *((unsigned char *)v42 + 112) = v36;
      sub_10009C5FC(v44, v43, v36);
      sub_1000D31F8(v70, v71, v72);
      uint64_t v73 = v89;
      sub_1006524C8(v42);
      if (v73)
      {
        sub_1000D31F8(v44, v43, v36);
        goto LABEL_9;
      }
      swift_release();
      if (v36 != 1) {
        goto LABEL_58;
      }
      sub_1000D31F8(v93, v43, 1);
      BOOL v74 = v84;
      uint64_t v75 = *v84 + 1;
      if (!__OFADD__(*v84, 1)) {
        goto LABEL_66;
      }
      __break(1u);
LABEL_58:
      sub_1000D31F8(v93, v43, v36);
      break;
    default:
      uint64_t v43 = v88;
      uint64_t v44 = v93;
      if (v39 || v93 != v37) {
        goto LABEL_52;
      }
      goto LABEL_50;
  }
  return 1;
}

uint64_t sub_10065B1E0(uint64_t a1)
{
  uint64_t v4 = *(void ***)(*(void *)v1 + 544);
  uint64_t v5 = *(id (**)(uint64_t, void *))(*(void *)v1 + 568);
  uint64_t v6 = *(id (**)(uint64_t, void *))(*(void *)v1 + 560);
  uint64_t aBlock = *(void ***)(*(void *)v1 + 552);
  uint64_t v3 = aBlock;
  uint64_t v64 = (uint64_t)v4;
  uint64_t v65 = v5;
  uint64_t v66 = v6;
  uint64_t v7 = type metadata accessor for PersistenceTrigger();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v50 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v53 = (char *)&v50 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  __chkstk_darwin(v11);
  char v50 = (char *)&v50 - v12;
  uint64_t aBlock = v4;
  uint64_t v64 = (uint64_t)v3;
  uint64_t v65 = v6;
  uint64_t v66 = v5;
  type metadata accessor for PersistenceTrigger.AffectedGlobalJobs();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_10096C890();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v50 - v15);
  uint64_t aBlock = v4;
  uint64_t v64 = (uint64_t)v3;
  uint64_t v65 = v6;
  uint64_t v66 = v5;
  uint64_t v58 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v60 = a1;
  sub_1001D52C8(v58, v16);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) != 1)
  {
    uint64_t v21 = *v16;
    char v22 = (unsigned __int8 *)v16 + *(int *)(TupleTypeMetadata2 + 48);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      unsigned __int8 v32 = *v22;
      uint64_t v33 = v52;
      char v34 = &v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v36 = (uint64_t)v50;
      uint64_t v35 = v51;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v51 + 32))(v50, v34, v33);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v19 = v60;
      uint64_t v38 = v61;
      sub_10065A338(v60, 0, v32, v36, v21, v33, AssociatedConformanceWitness);
      uint64_t v18 = v38;
      if (v38) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v33);
      }
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v33);
      goto LABEL_25;
    }
    if (EnumCaseMultiPayload == 1)
    {
      unsigned __int8 v24 = *v22;
      uint64_t v25 = v55;
      uint64_t v26 = &v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v28 = (uint64_t)v53;
      uint64_t v27 = v54;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v54 + 32))(v53, v26, v25);
      uint64_t v29 = swift_getAssociatedConformanceWitness();
      uint64_t v19 = v60;
      uint64_t v30 = v61;
      sub_10065A338(v60, 1, v24, v28, v21, v25, v29);
      uint64_t v18 = v30;
      if (v30) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
      }
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
LABEL_25:
      uint64_t v17 = 0;
      goto LABEL_3;
    }
    char v39 = *(void **)(v62 + 16);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v21;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_10058A728;
    *(void *)(v41 + 24) = v40;
    uint64_t v67 = sub_1001F8FDC;
    uint64_t v68 = v41;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_10017090C;
    uint64_t v66 = (id (*)(uint64_t, void *))&unk_100A95578;
    uint64_t v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t aBlock = 0;
    unsigned int v43 = [v39 executeSwift:v42 error:&aBlock];
    _Block_release(v42);
    uint64_t v44 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v43)
      {
        sub_10096ABF0();

        goto LABEL_28;
      }
      if (![v39 changes])
      {
LABEL_26:
        uint64_t v17 = sub_10058A728;
        uint64_t v19 = v60;
        uint64_t v18 = v61;
        goto LABEL_3;
      }
      uint64_t v67 = (uint64_t (*)(uint64_t))sub_1004B1458;
      uint64_t v68 = 0;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v64 = 1107296256;
      uint64_t v65 = sub_10017090C;
      uint64_t v66 = (id (*)(uint64_t, void *))&unk_100A955A0;
      char v46 = _Block_copy(&aBlock);
      swift_release();
      uint64_t aBlock = 0;
      unsigned int v47 = [v39 executeSwift:v46 error:&aBlock];
      _Block_release(v46);
      uint64_t v48 = aBlock;
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
      {
        if (v47)
        {
          if ([v39 changes])
          {
            uint64_t Strong = swift_weakLoadStrong();
            uint64_t v19 = v60;
            uint64_t v18 = v61;
            uint64_t v20 = v59;
            if (Strong)
            {
              sub_1006C05B4();
              swift_release();
            }
            uint64_t v17 = sub_10058A728;
            goto LABEL_4;
          }
          goto LABEL_26;
        }
        sub_10096ABF0();

LABEL_28:
        swift_willThrow();
        return swift_release();
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
  uint64_t v19 = v60;
  uint64_t v18 = v61;
LABEL_3:
  uint64_t v20 = v59;
LABEL_4:
  sub_100208FC0(v19);
  if (!v18)
  {
    sub_1001C9044(v58, v20);
    sub_100208FC0((uint64_t)v20);
    (*(void (**)(_OWORD *, uint64_t))(v56 + 8))(v20, v57);
    sub_10096023C(v19);
  }
  return sub_1000705CC((uint64_t)v17);
}

uint64_t sub_10065BA74(uint64_t a1, uint64_t a2)
{
  v10[1] = 0xE000000000000000;
  sub_10096CBD0(143);
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000046;
  v14._object = (void *)0x80000001009AEC40;
  sub_10096BDC0(v14);
  uint64_t v11 = &type metadata for Int;
  v10[0] = a2;
  uint64_t v3 = sub_1003AC444((uint64_t)v10);
  uint64_t v5 = v4;
  sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100ACE0F0);
  if (!v5) {
    goto LABEL_4;
  }
  v15._uint64_t countAndFlagsBits = v3;
  v15._object = v5;
  sub_10096BDC0(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v16._object = (void *)0x80000001009AEC90;
  sub_10096BDC0(v16);
  v10[0] = 0;
  v17._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0xD000000000000027;
  v18._object = (void *)0x80000001009AECB0;
  sub_10096BDC0(v18);
  uint64_t v11 = &type metadata for Int;
  v10[0] = a2;
  uint64_t v6 = sub_1003AC444((uint64_t)v10);
  uint64_t v8 = v7;
  sub_10002B770((uint64_t)v10, (uint64_t *)&unk_100ACE0F0);
  if (v8)
  {
    v19._uint64_t countAndFlagsBits = v6;
    v19._object = v8;
    sub_10096BDC0(v19);
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_10096CE20();
    __break(1u);
  }
  return result;
}

void sub_10065BC44()
{
  sub_100209F64();
  if (!v1)
  {
    sub_100209F64();
    sub_100955850();
    sub_1006517E4((uint64_t)sub_10020A16C, 0, (void (*)(uint64_t))sub_10065CEB4, v0);
    uint64_t v2 = *(void **)(v0 + 16);
    aBlock[4] = sub_100651560;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10017090C;
    aBlock[3] = &unk_100A95500;
    uint64_t v3 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = [v2 executeSwift:v3 error:aBlock];
    _Block_release(v3);
    id v5 = aBlock[0];
    if (swift_isEscapingClosureAtFileLocation()) {
      __break(1u);
    }
    if (!v4)
    {
      sub_10096ABF0();

      swift_willThrow();
    }
  }
}

uint64_t sub_10065BE08(uint64_t a1, void *a2)
{
  uint64_t v3 = *a2;
  unsigned int v43 = a2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10096B0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10096B480();
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (id)fpfs_current_or_default_log();
  sub_10096B490();
  swift_retain();
  uint64_t v12 = sub_10096B470();
  os_log_type_t v13 = sub_10096C590();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v40 = v4;
  if (v14)
  {
    uint64_t v37 = v8;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = v5;
    Swift::String v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = v6;
    *(_DWORD *)Swift::String v16 = 136446210;
    uint64_t v46 = v17;
    v36[1] = v16 + 4;
    uint64_t v18 = sub_1006151DC(a1);
    uint64_t v45 = sub_100719D44(v18, v19, &v46);
    sub_10096C8C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "recovering running job %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v6 = v38;
    swift_slowDealloc();
    uint64_t v5 = v39;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v37);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v8);
  }
  sub_10017DB74();
  uint64_t v20 = swift_allocError();
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = -1;
  if (a1 < 0)
  {
    uint64_t v23 = *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
    uint64_t v22 = *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
    *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v20;
    *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = 0;
    char v24 = *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70);
    *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70) = 3;
  }
  else
  {
    uint64_t v23 = *(void *)(a1 + 96);
    uint64_t v22 = *(void *)(a1 + 104);
    *(void *)(a1 + 96) = v20;
    *(void *)(a1 + 104) = 0;
    char v24 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = 3;
  }
  sub_1000D31F8(v23, v22, v24);
  swift_retain();
  uint64_t v25 = v44;
  sub_10096B0D0();
  sub_10096B080();
  double v27 = v26;
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t result = v28(v25, v5);
  double v30 = v27 * 1000000000.0;
  if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v31 = v41;
  sub_100178298(a1, (void (**)(char *, uint64_t))(uint64_t)v30);
  swift_release();
  if (v31) {
    return 1;
  }
  unint64_t v32 = sub_100615740(a1);
  swift_retain();
  swift_retain();
  sub_10096B0D0();
  sub_10096B080();
  double v34 = v33;
  uint64_t result = v28(v25, v5);
  double v35 = v34 * 1000000000.0;
  if ((~COERCE__INT64(v34 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v35 < 9.22337204e18)
  {
    sub_100178298(v32, (void (**)(char *, uint64_t))(uint64_t)v35);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_10065C32C()
{
  return sub_100956430();
}

void sub_10065C364()
{
  uint64_t v0 = sub_10096B830();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (swift_weakLoadStrong())
  {
    id v4 = (id)sub_1006F2F2C();
    swift_release();
    *uint64_t v3 = v4;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    char v5 = sub_10096B860();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v5)
    {
      sub_100956B00();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10065C4AC()
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10065C514()
{
  uint64_t v0 = FileTree.deinit();

  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10065C584()
{
  sub_10065C514();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLJobRegistry()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10065C5CC()
{
  sub_10002B7CC(&qword_100AD70D0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10097D760;
  uint64_t v2 = v0[3];
  *(void *)(v1 + 56) = type metadata accessor for SQLItemJobRegistry();
  *(void *)(v1 + 64) = &off_100A741C8;
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = v0[4];
  *(void *)(v1 + 96) = type metadata accessor for SQLItemJobRegistry();
  *(void *)(v1 + 104) = &off_100A741C8;
  *(void *)(v1 + 72) = v3;
  uint64_t v4 = v0[5];
  *(void *)(v1 + 136) = type metadata accessor for SQLBackgroundDownloader();
  *(void *)(v1 + 144) = &off_100AA67D8;
  *(void *)(v1 + 112) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_10065C718()
{
  uint64_t v1 = *(void **)(v0 + 16);
  unint64_t v19 = sub_1006514B8;
  uint64_t v20 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_10017090C;
  uint64_t v18 = &unk_100A95438;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:&aBlock];
  _Block_release(v2);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v3)
  {
LABEL_12:
    sub_10096ABF0();

    return swift_willThrow();
  }
  unint64_t v19 = sub_1006514D4;
  uint64_t v20 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_10017090C;
  uint64_t v18 = &unk_100A95460;
  char v5 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v6 = [v1 executeSwift:v5 error:&aBlock];
  _Block_release(v5);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v6) {
    goto LABEL_12;
  }
  unint64_t v19 = sub_1006514F0;
  uint64_t v20 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_10017090C;
  uint64_t v18 = &unk_100A95488;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v8 = [v1 executeSwift:v7 error:&aBlock];
  _Block_release(v7);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v8) {
    goto LABEL_12;
  }
  unint64_t v19 = sub_10065150C;
  uint64_t v20 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_10017090C;
  uint64_t v18 = &unk_100A954B0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v10 = [v1 executeSwift:v9 error:&aBlock];
  _Block_release(v9);
  uint64_t v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  if (!v10) {
    goto LABEL_12;
  }
  unint64_t v19 = sub_100651528;
  uint64_t v20 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_10017090C;
  uint64_t v18 = &unk_100A954D8;
  id v11 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = 0;
  unsigned int v12 = [v1 executeSwift:v11 error:&aBlock];
  _Block_release(v11);
  os_log_type_t v13 = aBlock;
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    goto LABEL_19;
  }
  if (v12) {
    return result;
  }
  sub_10096ABF0();

  return swift_willThrow();
}

uint64_t sub_10065CB84()
{
  uint64_t v1 = *(void **)(v0 + 16);
  aBlock[4] = sub_100651544;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10017090C;
  aBlock[3] = &unk_100A95410;
  uint64_t v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v3 = [v1 executeSwift:v2 error:aBlock];
  _Block_release(v2);
  id v4 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v3)
  {
    sub_10096ABF0();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10065CCCC()
{
  return sub_10065C5CC();
}

uint64_t sub_10065CCF0()
{
  return sub_10065C718();
}

uint64_t sub_10065CD14()
{
  return sub_10065CB84();
}

char *sub_10065CD38@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = qword_100988DD8[*result];
  return result;
}

uint64_t sub_10065CD50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10096D220();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10065CD9C()
{
  sub_10096CBD0(108);
  v1._uint64_t countAndFlagsBits = 0xD000000000000026;
  v1._object = (void *)0x80000001009AEBE0;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x8000000100999070;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0xD000000000000027;
  v5._object = (void *)0x80000001009AEC10;
  sub_10096BDC0(v5);
  return 0;
}

uint64_t sub_10065CEB4(uint64_t a1)
{
  return sub_10065BE08(a1, v1) & 1;
}

uint64_t sub_10065CED4()
{
  sub_10096CBD0(69);
  v1._uint64_t countAndFlagsBits = 0xD000000000000026;
  v1._object = (void *)0x80000001009AEBE0;
  sub_10096BDC0(v1);
  v2._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x8000000100999070;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_10096BDC0(v3);
  v4._uint64_t countAndFlagsBits = sub_10096D220();
  sub_10096BDC0(v4);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10065CFCC()
{
  return swift_deallocObject();
}

uint64_t sub_10065CFDC()
{
  return swift_deallocObject();
}

uint64_t sub_10065CFEC(uint64_t a1)
{
  return sub_10065A2C0(a1, v1, (void (*)(void))sub_1006F2F3C);
}

uint64_t sub_10065D01C(uint64_t a1)
{
  return sub_100659498(*(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_10065D04C(uint64_t a1)
{
  return sub_10065A2C0(a1, v1, (void (*)(void))sub_1006F2F34);
}

void sub_10065D07C(void *a1)
{
}

uint64_t sub_10065D0A8()
{
  return swift_deallocObject();
}

uint64_t sub_10065D0B8(uint64_t a1)
{
  return sub_1006591AC(a1, *(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 17));
}

uint64_t sub_10065D0C4()
{
  return swift_deallocObject();
}

uint64_t sub_10065D0D4(uint64_t a1)
{
  return sub_100658D10(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_10065D0FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100657F10(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10065D120@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007B3004();
  *a1 = result;
  return result;
}

uint64_t sub_10065D15C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100657CEC(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10065D180()
{
  return sub_1006563C0();
}

uint64_t sub_10065D188()
{
  return swift_deallocObject();
}

uint64_t sub_10065D198(uint64_t a1)
{
  return sub_10065542C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10065D1BC()
{
  return 32;
}

__n128 sub_10065D1C8(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_10065D1D4()
{
  return swift_getAtKeyPath();
}

uint64_t sub_10065D200()
{
  return sub_100656028();
}

unint64_t sub_10065D210()
{
  unint64_t result = qword_100AD9990;
  if (!qword_100AD9990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD9990);
  }
  return result;
}

uint64_t sub_10065D264(uint64_t a1)
{
  return sub_10065A448(a1, *(unsigned __int8 **)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10065D2A8(void **a1)
{
  return sub_10065A70C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56)) & 1;
}

uint64_t sub_10065D2D0(uint64_t a1)
{
  return sub_100659A80(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_10065D2D8(uint64_t a1)
{
  return sub_100659BB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32)) & 1;
}

uint64_t sub_10065D300(uint64_t a1)
{
  return sub_10065D3D0(a1, (uint64_t (*)(uint64_t, void, unint64_t, void))sub_100656E04);
}

uint64_t sub_10065D31C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10065D3B8(uint64_t a1)
{
  return sub_10065D3D0(a1, (uint64_t (*)(uint64_t, void, unint64_t, void))sub_1006568A4);
}

uint64_t sub_10065D3D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t, void))
{
  uint64_t v3 = *(void *)(*(void *)(v2 + 32) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(a1, *(unsigned __int8 *)(v2 + 64), v2 + v4, *(void *)(v2 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10065D448(void *a1)
{
  return sub_1006541E8(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10065D454(uint64_t a1)
{
  return sub_100654498(a1, *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

uint64_t sub_10065D48C()
{
  return swift_deallocObject();
}

uint64_t sub_10065D4C8(uint64_t a1)
{
  return sub_10065D548(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100652EB4);
}

uint64_t sub_10065D4E0()
{
  return swift_deallocObject();
}

uint64_t sub_10065D4F4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10065D530(uint64_t a1)
{
  return sub_10065D548(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100652BBC);
}

uint64_t sub_10065D548(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10065D560()
{
  return swift_deallocObject();
}

uint64_t sub_10065D570()
{
  return swift_deallocObject();
}

uint64_t sub_10065D580()
{
  return swift_deallocObject();
}

uint64_t sub_10065D590()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10065D5D4(uint64_t a1)
{
  return sub_1006521BC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10065D5DC()
{
  return swift_deallocObject();
}

uint64_t sub_10065D5EC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 48);
  uint64_t v3 = *v2;
  *uint64_t v2 = a1;
  swift_retain();
  sub_10010D854(v3);
  return 0;
}

uint64_t sub_10065D630()
{
  return swift_deallocObject();
}

unint64_t sub_10065D640(uint64_t a1)
{
  return sub_100651D28(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10065D648()
{
  return swift_deallocObject();
}

uint64_t sub_10065D658()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10065D690()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SQLVolatileJobID()
{
  return &type metadata for SQLVolatileJobID;
}

ValueMetadata *type metadata accessor for SQLJobID()
{
  return &type metadata for SQLJobID;
}

unint64_t sub_10065D6C0(uint64_t a1)
{
  unint64_t result = sub_10065D6E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10065D6E8()
{
  unint64_t result = qword_100AD99A0;
  if (!qword_100AD99A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100AD99A0);
  }
  return result;
}

unint64_t sub_10065D73C(uint64_t a1)
{
  unint64_t result = sub_10065D764();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10065D764()
{
  unint64_t result = qword_100AD99A8[0];
  if (!qword_100AD99A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100AD99A8);
  }
  return result;
}

uint64_t sub_10065D7B8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10065D120(a1);
}

char *Lazy.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (char *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 56))(&v4[*(void *)(*(void *)v4 + 96)], 1, 1);
  *((void *)v4 + 2) = a1;
  *((void *)v4 + 3) = a2;
  return v4;
}

uint64_t Lazy.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_10096C890();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v17[-v10];
  unsigned int v12 = (char *)v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
  uint64_t v13 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a1, v11, v4);
  }
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  BOOL v14 = (void (*)(uint64_t))v1[2];
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 40))(v12, v9, v5);
  return swift_endAccess();
}

uint64_t Lazy.value.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_10096C890();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))((char *)&v11 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  uint64_t v9 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  return swift_endAccess();
}

void (*Lazy.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  Lazy.value.getter((uint64_t)v7);
  return sub_10065DDC4;
}

void sub_10065DDC4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    Lazy.value.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Lazy.value.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

char *Lazy.init(_:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 56))(&v2[*(void *)(*(void *)v2 + 96)], 1, 1);
  *((void *)v2 + 2) = a1;
  *((void *)v2 + 3) = a2;
  return v2;
}

uint64_t Lazy.deinit()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_10096C890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t Lazy.__deallocating_deinit()
{
  Lazy.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10065DFF4()
{
  uint64_t result = sub_10096C890();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Lazy()
{
  return sub_10014D080();
}

uint64_t sub_10065E0B0()
{
  uint64_t result = type metadata accessor for DirectionalTestingOperation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DirectionalTestingOperation();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_10065E1A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v953 = *(void *)(v4 + 64);
  int v895 = *(_DWORD *)(v4 + 80);
  uint64_t v920 = v3;
  uint64_t v852 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v852 - 8);
  int v889 = *(_DWORD *)(v5 + 80);
  uint64_t v841 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v841 - 8);
  int v884 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = v889 & 0xF8 | v884 | 7u;
  uint64_t v959 = v7 | v895;
  uint64_t v849 = sub_10096B0E0();
  uint64_t v8 = *(void *)(v849 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v839 = v8;
  int v879 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v879 | 7;
  uint64_t v867 = v4;
  uint64_t v853 = v5;
  uint64_t v842 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  unsigned int v823 = v11;
  unsigned int v863 = *(_DWORD *)(v5 + 84);
  if (v863 > v11) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v832 = v11;
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  unsigned int v929 = *(_DWORD *)(v4 + 84);
  unsigned int v855 = v11;
  if (v11 <= v929) {
    unsigned int v11 = *(_DWORD *)(v4 + 84);
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v908 = v12;
  if (v11 <= v12) {
    unsigned int v11 = v12;
  }
  unsigned int v825 = v11;
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  unsigned int v847 = v11;
  unsigned int v861 = *(_DWORD *)(v8 + 84);
  uint64_t v945 = v895;
  unint64_t v856 = v953 + v895;
  uint64_t v918 = v889 & 0xF8 | v884 | 7u;
  uint64_t v857 = v953 + v7;
  uint64_t v860 = *(void *)(v5 + 64) + 7;
  uint64_t v840 = v884 + 8;
  uint64_t v835 = *(void *)(v6 + 64) + 7;
  size_t v935 = ((((v835 + ((v840 + (v860 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v884)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v916 = *(_DWORD *)(v8 + 80) | 7;
  uint64_t v926 = v10 + 16;
  uint64_t v844 = v879 + 12;
  size_t v13 = *(void *)(*(void *)(v849 - 8) + 64);
  size_t v838 = v13 + v879;
  size_t v820 = v13 + 12;
  uint64_t v837 = v879 + 10;
  unint64_t v14 = (v837
       + ((((((v13
             + 12
             + ((v838 + (v844 & ~(unint64_t)v879)) & ~(unint64_t)v879)) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v879;
  unint64_t v911 = *(_DWORD *)(v8 + 80);
  size_t v862 = v13;
  if (!v9) {
    ++v13;
  }
  size_t v864 = v13;
  unint64_t v865 = v14;
  size_t v836 = v13 + 7;
  unint64_t v925 = ((((((((((v13 + 7 + v14) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v848 = (v10
        + 16
        + ((v953 + v7 + ((v953 + v895) & ~(unint64_t)v895)) & ~v7)
        + v935) & ~v10;
  unint64_t v846 = (v959 | v879) + v953;
  uint64_t v866 = v959 | v879;
  unint64_t v834 = ((((v848 + v925 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v15 = v834 + ((v866 + v953) & ~v866);
  unint64_t v901 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v870 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v870 - 8);
  unsigned int v18 = *(_DWORD *)(v17 + 84);
  uint64_t v868 = v17;
  int v875 = *(_DWORD *)(v17 + 80);
  unint64_t v19 = *(void *)(v17 + 64);
  if (v18) {
    size_t v20 = *(void *)(v17 + 64);
  }
  else {
    size_t v20 = v19 + 1;
  }
  uint64_t v850 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v850 - 8);
  int __dst = *(_DWORD *)(v21 + 80);
  uint64_t v22 = v16;
  uint64_t v854 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v854 - 8);
  unsigned int v24 = *(_DWORD *)(v23 + 84);
  uint64_t v25 = *(_DWORD *)(v23 + 80);
  uint64_t v26 = __dst & 0xF8 | v25 | 7;
  uint64_t v851 = v21;
  unsigned int v843 = *(_DWORD *)(v21 + 84);
  if (v843 > v24) {
    unsigned int v24 = *(_DWORD *)(v21 + 84);
  }
  unsigned int v831 = v24;
  if (v24 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  else {
    unsigned int v27 = v24;
  }
  uint64_t v859 = *(void *)(v21 + 64) + 7;
  uint64_t v858 = v25 + 8;
  unint64_t v28 = ((((*(void *)(*(void *)(v854 - 8) + 64) + 7 + ((v25 + 8 + (v859 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t v830 = v20;
  uint64_t v29 = v20 + v26;
  unint64_t v30 = ((((((v29 + ((v15 + v875) & ~(unint64_t)v875)) & ~v26) + v28 + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v827 = v953 + v875;
  uint64_t v31 = *(void *)(v920 - 8);
  uint64_t v32 = *(_DWORD *)(v31 + 80);
  size_t v33 = *(void *)(v31 + 64);
  uint64_t v826 = v953 + v32;
  if (!*(_DWORD *)(v31 + 84)) {
    ++v33;
  }
  size_t v822 = v33;
  unint64_t v34 = ((v953 + v32) & ~v32) + v33;
  unint64_t v35 = ((v901 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v953 > v35) {
    unint64_t v35 = v953;
  }
  if (v30 <= v28 + ((v29 + ((v953 + v875) & ~(unint64_t)v875)) & ~v26) + 16) {
    unint64_t v30 = v28 + ((v29 + ((v953 + v875) & ~(unint64_t)v875)) & ~v26) + 16;
  }
  if (((v901 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v34) {
    unint64_t v34 = ((v901 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v35 > v30) {
    unint64_t v30 = v35;
  }
  if (v30 <= v34) {
    unint64_t v36 = v34;
  }
  else {
    unint64_t v36 = v30;
  }
  unsigned int v907 = v27;
  unsigned int v902 = v18;
  if (v27 <= v18) {
    unsigned int v37 = v18;
  }
  else {
    unsigned int v37 = v27;
  }
  if (v37 <= v908) {
    unsigned int v37 = v908;
  }
  unsigned int v824 = v37;
  if (v37 <= 0x7FFFFFFF) {
    unsigned int v37 = 0x7FFFFFFF;
  }
  unsigned int v845 = v37;
  if (v929) {
    size_t v38 = v953;
  }
  else {
    size_t v38 = v953 + 1;
  }
  uint64_t v828 = v22;
  uint64_t v39 = *(void *)(v22 - 8);
  unint64_t v40 = v26 | v875 | v911;
  unint64_t v904 = v19 + v875;
  uint64_t v909 = v19 + v26;
  uint64_t v41 = v916;
  unint64_t v42 = (v926 + ((v19 + v26 + (v904 & ~(unint64_t)v875)) & ~v26) + v28) & ~v916;
  unint64_t v43 = v40 + v19;
  unint64_t v833 = ((((v42 + v925 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v44 = v833 + ((v40 + v19) & ~v40);
  unint64_t v45 = (v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = ((v45 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v47 = v895;
  size_t __n = v38;
  uint64_t v48 = v38 + v918;
  unint64_t v49 = ((((((v38 + v918 + ((v44 + v47) & ~v47)) & ~v918) + v935 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v50 = v19 + v895;
  unint64_t v51 = ((v38 + v918 + ((v19 + v47) & ~v47)) & ~v918) + v935 + 16;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v52 = *(void *)(v39 + 64);
  }
  else {
    uint64_t v52 = *(void *)(v39 + 64) + 1;
  }
  if (v19 > v46) {
    unint64_t v46 = v19;
  }
  if (v49 <= v51) {
    unint64_t v49 = v51;
  }
  unint64_t v53 = ((v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v54 = *(_DWORD *)(v39 + 80);
  uint64_t v55 = v19 + v54;
  size_t v821 = v52;
  if (v53 <= ((v19 + v54) & ~v54) + v52) {
    unint64_t v53 = (v55 & ~(unint64_t)*(_DWORD *)(v39 + 80)) + v52;
  }
  if (v46 > v49) {
    unint64_t v49 = v46;
  }
  if (v49 > v53) {
    unint64_t v53 = v49;
  }
  unint64_t v56 = v53;
  unint64_t v57 = v53 + 1;
  uint64_t v58 = v959 | v40 | v32 | v54;
  if (v57 <= v36 + 1) {
    unint64_t v59 = v36 + 1;
  }
  else {
    unint64_t v59 = v57;
  }
  if (v58 != 7
    || ((v889 | v895 | v884 | v879 | v875 | __dst | *(_DWORD *)(v23 + 80) | *(_DWORD *)(v31 + 80) | *(_DWORD *)(v39 + 80)) & 0x100000) != 0
    || v59 + 1 > 0x18)
  {
    uint64_t v64 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v65 = (void *)(v64 + ((v58 + 16) & ~v58));
    swift_retain();
    return v65;
  }
  unsigned int v60 = a2[v59];
  unsigned int v61 = v60 - 2;
  if (v60 >= 2)
  {
    if (v59 <= 3) {
      uint64_t v62 = v59;
    }
    else {
      uint64_t v62 = 4;
    }
    switch(v62)
    {
      case 1:
        int v63 = *a2;
        if (v59 < 4) {
          goto LABEL_79;
        }
        goto LABEL_80;
      case 2:
        int v63 = *(unsigned __int16 *)a2;
        if (v59 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 3:
        int v63 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v59 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 4:
        int v63 = *(_DWORD *)a2;
        if (v59 < 4) {
LABEL_79:
        }
          v63 |= v61 << (8 * v59);
LABEL_80:
        unsigned int v60 = v63 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v960 = v59;
  uint64_t v66 = ~v918;
  uint64_t v917 = ~v911;
  unint64_t v919 = ~(unint64_t)v875;
  uint64_t v67 = ~v25;
  if (v60 != 1)
  {
    unsigned int v74 = a2[v36];
    unsigned int v75 = v74 - 8;
    if (v74 < 8)
    {
      uint64_t v77 = AssociatedTypeWitness;
      uint64_t v78 = a1;
      uint64_t v79 = v866;
    }
    else
    {
      if (v36 <= 3) {
        uint64_t v76 = v36;
      }
      else {
        uint64_t v76 = 4;
      }
      uint64_t v77 = AssociatedTypeWitness;
      uint64_t v78 = a1;
      uint64_t v79 = v866;
      switch(v76)
      {
        case 1:
          int v80 = *a2;
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 2:
          int v80 = *(unsigned __int16 *)a2;
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 3:
          int v80 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 4:
          int v80 = *(_DWORD *)a2;
          if (v36 < 4) {
LABEL_120:
          }
            unsigned int v74 = (v80 | (v75 << (8 * v36))) + 8;
          else {
LABEL_124:
          }
            unsigned int v74 = v80 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v114 = ~v79;
    uint64_t v115 = ~v32;
    switch(v74)
    {
      case 1u:
        uint64_t v910 = v29;
        unint64_t v923 = ~(unint64_t)v895;
        uint64_t v899 = *(void *)(v854 - 8);
        uint64_t v903 = ~v26;
        uint64_t v121 = v66;
        uint64_t v914 = ~v41;
        uint64_t v883 = v67;
        unint64_t v887 = ~(unint64_t)v884;
        uint64_t v893 = *(void *)(v899 + 64) + 7;
        size_t v818 = v28;
        unint64_t v947 = v36;
        unint64_t v122 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16);
        uint64_t v65 = v78;
        v122(v78, a2, v77);
        v905 = (void *)(((unint64_t)v65 + v846) & v114);
        unint64_t v123 = (void *)((unint64_t)&a2[v846] & v114);
        if (v929 == v847)
        {
          int v124 = (*(uint64_t (**)(void *))(v867 + 48))(v123);
LABEL_317:
          uint64_t v152 = v121;
LABEL_318:
          uint64_t v532 = v910;
          uint64_t v533 = v905;
          if (v124)
          {
LABEL_319:
            memcpy(v533, v123, v834);
            uint64_t v534 = v870;
            goto LABEL_320;
          }
          unint64_t v151 = ((unint64_t)v123 + v856) & v923;
          unint64_t v153 = (v857 + v151) & v152;
LABEL_322:
          v965 = v123;
          uint64_t v536 = (unsigned __int8 *)v123;
          uint64_t v537 = v152;
          v122(v533, v536, v77);
          v122((void *)(((unint64_t)v533 + v856) & v923), (unsigned __int8 *)v151, v77);
          unint64_t v538 = (v857 + (((unint64_t)v533 + v856) & v923)) & v537;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v853 + 16))(v538, v153, v852);
          uint64_t v539 = (void *)((v860 + v538) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v540 = (void *)((v860 + v153) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v539 = *v540;
          unint64_t v541 = ((unint64_t)v539 + v840) & v887;
          unint64_t v542 = ((unint64_t)v540 + v840) & v887;
          uint64_t v543 = *(void (**)(unint64_t, unint64_t, uint64_t))(v842 + 16);
          swift_bridgeObjectRetain();
          v543(v541, v542, v841);
          uint64_t v544 = (void *)((v835 + v542) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v545 = (void *)((v835 + v541) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v545 = *v544;
          uint64_t v546 = (void *)(((unint64_t)v545 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v547 = (void *)(((unint64_t)v544 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v546 = *v547;
          v546[1] = v547[1];
          unint64_t v548 = (void *)(v935 + v538);
          void *v548 = *(void *)(v935 + v153);
          v548[1] = *(void *)(v935 + v153 + 8);
          size_t v549 = (v926 + v935 + v538) & v914;
          size_t v550 = (v926 + v935 + v153) & v914;
          *(unsigned char *)size_t v549 = *(unsigned char *)v550;
          uint64_t v551 = v549 | 4;
          int v552 = *(_DWORD *)(v550 | 4);
          *(unsigned char *)(v551 + 4) = *(unsigned char *)((v550 | 4) + 4);
          *(_DWORD *)uint64_t v551 = v552;
          *(_WORD *)(v549 + 10) = *(_WORD *)(v550 + 0xA);
          size_t v940 = v549;
          uint64_t v553 = (v844 + v549) & v917;
          uint64_t v554 = (v844 + v550) & v917;
          uint64_t v555 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v555(v553, v554, v849);
          uint64_t v556 = (v838 + v553) & v917;
          uint64_t v557 = (v838 + v554) & v917;
          v555(v556, v557, v849);
          uint64_t v558 = (unsigned char *)(v556 + v862);
          *uint64_t v558 = *(unsigned char *)(v557 + v862);
          v558[1] = *(unsigned char *)(v557 + v862 + 1);
          v558[2] = *(unsigned char *)(v557 + v862 + 2);
          v558[3] = *(unsigned char *)(v557 + v862 + 3);
          v558[4] = *(unsigned char *)(v557 + v862 + 4);
          unint64_t v559 = (v556 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v560 = (v557 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v559 = *(void *)v560;
          *(void *)(v559 + 8) = *(void *)(v560 + 8);
          *(unsigned char *)(v559 + 16) = *(unsigned char *)(v560 + 16);
          *(unsigned char *)(v559 + 17) = *(unsigned char *)(v560 + 17);
          *(unsigned char *)(v559 + 18) = *(unsigned char *)(v560 + 18);
          *(unsigned char *)(v559 + 19) = *(unsigned char *)(v560 + 19);
          unint64_t v561 = (v559 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v562 = (v560 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v561 = *(void *)v562;
          *(unsigned char *)(v561 + 8) = *(unsigned char *)(v562 + 8);
          *(unsigned char *)(v561 + 9) = *(unsigned char *)(v562 + 9);
          *(unsigned char *)(v561 + 10) = *(unsigned char *)(v562 + 10);
          *(unsigned char *)(v561 + 11) = *(unsigned char *)(v562 + 11);
          *(unsigned char *)(v561 + 12) = *(unsigned char *)(v562 + 12);
          uint64_t v563 = (void *)((v560 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v564 = (void *)((v559 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v564 = *v563;
          unint64_t v565 = ((unint64_t)v564 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v566 = ((unint64_t)v563 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v565 = *(void *)v566;
          *(unsigned char *)(v565 + 8) = *(unsigned char *)(v566 + 8);
          *(unsigned char *)(v565 + 9) = *(unsigned char *)(v566 + 9);
          uint64_t v567 = (void *)((v837 + v565) & v917);
          int v568 = (const void *)((v837 + v566) & v917);
          unint64_t v569 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
          swift_bridgeObjectRetain();
          if (v569(v568, 1, v849))
          {
            memcpy(v567, v568, v864);
          }
          else
          {
            v555((uint64_t)v567, (uint64_t)v568, v849);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v567, 0, 1, v849);
          }
          uint64_t v570 = (void *)(((unint64_t)v567 + v836) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v571 = (void *)(((unint64_t)v568 + v836) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v570 = *v571;
          unint64_t v572 = ((unint64_t)v570 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v573 = ((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v574 = *(void *)v573;
          *(unsigned char *)(v572 + 8) = *(unsigned char *)(v573 + 8);
          *(void *)unint64_t v572 = v574;
          unint64_t v575 = (void *)(((unint64_t)v570 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v576 = (void *)(((unint64_t)v571 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v575 = *v576;
          unint64_t v577 = ((unint64_t)v575 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v578 = (uint64_t *)(((unint64_t)v576 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v579 = v578[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v579 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v577 = *(_OWORD *)v578;
          }
          else
          {
            uint64_t v580 = *v578;
            sub_10001EBB0(*v578, v579);
            *(void *)unint64_t v577 = v580;
            *(void *)(v577 + 8) = v579;
          }
          uint64_t v534 = v870;
          unint64_t v123 = v965;
          unint64_t v581 = (v577 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v582 = ((unint64_t)v578 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v583 = *(void *)v582;
          *(unsigned char *)(v581 + 8) = *(unsigned char *)(v582 + 8);
          *(void *)unint64_t v581 = v583;
          *(unsigned char *)(v581 + 9) = *(unsigned char *)(v582 + 9);
          unint64_t v584 = (v581 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v585 = (v582 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v586 = *(_DWORD *)v585;
          *(unsigned char *)(v584 + 4) = *(unsigned char *)(v585 + 4);
          *(_DWORD *)unint64_t v584 = v586;
          unint64_t v587 = (void *)((v581 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v588 = (void *)((v582 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v587 = *v588;
          v587[1] = v588[1];
          unint64_t v589 = v925 + v940;
          unint64_t v590 = v925 + v550;
          unint64_t v591 = *(void *)(v925 + v550 + 16);
          if (v591 >= 0xFFFFFFFF) {
            LODWORD(v591) = -1;
          }
          int v592 = v591 - 1;
          swift_bridgeObjectRetain();
          if (v592 < 0)
          {
            *(void *)unint64_t v589 = *(void *)v590;
            *(unsigned char *)(v589 + 8) = *(unsigned char *)(v590 + 8);
            *(unsigned char *)(v589 + 9) = *(unsigned char *)(v590 + 9);
            uint64_t v605 = *(void *)(v590 + 16);
            swift_errorRetain();
            *(void *)(v589 + 16) = v605;
            uint64_t v606 = *(void *)(v590 + 24);
            swift_errorRetain();
            *(void *)(v589 + 24) = v606;
            *(unsigned char *)(v589 + 32) = *(unsigned char *)(v590 + 32);
            *(unsigned char *)(v589 + 33) = *(unsigned char *)(v590 + 33);
            *(unsigned char *)(v589 + 34) = *(unsigned char *)(v590 + 34);
            *(void *)(v589 + 40) = *(void *)(v590 + 40);
            *(void *)(v589 + 48) = *(void *)(v590 + 48);
            *(void *)(v589 + 56) = *(void *)(v590 + 56);
            *(void *)(v589 + 64) = *(void *)(v590 + 64);
            *(unsigned char *)(v589 + 72) = *(unsigned char *)(v590 + 72);
            *(void *)(v589 + 80) = *(void *)(v590 + 80);
            *(void *)(v589 + 88) = *(void *)(v590 + 88);
            v941 = *(void **)(v590 + 96);
            *(void *)(v589 + 96) = v941;
            *(unsigned char *)(v589 + 104) = *(unsigned char *)(v590 + 104);
            *(unsigned char *)(v589 + 105) = *(unsigned char *)(v590 + 105);
            *(void *)(v589 + 112) = *(void *)(v590 + 112);
            *(void *)(v589 + 120) = *(void *)(v590 + 120);
            *(void *)(v589 + 128) = *(void *)(v590 + 128);
            *(void *)(v589 + 136) = *(void *)(v590 + 136);
            *(void *)(v589 + 144) = *(void *)(v590 + 144);
            *(void *)(v589 + 152) = *(void *)(v590 + 152);
            *(void *)(v589 + 160) = *(void *)(v590 + 160);
            *(void *)(v589 + 168) = *(void *)(v590 + 168);
            *(unsigned char *)(v589 + 176) = *(unsigned char *)(v590 + 176);
            *(void *)(v589 + 184) = *(void *)(v590 + 184);
            uint64_t v607 = *(void *)(v590 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v608 = v941;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v607)
            {
              *(void *)(v589 + 192) = v607;
              *(void *)(v589 + 200) = *(void *)(v590 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v589 + 192) = *(_OWORD *)(v590 + 192);
            }
            uint64_t v534 = v870;
            unint64_t v123 = v965;
            *(void *)(v589 + 208) = *(void *)(v590 + 208);
            *(void *)(v589 + 216) = *(void *)(v590 + 216);
            *(void *)(v589 + 224) = *(void *)(v590 + 224);
            *(void *)(v589 + 232) = *(void *)(v590 + 232);
            *(void *)(v589 + 240) = *(void *)(v590 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v593 = *(_OWORD *)v590;
            long long v594 = *(_OWORD *)(v590 + 16);
            long long v595 = *(_OWORD *)(v590 + 48);
            *(_OWORD *)(v589 + 32) = *(_OWORD *)(v590 + 32);
            *(_OWORD *)(v589 + 48) = v595;
            *(_OWORD *)unint64_t v589 = v593;
            *(_OWORD *)(v589 + 16) = v594;
            long long v596 = *(_OWORD *)(v590 + 64);
            long long v597 = *(_OWORD *)(v590 + 80);
            long long v598 = *(_OWORD *)(v590 + 112);
            *(_OWORD *)(v589 + 96) = *(_OWORD *)(v590 + 96);
            *(_OWORD *)(v589 + 112) = v598;
            *(_OWORD *)(v589 + 64) = v596;
            *(_OWORD *)(v589 + 80) = v597;
            long long v599 = *(_OWORD *)(v590 + 128);
            long long v600 = *(_OWORD *)(v590 + 144);
            long long v601 = *(_OWORD *)(v590 + 176);
            *(_OWORD *)(v589 + 160) = *(_OWORD *)(v590 + 160);
            *(_OWORD *)(v589 + 176) = v601;
            *(_OWORD *)(v589 + 128) = v599;
            *(_OWORD *)(v589 + 144) = v600;
            long long v602 = *(_OWORD *)(v590 + 192);
            long long v603 = *(_OWORD *)(v590 + 208);
            long long v604 = *(_OWORD *)(v590 + 224);
            *(void *)(v589 + 240) = *(void *)(v590 + 240);
            *(_OWORD *)(v589 + 208) = v603;
            *(_OWORD *)(v589 + 224) = v604;
            *(_OWORD *)(v589 + 192) = v602;
          }
          v766 = (_OWORD *)((v589 + 255) & 0xFFFFFFFFFFFFFFF8);
          v767 = (long long *)((v590 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v768 = *v767;
          *(_OWORD *)((char *)v766 + 9) = *(long long *)((char *)v767 + 9);
          _OWORD *v766 = v768;
          unint64_t v769 = (v589 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v770 = (v590 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v771 = *(_OWORD *)v770;
          *(unsigned char *)(v769 + 16) = *(unsigned char *)(v770 + 16);
          *(_OWORD *)unint64_t v769 = v771;
          unint64_t v772 = (void *)((v589 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v773 = (v590 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v774 = *(void *)v773;
          v773 += 15;
          *unint64_t v772 = v774;
          uint64_t v775 = (void *)(((unint64_t)v772 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v776 = *(void *)(v773 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v777 = *(void *)((v773 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v776, v777);
          *uint64_t v775 = v776;
          v775[1] = v777;
          uint64_t v65 = a1;
          size_t v535 = v862;
          uint64_t v532 = v910;
          uint64_t v533 = v905;
          if (v861)
          {
LABEL_388:
            unint64_t v778 = ((((v848
                     + ((((((((((v865 + v535 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v779 = (void *)(((unint64_t)v533 + v875 + v778) & v919);
            unint64_t v780 = (const void *)(((unint64_t)v123 + v875 + v778) & v919);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v868 + 48))(v780, 1, v534))
            {
              memcpy(v779, v780, v830);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v868 + 16))(v779, v780, v534);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v868 + 56))(v779, 0, 1, v534);
            }
            uint64_t v781 = (char *)(((unint64_t)v779 + v532) & v903);
            uint64_t v782 = (char *)(((unint64_t)v780 + v532) & v903);
            if (v843 == v907)
            {
              int v783 = (*(uint64_t (**)(unint64_t))(v851 + 48))(((unint64_t)v780 + v532) & v903);
            }
            else
            {
              v784 = (uint64_t *)((unint64_t)&v782[v859] & 0xFFFFFFFFFFFFFFF8);
              if (v831 <= 0x7FFFFFFE)
              {
                uint64_t v785 = *v784;
                if ((unint64_t)*v784 >= 0xFFFFFFFF) {
                  LODWORD(v785) = -1;
                }
                size_t v786 = v818;
                if ((v785 + 1) >= 2) {
                  goto LABEL_400;
                }
                goto LABEL_402;
              }
              int v783 = (*(uint64_t (**)(unint64_t))(v899 + 48))(((unint64_t)v784 + v858) & v883);
            }
            size_t v786 = v818;
            if (v783)
            {
LABEL_400:
              size_t v787 = v786;
              memcpy(v781, v782, v786);
LABEL_403:
              *(void *)&v781[v787] = *(void *)&v782[v787];
              v796 = (void *)((unint64_t)&v781[v787 + 15] & 0xFFFFFFFFFFFFFFF8);
              v797 = (void *)((unint64_t)&v782[v787 + 15] & 0xFFFFFFFFFFFFFFF8);
              void *v796 = *v797;
              long long v206 = *(void **)(((unint64_t)v797 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v796 + 15) & 0xFFFFFFFFFFFFFFF8) = v206;
              char v207 = 1;
              goto LABEL_404;
            }
            v784 = (uint64_t *)((unint64_t)&v782[v859] & 0xFFFFFFFFFFFFFFF8);
LABEL_402:
            size_t v787 = v786;
            (*(void (**)(char *, char *, uint64_t))(v851 + 16))(v781, v782, v850);
            v788 = (void *)((unint64_t)&v781[v859] & 0xFFFFFFFFFFFFFFF8);
            void *v788 = *v784;
            unint64_t v789 = ((unint64_t)v788 + v858) & v883;
            unint64_t v790 = ((unint64_t)v784 + v858) & v883;
            v791 = *(void (**)(unint64_t, unint64_t, uint64_t))(v899 + 16);
            swift_bridgeObjectRetain();
            v791(v789, v790, v854);
            v792 = (void *)((v893 + v789) & 0xFFFFFFFFFFFFFFF8);
            v793 = (void *)((v893 + v790) & 0xFFFFFFFFFFFFFFF8);
            void *v792 = *v793;
            v794 = (void *)(((unint64_t)v792 + 15) & 0xFFFFFFFFFFFFFFF8);
            v795 = (void *)(((unint64_t)v793 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v794 = *v795;
            v794[1] = v795[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_403;
          }
LABEL_320:
          size_t v535 = v864;
          goto LABEL_388;
        }
        unint64_t v151 = ((unint64_t)v123 + v856) & v923;
        uint64_t v152 = v121;
        unint64_t v153 = (v857 + v151) & v121;
        if (v855 == v847)
        {
          if (v863 == v855)
          {
            int v124 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v853 + 48))((v857 + v151) & v121, v863, v852);
            goto LABEL_317;
          }
          long long v216 = (unint64_t *)((v860 + v153) & 0xFFFFFFFFFFFFFFF8);
          if (v832 > 0x7FFFFFFE)
          {
            int v124 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v842 + 48))(((unint64_t)v216 + v840) & v887, v823, v841);
            goto LABEL_317;
          }
          unint64_t v217 = *v216;
        }
        else
        {
          size_t v178 = v935 + v153;
          if ((v825 & 0x80000000) == 0)
          {
            unint64_t v179 = *(void *)(v178 + 8);
            if (v179 >= 0xFFFFFFFF) {
              LODWORD(v179) = -1;
            }
            int v124 = v179 + 1;
            goto LABEL_318;
          }
          uint64_t v223 = (v844 + ((v926 + v178) & v914)) & v917;
          if (v861 > 0x7FFFFFFD)
          {
            int v124 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v839 + 48))(v223, v861, v849);
            goto LABEL_317;
          }
          unint64_t v217 = *(void *)(((v820 + ((v838 + v223) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v217 >= 0xFFFFFFFF) {
          LODWORD(v217) = -1;
        }
        uint64_t v532 = v910;
        uint64_t v533 = v905;
        if ((v217 + 1) >= 2) {
          goto LABEL_319;
        }
        goto LABEL_322;
      case 2u:
        uint64_t v125 = v29;
        uint64_t v126 = ~v26;
        uint64_t v127 = v67;
        uint64_t v894 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
        uint64_t v900 = *(void *)(v854 - 8);
        uint64_t v128 = v77;
        size_t v129 = v28;
        unint64_t v947 = v36;
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16))(v78, a2, v128);
        unint64_t v130 = (void *)(((unint64_t)v65 + v827) & v919);
        uint64_t v131 = (const void *)((unint64_t)&a2[v827] & v919);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v868 + 48))(v131, 1, v870))
        {
          memcpy(v130, v131, v830);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v868 + 16))(v130, v131, v870);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v868 + 56))(v130, 0, 1, v870);
        }
        unint64_t v162 = (char *)(((unint64_t)v130 + v125) & v126);
        unint64_t v163 = ((unint64_t)v131 + v125) & v126;
        if (v843 == v907)
        {
          int v164 = (*(uint64_t (**)(unint64_t))(v851 + 48))(((unint64_t)v131 + v125) & v126);
        }
        else
        {
          unint64_t v165 = (uint64_t *)((v859 + v163) & 0xFFFFFFFFFFFFFFF8);
          if (v831 <= 0x7FFFFFFE)
          {
            uint64_t v166 = *v165;
            if ((unint64_t)*v165 >= 0xFFFFFFFF) {
              LODWORD(v166) = -1;
            }
            size_t v167 = v129;
            if ((v166 + 1) >= 2) {
              goto LABEL_210;
            }
LABEL_212:
            unint64_t v196 = ((unint64_t)v131 + v125) & v126;
            size_t v195 = v167;
            (*(void (**)(char *, unint64_t, uint64_t))(v851 + 16))(v162, v196, v850);
            unint64_t v197 = (void *)((unint64_t)&v162[v859] & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v197 = *v165;
            unint64_t v198 = ((unint64_t)v197 + v858) & v127;
            unint64_t v199 = ((unint64_t)v165 + v858) & v127;
            unint64_t v200 = *(void (**)(unint64_t, unint64_t, uint64_t))(v900 + 16);
            swift_bridgeObjectRetain();
            v200(v198, v199, v854);
            unint64_t v201 = (void *)((v894 + v198) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v202 = (void *)((v894 + v199) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v201 = *v202;
            int v203 = (void *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v204 = (void *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8);
            *int v203 = *v204;
            v203[1] = v204[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_213:
            unint64_t v205 = &v162[v195];
            *unint64_t v205 = *(unsigned char *)(v195 + v163);
            long long v206 = *(void **)(v195 + v163 + 8);
            *((void *)v205 + 1) = v206;
            char v207 = 2;
LABEL_404:
            *((unsigned char *)v65 + v947) = v207;
            id v798 = v206;
            goto LABEL_409;
          }
          int v164 = (*(uint64_t (**)(unint64_t))(v900 + 48))(((unint64_t)v165 + v858) & v127);
        }
        size_t v167 = v129;
        if (v164)
        {
LABEL_210:
          unint64_t v194 = (const void *)(((unint64_t)v131 + v125) & v126);
          size_t v195 = v167;
          memcpy(v162, v194, v167);
          goto LABEL_213;
        }
        unint64_t v165 = (uint64_t *)((v859 + v163) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_212;
      case 3u:
        unint64_t v924 = ~(unint64_t)v895;
        uint64_t v132 = v66;
        uint64_t v915 = ~v41;
        unint64_t v888 = ~(unint64_t)v884;
        unint64_t v948 = v36;
        unint64_t v133 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16);
        uint64_t v65 = v78;
        v133(v78, a2, v77);
        unint64_t v134 = (void *)(((unint64_t)v65 + v846) & v114);
        long long v135 = (void *)((unint64_t)&a2[v846] & v114);
        if (v929 == v847)
        {
          int v136 = (*(uint64_t (**)(void *))(v867 + 48))(v135);
LABEL_335:
          uint64_t v155 = v132;
LABEL_336:
          if (v136)
          {
LABEL_337:
            memcpy(v134, v135, v834);
LABEL_338:
            size_t v609 = v864;
            goto LABEL_408;
          }
          unint64_t v154 = ((unint64_t)v135 + v856) & v924;
          unint64_t v156 = (v857 + v154) & v155;
          goto LABEL_340;
        }
        unint64_t v154 = ((unint64_t)v135 + v856) & v924;
        uint64_t v155 = v132;
        unint64_t v156 = (v857 + v154) & v132;
        if (v855 == v847)
        {
          if (v863 == v855)
          {
            int v136 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v853 + 48))((v857 + v154) & v132, v863, v852);
            goto LABEL_335;
          }
          uint64_t v218 = (unint64_t *)((v860 + v156) & 0xFFFFFFFFFFFFFFF8);
          if (v832 > 0x7FFFFFFE)
          {
            int v136 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v842 + 48))(((unint64_t)v218 + v840) & v888, v823, v841);
            goto LABEL_335;
          }
          unint64_t v219 = *v218;
        }
        else
        {
          size_t v180 = v935 + v156;
          if ((v825 & 0x80000000) == 0)
          {
            unint64_t v181 = *(void *)(v180 + 8);
            if (v181 >= 0xFFFFFFFF) {
              LODWORD(v181) = -1;
            }
            int v136 = v181 + 1;
            goto LABEL_336;
          }
          uint64_t v224 = (v844 + ((v926 + v180) & v915)) & v917;
          if (v861 > 0x7FFFFFFD)
          {
            int v136 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v839 + 48))(v224, v861, v849);
            goto LABEL_335;
          }
          unint64_t v219 = *(void *)(((v820 + ((v838 + v224) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v219 >= 0xFFFFFFFF) {
          LODWORD(v219) = -1;
        }
        if ((v219 + 1) >= 2) {
          goto LABEL_337;
        }
LABEL_340:
        v958 = v135;
        unint64_t v610 = (unsigned __int8 *)v135;
        uint64_t v611 = v155;
        v133(v134, v610, v77);
        v966 = v134;
        unint64_t v612 = ((unint64_t)v134 + v856) & v924;
        v133((void *)v612, (unsigned __int8 *)v154, v77);
        unint64_t v613 = (v857 + v612) & v611;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v853 + 16))(v613, v156, v852);
        long long v614 = (void *)((v860 + v613) & 0xFFFFFFFFFFFFFFF8);
        long long v615 = (void *)((v860 + v156) & 0xFFFFFFFFFFFFFFF8);
        *long long v614 = *v615;
        unint64_t v616 = ((unint64_t)v614 + v840) & v888;
        unint64_t v617 = ((unint64_t)v615 + v840) & v888;
        long long v618 = *(void (**)(unint64_t, unint64_t, uint64_t))(v842 + 16);
        swift_bridgeObjectRetain();
        v618(v616, v617, v841);
        long long v619 = (void *)((v835 + v617) & 0xFFFFFFFFFFFFFFF8);
        long long v620 = (void *)((v835 + v616) & 0xFFFFFFFFFFFFFFF8);
        *long long v620 = *v619;
        long long v621 = (void *)(((unint64_t)v620 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v622 = (void *)(((unint64_t)v619 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v621 = *v622;
        v621[1] = v622[1];
        long long v623 = (void *)(v935 + v613);
        *long long v623 = *(void *)(v935 + v156);
        v623[1] = *(void *)(v935 + v156 + 8);
        size_t v624 = (v926 + v935 + v613) & v915;
        size_t v625 = (v926 + v935 + v156) & v915;
        *(unsigned char *)size_t v624 = *(unsigned char *)v625;
        uint64_t v626 = v624 | 4;
        int v627 = *(_DWORD *)(v625 | 4);
        *(unsigned char *)(v626 + 4) = *(unsigned char *)((v625 | 4) + 4);
        *(_DWORD *)uint64_t v626 = v627;
        *(_WORD *)(v624 + 10) = *(_WORD *)(v625 + 0xA);
        size_t v934 = v625;
        size_t v942 = v624;
        uint64_t v628 = (v844 + v624) & v917;
        uint64_t v629 = (v844 + v625) & v917;
        v630 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v630(v628, v629, v849);
        uint64_t v631 = (v838 + v628) & v917;
        uint64_t v632 = (v838 + v629) & v917;
        v630(v631, v632, v849);
        unint64_t v633 = (unsigned char *)(v631 + v862);
        *unint64_t v633 = *(unsigned char *)(v632 + v862);
        v633[1] = *(unsigned char *)(v632 + v862 + 1);
        v633[2] = *(unsigned char *)(v632 + v862 + 2);
        v633[3] = *(unsigned char *)(v632 + v862 + 3);
        v633[4] = *(unsigned char *)(v632 + v862 + 4);
        unint64_t v634 = (v631 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v635 = (v632 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v634 = *(void *)v635;
        *(void *)(v634 + 8) = *(void *)(v635 + 8);
        *(unsigned char *)(v634 + 16) = *(unsigned char *)(v635 + 16);
        *(unsigned char *)(v634 + 17) = *(unsigned char *)(v635 + 17);
        *(unsigned char *)(v634 + 18) = *(unsigned char *)(v635 + 18);
        *(unsigned char *)(v634 + 19) = *(unsigned char *)(v635 + 19);
        unint64_t v636 = (v634 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v637 = (v635 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v636 = *(void *)v637;
        *(unsigned char *)(v636 + 8) = *(unsigned char *)(v637 + 8);
        *(unsigned char *)(v636 + 9) = *(unsigned char *)(v637 + 9);
        *(unsigned char *)(v636 + 10) = *(unsigned char *)(v637 + 10);
        *(unsigned char *)(v636 + 11) = *(unsigned char *)(v637 + 11);
        *(unsigned char *)(v636 + 12) = *(unsigned char *)(v637 + 12);
        uint64_t v638 = (void *)((v635 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v639 = (void *)((v634 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v639 = *v638;
        unint64_t v640 = ((unint64_t)v639 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v641 = ((unint64_t)v638 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v640 = *(void *)v641;
        *(unsigned char *)(v640 + 8) = *(unsigned char *)(v641 + 8);
        *(unsigned char *)(v640 + 9) = *(unsigned char *)(v641 + 9);
        unint64_t v642 = (void *)((v837 + v640) & v917);
        uint64_t v643 = (const void *)((v837 + v641) & v917);
        uint64_t v644 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
        swift_bridgeObjectRetain();
        if (v644(v643, 1, v849))
        {
          memcpy(v642, v643, v864);
        }
        else
        {
          v630((uint64_t)v642, (uint64_t)v643, v849);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v642, 0, 1, v849);
        }
        long long v135 = v958;
        unint64_t v645 = (void *)(((unint64_t)v642 + v836) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v646 = (void *)(((unint64_t)v643 + v836) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v645 = *v646;
        unint64_t v647 = ((unint64_t)v645 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v648 = ((unint64_t)v646 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v649 = *(void *)v648;
        *(unsigned char *)(v647 + 8) = *(unsigned char *)(v648 + 8);
        *(void *)unint64_t v647 = v649;
        unint64_t v650 = (void *)(((unint64_t)v645 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v651 = (void *)(((unint64_t)v646 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v650 = *v651;
        unint64_t v652 = ((unint64_t)v650 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v653 = (uint64_t *)(((unint64_t)v651 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v654 = v653[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v654 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v652 = *(_OWORD *)v653;
        }
        else
        {
          uint64_t v655 = *v653;
          sub_10001EBB0(*v653, v654);
          *(void *)unint64_t v652 = v655;
          *(void *)(v652 + 8) = v654;
        }
        unint64_t v134 = v966;
        unint64_t v656 = (v652 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v657 = ((unint64_t)v653 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v658 = *(void *)v657;
        *(unsigned char *)(v656 + 8) = *(unsigned char *)(v657 + 8);
        *(void *)unint64_t v656 = v658;
        *(unsigned char *)(v656 + 9) = *(unsigned char *)(v657 + 9);
        unint64_t v659 = (v656 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v660 = (v657 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v661 = *(_DWORD *)v660;
        *(unsigned char *)(v659 + 4) = *(unsigned char *)(v660 + 4);
        *(_DWORD *)unint64_t v659 = v661;
        uint64_t v662 = (void *)((v656 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v663 = (void *)((v657 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v662 = *v663;
        v662[1] = v663[1];
        unint64_t v664 = v925 + v942;
        unint64_t v665 = (long long *)(v925 + v934);
        unint64_t v666 = *(void *)(v925 + v934 + 16);
        if (v666 >= 0xFFFFFFFF) {
          LODWORD(v666) = -1;
        }
        int v667 = v666 - 1;
        swift_bridgeObjectRetain();
        if (v667 < 0)
        {
          *(void *)unint64_t v664 = *(void *)v665;
          *(unsigned char *)(v664 + 8) = *((unsigned char *)v665 + 8);
          *(unsigned char *)(v664 + 9) = *((unsigned char *)v665 + 9);
          uint64_t v680 = *((void *)v665 + 2);
          swift_errorRetain();
          *(void *)(v664 + 16) = v680;
          uint64_t v681 = *((void *)v665 + 3);
          swift_errorRetain();
          *(void *)(v664 + 24) = v681;
          *(unsigned char *)(v664 + 32) = *((unsigned char *)v665 + 32);
          *(unsigned char *)(v664 + 33) = *((unsigned char *)v665 + 33);
          *(unsigned char *)(v664 + 34) = *((unsigned char *)v665 + 34);
          *(void *)(v664 + 40) = *((void *)v665 + 5);
          *(void *)(v664 + 48) = *((void *)v665 + 6);
          *(void *)(v664 + 56) = *((void *)v665 + 7);
          *(void *)(v664 + 64) = *((void *)v665 + 8);
          *(unsigned char *)(v664 + 72) = *((unsigned char *)v665 + 72);
          *(void *)(v664 + 80) = *((void *)v665 + 10);
          *(void *)(v664 + 88) = *((void *)v665 + 11);
          v943 = (void *)*((void *)v665 + 12);
          *(void *)(v664 + 96) = v943;
          *(unsigned char *)(v664 + 104) = *((unsigned char *)v665 + 104);
          *(unsigned char *)(v664 + 105) = *((unsigned char *)v665 + 105);
          *(void *)(v664 + 112) = *((void *)v665 + 14);
          *(void *)(v664 + 120) = *((void *)v665 + 15);
          *(void *)(v664 + 128) = *((void *)v665 + 16);
          *(void *)(v664 + 136) = *((void *)v665 + 17);
          *(void *)(v664 + 144) = *((void *)v665 + 18);
          *(void *)(v664 + 152) = *((void *)v665 + 19);
          *(void *)(v664 + 160) = *((void *)v665 + 20);
          *(void *)(v664 + 168) = *((void *)v665 + 21);
          *(unsigned char *)(v664 + 176) = *((unsigned char *)v665 + 176);
          *(void *)(v664 + 184) = *((void *)v665 + 23);
          uint64_t v682 = *((void *)v665 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v683 = v943;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v682)
          {
            *(void *)(v664 + 192) = v682;
            *(void *)(v664 + 200) = *((void *)v665 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v664 + 192) = v665[12];
          }
          uint64_t v65 = a1;
          size_t v609 = v862;
          unint64_t v134 = v966;
          long long v135 = v958;
          *(void *)(v664 + 208) = *((void *)v665 + 26);
          *(void *)(v664 + 216) = *((void *)v665 + 27);
          *(void *)(v664 + 224) = *((void *)v665 + 28);
          *(void *)(v664 + 232) = *((void *)v665 + 29);
          *(void *)(v664 + 240) = *((void *)v665 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v668 = *v665;
          long long v669 = v665[1];
          long long v670 = v665[3];
          *(_OWORD *)(v664 + 32) = v665[2];
          *(_OWORD *)(v664 + 48) = v670;
          *(_OWORD *)unint64_t v664 = v668;
          *(_OWORD *)(v664 + 16) = v669;
          long long v671 = v665[4];
          long long v672 = v665[5];
          long long v673 = v665[7];
          *(_OWORD *)(v664 + 96) = v665[6];
          *(_OWORD *)(v664 + 112) = v673;
          *(_OWORD *)(v664 + 64) = v671;
          *(_OWORD *)(v664 + 80) = v672;
          long long v674 = v665[8];
          long long v675 = v665[9];
          long long v676 = v665[11];
          *(_OWORD *)(v664 + 160) = v665[10];
          *(_OWORD *)(v664 + 176) = v676;
          *(_OWORD *)(v664 + 128) = v674;
          *(_OWORD *)(v664 + 144) = v675;
          long long v677 = v665[12];
          long long v678 = v665[13];
          long long v679 = v665[14];
          *(void *)(v664 + 240) = *((void *)v665 + 30);
          *(_OWORD *)(v664 + 208) = v678;
          *(_OWORD *)(v664 + 224) = v679;
          *(_OWORD *)(v664 + 192) = v677;
          size_t v609 = v862;
        }
        v799 = (_OWORD *)((v664 + 255) & 0xFFFFFFFFFFFFFFF8);
        v800 = (long long *)(((unint64_t)v665 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v801 = *v800;
        *(_OWORD *)((char *)v799 + 9) = *(long long *)((char *)v800 + 9);
        _OWORD *v799 = v801;
        unint64_t v802 = (v664 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v803 = ((unint64_t)v665 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v804 = *(_OWORD *)v803;
        *(unsigned char *)(v802 + 16) = *(unsigned char *)(v803 + 16);
        *(_OWORD *)unint64_t v802 = v804;
        v805 = (void *)((v664 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v806 = ((unint64_t)v665 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v807 = *(void *)v806;
        v806 += 15;
        void *v805 = v807;
        v808 = (void *)(((unint64_t)v805 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v809 = *(void *)(v806 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v810 = *(void *)((v806 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_10018B584(v809, v810);
        void *v808 = v809;
        v808[1] = v810;
        if (!v861) {
          goto LABEL_338;
        }
LABEL_408:
        unint64_t v811 = ((((v848
                 + ((((((((((v865 + v609 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v812 = (void *)(((unint64_t)v134 + v811) & 0xFFFFFFFFFFFFFFF8);
        v813 = (void *)(((unint64_t)v135 + v811) & 0xFFFFFFFFFFFFFFF8);
        void *v812 = *v813;
        v812[1] = v813[1];
        *(void *)(((unint64_t)v812 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v813 + 23) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v65 + v948) = 3;
        swift_bridgeObjectRetain();
LABEL_409:
        unint64_t v169 = v960;
LABEL_410:
        *((unsigned char *)v65 + v169) = 0;
        return v65;
      case 4u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16))(v78, a2, v77);
        char v137 = 4;
        goto LABEL_139;
      case 5u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16))(v78, a2, v77);
        char v137 = 5;
        goto LABEL_139;
      case 6u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16))(v78, a2, v77);
        long long v138 = (void *)(((unint64_t)v65 + v826) & v115);
        long long v139 = (const void *)((unint64_t)&a2[v826] & v115);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v139, 1, v920))
        {
          memcpy(v138, v139, v822);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v138, v139, v920);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v138, 0, 1, v920);
        }
        unint64_t v169 = v960;
        *((unsigned char *)v65 + v36) = 6;
        goto LABEL_410;
      case 7u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16))(v78, a2, v77);
        char v137 = 7;
LABEL_139:
        *((unsigned char *)v65 + v36) = v137;
        goto LABEL_409;
      default:
        unint64_t v922 = ~(unint64_t)v895;
        uint64_t v116 = v66;
        uint64_t v913 = ~v41;
        unint64_t v886 = ~(unint64_t)v884;
        unint64_t v946 = v36;
        long long v117 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v867 + 16);
        uint64_t v65 = v78;
        v117(v78, a2, v77);
        long long v118 = (void *)(((unint64_t)v65 + v846) & v114);
        char v119 = (void *)((unint64_t)&a2[v846] & v114);
        if (v929 == v847)
        {
          int v120 = (*(uint64_t (**)(void *))(v867 + 48))(v119);
LABEL_299:
          uint64_t v149 = v116;
LABEL_300:
          if (v120)
          {
LABEL_301:
            memcpy(v118, v119, v834);
            goto LABEL_302;
          }
          unint64_t v148 = ((unint64_t)v119 + v856) & v922;
          unint64_t v150 = (v857 + v148) & v149;
LABEL_304:
          v957 = v119;
          long long v458 = (unsigned __int8 *)v119;
          uint64_t v459 = v149;
          v117(v118, v458, v77);
          v964 = v118;
          unint64_t v460 = ((unint64_t)v118 + v856) & v922;
          v117((void *)v460, (unsigned __int8 *)v148, v77);
          unint64_t v461 = (v857 + v460) & v459;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v853 + 16))(v461, v150, v852);
          long long v462 = (void *)((v860 + v461) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v463 = (void *)((v860 + v150) & 0xFFFFFFFFFFFFFFF8);
          *long long v462 = *v463;
          unint64_t v464 = ((unint64_t)v462 + v840) & v886;
          unint64_t v465 = ((unint64_t)v463 + v840) & v886;
          uint64_t v466 = *(void (**)(unint64_t, unint64_t, uint64_t))(v842 + 16);
          swift_bridgeObjectRetain();
          v466(v464, v465, v841);
          uint64_t v467 = (void *)((v835 + v465) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v468 = (void *)((v835 + v464) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v468 = *v467;
          unint64_t v469 = (void *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v470 = (void *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v469 = *v470;
          v469[1] = v470[1];
          unint64_t v471 = (void *)(v935 + v461);
          *unint64_t v471 = *(void *)(v935 + v150);
          v471[1] = *(void *)(v935 + v150 + 8);
          size_t v472 = (v926 + v935 + v461) & v913;
          size_t v473 = (v926 + v935 + v150) & v913;
          *(unsigned char *)size_t v472 = *(unsigned char *)v473;
          uint64_t v474 = v472 | 4;
          int v475 = *(_DWORD *)(v473 | 4);
          *(unsigned char *)(v474 + 4) = *(unsigned char *)((v473 | 4) + 4);
          *(_DWORD *)uint64_t v474 = v475;
          *(_WORD *)(v472 + 10) = *(_WORD *)(v473 + 0xA);
          size_t v933 = v473;
          size_t v938 = v472;
          uint64_t v476 = (v844 + v472) & v917;
          uint64_t v477 = (v844 + v473) & v917;
          uint64_t v478 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v478(v476, v477, v849);
          uint64_t v479 = (v838 + v476) & v917;
          uint64_t v480 = (v838 + v477) & v917;
          v478(v479, v480, v849);
          uint64_t v481 = (unsigned char *)(v479 + v862);
          *uint64_t v481 = *(unsigned char *)(v480 + v862);
          v481[1] = *(unsigned char *)(v480 + v862 + 1);
          v481[2] = *(unsigned char *)(v480 + v862 + 2);
          v481[3] = *(unsigned char *)(v480 + v862 + 3);
          v481[4] = *(unsigned char *)(v480 + v862 + 4);
          unint64_t v482 = (v479 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v483 = (v480 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v482 = *(void *)v483;
          *(void *)(v482 + 8) = *(void *)(v483 + 8);
          *(unsigned char *)(v482 + 16) = *(unsigned char *)(v483 + 16);
          *(unsigned char *)(v482 + 17) = *(unsigned char *)(v483 + 17);
          *(unsigned char *)(v482 + 18) = *(unsigned char *)(v483 + 18);
          *(unsigned char *)(v482 + 19) = *(unsigned char *)(v483 + 19);
          unint64_t v484 = (v482 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v485 = (v483 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v484 = *(void *)v485;
          *(unsigned char *)(v484 + 8) = *(unsigned char *)(v485 + 8);
          *(unsigned char *)(v484 + 9) = *(unsigned char *)(v485 + 9);
          *(unsigned char *)(v484 + 10) = *(unsigned char *)(v485 + 10);
          *(unsigned char *)(v484 + 11) = *(unsigned char *)(v485 + 11);
          *(unsigned char *)(v484 + 12) = *(unsigned char *)(v485 + 12);
          long long v486 = (void *)((v483 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v487 = (void *)((v482 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v487 = *v486;
          unint64_t v488 = ((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v489 = ((unint64_t)v486 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v488 = *(void *)v489;
          *(unsigned char *)(v488 + 8) = *(unsigned char *)(v489 + 8);
          *(unsigned char *)(v488 + 9) = *(unsigned char *)(v489 + 9);
          long long v490 = (void *)((v837 + v488) & v917);
          long long v491 = (const void *)((v837 + v489) & v917);
          long long v492 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
          swift_bridgeObjectRetain();
          if (v492(v491, 1, v849))
          {
            memcpy(v490, v491, v864);
          }
          else
          {
            v478((uint64_t)v490, (uint64_t)v491, v849);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v490, 0, 1, v849);
          }
          char v119 = v957;
          long long v493 = (void *)(((unint64_t)v490 + v836) & 0xFFFFFFFFFFFFFFF8);
          long long v494 = (void *)(((unint64_t)v491 + v836) & 0xFFFFFFFFFFFFFFF8);
          *long long v493 = *v494;
          unint64_t v495 = ((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v496 = ((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v497 = *(void *)v496;
          *(unsigned char *)(v495 + 8) = *(unsigned char *)(v496 + 8);
          *(void *)unint64_t v495 = v497;
          uint64_t v498 = (void *)(((unint64_t)v493 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v499 = (void *)(((unint64_t)v494 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v498 = *v499;
          unint64_t v500 = ((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v501 = (uint64_t *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v502 = v501[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v502 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v500 = *(_OWORD *)v501;
          }
          else
          {
            uint64_t v503 = *v501;
            sub_10001EBB0(*v501, v502);
            *(void *)unint64_t v500 = v503;
            *(void *)(v500 + 8) = v502;
          }
          long long v118 = v964;
          unint64_t v504 = (v500 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v505 = ((unint64_t)v501 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v506 = *(void *)v505;
          *(unsigned char *)(v504 + 8) = *(unsigned char *)(v505 + 8);
          *(void *)unint64_t v504 = v506;
          *(unsigned char *)(v504 + 9) = *(unsigned char *)(v505 + 9);
          unint64_t v507 = (v504 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v508 = (v505 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v509 = *(_DWORD *)v508;
          *(unsigned char *)(v507 + 4) = *(unsigned char *)(v508 + 4);
          *(_DWORD *)unint64_t v507 = v509;
          unint64_t v510 = (void *)((v504 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v511 = (void *)((v505 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v510 = *v511;
          v510[1] = v511[1];
          unint64_t v512 = v925 + v938;
          uint64_t v513 = (long long *)(v925 + v933);
          unint64_t v514 = *(void *)(v925 + v933 + 16);
          if (v514 >= 0xFFFFFFFF) {
            LODWORD(v514) = -1;
          }
          int v515 = v514 - 1;
          swift_bridgeObjectRetain();
          if (v515 < 0)
          {
            *(void *)unint64_t v512 = *(void *)v513;
            *(unsigned char *)(v512 + 8) = *((unsigned char *)v513 + 8);
            *(unsigned char *)(v512 + 9) = *((unsigned char *)v513 + 9);
            uint64_t v528 = *((void *)v513 + 2);
            swift_errorRetain();
            *(void *)(v512 + 16) = v528;
            uint64_t v529 = *((void *)v513 + 3);
            swift_errorRetain();
            *(void *)(v512 + 24) = v529;
            *(unsigned char *)(v512 + 32) = *((unsigned char *)v513 + 32);
            *(unsigned char *)(v512 + 33) = *((unsigned char *)v513 + 33);
            *(unsigned char *)(v512 + 34) = *((unsigned char *)v513 + 34);
            *(void *)(v512 + 40) = *((void *)v513 + 5);
            *(void *)(v512 + 48) = *((void *)v513 + 6);
            *(void *)(v512 + 56) = *((void *)v513 + 7);
            *(void *)(v512 + 64) = *((void *)v513 + 8);
            *(unsigned char *)(v512 + 72) = *((unsigned char *)v513 + 72);
            *(void *)(v512 + 80) = *((void *)v513 + 10);
            *(void *)(v512 + 88) = *((void *)v513 + 11);
            v939 = (void *)*((void *)v513 + 12);
            *(void *)(v512 + 96) = v939;
            *(unsigned char *)(v512 + 104) = *((unsigned char *)v513 + 104);
            *(unsigned char *)(v512 + 105) = *((unsigned char *)v513 + 105);
            *(void *)(v512 + 112) = *((void *)v513 + 14);
            *(void *)(v512 + 120) = *((void *)v513 + 15);
            *(void *)(v512 + 128) = *((void *)v513 + 16);
            *(void *)(v512 + 136) = *((void *)v513 + 17);
            *(void *)(v512 + 144) = *((void *)v513 + 18);
            *(void *)(v512 + 152) = *((void *)v513 + 19);
            *(void *)(v512 + 160) = *((void *)v513 + 20);
            *(void *)(v512 + 168) = *((void *)v513 + 21);
            *(unsigned char *)(v512 + 176) = *((unsigned char *)v513 + 176);
            *(void *)(v512 + 184) = *((void *)v513 + 23);
            uint64_t v530 = *((void *)v513 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v531 = v939;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v530)
            {
              *(void *)(v512 + 192) = v530;
              *(void *)(v512 + 200) = *((void *)v513 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v512 + 192) = v513[12];
            }
            uint64_t v65 = a1;
            size_t v457 = v862;
            long long v118 = v964;
            char v119 = v957;
            *(void *)(v512 + 208) = *((void *)v513 + 26);
            *(void *)(v512 + 216) = *((void *)v513 + 27);
            *(void *)(v512 + 224) = *((void *)v513 + 28);
            *(void *)(v512 + 232) = *((void *)v513 + 29);
            *(void *)(v512 + 240) = *((void *)v513 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v516 = *v513;
            long long v517 = v513[1];
            long long v518 = v513[3];
            *(_OWORD *)(v512 + 32) = v513[2];
            *(_OWORD *)(v512 + 48) = v518;
            *(_OWORD *)unint64_t v512 = v516;
            *(_OWORD *)(v512 + 16) = v517;
            long long v519 = v513[4];
            long long v520 = v513[5];
            long long v521 = v513[7];
            *(_OWORD *)(v512 + 96) = v513[6];
            *(_OWORD *)(v512 + 112) = v521;
            *(_OWORD *)(v512 + 64) = v519;
            *(_OWORD *)(v512 + 80) = v520;
            long long v522 = v513[8];
            long long v523 = v513[9];
            long long v524 = v513[11];
            *(_OWORD *)(v512 + 160) = v513[10];
            *(_OWORD *)(v512 + 176) = v524;
            *(_OWORD *)(v512 + 128) = v522;
            *(_OWORD *)(v512 + 144) = v523;
            long long v525 = v513[12];
            long long v526 = v513[13];
            long long v527 = v513[14];
            *(void *)(v512 + 240) = *((void *)v513 + 30);
            *(_OWORD *)(v512 + 208) = v526;
            *(_OWORD *)(v512 + 224) = v527;
            *(_OWORD *)(v512 + 192) = v525;
            size_t v457 = v862;
          }
          uint64_t v749 = (_OWORD *)((v512 + 255) & 0xFFFFFFFFFFFFFFF8);
          v750 = (long long *)(((unint64_t)v513 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v751 = *v750;
          *(_OWORD *)((char *)v749 + 9) = *(long long *)((char *)v750 + 9);
          *uint64_t v749 = v751;
          unint64_t v752 = (v512 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v753 = ((unint64_t)v513 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v754 = *(_OWORD *)v753;
          *(unsigned char *)(v752 + 16) = *(unsigned char *)(v753 + 16);
          *(_OWORD *)unint64_t v752 = v754;
          unint64_t v755 = (void *)((v512 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v756 = ((unint64_t)v513 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v757 = *(void *)v756;
          v756 += 15;
          *unint64_t v755 = v757;
          unint64_t v758 = (void *)(((unint64_t)v755 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v759 = *(void *)(v756 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v760 = *(void *)((v756 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_10018B584(v759, v760);
          *unint64_t v758 = v759;
          v758[1] = v760;
          if (v861)
          {
LABEL_384:
            unint64_t v761 = ((((v848
                     + ((((((((((v865 + v457 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            uint64_t v762 = (void *)(((unint64_t)v118 + v761) & 0xFFFFFFFFFFFFFFF8);
            v763 = (void *)(((unint64_t)v119 + v761) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v762 = *v763;
            uint64_t v764 = *(void **)(((unint64_t)v763 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v762 + 15) & 0xFFFFFFFFFFFFFFF8) = v764;
            *((unsigned char *)v65 + v946) = 0;
            id v765 = v764;
            goto LABEL_409;
          }
LABEL_302:
          size_t v457 = v864;
          goto LABEL_384;
        }
        unint64_t v148 = ((unint64_t)v119 + v856) & v922;
        uint64_t v149 = v116;
        unint64_t v150 = (v857 + v148) & v116;
        if (v855 == v847)
        {
          if (v863 == v855)
          {
            int v120 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v853 + 48))((v857 + v148) & v116, v863, v852);
            goto LABEL_299;
          }
          unint64_t v214 = (unint64_t *)((v860 + v150) & 0xFFFFFFFFFFFFFFF8);
          if (v832 > 0x7FFFFFFE)
          {
            int v120 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v842 + 48))(((unint64_t)v214 + v840) & v886, v823, v841);
            goto LABEL_299;
          }
          unint64_t v215 = *v214;
        }
        else
        {
          size_t v176 = v935 + v150;
          if ((v825 & 0x80000000) == 0)
          {
            unint64_t v177 = *(void *)(v176 + 8);
            if (v177 >= 0xFFFFFFFF) {
              LODWORD(v177) = -1;
            }
            int v120 = v177 + 1;
            goto LABEL_300;
          }
          uint64_t v222 = (v844 + ((v926 + v176) & v913)) & v917;
          if (v861 > 0x7FFFFFFD)
          {
            int v120 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v839 + 48))(v222, v861, v849);
            goto LABEL_299;
          }
          unint64_t v215 = *(void *)(((v820 + ((v838 + v222) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v215 >= 0xFFFFFFFF) {
          LODWORD(v215) = -1;
        }
        if ((v215 + 1) >= 2) {
          goto LABEL_301;
        }
        goto LABEL_304;
    }
  }
  unint64_t v68 = v56;
  unsigned int v69 = a2[v56];
  unsigned int v70 = v69 - 8;
  if (v69 < 8)
  {
    uint64_t v72 = v870;
  }
  else
  {
    if (v56 <= 3) {
      uint64_t v71 = v56;
    }
    else {
      uint64_t v71 = 4;
    }
    uint64_t v72 = v870;
    switch(v71)
    {
      case 1:
        int v73 = *a2;
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 2:
        int v73 = *(unsigned __int16 *)a2;
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 3:
        int v73 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 4:
        int v73 = *(_DWORD *)a2;
        if (v56 < 4) {
LABEL_99:
        }
          unsigned int v69 = (v73 | (v70 << (8 * v56))) + 8;
        else {
LABEL_103:
        }
          unsigned int v69 = v73 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v954 = v48;
  unint64_t v921 = ~(unint64_t)v895;
  uint64_t v912 = ~v41;
  uint64_t v81 = ~v40;
  uint64_t v82 = ~v54;
  switch(v69)
  {
    case 1u:
      uint64_t v90 = ~v26;
      uint64_t v872 = v66;
      uint64_t v881 = v67;
      unint64_t v885 = ~(unint64_t)v884;
      uint64_t v891 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      uint64_t v897 = *(void *)(v854 - 8);
      unint64_t v91 = v28;
      unint64_t v931 = v42;
      v871 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16);
      v871(a1, a2, v72);
      __dsta = (void *)(((unint64_t)a1 + v43) & v81);
      uint64_t v92 = (void *)((unint64_t)&a2[v43] & v81);
      v962 = v92;
      if (v902 == v845)
      {
        int v93 = (*(uint64_t (**)(void))(v868 + 48))();
        unint64_t v94 = v91;
        uint64_t v95 = v90;
        uint64_t v96 = v909;
        unint64_t v97 = v904;
      }
      else
      {
        unint64_t v97 = v904;
        unint64_t v142 = ((unint64_t)v92 + v904) & v919;
        uint64_t v96 = v909;
        uint64_t v95 = v90;
        unint64_t v143 = (v909 + v142) & v90;
        if (v907 == v845)
        {
          if (v843 == v907)
          {
            int v93 = (*(uint64_t (**)(unint64_t))(v851 + 48))((v909 + v142) & v90);
          }
          else
          {
            unint64_t v210 = (unint64_t *)((v859 + v143) & 0xFFFFFFFFFFFFFFF8);
            if (v831 <= 0x7FFFFFFE)
            {
              unint64_t v211 = *v210;
              if (v211 >= 0xFFFFFFFF) {
                LODWORD(v211) = -1;
              }
              unint64_t v94 = v91;
              if ((v211 + 1) >= 2) {
                goto LABEL_265;
              }
              goto LABEL_268;
            }
            int v93 = (*(uint64_t (**)(unint64_t))(v897 + 48))(((unint64_t)v210 + v858) & v881);
          }
        }
        else
        {
          unint64_t v94 = v91;
          unint64_t v172 = v91 + v143;
          if ((v824 & 0x80000000) == 0)
          {
            unint64_t v173 = *(void *)(v172 + 8);
            if (v173 >= 0xFFFFFFFF) {
              LODWORD(v173) = -1;
            }
            int v93 = v173 + 1;
            goto LABEL_264;
          }
          uint64_t v221 = (v844 + ((v926 + v172) & v912)) & v917;
          if (v861 <= 0x7FFFFFFD)
          {
            unint64_t v815 = *(void *)(((v820 + ((v838 + v221) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v815 >= 0xFFFFFFFF) {
              LODWORD(v815) = -1;
            }
            if ((v815 + 1) >= 2) {
              goto LABEL_265;
            }
            goto LABEL_268;
          }
          int v93 = (*(uint64_t (**)(uint64_t))(v839 + 48))(v221);
        }
        uint64_t v95 = v90;
        unint64_t v94 = v91;
      }
LABEL_264:
      if (v93)
      {
LABEL_265:
        uint64_t v300 = __dsta;
        uint64_t v301 = v962;
        memcpy(__dsta, v962, v833);
        uint64_t v302 = AssociatedTypeWitness;
        uint64_t v303 = v867;
        goto LABEL_266;
      }
      unint64_t v142 = ((unint64_t)v962 + v97) & v919;
      unint64_t v143 = (v96 + v142) & v95;
LABEL_268:
      unint64_t v878 = v68;
      unint64_t v305 = v94;
      uint64_t v306 = v95;
      v871(__dsta, (unsigned __int8 *)v962, v72);
      uint64_t v307 = v72;
      unint64_t v308 = ((unint64_t)__dsta + v97) & v919;
      v871((void *)v308, (unsigned __int8 *)v142, v307);
      unint64_t v309 = (v96 + v308) & v306;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v851 + 16))(v309, v143, v850);
      long long v310 = (void *)((v859 + v309) & 0xFFFFFFFFFFFFFFF8);
      long long v311 = (void *)((v859 + v143) & 0xFFFFFFFFFFFFFFF8);
      *long long v310 = *v311;
      unint64_t v312 = ((unint64_t)v310 + v858) & v881;
      unint64_t v313 = ((unint64_t)v311 + v858) & v881;
      long long v314 = *(void (**)(unint64_t, unint64_t, uint64_t))(v897 + 16);
      swift_bridgeObjectRetain();
      v314(v312, v313, v854);
      long long v315 = (void *)((v891 + v313) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v316 = (void *)((v891 + v312) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v316 = *v315;
      uint64_t v317 = (void *)(((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v318 = (void *)(((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v317 = *v318;
      v317[1] = v318[1];
      id v319 = (void *)(v305 + v309);
      *id v319 = *(void *)(v305 + v143);
      v319[1] = *(void *)(v305 + v143 + 8);
      uint64_t v320 = (v926 + v305 + v309) & v912;
      uint64_t v321 = (v926 + v305 + v143) & v912;
      *(unsigned char *)uint64_t v320 = *(unsigned char *)v321;
      uint64_t v322 = v320 | 4;
      int v323 = *(_DWORD *)(v321 | 4);
      *(unsigned char *)(v322 + 4) = *(unsigned char *)((v321 | 4) + 4);
      *(_DWORD *)uint64_t v322 = v323;
      *(_WORD *)(v320 + 10) = *(_WORD *)(v321 + 0xA);
      uint64_t v324 = (v844 + v320) & v917;
      uint64_t v927 = v321;
      uint64_t v325 = (v844 + v321) & v917;
      uint64_t v326 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v326(v324, v325, v849);
      uint64_t v327 = (v838 + v324) & v917;
      uint64_t v328 = (v838 + v325) & v917;
      v326(v327, v328, v849);
      uint64_t v329 = (unsigned char *)(v327 + v862);
      *uint64_t v329 = *(unsigned char *)(v328 + v862);
      v329[1] = *(unsigned char *)(v328 + v862 + 1);
      v329[2] = *(unsigned char *)(v328 + v862 + 2);
      v329[3] = *(unsigned char *)(v328 + v862 + 3);
      v329[4] = *(unsigned char *)(v328 + v862 + 4);
      unint64_t v330 = (v327 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v331 = (v328 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v330 = *(void *)v331;
      *(void *)(v330 + 8) = *(void *)(v331 + 8);
      *(unsigned char *)(v330 + 16) = *(unsigned char *)(v331 + 16);
      *(unsigned char *)(v330 + 17) = *(unsigned char *)(v331 + 17);
      *(unsigned char *)(v330 + 18) = *(unsigned char *)(v331 + 18);
      *(unsigned char *)(v330 + 19) = *(unsigned char *)(v331 + 19);
      unint64_t v332 = (v330 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v333 = (v331 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v332 = *(void *)v333;
      *(unsigned char *)(v332 + 8) = *(unsigned char *)(v333 + 8);
      *(unsigned char *)(v332 + 9) = *(unsigned char *)(v333 + 9);
      *(unsigned char *)(v332 + 10) = *(unsigned char *)(v333 + 10);
      *(unsigned char *)(v332 + 11) = *(unsigned char *)(v333 + 11);
      *(unsigned char *)(v332 + 12) = *(unsigned char *)(v333 + 12);
      uint64_t v334 = (void *)((v331 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v335 = (void *)((v330 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v335 = *v334;
      unint64_t v336 = ((unint64_t)v335 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v337 = ((unint64_t)v334 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v336 = *(void *)v337;
      *(unsigned char *)(v336 + 8) = *(unsigned char *)(v337 + 8);
      *(unsigned char *)(v336 + 9) = *(unsigned char *)(v337 + 9);
      uint64_t v338 = (void *)((v837 + v336) & v917);
      unint64_t v339 = (const void *)((v837 + v337) & v917);
      unint64_t v340 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
      swift_bridgeObjectRetain();
      if (v340(v339, 1, v849))
      {
        memcpy(v338, v339, v864);
      }
      else
      {
        v326((uint64_t)v338, (uint64_t)v339, v849);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v338, 0, 1, v849);
      }
      size_t v341 = (void *)(((unint64_t)v338 + v836) & 0xFFFFFFFFFFFFFFF8);
      size_t v342 = (void *)(((unint64_t)v339 + v836) & 0xFFFFFFFFFFFFFFF8);
      void *v341 = *v342;
      unint64_t v343 = ((unint64_t)v341 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v344 = ((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v345 = *(void *)v344;
      *(unsigned char *)(v343 + 8) = *(unsigned char *)(v344 + 8);
      *(void *)unint64_t v343 = v345;
      unint64_t v346 = (void *)(((unint64_t)v341 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v347 = (void *)(((unint64_t)v342 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v346 = *v347;
      unint64_t v348 = ((unint64_t)v346 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v349 = (uint64_t *)(((unint64_t)v347 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v350 = v349[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v350 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v348 = *(_OWORD *)v349;
      }
      else
      {
        uint64_t v351 = *v349;
        sub_10001EBB0(*v349, v350);
        *(void *)unint64_t v348 = v351;
        *(void *)(v348 + 8) = v350;
      }
      uint64_t v302 = AssociatedTypeWitness;
      unint64_t v352 = (v348 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v353 = ((unint64_t)v349 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v354 = *(void *)v353;
      *(unsigned char *)(v352 + 8) = *(unsigned char *)(v353 + 8);
      *(void *)unint64_t v352 = v354;
      *(unsigned char *)(v352 + 9) = *(unsigned char *)(v353 + 9);
      unint64_t v355 = (v352 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v356 = (v353 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v357 = *(_DWORD *)v356;
      *(unsigned char *)(v355 + 4) = *(unsigned char *)(v356 + 4);
      *(_DWORD *)unint64_t v355 = v357;
      unint64_t v358 = (void *)((v352 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v359 = (void *)((v353 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v358 = *v359;
      v358[1] = v359[1];
      unint64_t v360 = v320 + v925;
      uint64_t v361 = (long long *)(v927 + v925);
      unint64_t v362 = *(void *)(v927 + v925 + 16);
      if (v362 >= 0xFFFFFFFF) {
        LODWORD(v362) = -1;
      }
      int v363 = v362 - 1;
      swift_bridgeObjectRetain();
      if (v363 < 0)
      {
        *(void *)unint64_t v360 = *(void *)v361;
        *(unsigned char *)(v360 + 8) = *((unsigned char *)v361 + 8);
        *(unsigned char *)(v360 + 9) = *((unsigned char *)v361 + 9);
        uint64_t v376 = *((void *)v361 + 2);
        swift_errorRetain();
        *(void *)(v360 + 16) = v376;
        uint64_t v377 = *((void *)v361 + 3);
        swift_errorRetain();
        *(void *)(v360 + 24) = v377;
        *(unsigned char *)(v360 + 32) = *((unsigned char *)v361 + 32);
        *(unsigned char *)(v360 + 33) = *((unsigned char *)v361 + 33);
        *(unsigned char *)(v360 + 34) = *((unsigned char *)v361 + 34);
        *(void *)(v360 + 40) = *((void *)v361 + 5);
        *(void *)(v360 + 48) = *((void *)v361 + 6);
        *(void *)(v360 + 56) = *((void *)v361 + 7);
        *(void *)(v360 + 64) = *((void *)v361 + 8);
        *(unsigned char *)(v360 + 72) = *((unsigned char *)v361 + 72);
        *(void *)(v360 + 80) = *((void *)v361 + 10);
        *(void *)(v360 + 88) = *((void *)v361 + 11);
        v928 = (void *)*((void *)v361 + 12);
        *(void *)(v360 + 96) = v928;
        *(unsigned char *)(v360 + 104) = *((unsigned char *)v361 + 104);
        *(unsigned char *)(v360 + 105) = *((unsigned char *)v361 + 105);
        *(void *)(v360 + 112) = *((void *)v361 + 14);
        *(void *)(v360 + 120) = *((void *)v361 + 15);
        *(void *)(v360 + 128) = *((void *)v361 + 16);
        *(void *)(v360 + 136) = *((void *)v361 + 17);
        *(void *)(v360 + 144) = *((void *)v361 + 18);
        *(void *)(v360 + 152) = *((void *)v361 + 19);
        *(void *)(v360 + 160) = *((void *)v361 + 20);
        *(void *)(v360 + 168) = *((void *)v361 + 21);
        *(unsigned char *)(v360 + 176) = *((unsigned char *)v361 + 176);
        *(void *)(v360 + 184) = *((void *)v361 + 23);
        uint64_t v378 = *((void *)v361 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v379 = v928;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v378)
        {
          *(void *)(v360 + 192) = v378;
          *(void *)(v360 + 200) = *((void *)v361 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v360 + 192) = v361[12];
        }
        unint64_t v68 = v878;
        uint64_t v302 = AssociatedTypeWitness;
        uint64_t v303 = v867;
        *(void *)(v360 + 208) = *((void *)v361 + 26);
        *(void *)(v360 + 216) = *((void *)v361 + 27);
        *(void *)(v360 + 224) = *((void *)v361 + 28);
        *(void *)(v360 + 232) = *((void *)v361 + 29);
        *(void *)(v360 + 240) = *((void *)v361 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v364 = *v361;
        long long v365 = v361[1];
        long long v366 = v361[3];
        *(_OWORD *)(v360 + 32) = v361[2];
        *(_OWORD *)(v360 + 48) = v366;
        *(_OWORD *)unint64_t v360 = v364;
        *(_OWORD *)(v360 + 16) = v365;
        long long v367 = v361[4];
        long long v368 = v361[5];
        long long v369 = v361[7];
        *(_OWORD *)(v360 + 96) = v361[6];
        *(_OWORD *)(v360 + 112) = v369;
        *(_OWORD *)(v360 + 64) = v367;
        *(_OWORD *)(v360 + 80) = v368;
        long long v370 = v361[8];
        long long v371 = v361[9];
        long long v372 = v361[11];
        *(_OWORD *)(v360 + 160) = v361[10];
        *(_OWORD *)(v360 + 176) = v372;
        *(_OWORD *)(v360 + 128) = v370;
        *(_OWORD *)(v360 + 144) = v371;
        long long v373 = v361[12];
        long long v374 = v361[13];
        long long v375 = v361[14];
        *(void *)(v360 + 240) = *((void *)v361 + 30);
        *(_OWORD *)(v360 + 208) = v374;
        *(_OWORD *)(v360 + 224) = v375;
        *(_OWORD *)(v360 + 192) = v373;
        unint64_t v68 = v878;
        uint64_t v303 = v867;
      }
      unint64_t v701 = (_OWORD *)((v360 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v702 = (long long *)(((unint64_t)v361 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v703 = *v702;
      *(_OWORD *)((char *)v701 + 9) = *(long long *)((char *)v702 + 9);
      *unint64_t v701 = v703;
      unint64_t v704 = (v360 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v705 = ((unint64_t)v361 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v706 = *(_OWORD *)v705;
      *(unsigned char *)(v704 + 16) = *(unsigned char *)(v705 + 16);
      *(_OWORD *)unint64_t v704 = v706;
      uint64_t v707 = (void *)((v360 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v708 = ((unint64_t)v361 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v709 = *(void *)v708;
      v708 += 15;
      *uint64_t v707 = v709;
      uint64_t v710 = (void *)(((unint64_t)v707 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v711 = *(void *)(v708 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v712 = *(void *)((v708 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v711, v712);
      void *v710 = v711;
      v710[1] = v712;
      size_t v304 = v862;
      uint64_t v301 = v962;
      uint64_t v300 = __dsta;
      if (v861)
      {
LABEL_359:
        unint64_t v713 = ((((v931
                 + ((((((((((v865 + v304 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        uint64_t v714 = (void *)(((unint64_t)v300 + v945 + v713) & v921);
        uint64_t v715 = (const void *)(((unint64_t)v301 + v945 + v713) & v921);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v303 + 48))(v715, 1, v302))
        {
          memcpy(v714, v715, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v303 + 16))(v714, v715, v302);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v303 + 56))(v714, 0, 1, v302);
        }
        uint64_t v716 = (char *)(((unint64_t)v714 + v954) & v872);
        uint64_t v717 = (char *)(((unint64_t)v715 + v954) & v872);
        if (v863 == v855)
        {
          int v718 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v853 + 48))(((unint64_t)v715 + v954) & v872, v863, v852);
          uint64_t v65 = a1;
        }
        else
        {
          uint64_t v719 = (uint64_t *)((unint64_t)&v717[v860] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v65 = a1;
          if (v832 <= 0x7FFFFFFE)
          {
            uint64_t v720 = *v719;
            if ((unint64_t)*v719 >= 0xFFFFFFFF) {
              LODWORD(v720) = -1;
            }
            if ((v720 + 1) >= 2) {
              goto LABEL_371;
            }
            goto LABEL_373;
          }
          int v718 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v842 + 48))(((unint64_t)v719 + v840) & v885, v823, v841);
        }
        if (v718)
        {
LABEL_371:
          size_t v721 = v935;
          memcpy(v716, v717, v935);
LABEL_374:
          *(void *)&v716[v721] = *(void *)&v717[v721];
          uint64_t v730 = (void *)((unint64_t)&v716[v721 + 15] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v731 = (void *)((unint64_t)&v717[v721 + 15] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v730 = *v731;
          uint64_t v732 = *(void **)(((unint64_t)v731 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(void *)(((unint64_t)v730 + 15) & 0xFFFFFFFFFFFFFFF8) = v732;
          *((unsigned char *)v65 + v68) = 1;
          id v733 = v732;
          goto LABEL_379;
        }
        uint64_t v719 = (uint64_t *)((unint64_t)&v717[v860] & 0xFFFFFFFFFFFFFFF8);
LABEL_373:
        (*(void (**)(char *, char *, uint64_t))(v853 + 16))(v716, v717, v852);
        unint64_t v722 = (void *)((unint64_t)&v716[v860] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v722 = *v719;
        unint64_t v723 = ((unint64_t)v722 + v840) & v885;
        unint64_t v724 = ((unint64_t)v719 + v840) & v885;
        uint64_t v725 = *(void (**)(unint64_t, unint64_t, uint64_t))(v842 + 16);
        swift_bridgeObjectRetain();
        v725(v723, v724, v841);
        uint64_t v726 = (void *)((v835 + v723) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v727 = (void *)((v835 + v724) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v726 = *v727;
        uint64_t v728 = (void *)(((unint64_t)v726 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v729 = (void *)(((unint64_t)v727 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v728 = *v729;
        v728[1] = v729[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t v721 = v935;
        goto LABEL_374;
      }
LABEL_266:
      size_t v304 = v864;
      goto LABEL_359;
    case 2u:
      uint64_t v98 = v66;
      unint64_t v99 = ~(unint64_t)v884;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16))(a1, a2, v72);
      uint64_t v100 = (void *)(((unint64_t)a1 + v50) & v921);
      uint64_t v101 = (const void *)((unint64_t)&a2[v50] & v921);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v867 + 48))(v101, 1, AssociatedTypeWitness))
      {
        memcpy(v100, v101, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v867 + 16))(v100, v101, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v867 + 56))(v100, 0, 1, AssociatedTypeWitness);
      }
      unint64_t v157 = (char *)(((unint64_t)v100 + v954) & v98);
      unint64_t v158 = (char *)(((unint64_t)v101 + v954) & v98);
      if (v863 == v855)
      {
        int v159 = (*(uint64_t (**)(unint64_t))(v853 + 48))(((unint64_t)v101 + v954) & v98);
        uint64_t v65 = a1;
      }
      else
      {
        unint64_t v160 = (uint64_t *)((unint64_t)&v158[v860] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = a1;
        if (v832 <= 0x7FFFFFFE)
        {
          uint64_t v161 = *v160;
          if ((unint64_t)*v160 >= 0xFFFFFFFF) {
            LODWORD(v161) = -1;
          }
          if ((v161 + 1) >= 2) {
            goto LABEL_204;
          }
          goto LABEL_206;
        }
        int v159 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v842 + 48))(((unint64_t)v160 + v840) & v99, v823, v841);
      }
      if (v159)
      {
LABEL_204:
        unint64_t v182 = ((((v835
                 + ((v884 + 8 + (v860 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v884)) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        memcpy(v157, v158, v935);
        goto LABEL_207;
      }
      unint64_t v160 = (uint64_t *)((unint64_t)&v158[v860] & 0xFFFFFFFFFFFFFFF8);
LABEL_206:
      (*(void (**)(char *, char *, uint64_t))(v853 + 16))(v157, v158, v852);
      unint64_t v183 = (void *)((unint64_t)&v157[v860] & 0xFFFFFFFFFFFFFFF8);
      void *v183 = *v160;
      unint64_t v184 = ((unint64_t)v183 + v840) & v99;
      unint64_t v185 = ((unint64_t)v160 + v840) & v99;
      unint64_t v186 = *(void (**)(unint64_t, unint64_t, uint64_t))(v842 + 16);
      swift_bridgeObjectRetain();
      v186(v184, v185, v841);
      long long v187 = (void *)((v835 + v184) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = (void *)((v835 + v185) & 0xFFFFFFFFFFFFFFF8);
      *long long v187 = *v188;
      unint64_t v189 = (void *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v190 = (void *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v189 = *v190;
      v189[1] = v190[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v182 = ((((v835
               + ((v884 + 8 + (v860 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v884)) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
LABEL_207:
      unint64_t v191 = &v157[v182];
      *unint64_t v191 = v158[v182];
      unint64_t v192 = *(void **)&v158[v182 + 8];
      *((void *)v191 + 1) = v192;
      *((unsigned char *)v65 + v68) = 2;
      id v193 = v192;
      goto LABEL_379;
    case 3u:
      uint64_t v102 = ~v26;
      uint64_t v882 = v67;
      uint64_t v892 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      uint64_t v898 = *(void *)(v854 - 8);
      unint64_t v103 = v28;
      unint64_t v932 = v42;
      unint64_t v877 = v56;
      unint64_t v104 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16);
      uint64_t v65 = a1;
      v104(a1, a2, v72);
      v956 = (void *)(((unint64_t)a1 + v43) & v81);
      unint64_t v105 = (void *)((unint64_t)&a2[v43] & v81);
      if (v902 == v845)
      {
        int v106 = (*(uint64_t (**)(void *))(v868 + 48))(v105);
        size_t v107 = v103;
        uint64_t v108 = v102;
        uint64_t v109 = v909;
        unint64_t v110 = v904;
        goto LABEL_282;
      }
      unint64_t v110 = v904;
      unint64_t v144 = ((unint64_t)v105 + v904) & v919;
      uint64_t v109 = v909;
      uint64_t v108 = v102;
      unint64_t v145 = (v909 + v144) & v102;
      if (v907 == v845)
      {
        if (v843 == v907)
        {
          long long v146 = *(uint64_t (**)(unint64_t))(v851 + 48);
          unint64_t v147 = (v909 + v144) & v102;
        }
        else
        {
          long long v212 = (unint64_t *)((v859 + v145) & 0xFFFFFFFFFFFFFFF8);
          if (v831 <= 0x7FFFFFFE)
          {
            unint64_t v213 = *v212;
            if (v213 >= 0xFFFFFFFF) {
              LODWORD(v213) = -1;
            }
            size_t v107 = v103;
            if ((v213 + 1) >= 2) {
              goto LABEL_283;
            }
            goto LABEL_286;
          }
          unint64_t v147 = ((unint64_t)v212 + v858) & v882;
          long long v146 = *(uint64_t (**)(unint64_t))(v898 + 48);
        }
        goto LABEL_281;
      }
      size_t v107 = v103;
      unint64_t v174 = v103 + v145;
      if ((v824 & 0x80000000) != 0)
      {
        unint64_t v147 = (v844 + ((v926 + v174) & v912)) & v917;
        if (v861 <= 0x7FFFFFFD)
        {
          unint64_t v816 = *(void *)(((v820 + ((v838 + v147) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v816 >= 0xFFFFFFFF) {
            LODWORD(v816) = -1;
          }
          if ((v816 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        long long v146 = *(uint64_t (**)(unint64_t))(v839 + 48);
LABEL_281:
        int v106 = v146(v147);
        uint64_t v109 = v909;
        uint64_t v108 = v102;
        size_t v107 = v103;
        goto LABEL_282;
      }
      unint64_t v175 = *(void *)(v174 + 8);
      if (v175 >= 0xFFFFFFFF) {
        LODWORD(v175) = -1;
      }
      int v106 = v175 + 1;
LABEL_282:
      if (v106)
      {
LABEL_283:
        unint64_t v380 = v956;
        memcpy(v956, v105, v833);
LABEL_284:
        size_t v381 = v864;
        goto LABEL_378;
      }
      unint64_t v144 = ((unint64_t)v105 + v110) & v919;
      unint64_t v145 = (v109 + v144) & v108;
LABEL_286:
      size_t v819 = v107;
      v963 = v105;
      uint64_t v382 = (unsigned __int8 *)v105;
      uint64_t v383 = v108;
      uint64_t v384 = v109;
      v104(v956, v382, v870);
      unint64_t v385 = ((unint64_t)v956 + v110) & v919;
      v104((void *)v385, (unsigned __int8 *)v144, v870);
      unint64_t v386 = (v384 + v385) & v383;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v851 + 16))(v386, v145, v850);
      uint64_t v387 = (void *)((v859 + v386) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v388 = (void *)((v859 + v145) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v387 = *v388;
      unint64_t v389 = ((unint64_t)v387 + v858) & v882;
      unint64_t v390 = ((unint64_t)v388 + v858) & v882;
      uint64_t v391 = *(void (**)(unint64_t, unint64_t, uint64_t))(v898 + 16);
      swift_bridgeObjectRetain();
      v391(v389, v390, v854);
      unint64_t v392 = (void *)((v892 + v390) & 0xFFFFFFFFFFFFFFF8);
      long long v393 = (void *)((v892 + v389) & 0xFFFFFFFFFFFFFFF8);
      *long long v393 = *v392;
      unint64_t v394 = (void *)(((unint64_t)v393 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v395 = (void *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v394 = *v395;
      v394[1] = v395[1];
      unint64_t v396 = (void *)(v819 + v386);
      *unint64_t v396 = *(void *)(v819 + v145);
      v396[1] = *(void *)(v819 + v145 + 8);
      size_t v397 = (v926 + v819 + v386) & v912;
      size_t v398 = (v926 + v819 + v145) & v912;
      *(unsigned char *)size_t v397 = *(unsigned char *)v398;
      uint64_t v399 = v397 | 4;
      int v400 = *(_DWORD *)(v398 | 4);
      *(unsigned char *)(v399 + 4) = *(unsigned char *)((v398 | 4) + 4);
      *(_DWORD *)uint64_t v399 = v400;
      *(_WORD *)(v397 + 10) = *(_WORD *)(v398 + 0xA);
      size_t v951 = v397;
      uint64_t v401 = (v844 + v397) & v917;
      size_t v937 = v398;
      uint64_t v402 = (v844 + v398) & v917;
      long long v403 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v403(v401, v402, v849);
      uint64_t v404 = (v838 + v401) & v917;
      uint64_t v405 = (v838 + v402) & v917;
      v403(v404, v405, v849);
      unint64_t v406 = (unsigned char *)(v404 + v862);
      *unint64_t v406 = *(unsigned char *)(v405 + v862);
      v406[1] = *(unsigned char *)(v405 + v862 + 1);
      v406[2] = *(unsigned char *)(v405 + v862 + 2);
      v406[3] = *(unsigned char *)(v405 + v862 + 3);
      v406[4] = *(unsigned char *)(v405 + v862 + 4);
      unint64_t v407 = (v404 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v408 = (v405 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v407 = *(void *)v408;
      *(void *)(v407 + 8) = *(void *)(v408 + 8);
      *(unsigned char *)(v407 + 16) = *(unsigned char *)(v408 + 16);
      *(unsigned char *)(v407 + 17) = *(unsigned char *)(v408 + 17);
      *(unsigned char *)(v407 + 18) = *(unsigned char *)(v408 + 18);
      *(unsigned char *)(v407 + 19) = *(unsigned char *)(v408 + 19);
      unint64_t v409 = (v407 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v410 = (v408 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v409 = *(void *)v410;
      *(unsigned char *)(v409 + 8) = *(unsigned char *)(v410 + 8);
      *(unsigned char *)(v409 + 9) = *(unsigned char *)(v410 + 9);
      *(unsigned char *)(v409 + 10) = *(unsigned char *)(v410 + 10);
      *(unsigned char *)(v409 + 11) = *(unsigned char *)(v410 + 11);
      *(unsigned char *)(v409 + 12) = *(unsigned char *)(v410 + 12);
      long long v411 = (void *)((v408 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v412 = (void *)((v407 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v412 = *v411;
      unint64_t v413 = ((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v414 = ((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v413 = *(void *)v414;
      *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
      *(unsigned char *)(v413 + 9) = *(unsigned char *)(v414 + 9);
      uint64_t v415 = (void *)((v837 + v413) & v917);
      unint64_t v416 = (const void *)((v837 + v414) & v917);
      unint64_t v417 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
      swift_bridgeObjectRetain();
      if (v417(v416, 1, v849))
      {
        memcpy(v415, v416, v864);
      }
      else
      {
        v403((uint64_t)v415, (uint64_t)v416, v849);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v415, 0, 1, v849);
      }
      unint64_t v105 = v963;
      uint64_t v418 = (void *)(((unint64_t)v415 + v836) & 0xFFFFFFFFFFFFFFF8);
      int v419 = (void *)(((unint64_t)v416 + v836) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v418 = *v419;
      unint64_t v420 = ((unint64_t)v418 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v421 = ((unint64_t)v419 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v422 = *(void *)v421;
      *(unsigned char *)(v420 + 8) = *(unsigned char *)(v421 + 8);
      *(void *)unint64_t v420 = v422;
      unint64_t v423 = (void *)(((unint64_t)v418 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v424 = (void *)(((unint64_t)v419 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v423 = *v424;
      unint64_t v425 = ((unint64_t)v423 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v426 = (uint64_t *)(((unint64_t)v424 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v427 = v426[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v427 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v425 = *(_OWORD *)v426;
      }
      else
      {
        uint64_t v428 = *v426;
        sub_10001EBB0(*v426, v427);
        *(void *)unint64_t v425 = v428;
        *(void *)(v425 + 8) = v427;
      }
      unint64_t v429 = (v425 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v430 = ((unint64_t)v426 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v431 = *(void *)v430;
      *(unsigned char *)(v429 + 8) = *(unsigned char *)(v430 + 8);
      *(void *)unint64_t v429 = v431;
      *(unsigned char *)(v429 + 9) = *(unsigned char *)(v430 + 9);
      unint64_t v432 = (v429 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v433 = (v430 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v434 = *(_DWORD *)v433;
      *(unsigned char *)(v432 + 4) = *(unsigned char *)(v433 + 4);
      *(_DWORD *)unint64_t v432 = v434;
      unint64_t v435 = (void *)((v429 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v436 = (void *)((v430 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v435 = *v436;
      v435[1] = v436[1];
      size_t v437 = v951 + v925;
      long long v438 = (long long *)(v937 + v925);
      unint64_t v439 = *(void *)(v937 + v925 + 16);
      if (v439 >= 0xFFFFFFFF) {
        LODWORD(v439) = -1;
      }
      int v440 = v439 - 1;
      swift_bridgeObjectRetain();
      if (v440 < 0)
      {
        *(void *)size_t v437 = *(void *)v438;
        *(unsigned char *)(v437 + 8) = *((unsigned char *)v438 + 8);
        *(unsigned char *)(v437 + 9) = *((unsigned char *)v438 + 9);
        uint64_t v453 = *((void *)v438 + 2);
        swift_errorRetain();
        *(void *)(v437 + 16) = v453;
        uint64_t v454 = *((void *)v438 + 3);
        swift_errorRetain();
        *(void *)(v437 + 24) = v454;
        *(unsigned char *)(v437 + 32) = *((unsigned char *)v438 + 32);
        *(unsigned char *)(v437 + 33) = *((unsigned char *)v438 + 33);
        *(unsigned char *)(v437 + 34) = *((unsigned char *)v438 + 34);
        *(void *)(v437 + 40) = *((void *)v438 + 5);
        *(void *)(v437 + 48) = *((void *)v438 + 6);
        *(void *)(v437 + 56) = *((void *)v438 + 7);
        *(void *)(v437 + 64) = *((void *)v438 + 8);
        *(unsigned char *)(v437 + 72) = *((unsigned char *)v438 + 72);
        *(void *)(v437 + 80) = *((void *)v438 + 10);
        *(void *)(v437 + 88) = *((void *)v438 + 11);
        v952 = (void *)*((void *)v438 + 12);
        *(void *)(v437 + 96) = v952;
        *(unsigned char *)(v437 + 104) = *((unsigned char *)v438 + 104);
        *(unsigned char *)(v437 + 105) = *((unsigned char *)v438 + 105);
        *(void *)(v437 + 112) = *((void *)v438 + 14);
        *(void *)(v437 + 120) = *((void *)v438 + 15);
        *(void *)(v437 + 128) = *((void *)v438 + 16);
        *(void *)(v437 + 136) = *((void *)v438 + 17);
        *(void *)(v437 + 144) = *((void *)v438 + 18);
        *(void *)(v437 + 152) = *((void *)v438 + 19);
        *(void *)(v437 + 160) = *((void *)v438 + 20);
        *(void *)(v437 + 168) = *((void *)v438 + 21);
        *(unsigned char *)(v437 + 176) = *((unsigned char *)v438 + 176);
        *(void *)(v437 + 184) = *((void *)v438 + 23);
        uint64_t v455 = *((void *)v438 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v456 = v952;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v455)
        {
          *(void *)(v437 + 192) = v455;
          *(void *)(v437 + 200) = *((void *)v438 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v437 + 192) = v438[12];
        }
        uint64_t v65 = a1;
        size_t v381 = v862;
        unint64_t v105 = v963;
        *(void *)(v437 + 208) = *((void *)v438 + 26);
        *(void *)(v437 + 216) = *((void *)v438 + 27);
        *(void *)(v437 + 224) = *((void *)v438 + 28);
        *(void *)(v437 + 232) = *((void *)v438 + 29);
        *(void *)(v437 + 240) = *((void *)v438 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v441 = *v438;
        long long v442 = v438[1];
        long long v443 = v438[3];
        *(_OWORD *)(v437 + 32) = v438[2];
        *(_OWORD *)(v437 + 48) = v443;
        *(_OWORD *)size_t v437 = v441;
        *(_OWORD *)(v437 + 16) = v442;
        long long v444 = v438[4];
        long long v445 = v438[5];
        long long v446 = v438[7];
        *(_OWORD *)(v437 + 96) = v438[6];
        *(_OWORD *)(v437 + 112) = v446;
        *(_OWORD *)(v437 + 64) = v444;
        *(_OWORD *)(v437 + 80) = v445;
        long long v447 = v438[8];
        long long v448 = v438[9];
        long long v449 = v438[11];
        *(_OWORD *)(v437 + 160) = v438[10];
        *(_OWORD *)(v437 + 176) = v449;
        *(_OWORD *)(v437 + 128) = v447;
        *(_OWORD *)(v437 + 144) = v448;
        long long v450 = v438[12];
        long long v451 = v438[13];
        long long v452 = v438[14];
        *(void *)(v437 + 240) = *((void *)v438 + 30);
        *(_OWORD *)(v437 + 208) = v451;
        *(_OWORD *)(v437 + 224) = v452;
        *(_OWORD *)(v437 + 192) = v450;
        size_t v381 = v862;
      }
      unint64_t v734 = (_OWORD *)((v437 + 255) & 0xFFFFFFFFFFFFFFF8);
      v735 = (long long *)(((unint64_t)v438 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v736 = *v735;
      *(_OWORD *)((char *)v734 + 9) = *(long long *)((char *)v735 + 9);
      *unint64_t v734 = v736;
      unint64_t v737 = (v437 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v738 = ((unint64_t)v438 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v739 = *(_OWORD *)v738;
      *(unsigned char *)(v737 + 16) = *(unsigned char *)(v738 + 16);
      *(_OWORD *)unint64_t v737 = v739;
      uint64_t v740 = (void *)((v437 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v741 = ((unint64_t)v438 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v742 = *(void *)v741;
      v741 += 15;
      *uint64_t v740 = v742;
      size_t v743 = (void *)(((unint64_t)v740 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v744 = *(void *)(v741 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v745 = *(void *)((v741 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v744, v745);
      *size_t v743 = v744;
      v743[1] = v745;
      unint64_t v380 = v956;
      if (!v861) {
        goto LABEL_284;
      }
LABEL_378:
      unint64_t v746 = ((((v932
               + ((((((((((v865 + v381 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v747 = (void *)(((unint64_t)v380 + v746) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v748 = (void *)(((unint64_t)v105 + v746) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v747 = *v748;
      v747[1] = v748[1];
      *(void *)(((unint64_t)v747 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v748 + 23) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v65 + v877) = 3;
      swift_bridgeObjectRetain();
      goto LABEL_379;
    case 4u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16))(a1, a2, v72);
      char v111 = 4;
      goto LABEL_118;
    case 5u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16))(a1, a2, v72);
      char v111 = 5;
      goto LABEL_118;
    case 6u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16))(a1, a2, v72);
      long long v112 = (void *)(((unint64_t)a1 + v55) & v82);
      unint64_t v113 = (const void *)((unint64_t)&a2[v55] & v82);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v113, 1, v828))
      {
        memcpy(v112, v113, v821);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v112, v113, v828);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v112, 0, 1, v828);
      }
      unint64_t v168 = v960;
      uint64_t v65 = a1;
      *((unsigned char *)a1 + v68) = 6;
      goto LABEL_380;
    case 7u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16))(a1, a2, v72);
      char v111 = 7;
LABEL_118:
      *((unsigned char *)v65 + v68) = v111;
      goto LABEL_379;
    default:
      uint64_t v83 = ~v26;
      uint64_t v880 = v67;
      uint64_t v890 = *(void *)(*(void *)(v854 - 8) + 64) + 7;
      uint64_t v896 = *(void *)(v854 - 8);
      size_t v817 = v28;
      unint64_t v930 = v42;
      unint64_t v876 = v56;
      uint64_t v84 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v868 + 16);
      uint64_t v65 = a1;
      v84(a1, a2, v72);
      v955 = (void *)(((unint64_t)a1 + v43) & v81);
      uint64_t v85 = (void *)((unint64_t)&a2[v43] & v81);
      if (v902 == v845)
      {
        int v86 = (*(uint64_t (**)(void *))(v868 + 48))(v85);
        uint64_t v87 = v83;
        uint64_t v88 = v909;
        unint64_t v89 = v904;
        goto LABEL_246;
      }
      unint64_t v89 = v904;
      unint64_t v140 = ((unint64_t)v85 + v904) & v919;
      uint64_t v88 = v909;
      uint64_t v87 = v83;
      unint64_t v141 = (v909 + v140) & v83;
      if (v907 == v845)
      {
        if (v843 == v907)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v851 + 48))((v909 + v140) & v83);
LABEL_245:
          uint64_t v87 = v83;
          goto LABEL_246;
        }
        unint64_t v208 = (unint64_t *)((v859 + v141) & 0xFFFFFFFFFFFFFFF8);
        if (v831 > 0x7FFFFFFE)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v896 + 48))(((unint64_t)v208 + v858) & v880);
          goto LABEL_245;
        }
        unint64_t v209 = *v208;
        goto LABEL_413;
      }
      size_t v170 = v817 + v141;
      if ((v824 & 0x80000000) != 0)
      {
        uint64_t v220 = (v844 + ((v926 + v170) & v912)) & v917;
        if (v861 > 0x7FFFFFFD)
        {
          int v86 = (*(uint64_t (**)(uint64_t))(v839 + 48))(v220);
          goto LABEL_245;
        }
        unint64_t v209 = *(void *)(((v820 + ((v838 + v220) & v917)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_413:
        if (v209 >= 0xFFFFFFFF) {
          LODWORD(v209) = -1;
        }
        if ((v209 + 1) >= 2) {
          goto LABEL_247;
        }
        goto LABEL_250;
      }
      unint64_t v171 = *(void *)(v170 + 8);
      if (v171 >= 0xFFFFFFFF) {
        LODWORD(v171) = -1;
      }
      int v86 = v171 + 1;
LABEL_246:
      if (v86)
      {
LABEL_247:
        unint64_t v225 = v955;
        memcpy(v955, v85, v833);
LABEL_248:
        size_t v226 = v864;
        goto LABEL_355;
      }
      unint64_t v140 = ((unint64_t)v85 + v89) & v919;
      unint64_t v141 = (v88 + v140) & v87;
LABEL_250:
      uint64_t v227 = v87;
      v84(v955, (unsigned __int8 *)v85, v870);
      unint64_t v228 = ((unint64_t)v955 + v89) & v919;
      v84((void *)v228, (unsigned __int8 *)v140, v870);
      unint64_t v229 = (v88 + v228) & v227;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v851 + 16))(v229, v141, v850);
      unint64_t v230 = (void *)((v859 + v229) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v231 = (void *)((v859 + v141) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v230 = *v231;
      unint64_t v232 = ((unint64_t)v230 + v858) & v880;
      unint64_t v233 = ((unint64_t)v231 + v858) & v880;
      long long v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v896 + 16);
      swift_bridgeObjectRetain();
      v234(v232, v233, v854);
      long long v235 = (void *)((v890 + v233) & 0xFFFFFFFFFFFFFFF8);
      long long v236 = (void *)((v890 + v232) & 0xFFFFFFFFFFFFFFF8);
      *long long v236 = *v235;
      long long v237 = (void *)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v238 = (void *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v237 = *v238;
      v237[1] = v238[1];
      long long v239 = (void *)(v817 + v229);
      *long long v239 = *(void *)(v817 + v141);
      v239[1] = *(void *)(v817 + v141 + 8);
      size_t v240 = (v926 + v817 + v229) & v912;
      size_t v241 = (v926 + v817 + v141) & v912;
      *(unsigned char *)size_t v240 = *(unsigned char *)v241;
      uint64_t v242 = v240 | 4;
      int v243 = *(_DWORD *)(v241 | 4);
      *(unsigned char *)(v242 + 4) = *(unsigned char *)((v241 | 4) + 4);
      *(_DWORD *)uint64_t v242 = v243;
      *(_WORD *)(v240 + 10) = *(_WORD *)(v241 + 0xA);
      size_t v949 = v240;
      uint64_t v244 = (v844 + v240) & v917;
      size_t v936 = v241;
      uint64_t v245 = (v844 + v241) & v917;
      long long v246 = *(void (**)(uint64_t, uint64_t, uint64_t))(v839 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v246(v244, v245, v849);
      uint64_t v247 = (v838 + v244) & v917;
      uint64_t v248 = (v838 + v245) & v917;
      v246(v247, v248, v849);
      long long v249 = (unsigned char *)(v247 + v862);
      *long long v249 = *(unsigned char *)(v248 + v862);
      v249[1] = *(unsigned char *)(v248 + v862 + 1);
      v249[2] = *(unsigned char *)(v248 + v862 + 2);
      v249[3] = *(unsigned char *)(v248 + v862 + 3);
      v249[4] = *(unsigned char *)(v248 + v862 + 4);
      unint64_t v250 = (v247 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v251 = (v248 + v862 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v250 = *(void *)v251;
      *(void *)(v250 + 8) = *(void *)(v251 + 8);
      *(unsigned char *)(v250 + 16) = *(unsigned char *)(v251 + 16);
      *(unsigned char *)(v250 + 17) = *(unsigned char *)(v251 + 17);
      *(unsigned char *)(v250 + 18) = *(unsigned char *)(v251 + 18);
      *(unsigned char *)(v250 + 19) = *(unsigned char *)(v251 + 19);
      unint64_t v252 = (v250 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v253 = (v251 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v252 = *(void *)v253;
      *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
      *(unsigned char *)(v252 + 9) = *(unsigned char *)(v253 + 9);
      *(unsigned char *)(v252 + 10) = *(unsigned char *)(v253 + 10);
      *(unsigned char *)(v252 + 11) = *(unsigned char *)(v253 + 11);
      *(unsigned char *)(v252 + 12) = *(unsigned char *)(v253 + 12);
      uint64_t v254 = (void *)((v251 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v255 = (void *)((v250 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v255 = *v254;
      unint64_t v256 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v257 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v256 = *(void *)v257;
      *(unsigned char *)(v256 + 8) = *(unsigned char *)(v257 + 8);
      *(unsigned char *)(v256 + 9) = *(unsigned char *)(v257 + 9);
      uint64_t v258 = (void *)((v837 + v256) & v917);
      uint64_t v259 = (const void *)((v837 + v257) & v917);
      uint64_t v260 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v839 + 48);
      swift_bridgeObjectRetain();
      if (v260(v259, 1, v849))
      {
        memcpy(v258, v259, v864);
      }
      else
      {
        v246((uint64_t)v258, (uint64_t)v259, v849);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v839 + 56))(v258, 0, 1, v849);
      }
      uint64_t v261 = (void *)(((unint64_t)v258 + v836) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v262 = (void *)(((unint64_t)v259 + v836) & 0xFFFFFFFFFFFFFFF8);
      void *v261 = *v262;
      unint64_t v263 = ((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v264 = ((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v265 = *(void *)v264;
      *(unsigned char *)(v263 + 8) = *(unsigned char *)(v264 + 8);
      *(void *)unint64_t v263 = v265;
      unint64_t v266 = (void *)(((unint64_t)v261 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v267 = (void *)(((unint64_t)v262 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v266 = *v267;
      unint64_t v268 = ((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v269 = (uint64_t *)(((unint64_t)v267 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v270 = v269[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v270 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v268 = *(_OWORD *)v269;
      }
      else
      {
        uint64_t v271 = *v269;
        sub_10001EBB0(*v269, v270);
        *(void *)unint64_t v268 = v271;
        *(void *)(v268 + 8) = v270;
      }
      unint64_t v272 = (v268 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v273 = ((unint64_t)v269 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v274 = *(void *)v273;
      *(unsigned char *)(v272 + 8) = *(unsigned char *)(v273 + 8);
      *(void *)unint64_t v272 = v274;
      *(unsigned char *)(v272 + 9) = *(unsigned char *)(v273 + 9);
      unint64_t v275 = (v272 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v276 = (v273 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v277 = *(_DWORD *)v276;
      *(unsigned char *)(v275 + 4) = *(unsigned char *)(v276 + 4);
      *(_DWORD *)unint64_t v275 = v277;
      unint64_t v278 = (void *)((v272 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v279 = (void *)((v273 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v278 = *v279;
      v278[1] = v279[1];
      size_t v280 = v949 + v925;
      size_t v281 = (long long *)(v936 + v925);
      unint64_t v282 = *(void *)(v936 + v925 + 16);
      if (v282 >= 0xFFFFFFFF) {
        LODWORD(v282) = -1;
      }
      int v283 = v282 - 1;
      swift_bridgeObjectRetain();
      if (v283 < 0)
      {
        *(void *)size_t v280 = *(void *)v281;
        *(unsigned char *)(v280 + 8) = *((unsigned char *)v281 + 8);
        *(unsigned char *)(v280 + 9) = *((unsigned char *)v281 + 9);
        uint64_t v296 = *((void *)v281 + 2);
        swift_errorRetain();
        *(void *)(v280 + 16) = v296;
        uint64_t v297 = *((void *)v281 + 3);
        swift_errorRetain();
        *(void *)(v280 + 24) = v297;
        *(unsigned char *)(v280 + 32) = *((unsigned char *)v281 + 32);
        *(unsigned char *)(v280 + 33) = *((unsigned char *)v281 + 33);
        *(unsigned char *)(v280 + 34) = *((unsigned char *)v281 + 34);
        *(void *)(v280 + 40) = *((void *)v281 + 5);
        *(void *)(v280 + 48) = *((void *)v281 + 6);
        *(void *)(v280 + 56) = *((void *)v281 + 7);
        *(void *)(v280 + 64) = *((void *)v281 + 8);
        *(unsigned char *)(v280 + 72) = *((unsigned char *)v281 + 72);
        *(void *)(v280 + 80) = *((void *)v281 + 10);
        *(void *)(v280 + 88) = *((void *)v281 + 11);
        v950 = (void *)*((void *)v281 + 12);
        *(void *)(v280 + 96) = v950;
        *(unsigned char *)(v280 + 104) = *((unsigned char *)v281 + 104);
        *(unsigned char *)(v280 + 105) = *((unsigned char *)v281 + 105);
        *(void *)(v280 + 112) = *((void *)v281 + 14);
        *(void *)(v280 + 120) = *((void *)v281 + 15);
        *(void *)(v280 + 128) = *((void *)v281 + 16);
        *(void *)(v280 + 136) = *((void *)v281 + 17);
        *(void *)(v280 + 144) = *((void *)v281 + 18);
        *(void *)(v280 + 152) = *((void *)v281 + 19);
        *(void *)(v280 + 160) = *((void *)v281 + 20);
        *(void *)(v280 + 168) = *((void *)v281 + 21);
        *(unsigned char *)(v280 + 176) = *((unsigned char *)v281 + 176);
        *(void *)(v280 + 184) = *((void *)v281 + 23);
        uint64_t v298 = *((void *)v281 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v299 = v950;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v298)
        {
          *(void *)(v280 + 192) = v298;
          *(void *)(v280 + 200) = *((void *)v281 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v280 + 192) = v281[12];
        }
        uint64_t v65 = a1;
        size_t v226 = v862;
        *(void *)(v280 + 208) = *((void *)v281 + 26);
        *(void *)(v280 + 216) = *((void *)v281 + 27);
        *(void *)(v280 + 224) = *((void *)v281 + 28);
        *(void *)(v280 + 232) = *((void *)v281 + 29);
        *(void *)(v280 + 240) = *((void *)v281 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v284 = *v281;
        long long v285 = v281[1];
        long long v286 = v281[3];
        *(_OWORD *)(v280 + 32) = v281[2];
        *(_OWORD *)(v280 + 48) = v286;
        *(_OWORD *)size_t v280 = v284;
        *(_OWORD *)(v280 + 16) = v285;
        long long v287 = v281[4];
        long long v288 = v281[5];
        long long v289 = v281[7];
        *(_OWORD *)(v280 + 96) = v281[6];
        *(_OWORD *)(v280 + 112) = v289;
        *(_OWORD *)(v280 + 64) = v287;
        *(_OWORD *)(v280 + 80) = v288;
        long long v290 = v281[8];
        long long v291 = v281[9];
        long long v292 = v281[11];
        *(_OWORD *)(v280 + 160) = v281[10];
        *(_OWORD *)(v280 + 176) = v292;
        *(_OWORD *)(v280 + 128) = v290;
        *(_OWORD *)(v280 + 144) = v291;
        long long v293 = v281[12];
        long long v294 = v281[13];
        long long v295 = v281[14];
        *(void *)(v280 + 240) = *((void *)v281 + 30);
        *(_OWORD *)(v280 + 208) = v294;
        *(_OWORD *)(v280 + 224) = v295;
        *(_OWORD *)(v280 + 192) = v293;
        size_t v226 = v862;
      }
      unint64_t v684 = (_OWORD *)((v280 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v685 = (long long *)(((unint64_t)v281 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v686 = *v685;
      *(_OWORD *)((char *)v684 + 9) = *(long long *)((char *)v685 + 9);
      *unint64_t v684 = v686;
      unint64_t v687 = (v280 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v688 = ((unint64_t)v281 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v689 = *(_OWORD *)v688;
      *(unsigned char *)(v687 + 16) = *(unsigned char *)(v688 + 16);
      *(_OWORD *)unint64_t v687 = v689;
      unint64_t v690 = (void *)((v280 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v691 = ((unint64_t)v281 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v692 = *(void *)v691;
      v691 += 15;
      *unint64_t v690 = v692;
      unint64_t v693 = (void *)(((unint64_t)v690 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v694 = *(void *)(v691 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v695 = *(void *)((v691 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_10018B584(v694, v695);
      *unint64_t v693 = v694;
      v693[1] = v695;
      unint64_t v225 = v955;
      if (!v861) {
        goto LABEL_248;
      }
LABEL_355:
      unint64_t v696 = ((((v930
               + ((((((((((v865 + v226 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v697 = (void *)(((unint64_t)v225 + v696) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v698 = (void *)(((unint64_t)v85 + v696) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v697 = *v698;
      unint64_t v699 = *(void **)(((unint64_t)v698 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v697 + 15) & 0xFFFFFFFFFFFFFFF8) = v699;
      *((unsigned char *)v65 + v876) = 0;
      id v700 = v699;
LABEL_379:
      unint64_t v168 = v960;
LABEL_380:
      *((unsigned char *)v65 + v168) = 1;
      return v65;
  }
}

void sub_1006633C0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v330 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v331 = *(void *)(v330 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v330 + 80);
  uint64_t v318 = v2;
  uint64_t v286 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v286 - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v275 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v275 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v273 = sub_10096B0E0();
  uint64_t v9 = *(void *)(v273 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v8 | v3 | v10;
  uint64_t v287 = v4;
  uint64_t v276 = v6;
  unsigned int v13 = *(_DWORD *)(v6 + 84);
  unsigned int v248 = v13;
  unsigned int v278 = *(_DWORD *)(v4 + 84);
  if (v278 > v13) {
    unsigned int v13 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v262 = v13;
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  unsigned int v325 = *(_DWORD *)(v330 + 84);
  unsigned int v288 = v13;
  if (v13 <= v325) {
    unsigned int v13 = *(_DWORD *)(v330 + 84);
  }
  uint64_t v272 = *(void *)(v273 - 8);
  unsigned int v14 = *(_DWORD *)(v9 + 84);
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v9 + 84);
  }
  unsigned int v309 = v15;
  if (v13 <= v15) {
    unsigned int v13 = v15;
  }
  unsigned int v249 = v13;
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  unsigned int v282 = v13;
  unsigned int v247 = *(_DWORD *)(v9 + 84);
  uint64_t v302 = v3;
  uint64_t v269 = v331 + v3;
  uint64_t v306 = v8;
  uint64_t v323 = v331 + v8;
  uint64_t v289 = *(void *)(v4 + 64) + 7;
  uint64_t v274 = v7 + 8;
  uint64_t v316 = v7;
  unint64_t v329 = ((((*(void *)(v6 + 64) + 7 + ((v7 + 8 + (v289 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v311 = v10 | 7;
  uint64_t v324 = v11 + 16;
  uint64_t v279 = v10 + 12;
  uint64_t v16 = *(void *)(*(void *)(v273 - 8) + 64);
  uint64_t v270 = v16 + v10;
  uint64_t v271 = v16 + 12;
  unint64_t v17 = (v10
       + 10
       + ((((((v16 + 12 + ((v16 + v10 + ((v10 + 12) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  if (!v14) {
    ++v16;
  }
  uint64_t v265 = v10 + 10;
  uint64_t v266 = v16 + 7;
  unint64_t v313 = (((((((((v16 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v291 = v8 | v3 | v10;
  unint64_t v281 = v12 + v331;
  unint64_t v283 = ((((v313 + 327 + ((v11 + 16 + v329 + ((v331 + v8 + ((v331 + v3) & ~v3)) & ~v8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v18 = v283 + ((v12 + v331) & ~v12);
  unint64_t v299 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v297 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v297 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v304 = (v18 + v21) & ~v21;
  uint64_t v298 = v20;
  unsigned int v22 = *(_DWORD *)(v20 + 84);
  unint64_t v23 = *(void *)(v20 + 64);
  uint64_t v284 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v284 - 8);
  int v25 = *(_DWORD *)(v24 + 80);
  uint64_t v280 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v280 - 8);
  uint64_t v27 = v26;
  uint64_t v285 = v24;
  unsigned int v28 = *(_DWORD *)(v26 + 84);
  unsigned int v277 = *(_DWORD *)(v24 + 84);
  if (v277 > v28) {
    unsigned int v28 = *(_DWORD *)(v24 + 84);
  }
  unsigned int v261 = v28;
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  else {
    unsigned int v29 = v28;
  }
  uint64_t v30 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = v25 & 0xF8 | v30 | 7;
  uint64_t v290 = *(void *)(v24 + 64) + 7;
  uint64_t v32 = v30 + 8;
  unint64_t v33 = ((((*(void *)(*(void *)(v280 - 8) + 64) + 7 + ((v30 + 8 + (v290 & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v34 = v23 + v31;
  if (v22) {
    uint64_t v35 = v23 + v31;
  }
  else {
    uint64_t v35 = v34 + 1;
  }
  unint64_t v36 = ((((((v35 + v304) & ~v31) + v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v250 = v331 + v21;
  uint64_t v264 = v35;
  unint64_t v37 = v33 + ((v35 + ((v331 + v21) & ~v21)) & ~v31) + 16;
  uint64_t v38 = *(void *)(v318 - 8);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = v331 + v39;
  uint64_t v256 = v38;
  uint64_t v41 = *(void *)(v38 + 64);
  if (!*(_DWORD *)(v38 + 84)) {
    ++v41;
  }
  unint64_t v42 = v41 + ((v331 + v39) & ~v39);
  if (v331 <= ((v299 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v43 = ((v299 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v43 = v331;
  }
  if (v36 <= v37) {
    unint64_t v36 = v37;
  }
  if (((v299 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v42) {
    unint64_t v42 = ((v299 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 > v36) {
    unint64_t v36 = v43;
  }
  if (v36 <= v42) {
    unint64_t v36 = v42;
  }
  unsigned int v305 = v29;
  unsigned int v301 = v22;
  if (v29 <= v22) {
    unsigned int v44 = v22;
  }
  else {
    unsigned int v44 = v29;
  }
  uint64_t v45 = v19;
  if (v44 <= v309) {
    unsigned int v46 = v309;
  }
  else {
    unsigned int v46 = v44;
  }
  if (v46 <= 0x7FFFFFFF) {
    int v47 = 0x7FFFFFFF;
  }
  else {
    int v47 = v46;
  }
  int v300 = v47;
  if (v325) {
    uint64_t v48 = v323;
  }
  else {
    uint64_t v48 = v323 + 1;
  }
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v50 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v255 = v49;
  uint64_t v51 = *(void *)(v49 + 64);
  uint64_t v52 = v21 | v10 | v31;
  uint64_t v332 = v21;
  uint64_t v267 = v23 + v21;
  uint64_t v268 = v23 + v31;
  uint64_t v53 = v23 + v50;
  if (!*(_DWORD *)(v49 + 84)) {
    ++v51;
  }
  unint64_t v54 = v51 + ((v23 + v50) & ~v50);
  unint64_t v55 = v52 + v23;
  unint64_t v56 = ((((v313 + 327 + ((v324 + v33 + ((v34 + ((v23 + v21) & ~v21)) & ~v31)) & ~v311)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v57 = v56 + ((v52 + v23) & ~v52);
  unint64_t v58 = ((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v59 = ((((((v48 + ((v57 + v302) & ~v302)) & ~v306) + v329 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v23 > v58) {
    unint64_t v58 = v23;
  }
  uint64_t v60 = v23 + v302;
  uint64_t v263 = v48;
  if (v59 <= ((v48 + (v60 & ~v302)) & ~v306) + v329 + 16) {
    unint64_t v59 = ((v48 + (v60 & ~v302)) & ~v306) + v329 + 16;
  }
  unint64_t v61 = ((v57 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v61 > v54) {
    unint64_t v54 = v61;
  }
  if (v58 <= v59) {
    unint64_t v62 = v59;
  }
  else {
    unint64_t v62 = v58;
  }
  if (v62 > v54) {
    unint64_t v54 = v62;
  }
  if (v54 + 1 <= v36 + 1) {
    unint64_t v63 = v36 + 1;
  }
  else {
    unint64_t v63 = v54 + 1;
  }
  unsigned int v64 = a1[v63];
  unsigned int v65 = v64 - 2;
  if (v64 >= 2)
  {
    if (v63 <= 3) {
      uint64_t v66 = v63;
    }
    else {
      uint64_t v66 = 4;
    }
    switch(v66)
    {
      case 1:
        int v67 = *a1;
        if (v63 < 4) {
          goto LABEL_77;
        }
        goto LABEL_78;
      case 2:
        int v67 = *(unsigned __int16 *)a1;
        if (v63 >= 4) {
          goto LABEL_78;
        }
        goto LABEL_77;
      case 3:
        int v67 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v63 >= 4) {
          goto LABEL_78;
        }
        goto LABEL_77;
      case 4:
        int v67 = *(_DWORD *)a1;
        if (v63 < 4) {
LABEL_77:
        }
          v67 |= v65 << (8 * v63);
LABEL_78:
        unsigned int v64 = v67 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v308 = ~v302;
  uint64_t v310 = ~v306;
  uint64_t v307 = ~v316;
  uint64_t v312 = ~v311;
  unint64_t v68 = v313 + 16;
  uint64_t v314 = ~v21;
  uint64_t v317 = ~v31;
  uint64_t v69 = ~v30;
  if (v64 == 1)
  {
    unsigned int v70 = a1[v54];
    unsigned int v71 = v70 - 8;
    if (v70 >= 8)
    {
      if (v54 <= 3) {
        uint64_t v72 = v54;
      }
      else {
        uint64_t v72 = 4;
      }
      switch(v72)
      {
        case 1:
          int v73 = *a1;
          if (v54 < 4) {
            goto LABEL_98;
          }
          goto LABEL_100;
        case 2:
          int v73 = *(unsigned __int16 *)a1;
          if (v54 >= 4) {
            goto LABEL_100;
          }
          goto LABEL_98;
        case 3:
          int v73 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v54 < 4) {
            goto LABEL_98;
          }
          goto LABEL_100;
        case 4:
          int v73 = *(_DWORD *)a1;
          if (v54 < 4) {
LABEL_98:
          }
            unsigned int v70 = (v73 | (v71 << (8 * v54))) + 8;
          else {
LABEL_100:
          }
            unsigned int v70 = v73 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v80 = ~v52;
    uint64_t v81 = ~v50;
    switch(v70)
    {
      case 1u:
        uint64_t v293 = v69;
        uint64_t v258 = v32;
        uint64_t v320 = v27;
        uint64_t v327 = ~v10;
        unint64_t v89 = v33;
        unint64_t v252 = v68;
        uint64_t v90 = *(void (**)(unsigned __int8 *, uint64_t))(v298 + 8);
        v90(a1, v297);
        unint64_t v91 = (unint64_t)&a1[v55] & v80;
        if (v301 == v300)
        {
          int v92 = (*(uint64_t (**)(unint64_t))(v298 + 48))((unint64_t)&a1[v55] & v80);
          unint64_t v93 = v89;
          uint64_t v94 = AssociatedTypeWitness;
          unint64_t v95 = v56;
          uint64_t v96 = v302;
          if (v92) {
            goto LABEL_265;
          }
LABEL_253:
          unint64_t v128 = (v267 + v91) & v314;
          unint64_t v129 = (v268 + v128) & v317;
          goto LABEL_254;
        }
        unint64_t v128 = (v267 + v91) & v314;
        unint64_t v129 = (v268 + v128) & v317;
        if (v305 == v300)
        {
          uint64_t v96 = v302;
          if (v277 == v305)
          {
            int v130 = (*(uint64_t (**)(unint64_t))(v285 + 48))((v268 + v128) & v317);
LABEL_251:
            unint64_t v93 = v89;
            goto LABEL_252;
          }
          uint64_t v161 = (unint64_t *)((v290 + v129) & 0xFFFFFFFFFFFFFFF8);
          if (v261 > 0x7FFFFFFE)
          {
            int v130 = (*(uint64_t (**)(unint64_t))(v320 + 48))(((unint64_t)v161 + v258) & v293);
            goto LABEL_251;
          }
          unint64_t v162 = *v161;
          if (v162 >= 0xFFFFFFFF) {
            LODWORD(v162) = -1;
          }
          BOOL v163 = (v162 + 1) >= 2;
          unint64_t v93 = v89;
        }
        else
        {
          unint64_t v93 = v89;
          unint64_t v146 = v89 + v129;
          uint64_t v96 = v302;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v147 = *(void *)(v146 + 8);
            if (v147 >= 0xFFFFFFFF) {
              LODWORD(v147) = -1;
            }
            int v130 = v147 + 1;
LABEL_252:
            uint64_t v94 = AssociatedTypeWitness;
            unint64_t v95 = v56;
            if (v130) {
              goto LABEL_265;
            }
            goto LABEL_253;
          }
          uint64_t v176 = (v279 + ((v324 + v146) & v312)) & v327;
          if (v247 > 0x7FFFFFFD)
          {
            int v130 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v176);
            goto LABEL_251;
          }
          unint64_t v246 = *(void *)(((v271 + ((v270 + v176) & v327)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v246 >= 0xFFFFFFFF) {
            LODWORD(v246) = -1;
          }
          BOOL v163 = (v246 + 1) >= 2;
        }
        uint64_t v94 = AssociatedTypeWitness;
        unint64_t v95 = v56;
        if (v163) {
          goto LABEL_265;
        }
LABEL_254:
        unint64_t v189 = v93;
        v90((unsigned __int8 *)v91, v297);
        v90((unsigned __int8 *)v128, v297);
        (*(void (**)(unint64_t, uint64_t))(v285 + 8))(v129, v284);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v320 + 8))((v258 + ((v290 + v129) & 0xFFFFFFFFFFFFFFF8)) & v293, v280);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v190 = (v324 + v189 + v129) & v312;
        unint64_t v191 = *(void (**)(uint64_t, uint64_t))(v272 + 8);
        v191((v279 + v190) & v327, v273);
        uint64_t v192 = (v270 + ((v279 + v190) & v327)) & v327;
        v191(v192, v273);
        swift_bridgeObjectRelease();
        unint64_t v193 = (v265
              + ((((((v271 + v192) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v327;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v193, 1, v273)) {
          v191(v193, v273);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v194 = (uint64_t *)((((((v266 + v193) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v195 = v194[1];
        if ((v195 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v194, v195);
        }
        swift_bridgeObjectRelease();
        unint64_t v196 = v190 + v252;
        LODWORD(v197) = -1;
        if (*(void *)(v190 + v252 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v197 = *(void *)(v190 + v252 + 16);
        }
        uint64_t v96 = v302;
        if ((int)v197 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v196 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v196 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v196 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v95 = v56;
LABEL_265:
        unint64_t v198 = (v91 + v96 + v95) & v308;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v330 + 48))(v198, 1, v94)) {
          (*(void (**)(unint64_t, uint64_t))(v330 + 8))(v198, v94);
        }
        unint64_t v199 = (v263 + v198) & v310;
        if (v278 == v288)
        {
          if ((*(unsigned int (**)(unint64_t))(v287 + 48))(v199)) {
            goto LABEL_278;
          }
LABEL_276:
          unint64_t v200 = (uint64_t *)((v289 + v199) & 0xFFFFFFFFFFFFFFF8);
LABEL_277:
          (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v199, v286);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v276 + 8))(((unint64_t)v200 + v274) & v307, v275);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_278;
        }
        unint64_t v200 = (uint64_t *)((v289 + v199) & 0xFFFFFFFFFFFFFFF8);
        if (v262 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v276 + 48))(((unint64_t)v200 + v274) & v307, v248, v275))
          {
            goto LABEL_278;
          }
          goto LABEL_276;
        }
        uint64_t v201 = *v200;
        if ((unint64_t)*v200 >= 0xFFFFFFFF) {
          LODWORD(v201) = -1;
        }
        if ((v201 + 1) < 2) {
          goto LABEL_277;
        }
LABEL_278:
        unint64_t v202 = v199 + v329;
LABEL_339:
        unint64_t v188 = v202 + 15;
        goto LABEL_340;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v298 + 8))(a1, v297);
        unint64_t v97 = (unint64_t)&a1[v60] & v308;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v330 + 48))(v97, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v330 + 8))(v97, AssociatedTypeWitness); {
        unint64_t v98 = (v263 + v97) & v310;
        }
        if (v278 == v288)
        {
          if ((*(unsigned int (**)(unint64_t))(v287 + 48))(v98)) {
            goto LABEL_184;
          }
LABEL_182:
          uint64_t v131 = (uint64_t *)((v289 + v98) & 0xFFFFFFFFFFFFFFF8);
LABEL_183:
          (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v98, v286);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v276 + 8))(((unint64_t)v131 + v274) & v307, v275);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_184;
        }
        uint64_t v131 = (uint64_t *)((v289 + v98) & 0xFFFFFFFFFFFFFFF8);
        if (v262 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v276 + 48))(((unint64_t)v131 + v274) & v307, v248, v275))
          {
            goto LABEL_184;
          }
          goto LABEL_182;
        }
        uint64_t v132 = *v131;
        if ((unint64_t)*v131 >= 0xFFFFFFFF) {
          LODWORD(v132) = -1;
        }
        if ((v132 + 1) < 2) {
          goto LABEL_183;
        }
LABEL_184:
        unint64_t v148 = v98 + v329;
        goto LABEL_202;
      case 3u:
        uint64_t v294 = v69;
        uint64_t v259 = v32;
        uint64_t v321 = v27;
        uint64_t v328 = ~v10;
        unint64_t v99 = v33;
        unint64_t v253 = v68;
        uint64_t v100 = *(void (**)(unsigned __int8 *, uint64_t))(v298 + 8);
        v100(a1, v297);
        unint64_t v101 = (unint64_t)&a1[v55] & v80;
        if (v301 == v300)
        {
          int v102 = (*(uint64_t (**)(unint64_t))(v298 + 48))(v101);
LABEL_280:
          unint64_t v149 = v99;
LABEL_281:
          if (v102) {
            goto LABEL_358;
          }
          unint64_t v133 = (v267 + v101) & v314;
          unint64_t v134 = (v268 + v133) & v317;
          goto LABEL_283;
        }
        unint64_t v133 = (v267 + v101) & v314;
        unint64_t v134 = (v268 + v133) & v317;
        if (v305 == v300)
        {
          if (v277 == v305)
          {
            int v102 = (*(uint64_t (**)(unint64_t))(v285 + 48))((v268 + v133) & v317);
            goto LABEL_280;
          }
          int v164 = (unint64_t *)((v290 + v134) & 0xFFFFFFFFFFFFFFF8);
          if (v261 > 0x7FFFFFFE)
          {
            int v102 = (*(uint64_t (**)(unint64_t))(v321 + 48))(((unint64_t)v164 + v259) & v294);
            goto LABEL_280;
          }
          unint64_t v165 = *v164;
          if (v165 >= 0xFFFFFFFF) {
            LODWORD(v165) = -1;
          }
          BOOL v166 = (v165 + 1) >= 2;
          unint64_t v149 = v99;
        }
        else
        {
          unint64_t v149 = v99;
          unint64_t v150 = v99 + v134;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v151 = *(void *)(v150 + 8);
            if (v151 >= 0xFFFFFFFF) {
              LODWORD(v151) = -1;
            }
            int v102 = v151 + 1;
            goto LABEL_281;
          }
          uint64_t v173 = (v279 + ((v324 + v150) & v312)) & v328;
          if (v247 > 0x7FFFFFFD)
          {
            int v102 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v173);
            goto LABEL_280;
          }
          unint64_t v245 = *(void *)(((v271 + ((v270 + v173) & v328)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v245 >= 0xFFFFFFFF) {
            LODWORD(v245) = -1;
          }
          BOOL v166 = (v245 + 1) >= 2;
        }
        if (v166) {
          goto LABEL_358;
        }
LABEL_283:
        unint64_t v203 = v149;
        v100((unsigned __int8 *)v101, v297);
        v100((unsigned __int8 *)v133, v297);
        (*(void (**)(unint64_t, uint64_t))(v285 + 8))(v134, v284);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v321 + 8))((v259 + ((v290 + v134) & 0xFFFFFFFFFFFFFFF8)) & v294, v280);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v204 = (v324 + v203 + v134) & v312;
        unint64_t v205 = *(void (**)(uint64_t, uint64_t))(v272 + 8);
        v205((v279 + v204) & v328, v273);
        uint64_t v206 = (v270 + ((v279 + v204) & v328)) & v328;
        v205(v206, v273);
        swift_bridgeObjectRelease();
        unint64_t v207 = (v265
              + ((((((v271 + v206) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v328;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v207, 1, v273)) {
          v205(v207, v273);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v208 = (uint64_t *)((((((v266 + v207) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v209 = v208[1];
        if ((v209 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v208, v209);
        }
        swift_bridgeObjectRelease();
        unint64_t v210 = v204 + v253;
        LODWORD(v211) = -1;
        if (*(void *)(v204 + v253 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v211 = *(void *)(v204 + v253 + 16);
        }
        if ((int)v211 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v210 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v210 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v210 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_358;
      case 4u:
      case 5u:
      case 7u:
        uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v298 + 8);
        uint64_t v83 = a1;
        uint64_t v84 = v297;
        goto LABEL_125;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v298 + 8))(a1, v297);
        unint64_t v103 = (unint64_t)&a1[v53] & v81;
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v255 + 48))(v103, 1, v45)) {
          return;
        }
        uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v255 + 8);
        uint64_t v83 = (unsigned __int8 *)v103;
        uint64_t v84 = v45;
        goto LABEL_170;
      default:
        uint64_t v292 = v69;
        uint64_t v257 = v32;
        uint64_t v319 = v27;
        uint64_t v326 = ~v10;
        unint64_t v85 = v33;
        unint64_t v251 = v68;
        int v86 = *(void (**)(unsigned __int8 *, uint64_t))(v298 + 8);
        v86(a1, v297);
        unint64_t v87 = (unint64_t)&a1[v55] & v80;
        if (v301 == v300)
        {
          int v88 = (*(uint64_t (**)(unint64_t))(v298 + 48))(v87);
LABEL_236:
          unint64_t v179 = v56;
          if (v88) {
            goto LABEL_249;
          }
          unint64_t v126 = (v267 + v87) & v314;
          unint64_t v127 = (v268 + v126) & v317;
          goto LABEL_238;
        }
        unint64_t v126 = (v267 + v87) & v314;
        unint64_t v127 = (v268 + v126) & v317;
        if (v305 == v300)
        {
          if (v277 == v305)
          {
            int v88 = (*(uint64_t (**)(unint64_t))(v285 + 48))((v268 + v126) & v317);
            goto LABEL_236;
          }
          int v159 = (unint64_t *)((v290 + v127) & 0xFFFFFFFFFFFFFFF8);
          if (v261 > 0x7FFFFFFE)
          {
            int v88 = (*(uint64_t (**)(unint64_t))(v319 + 48))(((unint64_t)v159 + v257) & v292);
            goto LABEL_236;
          }
          unint64_t v160 = *v159;
        }
        else
        {
          unint64_t v144 = v85 + v127;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v145 = *(void *)(v144 + 8);
            if (v145 >= 0xFFFFFFFF) {
              LODWORD(v145) = -1;
            }
            int v88 = v145 + 1;
            goto LABEL_236;
          }
          uint64_t v175 = (v279 + ((v324 + v144) & v312)) & v326;
          if (v247 > 0x7FFFFFFD)
          {
            int v88 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v175);
            goto LABEL_236;
          }
          unint64_t v160 = *(void *)(((v271 + ((v270 + v175) & v326)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v160 >= 0xFFFFFFFF) {
          LODWORD(v160) = -1;
        }
        BOOL v163 = (v160 + 1) >= 2;
        unint64_t v179 = v56;
        if (!v163)
        {
LABEL_238:
          v86((unsigned __int8 *)v87, v297);
          v86((unsigned __int8 *)v126, v297);
          (*(void (**)(unint64_t, uint64_t))(v285 + 8))(v127, v284);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v319 + 8))((v257 + ((v290 + v127) & 0xFFFFFFFFFFFFFFF8)) & v292, v280);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v180 = (v324 + v85 + v127) & v312;
          unint64_t v181 = *(void (**)(unint64_t, uint64_t))(v272 + 8);
          v181((v279 + v180) & v326, v273);
          unint64_t v182 = (v270 + ((v279 + v180) & v326)) & v326;
          v181(v182, v273);
          swift_bridgeObjectRelease();
          unint64_t v183 = (v265
                + ((((((v271 + v182) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v326;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v183, 1, v273)) {
            v181(v183, v273);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v184 = (uint64_t *)((((((v266 + v183) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v185 = v184[1];
          if ((v185 & 0x3000000000000000) == 0) {
            sub_10001E9C0(*v184, v185);
          }
          swift_bridgeObjectRelease();
          unint64_t v186 = v180 + v251;
          LODWORD(v187) = -1;
          if (*(void *)(v180 + v251 + 16) < 0xFFFFFFFFuLL) {
            uint64_t v187 = *(void *)(v180 + v251 + 16);
          }
          if ((int)v187 - 1 < 0)
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v186 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1000CF144(*(void *)((((v186 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v186 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v179 = v56;
        }
LABEL_249:
        unint64_t v188 = v87 + v179;
        break;
    }
    goto LABEL_340;
  }
  unsigned int v74 = a1[v36];
  unsigned int v75 = v74 - 8;
  if (v74 < 8)
  {
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v78 = v291;
  }
  else
  {
    if (v36 <= 3) {
      uint64_t v76 = v36;
    }
    else {
      uint64_t v76 = 4;
    }
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v78 = v291;
    switch(v76)
    {
      case 1:
        int v79 = *a1;
        if (v36 < 4) {
          goto LABEL_120;
        }
        goto LABEL_122;
      case 2:
        int v79 = *(unsigned __int16 *)a1;
        if (v36 >= 4) {
          goto LABEL_122;
        }
        goto LABEL_120;
      case 3:
        int v79 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v36 < 4) {
          goto LABEL_120;
        }
        goto LABEL_122;
      case 4:
        int v79 = *(_DWORD *)a1;
        if (v36 < 4) {
LABEL_120:
        }
          unsigned int v74 = (v79 | (v75 << (8 * v36))) + 8;
        else {
LABEL_122:
        }
          unsigned int v74 = v79 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v295 = v69;
  uint64_t v104 = ~v78;
  uint64_t v105 = ~v39;
  uint64_t v106 = ~v10;
  switch(v74)
  {
    case 1u:
      uint64_t v260 = v32;
      uint64_t v322 = v27;
      uint64_t v111 = v77;
      unint64_t v112 = v33;
      unint64_t v254 = v68;
      unint64_t v113 = *(void (**)(unsigned __int8 *, uint64_t))(v330 + 8);
      v113(a1, v111);
      unint64_t v114 = (unint64_t)&a1[v281] & v104;
      if (v325 == v282)
      {
        int v115 = (*(uint64_t (**)(unint64_t))(v330 + 48))(v114);
LABEL_311:
        if (v115) {
          goto LABEL_324;
        }
        unint64_t v137 = (v269 + v114) & v308;
        unint64_t v138 = (v323 + v137) & v310;
        goto LABEL_313;
      }
      unint64_t v137 = (v269 + v114) & v308;
      unint64_t v138 = (v323 + v137) & v310;
      if (v288 == v282)
      {
        if (v278 == v288)
        {
          int v115 = (*(uint64_t (**)(unint64_t))(v287 + 48))((v323 + v137) & v310);
          goto LABEL_311;
        }
        unint64_t v169 = (unint64_t *)((v289 + v138) & 0xFFFFFFFFFFFFFFF8);
        if (v262 > 0x7FFFFFFE)
        {
          int v115 = (*(uint64_t (**)(unint64_t))(v276 + 48))(((unint64_t)v169 + v274) & v307);
          goto LABEL_311;
        }
        unint64_t v170 = *v169;
      }
      else
      {
        unint64_t v154 = v329 + v138;
        if ((v249 & 0x80000000) == 0)
        {
          unint64_t v155 = *(void *)(v154 + 8);
          if (v155 >= 0xFFFFFFFF) {
            LODWORD(v155) = -1;
          }
          int v115 = v155 + 1;
          goto LABEL_311;
        }
        uint64_t v178 = (v279 + ((v324 + v154) & v312)) & v106;
        if (v247 > 0x7FFFFFFD)
        {
          int v115 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v178);
          goto LABEL_311;
        }
        unint64_t v170 = *(void *)(((v271 + ((v270 + v178) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v170 >= 0xFFFFFFFF) {
        LODWORD(v170) = -1;
      }
      if ((v170 + 1) >= 2)
      {
LABEL_324:
        unint64_t v230 = (v114 + v332 + v283) & v314;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v298 + 48))(v230, 1, v297)) {
          (*(void (**)(unint64_t, uint64_t))(v298 + 8))(v230, v297);
        }
        unint64_t v231 = (v264 + v230) & v317;
        if (v277 == v305)
        {
          int v232 = (*(uint64_t (**)(unint64_t))(v285 + 48))(v231);
        }
        else
        {
          unint64_t v233 = (uint64_t *)((v290 + v231) & 0xFFFFFFFFFFFFFFF8);
          if (v261 <= 0x7FFFFFFE)
          {
            uint64_t v234 = *v233;
            if ((unint64_t)*v233 >= 0xFFFFFFFF) {
              LODWORD(v234) = -1;
            }
            BOOL v163 = (v234 + 1) >= 2;
            unint64_t v235 = v112;
            if (v163) {
              goto LABEL_338;
            }
            goto LABEL_337;
          }
          int v232 = (*(uint64_t (**)(unint64_t))(v322 + 48))(((unint64_t)v233 + v260) & v295);
        }
        unint64_t v235 = v112;
        if (v232)
        {
LABEL_338:
          unint64_t v202 = v231 + v235;
          goto LABEL_339;
        }
        unint64_t v233 = (uint64_t *)((v290 + v231) & 0xFFFFFFFFFFFFFFF8);
LABEL_337:
        (*(void (**)(unint64_t, uint64_t))(v285 + 8))(v231, v284);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v322 + 8))(((unint64_t)v233 + v260) & v295, v280);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v235 = v112;
        goto LABEL_338;
      }
LABEL_313:
      v113((unsigned __int8 *)v114, AssociatedTypeWitness);
      v113((unsigned __int8 *)v137, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v138, v286);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v276 + 8))((v274 + ((v289 + v138) & 0xFFFFFFFFFFFFFFF8)) & v307, v275);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v221 = (v324 + v329 + v138) & v312;
      unint64_t v222 = (v279 + v221) & v106;
      uint64_t v223 = *(void (**)(unint64_t, uint64_t))(v272 + 8);
      v223(v222, v273);
      unint64_t v224 = (v270 + v222) & v106;
      v223(v224, v273);
      swift_bridgeObjectRelease();
      unint64_t v225 = (v265
            + ((((((v271 + v224) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v225, 1, v273)) {
        v223(v225, v273);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      size_t v226 = (uint64_t *)((((((v266 + v225) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v227 = v226[1];
      if ((v227 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v226, v227);
      }
      swift_bridgeObjectRelease();
      unint64_t v228 = v254 + v221;
      LODWORD(v229) = -1;
      if (*(void *)(v228 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v229 = *(void *)(v228 + 16);
      }
      if ((int)v229 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v228 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v228 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v228 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_324;
    case 2u:
      uint64_t v116 = v32;
      uint64_t v117 = v27;
      unint64_t v118 = v33;
      (*(void (**)(unsigned __int8 *, uint64_t))(v330 + 8))(a1, v77);
      unint64_t v119 = (unint64_t)&a1[v250] & v314;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v298 + 48))(v119, 1, v297)) {
        (*(void (**)(unint64_t, uint64_t))(v298 + 8))(v119, v297);
      }
      unint64_t v120 = (v264 + v119) & v317;
      if (v277 == v305)
      {
        int v121 = (*(uint64_t (**)(unint64_t))(v285 + 48))(v120);
      }
      else
      {
        long long v139 = (uint64_t *)((v290 + v120) & 0xFFFFFFFFFFFFFFF8);
        if (v261 <= 0x7FFFFFFE)
        {
          uint64_t v140 = *v139;
          if ((unint64_t)*v139 >= 0xFFFFFFFF) {
            LODWORD(v140) = -1;
          }
          BOOL v163 = (v140 + 1) >= 2;
          unint64_t v141 = v118;
          if (v163)
          {
LABEL_201:
            unint64_t v148 = v141 + v120;
LABEL_202:
            unint64_t v156 = *(void **)(v148 + 8);
            goto LABEL_341;
          }
LABEL_200:
          (*(void (**)(unint64_t, uint64_t))(v285 + 8))(v120, v284);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v117 + 8))(((unint64_t)v139 + v116) & v295, v280);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v141 = v118;
          goto LABEL_201;
        }
        int v121 = (*(uint64_t (**)(unint64_t))(v117 + 48))(((unint64_t)v139 + v116) & v295);
      }
      unint64_t v141 = v118;
      if (v121) {
        goto LABEL_201;
      }
      long long v139 = (uint64_t *)((v290 + v120) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_200;
    case 3u:
      unint64_t v122 = v68;
      unint64_t v123 = *(void (**)(unsigned __int8 *, uint64_t))(v330 + 8);
      v123(a1, v77);
      unint64_t v124 = (unint64_t)&a1[v281] & v104;
      if (v325 == v282)
      {
        int v125 = (*(uint64_t (**)(unint64_t))(v330 + 48))(v124);
LABEL_345:
        if (v125) {
          goto LABEL_358;
        }
        unint64_t v142 = (v269 + v124) & v308;
        unint64_t v143 = (v323 + v142) & v310;
        goto LABEL_347;
      }
      unint64_t v142 = (v269 + v124) & v308;
      unint64_t v143 = (v323 + v142) & v310;
      if (v288 == v282)
      {
        if (v278 == v288)
        {
          int v125 = (*(uint64_t (**)(unint64_t))(v287 + 48))((v323 + v142) & v310);
          goto LABEL_345;
        }
        unint64_t v171 = (unint64_t *)((v289 + v143) & 0xFFFFFFFFFFFFFFF8);
        if (v262 > 0x7FFFFFFE)
        {
          int v125 = (*(uint64_t (**)(unint64_t))(v276 + 48))(((unint64_t)v171 + v274) & v307);
          goto LABEL_345;
        }
        unint64_t v172 = *v171;
      }
      else
      {
        unint64_t v157 = v329 + v143;
        if ((v249 & 0x80000000) == 0)
        {
          unint64_t v158 = *(void *)(v157 + 8);
          if (v158 >= 0xFFFFFFFF) {
            LODWORD(v158) = -1;
          }
          int v125 = v158 + 1;
          goto LABEL_345;
        }
        uint64_t v174 = (v279 + ((v324 + v157) & v312)) & v106;
        if (v247 > 0x7FFFFFFD)
        {
          int v125 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v174);
          goto LABEL_345;
        }
        unint64_t v172 = *(void *)(((v271 + ((v270 + v174) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v172 >= 0xFFFFFFFF) {
        LODWORD(v172) = -1;
      }
      if ((v172 + 1) < 2)
      {
LABEL_347:
        v123((unsigned __int8 *)v124, v77);
        v123((unsigned __int8 *)v142, v77);
        (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v143, v286);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v276 + 8))((v274 + ((v289 + v143) & 0xFFFFFFFFFFFFFFF8)) & v307, v275);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v236 = (v324 + v329 + v143) & v312;
        unint64_t v237 = (v279 + v236) & v106;
        long long v238 = *(void (**)(unint64_t, uint64_t))(v272 + 8);
        v238(v237, v273);
        unint64_t v239 = (v270 + v237) & v106;
        v238(v239, v273);
        swift_bridgeObjectRelease();
        unint64_t v240 = (v265
              + ((((((v271 + v239) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v240, 1, v273)) {
          v238(v240, v273);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        size_t v241 = (uint64_t *)((((((v266 + v240) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v242 = v241[1];
        if ((v242 & 0x3000000000000000) == 0) {
          sub_10001E9C0(*v241, v242);
        }
        swift_bridgeObjectRelease();
        unint64_t v243 = v122 + v236;
        LODWORD(v244) = -1;
        if (*(void *)(v122 + v236 + 16) < 0xFFFFFFFFuLL) {
          uint64_t v244 = *(void *)(v122 + v236 + 16);
        }
        if ((int)v244 - 1 < 0)
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v243 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CF144(*(void *)((((v243 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v243 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      }
LABEL_358:
      swift_bridgeObjectRelease();
      return;
    case 4u:
    case 5u:
    case 7u:
      uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v330 + 8);
      uint64_t v83 = a1;
      uint64_t v84 = v77;
LABEL_125:
      goto LABEL_127;
    case 6u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v330 + 8))(a1, v77);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v256 + 48))((unint64_t)&a1[v40] & v105, 1, v318))
      {
        return;
      }
      uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v256 + 8);
      uint64_t v83 = (unsigned __int8 *)((unint64_t)&a1[v40] & v105);
      uint64_t v84 = v318;
LABEL_170:
LABEL_127:
      v82(v83, v84);
      return;
    default:
      unint64_t v107 = v68;
      uint64_t v108 = *(void (**)(unsigned __int8 *, uint64_t))(v330 + 8);
      v108(a1, v77);
      unint64_t v109 = (unint64_t)&a1[v281] & v104;
      if (v325 == v282)
      {
        int v110 = (*(uint64_t (**)(unint64_t))(v330 + 48))(v109);
LABEL_296:
        if (v110) {
          goto LABEL_309;
        }
        unint64_t v135 = (v269 + v109) & v308;
        unint64_t v136 = (v323 + v135) & v310;
        goto LABEL_298;
      }
      unint64_t v135 = (v269 + v109) & v308;
      unint64_t v136 = (v323 + v135) & v310;
      if (v288 == v282)
      {
        if (v278 == v288)
        {
          int v110 = (*(uint64_t (**)(unint64_t))(v287 + 48))((v323 + v135) & v310);
          goto LABEL_296;
        }
        size_t v167 = (unint64_t *)((v289 + v136) & 0xFFFFFFFFFFFFFFF8);
        if (v262 > 0x7FFFFFFE)
        {
          int v110 = (*(uint64_t (**)(unint64_t))(v276 + 48))(((unint64_t)v167 + v274) & v307);
          goto LABEL_296;
        }
        unint64_t v168 = *v167;
      }
      else
      {
        unint64_t v152 = v329 + v136;
        if ((v249 & 0x80000000) == 0)
        {
          unint64_t v153 = *(void *)(v152 + 8);
          if (v153 >= 0xFFFFFFFF) {
            LODWORD(v153) = -1;
          }
          int v110 = v153 + 1;
          goto LABEL_296;
        }
        uint64_t v177 = (v279 + ((v324 + v152) & v312)) & v106;
        if (v247 > 0x7FFFFFFD)
        {
          int v110 = (*(uint64_t (**)(uint64_t))(v272 + 48))(v177);
          goto LABEL_296;
        }
        unint64_t v168 = *(void *)(((v271 + ((v270 + v177) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v168 >= 0xFFFFFFFF) {
        LODWORD(v168) = -1;
      }
      if ((v168 + 1) >= 2)
      {
LABEL_309:
        unint64_t v188 = v109 + v283;
LABEL_340:
        unint64_t v156 = *(void **)(((v188 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_341:

        return;
      }
LABEL_298:
      v108((unsigned __int8 *)v109, v77);
      v108((unsigned __int8 *)v135, v77);
      (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v136, v286);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v276 + 8))((v274 + ((v289 + v136) & 0xFFFFFFFFFFFFFFF8)) & v307, v275);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v212 = (v324 + v329 + v136) & v312;
      unint64_t v213 = (v279 + v212) & v106;
      unint64_t v214 = *(void (**)(unint64_t, uint64_t))(v272 + 8);
      v214(v213, v273);
      unint64_t v215 = (v270 + v213) & v106;
      v214(v215, v273);
      swift_bridgeObjectRelease();
      unint64_t v216 = (v265
            + ((((((v271 + v215) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v272 + 48))(v216, 1, v273)) {
        v214(v216, v273);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v217 = (uint64_t *)((((((v266 + v216) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v218 = v217[1];
      if ((v218 & 0x3000000000000000) == 0) {
        sub_10001E9C0(*v217, v218);
      }
      swift_bridgeObjectRelease();
      unint64_t v219 = v107 + v212;
      LODWORD(v220) = -1;
      if (*(void *)(v107 + v212 + 16) < 0xFFFFFFFFuLL) {
        uint64_t v220 = *(void *)(v107 + v212 + 16);
      }
      if ((int)v220 - 1 < 0)
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v219 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1000CF144(*(void *)((((v219 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v219 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_309;
  }
}