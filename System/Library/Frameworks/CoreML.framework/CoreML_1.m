uint64_t sub_19E632808(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  const void *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    v9 = a2 - __src;
  }
  v10 = v9 >> 4;
  v11 = a3 - (void)a2;
  v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    v12 = a3 - (void)a2;
  }
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      v18 = &v4[16 * v13];
      v23 = v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (char *)(a3 - 16);
        do
        {
          v20 = v19 + 16;
          if (*((void *)v18 - 1) >= *((void *)v6 - 1))
          {
            v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            }
            v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)v19 = *(_OWORD *)v21;
            }
            v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_19E632B90((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    v14 = &v4[16 * v10];
    v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (*((void *)v6 + 1) >= *((void *)v15 + 1))
        {
          v4 = v15 + 16;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_19EBF7278();
  __break(1u);
  return result;
}

char *sub_19E632A94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1E945B970);
    v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E4FBC860];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_19E632B90(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    result = (char *)sub_19EBF7278();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_19E632C4C(void **a1, const void **a2, void *a3)
{
  v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    result = (char *)sub_19EBF7278();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_19E632D08(uint64_t a1)
{
  return sub_19E632A94(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19E632D1C(int64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v11 = (void *)sub_19E6CD3E0(a1, a2);
  sub_19E6320CC((uint64_t *)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v11[2];
  if (!v4)
  {
    BOOL v8 = 1;
LABEL_10:
    swift_release();
    return v8;
  }
  if (v11[5] != 1)
  {
    BOOL v8 = 0;
    goto LABEL_10;
  }
  uint64_t v5 = v11 + 4;
  uint64_t v6 = 1;
  while (1)
  {
    uint64_t v7 = *v5 * v6;
    if ((unsigned __int128)(*v5 * (__int128)v6) >> 64 != v7 >> 63) {
      break;
    }
    BOOL v8 = --v4 == 0;
    if (v4)
    {
      uint64_t v9 = v5[3];
      v5 += 2;
      uint64_t v6 = v7;
      if (v9 == v7) {
        continue;
      }
    }
    goto LABEL_10;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_19E632E08(int64_t a1, uint64_t a2)
{
  if (sub_19E632D1C(a1, a2))
  {
    uint64_t v3 = sub_19E63A870(1, a2);
    uint64_t v4 = *(void *)(a2 + 16);
    v10[0] = v3;
    v10[1] = v5;
    v10[2] = v6;
    v10[3] = v7;
    v10[4] = a2;
    v10[5] = a2 + 32;
    v10[6] = v4 != 0;
    v10[7] = (2 * v4) | 1;
    swift_bridgeObjectRetain_n();
    unsigned __int8 v8 = sub_19E6314EC(v10);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_19E632EB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E632EE8()
{
  type metadata accessor for ComputeStreams();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_19E650F58(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C668);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  off_1E945C640 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_19E632F50()
{
  uint64_t result = sub_19E632F70();
  qword_1E946A530 = result;
  return result;
}

uint64_t sub_19E632F70()
{
  uint64_t v0 = _s6CoreML15MLComputeDeviceO17allComputeDevicesSayACGvgZ_0();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (id *)(v0 + 40);
    uint64_t v4 = (id *)(v0 + 40);
    do
    {
      int v5 = *(unsigned __int8 *)v4;
      v4 += 2;
      if (!v5)
      {
        id v6 = *(v3 - 1);
        MEMORY[0x19F3BF1F0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_19EBF6948();
        }
        sub_19EBF6998();
        sub_19EBF6908();
      }
      uint64_t v3 = v4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    unint64_t v1 = v10;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_19EBF7228();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x19F3BF970](0, v1);
    goto LABEL_14;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v1 + 32);
LABEL_14:
    uint64_t v8 = (uint64_t)v9;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_19E6330DC()
{
  id result = sub_19E6330FC();
  qword_1E946A538 = (uint64_t)result;
  return result;
}

id sub_19E6330FC()
{
  uint64_t v0 = _s6CoreML15MLComputeDeviceO17allComputeDevicesSayACGvgZ_0();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (id *)(v0 + 40);
    uint64_t v4 = (id *)(v0 + 40);
    do
    {
      int v5 = *(unsigned __int8 *)v4;
      v4 += 2;
      if (v5 == 1)
      {
        id v6 = *(v3 - 1);
        id result = objc_msgSend(v6, sel_metalDevice);
        if (!result) {
          goto LABEL_27;
        }
        uint64_t v8 = result;
        if (qword_1E945BB30 != -1) {
          swift_once();
        }
        if (byte_1E946A4F2 == 1)
        {
          BOOL v9 = MPSSupportsMTLDevice(v8);

          uint64_t v10 = swift_unknownObjectRelease();
          if (v9)
          {
            MEMORY[0x19F3BF1F0](v10);
            if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_19EBF6948();
            }
            sub_19EBF6998();
            sub_19EBF6908();
          }
          else
          {
          }
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      uint64_t v3 = v4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    unint64_t v1 = v14;
  }
  id result = (id)swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_19EBF7228();
  id result = (id)swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_23;
  }
LABEL_18:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x19F3BF970](0, v1);
    goto LABEL_21;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v1 + 32);
LABEL_21:
    id v12 = v11;
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_19E633328(void **a1@<X0>, uint64_t a2@<X8>)
{
  v113 = (uint64_t *)a2;
  uint64_t v3 = sub_19EBF6558();
  uint64_t v107 = *(void *)(v3 - 8);
  uint64_t v108 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  v100 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v101 = (char *)&v96 - v6;
  uint64_t v7 = sub_19EBF6528();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v106 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v96 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  v112 = (char *)&v96 - v15;
  MEMORY[0x1F4188790](v14);
  v110 = (char *)&v96 - v16;
  v17 = *a1;
  if (qword_1E945BB58 != -1) {
    swift_once();
  }
  v18 = off_1E945C640;
  v19 = (os_unfair_lock_s *)((char *)off_1E945C640 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1E945C640 + 6);
  uint64_t v20 = v18[2];
  if ((unint64_t)v17 > 1)
  {
    id v21 = v17;
    id v22 = objc_msgSend(v21, sel_metalDevice);
    if (v22)
    {
      v23 = v22;
      if (qword_1E945BB30 != -1) {
        swift_once();
      }
      if (byte_1E946A4F2 == 1)
      {
        BOOL v24 = MPSSupportsMTLDevice(v23);
        swift_unknownObjectRelease();
        if (v24) {
          goto LABEL_17;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    if (qword_1E945BB60 != -1) {
      swift_once();
    }
    id v21 = (id)qword_1E946A530;
    sub_19E601010(v17);
  }
  else
  {
    if (qword_1E945BB60 != -1) {
      swift_once();
    }
    id v21 = (id)qword_1E946A530;
  }
LABEL_17:
  id v109 = v13;
  swift_unknownObjectRetain();
  MLComputeDevice.init(device:)((uint64_t)&v117);
  v25 = (void *)v117;
  int v26 = BYTE8(v117);
  uint64_t v27 = v20 + 16;
  swift_beginAccess();
  uint64_t v28 = *(void *)(v20 + 16);
  if (*(void *)(v28 + 16))
  {
    id v29 = v25;
    unint64_t v30 = sub_19E6628F8(v25, v26);
    if (v31)
    {
      sub_19E5FE124(*(void *)(v28 + 56) + 40 * v30, (uint64_t)&v114);
    }
    else
    {
      uint64_t v116 = 0;
      long long v114 = 0u;
      long long v115 = 0u;
    }

    if (*((void *)&v115 + 1))
    {
      sub_19E5FE188(&v114, (uint64_t)&v117);
      swift_endAccess();
      swift_unknownObjectRelease();

      sub_19E5FE188(&v117, (uint64_t)v113);
LABEL_48:
      os_unfair_lock_unlock(v19);
      return;
    }
  }
  else
  {
    uint64_t v116 = 0;
    long long v114 = 0u;
    long long v115 = 0u;
  }
  uint64_t v111 = v7;
  sub_19E63462C((uint64_t)&v114);
  swift_endAccess();
  if (qword_1E945BB50 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_19EBF6548();
  uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E946A518);
  v34 = v110;
  sub_19EBF6518();
  uint64_t v102 = v33;
  v35 = sub_19EBF6538();
  os_signpost_type_t v36 = sub_19EBF6D78();
  char v37 = sub_19EBF6E18();
  v105 = v19;
  int v104 = v26;
  uint64_t v103 = v27;
  if (v37)
  {
    v99 = (void (*)(char *, id, uint64_t))v21;
    v38 = v25;
    v39 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    unint64_t v40 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v41 = v112;
    v42 = v34;
    v43 = v34;
    uint64_t v44 = v111;
    v39(v112, v42, v111);
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    os_signpost_id_t v46 = sub_19EBF6508();
    os_signpost_type_t v47 = v36;
    v48 = v41;
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v35, v47, v46, "Compute stream creation", "", v45, 2u);
    v49 = v45;
    v50 = v39;
    v25 = v38;
    MEMORY[0x19F3C3580](v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v44);
  }
  else
  {

    v50 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    unint64_t v40 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v43 = v34;
    uint64_t v44 = v111;
    v48 = v112;
  }
  v50(v48, v43, v44);
  sub_19EBF6588();
  swift_allocObject();
  v110 = (char *)sub_19EBF6578();
  v51 = *(void (**)(char *, uint64_t))(v8 + 8);
  v51(v43, v44);
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  v99 = (void (*)(char *, id, uint64_t))v50;
  unint64_t v98 = v40;
  if (v52)
  {
    v53 = (void *)v52;
    uint64_t v54 = type metadata accessor for MetalComputeStream();
    uint64_t v55 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C658);
    uint64_t v56 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C660);
    uint64_t v57 = swift_allocObject();
    *(_DWORD *)(v57 + 16) = 0;
    *(void *)(v56 + 16) = v57;
    swift_unknownObjectRetain_n();
    *(void *)(v56 + 24) = sub_19E6510A4(MEMORY[0x1E4FBC860]);
    *(void *)(v55 + 24) = v56;
    id v58 = objc_msgSend(v53, sel_metalDevice);
    if (v58)
    {
      v59 = v58;
      type metadata accessor for MetalDevice();
      swift_allocObject();
      uint64_t v60 = sub_19E64813C(v59);
      if (v60)
      {
        uint64_t v61 = v60;
        swift_unknownObjectRelease();
        *(void *)(v55 + 16) = v61;
        uint64_t v118 = v54;
        v119 = &off_1EF0C81D8;
        *(void *)&long long v117 = v55;
        swift_beginAccess();
        id v62 = v25;
        swift_retain();
        sub_19E6340C4((uint64_t)&v117, v25, v104);
        swift_endAccess();
        v63 = v113;
        v113[3] = v54;
        v63[4] = (uint64_t)&off_1EF0C81D8;
        swift_unknownObjectRelease();
        uint64_t *v63 = v55;
        v64 = sub_19EBF6538();
        id v65 = v109;
        sub_19EBF6568();
        os_signpost_type_t v66 = sub_19EBF6D68();
        if (sub_19EBF6E18())
        {
          v97 = v51;
          swift_retain();
          v67 = v101;
          sub_19EBF6598();
          swift_release();
          uint64_t v69 = v107;
          uint64_t v68 = v108;
          if ((*(unsigned int (**)(char *, uint64_t))(v107 + 88))(v67, v108) == *MEMORY[0x1E4FBD340])
          {
            v70 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v68);
            v70 = "";
          }
          uint64_t v86 = v111;
          v85 = v112;
          v99(v112, v65, v111);
          v87 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v87 = 0;
          os_signpost_id_t v88 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v64, v66, v88, "Compute stream creation", v70, v87, 2u);
          MEMORY[0x19F3C3580](v87, -1, -1);

          v89 = v97;
          v97((char *)v65, v86);
          v89(v85, v86);
          swift_unknownObjectRelease();
        }
        else
        {

          v51((char *)v65, v111);
          swift_unknownObjectRelease();
        }
LABEL_47:
        swift_release();
        v19 = v105;
        goto LABEL_48;
      }
    }
    else
    {
      __break(1u);
    }
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v117 = 0;
      *((void *)&v117 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      LOBYTE(v114) = 1;
      sub_19EBF7188();
LABEL_58:
      sub_19EBF67D8();
    }
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      v97 = v51;
      if (qword_1E945BB60 != -1) {
        swift_once();
      }
      v71 = (void *)qword_1E946A530;
      uint64_t v72 = type metadata accessor for BNNSComputeStream();
      swift_allocObject();
      uint64_t v73 = sub_19E6778F0(v71);
      uint64_t v118 = v72;
      v119 = &off_1EF0C78F8;
      *(void *)&long long v117 = v73;
      swift_beginAccess();
      id v74 = v25;
      swift_retain();
      sub_19E6340C4((uint64_t)&v117, v25, v104);
      swift_endAccess();
      v75 = v113;
      v113[3] = v72;
      v75[4] = (uint64_t)&off_1EF0C78F8;
      uint64_t *v75 = v73;
      v76 = sub_19EBF6538();
      v77 = v106;
      sub_19EBF6568();
      os_signpost_type_t v78 = sub_19EBF6D68();
      if (sub_19EBF6E18())
      {
        swift_retain();
        v79 = v100;
        sub_19EBF6598();
        swift_release();
        uint64_t v81 = v107;
        uint64_t v80 = v108;
        int v82 = (*(uint64_t (**)(char *, uint64_t))(v107 + 88))(v79, v108);
        int v83 = *MEMORY[0x1E4FBD340];
        id v109 = v74;
        if (v82 == v83)
        {
          v84 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v80);
          v84 = "";
        }
        uint64_t v91 = v111;
        v90 = v112;
        v99(v112, v77, v111);
        v92 = v77;
        v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v93 = 0;
        os_signpost_id_t v94 = sub_19EBF6508();
        _os_signpost_emit_with_name_impl(&dword_19E58B000, v76, v78, v94, "Compute stream creation", v84, v93, 2u);
        MEMORY[0x19F3C3580](v93, -1, -1);

        v95 = v97;
        v97(v92, v91);
        v95(v90, v91);
        swift_unknownObjectRelease();
      }
      else
      {

        v97(v77, v111);
        swift_unknownObjectRelease();
      }
      goto LABEL_47;
    }
    *(void *)&long long v117 = 0;
    *((void *)&v117 + 1) = 0xE000000000000000;
    sub_19EBF6FE8();
    swift_bridgeObjectRelease();
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v117 = 0;
      *((void *)&v117 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      goto LABEL_58;
    }
  }
  sub_19EBF71F8();
  __break(1u);
}

void sub_19E6340C4(uint64_t a1, void *a2, char a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_19E5FE188((long long *)a1, (uint64_t)v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_19E667D40(v8, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19E63462C(a1);
    sub_19E634458(a2, a3, (uint64_t)v8);
    sub_19E63462C((uint64_t)v8);
  }
}

uint64_t sub_19E634174()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for ComputeStreams()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for MLComputeDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for MLComputeDevice(id *a1)
{
}

uint64_t assignWithCopy for MLComputeDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for MLComputeDevice(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for ComputeStreams.ComputeStreamKey()
{
  return &type metadata for ComputeStreams.ComputeStreamKey;
}

uint64_t sub_19E63429C()
{
  unint64_t v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

void sub_19E634314()
{
  unint64_t v1 = *v0;
  sub_19EBF7488();
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();
}

uint64_t sub_19E63438C()
{
  unint64_t v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

unint64_t sub_19E634404()
{
  unint64_t result = qword_1E945C648;
  if (!qword_1E945C648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C648);
  }
  return result;
}

double sub_19E634458@<D0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19E6628F8(a1, a2);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v14 = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19E666234();
      uint64_t v12 = v14;
    }

    sub_19E5FE188((long long *)(*(void *)(v12 + 56) + 40 * v8), (uint64_t)v15);
    sub_19E6ABDEC(v8, v12);
    *char v4 = v12;
    swift_bridgeObjectRelease();
    sub_19E5FE188(v15, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

BOOL sub_19E634550(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  char v3 = *(void **)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v4 != 1) {
        return 0;
      }
    }
    else if (v4 != 2)
    {
      return 0;
    }
  }
  else if (*(unsigned char *)(a2 + 8))
  {
    return 0;
  }
  sub_19E6345EC();
  id v5 = v3;
  id v6 = v2;
  char v7 = sub_19EBF6DE8();

  return (v7 & 1) != 0;
}

unint64_t sub_19E6345EC()
{
  unint64_t result = qword_1E945C8A0;
  if (!qword_1E945C8A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E945C8A0);
  }
  return result;
}

uint64_t sub_19E63462C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_19E634690(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1E945BB70 != -1) {
    swift_once();
  }
  sub_19EBF75A8();
  int v4 = v8;
  type metadata accessor for ComputeStreams();
  if (v8)
  {
    sub_19E633328(&v8, a2);
    id v5 = v4;
  }
  else
  {
    sub_19E6347B4(a1, (uint64_t *)&v8);
    id v6 = v8;
    char v7 = v8;
    sub_19E633328(&v7, a2);
    sub_19E601010(0);
    id v5 = v6;
  }
  sub_19E601010(v5);
}

uint64_t sub_19E634760()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C688);
  swift_allocObject();
  uint64_t result = sub_19EBF7598();
  qword_1E946A540 = result;
  return result;
}

uint64_t sub_19E6347B4@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
LABEL_22:
    *a2 = 1;
    return result;
  }
  uint64_t v3 = result;
  id v21 = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  while (1)
  {
    unint64_t v6 = *(void *)(v3 + 8 * v4 + 32);
    if ((v6 >> 62) - 1 < 2) {
      goto LABEL_6;
    }
    if (v6 >> 62 != 3) {
      break;
    }
    uint64_t v7 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19EC36240;
    *(void *)(inited + 32) = *(void *)(v7 + 16);
    swift_retain();
    swift_retain_n();
    sub_19E6347B4(&v22, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v9 = v22;
    if (qword_1E945BB68 != -1) {
      swift_once();
    }
    char v10 = (void *)qword_1E946A538;
    if ((unint64_t)qword_1E946A538 <= 1) {
      unint64_t v11 = 1;
    }
    else {
      unint64_t v11 = qword_1E946A538;
    }
    if (v9)
    {
      if (v9 == 1)
      {
        id v12 = (id)qword_1E946A538;
        if ((unint64_t)v10 < 2)
        {
          sub_19E601010((id)v11);
          sub_19E601010((id)1);
LABEL_30:
          swift_bridgeObjectRelease();
          v18 = (void *)qword_1E946A538;
          if ((unint64_t)qword_1E946A538 <= 1) {
            uint64_t v19 = 1;
          }
          else {
            uint64_t v19 = qword_1E946A538;
          }
          *id v21 = v19;
          id v20 = v18;
          return swift_release_n();
        }
        uint64_t v9 = 1;
        goto LABEL_4;
      }
      if (v11 >= 2)
      {
        sub_19E6345EC();
        id v13 = v10;
        sub_19E634BB0((id)v9);
        sub_19E634BB0((id)v11);
        char v14 = sub_19EBF6DE8();
        sub_19E601010((id)v11);
        sub_19E601010((id)v9);
        sub_19E601010((id)v11);
        sub_19E601010((id)v9);
        if (v14) {
          goto LABEL_30;
        }
        goto LABEL_5;
      }
    }
    id v5 = (id)qword_1E946A538;
LABEL_4:
    sub_19E601010((id)v11);
    sub_19E601010((id)v9);
LABEL_5:
    swift_release_n();
LABEL_6:
    if (v2 == ++v4)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v21;
      goto LABEL_22;
    }
  }
  swift_retain();
  swift_bridgeObjectRelease();
  if (qword_1E945BB68 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_1E946A538;
  if ((unint64_t)qword_1E946A538 <= 1) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = qword_1E946A538;
  }
  *id v21 = v16;
  id v17 = v15;
  return swift_release();
}

void withMLTensorComputePolicy<A>(_:_:)(void **a1)
{
  unint64_t v1 = *a1;
  if (qword_1E945BB70 != -1) {
    swift_once();
  }
  sub_19EBF75A8();
  sub_19E634BB0(v1);
  sub_19E634BB0(v1);
  sub_19E601010(v3);
  MEMORY[0x1F4188790](v2);
  sub_19EBF75B8();
  sub_19E601010(v1);
  sub_19E601010(v1);
}

id sub_19E634BB0(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

uint64_t sub_19E634BC0()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t withMLTensorComputePolicy<A>(_:_:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a1;
  v5[5] = a3;
  v5[8] = *a2;
  return MEMORY[0x1F4188298](sub_19E634C14, 0, 0);
}

uint64_t sub_19E634C14()
{
  if (qword_1E945BB70 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 56);
  unint64_t v1 = *(void **)(v0 + 64);
  long long v8 = *(_OWORD *)(v0 + 40);
  sub_19EBF75A8();
  uint64_t v3 = *(void **)(v0 + 16);
  sub_19E634BB0(v1);
  sub_19E634BB0(v1);
  sub_19E601010(v3);
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v8;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *id v5 = v0;
  v5[1] = sub_19E634DA0;
  uint64_t v6 = *(void *)(v0 + 32);
  return MEMORY[0x1F41881B8](v6, v0 + 24, &unk_1E945C680, v4, 0, 0, 0xD00000000000001DLL, 0x800000019EC09DD0);
}

uint64_t sub_19E634DA0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  sub_19E601010(*(id *)(v2 + 24));
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_19E634F44;
  }
  else {
    uint64_t v3 = sub_19E634EE0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19E634EE0()
{
  sub_19E601010(*(id *)(v0 + 16));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19E634F44()
{
  sub_19E601010(*(id *)(v0 + 16));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19E634FA8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19E635084;
  return v6(a1);
}

uint64_t sub_19E635084()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19E635178(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19E635084;
  long long v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_19E635084;
  return v8(a1);
}

void *initializeBufferWithCopyOfBuffer for MLComputePolicy(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 2) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for MLComputePolicy(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 2) {
}
  }

void **assignWithCopy for MLComputePolicy(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 >= 2)
  {
    if ((unint64_t)v4 >= 2)
    {
      *a1 = v4;
      id v7 = v4;

      return a1;
    }

    id v4 = *a2;
    goto LABEL_6;
  }
  if ((unint64_t)v4 < 2)
  {
LABEL_6:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  id v5 = v4;
  return a1;
}

void **assignWithTake for MLComputePolicy(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 >= 2)
  {
    if (v4 >= 2)
    {
      *a1 = (void *)v4;

      return a1;
    }
  }
  *a1 = (void *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for MLComputePolicy(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLComputePolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputeContext()
{
  return &type metadata for MLComputeContext;
}

uint64_t sub_19E635474(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  id v7 = (char *)&v13 - v6;
  long long v8 = (char *)v2 + v3[12];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3[11] + 72))(v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_19E6361E0(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v11;
}

uint64_t sub_19E635618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v15[1] = a4;
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(*v4 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](a1);
  id v12 = (char *)v15 - v11;
  uint64_t v13 = (uint64_t)v4 + *(void *)(v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v17 = v9;
  uint64_t v18 = a3;
  uint64_t v19 = *(void *)(v8 + 88);
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), unsigned char *, uint64_t, uint64_t))(v19 + 152))(sub_19E5F7794, v16, a3, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_19E6357BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v8 = *(void *)(*v3 + 80);
  uint64_t v9 = a3;
  uint64_t v10 = *(void *)(v5 + 88);
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  swift_beginAccess();
  (*(void (**)(uint64_t (*)(), uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 160))(sub_19E5F7718, &v7, a3, v8, v10);
  return swift_endAccess();
}

uint64_t type metadata accessor for TransposedStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19E6358C8()
{
  sub_19E6361C4();

  return swift_bridgeObjectRetain();
}

uint64_t sub_19E6358F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_19E635618(a1, a2, a3, a4);
}

uint64_t sub_19E63590C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6357BC(a1, a2, a3);
}

uint64_t sub_19E635924(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_19EBF7468();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_19E635CA4(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_19E635A20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C710);
  uint64_t result = sub_19EBF6FC8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_19EBF7468();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_19E635CA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_19E635A20();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_19E635DC8();
      goto LABEL_14;
    }
    sub_19E635F60();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_19EBF7468();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_19EBF73F8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_19E635DC8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C710);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF6FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19E635F60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C710);
  uint64_t result = sub_19EBF6FC8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_19EBF7468();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19E6361C4()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 112));
}

uint64_t sub_19E6361E0(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_19E66F600(0, v3, 0);
    uint64_t result = v13;
    uint64_t v6 = (unint64_t *)(a1 + 32);
    unint64_t v7 = *(void *)(a2 + 16);
    while (1)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      if (v9 >= v7) {
        break;
      }
      uint64_t v10 = *(void *)(a2 + 32 + 8 * v8);
      uint64_t v14 = result;
      unint64_t v12 = *(void *)(result + 16);
      unint64_t v11 = *(void *)(result + 24);
      if (v12 >= v11 >> 1)
      {
        sub_19E66F600(v11 > 1, v12 + 1, 1);
        uint64_t result = v14;
      }
      *(void *)(result + 16) = v12 + 1;
      *(void *)(result + 8 * v12 + 32) = v10;
      if (!--v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19E6362C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_19EBF6B28();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_19E635924(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_19E636338(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v24 = v11;
  char v22 = v10;
  ((void (*)(char *))v10)(v9);
  uint64_t v12 = *(void *)(v5 + 88);
  unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 64);
  uint64_t v13 = *(void *)(v23(v6, v12) + 16);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13 == v14)
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_19E6362C4(v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v18 == v13)
    {
      v22(&v3[*(void *)(*(void *)v3 + 96)], v24, v6);
      *(void *)&v3[*(void *)(*(void *)v3 + 104)] = a2;
      swift_bridgeObjectRetain();
      uint64_t v19 = v23(v6, v12);
      uint64_t v20 = sub_19E6361E0(a2, v19);
      swift_bridgeObjectRelease();
      *(void *)&v3[*(void *)(*(void *)v3 + 112)] = v20;
      return (uint64_t)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E636570(uint64_t a1, uint64_t a2)
{
  return sub_19E636338(a1, a2);
}

uint64_t sub_19E6365BC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v4 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  os_signpost_id_t v46 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  os_signpost_type_t v47 = (char *)&v39 - v7;
  v45 = *(char **)(a1 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - v16;
  sub_19EBF6C18();
  if ((~v50 & 0xF000000000000007) == 0) {
    return 512;
  }
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  uint64_t v40 = v15;
  v41 = v12;
  uint64_t v44 = v10;
  uint64_t v19 = v46;
  uint64_t v20 = v9;
  switch(v50 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v21 = (unsigned __int8 *)((v50 & 0x3FFFFFFFFFFFFFFFLL) + 32);
      char v22 = (unsigned __int8 *)((v50 & 0x3FFFFFFFFFFFFFFFLL) + 33);
      break;
    case 2uLL:
      uint64_t v21 = (unsigned __int8 *)((v50 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      char v22 = (unsigned __int8 *)((v50 & 0x3FFFFFFFFFFFFFFFLL) + 25);
      break;
    default:
      uint64_t v21 = (unsigned __int8 *)(v50 + 48);
      char v22 = (unsigned __int8 *)(v50 + 49);
      break;
  }
  unint64_t v23 = v45;
  unint64_t v24 = *v21;
  int v25 = *v22;
  sub_19E607DD8(v50);
  (*((void (**)(char *, uint64_t, uint64_t))v23 + 2))(v20, v1, a1);
  sub_19EBF6B98();
  v45 = v20;
  uint64_t v26 = v47;
  sub_19EBF6BB8();
  uint64_t v27 = v49;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v48 + 8);
  v28(v19, v49);
  sub_19EBF6C38();
  v28(v26, v27);
  sub_19EBF67F8();
  uint64_t v29 = v43;
  swift_getAssociatedConformanceWitness();
  sub_19EBF6EB8();
  unint64_t v30 = v50;
  if ((~v50 & 0xF000000000000007) != 0)
  {
    while (1)
    {
      switch(v30 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v33 = (unsigned char *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 32);
          v34 = (char *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 33);
          break;
        case 2uLL:
          uint64_t v33 = (unsigned char *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          v34 = (char *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 25);
          break;
        default:
          uint64_t v33 = (unsigned char *)(v30 + 48);
          v34 = (char *)(v30 + 49);
          break;
      }
      char v35 = *v34;
      unint64_t v31 = *v33;
      if (v25)
      {
        if ((v35 & 1) == 0)
        {
          if ((v31 - 9) < 3) {
            goto LABEL_14;
          }
          if ((v24 - 9) < 3)
          {
            int v25 = 1;
LABEL_28:
            unint64_t v31 = v24;
            goto LABEL_15;
          }
          if (v24 && *v33)
          {
LABEL_14:
            int v25 = 0;
            goto LABEL_15;
          }
        }
      }
      else if (v35)
      {
        if ((v24 - 9) < 3) {
          goto LABEL_27;
        }
        if ((v31 - 9) < 3)
        {
          int v25 = 1;
          goto LABEL_15;
        }
        if (*v33 && v24 != 0)
        {
LABEL_27:
          int v25 = 0;
          goto LABEL_28;
        }
      }
      if (qword_1E945BB78 != -1) {
        swift_once();
      }
      if (*((void *)off_1E945C718 + 2) <= (unint64_t)v24)
      {
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x19E636B68);
      }
      uint64_t v37 = *((void *)off_1E945C718 + v24 + 4);
      if (*(void *)(v37 + 16) <= v31) {
        goto LABEL_45;
      }
      uint64_t v38 = v37 + 2 * v31;
      unint64_t v31 = *(unsigned __int8 *)(v38 + 32);
      int v25 = *(unsigned __int8 *)(v38 + 33);
LABEL_15:
      sub_19E607DD8(v30);
      sub_19EBF6EB8();
      unint64_t v30 = v50;
      unint64_t v24 = v31;
      if ((~v50 & 0xF000000000000007) == 0) {
        goto LABEL_9;
      }
    }
  }
  LOBYTE(v31) = v24;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v29);
  if (v25) {
    int v32 = 256;
  }
  else {
    int v32 = 0;
  }
  return v32 & 0xFFFFFF00 | v31;
}

double sub_19E636B88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C720);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 12;
  *(_OWORD *)(v0 + 16) = xmmword_19EC387E0;
  *(void *)(v0 + 32) = &unk_1EF0C8988;
  *(void *)(v0 + 40) = &unk_1EF0C8720;
  *(void *)(v0 + 48) = &unk_1EF0C8790;
  *(void *)(v0 + 56) = &unk_1EF0C87C8;
  *(void *)(v0 + 64) = &unk_1EF0C8800;
  *(void *)(v0 + 72) = &unk_1EF0C8838;
  *(void *)(v0 + 80) = &unk_1EF0C8870;
  *(void *)(v0 + 88) = &unk_1EF0C88A8;
  *(void *)(v0 + 96) = &unk_1EF0C88E0;
  *(void *)(v0 + 104) = &unk_1EF0C8918;
  *(void *)(v0 + 112) = &unk_1EF0C8950;
  *(void *)(v0 + 120) = &unk_1EF0C8758;
  off_1E945C718 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_19E636C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, void *a5@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  return sub_19E6C9564((uint64_t)v10, a3, a4, a2, a5);
}

uint64_t sub_19E636D20(uint64_t result, __int16 a2)
{
  unsigned __int8 v2 = a2;
  unsigned __int8 v3 = result;
  if ((result & 0x100) != 0)
  {
    if ((a2 & 0x100) != 0) {
      goto LABEL_16;
    }
    if ((a2 - 9) >= 3u)
    {
      if ((result - 9) < 3u)
      {
        int v4 = 256;
        return v4 | v3;
      }
      if (!(_BYTE)result || !(_BYTE)a2) {
        goto LABEL_16;
      }
    }
    int v4 = 0;
    unsigned __int8 v3 = a2;
    return v4 | v3;
  }
  if ((a2 & 0x100) != 0)
  {
    if ((result - 9) < 3u) {
      goto LABEL_4;
    }
    if (a2 - 9 < 3)
    {
      int v4 = 256;
      unsigned __int8 v3 = a2;
      return v4 | v3;
    }
    if ((_BYTE)a2 && (_BYTE)result)
    {
LABEL_4:
      int v4 = 0;
      return v4 | v3;
    }
  }
LABEL_16:
  if (qword_1E945BB78 != -1) {
    double result = swift_once();
  }
  if (*((void *)off_1E945C718 + 2) <= (unint64_t)v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *((void *)off_1E945C718 + v3 + 4);
    if (*(void *)(v5 + 16) > (unint64_t)v2)
    {
      uint64_t v6 = v5 + 2 * v2;
      unsigned __int8 v3 = *(unsigned char *)(v6 + 32);
      if (*(unsigned char *)(v6 + 33)) {
        int v4 = 256;
      }
      else {
        int v4 = 0;
      }
      return v4 | v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19E636E5C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_19E66F628(0, v1, 0);
    uint64_t v2 = v12;
    int v4 = (long long *)(a1 + 32);
    do
    {
      long long v8 = *v4;
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_19E66F628(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE60);
      uint64_t v11 = &protocol witness table for <> Range<A>;
      long long v9 = v8;
      *(void *)(v2 + 16) = v6 + 1;
      sub_19E5FE188(&v9, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19E636F58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_19EBF70D8();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_19EBF6B38();
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t MLMultiArray.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_19E63974C(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

id MLMultiArray.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v104[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a4 + 8) + 24) + 16);
  uint64_t v7 = *(uint64_t **)(a3 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v85 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  v84 = &v76[-v8];
  uint64_t v9 = swift_checkMetadataState();
  uint64_t v98 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v81 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v86 = &v76[-v13];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v100 = &v76[-v15];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v76[-v17];
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  v87 = &v76[-v20];
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v89 = &v76[-v22];
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v92 = &v76[-v24];
  MEMORY[0x1F4188790](v23);
  uint64_t v102 = &v76[-v25];
  uint64_t v26 = sub_19EBF6E68();
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  v95 = &v76[-v28];
  uint64_t v29 = *(void **)(a2 - 8);
  MEMORY[0x1F4188790](v27);
  os_signpost_id_t v94 = &v76[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = v7;
  uint64_t v96 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  int v32 = &v76[-v31];
  uint64_t v33 = sub_19EBF6BA8();
  v101 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_19EC387F0;
  *(void *)(v34 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v33);
  v104[0] = (id)v34;
  sub_19EBF6908();
  sub_19E5F47F0();
  char v35 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  v104[0] = 0;
  id v36 = objc_msgSend(v101, sel_initWithShape_dataType_error_, v35, 131104, v104);

  id v37 = v36;
  if (!v36)
  {
    uint64_t v73 = v29;
    id v74 = v104[0];
    sub_19EBF6328();

    swift_willThrow();
    ((void (*)(uint64_t, uint64_t))v73[1])(a1, a2);
    return v37;
  }
  id v38 = v104[0];
  id v78 = v36;
  v90 = objc_msgSend(v36, sel_dataPointer);
  uint64_t v39 = (void (*)(unsigned char *, uint64_t, uint64_t))v29[2];
  uint64_t v79 = a1;
  v39(v94, a1, a2);
  v97 = v32;
  sub_19EBF67F8();
  uint64_t v80 = a2;
  uint64_t v40 = v96;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v42 = 0;
  v93 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v98 + 48);
  os_signpost_id_t v94 = (unsigned char *)AssociatedConformanceWitness;
  v99 = (uint64_t *)(v98 + 32);
  v101 = (void *)(v98 + 16);
  uint64_t v43 = (void (**)(unsigned char *, uint64_t))(v98 + 8);
  os_signpost_id_t v88 = v18;
  uint64_t v91 = v29;
  while (1)
  {
    uint64_t v49 = v95;
    sub_19EBF6EB8();
    if ((*v93)(v49, 1, v9) == 1) {
      break;
    }
    unint64_t v50 = v102;
    uint64_t v98 = *v99;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v98)(v102, v49, v9);
    char v51 = sub_19EBF6F38();
    uint64_t v52 = (void (*)(unsigned char *, unsigned char *, uint64_t))*v101;
    v53 = v92;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))*v101)(v92, v50, v9);
    if ((v51 & 1) == 0)
    {
      uint64_t v29 = *v43;
      uint64_t v55 = v53;
LABEL_12:
      ((void (*)(unsigned char *, uint64_t))v29)(v55, v9);
      goto LABEL_13;
    }
    uint64_t v54 = sub_19EBF6F28();
    uint64_t v29 = *v43;
    (*v43)(v53, v9);
    uint64_t v40 = (uint64_t)v89;
    if (v54 <= 32) {
      goto LABEL_13;
    }
    v52(v89, v102, v9);
    LODWORD(v104[0]) = 0x80000000;
    if (sub_19EBF6F38())
    {
      if (sub_19EBF6F28() >= 32) {
        goto LABEL_27;
      }
      goto LABEL_32;
    }
    char v66 = sub_19EBF6F38();
    uint64_t v67 = sub_19EBF6F28();
    if ((v66 & 1) == 0)
    {
      if (v67 >= 32)
      {
        uint64_t v55 = v89;
        goto LABEL_12;
      }
      uint64_t v40 = (uint64_t)v89;
LABEL_32:
      int v69 = sub_19EBF6F18();
      ((void (*)(uint64_t, uint64_t))v29)(v40, v9);
      if (SLODWORD(v104[0]) > v69) {
        goto LABEL_42;
      }
      goto LABEL_13;
    }
    if (v67 > 32)
    {
LABEL_27:
      sub_19E630220();
      uint64_t v40 = (uint64_t)v87;
      sub_19EBF6F08();
      char v68 = sub_19EBF66C8();
      ((void (*)(uint64_t, uint64_t))v29)(v40, v9);
      ((void (*)(unsigned char *, uint64_t))v29)(v89, v9);
      if (v68) {
        goto LABEL_42;
      }
      goto LABEL_13;
    }
    swift_getAssociatedConformanceWitness();
    sub_19EBF73D8();
    v70 = v87;
    sub_19EBF7378();
    char v71 = sub_19EBF66C8();
    ((void (*)(unsigned char *, uint64_t))v29)(v70, v9);
    uint64_t v40 = (uint64_t)v81;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v98)(v81, v89, v9);
    if (v71) {
      goto LABEL_43;
    }
    uint64_t v72 = v40;
    int v77 = (int)v104[0];
    uint64_t v40 = sub_19EBF6F18();
    ((void (*)(uint64_t, uint64_t))v29)(v72, v9);
    if (v77 > (int)v40) {
      goto LABEL_42;
    }
LABEL_13:
    uint64_t v56 = v102;
    uint64_t v57 = sub_19EBF6F28();
    v52(v18, v56, v9);
    if (v57 < 33)
    {
      uint64_t v63 = sub_19EBF6F28();
      ((void (*)(unsigned char *, uint64_t))v29)(v18, v9);
      if (v63 != 32 || (sub_19EBF6F38() & 1) != 0) {
        goto LABEL_4;
      }
    }
    else
    {
      ((void (*)(unsigned char *, uint64_t))v29)(v18, v9);
    }
    v52(v100, v102, v9);
    LODWORD(v104[0]) = 0x7FFFFFFF;
    uint64_t v40 = sub_19EBF6F38();
    uint64_t v58 = sub_19EBF6F28();
    if (v40)
    {
      if (v58 > 32)
      {
        sub_19E630220();
        v59 = v87;
        sub_19EBF6F08();
        uint64_t v60 = v100;
        char v61 = sub_19EBF66C8();
        ((void (*)(unsigned char *, uint64_t))v29)(v59, v9);
        id v62 = v60;
        goto LABEL_23;
      }
    }
    else if (v58 > 31)
    {
      int v103 = 0x7FFFFFFF;
      v64 = v87;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v98)(v87, v100, v9);
      sub_19E630220();
      id v65 = v86;
      sub_19EBF6F08();
      char v61 = sub_19EBF66C8();
      ((void (*)(unsigned char *, uint64_t))v29)(v65, v9);
      id v62 = v64;
LABEL_23:
      ((void (*)(unsigned char *, uint64_t))v29)(v62, v9);
      uint64_t v18 = v88;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_4;
    }
    uint64_t v44 = v100;
    int v45 = sub_19EBF6F18();
    ((void (*)(unsigned char *, uint64_t))v29)(v44, v9);
    uint64_t v18 = v88;
    if (SLODWORD(v104[0]) < v45) {
      goto LABEL_41;
    }
LABEL_4:
    os_signpost_id_t v46 = v102;
    int v47 = sub_19EBF6F18();
    ((void (*)(unsigned char *, uint64_t))v29)(v46, v9);
    uint64_t v29 = v91;
    v90[v42] = v47;
    BOOL v48 = __OFADD__(v42++, 1);
    uint64_t v40 = v96;
    if (v48)
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      ((void (*)(uint64_t, uint64_t))v29)(v40, v9);
      __break(1u);
    }
  }
  ((void (*)(uint64_t, uint64_t))v29[1])(v79, v80);
  (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v97, v40);
  return v78;
}

id MLMultiArray.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  v24[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v23 = a1;
  uint64_t v10 = sub_19EBF6BA8();
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19EC387F0;
  *(void *)(v12 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v10);
  v24[0] = (id)v12;
  sub_19EBF6908();
  sub_19E5F47F0();
  uint64_t v13 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  v24[0] = 0;
  id v14 = objc_msgSend(v11, sel_initWithShape_dataType_error_, v13, 65568, v24);

  if (v14)
  {
    id v15 = v24[0];
    uint64_t v16 = objc_msgSend(v14, sel_dataPointer);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, a2);
    sub_19EBF67F8();
    swift_getAssociatedConformanceWitness();
    uint64_t v17 = 0;
    while (1)
    {
      sub_19EBF6EB8();
      if (BYTE4(v24[0])) {
        break;
      }
      v16[v17] = v24[0];
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
        break;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, a2);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, AssociatedTypeWitness);
  }
  else
  {
    id v19 = v24[0];
    sub_19EBF6328();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, a2);
  }
  return v14;
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;

  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v22 = a1;
  uint64_t v10 = sub_19EBF6BA8();
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19EC387F0;
  *(void *)(v12 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v10);
  uint64_t v23 = (id)v12;
  sub_19EBF6908();
  sub_19E5F47F0();
  uint64_t v13 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  uint64_t v23 = 0;
  id v14 = objc_msgSend(v11, sel_initWithShape_dataType_error_, v13, 65600, &v23);

  if (v14)
  {
    id v15 = v23;
    uint64_t v16 = objc_msgSend(v14, sel_dataPointer);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v22, a2);
    sub_19EBF67F8();
    swift_getAssociatedConformanceWitness();
    uint64_t v17 = 0;
    while (1)
    {
      sub_19EBF6EB8();
      if (v24) {
        break;
      }
      v16[v17] = v23;
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
        break;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, a2);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, AssociatedTypeWitness);
  }
  else
  {
    id v19 = v23;
    sub_19EBF6328();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, a2);
  }
  return v14;
}

MLMultiArray __swiftcall MLMultiArray.init(shape:dataType:strides:)(Swift::OpaquePointer shape, MLMultiArrayDataType dataType, Swift::OpaquePointer strides)
{
  sub_19E636F58((uint64_t)shape._rawValue);
  swift_bridgeObjectRelease();
  sub_19E636F58((uint64_t)strides._rawValue);
  swift_bridgeObjectRelease();
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_19E5F47F0();
  uint64_t v6 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  uint64_t v8 = (objc_class *)objc_msgSend(v5, sel_initWithShape_dataType_strides_, v6, dataType, v7);

  id v11 = v8;
  result._shape = v10;
  result._storageManager.__ptr_.__value_ = v9;
  result.super.isa = v11;
  return result;
}

uint64_t sub_19E63843C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_projectBox();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a1;
  v10[5] = a2;
  swift_beginAccess();
  (*(void (**)(id (*)(uint64_t, uint64_t, uint64_t), void *, uint64_t, uint64_t, uint64_t))(a5 + 160))(sub_19E63A104, v10, MEMORY[0x1E4FBC848] + 8, a4, a5);
  return swift_endAccess();
}

id sub_19E6384F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_getAssociatedTypeWitness();
  id result = (id)sub_19EBF6758();
  if (result)
  {
    *a4 = result;
    uint64_t v8 = (void *)sub_19EBF68D8();
    id result = v8;
    *a5 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19E638590(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MLShapedArray();
  if (!swift_dynamicCast()) {
    return 0;
  }
  long long v5 = v7;
  type metadata accessor for CVBuffer(0);
  MLShapedArray.withPixelBufferIfAvailable<A>(_:)((void (*)(void))sub_19E639720, v3, (uint64_t)&v6);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t MLMultiArray.withUnsafeBytes<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v7 = sub_19EBF6E68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))((char *)&v20 - v12, 1, 1, a3);
  id v24 = 0;
  id v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = v13;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = &v24;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_19E639DB0;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_19E639DD0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E638BB4;
  aBlock[3] = &block_descriptor_2;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_getBytesWithHandler_, v17);
  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v17)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (v24)
  {
    id v19 = v24;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return swift_release();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, a3);
  if (result == 1) {
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v21, v11, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return swift_release();
}

uint64_t sub_19E638A5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_19EBF6E68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v17 - v14;
  a4(a1, a1 + a2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56))(v15, 0, 1, a7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 40))(a3, v15, v12);
}

uint64_t sub_19E638BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(a2, a3);
}

uint64_t MLMultiArray.withUnsafeMutableBytes<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  long long v5 = v4;
  uint64_t v24 = sub_19EBF6E68();
  uint64_t v9 = *(void *)(v24 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v24);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v22 - v13, 1, 1, a3);
  id v26 = 0;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = &v26;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_19E639E20;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_19E639E40;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E6391DC;
  aBlock[3] = &block_descriptor_12;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_getMutableBytesWithHandler_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (v26)
  {
    id v20 = v26;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v24);
    return swift_release();
  }
  uint64_t v21 = v24;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3);
  if (result == 1) {
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23, v12, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_19E638F20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = a1;
  uint64_t v34 = a5;
  uint64_t v32 = a2;
  uint64_t v13 = sub_19EBF6E68();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v35 = (char *)&v26 - v15;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v31 = a7;
  if (!v16)
  {
LABEL_13:
    uint64_t v25 = v35;
    v34(v33, v33 + v32, v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56))(v25, 0, 1, a8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 40))(a4, v25, v13);
  }
  uint64_t v30 = a6;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_19E66F600(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    uint64_t v28 = a8;
    uint64_t v29 = a4;
    uint64_t v19 = 0;
    uint64_t v17 = v36;
    do
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x19F3BF970](v19, a3);
      }
      else {
        id v20 = *(id *)(a3 + 8 * v19 + 32);
      }
      uint64_t v21 = v20;
      id v22 = objc_msgSend(v20, sel_integerValue, v26, v27, v28, v29);

      uint64_t v36 = v17;
      unint64_t v24 = *(void *)(v17 + 16);
      unint64_t v23 = *(void *)(v17 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_19E66F600(v23 > 1, v24 + 1, 1);
        uint64_t v17 = v36;
      }
      ++v19;
      *(void *)(v17 + 16) = v24 + 1;
      *(void *)(v17 + 8 * v24 + 32) = v22;
    }
    while (v16 != v19);
    a8 = v28;
    a4 = v29;
    uint64_t v14 = v26;
    uint64_t v13 = v27;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E6391B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_19E6391DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  sub_19E5F47F0();
  uint64_t v6 = sub_19EBF68E8();
  v5(a2, a3, v6);

  return swift_bridgeObjectRelease();
}

id MLMultiArray.withUnsafeBufferPointer<A, B>(ofType:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E6392D8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_19E639E68, (uint64_t (*)(uint64_t))MLMultiArray.withUnsafeBytes<A>(_:));
}

id MLMultiArray.withUnsafeMutableBufferPointer<A, B>(ofType:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E6392D8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_19E639EE0, (uint64_t (*)(uint64_t))MLMultiArray.withUnsafeMutableBytes<A>(_:));
}

id sub_19E6392D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  id result = objc_msgSend(v8, sel_dataType);
  if ((id)v9 == result)
  {
    MEMORY[0x1F4188790](result);
    return (id)a8(a7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_19E6393C8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_19E6393D8()
{
  return sub_19EBF7488();
}

BOOL sub_19E639400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19E6393C8(*a1, *a2);
}

uint64_t sub_19E63940C()
{
  return sub_19E6394B4();
}

uint64_t sub_19E639428()
{
  return sub_19E6393D8();
}

uint64_t sub_19E639430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E639514(a1, a2, a3, (void (*)(unsigned char *, void))sub_19E6393D8);
}

void UnsafeBufferPointer.init(_:)(void *a1, uint64_t a2)
{
}

uint64_t sub_19E6394B4()
{
  return sub_19EBF74B8();
}

uint64_t sub_19E6394FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E639514(a1, a2, a3, (void (*)(unsigned char *, void))sub_19E63A124);
}

uint64_t sub_19E639514(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void))
{
  sub_19EBF7478();
  a4(v7, *v4);
  return sub_19EBF74B8();
}

void UnsafeMutableBufferPointer.init(_:)(void *a1, uint64_t a2)
{
}

void sub_19E6395B8(void *a1, uint64_t a2, SEL *a3, void (*a4)(id, id, uint64_t), void (*a5)(void, uint64_t))
{
  id v10 = objc_msgSend(a1, sel_dataType);
  if (v10 == (id)65568)
  {
    if (a2 != MEMORY[0x1E4FBB470]) {
      goto LABEL_7;
    }
LABEL_9:
    id v12 = objc_msgSend(a1, sel_count);
    id v13 = a1;
    a4([v13 *a3], v12, a2);

    return;
  }
  if (v10 == (id)131104)
  {
    if (a2 != MEMORY[0x1E4FBC150]) {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v10 != (id)65600)
  {
    char v11 = 1;
    goto LABEL_11;
  }
  if (a2 == MEMORY[0x1E4FBB3D0]) {
    goto LABEL_9;
  }
LABEL_7:
  char v11 = 0;
LABEL_11:
  a5(0, a2);
  swift_getWitnessTable();
  swift_allocError();
  char *v14 = v11;
  swift_willThrow();
}

id sub_19E639720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

uint64_t sub_19E63974C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v33)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  id v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t aBlock;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  void *v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  void *v57;

  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  os_signpost_id_t v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocBox();
  int v47 = v6;
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v44 = v10;
  int v45 = v6 + 16;
  uint64_t v43 = v9;
  v9(v10, v5, a2);
  char v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  uint64_t v49 = v11;
  unint64_t v50 = v8;
  v11[4] = v8;
  id v12 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 64);
  swift_retain();
  uint64_t v13 = v12(a2, a3);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  char v51 = v5;
  if (v14)
  {
    aBlock = MEMORY[0x1E4FBC860];
    sub_19EBF70D8();
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = v16 + 1;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v13 + 8 * v16 + 32));
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      uint64_t v16 = v17;
    }
    while (v14 != v17);
    BOOL v48 = aBlock;
    swift_bridgeObjectRelease();
    uint64_t v5 = v51;
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v48 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    aBlock = v15;
    sub_19EBF70D8();
    uint64_t v20 = 0;
    do
    {
      uint64_t v21 = v20 + 1;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v18 + 8 * v20 + 32));
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      uint64_t v20 = v21;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
    uint64_t v5 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_19E638590(v5);
  if (v22)
  {
    unint64_t v23 = (void *)v22;
    id v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_19E5F47F0();
    id v25 = v23;
    uint64_t v26 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_19E63A0F8;
    uint64_t v57 = v49;
    aBlock = MEMORY[0x1E4F143A8];
    v53 = 1107296256;
    uint64_t v54 = sub_19E5F2010;
    uint64_t v55 = &block_descriptor_31;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v29 = objc_msgSend(v24, sel_initWithPixelBuffer_shape_strides_mutableShapedBufferProvider_, v25, v26, v27, v28);
    _Block_release(v28);
    swift_release();
    swift_release();

LABEL_15:
    return (uint64_t)v29;
  }
  uint64_t v30 = v44;
  swift_beginAccess();
  uint64_t v31 = v46;
  uint64_t v32 = v43(v46, (uint64_t)v30, a2);
  MEMORY[0x1F4188790](v32);
  *(&v42 - 2) = a2;
  *(&v42 - 1) = a3;
  uint64_t v33 = *(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 152);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v35 = sub_19EBF6778();
  v33(&aBlock, sub_19E5F4CBC, &v42 - 4, v35, a2, a3);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v31, a2);
  id result = sub_19EBF6758();
  if (result)
  {
    id v37 = result;
    id v38 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_19E5F47F0();
    uint64_t v26 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v27 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_19E63A0F8;
    uint64_t v57 = v49;
    aBlock = MEMORY[0x1E4F143A8];
    v53 = 1107296256;
    uint64_t v54 = sub_19E5F2010;
    uint64_t v55 = &block_descriptor_28;
    v41 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v29 = objc_msgSend(v38, sel_initWithBytesNoCopy_shape_dataType_strides_mutableShapedBufferProvider_, v37, v26, v40, v27, v41);
    _Block_release(v41);
    swift_release();
    swift_release();
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E639DA0()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19E639DB0(uint64_t a1, uint64_t a2)
{
  return sub_19E638A5C(a1, a2, *(void *)(v2 + 24), *(void (**)(uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16));
}

uint64_t sub_19E639DC0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19E639DD0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_19E639E10()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19E639E20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_19E638F20(a1, a2, a3, *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 16));
}

uint64_t sub_19E639E30()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19E639E40()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19E639E68(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    uint64_t v4 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(result, v4);
  }
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 72);
  if (v3)
  {
    if (a2 - result != 0x8000000000000000 || v3 != -1)
    {
      uint64_t v4 = (a2 - result) / v3;
      return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(result, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E639EE0(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    uint64_t v4 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(result, v4);
  }
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 72);
  if (v3)
  {
    if (a2 - result != 0x8000000000000000 || v3 != -1)
    {
      uint64_t v4 = (a2 - result) / v3;
      return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(result, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s31MLMultiArrayUnsafeBufferPointerOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s38MLMultiArrayUnsafeMutableBufferPointerOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19E639F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

unsigned char *sub_19E639F94(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19E63A060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_19E63A088()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E63A0A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E63A0C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19E63A0F8(uint64_t a1, uint64_t a2)
{
  return sub_19E63843C(a1, a2, v2[4], v2[2], v2[3]);
}

id sub_19E63A104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6384F4(a1, a2, a3, *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t MLComputeDevice.init(device:)@<X0>(uint64_t a1@<X8>)
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    char v3 = 0;
LABEL_7:
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v3;
    return result;
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    char v3 = 1;
    goto LABEL_7;
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    char v3 = 2;
    goto LABEL_7;
  }
  sub_19EBF6FE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C890);
  sub_19EBF67A8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t MLComputeDevice.description.getter()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_19EBF6798();

  return v2;
}

id MLComputeDevice.underlyingDevice.getter()
{
  return *v0;
}

void MLComputeDevice.hash(into:)()
{
  id v1 = *v0;
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();
}

uint64_t MLComputeDevice.hashValue.getter()
{
  id v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

uint64_t sub_19E63A3D8()
{
  id v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  id v2 = v1;
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

uint64_t sub_19E63A43C()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_19EBF6798();

  return v2;
}

uint64_t _s6CoreML15MLComputeDeviceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(void **)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v4 != 1) {
        goto LABEL_6;
      }
LABEL_8:
      sub_19E6345EC();
      id v6 = v3;
      id v7 = v2;
      char v5 = sub_19EBF6DE8();

      return v5 & 1;
    }
    if (v4 == 2) {
      goto LABEL_8;
    }
  }
  else if (!*(unsigned char *)(a2 + 8))
  {
    goto LABEL_8;
  }
LABEL_6:
  char v5 = 0;
  return v5 & 1;
}

uint64_t _s6CoreML15MLComputeDeviceO17allComputeDevicesSayACGvgZ_0()
{
  uint64_t v0 = MLAllComputeDevices();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C890);
  unint64_t v1 = sub_19EBF68E8();

  if (v1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_19EBF7228();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v17 = v1 & 0xC000000000000001;
      char v3 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v4 = 4;
      unint64_t v5 = v1;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if (v17)
        {
          unint64_t v1 = MEMORY[0x19F3BF970](v4 - 4, v1);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          unint64_t v1 = *(void *)(v1 + 8 * v4);
          swift_unknownObjectRetain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        self;
        uint64_t v8 = swift_dynamicCastObjCClass();
        if (v8)
        {
          uint64_t v9 = v8;
          char v10 = 0;
        }
        else
        {
          self;
          uint64_t v11 = swift_dynamicCastObjCClass();
          if (v11)
          {
            uint64_t v9 = v11;
            char v10 = 1;
          }
          else
          {
            self;
            uint64_t v12 = swift_dynamicCastObjCClass();
            if (!v12)
            {
              swift_unknownObjectRetain();
              sub_19EBF6FE8();
              swift_unknownObjectRetain();
              sub_19EBF67A8();
              swift_bridgeObjectRelease();
              sub_19EBF67D8();
              uint64_t result = sub_19EBF71F8();
              __break(1u);
              return result;
            }
            uint64_t v9 = v12;
            char v10 = 2;
          }
        }
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v3 = sub_19E606EF0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          char v3 = sub_19E606EF0((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        v15[4] = v9;
        *((unsigned char *)v15 + 40) = v10;
        swift_unknownObjectRelease();
        ++v4;
        unint64_t v1 = v5;
        if (v7 == v2) {
          goto LABEL_24;
        }
      }
    }
  }
  char v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
  swift_bridgeObjectRelease_n();
  return (uint64_t)v3;
}

unint64_t sub_19E63A80C()
{
  unint64_t result = qword_1E945C898;
  if (!qword_1E945C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C898);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputeDevice()
{
  return &type metadata for MLComputeDevice;
}

uint64_t sub_19E63A870(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E63A8B0(uint64_t a1)
{
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_19EBF6738();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C0E8);
    if (!swift_dynamicCast()
      || (__swift_instantiateConcreteTypeFromMangledName(qword_1E945C8B8), (swift_dynamicCast() & 1) == 0))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C0F0);
      if (swift_dynamicCast())
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C8B0);
        swift_dynamicCast();
      }
    }
  }
  return a1;
}

vImage_Error sub_19E63AA0C(void *a1, vImagePixelCount a2, vImagePixelCount a3, size_t a4, void *a5, vImagePixelCount a6, vImagePixelCount a7, size_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  switch(a11)
  {
    case 1:
      sub_19EBF71F8();
      __break(1u);
      JUMPOUT(0x19E63AB44);
    case 2:
      dest.data = a1;
      dest.height = a2;
      dest.width = a3;
      dest.rowBytes = a4;
      src.data = a5;
      src.height = a6;
      src.width = a7;
      src.rowBytes = a8;
      vImage_Error result = vImageConvert_PlanarFtoPlanar16F(&dest, &src, 0x10u);
      break;
    case 3:
      dest.data = a1;
      dest.height = a2;
      dest.width = a3;
      dest.rowBytes = a4;
      src.data = a5;
      src.height = a6;
      src.width = a7;
      src.rowBytes = a8;
      vImage_Error result = vImageConvert_Planar16FtoPlanarF(&dest, &src, 0x10u);
      break;
    default:
      src.data = a1;
      src.height = a2;
      src.width = a3;
      src.rowBytes = a4;
      dest.data = a5;
      dest.height = a6;
      dest.width = a7;
      dest.rowBytes = a8;
      vImage_Error result = vImageCopyBuffer(&src, &dest, *(void *)(*(void *)(a12 - 8) + 64), 0x10u);
      break;
  }
  return result;
}

uint64_t sub_19E63AB54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = sub_19E63A8B0(a7);
  if (v19 == 1) {
    return 0;
  }
  char v20 = v19;
  uint64_t v34 = v18;
  uint64_t v35 = v17;
  uint64_t v36 = a6;
  uint64_t v33 = *(void *)(a9 - 8);
  uint64_t v21 = *(void *)(v33 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E63AD88(a2, (uint64_t)a3, v21, (uint64_t)v38);
  sub_19E63B018((uint64_t)v38, (uint64_t)v45);
  if (v49) {
    return 0;
  }
  vImagePixelCount v29 = v47;
  vImagePixelCount v30 = v46;
  uint64_t v27 = *(void *)(a10 - 8);
  size_t v28 = v48;
  uint64_t v31 = *(void *)(v27 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E63AD88(a5, (uint64_t)v36, v31, (uint64_t)v39);
  sub_19E63B018((uint64_t)v39, (uint64_t)v40);
  if (v44) {
    return 0;
  }
  vImagePixelCount v32 = v41;
  size_t v23 = v43;
  vImagePixelCount v26 = v42;
  id v24 = (void *)(a7 + *(void *)(v33 + 72) * sub_19E669DA4(a1, a3));
  uint64_t v25 = sub_19E669DA4(a4, v36);
  sub_19E63AA0C(v24, v30, v29, v28, (void *)(a8 + *(void *)(v27 + 72) * v25), v32, v26, v23, v35, v34, v20, a9);
  return 1;
}

uint64_t sub_19E63AD88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(a1 + 32);
    if (*(void *)(a1 + 32))
    {
      if (v7 != 1)
      {
        uint64_t v15 = 5;
        do
        {
          uint64_t v16 = v15 - 3;
          if (__OFADD__(v15 - 4, 1))
          {
            __break(1u);
            goto LABEL_32;
          }
          if (!*(void *)(a1 + 8 * v15)) {
            goto LABEL_4;
          }
          ++v15;
        }
        while (v16 != v7);
        unint64_t v17 = v7 - 1;
        swift_bridgeObjectRelease();
        uint64_t v18 = *(void *)(a2 + 16);
        char v19 = (uint64_t *)(a2 + 32);
        v33[0] = a2;
        v33[1] = a2;
        v33[2] = a2 + 32;
        v33[3] = v18 != 0;
        v33[4] = (2 * v18) | 1;
        swift_bridgeObjectRetain();
        char v20 = sub_19E5E71A0((uint64_t)v33);
        swift_bridgeObjectRelease();
        if (v20)
        {
          if (v7 > *(void *)(a2 + 16))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          if (v19[v17] == 1)
          {
            unint64_t v21 = *(void *)(a1 + 16);
            uint64_t v10 = 1;
            if (v21 >= 2)
            {
              uint64_t v22 = (v21 - 1) & 0x7FFFFFFFFFFFFFFFLL;
              if (v22)
              {
                uint64_t v23 = 1;
                id v24 = (uint64_t *)(a1 + 32);
                while (1)
                {
                  uint64_t v25 = *v24++;
                  uint64_t v10 = v23 * v25;
                  if ((unsigned __int128)(v23 * (__int128)v25) >> 64 != (v23 * v25) >> 63) {
                    break;
                  }
                  uint64_t v23 = v10;
                  if (!--v22) {
                    goto LABEL_19;
                  }
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
            }
LABEL_19:
            unint64_t v26 = v7 - 2;
            uint64_t v27 = *(void *)(a2 + 16);
            if ((uint64_t)(v7 - 2) >= v27)
            {
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
            uint64_t v28 = v19[v26];
            uint64_t v29 = v10 * v28;
            if ((unsigned __int128)(v10 * (__int128)v28) >> 64 != (v10 * v28) >> 63)
            {
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
            if (!v27)
            {
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
            unint64_t v30 = *(void *)(a1 + 16);
            if (!v30)
            {
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
            uint64_t v31 = *v19 * *v8;
            if ((unsigned __int128)(*v19 * (__int128)*v8) >> 64 != v31 >> 63)
            {
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
            if (v29 == v31)
            {
              if (v7 <= v30)
              {
                uint64_t v11 = v8[v17];
                swift_bridgeObjectRelease();
                uint64_t v32 = v19[v26];
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v12 = v32 * a3;
                if ((unsigned __int128)(v32 * (__int128)a3) >> 64 == (v32 * a3) >> 63)
                {
                  if ((v10 & 0x8000000000000000) == 0 && (v11 & 0x8000000000000000) == 0)
                  {
                    char v13 = 0;
                    goto LABEL_6;
                  }
                  goto LABEL_41;
                }
LABEL_40:
                __break(1u);
LABEL_41:
                uint64_t result = sub_19EBF71E8();
                __break(1u);
                return result;
              }
LABEL_39:
              __break(1u);
              goto LABEL_40;
            }
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
  }
LABEL_4:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_5:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  char v13 = 1;
LABEL_6:
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = v10;
  *(void *)(a4 + 16) = v11;
  *(void *)(a4 + 24) = v12;
  *(unsigned char *)(a4 + 32) = v13;
  return result;
}

uint64_t sub_19E63B018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E63B080()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19E63B0D8(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(result + 32);
    uint64_t v7 = 1;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = v7 * v8;
      if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v9;
      --v5;
    }
    while (v5);
    if (v9) {
      goto LABEL_6;
    }
    uint64_t v14 = 0;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_19E5EBFD0(v4, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v11 = sub_19E5F321C(v10);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = v11;
    }
  }
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = sub_19E63B2C0();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v15;
    uint64_t v16 = sub_19EBF7158();
    swift_getWitnessTable();
    swift_allocObject();
    a2 = sub_19E63B788(v4, a2, (uint64_t)&v17, v16);
    swift_release();
  }
  return a2;
}

uint64_t sub_19E63B2C0()
{
  sub_19EBF6978();
  if (!v0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_19EBF7028();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_19EBF69C8();
      swift_getWitnessTable();
      uint64_t v1 = sub_19EBF73C8();
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_19E63B370(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    uint64_t v9 = *(void *)(*(void *)(a7 - 8) + 72);
    if (!v9)
    {
LABEL_12:
      __break(1u);
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    if (a2 - result == 0x8000000000000000 && v9 == -1) {
      goto LABEL_13;
    }
  }
  uint64_t ObjectType = swift_getObjectType();
  int64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  char v12 = (void *)v11(ObjectType, a4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(ObjectType, a4);
  unint64_t v13 = v12[2];
  if (v13 != *(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v14 = (void *)result;
  uint64_t v19 = sub_19E60F71C(0, v13);
  uint64_t result = v11(ObjectType, a4);
  unint64_t v15 = *(void *)(result + 16);
  if (v15 != a5[2])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v16 = (void *)result;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_19E60F71C(0, v15);
  uint64_t result = sub_19EBF6758();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v18 = result;
  uint64_t result = sub_19EBF6758();
  if (result)
  {
    sub_19E6B395C(v19, v12, v14, v17, v16, a5, v18, result, a7, a7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_19E63B55C()
{
  return swift_release();
}

uint64_t sub_19E63B614()
{
  return swift_endAccess();
}

uint64_t sub_19E63B6CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19E63B6FC()
{
  sub_19E63B6CC();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t type metadata accessor for StandardStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19E63B748()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19E63B750()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19E63B758()
{
  return sub_19E63B55C();
}

uint64_t sub_19E63B770()
{
  return sub_19E63B614();
}

uint64_t sub_19E63B788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19EBF7098();
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = v16;
  uint64_t v32 = v12;
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(a1 + 32);
    uint64_t v19 = 1;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = v19 * v20;
      if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
      {
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v19 = v21;
      --v17;
    }
    while (v17);
    if (v21) {
      goto LABEL_6;
    }
    uint64_t v26 = 0;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_19E5EBFD0(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v23 = sub_19E5F321C(v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if (v25) {
      uint64_t v26 = 1;
    }
    else {
      uint64_t v26 = v23;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v32, a3, a4);
  sub_19EBF6888();
  swift_getWitnessTable();
  uint64_t v27 = sub_19EBF69D8();
  uint64_t result = sub_19EBF7128();
  if (v26 == result)
  {
    uint64_t v28 = v30;
    v5[3] = v29;
    v5[4] = v28;
    v5[2] = v27;
    return (uint64_t)v5;
  }
  else
  {
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t sub_19E63BA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E63B788(a1, a2, a3, a4);
}

uint64_t sub_19E63BA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  if (a3)
  {
    uint64_t v5 = a3;
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = v4(ObjectType, v3);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v5 = sub_19EBF6968();
      *(void *)(v5 + 16) = v8;
    }
    else
    {
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    v31[1] = v8;
    uint64_t v32 = 0;
    v31[0] = v5 + 32;
    sub_19E6B5844(v31, &v32, v7);
    uint64_t v9 = v32;
    BOOL v10 = v8 < v32;
    if (v8 < v32)
    {
LABEL_20:
      __break(1u);
      if (v10) {
        __break(1u);
      }
      *(void *)(v5 + 16) = v9;
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    *(void *)(v5 + 16) = v32;
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = v4(v11, v3);
  uint64_t v13 = v12;
  uint64_t v9 = *(void *)(v12 + 16);
  if (v9)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 1;
    do
    {
      uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
      uint64_t v17 = v15 * v16;
      uint64_t v18 = (unsigned __int128)(v15 * (__int128)v16) >> 64;
      BOOL v10 = v18 < v17 >> 63;
      if (v18 != v17 >> 63)
      {
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v15 = v17;
      ++v14;
    }
    while (v9 != v14);
    if (v17) {
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
  }
  else
  {
LABEL_13:
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_19E5EBFD0(v13, v5);
    swift_bridgeObjectRelease();
    int64_t v22 = sub_19E5F321C(v21);
    char v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      uint64_t v25 = 1;
    }
    else {
      uint64_t v25 = v22;
    }
    uint64_t v4 = v20;
    uint64_t v3 = v19;
  }
  MEMORY[0x1F4188790](v25);
  uint64_t v26 = sub_19E63B2C0();
  uint64_t v27 = v4(v11, v3);
  v31[0] = v26;
  uint64_t v28 = sub_19EBF7158();
  swift_getWitnessTable();
  swift_allocObject();
  uint64_t v29 = sub_19E63B788(v27, v5, (uint64_t)v31, v28);
  swift_release();
  return v29;
}

uint64_t sub_19E63BD5C(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t ObjectType = swift_getObjectType();
  v9[1] = *(_OWORD *)(v2 + 16);
  uint64_t v10 = v5;
  long long v11 = *(_OWORD *)(v2 + 40);
  uint64_t v12 = a1;
  uint64_t result = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), _OWORD *, uint64_t, uint64_t))(v11 + 32))(sub_19E63BE10, v9, MEMORY[0x1E4FBC848] + 8, ObjectType);
  *a2 = v6;
  return result;
}

uint64_t sub_19E63BE10(uint64_t a1, uint64_t a2)
{
  return sub_19E63B370(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16));
}

uint64_t sub_19E63BE34(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 40);
  *a2 = *(void *)(v2 + 32);
  return v3();
}

uint64_t sub_19E63BE64()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_19E63BF58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_19E63C0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_19E63C1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19E63C288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19E63C360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19E63C438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19E63C510(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          char v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_19E63C7A8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x19E63CAC0);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          char v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          int64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for LoopIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19E63CB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  v16[1] = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  unsigned int v12 = (char *)v16 - v11;
  unsigned int v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13(a4, a1, a2);
  v13(v9, a1, a2);
  sub_19EBF67F8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  uint64_t v14 = type metadata accessor for LoopIterator();
  return (*(uint64_t (**)(char *, char *, void))(v10 + 32))(&a4[*(int *)(v14 + 36)], v12, v16[0]);
}

uint64_t sub_19E63CCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  int v21 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v19 = (char *)&v19 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_19EBF6E68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v19 - v11;
  uint64_t v13 = *(int *)(a1 + 36);
  uint64_t v23 = v2;
  uint64_t v14 = v2 + v13;
  swift_getAssociatedConformanceWitness();
  sub_19EBF6EB8();
  uint64_t v15 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v23, v4);
    size_t v16 = v19;
    sub_19EBF67F8();
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 40))(v14, v16, AssociatedTypeWitness);
    return sub_19EBF6EB8();
  }
  else
  {
    uint64_t v18 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v24, v12, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v8);
  }
}

void MLModelConfiguration.optimizationHints.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_optimizationHints);
  id v5 = objc_msgSend(v4, sel_reshapeFrequency);

  if (v5)
  {
    if (v5 != (id)1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      id v12 = objc_msgSend(v2, sel_optimizationHints);
      objc_msgSend(v12, sel_reshapeFrequency);

      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
  }
  id v7 = objc_msgSend(v2, sel_optimizationHints);
  id v8 = objc_msgSend(v7, sel_specializationStrategy);

  if ((unint64_t)v8 <= 1)
  {
    id v9 = objc_msgSend(v2, sel_optimizationHints);
    objc_msgSend(v9, sel_hotHandDuration);
    uint64_t v11 = v10;

    *(unsigned char *)a1 = v6;
    *(void *)(a1 + 8) = v11;
    *(unsigned char *)(a1 + 16) = (_BYTE)v8;
    return;
  }
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v13 = objc_msgSend(v2, sel_optimizationHints);
  objc_msgSend(v13, sel_specializationStrategy);

  sub_19EBF7318();
  sub_19EBF67D8();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_19EBF71F8();
  __break(1u);
}

void MLModelConfiguration.optimizationHints.setter(double *a1)
{
  uint64_t v2 = *(unsigned __int8 *)a1;
  double v3 = a1[1];
  uint64_t v4 = *((unsigned __int8 *)a1 + 16);
  id v5 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v5, sel_setReshapeFrequency_, v2);

  id v6 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v6, sel_setSpecializationStrategy_, v4);

  id v7 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v7, sel_setHotHandDuration_, v3);
}

void (*MLModelConfiguration.optimizationHints.modify(uint64_t a1))(unsigned __int8 *a1)
{
  *(void *)(a1 + 24) = v1;
  MLModelConfiguration.optimizationHints.getter(a1);
  return sub_19E63D3D4;
}

void sub_19E63D3D4(unsigned __int8 *a1)
{
  uint64_t v1 = (void *)*((void *)a1 + 3);
  uint64_t v2 = *a1;
  double v3 = *((double *)a1 + 1);
  uint64_t v4 = a1[16];
  id v5 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v5, sel_setReshapeFrequency_, v2);

  id v6 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v6, sel_setSpecializationStrategy_, v4);

  id v7 = objc_msgSend(v1, sel_optimizationHints);
  objc_msgSend(v7, sel_setHotHandDuration_, v3);
}

double sub_19E63D4B8@<D0>(uint64_t a1@<X8>)
{
  MLModelConfiguration.optimizationHints.getter((uint64_t)v4);
  double result = v5;
  char v3 = v6;
  *(unsigned char *)a1 = v4[0];
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = v3;
  return result;
}

double sub_19E63D504(uint64_t a1)
{
  double v1 = *(double *)(a1 + 8);
  char v2 = *(unsigned char *)(a1 + 16);
  LOBYTE(v4[0]) = *(unsigned char *)a1;
  v4[1] = v1;
  char v5 = v2;
  MLModelConfiguration.optimizationHints.setter(v4);
  return result;
}

uint64_t sub_19E63D54C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_19E66F600(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x19F3BF970](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      id v8 = objc_msgSend(v6, sel_integerValue);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_19E66F600(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t MLStateConstraint.bufferShape.getter()
{
  id v1 = objc_msgSend(v0, sel_bufferShape);
  sub_19E5F47F0();
  unint64_t v2 = sub_19EBF68E8();

  uint64_t v3 = sub_19E63D54C(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t MLComputePlan.DeviceUsage.supported.getter()
{
  return swift_bridgeObjectRetain();
}

id MLComputePlan.DeviceUsage.preferred.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

uint64_t sub_19E63D750@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (unint64_t)a1;
  id v4 = objc_msgSend(a1, sel_supportedComputeDevices);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C890);
  unint64_t v5 = sub_19EBF68E8();

  if (v5 >> 62) {
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      uint64_t v23 = MEMORY[0x1E4FBC860];
      sub_19E66F808(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0) {
        break;
      }
      uint64_t v19 = a2;
      unint64_t v20 = v2;
      uint64_t v7 = 0;
      uint64_t v8 = v23;
      while (v6 != v7)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          MEMORY[0x19F3BF970](v7, v5);
        }
        else {
          swift_unknownObjectRetain();
        }
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (v9)
        {
          uint64_t v10 = v9;
          a2 = 0;
        }
        else
        {
          self;
          uint64_t v11 = swift_dynamicCastObjCClass();
          if (v11)
          {
            uint64_t v10 = v11;
            a2 = 1;
          }
          else
          {
            self;
            uint64_t v12 = swift_dynamicCastObjCClass();
            if (!v12) {
              goto LABEL_24;
            }
            uint64_t v10 = v12;
            a2 = 2;
          }
        }
        uint64_t v23 = v8;
        unint64_t v2 = *(void *)(v8 + 16);
        unint64_t v13 = *(void *)(v8 + 24);
        if (v2 >= v13 >> 1)
        {
          sub_19E66F808(v13 > 1, v2 + 1, 1);
          uint64_t v8 = v23;
        }
        ++v7;
        *(void *)(v8 + 16) = v2 + 1;
        uint64_t v14 = v8 + 16 * v2;
        *(void *)(v14 + 32) = v10;
        *(unsigned char *)(v14 + 40) = a2;
        if (v6 == v7)
        {
          swift_bridgeObjectRelease();
          a2 = v19;
          unint64_t v2 = v20;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_19EBF7228();
      swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_24:
    sub_19EBF6FE8();
    sub_19EBF67A8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_22:
    id v15 = objc_msgSend((id)v2, sel_preferredComputeDevice);
    uint64_t result = MLComputeDevice.init(device:)((uint64_t)&v21);
    uint64_t v17 = v21;
    char v18 = v22;
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v17;
    *(unsigned char *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v2;
  }
  return result;
}

double MLComputePlan.Cost.weight.getter()
{
  return *(double *)v0;
}

void MLComputePlan.modelStructure.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  char v3 = *(void **)(v1 + 24);
  id v4 = *(void **)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 24) = v5;
  sub_19E63DA5C(v2, v3, v4, v5);
}

void sub_19E63DA5C(uint64_t a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return;
    }
    a2 = a3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();

  id v4 = a2;
}

uint64_t static MLComputePlan.load(asset:configuration:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x1F4188298](sub_19E63DAF0, 0, 0);
}

uint64_t sub_19E63DAF0()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  char v3 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_19E63DC0C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_19E63DE4C;
  v0[13] = &block_descriptor;
  v0[14] = v4;
  objc_msgSend(v3, sel_loadModelAsset_configuration_completionHandler_, v2, v1, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_19E63DC0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_19E63DDE0;
  }
  else {
    uint64_t v2 = sub_19E63DD1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19E63DD1C()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  type metadata accessor for MLComputePlan();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 48) = v1;
  id v3 = v1;
  sub_19E6ADA5C(objc_msgSend(v3, sel_modelStructure), (uint64_t)&v8);

  uint64_t v4 = v9;
  char v5 = v10;
  *(_OWORD *)(v2 + 16) = v8;
  *(void *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 40) = v5;
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v2);
}

uint64_t sub_19E63DDE0()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19E63DE4C(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945C970);
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MLComputePlan()
{
  return self;
}

uint64_t static MLComputePlan.load(contentsOf:configuration:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x1F4188298](sub_19E63DF50, 0, 0);
}

uint64_t sub_19E63DF50()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = self;
  uint64_t v3 = sub_19EBF6348();
  v0[18] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_19E63E07C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_19E63DE4C;
  v0[13] = &block_descriptor_2;
  v0[14] = v4;
  objc_msgSend(v2, sel_loadContentsOfURL_configuration_completionHandler_, v3, v1, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_19E63E07C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_19E63E258;
  }
  else {
    uint64_t v2 = sub_19E63E18C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19E63E18C()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void **)(v0 + 120);

  type metadata accessor for MLComputePlan();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 48) = v1;
  id v3 = v1;
  sub_19E6ADA5C(objc_msgSend(v3, sel_modelStructure), (uint64_t)&v8);

  uint64_t v4 = v9;
  char v5 = v10;
  *(_OWORD *)(v2 + 16) = v8;
  *(void *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 40) = v5;
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v2);
}

uint64_t sub_19E63E258()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_19E63E2C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(*(id *)(v2 + 48), sel_estimatedCostOfMLProgramOperation_, *(void *)(a1 + 40));
  char v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, sel_weight);
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 8) = v5 == 0;
}

id sub_19E63E344@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*(id *)(v2 + 48), sel_computeDeviceUsageForNeuralNetworkLayer_, *(void *)(a1 + 48));
  if (result)
  {
    id result = (id)sub_19E63D750(result, (uint64_t)v9);
    uint64_t v5 = v9[0];
    uint64_t v6 = v9[1];
    uint64_t v7 = v10;
    uint64_t v8 = v11;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  return result;
}

id sub_19E63E3BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*(id *)(v2 + 48), sel_computeDeviceUsageForMLProgramOperation_, *(void *)(a1 + 40));
  if (result)
  {
    id result = (id)sub_19E63D750(result, (uint64_t)v9);
    uint64_t v5 = v9[0];
    uint64_t v6 = v9[1];
    uint64_t v7 = v10;
    uint64_t v8 = v11;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  return result;
}

uint64_t MLComputePlan.deinit()
{
  sub_19E63E464(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));

  return v0;
}

void sub_19E63E464(uint64_t a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return;
    }
    a2 = a3;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t MLComputePlan.__deallocating_deinit()
{
  sub_19E63E464(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x1F4186488](v0, 56, 7);
}

void MLComputePlan.DeviceUsage.supportState(for:)(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = objc_msgSend(*(id *)(v2 + 24), sel_supportInfoForComputeDevice_, *a1);
  if (v4)
  {
    sub_19E63E588(v4, a2);
  }
  else
  {
    *a2 = 18;
  }
}

void sub_19E63E588(void *a1@<X0>, char *a2@<X8>)
{
  if (objc_msgSend(a1, sel_state))
  {
    id v4 = objc_msgSend(a1, sel_state);

    MLComputePlan.DeviceUsage.Reason.Category.init(rawValue:)((Swift::Int)v4);
    char v5 = v6;
    if (v6 == 17) {
      char v5 = 18;
    }
  }
  else
  {

    char v5 = 17;
  }
  *a2 = v5;
}

unint64_t MLComputePlan.DeviceUsage.SupportState.description.getter()
{
  unint64_t result = 0x6574726F70707553;
  switch(*v0)
  {
    case 1:
    case 4:
    case 0xD:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000061;
      break;
    case 0x11:
      return result;
    default:
      unint64_t result = 0xD00000000000002DLL;
      break;
  }
  return result;
}

uint64_t MLComputePlan.DeviceUsage.SupportState.hash(into:)()
{
  if (*v0 != 17) {
    sub_19EBF7488();
  }
  return sub_19EBF7488();
}

BOOL static MLComputePlan.DeviceUsage.SupportState.== infix(_:_:)(char *a1, char *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2 == 17) {
    return v3 == 17;
  }
  if (v3 == 17) {
    return 0;
  }
  return qword_19EC38E08[v2] == qword_19EC38E08[v3];
}

BOOL static MLComputePlan.DeviceUsage.Reason.== infix(_:_:)(char *a1, char *a2)
{
  return qword_19EC38E08[*a1] == qword_19EC38E08[*a2];
}

uint64_t MLComputePlan.DeviceUsage.SupportState.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  if (v1 != 17) {
    sub_19EBF7488();
  }
  sub_19EBF7488();
  return sub_19EBF74B8();
}

uint64_t sub_19E63E928()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  if (v1 != 17) {
    sub_19EBF7488();
  }
  sub_19EBF7488();
  return sub_19EBF74B8();
}

uint64_t sub_19E63E990()
{
  if (*v0 != 17) {
    sub_19EBF7488();
  }
  return sub_19EBF7488();
}

uint64_t sub_19E63E9E0()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  if (v1 != 17) {
    sub_19EBF7488();
  }
  sub_19EBF7488();
  return sub_19EBF74B8();
}

BOOL sub_19E63EA4C(char *a1, char *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2 == 17) {
    return v3 == 17;
  }
  if (v3 == 17) {
    return 0;
  }
  return qword_19EC38E08[v2] == qword_19EC38E08[v3];
}

void MLComputePlan.DeviceUsage.Reason.category.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t _s6CoreML13MLComputePlanC11DeviceUsageV6ReasonV11descriptionSSvg_0()
{
  unint64_t result = 0xD00000000000002DLL;
  switch(*v0)
  {
    case 1:
    case 4:
    case 0xD:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000061;
      break;
    default:
      return result;
  }
  return result;
}

CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional __swiftcall MLComputePlan.DeviceUsage.Reason.Category.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 299)
  {
    if (rawValue > 399)
    {
      switch(rawValue)
      {
        case 400:
          *uint64_t v1 = 14;
          break;
        case 501:
          *uint64_t v1 = 15;
          break;
        case 502:
          *uint64_t v1 = 16;
          break;
        default:
LABEL_26:
          *uint64_t v1 = 17;
          break;
      }
    }
    else
    {
      switch(rawValue)
      {
        case 300:
          *uint64_t v1 = 9;
          break;
        case 310:
          *uint64_t v1 = 10;
          break;
        case 320:
          *uint64_t v1 = 11;
          break;
        case 330:
          *uint64_t v1 = 12;
          break;
        case 340:
          *uint64_t v1 = 13;
          break;
        default:
          goto LABEL_26;
      }
    }
  }
  else
  {
    if ((unint64_t)rawValue <= 0x12B)
    {
      switch(rawValue)
      {
        case 100:
          *uint64_t v1 = 1;
          return (CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional)rawValue;
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 126:
        case 127:
        case 128:
        case 129:
          goto LABEL_26;
        case 110:
          *uint64_t v1 = 2;
          return (CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional)rawValue;
        case 120:
          *uint64_t v1 = 3;
          return (CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional)rawValue;
        case 130:
          *uint64_t v1 = 4;
          return (CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional)rawValue;
        default:
          JUMPOUT(0);
      }
    }
    switch(rawValue)
    {
      case 200:
        *uint64_t v1 = 5;
        break;
      case 210:
        *uint64_t v1 = 6;
        break;
      case 220:
        *uint64_t v1 = 7;
        break;
      case 230:
        *uint64_t v1 = 8;
        break;
      default:
        goto LABEL_26;
    }
  }
  return (CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional)rawValue;
}

uint64_t MLComputePlan.DeviceUsage.Reason.hash(into:)()
{
  return sub_19EBF7488();
}

uint64_t MLComputePlan.DeviceUsage.Reason.hashValue.getter()
{
  return sub_19EBF74B8();
}

uint64_t sub_19E63EFC8()
{
  return sub_19EBF74B8();
}

uint64_t sub_19E63F018()
{
  return sub_19EBF7488();
}

uint64_t sub_19E63F050()
{
  return sub_19EBF74B8();
}

BOOL sub_19E63F09C(char *a1, char *a2)
{
  return qword_19EC38E08[*a1] == qword_19EC38E08[*a2];
}

uint64_t MLComputePlan.DeviceUsage.Reason.Category.rawValue.getter()
{
  return qword_19EC38E08[*v0];
}

CoreML::MLComputePlan::DeviceUsage::Reason::Category_optional sub_19E63F0D4(Swift::Int *a1)
{
  return MLComputePlan.DeviceUsage.Reason.Category.init(rawValue:)(*a1);
}

void sub_19E63F0DC(void *a1@<X8>)
{
  *a1 = qword_19EC38E08[*v1];
}

unint64_t sub_19E63F0F8()
{
  unint64_t result = qword_1E945C950;
  if (!qword_1E945C950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C950);
  }
  return result;
}

unint64_t sub_19E63F150()
{
  unint64_t result = qword_1E945C958;
  if (!qword_1E945C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C958);
  }
  return result;
}

unint64_t sub_19E63F1A8()
{
  unint64_t result = qword_1E945C960;
  if (!qword_1E945C960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C960);
  }
  return result;
}

uint64_t method lookup function for MLComputePlan(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MLComputePlan);
}

uint64_t dispatch thunk of MLComputePlan.estimatedCost(of:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MLComputePlan.deviceUsage(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void destroy for MLComputePlan.DeviceUsage(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for MLComputePlan.DeviceUsage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  char v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRetain();
  id v6 = v3;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for MLComputePlan.DeviceUsage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  id v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  id v7 = v4;

  uint64_t v8 = *(void **)(a2 + 24);
  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for MLComputePlan.DeviceUsage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 16);
  char v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;

  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelStructure.Program.Block(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelStructure.Program.Block(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputePlan.DeviceUsage()
{
  return &type metadata for MLComputePlan.DeviceUsage;
}

ValueMetadata *type metadata accessor for MLComputePlan.Cost()
{
  return &type metadata for MLComputePlan.Cost;
}

uint64_t getEnumTagSinglePayload for MLComputePlan.DeviceUsage.SupportState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEF)
  {
    unsigned int v2 = a2 + 17;
    if (a2 + 17 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 17;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 17;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19E63F540);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 17;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 0x11;
  unsigned int v9 = v7 - 17;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for MLComputePlan.DeviceUsage.SupportState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 17;
  if (a3 + 17 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xEF) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v7 = ((a2 - 239) >> 8) + 1;
    void *result = a2 + 17;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x19E63F628);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          void *result = a2 + 17;
        break;
    }
  }
  return result;
}

uint64_t sub_19E63F650(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x11) {
    return v1 - 16;
  }
  else {
    return 0;
  }
}

unsigned char *sub_19E63F664(unsigned char *result, int a2)
{
  if (a2) {
    void *result = a2 + 16;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputePlan.DeviceUsage.SupportState()
{
  return &type metadata for MLComputePlan.DeviceUsage.SupportState;
}

ValueMetadata *type metadata accessor for MLComputePlan.DeviceUsage.Reason()
{
  return &type metadata for MLComputePlan.DeviceUsage.Reason;
}

uint64_t _s6CoreML13MLComputePlanC11DeviceUsageV6ReasonV8CategoryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6CoreML13MLComputePlanC11DeviceUsageV6ReasonV8CategoryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    void *result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19E63F7F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputePlan.DeviceUsage.Reason.Category()
{
  return &type metadata for MLComputePlan.DeviceUsage.Reason.Category;
}

uint64_t sub_19E63F830()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19E63F890()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_19E63F898(void (*a1)(char *, char *))
{
  CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)(v1 + 16), 1uLL);
  BaseAddress = (char *)CVPixelBufferGetBaseAddress(*(CVPixelBufferRef *)(v1 + 16));
  size_t DataSize = CVPixelBufferGetDataSize(*(CVPixelBufferRef *)(v1 + 16));
  if (BaseAddress) {
    uint64_t v5 = &BaseAddress[DataSize];
  }
  else {
    uint64_t v5 = 0;
  }
  a1(BaseAddress, v5);
  return CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)(v1 + 16), 1uLL);
}

uint64_t sub_19E63F92C(void (*a1)(char *, char *))
{
  CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)(v1 + 16), 0);
  BaseAddress = (char *)CVPixelBufferGetBaseAddress(*(CVPixelBufferRef *)(v1 + 16));
  size_t DataSize = CVPixelBufferGetDataSize(*(CVPixelBufferRef *)(v1 + 16));
  if (BaseAddress) {
    uint64_t v5 = &BaseAddress[DataSize];
  }
  else {
    uint64_t v5 = 0;
  }
  a1(BaseAddress, v5);
  return CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)(v1 + 16), 0);
}

void sub_19E63F9C0(void (*a1)(void))
{
  id v3 = *(id *)(v1 + 16);
  a1();
}

uint64_t sub_19E63FA28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19E63FA58()
{
  sub_19E63FA28();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t type metadata accessor for PixelBufferStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19E63FAA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19E63FAB0(void (*a1)(char *, char *))
{
  return sub_19E63F898(a1);
}

uint64_t sub_19E63FAC8(void (*a1)(char *, char *))
{
  return sub_19E63F92C(a1);
}

unint64_t sub_19E63FAE0(uint64_t a1)
{
  unint64_t result = sub_19E63FB08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E63FB08()
{
  unint64_t result = qword_1E945CD80;
  if (!qword_1E945CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD80);
  }
  return result;
}

uint64_t sub_19E63FB5C(void *a1, uint64_t a2, char a3)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
      if (v6 != 1)
      {
        BOOL v7 = *(void **)(a2 + 40);
        id v8 = *(id *)(a2 + 32);
        id v9 = v7;
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x19E63FDC4);
  }
  id v8 = (id)MEMORY[0x19F3BF970](0, a2);
  id v9 = (id)MEMORY[0x19F3BF970](1, a2);
LABEL_5:
  id v10 = v9;
  switch(a3)
  {
    case 1:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_divisionWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 2:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_maximumWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 3:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_minimumWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 4:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_moduloWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 5:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_multiplicationWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 6:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_powerWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 7:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_subtractionWithPrimaryTensor_secondaryTensor_name_;
      break;
    default:
      uint64_t v11 = (void *)sub_19EBF6788();
      uint64_t v12 = &selRef_additionWithPrimaryTensor_secondaryTensor_name_;
      break;
  }
  id v13 = objc_msgSend(a1, *v12, v8, v10, v11);

  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19EC387F0;
  *(void *)(v14 + 32) = v13;
  uint64_t v16 = v14;
  sub_19EBF6908();

  return v16;
}

uint64_t sub_19E63FDE4()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19E63FE04, 0, 0);
}

uint64_t sub_19E63FE04()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[3] = v2;
  swift_unownedRetainStrong();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = swift_task_alloc();
  v0[4] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19E63FF0C;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_19E63FF0C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E640040, 0, 0);
}

uint64_t sub_19E640040()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19E640054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = *(void **)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  aBlock[4] = sub_19E640544;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E6405AC;
  aBlock[3] = &block_descriptor_3;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_notifyListener_atValue_block_, v11, a3, v13);
  _Block_release(v13);
  return swift_release();
}

uint64_t sub_19E640220()
{
  swift_unownedRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for MetalAsyncEvent()
{
  return self;
}

uint64_t sub_19E64027C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_unownedRetainStrong();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_unknownObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_19E6402BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_unownedRetainStrong();
  uint64_t v2 = *(void *)(v1 + 24);
  swift_unownedRetainStrong();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_19E640310()
{
  uint64_t v0 = *(void *)(swift_unownedRetainStrong() + 48);
  swift_release();
  return v0;
}

uint64_t sub_19E640340()
{
  return *(void *)(v0 + 24);
}

id sub_19E640348()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_unownedRetainStrong();
  id v2 = objc_msgSend(*(id *)(v1 + 32), sel_signaledValue);
  swift_release();
  return v2;
}

uint64_t sub_19E640390()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_19E635084;
  v2[2] = v0;
  return MEMORY[0x1F4188298](sub_19E63FE04, 0, 0);
}

uint64_t sub_19E640434(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  uint64_t v4 = *(void *)(v3 + 32);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(a1, sel_encodeWaitForEvent_value_, v4, *(void *)(v1 + 24));

  return swift_unknownObjectRelease();
}

uint64_t sub_19E6404A8(uint64_t a1)
{
  return sub_19E640054(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19E6404B0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19E640544()
{
  return sub_19EBF6A08();
}

uint64_t sub_19E6405AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_19E64062C(unint64_t result, unint64_t a2, uint64_t (*a3)(unint64_t))
{
  if (result != a2)
  {
    unint64_t v4 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v5 = *v3;
      unint64_t v6 = *(void *)(*v3 + 16);
      if (v6 > result)
      {
        if (v6 > a2)
        {
          uint64_t v9 = *(void *)(v5 + 32 + 8 * result);
          uint64_t v10 = *(void *)(v5 + 32 + 8 * a2);
          swift_retain();
          swift_retain();
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            unint64_t result = a3(v5);
            unint64_t v5 = result;
          }
          if (*(void *)(v5 + 16) > v4)
          {
            *(void *)(v5 + 32 + 8 * v4) = v10;
            unint64_t result = swift_release();
            if (*(void *)(v5 + 16) > a2)
            {
              *(void *)(v5 + 32 + 8 * a2) = v9;
              unint64_t result = swift_release();
              unint64_t *v3 = v5;
              return result;
            }
LABEL_15:
            __break(1u);
            return result;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_19E64071C()
{
  type metadata accessor for MetalBufferAllocator();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_19E668A90(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  off_1E945C990 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_19E640784@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t *a7@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v65 = a5;
  int v63 = a4;
  v70 = a2;
  uint64_t v60 = a1;
  char v66 = a7;
  uint64_t v58 = sub_19EBF6558();
  uint64_t v8 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  v59 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19EBF6528();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v68 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  char v71 = (char *)&v55 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v55 - v16;
  if (qword_1E945BB50 != -1) {
    swift_once();
  }
  int v62 = a6 & 1;
  uint64_t v18 = sub_19EBF6548();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1E946A518);
  sub_19EBF6518();
  uint64_t v61 = v19;
  unint64_t v20 = sub_19EBF6538();
  os_signpost_type_t v21 = sub_19EBF6D78();
  char v22 = sub_19EBF6E18();
  uint64_t v56 = v8;
  if (v22)
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v24 = v71;
    v23(v71, v17, v10);
    uint64_t v25 = v11;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v20, v21, v27, "GPU :: Storage allocation", "", v26, 2u);
    uint64_t v28 = v26;
    uint64_t v11 = v25;
    MEMORY[0x19F3C3580](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v10);
  }
  else
  {

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  }
  uint64_t v57 = v23;
  v23(v71, v17, v10);
  sub_19EBF6588();
  swift_allocObject();
  sub_19EBF6578();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v69 = v10;
  uint64_t v67 = v11 + 8;
  v29(v17, v10);
  uint64_t v30 = *v60;
  uint64_t v31 = (void *)*((void *)v70 + 3);
  id v32 = objc_msgSend(v31, sel_registryID);
  uint64_t v33 = (uint64_t *)(v30 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v30 + 16) + 16) && (sub_19E6695EC((uint64_t)v32), (v34 & 1) != 0))
  {
    swift_endAccess();
    swift_retain();
    uint64_t v35 = (uint64_t)v70;
  }
  else
  {
    swift_endAccess();
    type metadata accessor for MetalBufferAllocator.DeviceBufferAllocator();
    swift_allocObject();
    uint64_t v35 = (uint64_t)v70;
    uint64_t v36 = swift_retain();
    id v37 = sub_19E645498(v36, 100);
    swift_release();
    swift_retain();
    id v38 = objc_msgSend(v31, sel_registryID);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = *v33;
    *uint64_t v33 = 0x8000000000000000;
    sub_19E668148((uint64_t)v37, (uint64_t)v38, isUniquelyReferenced_nonNull_native);
    *uint64_t v33 = v72;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  uint64_t v40 = v63 & 0x1FF;
  swift_retain();
  uint64_t v41 = sub_19E640DA0(v35, v64, v40, v65, v62);
  swift_release_n();
  *char v66 = v41;
  vImagePixelCount v42 = sub_19EBF6538();
  size_t v43 = v68;
  sub_19EBF6568();
  os_signpost_type_t v44 = sub_19EBF6D68();
  char v45 = sub_19EBF6E18();
  uint64_t v46 = v69;
  if (v45)
  {
    v70 = v29;
    swift_retain();
    vImagePixelCount v47 = v59;
    sub_19EBF6598();
    swift_release();
    uint64_t v48 = v56;
    uint64_t v49 = v58;
    if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v47, v58) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v50 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v59, v49);
      unint64_t v50 = "";
    }
    v57(v71, v43, v46);
    char v51 = v43;
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    os_signpost_id_t v53 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v42, v44, v53, "GPU :: Storage allocation", v50, v52, 2u);
    uint64_t v46 = v69;
    MEMORY[0x19F3C3580](v52, -1, -1);

    uint64_t v29 = v70;
    v70(v51, v46);
  }
  else
  {

    char v71 = v43;
  }
  v29(v71, v46);
  return swift_release();
}

uint64_t sub_19E640DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  void (*v30)(uint64_t *__return_ptr, void *);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  id v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void v83[3];
  uint64_t v84;

  unint64_t v6 = v5;
  LODWORD(v7) = a5;
  if (qword_1E945BB38 != -1) {
    goto LABEL_142;
  }
  while (1)
  {
    if (byte_1E946A4F3 != 1) {
      goto LABEL_98;
    }
    uint64_t v12 = *(void *)(a2 + 16);
    if (v12)
    {
      uint64_t v13 = (uint64_t *)(a2 + 32);
      uint64_t v14 = 1;
      while (1)
      {
        uint64_t v15 = *v13++;
        uint64_t v16 = v14 * v15;
        if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63) {
          goto LABEL_130;
        }
        uint64_t v14 = v16;
        if (!--v12) {
          goto LABEL_9;
        }
      }
    }
    uint64_t v16 = 1;
LABEL_9:
    if (a3 > 0xAu) {
      uint64_t v17 = 8;
    }
    else {
      uint64_t v17 = qword_19EC39008[(char)a3];
    }
    uint64_t v18 = v16 * v17;
    if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63) {
      goto LABEL_147;
    }
    int v82 = v16 * v17;
    id v74 = a4;
    uint64_t v73 = v7;
    char v71 = a2;
    uint64_t v72 = a3;
    v70 = a1;
    if ((v7 & 1) == 0)
    {
      if (!a4) {
        goto LABEL_150;
      }
      if (a4 == -1 && v18 == 0x8000000000000000) {
        goto LABEL_158;
      }
      uint64_t v19 = v18 % a4;
      if (!(v18 % a4)) {
        goto LABEL_27;
      }
      uint64_t v20 = v18 + a4;
      if (__OFADD__(v18, a4)) {
        goto LABEL_153;
      }
      uint64_t v18 = v20 - v19;
      if (!__OFSUB__(v20, v19)) {
        goto LABEL_27;
      }
      __break(1u);
    }
    int v21 = getpagesize();
    if (v18 > v21)
    {
      if (!v21) {
        goto LABEL_157;
      }
      uint64_t v22 = v18 % v21;
      if (v22)
      {
        uint64_t v23 = v18 + v21;
        if (__OFADD__(v18, v21)) {
          goto LABEL_159;
        }
        uint64_t v18 = v23 - v22;
        if (__OFSUB__(v23, v22)) {
          goto LABEL_160;
        }
      }
LABEL_27:
      int v82 = v18;
    }
    swift_beginAccess();
    a1 = v6[3];
    uint64_t v24 = (void *)v6[4];
    v75 = v6;
    uint64_t v25 = v6[5];
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v18;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_19E6455AC;
    *(void *)(v7 + 24) = v26;
    unint64_t v6 = (void *)swift_allocObject();
    v6[2] = sub_19E6455C0;
    v6[3] = v7;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_beginAccess();
    os_signpost_id_t v27 = v24 + 4;
    int v77 = (uint64_t *)(a1 + 16);
    uint64_t v28 = v25;
    uint64_t v80 = v25 + 32;
    uint64_t v81 = v24 + 5;
    v76 = v24 + 8;
    a4 = -1;
    id v78 = v28;
    uint64_t v79 = a1;
LABEL_31:
    a3 = a4 + 1;
    if (!__OFADD__(a4, 1)) {
      break;
    }
LABEL_141:
    __break(1u);
LABEL_142:
    swift_once();
  }
  uint64_t v29 = v28;
  uint64_t v7 = v24[2];
  if (a3 < v7)
  {
    while ((a3 & 0x8000000000000000) == 0)
    {
      a2 = a4 + 1;
      if ((unint64_t)(a4 + 1) >= v24[2]) {
        goto LABEL_132;
      }
      uint64_t v30 = (void (*)(uint64_t *__return_ptr, void *))v6[2];
      v83[0] = v81[a4];
      v30(&v84, v83);
      if (v84)
      {
        if (++a4 >= v7) {
          goto LABEL_97;
        }
        id v32 = v24[2];
        if (a4 >= v32) {
          goto LABEL_144;
        }
        uint64_t v33 = v27[a4];
        if (a1)
        {
          char v34 = sub_19E643EF4(v33, (uint64_t)v27, v32, v77);
          if (v35) {
            goto LABEL_97;
          }
          if ((v34 & 0x8000000000000000) != 0) {
            goto LABEL_146;
          }
        }
        else if (*v27 == v33)
        {
          char v34 = 0;
        }
        else
        {
          if (v32 == 1) {
            goto LABEL_97;
          }
          if (*v81 == v33)
          {
            char v34 = 1;
          }
          else
          {
            if (v32 == 2) {
              goto LABEL_97;
            }
            if (v24[6] == v33)
            {
              char v34 = 2;
            }
            else
            {
              if (v32 == 3) {
                goto LABEL_97;
              }
              if (v24[7] != v33)
              {
                uint64_t v36 = 0;
                while (v32 - 4 != v36)
                {
                  id v37 = v76[v36++];
                  if (v37 == v33)
                  {
                    char v34 = v36 + 3;
                    if (v36 + 3 < 0) {
                      goto LABEL_146;
                    }
                    goto LABEL_61;
                  }
                }
                goto LABEL_97;
              }
              char v34 = 3;
            }
          }
        }
LABEL_61:
        if (v34 >= *(void *)(v29 + 16)) {
          goto LABEL_145;
        }
        id v38 = 0;
        a3 = *(void *)(*(void *)(v80 + 8 * v34) + 24);
        if ((a4 & 0x8000000000000000) == 0)
        {
          while (1)
          {
            uint64_t v39 = v24[2];
            if (a4 >= v39) {
              goto LABEL_135;
            }
            uint64_t v7 = v27[a4];
            if (a1)
            {
              uint64_t v40 = sub_19E643EF4(v27[a4], (uint64_t)v27, v39, v77);
              if (v41) {
                goto LABEL_97;
              }
              if ((v40 & 0x8000000000000000) != 0) {
                goto LABEL_137;
              }
            }
            else if (*v27 == v7)
            {
              uint64_t v40 = 0;
            }
            else
            {
              if (v39 == 1) {
                goto LABEL_97;
              }
              if (*v81 == v7)
              {
                uint64_t v40 = 1;
              }
              else
              {
                if (v39 == 2) {
                  goto LABEL_97;
                }
                if (v24[6] == v7)
                {
                  uint64_t v40 = 2;
                }
                else
                {
                  if (v39 == 3) {
                    goto LABEL_97;
                  }
                  if (v24[7] != v7)
                  {
                    vImagePixelCount v42 = 0;
                    while (v39 - 4 != v42)
                    {
                      size_t v43 = v76[v42++];
                      if (v43 == v7)
                      {
                        uint64_t v40 = v42 + 3;
                        if (v42 + 3 < 0) {
                          goto LABEL_137;
                        }
                        goto LABEL_83;
                      }
                    }
LABEL_96:
                    if (v38 == 0x7FFFFFFFFFFFFFFFLL) {
                      goto LABEL_154;
                    }
                    goto LABEL_97;
                  }
                  uint64_t v40 = 3;
                }
              }
            }
LABEL_83:
            if (v40 >= *(void *)(v29 + 16)) {
              goto LABEL_136;
            }
            os_signpost_type_t v44 = *(void **)(v80 + 8 * v40);
            if (v38 >= v44[3]) {
              goto LABEL_96;
            }
            if (v38 < 0) {
              goto LABEL_138;
            }
            char v45 = v44[4] + v38;
            uint64_t v46 = v44[2];
            if (v45 < v46) {
              uint64_t v46 = 0;
            }
            a1 = v82;
            if (v82 + 0x4000000000000000 < 0) {
              goto LABEL_139;
            }
            a2 = 2 * v82;
            if (2 * v82 < v82) {
              goto LABEL_140;
            }
            vImagePixelCount v47 = v24;
            uint64_t v48 = (id)v44[v45 - v46 + 5];
            uint64_t v49 = objc_msgSend((id)swift_unknownObjectRetain(), sel_allocatedSize);
            if ((uint64_t)v49 >= v82 && (uint64_t)v49 < a2)
            {
              swift_beginAccess();
              sub_19E642720(v7, v38);
              swift_endAccess();
              char v66 = objc_msgSend(v48, sel_allocatedSize);
              swift_release();
              swift_release();
              swift_release_n();
              swift_release_n();
              swift_unknownObjectRelease();
              uint64_t v67 = v75[11];
              char v68 = __OFSUB__(v67, v66);
              uint64_t v69 = v67 - (void)v66;
              if (v68) {
                goto LABEL_161;
              }
              v75[11] = v69;
              return (uint64_t)v48;
            }
            ++v38;
            swift_unknownObjectRelease();
            uint64_t v28 = v78;
            a1 = v79;
            uint64_t v24 = v47;
            if (v38 >= a3) {
              goto LABEL_31;
            }
            uint64_t v29 = v78;
            if (a4 < 0) {
              goto LABEL_134;
            }
          }
        }
        goto LABEL_134;
      }
      uint64_t v31 = a4 + 2;
      if (__OFADD__(a2, 1)) {
        goto LABEL_133;
      }
      ++a4;
      if (v31 >= v7) {
        goto LABEL_97;
      }
    }
    goto LABEL_131;
  }
LABEL_97:
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  a4 = v74;
  unint64_t v6 = v75;
  LODWORD(v7) = v73;
  a2 = v71;
  a3 = v72;
  a1 = v70;
LABEL_98:
  char v51 = v6[12];
  if (v51 >= 1 && (uint64_t)objc_msgSend(*(id *)(a1 + 24), sel_currentAllocatedSize) >= v51)
  {
    swift_beginAccess();
    sub_19E642B98();
    swift_endAccess();
    v6[11] = 0;
  }
  uint64_t v52 = *(void **)(a1 + 24);
  os_signpost_id_t v53 = *(void *)(a2 + 16);
  if (v53)
  {
    uint64_t v54 = (uint64_t *)(a2 + 32);
    uint64_t v55 = 1;
    while (1)
    {
      uint64_t v56 = *v54++;
      uint64_t v57 = v55 * v56;
      if ((unsigned __int128)(v55 * (__int128)v56) >> 64 != (v55 * v56) >> 63) {
        break;
      }
      uint64_t v55 = v57;
      if (!--v53) {
        goto LABEL_107;
      }
    }
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  uint64_t v57 = 1;
LABEL_107:
  if (a3 > 0xAu) {
    uint64_t v58 = 8;
  }
  else {
    uint64_t v58 = qword_19EC39008[(char)a3];
  }
  v59 = v57 * v58;
  if ((unsigned __int128)(v57 * (__int128)v58) >> 64 != (v57 * v58) >> 63)
  {
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  if (v7) {
    goto LABEL_120;
  }
  if (!a4) {
    goto LABEL_148;
  }
  if (a4 == -1 && v59 == 0x8000000000000000)
  {
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  uint64_t v60 = v59 % a4;
  if (!(v59 % a4)) {
    goto LABEL_125;
  }
  uint64_t v61 = v59 + a4;
  if (__OFADD__(v59, a4)) {
    goto LABEL_149;
  }
  v59 = v61 - v60;
  if (__OFSUB__(v61, v60))
  {
    __break(1u);
LABEL_120:
    int v62 = getpagesize();
    if (v59 <= v62) {
      goto LABEL_125;
    }
    if (v62)
    {
      int v63 = v59 % v62;
      if (!v63) {
        goto LABEL_125;
      }
      uint64_t v64 = v59 + v62;
      if (!__OFADD__(v59, v62))
      {
        v59 = v64 - v63;
        if (!__OFSUB__(v64, v63)) {
          goto LABEL_125;
        }
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    goto LABEL_151;
  }
LABEL_125:
  uint64_t v48 = objc_msgSend(v52, sel_newBufferWithLength_options_, v59, 512);
  if (v48) {
    return (uint64_t)v48;
  }
LABEL_162:
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    v83[0] = 0;
    v83[1] = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6416C0(uint64_t *a1, void *a2)
{
  id v106 = a2;
  uint64_t v102 = a1;
  uint64_t v94 = sub_19EBF6558();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v3 = (char **)((char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (char **)sub_19EBF6528();
  unint64_t v5 = *(v4 - 1);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  v99 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  int v103 = (char *)&v92 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char **)((char *)&v92 - v10);
  if (qword_1E945BB50 != -1) {
    goto LABEL_82;
  }
  while (1)
  {
    uint64_t v12 = sub_19EBF6548();
    uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1E946A518);
    sub_19EBF6518();
    uint64_t v98 = v13;
    uint64_t v14 = sub_19EBF6538();
    os_signpost_type_t v15 = sub_19EBF6D78();
    char v16 = sub_19EBF6E18();
    v105 = v3;
    if (v16)
    {
      uint64_t v17 = (void (*)(char *, char **, char **))v5[2];
      unint64_t v18 = (unint64_t)(v5 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v19 = v103;
      v17(v103, v11, v4);
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_19EBF6508();
      os_signpost_type_t v22 = v15;
      uint64_t v23 = v19;
      _os_signpost_emit_with_name_impl(&dword_19E58B000, v14, v22, v21, "GPU :: Storage recycle", "", v20, 2u);
      MEMORY[0x19F3C3580](v20, -1, -1);

      ((void (*)(char *, char **))v5[1])(v19, v4);
    }
    else
    {

      uint64_t v17 = (void (*)(char *, char **, char **))v5[2];
      unint64_t v18 = (unint64_t)(v5 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v23 = v103;
    }
    uint64_t v96 = (void (*)(char *, char *, char **))v17;
    unint64_t v95 = v18;
    v17(v23, v11, v4);
    sub_19EBF6588();
    swift_allocObject();
    uint64_t v104 = sub_19EBF6578();
    uint64_t v24 = (void (*)(char *, char **))v5[1];
    ++v5;
    v97 = v24;
    v24((char *)v11, v4);
    uint64_t v25 = *v102;
    uint64_t v3 = &selRef_copyItemAtURL_toURL_error_;
    id v26 = objc_msgSend(objc_msgSend(v106, sel_device), sel_registryID);
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v25 + 16);
    if (!*(void *)(v27 + 16)) {
      goto LABEL_86;
    }
    unint64_t v28 = sub_19E6695EC((uint64_t)v26);
    if ((v29 & 1) == 0) {
      goto LABEL_86;
    }
    uint64_t v30 = *(void **)(*(void *)(v27 + 56) + 8 * v28);
    swift_endAccess();
    swift_retain();
    uint64_t v31 = (uint64_t)objc_msgSend(v106, sel_length);
    uint64_t v32 = v31 & 0xF;
    if (v31 <= 0) {
      uint64_t v32 = -(-v31 & 0xF);
    }
    v100 = v5;
    v101 = v4;
    if (v32) {
      break;
    }
    uint64_t v102 = (uint64_t *)v31;
    uint64_t v3 = v105;
LABEL_14:
    swift_beginAccess();
    uint64_t v36 = v30[7];
    BOOL v34 = __OFSUB__(v36, 1);
    uint64_t v37 = v36 - 1;
    if (!v34)
    {
      unint64_t v5 = v30 + 6;
      unint64_t v4 = (char **)&v108;
      uint64_t v11 = &selRef_reps;
      do
      {
        if (v30[10] < v37)
        {
LABEL_66:
          swift_beginAccess();
          id v72 = v106;
          sub_19E642204((uint64_t)v106, (uint64_t)v102);
          swift_endAccess();
          uint64_t v73 = (char *)[v72 v11[377]];
          uint64_t v74 = v30[11];
          BOOL v34 = __OFADD__(v74, v73);
          v75 = &v73[v74];
          if (!v34)
          {
            v30[11] = v75;
            swift_release();
            v76 = sub_19EBF6538();
            int v77 = v99;
            sub_19EBF6568();
            os_signpost_type_t v78 = sub_19EBF6D68();
            if (sub_19EBF6E18())
            {
              swift_retain();
              sub_19EBF6598();
              swift_release();
              uint64_t v79 = v93;
              uint64_t v80 = v94;
              int v81 = (*(uint64_t (**)(char **, uint64_t))(v93 + 88))(v3, v94);
              int v82 = v101;
              if (v81 == *MEMORY[0x1E4FBD340])
              {
                uint64_t v83 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char **, uint64_t))(v79 + 8))(v3, v80);
                uint64_t v83 = "";
              }
              v84 = v103;
              v96(v103, v77, v82);
              uint64_t v85 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v85 = 0;
              os_signpost_id_t v86 = sub_19EBF6508();
              v87 = v83;
              os_signpost_id_t v88 = v84;
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v76, v78, v86, "GPU :: Storage recycle", v87, v85, 2u);
              MEMORY[0x19F3C3580](v85, -1, -1);

              v89 = v97;
              v97(v77, v82);
              v89(v88, v82);
            }
            else
            {

              v97(v77, v101);
            }
            return swift_release();
          }
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        swift_beginAccess();
        if (*(uint64_t *)(*v5 + 24) < 1) {
          goto LABEL_17;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_19E668978();
        }
        uint64_t v39 = (void *)*v5;
        uint64_t v40 = *(void *)(*v5 + 24);
        BOOL v34 = __OFSUB__(v40, 1);
        uint64_t v41 = v40 - 1;
        if (v34) {
          goto LABEL_75;
        }
        uint64_t v42 = v39[4] + v41;
        uint64_t v43 = v39[2];
        if (v42 < v43) {
          uint64_t v43 = 0;
        }
        uint64_t v44 = v39[v42 - v43 + 5];
        v39[3] = v41;
        uint64_t v110 = v44;
        uint64_t v46 = sub_19E643614(&v108, v44);
        if (!*(void *)v45 || *(uint64_t *)(*(void *)v45 + 24) <= 0)
        {
          v46((uint64_t **)&v108, 0);
LABEL_17:
          swift_endAccess();
          goto LABEL_18;
        }
        uint64_t v47 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_19E668998();
        }
        uint64_t v48 = *(void **)v47;
        uint64_t v49 = *(void *)(*(void *)v47 + 24);
        BOOL v34 = __OFSUB__(v49, 1);
        uint64_t v50 = v49 - 1;
        if (v34) {
          goto LABEL_76;
        }
        uint64_t v51 = v48[4] + v50;
        uint64_t v52 = v48[2];
        if (v51 < v52) {
          uint64_t v52 = 0;
        }
        os_signpost_id_t v53 = (void *)v48[v51 - v52 + 5];
        v48[3] = v50;
        v46((uint64_t **)&v108, 0);
        uint64_t v55 = v30[3];
        uint64_t v54 = (void *)v30[4];
        uint64_t v56 = v30[5];
        uint64_t v57 = v54 + 4;
        uint64_t v58 = v54[2];
        if (v55)
        {
          unint64_t v59 = sub_19E643EF4(v110, (uint64_t)v57, v58, (uint64_t *)(v55 + 16));
          if ((v60 & 1) == 0)
          {
            if ((v59 & 0x8000000000000000) != 0)
            {
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
            goto LABEL_40;
          }
        }
        else if (v58)
        {
          if (*v57 == v110)
          {
            unint64_t v59 = 0;
            goto LABEL_40;
          }
          if (v58 != 1)
          {
            if (v54[5] == v110)
            {
              unint64_t v59 = 1;
              goto LABEL_40;
            }
            if (v58 != 2)
            {
              if (v54[6] == v110)
              {
                unint64_t v59 = 2;
                goto LABEL_40;
              }
              if (v58 != 3)
              {
                if (v54[7] == v110)
                {
                  unint64_t v59 = 3;
LABEL_40:
                  if (v59 >= *(void *)(v56 + 16)) {
                    goto LABEL_79;
                  }
                  if (!*(void *)(*(void *)(v56 + 8 * v59 + 32) + 24))
                  {
                    unint64_t v4 = v11;
                    uint64_t v11 = (char **)&v92;
                    MEMORY[0x1F4188790](v59);
                    uint64_t v61 = v107;
                    uint64_t v62 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E64536C);
                    uint64_t v3 = *(char ***)(*v5 + 24);
                    if ((uint64_t)v3 < v62) {
                      goto LABEL_80;
                    }
                    if (v62 < 0) {
                      goto LABEL_81;
                    }
                    uint64_t v107 = v61;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      sub_19E668978();
                    }
                    sub_19E644380((char *)v62, (uint64_t)v3, (uint64_t *)(*v5 + 16), (char *)(*v5 + 40));
                    uint64_t v3 = v105;
                    uint64_t v11 = v4;
                    unint64_t v4 = (char **)&v108;
                  }
                  goto LABEL_48;
                }
                uint64_t v69 = 0;
                v70 = v54 + 8;
                while (v58 - 4 != v69)
                {
                  uint64_t v71 = v70[v69++];
                  if (v71 == v110)
                  {
                    unint64_t v59 = v69 + 3;
                    if (((v69 + 3) & 0x8000000000000000) == 0) {
                      goto LABEL_40;
                    }
                    goto LABEL_65;
                  }
                }
              }
            }
          }
        }
LABEL_48:
        uint64_t v63 = v30[10];
        BOOL v34 = __OFSUB__(v63, 1);
        uint64_t v64 = v63 - 1;
        if (v34) {
          goto LABEL_77;
        }
        v30[10] = v64;
        uint64_t v111 = v53;
        uint64_t v65 = (void (*)(void **))v30[8];
        if (v65)
        {
          swift_retain();
          v65(&v111);
          sub_19E645640((uint64_t)v65);
        }
        swift_endAccess();
        id v66 = [v53 v11[377]];
        swift_unknownObjectRelease();
        uint64_t v67 = v30[11];
        BOOL v34 = __OFSUB__(v67, v66);
        uint64_t v68 = v67 - (void)v66;
        if (v34) {
          goto LABEL_78;
        }
        v30[11] = v68;
LABEL_18:
        uint64_t v38 = v30[7];
        BOOL v34 = __OFSUB__(v38, 1);
        uint64_t v37 = v38 - 1;
      }
      while (!v34);
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    swift_once();
  }
  uint64_t v33 = v31 + 16;
  uint64_t v3 = v105;
  if (__OFADD__(v31, 16)) {
    goto LABEL_84;
  }
  BOOL v34 = __OFSUB__(v33, v32);
  uint64_t v35 = (uint64_t *)(v33 - v32);
  if (!v34)
  {
    uint64_t v102 = v35;
    goto LABEL_14;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  swift_endAccess();
  uint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v91 = objc_msgSend(objc_msgSend(v106, v3[131]), sel_name);
  swift_unknownObjectRelease();
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v108 = 0;
    unint64_t v109 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MetalBufferAllocator()
{
  return self;
}

void sub_19E642204(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)v2;
  uint64_t v9 = sub_19E643A48(a2, *(void *)v2, *(void **)(v2 + 8));
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = v9;
    uint64_t v12 = *(void **)(v2 + 16);
    goto LABEL_7;
  }
  sub_19E643B64(a2);
  uint64_t v13 = *(void *)(*(void *)(v2 + 8) + 16);
  uint64_t v3 = *(void *)sub_19EBF64C8();
  uint64_t v14 = (unint64_t *)(v2 + 16);
  uint64_t v12 = (void *)v6[2];
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[2] = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19E66F898(0, v12[2] + 1, 1);
    uint64_t v12 = (void *)*v14;
  }
  uint64_t v11 = v13 - 1;
  unint64_t v5 = v12[2];
  unint64_t v16 = v12[3];
  int64_t v4 = v5 + 1;
  if (v5 < v16 >> 1) {
    goto LABEL_6;
  }
LABEL_40:
  sub_19E66F898(v16 > 1, v4, 1);
  uint64_t v12 = (void *)*v14;
LABEL_6:
  v12[2] = v4;
  v12[v5 + 4] = v3;
  unint64_t *v14 = (unint64_t)v12;
LABEL_7:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = (void *)sub_19E643A20(v12);
  }
  uint64_t v14 = (unint64_t *)v12[v11 + 4];
  v6[2] = v12;
  uint64_t v32 = v14;
  unint64_t v16 = v14[3];
  uint64_t v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  if (uint64_t)v14[2] >= v17 && (v18)
  {
    unint64_t v19 = v14[4];
    if (v19) {
      goto LABEL_13;
    }
  }
  else
  {
    while (1)
    {
      sub_19E649A58(v17);
      uint64_t v14 = v32;
      unint64_t v19 = v32[4];
      if (!v19) {
        break;
      }
LABEL_13:
      BOOL v20 = __OFSUB__(v19, 1);
      unint64_t v21 = v19 - 1;
      if (!v20)
      {
LABEL_18:
        v14[v21 + 5] = a1;
        v14[4] = v21;
        unint64_t v23 = v14[3];
        BOOL v20 = __OFADD__(v23, 1);
        unint64_t v16 = v23 + 1;
        if (v20) {
          goto LABEL_36;
        }
        v14[3] = v16;
        uint64_t v24 = (void *)v6[2];
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = (void *)sub_19E643A20(v24);
        }
        v24[v11 + 4] = v14;
        v6[2] = v24;
        uint64_t v14 = v6 + 3;
        unint64_t v16 = *(void *)(v6[3] + 24);
        a1 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_37;
        }
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v16 = *v14;
        if (*(void *)(*v14 + 16) >= a1 && (v25 & 1) != 0)
        {
          uint64_t v26 = *(void *)(v16 + 32);
          if (!v26) {
            goto LABEL_29;
          }
          goto LABEL_25;
        }
        while (1)
        {
          sub_19E649888(a1);
          unint64_t v16 = *v14;
          uint64_t v26 = *(void *)(*v14 + 32);
          if (!v26) {
            break;
          }
LABEL_25:
          BOOL v20 = __OFSUB__(v26, 1);
          uint64_t v27 = v26 - 1;
          if (!v20) {
            goto LABEL_30;
          }
          __break(1u);
        }
LABEL_29:
        uint64_t v28 = *(void *)(v16 + 16);
        BOOL v20 = __OFSUB__(v28, 1);
        uint64_t v27 = v28 - 1;
        if (v20) {
          goto LABEL_42;
        }
LABEL_30:
        *(void *)(v16 + 8 * v27 + 40) = a2;
        *(void *)(v16 + 32) = v27;
        uint64_t v29 = *(void *)(v16 + 24);
        BOOL v20 = __OFADD__(v29, 1);
        uint64_t v30 = v29 + 1;
        if (v20) {
          goto LABEL_38;
        }
        *(void *)(v16 + 24) = v30;
        uint64_t v31 = v6[7];
        BOOL v20 = __OFADD__(v31, 1);
        unint64_t v16 = v31 + 1;
        if (!v20)
        {
          v6[7] = v16;
          sub_19E642F90();
          return;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      __break(1u);
    }
  }
  unint64_t v22 = v14[2];
  BOOL v20 = __OFSUB__(v22, 1);
  unint64_t v21 = v22 - 1;
  if (!v20) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_19E642494(void *a1, uint64_t a2)
{
  uint64_t v6 = (void *)v2;
  uint64_t v9 = sub_19E643A48(a2, *(void *)v2, *(void **)(v2 + 8));
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = v9;
    uint64_t v12 = *(void **)(v2 + 16);
    goto LABEL_7;
  }
  sub_19E643B64(a2);
  uint64_t v13 = *(void *)(*(void *)(v2 + 8) + 16);
  uint64_t v3 = *(void *)sub_19EBF64C8();
  uint64_t v14 = (unint64_t *)(v2 + 16);
  uint64_t v12 = (void *)v6[2];
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[2] = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19E66F908(0, v12[2] + 1, 1);
    uint64_t v12 = (void *)*v14;
  }
  uint64_t v11 = v13 - 1;
  unint64_t v5 = v12[2];
  unint64_t v16 = v12[3];
  int64_t v4 = v5 + 1;
  if (v5 < v16 >> 1) {
    goto LABEL_6;
  }
LABEL_40:
  sub_19E66F908(v16 > 1, v4, 1);
  uint64_t v12 = (void *)*v14;
LABEL_6:
  v12[2] = v4;
  v12[v5 + 4] = v3;
  unint64_t *v14 = (unint64_t)v12;
LABEL_7:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = (void *)sub_19E643A34(v12);
  }
  uint64_t v14 = (unint64_t *)v12[v11 + 4];
  v6[2] = v12;
  uint64_t v33 = v14;
  unint64_t v16 = v14[3];
  uint64_t v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  if (uint64_t)v14[2] >= v17 && (v18)
  {
    unint64_t v19 = v14[4];
    if (v19) {
      goto LABEL_13;
    }
  }
  else
  {
    while (1)
    {
      sub_19E649E5C(v17, 0);
      uint64_t v14 = v33;
      unint64_t v19 = v33[4];
      if (!v19) {
        break;
      }
LABEL_13:
      BOOL v20 = __OFSUB__(v19, 1);
      unint64_t v21 = v19 - 1;
      if (!v20)
      {
LABEL_18:
        v14[v21 + 5] = (unint64_t)a1;
        v14[4] = v21;
        unint64_t v23 = v14[3];
        BOOL v20 = __OFADD__(v23, 1);
        unint64_t v16 = v23 + 1;
        if (v20) {
          goto LABEL_36;
        }
        v14[3] = v16;
        uint64_t v24 = (void *)v6[2];
        id v25 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = (void *)sub_19E643A34(v24);
        }
        v24[v11 + 4] = v14;
        v6[2] = v24;
        uint64_t v14 = v6 + 3;
        unint64_t v16 = *(void *)(v6[3] + 24);
        a1 = (void *)(v16 + 1);
        if (__OFADD__(v16, 1)) {
          goto LABEL_37;
        }
        char v26 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v16 = *v14;
        if (*(void *)(*v14 + 16) >= (uint64_t)a1 && (v26 & 1) != 0)
        {
          uint64_t v27 = *(void *)(v16 + 32);
          if (!v27) {
            goto LABEL_29;
          }
          goto LABEL_25;
        }
        while (1)
        {
          sub_19E649888((uint64_t)a1);
          unint64_t v16 = *v14;
          uint64_t v27 = *(void *)(*v14 + 32);
          if (!v27) {
            break;
          }
LABEL_25:
          BOOL v20 = __OFSUB__(v27, 1);
          uint64_t v28 = v27 - 1;
          if (!v20) {
            goto LABEL_30;
          }
          __break(1u);
        }
LABEL_29:
        uint64_t v29 = *(void *)(v16 + 16);
        BOOL v20 = __OFSUB__(v29, 1);
        uint64_t v28 = v29 - 1;
        if (v20) {
          goto LABEL_42;
        }
LABEL_30:
        *(void *)(v16 + 8 * v28 + 40) = a2;
        *(void *)(v16 + 32) = v28;
        uint64_t v30 = *(void *)(v16 + 24);
        BOOL v20 = __OFADD__(v30, 1);
        uint64_t v31 = v30 + 1;
        if (v20) {
          goto LABEL_38;
        }
        *(void *)(v16 + 24) = v31;
        uint64_t v32 = v6[7];
        BOOL v20 = __OFADD__(v32, 1);
        unint64_t v16 = v32 + 1;
        if (!v20)
        {
          v6[7] = v16;
          sub_19E6432D4();
          return;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      __break(1u);
    }
  }
  unint64_t v22 = v14[2];
  BOOL v20 = __OFSUB__(v22, 1);
  unint64_t v21 = v22 - 1;
  if (!v20) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

unint64_t sub_19E642720(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = sub_19E643614(v25, a1);
  unint64_t result = *v6;
  if (!*v6)
  {
    v7((uint64_t **)v25, 0);
    return 0;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(void *)(result + 24) <= a2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = v6;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    unint64_t result = sub_19E668998();
  }
  unint64_t v10 = *v9;
  if (*(void *)(v10 + 24) <= a2) {
    goto LABEL_24;
  }
  uint64_t v11 = (char *)(*(void *)(v10 + 32) + a2);
  uint64_t v12 = *(void *)(v10 + 16);
  if ((uint64_t)v11 < v12) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void *)(v10 + 40 + 8 * (void)&v11[-v12]);
  swift_retain();
  swift_unknownObjectRetain();
  sub_19E6440E8((char *)a2, a2 + 1, (uint64_t *)(v10 + 16), (char *)(v10 + 40));
  swift_release();
  v7((uint64_t **)v25, 0);
  uint64_t v14 = *(void *)(v3 + 16);
  unint64_t result = sub_19E643A48(a1, *(void *)v3, *(void **)(v3 + 8));
  if (v15) {
    goto LABEL_18;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(void *)(v14 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (*(void *)(*(void *)(v14 + 8 * result + 32) + 24)) {
    goto LABEL_18;
  }
  MEMORY[0x1F4188790](result);
  unint64_t v16 = (void *)(v3 + 24);
  uint64_t v17 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E645670);
  unint64_t result = *(void *)(v3 + 24);
  uint64_t v18 = *(void *)(result + 24);
  if (v18 < v17)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668978();
    }
    uint64_t v19 = *v16;
    BOOL v20 = (uint64_t *)(*v16 + 16);
    unint64_t v21 = (char *)(v19 + 40);
    sub_19E644308(v17, v18, v20, v19 + 40, (uint64_t)v25);
    unint64_t result = (unint64_t)sub_19E644380((char *)v17, v18, v20, v21);
LABEL_18:
    uint64_t v22 = *(void *)(v3 + 56);
    BOOL v23 = __OFSUB__(v22, 1);
    uint64_t v24 = v22 - 1;
    if (!v23)
    {
      *(void *)(v3 + 56) = v24;
      return v13;
    }
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_19E64295C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = sub_19E6436CC(v26, a1);
  unint64_t result = *v6;
  if (!*v6)
  {
    v7((uint64_t **)v26, 0);
    return 0;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(void *)(result + 24) <= a2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = v6;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    unint64_t result = sub_19E6689D8();
  }
  unint64_t v10 = *v9;
  if (*(void *)(v10 + 24) <= a2) {
    goto LABEL_24;
  }
  uint64_t v11 = (char *)(*(void *)(v10 + 32) + a2);
  uint64_t v12 = *(void *)(v10 + 16);
  if ((uint64_t)v11 < v12) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void **)(v10 + 40 + 8 * (void)&v11[-v12]);
  swift_retain();
  id v14 = v13;
  sub_19E6441FC((char *)a2, a2 + 1, (uint64_t *)(v10 + 16), (char *)(v10 + 40));
  swift_release();
  v7((uint64_t **)v26, 0);
  uint64_t v15 = *(void *)(v3 + 16);
  unint64_t result = sub_19E643A48(a1, *(void *)v3, *(void **)(v3 + 8));
  if (v16) {
    goto LABEL_18;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(void *)(v15 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (*(void *)(*(void *)(v15 + 8 * result + 32) + 24)) {
    goto LABEL_18;
  }
  MEMORY[0x1F4188790](result);
  uint64_t v17 = (void *)(v3 + 24);
  uint64_t v18 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E64536C);
  unint64_t result = *(void *)(v3 + 24);
  uint64_t v19 = *(void *)(result + 24);
  if (v19 < v18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668978();
    }
    uint64_t v20 = *v17;
    unint64_t v21 = (uint64_t *)(*v17 + 16);
    uint64_t v22 = (char *)(v20 + 40);
    sub_19E644308(v18, v19, v21, v20 + 40, (uint64_t)v26);
    unint64_t result = (unint64_t)sub_19E644380((char *)v18, v19, v21, v22);
LABEL_18:
    uint64_t v23 = *(void *)(v3 + 56);
    BOOL v24 = __OFSUB__(v23, 1);
    uint64_t v25 = v23 - 1;
    if (!v24)
    {
      *(void *)(v3 + 56) = v25;
      return (unint64_t)v14;
    }
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_19E642B98()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1)
  {
LABEL_48:
    swift_release();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    v1[1] = MEMORY[0x1E4FBC860];
    swift_release();
    *uint64_t v1 = 0;
    unint64_t result = swift_release();
    v1[2] = v33;
    return result;
  }
  while (1)
  {
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      unint64_t result = sub_19E668978();
    }
    int64_t v4 = (void *)*v2;
    uint64_t v5 = *(void *)(*v2 + 24);
    BOOL v6 = __OFSUB__(v5, 1);
    uint64_t v7 = v5 - 1;
    if (v6) {
      break;
    }
    uint64_t v8 = v4[4] + v7;
    uint64_t v9 = v4[2];
    if (v8 < v9) {
      uint64_t v9 = 0;
    }
    uint64_t v10 = v4[v8 - v9 + 5];
    v4[3] = v7;
    uint64_t v35 = v10;
    uint64_t v12 = sub_19E643614(v34, v10);
    if (!*(void *)v11 || *(uint64_t *)(*(void *)v11 + 24) <= 0) {
      goto LABEL_47;
    }
    uint64_t v13 = v11;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      unint64_t result = sub_19E668998();
    }
    id v14 = *(void **)v13;
    uint64_t v15 = *(void *)(*(void *)v13 + 24);
    BOOL v6 = __OFSUB__(v15, 1);
    uint64_t v16 = v15 - 1;
    if (v6) {
      goto LABEL_50;
    }
    uint64_t v17 = v14[4] + v16;
    uint64_t v18 = v14[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v14[v17 - v18 + 5];
    v14[3] = v16;
    v12((uint64_t **)v34, 0);
    uint64_t v20 = (void *)v1[1];
    uint64_t v21 = v1[2];
    unint64_t result = v35;
    uint64_t v22 = v20 + 4;
    uint64_t v23 = v20[2];
    if (*v1)
    {
      unint64_t result = sub_19E643EF4(v35, (uint64_t)v22, v23, (uint64_t *)(*v1 + 16));
      if (v24) {
        goto LABEL_31;
      }
      if ((result & 0x8000000000000000) != 0)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        v12((uint64_t **)v34, 0);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v23) {
        goto LABEL_31;
      }
      if (*v22 == v35)
      {
        unint64_t result = 0;
      }
      else
      {
        if (v23 == 1) {
          goto LABEL_31;
        }
        if (v20[5] == v35)
        {
          unint64_t result = 1;
        }
        else
        {
          if (v23 == 2) {
            goto LABEL_31;
          }
          if (v20[6] == v35)
          {
            unint64_t result = 2;
          }
          else
          {
            if (v23 == 3) {
              goto LABEL_31;
            }
            if (v20[7] != v35)
            {
              uint64_t v30 = 0;
              uint64_t v31 = v20 + 8;
              while (v23 - 4 != v30)
              {
                uint64_t v32 = v31[v30++];
                if (v32 == v35)
                {
                  unint64_t result = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0) {
                    goto LABEL_23;
                  }
                  goto LABEL_46;
                }
              }
              goto LABEL_31;
            }
            unint64_t result = 3;
          }
        }
      }
    }
LABEL_23:
    if (result >= *(void *)(v21 + 16)) {
      goto LABEL_52;
    }
    if (!*(void *)(*(void *)(v21 + 8 * result + 32) + 24))
    {
      MEMORY[0x1F4188790](result);
      uint64_t v25 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E645670);
      unint64_t result = *v2;
      uint64_t v26 = *(void *)(*v2 + 24);
      if (v26 < v25) {
        goto LABEL_53;
      }
      if (v25 < 0) {
        goto LABEL_54;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19E668978();
      }
      unint64_t result = (unint64_t)sub_19E644380((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_31:
    uint64_t v27 = v1[7];
    BOOL v6 = __OFSUB__(v27, 1);
    uint64_t v28 = v27 - 1;
    if (v6) {
      goto LABEL_51;
    }
    v1[7] = v28;
    uint64_t v36 = v19;
    uint64_t v29 = (void (*)(uint64_t *))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v36);
      sub_19E645640((uint64_t)v29);
    }
    swift_unknownObjectRelease();
    if (*(uint64_t *)(*v2 + 24) <= 0) {
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_19E642EF0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19E645640(v1);

  return MEMORY[0x1F4186488](v0, 112, 7);
}

uint64_t type metadata accessor for MetalBufferAllocator.DeviceBufferAllocator()
{
  return self;
}

void sub_19E642F90()
{
  if (v0[4] >= v0[7]) {
    return;
  }
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1) {
    return;
  }
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668978();
    }
    uint64_t v3 = (void *)*v2;
    uint64_t v4 = *(void *)(*v2 + 24);
    BOOL v5 = __OFSUB__(v4, 1);
    uint64_t v6 = v4 - 1;
    if (v5) {
      break;
    }
    uint64_t v7 = v3[4] + v6;
    uint64_t v8 = v3[2];
    if (v7 < v8) {
      uint64_t v8 = 0;
    }
    uint64_t v9 = v3[v7 - v8 + 5];
    v3[3] = v6;
    uint64_t v34 = v9;
    uint64_t v11 = sub_19E643614(v33, v9);
    if (!*(void *)v10 || *(uint64_t *)(*(void *)v10 + 24) <= 0) {
      goto LABEL_49;
    }
    uint64_t v12 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668998();
    }
    uint64_t v13 = *(void **)v12;
    uint64_t v14 = *(void *)(*(void *)v12 + 24);
    BOOL v5 = __OFSUB__(v14, 1);
    uint64_t v15 = v14 - 1;
    if (v5) {
      goto LABEL_52;
    }
    uint64_t v16 = v13[4] + v15;
    uint64_t v17 = v13[2];
    if (v16 < v17) {
      uint64_t v17 = 0;
    }
    uint64_t v18 = v13[v16 - v17 + 5];
    v13[3] = v15;
    v11((uint64_t **)v33, 0);
    uint64_t v19 = (void *)v1[1];
    uint64_t v20 = v1[2];
    uint64_t v21 = v19 + 4;
    uint64_t v22 = v19[2];
    if (*v1)
    {
      unint64_t v23 = sub_19E643EF4(v34, (uint64_t)v21, v22, (uint64_t *)(*v1 + 16));
      if (v24) {
        goto LABEL_30;
      }
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        v11((uint64_t **)v33, 0);
        return;
      }
    }
    else
    {
      if (!v22) {
        goto LABEL_30;
      }
      if (*v21 == v34)
      {
        unint64_t v23 = 0;
      }
      else
      {
        if (v22 == 1) {
          goto LABEL_30;
        }
        if (v19[5] == v34)
        {
          unint64_t v23 = 1;
        }
        else
        {
          if (v22 == 2) {
            goto LABEL_30;
          }
          if (v19[6] == v34)
          {
            unint64_t v23 = 2;
          }
          else
          {
            if (v22 == 3) {
              goto LABEL_30;
            }
            if (v19[7] != v34)
            {
              uint64_t v30 = 0;
              uint64_t v31 = v19 + 8;
              while (v22 - 4 != v30)
              {
                uint64_t v32 = v31[v30++];
                if (v32 == v34)
                {
                  unint64_t v23 = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0) {
                    goto LABEL_22;
                  }
                  goto LABEL_48;
                }
              }
              goto LABEL_30;
            }
            unint64_t v23 = 3;
          }
        }
      }
    }
LABEL_22:
    if (v23 >= *(void *)(v20 + 16)) {
      goto LABEL_54;
    }
    if (!*(void *)(*(void *)(v20 + 8 * v23 + 32) + 24))
    {
      MEMORY[0x1F4188790](v23);
      uint64_t v25 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E645670);
      uint64_t v26 = *(void *)(*v2 + 24);
      if (v26 < v25) {
        goto LABEL_55;
      }
      if (v25 < 0) {
        goto LABEL_56;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19E668978();
      }
      sub_19E644380((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_30:
    uint64_t v27 = v1[7];
    uint64_t v28 = v27 - 1;
    if (__OFSUB__(v27, 1)) {
      goto LABEL_53;
    }
    v1[7] = v28;
    uint64_t v35 = v18;
    uint64_t v29 = (void (*)(uint64_t *))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v35);
      sub_19E645640((uint64_t)v29);
    }
    swift_unknownObjectRelease();
    if (v1[4] >= v28 || *(uint64_t *)(*v2 + 24) <= 0) {
      return;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

void sub_19E6432D4()
{
  if (v0[4] >= v0[7]) {
    return;
  }
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1) {
    return;
  }
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668978();
    }
    uint64_t v3 = (void *)*v2;
    uint64_t v4 = *(void *)(*v2 + 24);
    BOOL v5 = __OFSUB__(v4, 1);
    uint64_t v6 = v4 - 1;
    if (v5) {
      break;
    }
    uint64_t v7 = v3[4] + v6;
    uint64_t v8 = v3[2];
    if (v7 < v8) {
      uint64_t v8 = 0;
    }
    uint64_t v9 = v3[v7 - v8 + 5];
    v3[3] = v6;
    uint64_t v34 = v9;
    uint64_t v11 = sub_19E6436CC(v33, v9);
    if (!*(void *)v10 || *(uint64_t *)(*(void *)v10 + 24) <= 0) {
      goto LABEL_49;
    }
    uint64_t v12 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689D8();
    }
    uint64_t v13 = *(void **)v12;
    uint64_t v14 = *(void *)(*(void *)v12 + 24);
    BOOL v5 = __OFSUB__(v14, 1);
    uint64_t v15 = v14 - 1;
    if (v5) {
      goto LABEL_52;
    }
    uint64_t v16 = v13[4] + v15;
    uint64_t v17 = v13[2];
    if (v16 < v17) {
      uint64_t v17 = 0;
    }
    uint64_t v18 = (void *)v13[v16 - v17 + 5];
    v13[3] = v15;
    v11((uint64_t **)v33, 0);
    uint64_t v19 = (void *)v1[1];
    uint64_t v20 = v1[2];
    uint64_t v21 = v19 + 4;
    uint64_t v22 = v19[2];
    if (*v1)
    {
      unint64_t v23 = sub_19E643EF4(v34, (uint64_t)v21, v22, (uint64_t *)(*v1 + 16));
      if (v24) {
        goto LABEL_30;
      }
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        v11((uint64_t **)v33, 0);
        return;
      }
    }
    else
    {
      if (!v22) {
        goto LABEL_30;
      }
      if (*v21 == v34)
      {
        unint64_t v23 = 0;
      }
      else
      {
        if (v22 == 1) {
          goto LABEL_30;
        }
        if (v19[5] == v34)
        {
          unint64_t v23 = 1;
        }
        else
        {
          if (v22 == 2) {
            goto LABEL_30;
          }
          if (v19[6] == v34)
          {
            unint64_t v23 = 2;
          }
          else
          {
            if (v22 == 3) {
              goto LABEL_30;
            }
            if (v19[7] != v34)
            {
              uint64_t v30 = 0;
              uint64_t v31 = v19 + 8;
              while (v22 - 4 != v30)
              {
                uint64_t v32 = v31[v30++];
                if (v32 == v34)
                {
                  unint64_t v23 = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0) {
                    goto LABEL_22;
                  }
                  goto LABEL_48;
                }
              }
              goto LABEL_30;
            }
            unint64_t v23 = 3;
          }
        }
      }
    }
LABEL_22:
    if (v23 >= *(void *)(v20 + 16)) {
      goto LABEL_54;
    }
    if (!*(void *)(*(void *)(v20 + 8 * v23 + 32) + 24))
    {
      MEMORY[0x1F4188790](v23);
      uint64_t v25 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E645650);
      uint64_t v26 = *(void *)(*v2 + 24);
      if (v26 < v25) {
        goto LABEL_55;
      }
      if (v25 < 0) {
        goto LABEL_56;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19E668978();
      }
      sub_19E644380((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_30:
    uint64_t v27 = v1[7];
    uint64_t v28 = v27 - 1;
    if (__OFSUB__(v27, 1)) {
      goto LABEL_53;
    }
    v1[7] = v28;
    uint64_t v35 = v18;
    uint64_t v29 = (void (*)(void **))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v35);
      sub_19E645640((uint64_t)v29);
    }

    if (v1[4] >= v28 || *(uint64_t *)(*v2 + 24) <= 0) {
      return;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

void (*sub_19E643614(void *a1, uint64_t a2))(uint64_t **a1, uint64_t a2)
{
  BOOL v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[1] = a2;
  v5[2] = v2;
  *BOOL v5 = 0;
  uint64_t v6 = sub_19E64400C(a2, v5, (uint64_t (*)(unint64_t))sub_19E643A20, (uint64_t (*)(uint64_t))sub_19E643A20);
  *((unsigned char *)v5 + 40) = v7;
  v5[3] = v6;
  v5[4] = v8;
  return sub_19E6436A0;
}

void sub_19E6436A0(uint64_t **a1, uint64_t a2)
{
}

void (*sub_19E6436CC(void *a1, uint64_t a2))(uint64_t **a1, uint64_t a2)
{
  BOOL v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[1] = a2;
  v5[2] = v2;
  *BOOL v5 = 0;
  uint64_t v6 = sub_19E64400C(a2, v5, (uint64_t (*)(unint64_t))sub_19E643A34, (uint64_t (*)(uint64_t))sub_19E643A34);
  *((unsigned char *)v5 + 40) = v7;
  v5[3] = v6;
  v5[4] = v8;
  return sub_19E643758;
}

void sub_19E643758(uint64_t **a1, uint64_t a2)
{
}

void sub_19E643784(uint64_t **a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t), uint64_t (*a4)(unint64_t))
{
  uint64_t v4 = *a1;
  sub_19E64485C((*a1)[1], (*a1)[3], (*a1)[5] & 1, (*a1)[4], *a1, a3, a4);
  swift_release();

  free(v4);
}

uint64_t sub_19E6437E0(uint64_t (*a1)(uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = *(void *)(*v1 + 24);
  if (v5)
  {
    uint64_t result = swift_retain();
    uint64_t v8 = 0;
    while (1)
    {
      if (v8 >= v5)
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v9 = v4[4];
      if (v8 + v9 >= v4[2]) {
        uint64_t v10 = v4[2];
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v26 = v4[v8 + 5 + v9 - v10];
      uint64_t result = a1(&v26);
      if (v3)
      {
        swift_release();
        return v8;
      }
      if (result) {
        break;
      }
      ++v8;
      uint64_t v5 = v4[3];
      if (v8 == v5)
      {
        swift_release();
        return *(void *)(*v1 + 24);
      }
    }
    uint64_t result = swift_release();
    uint64_t v11 = *v1;
    uint64_t v12 = *(void *)(*v1 + 24);
    if (v12 - 1 == v8) {
      return v8;
    }
    uint64_t v13 = v8 + 1;
    while (v13 < v12)
    {
      uint64_t v14 = *(void *)(v11 + 32);
      if (v13 + v14 >= *(void *)(v11 + 16)) {
        uint64_t v15 = *(void *)(v11 + 16);
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v26 = *(void *)(v11 + 8 * (v13 + v14 - v15) + 40);
      uint64_t result = a1(&v26);
      if ((result & 1) == 0)
      {
        if (v8 < 0) {
          goto LABEL_39;
        }
        uint64_t result = *v1;
        uint64_t v16 = *(void *)(*v1 + 24);
        if (v8 >= v16) {
          goto LABEL_40;
        }
        if (v13 >= v16) {
          goto LABEL_41;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_19E668978();
        }
        uint64_t v17 = *(void *)(*v1 + 32);
        uint64_t v18 = *(void *)(*v1 + 16);
        if (v17 + v8 >= v18) {
          uint64_t v19 = *(void *)(*v1 + 16);
        }
        else {
          uint64_t v19 = 0;
        }
        uint64_t v20 = v17 + v8 - v19;
        if (v13 + v17 < v18) {
          uint64_t v18 = 0;
        }
        uint64_t v21 = v13 + v17 - v18;
        if (v21 != v20)
        {
          uint64_t v22 = *v1 + 40;
          uint64_t v23 = 8 * v20;
          uint64_t v24 = 8 * v21;
          uint64_t v25 = *(void *)(v22 + v23);
          *(void *)(v22 + v23) = *(void *)(v22 + v24);
          *(void *)(v22 + v24) = v25;
        }
        ++v8;
      }
      ++v13;
      uint64_t v11 = *v1;
      uint64_t v12 = *(void *)(*v1 + 24);
      if (v13 == v12) {
        return v8;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_19E6439F8(uint64_t a1)
{
  return sub_19E66FEB4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19E643A0C(uint64_t a1)
{
  return sub_19E66FA48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19E643A20(void *a1)
{
  return sub_19E6711E0(0, a1[2], 0, a1);
}

uint64_t sub_19E643A34(void *a1)
{
  return sub_19E67159C(0, a1[2], 0, a1);
}

uint64_t sub_19E643A48(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3 + 4;
  uint64_t v6 = a3[2];
  if (a2) {
    return sub_19E643EF4(a1, (uint64_t)v5, v6, (uint64_t *)(a2 + 16));
  }
  if (!v6) {
    return 0;
  }
  if (*v5 == a1) {
    return 0;
  }
  if (v6 == 1) {
    return 0;
  }
  if (a3[5] == a1) {
    return 1;
  }
  if (v6 == 2) {
    return 0;
  }
  if (a3[6] == a1) {
    return 2;
  }
  if (v6 == 3) {
    return 0;
  }
  if (a3[7] == a1) {
    return 3;
  }
  uint64_t v8 = 0;
  uint64_t v9 = a3 + 8;
  while (v6 - 4 != v8)
  {
    uint64_t v10 = v9[v8++];
    if (v10 == a1) {
      return v8 + 3;
    }
  }
  return 0;
}

uint64_t sub_19E643B64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v6 = v1[1];
  uint64_t v4 = v1 + 1;
  uint64_t v5 = v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_19E66F600(0, *(void *)(v5 + 16) + 1, 1);
    uint64_t v5 = *v4;
  }
  unint64_t v9 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = sub_19E66F600(v8 > 1, v9 + 1, 1);
    uint64_t v5 = *v4;
  }
  *(void *)(v5 + 16) = v9 + 1;
  *(void *)(v5 + 8 * v9 + 32) = a1;
  v2[1] = v5;
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x19F3BED90](*(void *)(v11 + 16) & 0x3FLL) >= v10)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v12 = *v2;
      if (!result)
      {
        if (!v12)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v12 = sub_19EBF6488();
        uint64_t result = swift_release();
        *uint64_t v2 = v12;
      }
      if (v12) {
        return sub_19EBF6428();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v10 < 0x10)
  {
    return result;
  }
  return sub_19E643CD4();
}

uint64_t sub_19E643CD4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = MEMORY[0x19F3BEDC0](v4);
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_19E643D78(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_19E643D78(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x19F3BEDC0](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x19F3BEDD0]();
    sub_19E643E0C(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_19E643E0C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    unint64_t v4 = (uint64_t *)result;
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *v4;
      uint64_t result = sub_19EBF7468();
      if (__OFSUB__(1 << v6, 1)) {
        break;
      }
      if (sub_19EBF6408())
      {
        while (1)
          sub_19EBF6458();
      }
      uint64_t result = sub_19EBF6448();
      if (++v5 == v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19E643EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *a4;
  uint64_t result = sub_19EBF7468();
  if (__OFSUB__(1 << v6, 1))
  {
    __break(1u);
  }
  else
  {
    sub_19EBF6408();
    uint64_t result = sub_19EBF6438();
    if ((v8 & 1) == 0 && *(void *)(a2 + 8 * result) != a1)
    {
      do
      {
        sub_19EBF6458();
        uint64_t result = sub_19EBF6438();
      }
      while ((v9 & 1) == 0 && *(void *)(a2 + 8 * result) != a1);
    }
  }
  return result;
}

uint64_t sub_19E64400C(uint64_t a1, void *a2, uint64_t (*a3)(unint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v8 = sub_19E643A48(a1, *(void *)v4, *(void **)(v4 + 8));
  if (v9) {
    return v8;
  }
  swift_release();
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v10 = (uint64_t *)(v4 + 16);
  uint64_t result = sub_19E64062C(v8, *(void *)(v11 + 16) - 1, a3);
  uint64_t v13 = *v10;
  if (*(void *)(*v10 + 16))
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = a4(v13);
      uint64_t v13 = result;
    }
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = v14 - 1;
      uint64_t v16 = *(void *)(v13 + 8 * v15 + 32);
      *(void *)(v13 + 16) = v15;
      uint64_t *v10 = v13;
      *a2 = v16;
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_19E6440E8(char *a1, uint64_t a2, uint64_t *a3, char *a4)
{
  sub_19E644308((uint64_t)a1, a2, a3, (uint64_t)a4, (uint64_t)&v11);
  char v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v12;
  }
  long long v15 = v11;
  sub_19E5E7C14((uint64_t)&v15, (uint64_t)v16, &qword_1E945C998);
  sub_19E5E7C14((uint64_t)v16, (uint64_t)&v17, &qword_1E945C998);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
    swift_arrayDestroy();
  }
  return sub_19E644380(a1, a2, a3, a4);
}

char *sub_19E6441FC(char *a1, uint64_t a2, uint64_t *a3, char *a4)
{
  sub_19E644308((uint64_t)a1, a2, a3, (uint64_t)a4, (uint64_t)&v11);
  char v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v12;
  }
  long long v15 = v11;
  sub_19E5E7C14((uint64_t)&v15, (uint64_t)v16, (uint64_t *)&unk_1E945C9B0);
  sub_19E5E7C14((uint64_t)v16, (uint64_t)&v17, (uint64_t *)&unk_1E945C9B0);
  if (v17)
  {
    type metadata accessor for IOSurfaceRef(0);
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    type metadata accessor for IOSurfaceRef(0);
    swift_arrayDestroy();
  }
  return sub_19E644380(a1, a2, a3, a4);
}

uint64_t sub_19E644308@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = v5 + result;
  uint64_t v7 = *a3;
  if (v5 + result >= *a3) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v5 + a2;
  if (v5 + a2 >= v7) {
    uint64_t v10 = *a3;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v6 - v8;
    uint64_t v13 = v9 - v10;
    if (v11) {
      BOOL v14 = v12 < v13;
    }
    else {
      BOOL v14 = 1;
    }
    int v15 = v14;
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      uint64_t v13 = 0;
LABEL_18:
      *(void *)a5 = a4 + 8 * v12;
      *(void *)(a5 + 8) = v11;
      *(void *)(a5 + 16) = v16;
      *(void *)(a5 + 24) = v13;
      *(unsigned char *)(a5 + 32) = v15;
      return result;
    }
    uint64_t v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      uint64_t v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

char *sub_19E644380(char *result, uint64_t a2, uint64_t *a3, char *__src)
{
  uint64_t v5 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  if (v5 < 1) {
    return result;
  }
  uint64_t v7 = (uint64_t)result;
  uint64_t v9 = a3[1];
  int64_t v8 = a3[2];
  uint64_t v10 = &result[v8];
  uint64_t v11 = *a3;
  if ((uint64_t)&result[v8] >= *a3) {
    uint64_t v12 = *a3;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v8 + a2;
  if (v8 + a2 >= v11) {
    uint64_t v14 = *a3;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v9 - a2;
  if (__OFSUB__(v9, a2)) {
    goto LABEL_144;
  }
  uint64_t v17 = (uint64_t)&v10[-v12];
  uint64_t v18 = v13 - v14;
  if (v15 <= (uint64_t)result) {
    goto LABEL_31;
  }
  uint64_t v15 = v8 + v5;
  if (__OFADD__(v8, v5))
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  BOOL v19 = __OFSUB__(v15, v11);
  if (v15 >= v11)
  {
    v15 -= v11;
    if (v19) {
      goto LABEL_149;
    }
  }
  if (!result) {
    goto LABEL_118;
  }
  if (v18 <= 0) {
    uint64_t v9 = *a3;
  }
  else {
    uint64_t v9 = v13 - v14;
  }
  if (v17 <= 0) {
    int64_t v20 = *a3;
  }
  else {
    int64_t v20 = (int64_t)&v10[-v12];
  }
  if (v8 < v20)
  {
    if (v9 >= v15)
    {
      if ((uint64_t)result <= 0) {
        goto LABEL_118;
      }
      uint64_t result = &__src[8 * v15];
      uint64_t v40 = &__src[8 * v8];
      if (v15 >= v8 && result < &v40[8 * v7] && v15 == v8) {
        goto LABEL_118;
      }
      size_t v41 = 8 * v7;
      goto LABEL_117;
    }
    if (v18 > 0)
    {
      uint64_t v21 = &__src[8 * (v11 - v5)];
      if (v11 - v5 > 0 || (int64_t v8 = (int64_t)&v21[8 * v18], v8 <= (unint64_t)__src) || v11 != v5) {
        uint64_t result = (char *)memmove(__src, v21, 8 * v18);
      }
    }
    uint64_t v11 = v7 - v18;
    if (!__OFSUB__(v7, v18)) {
      goto LABEL_112;
    }
    __break(1u);
LABEL_31:
    uint64_t v4 = v8 + v9;
    if (!__OFADD__(v8, v9))
    {
      if ((v9 & 0x8000000000000000) == 0)
      {
        BOOL v22 = __OFSUB__(v4, v11);
        if (v4 < v11) {
          goto LABEL_39;
        }
        v4 -= v11;
        if (!v22) {
          goto LABEL_39;
        }
        __break(1u);
      }
      if (v4 < 0)
      {
        BOOL v19 = __OFADD__(v4, v11);
        v4 += v11;
        if (v19) {
          goto LABEL_156;
        }
      }
LABEL_39:
      BOOL v19 = __OFSUB__(v9, v5);
      uint64_t v23 = v9 - v5;
      if (!v19)
      {
        uint64_t v24 = v23 + v8;
        if (v24 >= v11) {
          uint64_t v25 = v11;
        }
        else {
          uint64_t v25 = 0;
        }
        if (!v15) {
          goto LABEL_140;
        }
        uint64_t v7 = v24 - v25;
        if (v24 - v25 <= 0) {
          uint64_t v26 = v11;
        }
        else {
          uint64_t v26 = v24 - v25;
        }
        if (v4 <= 0) {
          uint64_t v27 = v11;
        }
        else {
          uint64_t v27 = v4;
        }
        if (v18 < v27)
        {
          if (v26 >= v17) {
            goto LABEL_121;
          }
          uint64_t v28 = v11 - v17;
          if (__OFSUB__(v11, v17))
          {
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          if (v28 > 0)
          {
            uint64_t result = &__src[8 * v17];
            uint64_t v29 = &__src[8 * v18];
            if (v17 != v18 || result >= &v29[8 * v28]) {
              uint64_t result = (char *)memmove(result, v29, 8 * v28);
            }
            BOOL v19 = __OFADD__(v18, v28);
            v18 += v28;
            if (v19) {
              goto LABEL_157;
            }
            BOOL v30 = __OFSUB__(v18, *a3);
            if (v18 >= *a3)
            {
              v18 -= *a3;
              if (v30) {
                goto LABEL_161;
              }
            }
          }
          uint64_t v31 = v15 - v28;
          if (__OFSUB__(v15, v28)) {
            goto LABEL_151;
          }
          if (v31 < 1) {
            goto LABEL_140;
          }
          uint64_t v32 = &__src[8 * v18];
          if (v18 <= 0 && &v32[8 * v31] > __src && !v18) {
            goto LABEL_140;
          }
          size_t v33 = 8 * v31;
LABEL_99:
          uint64_t result = __src;
LABEL_139:
          uint64_t result = (char *)memmove(result, v32, v33);
          goto LABEL_140;
        }
LABEL_76:
        uint64_t v35 = v11 - v18;
        BOOL v36 = __OFSUB__(v11, v18);
        if (v26 >= v17)
        {
          if (v36)
          {
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
            return result;
          }
          if (v35 > 0)
          {
            uint64_t result = &__src[8 * v17];
            uint64_t v46 = &__src[8 * v18];
            if (v17 != v18 || result >= &v46[8 * v35]) {
              uint64_t result = (char *)memmove(result, v46, 8 * v35);
            }
            BOOL v19 = __OFADD__(v17, v35);
            v17 += v35;
            if (v19) {
              goto LABEL_159;
            }
            BOOL v47 = __OFSUB__(v17, *a3);
            if (v17 >= *a3)
            {
              v17 -= *a3;
              if (v47) {
                goto LABEL_163;
              }
            }
          }
          if (v4 >= 1)
          {
            uint64_t result = &__src[8 * v17];
            if (v17 < 0 || v17 >= v4 || v17)
            {
              size_t v33 = 8 * v4;
              uint64_t v32 = __src;
              goto LABEL_139;
            }
          }
          goto LABEL_140;
        }
        if (v36)
        {
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (v35 > 0)
        {
          uint64_t result = &__src[8 * v17];
          uint64_t v37 = &__src[8 * v18];
          if (v17 != v18 || result >= &v37[8 * v35]) {
            uint64_t result = (char *)memmove(result, v37, 8 * v35);
          }
          BOOL v19 = __OFADD__(v17, v35);
          v17 += v35;
          if (v19) {
            goto LABEL_158;
          }
          BOOL v38 = __OFSUB__(v17, *a3);
          if (v17 >= *a3)
          {
            v17 -= *a3;
            if (v38) {
              goto LABEL_162;
            }
          }
        }
        uint64_t result = &__src[8 * v17];
        if (v17 < 0 || v17 >= v5 || v17) {
          uint64_t result = (char *)memmove(result, __src, 8 * v5);
        }
        uint64_t v39 = v5;
        if (v5 >= *a3)
        {
          uint64_t v39 = v5 - *a3;
          if (__OFSUB__(v5, *a3)) {
            goto LABEL_160;
          }
        }
        if (v7 < 1) {
          goto LABEL_140;
        }
        uint64_t v32 = &__src[8 * v39];
        if (v39 <= 0 && &v32[8 * v7] > __src && !v39) {
          goto LABEL_140;
        }
        size_t v33 = 8 * v7;
        goto LABEL_99;
      }
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  if (v9 >= v15)
  {
    if (__OFSUB__(0, v17))
    {
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
    if (v17 > 0)
    {
      uint64_t v42 = v18 - v17;
      uint64_t result = &__src[8 * (v18 - v17)];
      if (v18 - v17 < 0 || v42 >= v17 || v42) {
        uint64_t result = (char *)memmove(result, __src, 8 * v17);
      }
    }
    uint64_t v11 = v7 - v17;
    if (__OFSUB__(v7, v17)) {
      goto LABEL_154;
    }
    goto LABEL_112;
  }
  if (v17 > 0) {
    uint64_t result = (char *)memmove(&__src[8 * v5], __src, 8 * v17);
  }
  uint64_t v26 = *a3;
  uint64_t v34 = *a3 - v5;
  if (*a3 < 1 || v34 > 0 || v26 != v5) {
    uint64_t result = (char *)memmove(__src, &__src[8 * v34], 8 * v5);
  }
  uint64_t v11 = v7 - v18;
  if (__OFSUB__(v7, v18))
  {
    __break(1u);
    goto LABEL_76;
  }
LABEL_112:
  if (v11 < 1) {
    goto LABEL_118;
  }
  uint64_t v43 = a3[2];
  uint64_t result = &__src[8 * v15];
  uint64_t v40 = &__src[8 * v43];
  if (v15 >= v43 && result < &v40[8 * v11] && v15 == v43) {
    goto LABEL_118;
  }
  size_t v41 = 8 * v11;
LABEL_117:
  uint64_t result = (char *)memmove(result, v40, v41);
LABEL_118:
  a3[2] = v15;
  uint64_t v44 = a3[1];
  BOOL v19 = __OFSUB__(v44, v5);
  uint64_t v45 = v44 - v5;
  if (!v19) {
    goto LABEL_141;
  }
  __break(1u);
LABEL_121:
  if (v15 > 0)
  {
    uint64_t result = &__src[8 * v17];
    uint64_t v32 = &__src[8 * v18];
    if (v17 < v18 || result >= &v32[8 * v15] || v17 != v18)
    {
      size_t v33 = 8 * v15;
      goto LABEL_139;
    }
  }
LABEL_140:
  uint64_t v48 = a3[1];
  BOOL v19 = __OFSUB__(v48, v5);
  uint64_t v45 = v48 - v5;
  if (v19)
  {
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
LABEL_141:
  a3[1] = v45;
  return result;
}

unint64_t sub_19E64485C(unint64_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(BOOL, uint64_t, uint64_t), uint64_t (*a7)(unint64_t))
{
  uint64_t v9 = v7;
  uint64_t v11 = *a5;
  if (a3)
  {
    if (v11)
    {
      uint64_t v19 = result;
      swift_retain();
      sub_19E643B64(v19);
      uint64_t v22 = *(void *)(v9 + 16);
      uint64_t v21 = (uint64_t *)(v9 + 16);
      uint64_t v20 = v22;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v21 = v22;
      if ((result & 1) == 0)
      {
        uint64_t result = a6(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = *v21;
      }
      unint64_t v24 = *(void *)(v20 + 16);
      unint64_t v23 = *(void *)(v20 + 24);
      if (v24 >= v23 >> 1)
      {
        uint64_t result = a6(v23 > 1, v24 + 1, 1);
        uint64_t v20 = *v21;
      }
      *(void *)(v20 + 16) = v24 + 1;
      *(void *)(v20 + 8 * v24 + 32) = v11;
      *uint64_t v21 = v20;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)(v7 + 16);
    uint64_t v15 = *(void *)(v9 + 16);
    if (v11)
    {
      swift_retain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v14 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        a6(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = *v14;
      }
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        a6(v17 > 1, v18 + 1, 1);
        uint64_t v15 = *v14;
      }
      *(void *)(v15 + 16) = v18 + 1;
      *(void *)(v15 + 8 * v18 + 32) = v11;
      uint64_t *v14 = v15;
      sub_19E64062C(a2, v18, a7);
      return swift_release();
    }
    else
    {
      if (*(void *)(v15 + 16) > a2)
      {
        uint64_t v25 = sub_19E644BA4(a2, (uint64_t (*)(uint64_t))a7);
        uint64_t v26 = *v14;
        swift_retain();
        char v27 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v14 = v26;
        if ((v27 & 1) == 0)
        {
          a6(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = *v14;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v29 = *(void *)(v26 + 24);
        unint64_t v30 = v28 + 1;
        if (v28 >= v29 >> 1)
        {
          unint64_t v31 = *(void *)(v26 + 16);
          a6(v29 > 1, v28 + 1, 1);
          unint64_t v28 = v31;
          uint64_t v26 = *v14;
        }
        *(void *)(v26 + 16) = v30;
        *(void *)(v26 + 8 * v28 + 32) = v25;
        swift_release();
        uint64_t *v14 = v26;
      }
      return sub_19E644C7C(a2, a4);
    }
  }
  return result;
}

uint64_t sub_19E644AD4(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_19E643A0C(v3);
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = v3 + 8 * a1;
      uint64_t v8 = *(void *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * v6);
      *(void *)(v3 + 16) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E644BA4(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = a2(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      *uint64_t v2 = v5;
      return v10;
    }
  }
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

unint64_t sub_19E644C7C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_19E644AD4(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_19EBF6478())
  {
LABEL_15:
    uint64_t v10 = sub_19E644AD4(a1);
    sub_19E643CD4();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_19EBF6488();
    unint64_t result = swift_release();
    *uint64_t v2 = v8;
  }
  if (v8)
  {
    unint64_t result = sub_19E644DC0(a2, (uint64_t *)(v8 + 16), v8 + 32, (uint64_t)v2);
    uint64_t v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_19E644F70(a1, v9, v2[1], (uint64_t *)(v8 + 16));
      return sub_19E644AD4(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_19E644DC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v16 = sub_19EBF6408();
  sub_19EBF6458();
  if (v16)
  {
    uint64_t v7 = a1;
    uint64_t v8 = sub_19EBF6418();
    while (1)
    {
      unint64_t result = sub_19EBF6438();
      if (v10)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (result >= *(void *)(*(void *)(a4 + 8) + 16)) {
        goto LABEL_23;
      }
      uint64_t v11 = *a2;
      unint64_t result = sub_19EBF7468();
      if (__OFSUB__(1 << v11, 1)) {
        goto LABEL_24;
      }
      uint64_t v12 = result & ((1 << v11) - 1);
      if (v6 >= v8)
      {
        if (v12 >= v8 && v6 >= v12)
        {
LABEL_18:
          sub_19EBF6438();
          sub_19EBF6428();
          uint64_t v6 = v7;
        }
      }
      else if (v12 >= v8 || v6 >= v12)
      {
        goto LABEL_18;
      }
      sub_19EBF6458();
      uint64_t v7 = a1;
    }
  }

  return sub_19EBF6428();
}

uint64_t sub_19E644F70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v5 >= 1)
  {
    uint64_t v7 = result;
    unint64_t v8 = *(void *)(a3 + 16);
    uint64_t v9 = v8 - v5;
    if ((uint64_t)v8 < v5) {
      ++v9;
    }
    if (result < v9 >> 1)
    {
      unint64_t result = MEMORY[0x19F3BED90](*a4 & 0x3F);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v8 < v7)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v7)
        {
          uint64_t v10 = 0;
          while (1)
          {
            uint64_t v11 = *a4;
            unint64_t result = sub_19EBF7468();
            if (__OFSUB__(1 << v11, 1)) {
              break;
            }
            if (sub_19EBF6408())
            {
              while (1)
              {
                uint64_t v12 = sub_19EBF6438();
                if ((v13 & 1) == 0 && v12 == v10) {
                  break;
                }
                sub_19EBF6458();
              }
            }
            unint64_t result = v10 + v5;
            if (__OFADD__(v10, v5)) {
              goto LABEL_53;
            }
            ++v10;
            unint64_t result = sub_19EBF6448();
            if (v10 == v7) {
              goto LABEL_19;
            }
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        goto LABEL_19;
      }
      sub_19EBF6408();
      uint64_t v23 = sub_19EBF6438();
      if ((v24 & 1) != 0 || v23 >= v7)
      {
LABEL_40:
        unint64_t result = sub_19EBF6458();
LABEL_19:
        uint64_t v14 = a4[1];
        if (__OFSUB__(v14 >> 6, v5))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        uint64_t v15 = 1 << *a4;
        BOOL v16 = __OFSUB__(v15, 1);
        uint64_t v17 = v15 - 1;
        if (v16)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        uint64_t v18 = (v17 & (((v14 >> 6) - v5) >> 63)) + (v14 >> 6) - v5;
        if (v18 < v17) {
          uint64_t v17 = 0;
        }
        a4[1] = a4[1] & 0x3F | ((v18 - v17) << 6);
        return result;
      }
      if (!__OFADD__(v23, v5))
      {
        sub_19EBF6448();
        goto LABEL_40;
      }
      __break(1u);
LABEL_46:
      sub_19EBF6408();
      uint64_t v25 = sub_19EBF6438();
      if ((v26 & 1) == 0 && v25 >= v4)
      {
        BOOL v16 = __OFSUB__(v25, v5);
        unint64_t result = v25 - v5;
        if (v16)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        sub_19EBF6448();
      }
      return sub_19EBF6458();
    }
    uint64_t v4 = a2;
    uint64_t v19 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    unint64_t result = MEMORY[0x19F3BED90](*a4 & 0x3F);
    if (v19 >= result / 3) {
      goto LABEL_46;
    }
    if ((uint64_t)v8 < v4)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v4 < 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_65:
        __break(1u);
        return result;
      }
      while (1)
      {
        uint64_t v20 = *a4;
        unint64_t result = sub_19EBF7468();
        if (__OFSUB__(1 << v20, 1)) {
          goto LABEL_55;
        }
        if (sub_19EBF6408())
        {
          while (1)
          {
            uint64_t v21 = sub_19EBF6438();
            if ((v22 & 1) == 0 && v21 == v4) {
              break;
            }
            sub_19EBF6458();
          }
        }
        unint64_t result = v4 - v5;
        if (__OFSUB__(v4, v5)) {
          goto LABEL_56;
        }
        ++v4;
        unint64_t result = sub_19EBF6448();
        if (v4 == v8) {
          return result;
        }
      }
    }
  }
  return result;
}

BOOL sub_19E64536C(void *a1)
{
  return *a1 == **(void **)(v1 + 16);
}

void sub_19E645384(uint64_t a1)
{
  if (qword_1E945BB80 != -1) {
    swift_once();
  }
  uint64_t v2 = off_1E945C990;
  uint64_t v3 = (os_unfair_lock_s *)((char *)off_1E945C990 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1E945C990 + 6);
  uint64_t v4 = v2[2];
  id v5 = objc_msgSend(*(id *)(a1 + 24), sel_registryID);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_19E6695EC((uint64_t)v5), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    swift_beginAccess();
    swift_retain();
    sub_19E642B98();
    swift_endAccess();
    *(void *)(v9 + 88) = 0;
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  os_unfair_lock_unlock(v3);
}

void *sub_19E645498(uint64_t a1, uint64_t a2)
{
  v2[2] = 16;
  v2[11] = 0;
  uint64_t v5 = *(void *)sub_19EBF64C8();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v2[3] = 0;
  v2[4] = v6;
  v2[5] = v6;
  v2[6] = v5;
  v2[9] = 0;
  v2[10] = 0;
  v2[7] = a2;
  v2[8] = 0;
  unint64_t v7 = *(void **)(a1 + 24);
  swift_retain();
  if (objc_msgSend(v7, sel_hasUnifiedMemory)) {
    float v8 = 1.4;
  }
  else {
    float v8 = 1.0;
  }
  unint64_t result = objc_msgSend(v7, sel_recommendedMaxWorkingSetSize);
  float v10 = v8 * (float)(unint64_t)result;
  if ((~LODWORD(v10) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 <= -9.2234e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 < 9.2234e18)
  {
    v2[12] = (uint64_t)v10;
    v2[13] = objc_msgSend(v7, sel_registryID);
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_19E64559C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

BOOL sub_19E6455AC(void *a1)
{
  return *a1 >= *(void *)(v1 + 16);
}

uint64_t sub_19E6455C0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v6 = *a1;
  uint64_t result = v4(&v6);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19E645608()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19E645640(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

BOOL sub_19E645650(void *a1)
{
  return sub_19E61BAA8(a1, *(void **)(v1 + 16));
}

BOOL sub_19E645670(void *a1)
{
  return sub_19E64536C(a1);
}

unint64_t sub_19E645690(uint64_t a1)
{
  unint64_t result = sub_19E6456B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E6456B8()
{
  unint64_t result = qword_1E945C9C0;
  if (!qword_1E945C9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9C0);
  }
  return result;
}

unint64_t sub_19E64570C(uint64_t a1)
{
  unint64_t result = sub_19E645734();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E645734()
{
  unint64_t result = qword_1E945CCD0;
  if (!qword_1E945CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CCD0);
  }
  return result;
}

void *sub_19E645788(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x19F3BF970](0, a2);
    id v13 = (id)MEMORY[0x19F3BF970](1, a2);
    if ((a5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    if (v10 != 1)
    {
      uint64_t v11 = *(void **)(a2 + 40);
      id v12 = *(id *)(a2 + 32);
      id v13 = v11;
      if ((a5 & 1) == 0)
      {
LABEL_5:
        uint64_t v14 = (void *)sub_19EBF6788();
        id v15 = objc_msgSend(v9, sel_gatherWithUpdatesTensor_indicesTensor_axis_batchDimensions_name_, v12, v13, a3, a4, v14);
LABEL_8:
        id v16 = v15;

        __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_19EC387F0;
        *(void *)(v17 + 32) = v16;
        uint64_t v18 = v17;
        sub_19EBF6908();

        return (void *)v18;
      }
LABEL_7:
      uint64_t v14 = (void *)sub_19EBF6788();
      id v15 = objc_msgSend(v9, sel_gatherNDWithUpdatesTensor_indicesTensor_batchDimensions_name_, v12, v13, a3, v14);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19E645908(void *result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v7 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x19F3BF970](0, a2);
    id v12 = (id)MEMORY[0x19F3BF970](1, a2);
    id v13 = (id)MEMORY[0x19F3BF970](2, a2);
    goto LABEL_6;
  }
  unint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v8 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v8 >= 3)
  {
    uint64_t v9 = *(void **)(a2 + 40);
    uint64_t v10 = *(void **)(a2 + 48);
    id v11 = *(id *)(a2 + 32);
    id v12 = v9;
    id v13 = v10;
LABEL_6:
    uint64_t v14 = v13;
    uint64_t v15 = qword_19EC39098[a4];
    id v16 = (void *)sub_19EBF6788();
    id v17 = objc_msgSend(v7, sel_scatterAlongAxis_withDataTensor_updatesTensor_indicesTensor_mode_name_, a3, v11, v12, v14, v15, v16);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19EC387F0;
    *(void *)(v18 + 32) = v17;
    uint64_t v19 = v18;
    sub_19EBF6908();

    return (void *)v19;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_19E645A8C(uint64_t a1)
{
  unint64_t result = sub_19E645AB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E645AB4()
{
  unint64_t result = qword_1E945C9C8;
  if (!qword_1E945C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9C8);
  }
  return result;
}

uint64_t sub_19E645B08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = (os_unfair_lock_s *)(v5 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  uint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = (uint64_t *)(v5 + 16);
  if (*(void *)(v8 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E668958();
    }
    uint64_t v9 = (void *)*v7;
    uint64_t v10 = *(void *)(*v7 + 24);
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v12 = v10 - 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v13 = v9[4] + v12;
    uint64_t v14 = v9[2];
    if (v13 < v14) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = (void *)v9[v13 - v14 + 5];
    v9[3] = v12;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v16 = swift_retain();
    uint64_t v15 = sub_19E648ABC(v16);
  }
  os_unfair_lock_unlock(v6);
  if (v15)
  {
    uint64_t v17 = v15[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_19E6469A8((uint64_t *)(v17 + 16), &v21);
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    uint64_t v18 = v21;
    swift_release();
    sub_19E645E48(v18, a1, v2, &v21);
    swift_release();
    os_unfair_lock_lock(v6);
    sub_19E6469C4(v7);
    os_unfair_lock_unlock(v6);
    swift_release_n();
    return v21;
  }
LABEL_12:
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v20 = objc_msgSend(*(id *)(v4 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E645E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v61 = a4;
  uint64_t v6 = *(void *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  int v8 = *(unsigned __int8 *)(a2 + 33);
  uint64_t v59 = a3;
  uint64_t v9 = *(void (**)(char *, uint64_t))(a3 + 16);
  uint64_t v10 = (void *)MEMORY[0x19F3C1A40]();
  if (qword_1E945BB80 != -1) {
    swift_once();
  }
  BOOL v11 = (uint64_t *)((char *)off_1E945C990 + 16);
  uint64_t v12 = (os_unfair_lock_s *)((char *)off_1E945C990 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1E945C990 + 6);
  if (v8) {
    int v13 = 256;
  }
  else {
    int v13 = 0;
  }
  uint64_t v62 = v9;
  sub_19E640784(v11, v9, v6, v13 | v7, 0, 1, v71);
  if (v4)
  {
LABEL_31:
    os_unfair_lock_unlock(v12);
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)v9);
    __break(1u);
    goto LABEL_32;
  }
  os_unfair_lock_unlock(v12);
  uint64_t v14 = v71[0];
  type metadata accessor for MetalBufferStorage();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 48) = v7;
  *(unsigned char *)(v15 + 49) = v8;
  uint64_t v16 = v63;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v16;
  *(void *)(v15 + 32) = &off_1EF0C6CF0;
  *(void *)(v15 + 40) = v6;
  uint64_t v17 = qword_1E945BB38;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  if (byte_1E946A4F3) {
    uint64_t v18 = sub_19E658668;
  }
  else {
    uint64_t v18 = 0;
  }
  *(void *)(v15 + 56) = v18;
  *(void *)(v15 + 64) = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
  uint64_t inited = swift_initStackObject();
  long long v60 = xmmword_19EC36240;
  *(_OWORD *)(inited + 16) = xmmword_19EC36240;
  *(void *)(inited + 32) = v15;
  sub_19E6469E0(a2);
  swift_retain();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_19E650918(a2, MEMORY[0x1E4FBC860], inited, (uint64_t)v71);
  long long v22 = *(_OWORD *)(a2 + 16);
  long long v67 = *(_OWORD *)a2;
  long long v68 = v22;
  long long v69 = *(_OWORD *)(a2 + 32);
  uint64_t v70 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(v59 + 24);
  char v24 = (os_unfair_lock_s *)(*(void *)(v23 + 16) + 16);
  os_unfair_lock_lock(v24);
  uint64_t v25 = sub_19E662760(v23, (uint64_t)v71);
  os_unfair_lock_unlock(v24);
  uint64_t v26 = (uint64_t)v62;
  if (!v25)
  {
    uint64_t v56 = v23;
    uint64_t v57 = v19;
    uint64_t v59 = 0;
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v55 = &v52;
    uint64_t v28 = v74;
    v64[0] = v21;
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    unint64_t v29 = *(os_unfair_lock_s **)(v28 + 16);
    uint64_t v58 = v28;
    swift_bridgeObjectRetain();
    if (v29)
    {
      uint64_t v12 = 0;
      uint64_t v30 = v58 + 41;
      while (2)
      {
        uint64_t v34 = v12;
        uint64_t v12 = (os_unfair_lock_s *)((char *)v12 + 1);
        uint64_t v31 = 2147483656;
        switch(*(unsigned char *)(v30 - 1))
        {
          case 1:
            uint64_t v31 = 8;
            goto LABEL_16;
          case 2:
            uint64_t v31 = 16;
            goto LABEL_16;
          case 3:
            uint64_t v31 = 32;
            goto LABEL_16;
          case 4:
            uint64_t v31 = 64;
            goto LABEL_16;
          case 5:
            uint64_t v31 = 536870920;
            goto LABEL_16;
          case 6:
            uint64_t v31 = 536870928;
            goto LABEL_16;
          case 7:
            uint64_t v31 = 536870944;
            goto LABEL_16;
          case 8:
            uint64_t v31 = 536870976;
            goto LABEL_16;
          case 9:
            uint64_t v31 = 268435472;
            goto LABEL_16;
          case 0xA:
            uint64_t v31 = 268435488;
            goto LABEL_16;
          case 0xB:
            uint64_t v65 = 0;
            unint64_t v66 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v9 = v51;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v75) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v53 = 0;
            uint64_t v52 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_31;
          default:
LABEL_16:
            uint64_t v65 = 0x5F7475706E69;
            unint64_t v66 = 0xE600000000000000;
            *(void *)&long long v75 = v34;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v32 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v33 = objc_msgSend(v27, sel_placeholderWithShape_dataType_name_, 0, v31, v32);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v30 += 16;
            if (v29 != v12) {
              continue;
            }
            goto LABEL_27;
        }
      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v54 = v64[0];
    swift_bridgeObjectRelease();
    long long v75 = v67;
    long long v76 = v68;
    long long v77 = v69;
    uint64_t v78 = v70;
    uint64_t v35 = v59;
    uint64_t v36 = sub_19E646A18(v27);
    uint64_t v59 = v35;
    if (!v35)
    {
      uint64_t v37 = v36;
      uint64_t v38 = v72;
      uint64_t v39 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 24);
      id v41 = v27;
      uint64_t v65 = v40(v38, v39);
      unint64_t v66 = v42;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v43 = v65;
      uint64_t v44 = v66;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      swift_allocObject();
      uint64_t v45 = sub_19E6624F0(v41, v54, v37, v43, v44);
      sub_19E62E830((uint64_t)v71, (uint64_t)&v65);
      uint64_t v46 = v56;
      BOOL v47 = (os_unfair_lock_s *)(*(void *)(v56 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      sub_19E62E830((uint64_t)&v65, (uint64_t)v64);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = *(void *)(v46 + 24);
      *(void *)(v46 + 24) = 0x8000000000000000;
      sub_19E667FE4((uint64_t)v45, (uint64_t)v64, isUniquelyReferenced_nonNull_native);
      *(void *)(v46 + 24) = v79;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v64);
      swift_endAccess();
      os_unfair_lock_unlock(v47);
      sub_19E62E868((uint64_t)&v65);

      swift_release();
      uint64_t v26 = (uint64_t)v62;
      uint64_t v16 = v63;
      goto LABEL_29;
    }
LABEL_32:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E646614);
  }
LABEL_29:
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v60;
  *(void *)(v49 + 32) = v15;
  swift_retain();
  sub_19E651308(v26, MEMORY[0x1E4FBC860], v49, v16);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_19E62E868((uint64_t)v71);
  *uint64_t v61 = v15;
  return result;
}

void *sub_19E646644()
{
  uint64_t v1 = 2147483656;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t v1 = 8;
      break;
    case 2:
      uint64_t v1 = 16;
      break;
    case 3:
      uint64_t v1 = 32;
      break;
    case 4:
      uint64_t v1 = 64;
      break;
    case 5:
      uint64_t v1 = 536870920;
      break;
    case 6:
      uint64_t v1 = 536870928;
      break;
    case 7:
      uint64_t v1 = 536870944;
      break;
    case 8:
      uint64_t v1 = 536870976;
      break;
    case 9:
      uint64_t v1 = 268435472;
      break;
    case 0xA:
      uint64_t v1 = 268435488;
      break;
    case 0xB:
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19E6C1A2C(11);
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      LOBYTE(v18) = 1;
      sub_19EBF7188();
      sub_19EBF67D8();
      sub_19EBF71F8();
      __break(1u);
      JUMPOUT(0x19E646954);
    default:
      break;
  }
  sub_19E61EE7C((uint64_t *)v0, (uint64_t)&v18);
  sub_19E61EE7C(&v18, (uint64_t)&v16);
  if ((_BYTE)v17)
  {
    if (v17 == 1)
    {
      int v2 = HIDWORD(v16);
      int v3 = v16;
      id v4 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 0, v1);
      uint64_t v6 = v4;
      if (v4)
      {
        LODWORD(v5) = v3;
        objc_msgSend(v4, sel_setMin_, v5);
        int v8 = sel_setMax_;
LABEL_18:
        LODWORD(v7) = v2;
        objc_msgSend(v6, v8, v7);
      }
    }
    else
    {
      uint64_t v13 = (int)v16;
      uint64_t v12 = SHIDWORD(v16);
      id v14 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 0, v1);
      uint64_t v6 = v14;
      if (v14)
      {
        objc_msgSend(v14, sel_setMinInteger_, v13);
        objc_msgSend(v6, sel_setMaxInteger_, v12);
      }
    }
  }
  else
  {
    int v2 = HIDWORD(v16);
    int v9 = v16;
    id v10 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 1, v1);
    uint64_t v6 = v10;
    if (v10)
    {
      LODWORD(v11) = v9;
      objc_msgSend(v10, sel_setMean_, v11);
      int v8 = sel_setStandardDeviation_;
      goto LABEL_18;
    }
  }
  return v6;
}

uint64_t sub_19E646984(uint64_t a1)
{
  return sub_19E645B08(a1);
}

uint64_t *sub_19E6469A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19E648FA8(a1, v2, a2);
}

uint64_t sub_19E6469C4(uint64_t *a1)
{
  return sub_19E648954(a1, v1);
}

uint64_t sub_19E6469E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E646A18(void *a1)
{
  int v3 = sub_19E646644();
  if (v3)
  {
    id v4 = v3;
    sub_19E636F58(v1[2]);
    sub_19E5F47F0();
    double v5 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v1[3];
    if ((v6 & 0x8000000000000000) == 0)
    {
      sub_19E61EE7C(v1, (uint64_t)&v14);
      sub_19E61EE7C(&v14, (uint64_t)v12);
      double v7 = (void *)sub_19EBF6788();
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(a1, sel_randomTensorWithShape_descriptor_seed_name_, v5, v4, v6, v7);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_19EC387F0;
      *(void *)(v9 + 32) = v8;
      uint64_t v13 = v9;
      sub_19EBF6908();
      uint64_t v10 = v13;

      return v10;
    }
    __break(1u);
  }
  sub_19E61EE7C(v1, (uint64_t)&v13);
  sub_19E61EE7C(&v13, (uint64_t)&v14);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    char v15 = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

unint64_t sub_19E646D20(uint64_t a1)
{
  unint64_t result = sub_19E646D48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646D48()
{
  unint64_t result = qword_1E945CCE0;
  if (!qword_1E945CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CCE0);
  }
  return result;
}

unint64_t sub_19E646D9C(uint64_t a1)
{
  unint64_t result = sub_19E646DC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646DC4()
{
  unint64_t result = qword_1E945C9D0;
  if (!qword_1E945C9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9D0);
  }
  return result;
}

unint64_t sub_19E646E18(uint64_t a1)
{
  unint64_t result = sub_19E646E40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646E40()
{
  unint64_t result = qword_1E945CCF0;
  if (!qword_1E945CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CCF0);
  }
  return result;
}

unint64_t sub_19E646E94(uint64_t a1)
{
  unint64_t result = sub_19E646EBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646EBC()
{
  unint64_t result = qword_1E945C9D8;
  if (!qword_1E945C9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9D8);
  }
  return result;
}

unint64_t sub_19E646F10(uint64_t a1)
{
  unint64_t result = sub_19E646F38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646F38()
{
  unint64_t result = qword_1E945CD00;
  if (!qword_1E945CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD00);
  }
  return result;
}

unint64_t sub_19E646F8C(uint64_t a1)
{
  unint64_t result = sub_19E646FB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E646FB4()
{
  unint64_t result = qword_1E945C9E0;
  if (!qword_1E945C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9E0);
  }
  return result;
}

uint64_t sub_19E647008()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v3 = 32;
    do
    {
      sub_19EBF6B38();
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_19E6470C8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v3 = 40;
    do
    {
      sub_19EBF6B38();
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

void *sub_19E647188(void *result, uint64_t a2)
{
  float v3 = *(float *)(v2 + 32);
  int v4 = *(unsigned __int8 *)(v2 + 36);
  uint64_t v16 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x19F3BF970](0);
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v5 = *(id *)(a2 + 32);
  }
  uint64_t v6 = 1;
  if (v3 != 0.0) {
    uint64_t v6 = 2;
  }
  uint64_t v14 = v6;
  char v15 = v5;
  sub_19E647008();
  sub_19E5F47F0();
  uint64_t v13 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  sub_19E6470C8();
  double v7 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  if (v4) {
    uint64_t v8 = v14;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v4) {
    double v9 = 0.0;
  }
  else {
    double v9 = v3;
  }
  uint64_t v10 = (void *)sub_19EBF6788();
  id v11 = objc_msgSend(v16, sel_padTensor_withPaddingMode_leftPadding_rightPadding_constantValue_name_, v15, v8, v13, v7, v10, v9);

  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19EC387F0;
  *(void *)(v12 + 32) = v11;
  uint64_t v17 = v12;
  sub_19EBF6908();
  return (void *)v17;
}

void *sub_19E64734C(void *result, uint64_t a2, char a3, uint64_t a4)
{
  id v5 = result;
  unint64_t v6 = a2 & 0xC000000000000001;
  if ((a3 & 1) == 0)
  {
    if (v6)
    {
      id v7 = (id)MEMORY[0x19F3BF970](0);
      goto LABEL_5;
    }
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(a2 + 32);
LABEL_5:
      uint64_t v8 = v7;
      double v9 = (void *)sub_19EBF6788();
      id v10 = objc_msgSend(v5, sel_cumulativeSumWithTensor_axis_name_, v8, a4, v9);
LABEL_10:
      id v12 = v10;

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_19EC387F0;
      *(void *)(v13 + 32) = v12;
      uint64_t v14 = v13;
      sub_19EBF6908();
      return (void *)v14;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v6)
  {
LABEL_13:
    id v11 = (id)MEMORY[0x19F3BF970](0);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a2 + 32);
LABEL_9:
    uint64_t v8 = v11;
    double v9 = (void *)sub_19EBF6788();
    id v10 = objc_msgSend(v5, sel_cumulativeProductWithTensor_axis_name_, v8, a4, v9);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_19E64748C(uint64_t a1)
{
  unint64_t result = sub_19E6474B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E6474B4()
{
  unint64_t result = qword_1E945CCB0;
  if (!qword_1E945CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CCB0);
  }
  return result;
}

void *sub_19E647508(void *result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v6 = result;
  if ((a4 & 1) == 0)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = (void *)MEMORY[0x19F3BF970](0, a2);
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      goto LABEL_5;
    }
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(a2 + 32);
      uint64_t v8 = v7;
LABEL_5:
      float v9 = *((float *)&a3 + 1);
      double v10 = *(float *)&a3;
      id v11 = objc_msgSend(v7, sel_dataType);

      id v12 = objc_msgSend(v6, sel_constantWithScalar_dataType_, v11, v10);
      if ((a2 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x19F3BF970](0, a2);
      }
      else {
        id v13 = *(id *)(a2 + 32);
      }
      uint64_t v18 = v13;
      id v19 = objc_msgSend(v13, sel_dataType);

      id v15 = objc_msgSend(v6, sel_constantWithScalar_dataType_, v19, v9);
      uint64_t v16 = (void *)sub_19EBF6788();
      id v17 = objc_msgSend(v6, sel_clampWithTensor_minValueTensor_maxValueTensor_name_, v8, v12, v15, v16);

      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_16;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v14 = (id)MEMORY[0x19F3BF970](0, a2);
    goto LABEL_10;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v14 = *(id *)(a2 + 32);
LABEL_10:
    id v15 = v14;
    uint64_t v16 = (void *)sub_19EBF6788();
    id v17 = objc_msgSend(v6, sel_softMaxWithTensor_axis_name_, v15, a3, v16);
LABEL_13:

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_19EC387F0;
    *(void *)(v20 + 32) = v17;
    uint64_t v21 = v20;
    sub_19EBF6908();
    return (void *)v21;
  }
  __break(1u);
  return result;
}

unint64_t sub_19E647758(uint64_t a1)
{
  unint64_t result = sub_19E647780();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E647780()
{
  unint64_t result = qword_1E945C9E8;
  if (!qword_1E945C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945C9E8);
  }
  return result;
}

void *sub_19E6477D4(void *result, uint64_t a2)
{
  float v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x19F3BF970](0, a2);
    id v7 = (id)MEMORY[0x19F3BF970](1, a2);
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 == 1)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  id v5 = *(void **)(a2 + 40);
  id v6 = *(id *)(a2 + 32);
  id v7 = v5;
LABEL_5:
  uint64_t v8 = v7;
  if (sub_19E647A24(v6, v7))
  {
    float v9 = (void *)sub_19EBF6788();
    id v10 = objc_msgSend(v3, sel_transposeTensor_dimension_withDimension_name_, v8, -3, -4, v9);

    id v11 = (void *)sub_19E647BEC();
    id v12 = (void *)sub_19EBF6788();
    id v13 = objc_msgSend(v3, sel_depthwiseConvolution3DWithSourceTensor_weightsTensor_descriptor_name_, v6, v10, v11, v12);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19EC387F0;
    *(void *)(v14 + 32) = v13;
    uint64_t v20 = v14;
    sub_19EBF6908();
    uint64_t v15 = v20;
  }
  else
  {
    id v16 = sub_19E647F54();
    id v17 = (void *)sub_19EBF6788();
    id v18 = objc_msgSend(v3, sel_convolution2DWithSourceTensor_weightsTensor_descriptor_name_, v6, v8, v16, v17);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19EC387F0;
    *(void *)(v19 + 32) = v18;
    uint64_t v21 = v19;
    sub_19EBF6908();
    uint64_t v15 = v21;
  }
  return (void *)v15;
}

id sub_19E647A24(void *a1, void *a2)
{
  id result = objc_msgSend(a1, sel_shape);
  if (!result) {
    return result;
  }
  id v5 = result;
  sub_19E5F47F0();
  unint64_t v6 = sub_19EBF68E8();

  id v7 = objc_msgSend(a2, sel_shape);
  if (!v7)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = v7;
  unint64_t v9 = sub_19EBF68E8();

  if (*(uint64_t *)(v2 + 48) <= 1) {
    goto LABEL_12;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x19F3BF970](1, v9);
  }
  else
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_20;
    }
    id v10 = *(id *)(v9 + 40);
  }
  id v11 = v10;
  id v12 = (void *)sub_19EBF6DC8();
  char v13 = sub_19EBF6DE8();

  if ((v13 & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v6 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_19EBF7228();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  swift_bridgeObjectRelease();
  if (v14 <= 3) {
    goto LABEL_13;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return (id)(v15 > 3);
}

uint64_t sub_19E647BEC()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19EC391B0;
  *(void *)(v0 + 32) = sub_19EBF6B38();
  *(void *)(v0 + 40) = sub_19EBF6B38();
  *(void *)(v0 + 48) = sub_19EBF6B38();
  sub_19EBF6908();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19EC391B0;
  *(void *)(v1 + 32) = sub_19EBF6B38();
  *(void *)(v1 + 40) = sub_19EBF6B38();
  *(void *)(v1 + 48) = sub_19EBF6B38();
  sub_19EBF6908();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19EC391C0;
  *(void *)(v2 + 32) = sub_19EBF6B38();
  *(void *)(v2 + 40) = sub_19EBF6B38();
  *(void *)(v2 + 48) = sub_19EBF6B38();
  *(void *)(v2 + 56) = sub_19EBF6B38();
  *(void *)(v2 + 64) = sub_19EBF6B38();
  *(void *)(v2 + 72) = sub_19EBF6B38();
  sub_19EBF6908();
  sub_19E5F47F0();
  float v3 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_descriptorWithStrides_dilationRates_paddingValues_paddingStyle_, v3, v4, v5, 0);

  if (v6)
  {
    objc_msgSend(v6, sel_setChannelDimensionIndex_, -3);
    return (uint64_t)v6;
  }
  else
  {
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

id sub_19E647F54()
{
  id result = objc_msgSend(self, sel_descriptorWithStrideInX_strideInY_dilationRateInX_dilationRateInY_groups_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_weightsLayout_, v0[1], *v0, v0[5], v0[4], v0[6], v0[3], v0[3], v0[2], v0[2], 0, 0, 2);
  if (!result)
  {
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    id result = (id)sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19E64813C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)sub_19EBF64C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CAF8);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(void *)(v5 + 16) = v4;
  *(void *)(v2 + 40) = v5;
  uint64_t v55 = &unk_1EF14E3A8;
  uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
  if (!v6) {
    goto LABEL_14;
  }
  id v7 = (os_unfair_lock_s *)v6;
  uint64_t v8 = qword_1E945BB30;
  swift_retain();
  swift_unknownObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  if (byte_1E946A4F2 == 1)
  {
    *(void *)(v2 + 16) = v7;
    *(void *)(v2 + 24) = v7;
    sub_19E64A9C0(0, (unint64_t *)&unk_1E945CB00);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    id v10 = objc_msgSend(ObjCClassFromMetadata, sel_deviceWithMTLDevice_, v7);
    swift_unknownObjectRelease();
    *(void *)(v2 + 48) = v10;
    id v11 = [(os_unfair_lock_s *)v7 newCommandQueue];
    if (!v11)
    {
      if (qword_1E945BB48 == -1)
      {
LABEL_19:
        uint64_t v38 = sub_19EBF65B8();
        __swift_project_value_buffer(v38, (uint64_t)qword_1E946A500);
        swift_unknownObjectRetain_n();
        uint64_t v39 = sub_19EBF65A8();
        os_log_type_t v40 = sub_19EBF6D18();
        if (os_log_type_enabled(v39, v40))
        {
          id v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          uint64_t v42 = v52;
          *(_DWORD *)id v41 = 136315138;
          id v43 = [(os_unfair_lock_s *)v7 name];
          uint64_t v44 = sub_19EBF6798();
          unint64_t v46 = v45;

          uint64_t v54 = sub_19E649230(v44, v46, &v52);
          sub_19EBF6EC8();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          MEMORY[0x19F3C3580](v42, -1, -1);
          MEMORY[0x19F3C3580](v41, -1, -1);
        }
        else
        {
        }
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease();
        swift_release();

LABEL_31:
        swift_deallocPartialClassInstance();
        return 0;
      }
LABEL_36:
      swift_once();
      goto LABEL_19;
    }
    id v12 = v11;
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    id v13 = [(os_unfair_lock_s *)v7 name];
    sub_19EBF6798();

    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    uint64_t v54 = (uint64_t)v12;
    sub_19EBF7188();
    uint64_t v14 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setLabel_, v14);

    *(void *)(v2 + 32) = v12;
    uint64_t v15 = *(os_unfair_lock_s **)(v2 + 40);
    id v7 = v15 + 4;
    id v16 = v15 + 6;
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v16);
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v17 = swift_retain();
    id v18 = sub_19E648ABC(v17);
    if (!v18)
    {
LABEL_27:
      uint64_t v50 = *(void *)(*(void *)&v7->_os_unfair_lock_opaque + 24);
      os_unfair_lock_unlock(v16);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      if (v50 > 0) {
        return v2;
      }
      swift_release();
      return 0;
    }
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(*(void *)&v7->_os_unfair_lock_opaque + 24);
    uint64_t v21 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = *(void **)&v7->_os_unfair_lock_opaque;
    if (*(void *)(*(void *)&v7->_os_unfair_lock_opaque + 16) >= v21
      && (isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      uint64_t v25 = v24[4];
      if (v25)
      {
LABEL_11:
        BOOL v26 = __OFSUB__(v25, 1);
        uint64_t v27 = v25 - 1;
        if (!v26)
        {
LABEL_25:
          v24[v27 + 5] = v19;
          v24[4] = v27;
          uint64_t v48 = v24[3];
          BOOL v26 = __OFADD__(v48, 1);
          uint64_t v49 = v48 + 1;
          if (!v26)
          {
            v24[3] = v49;
            goto LABEL_27;
          }
          goto LABEL_35;
        }
        __break(1u);
LABEL_14:
        uint64_t v28 = qword_1E945BB48;
        swift_retain();
        if (v28 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_19EBF65B8();
        __swift_project_value_buffer(v29, (uint64_t)qword_1E946A500);
        swift_unknownObjectRetain_n();
        uint64_t v30 = sub_19EBF65A8();
        os_log_type_t v31 = sub_19EBF6D18();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v52 = v33;
          *(_DWORD *)uint64_t v32 = 136315138;
          id v34 = objc_msgSend(a1, sel_name);
          uint64_t v35 = sub_19EBF6798();
          unint64_t v37 = v36;

          uint64_t v54 = sub_19E649230(v35, v37, &v52);
          sub_19EBF6EC8();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          MEMORY[0x19F3C3580](v33, -1, -1);
          MEMORY[0x19F3C3580](v32, -1, -1);

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        swift_release();
        goto LABEL_31;
      }
    }
    else
    {
      sub_19E649C68(v21, 0, v23, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent, &qword_1E945CAD8, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent);
      char v24 = *(void **)&v7->_os_unfair_lock_opaque;
      uint64_t v25 = *(void *)(*(void *)&v7->_os_unfair_lock_opaque + 32);
      if (v25) {
        goto LABEL_11;
      }
    }
    uint64_t v47 = v24[2];
    BOOL v26 = __OFSUB__(v47, 1);
    uint64_t v27 = v47 - 1;
    if (!v26) {
      goto LABEL_25;
    }
    __break(1u);
  }
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    LOBYTE(v54) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E648954(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  uint64_t v4 = *(void *)(result + 24);
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = (void *)*a1;
  if (*(void *)(*a1 + 16) < v5 || (result & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v9 = v8[4];
  if (v9)
  {
    while (1)
    {
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (!v10) {
        break;
      }
      __break(1u);
LABEL_8:
      uint64_t result = sub_19E649C68(v5, 0, v7, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent, &qword_1E945CAD8, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent);
      uint64_t v8 = (void *)*a1;
      uint64_t v9 = *(void *)(*a1 + 32);
      if (!v9) {
        goto LABEL_9;
      }
    }
LABEL_10:
    v8[v11 + 5] = a2;
    v8[4] = v11;
    uint64_t v13 = v8[3];
    BOOL v10 = __OFADD__(v13, 1);
    uint64_t v14 = v13 + 1;
    if (!v10)
    {
      v8[3] = v14;
      return swift_retain();
    }
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v12 = v8[2];
  BOOL v10 = __OFSUB__(v12, 1);
  uint64_t v11 = v12 - 1;
  if (!v10) {
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_19E648A48()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t type metadata accessor for MetalDevice()
{
  return self;
}

void *sub_19E648ABC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_19EBF6D48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_19EBF6D38();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_19EBF65D8();
  MEMORY[0x1F4188790](v10 - 8);
  sub_19E64A9C0(0, (unint64_t *)&qword_1E945CAC0);
  sub_19EBF65C8();
  sub_19EBF6D28();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC68], v5);
  v2[2] = sub_19EBF6D58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D180);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  *(void *)(v11 + 16) = 0;
  v2[7] = v11;
  if (objc_msgSend(*(id *)(a1 + 24), sel_newSharedEvent))
  {
    v29[3] = &unk_1EF14E710;
    uint64_t v12 = swift_dynamicCastObjCProtocolConditional();
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      v2[4] = v12;
      swift_unknownObjectRetain_n();
      uint64_t v14 = (void *)sub_19EBF6788();
      objc_msgSend(v13, sel_setLabel_, v14);
      swift_unknownObjectRelease();

      v2[6] = v2[4];
      v2[3] = a1;
      uint64_t v15 = v2[2];
      id v16 = objc_allocWithZone(MEMORY[0x1E4F35308]);
      swift_unownedRetain();
      id v17 = objc_msgSend(v16, sel_initWithDispatchQueue_, v15);
      swift_release();
      swift_unknownObjectRelease();
      v2[5] = v17;
      return v2;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1E945BB48 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_19EBF65B8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1E946A500);
  swift_retain_n();
  uint64_t v19 = sub_19EBF65A8();
  os_log_type_t v20 = sub_19EBF6D18();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v30 = v22;
    v29[1] = v21 + 4;
    id v23 = objc_msgSend(*(id *)(a1 + 24), sel_name);
    v29[2] = v4;
    id v24 = v23;
    uint64_t v25 = sub_19EBF6798();
    unint64_t v27 = v26;

    v29[4] = sub_19E649230(v25, v27, &v30);
    sub_19EBF6EC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x19F3C3580](v22, -1, -1);
    MEMORY[0x19F3C3580](v21, -1, -1);
    swift_release();
  }
  else
  {

    swift_release_n();
  }

  swift_release();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t *sub_19E648FA8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    void *result = v4;
    type metadata accessor for MetalAsyncEvent();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_unownedRetain();
  }
  return result;
}

uint64_t sub_19E649014()
{
  swift_unownedRelease();
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t type metadata accessor for MetalDevice.SharedEvent()
{
  return self;
}

uint64_t sub_19E649090()
{
  return sub_19EBF74B8();
}

uint64_t sub_19E6490F4()
{
  return sub_19E649090();
}

uint64_t sub_19E649118()
{
  return sub_19EBF7488();
}

uint64_t sub_19E64916C()
{
  return sub_19EBF74B8();
}

BOOL sub_19E6491CC(uint64_t *a1, uint64_t *a2)
{
  return sub_19E64A954(*a1, *a2);
}

unint64_t sub_19E6491DC()
{
  unint64_t result = qword_1E945CAB8;
  if (!qword_1E945CAB8)
  {
    type metadata accessor for MetalDevice.SharedEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CAB8);
  }
  return result;
}

uint64_t sub_19E649230(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_19E649304(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_19E5E29B8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_19E5E29B8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_19E649304(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_19EBF6EF8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_19E6494C0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_19EBF7088();
  if (!v8)
  {
    sub_19EBF71E8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_19EBF7278();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_19E6494C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_19E649558(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_19E649738(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_19E649738(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_19E649558(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_19E6496D0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_19EBF6FF8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_19EBF71E8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_19EBF67E8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_19EBF7278();
    __break(1u);
LABEL_14:
    uint64_t result = sub_19EBF71E8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_19E6496D0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CAD0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  double v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_19E649738(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CAD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E649888(uint64_t a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CAE0);
    uint64_t v8 = swift_allocObject();
    long long v11 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1) {
      sub_19E64A478(v8 + 16, (char *)(v8 + 40), v3, (char *)(v2 + 40));
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    sub_19EBF64D8();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CAE0);
      uint64_t v8 = swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v10 = v9 - 40;
      if (v9 < 40) {
        uint64_t v10 = v9 - 33;
      }
      *(void *)(v8 + 16) = v10 >> 3;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_19E649E94(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CAE0);
      uint64_t v8 = swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 33;
      }
      uint64_t v14 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = v13 >> 3;
      *(void *)(v8 + 24) = v14;
      *(void *)(v8 + 32) = 0;
      if (v14 >= 1) {
        sub_19E649FC4(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_19E649A58(uint64_t a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC90);
    uint64_t v8 = swift_allocObject();
    long long v11 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1) {
      sub_19E64A5E0(v8 + 16, v8 + 40, v3, v2 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
    sub_19EBF64D8();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC90);
      uint64_t v8 = swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v10 = v9 - 40;
      if (v9 < 40) {
        uint64_t v10 = v9 - 33;
      }
      *(void *)(v8 + 16) = v10 >> 3;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_19E649E94(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC90);
      uint64_t v8 = swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 33;
      }
      uint64_t v14 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = v13 >> 3;
      *(void *)(v8 + 24) = v14;
      *(void *)(v8 + 32) = 0;
      if (v14 >= 1) {
        sub_19E64A13C(v8 + 16, v8 + 40, (void *)(v6 + 16), v6 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_19E649C30(uint64_t a1, uint64_t a2)
{
  return sub_19E649C68(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for BNNSDevice.SharedEvent, &qword_1E945CAF0, (void (*)(uint64_t))type metadata accessor for BNNSDevice.SharedEvent);
}

uint64_t sub_19E649C68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v10 = *v6;
  long long v11 = (uint64_t *)(*v6 + 16);
  uint64_t v12 = *v11;
  if (*v11 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v17 = swift_allocObject();
    long long v20 = *(_OWORD *)(v10 + 24);
    *(void *)(v17 + 16) = v12;
    *(_OWORD *)(v17 + 24) = v20;
    if ((uint64_t)v20 >= 1) {
      sub_19E64A7C4(v17 + 16, v17 + 40, v11, v10 + 40, a3, a6);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v6;
    a4(a3);
    sub_19EBF64D8();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v16 = *(void *)(v15 + 24);
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v17 = swift_allocObject();
      int64_t v18 = _swift_stdlib_malloc_size((const void *)v17);
      uint64_t v19 = v18 - 40;
      if (v18 < 40) {
        uint64_t v19 = v18 - 33;
      }
      *(void *)(v17 + 16) = v19 >> 3;
      *(void *)(v17 + 24) = v16;
      *(void *)(v17 + 32) = 0;
      if (v16 >= 1)
      {
        swift_retain();
        sub_19E649E94(v17 + 16, (char *)(v17 + 40), (void *)(v15 + 16), (char *)(v15 + 40));
        *(void *)(v15 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v17 = swift_allocObject();
      int64_t v21 = _swift_stdlib_malloc_size((const void *)v17);
      uint64_t v22 = v21 - 40;
      if (v21 < 40) {
        uint64_t v22 = v21 - 33;
      }
      uint64_t v23 = *(void *)(v15 + 24);
      *(void *)(v17 + 16) = v22 >> 3;
      *(void *)(v17 + 24) = v23;
      *(void *)(v17 + 32) = 0;
      if (v23 >= 1) {
        sub_19E64A2BC(v17 + 16, v17 + 40, (void *)(v15 + 16), v15 + 40, a3, a6);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v17;
  return result;
}

uint64_t sub_19E649E5C(uint64_t a1, uint64_t a2)
{
  return sub_19E649C68(a1, a2, 0, type metadata accessor for IOSurfaceRef, &qword_1E945CDA0, type metadata accessor for IOSurfaceRef);
}

void sub_19E649E94(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    uint64_t v14 = v10;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = &a4[8 * v4];
  if (v16 != __dst || &v16[8 * v9] <= __dst) {
    memmove(__dst, v16, 8 * v9);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v17 = &__dst[8 * v9];
  if (v17 != v14 || v17 >= &v14[8 * v15])
  {
    memmove(v17, v14, 8 * v15);
  }
}

void sub_19E649FC4(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!__src)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v11 = &__src[8 * v4];
  if (v11 < &__dst[8 * v9] && &v11[8 * v9] > __dst) {
    goto LABEL_29;
  }
  memcpy(__dst, v11, 8 * v9);
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      uint64_t v14 = &__dst[8 * v9];
      size_t v15 = 8 * v8;
      if (&v14[8 * v8] <= v10 || v14 >= &v10[v15])
      {
        memcpy(v14, v10, v15);
        return;
      }
LABEL_29:
      sub_19EBF7278();
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

uint64_t sub_19E64A13C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v11 = a4 + 8 * v4;
  if (v11 < a2 + 8 * v9 && v11 + 8 * v9 > a2) {
    goto LABEL_26;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      unint64_t v15 = a2 + 8 * v9;
      if (v15 + 8 * v8 <= v10 || v15 >= v10 + 8 * v8)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
        return swift_arrayInitWithCopy();
      }
LABEL_26:
      uint64_t result = sub_19EBF7278();
      __break(1u);
      return result;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_19E64A2BC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *a3 - v6;
  if (__OFSUB__(*a3, v6))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = a3[1];
  if (v7 < v9)
  {
    uint64_t v10 = v9 - v7;
    if (!__OFSUB__(v9, v7))
    {
      uint64_t v11 = *a3 - v6;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = a3[1];
LABEL_6:
  if (v11 < 1)
  {
    unint64_t v15 = a6;
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v13 = a4 + 8 * v6;
  if (v13 < a2 + 8 * v11 && v13 + 8 * v11 > a2) {
    goto LABEL_27;
  }
  unint64_t v15 = a6;
  a6(a5);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v7 < v9 && v10 >= 1)
  {
    if (v12)
    {
      unint64_t v18 = a2 + 8 * v11;
      if (v18 + 8 * v10 <= v12 || v18 >= v12 + 8 * v10)
      {
        v15(a5);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      uint64_t result = sub_19EBF7278();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19E64A44C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  return sub_19E64A7C4(a1, a2, a3, a4, a5, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent);
}

void sub_19E64A478(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!__src)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v11 = &__src[8 * v4];
  unint64_t v12 = &__dst[8 * v4];
  size_t v13 = 8 * v9;
  uint64_t v14 = &v12[8 * v9];
  unint64_t v15 = &v11[8 * v9];
  if (v11 < v14 && v12 < v15) {
    goto LABEL_30;
  }
  memcpy(v12, v11, v13);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v18 = 8 * v8;
      if (&__dst[8 * v8] <= v10 || &v10[v18] <= __dst)
      {
        memcpy(__dst, v10, v18);
        return;
      }
LABEL_30:
      sub_19EBF7278();
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

uint64_t sub_19E64A5E0(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v11 = a4 + 8 * v4;
  unint64_t v12 = a2 + 8 * v4;
  if (v11 < v12 + 8 * v9 && v12 < v11 + 8 * v9) {
    goto LABEL_27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 8 * v8 <= v10 || v10 + 8 * v8 <= a2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C9A0);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      uint64_t result = sub_19EBF7278();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19E64A764(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  return sub_19E64A7C4(a1, a2, a3, a4, 0, (void (*)(uint64_t))type metadata accessor for BNNSDevice.SharedEvent);
}

uint64_t sub_19E64A794(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  return sub_19E64A7C4(a1, a2, a3, a4, 0, type metadata accessor for IOSurfaceRef);
}

uint64_t sub_19E64A7C4(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *a3 - v6;
  if (__OFSUB__(*a3, v6))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = a3[1];
  if (v7 >= v9)
  {
    unint64_t v12 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = a3[1];
    if (v9 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v10 = v9 - v7;
  if (__OFSUB__(v9, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v11 = *a3 - v6;
  unint64_t v12 = a4;
  if (v7 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v13 = a4 + 8 * v6;
  unint64_t v14 = a2 + 8 * v6;
  if (v13 < v14 + 8 * v11 && v14 < v13 + 8 * v11) {
    goto LABEL_27;
  }
  a6(a5);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v7 < v9 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + 8 * v10 <= v12 || v12 + 8 * v10 <= a2)
      {
        a6(a5);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      uint64_t result = sub_19EBF7278();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

BOOL sub_19E64A954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(swift_unownedRetainStrong() + 16);
  swift_release();
  uint64_t v5 = *(void *)(swift_unownedRetainStrong() + 16);
  swift_release();
  return v4 == v5 && *(void *)(a1 + 48) == *(void *)(a2 + 48);
}

uint64_t sub_19E64A9C0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_19E64A9FC(uint64_t a1)
{
  unint64_t result = sub_19E64AA24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64AA24()
{
  unint64_t result = qword_1E945CB10;
  if (!qword_1E945CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB10);
  }
  return result;
}

unint64_t sub_19E64AA78(uint64_t a1)
{
  unint64_t result = sub_19E64AAA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64AAA0()
{
  unint64_t result = qword_1E945CD40;
  if (!qword_1E945CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD40);
  }
  return result;
}

unint64_t sub_19E64AAF4(uint64_t a1)
{
  unint64_t result = sub_19E64AB1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64AB1C()
{
  unint64_t result = qword_1E945CB18;
  if (!qword_1E945CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB18);
  }
  return result;
}

void *sub_19E64AB70(void *result, uint64_t a2, char a3)
{
  uint64_t v4 = result;
  if (!a3)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
LABEL_22:
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v14 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_12;
    }
    uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12)
    {
      if (v12 != 1)
      {
        unint64_t v13 = *(void **)(a2 + 40);
        id v7 = *(id *)(a2 + 32);
        id v14 = v13;
LABEL_12:
        uint64_t v9 = v14;
        uint64_t v10 = (void *)sub_19EBF6788();
        id v11 = objc_msgSend(v4, sel_logicalANDWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (a3 == 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v8 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_7;
    }
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      if (v5 != 1)
      {
        uint64_t v6 = *(void **)(a2 + 40);
        id v7 = *(id *)(a2 + 32);
        id v8 = v6;
LABEL_7:
        uint64_t v9 = v8;
        uint64_t v10 = (void *)sub_19EBF6788();
        id v11 = objc_msgSend(v4, sel_logicalORWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
LABEL_18:
        id v18 = v11;

        __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_19EC387F0;
        *(void *)(v19 + 32) = v18;
        uint64_t v20 = v19;
        sub_19EBF6908();
        return (void *)v20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_25:
    id v7 = (id)MEMORY[0x19F3BF970](0, a2);
    id v17 = (id)MEMORY[0x19F3BF970](1, a2);
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v15)
  {
    if (v15 != 1)
    {
      uint64_t v16 = *(void **)(a2 + 40);
      id v7 = *(id *)(a2 + 32);
      id v17 = v16;
LABEL_17:
      uint64_t v9 = v17;
      uint64_t v10 = (void *)sub_19EBF6788();
      id v11 = objc_msgSend(v4, sel_logicalXORWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
      goto LABEL_18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19E64ADAC(void *result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = result;
  unint64_t v6 = a2 & 0xC000000000000001;
  if ((a3 & 1) == 0)
  {
    if (v6)
    {
      id v7 = (id)MEMORY[0x19F3BF970](0);
      goto LABEL_5;
    }
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(a2 + 32);
LABEL_5:
      id v8 = v7;
      sub_19E636F58(a4);
      sub_19E5F47F0();
      uint64_t v9 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v5, sel_reductionAndWithTensor_axes_name_, v8, v9, 0);
LABEL_10:
      id v12 = v10;

      unint64_t v13 = (void *)sub_19EBF6788();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v5, sel_castTensor_toType_name_, v12, 2147483656, v13);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_19EC387F0;
      *(void *)(v15 + 32) = v14;
      uint64_t v16 = v15;
      sub_19EBF6908();

      return (void *)v16;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v6)
  {
LABEL_13:
    id v11 = (id)MEMORY[0x19F3BF970](0);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a2 + 32);
LABEL_9:
    id v8 = v11;
    sub_19E636F58(a4);
    sub_19E5F47F0();
    uint64_t v9 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v5, sel_reductionOrWithTensor_axes_name_, v8, v9, 0);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_19E64AF90(uint64_t a1)
{
  unint64_t result = sub_19E64AFB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64AFB8()
{
  unint64_t result = qword_1E945CD60;
  if (!qword_1E945CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD60);
  }
  return result;
}

uint64_t sub_19E64B00C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_37;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v11 = *(id *)(a2 + 32);
        goto LABEL_9;
      }
      __break(1u);
LABEL_39:
      id v12 = (id)MEMORY[0x19F3BF970](0);
      goto LABEL_13;
    case 2:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_39;
      }
      if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_41:
        id v13 = (id)MEMORY[0x19F3BF970](0);
        goto LABEL_17;
      }
      id v12 = *(id *)(a2 + 32);
LABEL_13:
      id v7 = v12;
      sub_19E636F58(a3);
      sub_19E5F47F0();
      id v8 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_19EBF6788();
      id v10 = objc_msgSend(a1, sel_meanOfTensor_axes_name_, v7, v8, v9);
      goto LABEL_22;
    case 3:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_41;
      }
      if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_43:
        id v14 = (id)MEMORY[0x19F3BF970](0);
        goto LABEL_21;
      }
      id v13 = *(id *)(a2 + 32);
LABEL_17:
      id v7 = v13;
      sub_19E636F58(a3);
      sub_19E5F47F0();
      id v8 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_19EBF6788();
      id v10 = objc_msgSend(a1, sel_reductionProductWithTensor_axes_name_, v7, v8, v9);
      goto LABEL_22;
    case 4:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_43;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v14 = *(id *)(a2 + 32);
LABEL_21:
        id v7 = v14;
        sub_19E636F58(a3);
        sub_19E5F47F0();
        id v8 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v9 = (void *)sub_19EBF6788();
        id v10 = objc_msgSend(a1, sel_reductionSumWithTensor_axes_name_, v7, v8, v9);
        goto LABEL_22;
      }
      __break(1u);
LABEL_45:
      id v16 = (id)MEMORY[0x19F3BF970](0);
      goto LABEL_26;
    case 5:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_45;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v16 = *(id *)(a2 + 32);
LABEL_26:
        uint64_t v9 = v16;
        if (*(void *)(a3 + 16))
        {
          uint64_t v17 = *(void *)(a3 + 32);
          id v8 = (void *)sub_19EBF6788();
          id v18 = objc_msgSend(a1, sel_reductionArgMaximumWithTensor_axis_name_, v9, v17, v8);
LABEL_33:
          id v15 = v18;
          goto LABEL_34;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_48:
      id v19 = (id)MEMORY[0x19F3BF970](0);
      goto LABEL_31;
    case 6:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_48;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v19 = *(id *)(a2 + 32);
LABEL_31:
        uint64_t v9 = v19;
        if (*(void *)(a3 + 16))
        {
          uint64_t v20 = *(void *)(a3 + 32);
          id v8 = (void *)sub_19EBF6788();
          id v18 = objc_msgSend(a1, sel_reductionArgMinimumWithTensor_axis_name_, v9, v20, v8);
          goto LABEL_33;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x19E64B4B0);
    default:
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x19F3BF970](0);
        goto LABEL_5;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v6 = *(id *)(a2 + 32);
LABEL_5:
        id v7 = v6;
        sub_19E636F58(a3);
        sub_19E5F47F0();
        id v8 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v9 = (void *)sub_19EBF6788();
        id v10 = objc_msgSend(a1, sel_reductionMaximumWithTensor_axes_name_, v7, v8, v9);
        goto LABEL_22;
      }
      __break(1u);
LABEL_37:
      id v11 = (id)MEMORY[0x19F3BF970](0);
LABEL_9:
      id v7 = v11;
      sub_19E636F58(a3);
      sub_19E5F47F0();
      id v8 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_19EBF6788();
      id v10 = objc_msgSend(a1, sel_reductionMinimumWithTensor_axes_name_, v7, v8, v9);
LABEL_22:
      id v15 = v10;

LABEL_34:
      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_19EC387F0;
      *(void *)(v21 + 32) = v15;
      uint64_t v23 = v21;
      sub_19EBF6908();
      return v23;
  }
}

unint64_t sub_19E64B4CC(uint64_t a1)
{
  unint64_t result = sub_19E64B4F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B4F4()
{
  unint64_t result = qword_1E945CD10;
  if (!qword_1E945CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD10);
  }
  return result;
}

unint64_t sub_19E64B548(uint64_t a1)
{
  unint64_t result = sub_19E64B570();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B570()
{
  unint64_t result = qword_1E945CB20;
  if (!qword_1E945CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB20);
  }
  return result;
}

unint64_t sub_19E64B5C4(uint64_t a1)
{
  unint64_t result = sub_19E64B5EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B5EC()
{
  unint64_t result = qword_1E945CD20;
  if (!qword_1E945CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD20);
  }
  return result;
}

unint64_t sub_19E64B640(uint64_t a1)
{
  unint64_t result = sub_19E64B668();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B668()
{
  unint64_t result = qword_1E945CB28;
  if (!qword_1E945CB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB28);
  }
  return result;
}

unint64_t sub_19E64B6BC(uint64_t a1)
{
  unint64_t result = sub_19E64B6E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B6E4()
{
  unint64_t result = qword_1E945CD30;
  if (!qword_1E945CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD30);
  }
  return result;
}

unint64_t sub_19E64B738(uint64_t a1)
{
  unint64_t result = sub_19E64B760();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B760()
{
  unint64_t result = qword_1E945CD50;
  if (!qword_1E945CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD50);
  }
  return result;
}

unint64_t sub_19E64B7B4(uint64_t a1)
{
  unint64_t result = sub_19E64B7DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B7DC()
{
  unint64_t result = qword_1E945CB30;
  if (!qword_1E945CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB30);
  }
  return result;
}

unint64_t sub_19E64B830(uint64_t a1)
{
  unint64_t result = sub_19E64B858();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64B858()
{
  unint64_t result = qword_1E945CB38;
  if (!qword_1E945CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CB38);
  }
  return result;
}

void *sub_19E64B8AC(void *result, uint64_t a2)
{
  unint64_t v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x19F3BF970](0);
    goto LABEL_4;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(a2 + 32);
LABEL_4:
    uint64_t v5 = v4;
    sub_19E636F58(v2[5]);
    sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
    id v6 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    sub_19E636F58(v2[6]);
    id v7 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    sub_19E636F58(v2[7]);
    id v8 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_19EBF6788();
    id v10 = objc_msgSend(v3, sel_sliceTensor_starts_ends_strides_name_, v5, v6, v7, v8, v9);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19EC387F0;
    *(void *)(v11 + 32) = v10;
    uint64_t v12 = v11;
    sub_19EBF6908();
    return (void *)v12;
  }
  __break(1u);
  return result;
}

void *sub_19E64BA2C(void *result, uint64_t a2)
{
  unint64_t v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x19F3BF970](0, a2);
    id v8 = (id)MEMORY[0x19F3BF970](1, a2);
    id v9 = (id)MEMORY[0x19F3BF970](2, a2);
    goto LABEL_6;
  }
  unint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 3)
  {
    uint64_t v5 = *(void **)(a2 + 40);
    id v6 = *(void **)(a2 + 48);
    id v7 = *(id *)(a2 + 32);
    id v8 = v5;
    id v9 = v6;
LABEL_6:
    id v10 = v9;
    uint64_t v11 = (void *)sub_19EBF6788();
    id v12 = objc_msgSend(v3, sel_selectWithPredicateTensor_truePredicateTensor_falsePredicateTensor_name_, v7, v8, v10, v11);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19EC387F0;
    *(void *)(v13 + 32) = v12;
    uint64_t v14 = v13;
    sub_19EBF6908();
    return (void *)v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_19E64BB7C(void *result, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  id v8 = result;
  if ((a4 & 1) == 0)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v16 = (id)MEMORY[0x19F3BF970](0, a2);
LABEL_6:
      id v9 = v16;
      id v10 = (void *)sub_19EBF6788();
      id v11 = objc_msgSend(v8, sel_splitTensor_numSplits_axis_name_, v9, a3, a5, v10);
LABEL_11:

      sub_19E64A9C0(0, &qword_1E945CB40);
      uint64_t v15 = sub_19EBF68E8();

      return (void *)v15;
    }
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v16 = *(id *)(a2 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_13;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    id v13 = (id)MEMORY[0x19F3BF970](0, a2);
    goto LABEL_10;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(void **)(a2 + 32);
    sub_19E61EF8C(a3, 1);
    id v13 = v12;
LABEL_10:
    uint64_t v14 = v13;
    sub_19E636F58(a3);
    sub_19E61EFA8(a3, 1);
    sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
    id v9 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    id v10 = (void *)sub_19EBF6788();
    id v11 = objc_msgSend(v8, sel_splitTensor_splitSizes_axis_name_, v14, v9, a5, v10);

    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_19E64BD54(uint64_t a1)
{
  unint64_t result = sub_19E64BD7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64BD7C()
{
  unint64_t result = qword_1E945CD70;
  if (!qword_1E945CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD70);
  }
  return result;
}

void *sub_19E64BDD0(void *result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x19F3BF970](0, a2);
    id v9 = (id)MEMORY[0x19F3BF970](1, a2);
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v7 = *(void **)(a2 + 40);
  id v8 = *(id *)(a2 + 32);
  id v9 = v7;
LABEL_5:
  id v10 = v9;
  if (*(unsigned char *)v3)
  {
    id v11 = v8;
    sub_19EBF6FE8();
    uint64_t v13 = *(void *)(v3 + 24);
    uint64_t v12 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    uint64_t v14 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v11, -1, -2, v14, v13, v12);
  }
  if (*(unsigned char *)(v3 + 1))
  {
    id v15 = v10;
    sub_19EBF6FE8();
    uint64_t v17 = *(void *)(v3 + 24);
    uint64_t v16 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    id v18 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v15, -1, -2, v18, v17, v16);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_19EC387F0;
  id v20 = v8;
  id v21 = v10;
  uint64_t v22 = (void *)sub_19EBF6788();
  id v23 = objc_msgSend(v5, sel_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_, v20, v21, v22);

  *(void *)(v19 + 32) = v23;
  sub_19EBF6908();

  return (void *)v19;
}

unint64_t sub_19E64C0A0(uint64_t a1)
{
  unint64_t result = sub_19E64C0C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64C0C8()
{
  unint64_t result = qword_1E945CB48[0];
  if (!qword_1E945CB48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E945CB48);
  }
  return result;
}

unint64_t sub_19E64C11C(uint64_t a1)
{
  unint64_t result = sub_19E64C144();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64C144()
{
  unint64_t result = qword_1E945CD90;
  if (!qword_1E945CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD90);
  }
  return result;
}

uint64_t sub_19E64C198(void *a1, uint64_t a2, char a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x19F3BF970](0);
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x19E64C354);
    }
    id v5 = *(id *)(a2 + 32);
  }
  uint64_t v6 = v5;
  switch(a3)
  {
    case 1:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_ceilWithTensor_name_;
      break;
    case 2:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_floorWithTensor_name_;
      break;
    case 3:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_negativeWithTensor_name_;
      break;
    case 4:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_roundWithTensor_name_;
      break;
    case 5:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_signWithTensor_name_;
      break;
    default:
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_absoluteWithTensor_name_;
      break;
  }
  id v9 = objc_msgSend(a1, *v8, v6, v7);

  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19EC387F0;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  sub_19EBF6908();

  return v12;
}

uint64_t sub_19E64C36C(void *a1, uint64_t a2, char a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x19F3BF970](0);
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x19E64C6CCLL);
    }
    id v5 = *(id *)(a2 + 32);
  }
  uint64_t v6 = v5;
  switch(a3)
  {
    case 1:
      sub_19E618750(1);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_acoshWithTensor_name_;
      break;
    case 2:
      sub_19E618750(2);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_asinWithTensor_name_;
      break;
    case 3:
      sub_19E618750(3);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_asinhWithTensor_name_;
      break;
    case 4:
      sub_19E618750(4);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_atanWithTensor_name_;
      break;
    case 5:
      sub_19E618750(5);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_atanhWithTensor_name_;
      break;
    case 6:
      sub_19E618750(6);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_cosWithTensor_name_;
      break;
    case 7:
      sub_19E618750(7);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_coshWithTensor_name_;
      break;
    case 8:
      sub_19E618750(8);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_exponentWithTensor_name_;
      break;
    case 9:
      sub_19E618750(9);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_exponentBase2WithTensor_name_;
      break;
    case 10:
      sub_19E618750(10);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_logarithmWithTensor_name_;
      break;
    case 11:
      sub_19E618750(11);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_reciprocalWithTensor_name_;
      break;
    case 12:
      sub_19E618750(12);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_reverseSquareRootWithTensor_name_;
      break;
    case 13:
      sub_19E618750(13);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_sinWithTensor_name_;
      break;
    case 14:
      sub_19E618750(14);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_sinhWithTensor_name_;
      break;
    case 15:
      sub_19E618750(15);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_squareRootWithTensor_name_;
      break;
    case 16:
      sub_19E618750(16);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_squareWithTensor_name_;
      break;
    case 17:
      sub_19E618750(17);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_tanWithTensor_name_;
      break;
    case 18:
      sub_19E618750(18);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_tanhWithTensor_name_;
      break;
    default:
      sub_19E618750(0);
      id v7 = (void *)sub_19EBF6788();
      id v8 = &selRef_acosWithTensor_name_;
      break;
  }
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a1, *v8, v6, v7);

  __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19EC387F0;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  sub_19EBF6908();

  return v12;
}

unint64_t sub_19E64C718(uint64_t a1)
{
  unint64_t result = sub_19E64C740();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19E64C740()
{
  unint64_t result = qword_1E945CCC0;
  if (!qword_1E945CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CCC0);
  }
  return result;
}

void *sub_19E64C794(void *result, uint64_t a2)
{
  unint64_t v4 = result;
  int v5 = *(unsigned __int8 *)(v2 + 40);
  if (v5 == 2)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v8 = (id)MEMORY[0x19F3BF970](0, a2);
      id v9 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
      if (v6 != 1)
      {
        id v7 = *(void **)(a2 + 40);
        id v8 = *(id *)(a2 + 32);
        id v9 = v7;
LABEL_6:
        uint64_t v10 = v9;
        id v11 = (void *)sub_19EBF6788();
        id v12 = objc_msgSend(v4, sel_resizeNearestWithTensor_sizeTensor_nearestRoundingMode_centerResult_alignCorners_name_, v8, v10, 3, 0, 0, v11, v17);
LABEL_11:
        id v15 = v12;

        __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_19EC387F0;
        *(void *)(v16 + 32) = v15;
        uint64_t v18 = v16;
        sub_19EBF6908();
        return (void *)v18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v13 = (id)MEMORY[0x19F3BF970](0, a2);
    goto LABEL_10;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(a2 + 32);
LABEL_10:
    uint64_t v10 = v13;
    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19EC394B0;
    *(void *)(v14 + 32) = sub_19EBF6B38();
    *(void *)(v14 + 40) = sub_19EBF6B38();
    sub_19EBF6908();
    sub_19E5F47F0();
    id v11 = (void *)sub_19EBF68D8();
    swift_bridgeObjectRelease();
    id v8 = (id)sub_19EBF6788();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v4, sel_resizeTensor_size_mode_centerResult_alignCorners_layout_name_, v10, v11, 1, 1, v5 & 1, 0, v8);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E64C9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = &type metadata for UnaryLogicalOperator;
  *(void *)(a3 + 32) = sub_19E64AB1C();
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v5, 0);
    uint64_t v7 = 0;
    uint64_t v8 = v40;
    uint64_t v39 = a2;
    uint64_t v9 = a1;
    do
    {
      unint64_t v10 = *(void *)(a1 + 8 * v7 + 32);
      switch(v10 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v11 = v10 & 0x3FFFFFFFFFFFFFFFLL;
          id v12 = (uint64_t *)(v11 + 24);
          id v13 = (char *)(v11 + 32);
          uint64_t v14 = (char *)(v11 + 33);
          break;
        case 2uLL:
          uint64_t v15 = v10 & 0x3FFFFFFFFFFFFFFFLL;
          id v12 = (uint64_t *)(v15 + 16);
          id v13 = (char *)(v15 + 24);
          uint64_t v14 = (char *)(v15 + 25);
          break;
        default:
          id v12 = (uint64_t *)(v10 + 40);
          id v13 = (char *)(v10 + 48);
          uint64_t v14 = (char *)(v10 + 49);
          break;
      }
      char v16 = *v14;
      char v17 = *v13;
      uint64_t v18 = *v12;
      unint64_t v19 = *(void *)(v40 + 16);
      unint64_t v20 = *(void *)(v40 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v20 >> 1) {
        sub_19E66F728(v20 > 1, v19 + 1, 1);
      }
      *(void *)(v40 + 16) = v19 + 1;
      uint64_t v21 = v40 + 16 * v19;
      *(void *)(v21 + 32) = v18;
      ++v7;
      *(unsigned char *)(v21 + 40) = v17;
      *(unsigned char *)(v21 + 41) = v16;
      a2 = v39;
      a1 = v9;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + 40) = v8;
  int64_t v22 = *(void *)(a2 + 16);
  if (v22)
  {
    sub_19E66F728(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v6;
    do
    {
      unint64_t v25 = *(void *)(a2 + 8 * v23 + 32);
      switch(v25 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v26 = v25 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v27 = (uint64_t *)(v26 + 24);
          uint64_t v28 = (char *)(v26 + 32);
          uint64_t v29 = (char *)(v26 + 33);
          break;
        case 2uLL:
          uint64_t v30 = v25 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v27 = (uint64_t *)(v30 + 16);
          uint64_t v28 = (char *)(v30 + 24);
          uint64_t v29 = (char *)(v30 + 25);
          break;
        default:
          unint64_t v27 = (uint64_t *)(v25 + 40);
          uint64_t v28 = (char *)(v25 + 48);
          uint64_t v29 = (char *)(v25 + 49);
          break;
      }
      char v31 = *v29;
      char v32 = *v28;
      uint64_t v33 = *v27;
      unint64_t v34 = *(void *)(v24 + 16);
      unint64_t v35 = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      if (v34 >= v35 >> 1) {
        sub_19E66F728(v35 > 1, v34 + 1, 1);
      }
      *(void *)(v24 + 16) = v34 + 1;
      uint64_t v36 = v24 + 16 * v34;
      *(void *)(v36 + 32) = v33;
      ++v23;
      *(unsigned char *)(v36 + 40) = v32;
      *(unsigned char *)(v36 + 41) = v31;
    }
    while (v22 != v23);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + 48) = v24;
  *(unsigned char *)(a3 + 56) = 1;
  return result;
}

uint64_t sub_19E64CCE0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a7;
  char v12 = a1 & 1;
  *(void *)(a7 + 24) = &type metadata for ReductionLogicalOperator;
  *(void *)(a7 + 32) = sub_19E64AA24();
  uint64_t v13 = swift_allocObject();
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  int64_t v14 = *(void *)(a5 + 16);
  if (v14)
  {
    uint64_t v46 = v11;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19E66F728(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v48;
    do
    {
      unint64_t v17 = *(void *)(a5 + 8 * v15 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v19 = (uint64_t *)(v18 + 24);
          unint64_t v20 = (char *)(v18 + 32);
          uint64_t v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v19 = (uint64_t *)(v22 + 16);
          unint64_t v20 = (char *)(v22 + 24);
          uint64_t v21 = (char *)(v22 + 25);
          break;
        default:
          unint64_t v19 = (uint64_t *)(v17 + 40);
          unint64_t v20 = (char *)(v17 + 48);
          uint64_t v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v48 + 16);
      unint64_t v27 = *(void *)(v48 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v48 + 16) = v26 + 1;
      uint64_t v28 = v48 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v15;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v11 = v46;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = a6;
  *(void *)(v11 + 40) = v16;
  int64_t v30 = *(void *)(a6 + 16);
  if (v30)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v30, 0);
    uint64_t v31 = 0;
    uint64_t v32 = v49;
    do
    {
      unint64_t v33 = *(void *)(v29 + 8 * v31 + 32);
      switch(v33 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v34 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v35 = (uint64_t *)(v34 + 24);
          uint64_t v36 = (char *)(v34 + 32);
          unint64_t v37 = (char *)(v34 + 33);
          break;
        case 2uLL:
          uint64_t v38 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v35 = (uint64_t *)(v38 + 16);
          uint64_t v36 = (char *)(v38 + 24);
          unint64_t v37 = (char *)(v38 + 25);
          break;
        default:
          unint64_t v35 = (uint64_t *)(v33 + 40);
          uint64_t v36 = (char *)(v33 + 48);
          unint64_t v37 = (char *)(v33 + 49);
          break;
      }
      char v39 = *v37;
      char v40 = *v36;
      uint64_t v41 = *v35;
      unint64_t v42 = *(void *)(v49 + 16);
      unint64_t v43 = *(void *)(v49 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v43 >> 1) {
        sub_19E66F728(v43 > 1, v42 + 1, 1);
      }
      *(void *)(v49 + 16) = v42 + 1;
      uint64_t v44 = v49 + 16 * v42;
      *(void *)(v44 + 32) = v41;
      ++v31;
      *(unsigned char *)(v44 + 40) = v40;
      *(unsigned char *)(v44 + 41) = v39;
      uint64_t v29 = a6;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v11 + 48) = v32;
  *(unsigned char *)(v11 + 56) = 0;
  return result;
}

uint64_t sub_19E64D018@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for CastOperator;
  a4[4] = sub_19E64B858();
  uint64_t v8 = swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v8;
  long long v9 = *a1;
  long long v46 = a1[1];
  long long v10 = v46;
  long long v47 = v9;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = v10;
  *(_WORD *)(v8 + 48) = *((_WORD *)a1 + 16);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v17 + 24);
          unint64_t v19 = (char *)(v17 + 32);
          unint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v21 + 16);
          unint64_t v19 = (char *)(v21 + 24);
          unint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          uint64_t v18 = (uint64_t *)(v16 + 40);
          unint64_t v19 = (char *)(v16 + 48);
          unint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      unint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v32 + 24);
          uint64_t v34 = (char *)(v32 + 32);
          unint64_t v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v36 + 16);
          uint64_t v34 = (char *)(v36 + 24);
          unint64_t v35 = (char *)(v36 + 25);
          break;
        default:
          unint64_t v33 = (uint64_t *)(v31 + 40);
          uint64_t v34 = (char *)(v31 + 48);
          unint64_t v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      unint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  sub_19E669028((uint64_t)&v47);
  uint64_t result = sub_19E669028((uint64_t)&v46);
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 1;
  return result;
}

uint64_t sub_19E64D358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = a7;
  *(void *)(a7 + 24) = &type metadata for SelectOperator;
  *(void *)(a7 + 32) = sub_19E64B668();
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)uint64_t v12 = v13;
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  int64_t v14 = *(void *)(a5 + 16);
  if (v14)
  {
    uint64_t v46 = v12;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19E66F728(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v48;
    do
    {
      unint64_t v17 = *(void *)(a5 + 8 * v15 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v19 = (uint64_t *)(v18 + 24);
          unint64_t v20 = (char *)(v18 + 32);
          uint64_t v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v19 = (uint64_t *)(v22 + 16);
          unint64_t v20 = (char *)(v22 + 24);
          uint64_t v21 = (char *)(v22 + 25);
          break;
        default:
          unint64_t v19 = (uint64_t *)(v17 + 40);
          unint64_t v20 = (char *)(v17 + 48);
          uint64_t v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v48 + 16);
      unint64_t v27 = *(void *)(v48 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v48 + 16) = v26 + 1;
      uint64_t v28 = v48 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v15;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v12 = v46;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = a6;
  *(void *)(v12 + 40) = v16;
  int64_t v30 = *(void *)(a6 + 16);
  if (v30)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v30, 0);
    uint64_t v31 = 0;
    uint64_t v32 = v49;
    do
    {
      unint64_t v33 = *(void *)(v29 + 8 * v31 + 32);
      switch(v33 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v34 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v35 = (uint64_t *)(v34 + 24);
          uint64_t v36 = (char *)(v34 + 32);
          char v37 = (char *)(v34 + 33);
          break;
        case 2uLL:
          uint64_t v38 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v35 = (uint64_t *)(v38 + 16);
          uint64_t v36 = (char *)(v38 + 24);
          char v37 = (char *)(v38 + 25);
          break;
        default:
          unint64_t v35 = (uint64_t *)(v33 + 40);
          uint64_t v36 = (char *)(v33 + 48);
          char v37 = (char *)(v33 + 49);
          break;
      }
      char v39 = *v37;
      char v40 = *v36;
      uint64_t v41 = *v35;
      unint64_t v42 = *(void *)(v49 + 16);
      unint64_t v43 = *(void *)(v49 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v43 >> 1) {
        sub_19E66F728(v43 > 1, v42 + 1, 1);
      }
      *(void *)(v49 + 16) = v42 + 1;
      uint64_t v44 = v49 + 16 * v42;
      *(void *)(v44 + 32) = v41;
      ++v31;
      *(unsigned char *)(v44 + 40) = v40;
      *(unsigned char *)(v44 + 41) = v39;
      uint64_t v29 = a6;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = v32;
  *(unsigned char *)(v12 + 56) = 1;
  return result;
}

uint64_t sub_19E64D694@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for ConcatOperator;
  a4[4] = sub_19E64B5EC();
  uint64_t v8 = swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v8;
  long long v9 = *a1;
  long long v46 = a1[1];
  long long v10 = v46;
  long long v47 = v9;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = v10;
  *(void *)(v8 + 48) = *((void *)a1 + 4);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v17 + 24);
          unint64_t v19 = (char *)(v17 + 32);
          unint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v21 + 16);
          unint64_t v19 = (char *)(v21 + 24);
          unint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          uint64_t v18 = (uint64_t *)(v16 + 40);
          unint64_t v19 = (char *)(v16 + 48);
          unint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      unint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v32 + 24);
          uint64_t v34 = (char *)(v32 + 32);
          unint64_t v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v36 + 16);
          uint64_t v34 = (char *)(v36 + 24);
          unint64_t v35 = (char *)(v36 + 25);
          break;
        default:
          unint64_t v33 = (uint64_t *)(v31 + 40);
          uint64_t v34 = (char *)(v31 + 48);
          unint64_t v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      unint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  sub_19E669028((uint64_t)&v47);
  uint64_t result = sub_19E669028((uint64_t)&v46);
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 1;
  return result;
}

uint64_t sub_19E64D9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for SplitOperator;
  a4[4] = sub_19E64B570();
  uint64_t v8 = swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v8;
  sub_19E61EE7C((uint64_t *)a1, (uint64_t)v48);
  long long v9 = *(_OWORD *)(a1 + 24);
  long long v46 = *(_OWORD *)(a1 + 40);
  long long v47 = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 64) = *(void *)(a1 + 48);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E6691C4((uint64_t)v48);
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v17 + 24);
          unint64_t v19 = (char *)(v17 + 32);
          unint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v21 + 16);
          unint64_t v19 = (char *)(v21 + 24);
          unint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          uint64_t v18 = (uint64_t *)(v16 + 40);
          unint64_t v19 = (char *)(v16 + 48);
          unint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      unint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E6691C4((uint64_t)v48);
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v32 + 24);
          uint64_t v34 = (char *)(v32 + 32);
          unint64_t v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v36 + 16);
          uint64_t v34 = (char *)(v36 + 24);
          unint64_t v35 = (char *)(v36 + 25);
          break;
        default:
          unint64_t v33 = (uint64_t *)(v31 + 40);
          uint64_t v34 = (char *)(v31 + 48);
          unint64_t v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      unint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  sub_19E6691F4((uint64_t)v48);
  sub_19E669028((uint64_t)&v47);
  uint64_t result = sub_19E669028((uint64_t)&v46);
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 1;
  return result;
}

uint64_t sub_19E64DD4C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 24) = &type metadata for ActivationOperator;
  *(void *)(a5 + 32) = sub_19E6474B4();
  *(void *)a5 = a1;
  uint64_t v43 = a5;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v10, 0);
    uint64_t v12 = 0;
    uint64_t v13 = v45;
    uint64_t v44 = a4;
    uint64_t v14 = a3;
    do
    {
      unint64_t v15 = *(void *)(a3 + 8 * v12 + 32);
      switch(v15 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v16 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v17 = (uint64_t *)(v16 + 24);
          uint64_t v18 = (char *)(v16 + 32);
          unint64_t v19 = (char *)(v16 + 33);
          break;
        case 2uLL:
          uint64_t v20 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v17 = (uint64_t *)(v20 + 16);
          uint64_t v18 = (char *)(v20 + 24);
          unint64_t v19 = (char *)(v20 + 25);
          break;
        default:
          uint64_t v17 = (uint64_t *)(v15 + 40);
          uint64_t v18 = (char *)(v15 + 48);
          unint64_t v19 = (char *)(v15 + 49);
          break;
      }
      char v21 = *v19;
      char v22 = *v18;
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v45 + 16);
      unint64_t v25 = *(void *)(v45 + 24);
      swift_bridgeObjectRetain();
      if (v24 >= v25 >> 1) {
        sub_19E66F728(v25 > 1, v24 + 1, 1);
      }
      *(void *)(v45 + 16) = v24 + 1;
      uint64_t v26 = v45 + 16 * v24;
      *(void *)(v26 + 32) = v23;
      ++v12;
      *(unsigned char *)(v26 + 40) = v22;
      *(unsigned char *)(v26 + 41) = v21;
      a4 = v44;
      a3 = v14;
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 40) = v13;
  int64_t v27 = *(void *)(a4 + 16);
  if (v27)
  {
    sub_19E66F728(0, v27, 0);
    uint64_t v28 = 0;
    uint64_t v29 = v11;
    do
    {
      unint64_t v30 = *(void *)(a4 + 8 * v28 + 32);
      switch(v30 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v31 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v31 + 24);
          unint64_t v33 = (char *)(v31 + 32);
          uint64_t v34 = (char *)(v31 + 33);
          break;
        case 2uLL:
          uint64_t v35 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v35 + 16);
          unint64_t v33 = (char *)(v35 + 24);
          uint64_t v34 = (char *)(v35 + 25);
          break;
        default:
          uint64_t v32 = (uint64_t *)(v30 + 40);
          unint64_t v33 = (char *)(v30 + 48);
          uint64_t v34 = (char *)(v30 + 49);
          break;
      }
      char v36 = *v34;
      char v37 = *v33;
      uint64_t v38 = *v32;
      unint64_t v39 = *(void *)(v29 + 16);
      unint64_t v40 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1) {
        sub_19E66F728(v40 > 1, v39 + 1, 1);
      }
      *(void *)(v29 + 16) = v39 + 1;
      uint64_t v41 = v29 + 16 * v39;
      *(void *)(v41 + 32) = v38;
      ++v28;
      *(unsigned char *)(v41 + 40) = v37;
      *(unsigned char *)(v41 + 41) = v36;
    }
    while (v27 != v28);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 48) = v29;
  *(unsigned char *)(v43 + 56) = 1;
  return result;
}

uint64_t sub_19E64E044@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, char a6@<W6>, uint64_t *a7@<X8>)
{
  a7[3] = a4;
  a7[4] = a5();
  uint64_t v11 = swift_allocObject();
  uint64_t v48 = a7;
  *a7 = v11;
  uint64_t v53 = *a1;
  long long v12 = *(_OWORD *)(a1 + 1);
  long long v51 = *(_OWORD *)(a1 + 3);
  long long v52 = v12;
  long long v13 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 32) = v13;
  *(void *)(v11 + 48) = a1[4];
  int64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    char v47 = a6;
    sub_19E5F63A4((uint64_t)&v53);
    sub_19E668FC4((uint64_t)&v52);
    sub_19E668FC4((uint64_t)&v51);
    sub_19E66F728(0, v14, 0);
    uint64_t v16 = 0;
    uint64_t v17 = v15;
    do
    {
      unint64_t v18 = *(void *)(a2 + 8 * v16 + 32);
      switch(v18 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v19 = v18 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v20 = (uint64_t *)(v19 + 24);
          char v21 = (char *)(v19 + 32);
          char v22 = (char *)(v19 + 33);
          break;
        case 2uLL:
          uint64_t v23 = v18 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v20 = (uint64_t *)(v23 + 16);
          char v21 = (char *)(v23 + 24);
          char v22 = (char *)(v23 + 25);
          break;
        default:
          uint64_t v20 = (uint64_t *)(v18 + 40);
          char v21 = (char *)(v18 + 48);
          char v22 = (char *)(v18 + 49);
          break;
      }
      char v24 = *v22;
      char v25 = *v21;
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v17 + 16);
      unint64_t v28 = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v27 >= v28 >> 1) {
        sub_19E66F728(v28 > 1, v27 + 1, 1);
      }
      *(void *)(v17 + 16) = v27 + 1;
      unint64_t v29 = v17 + 16 * v27;
      *(void *)(v29 + 32) = v26;
      ++v16;
      *(unsigned char *)(v29 + 40) = v25;
      *(unsigned char *)(v29 + 41) = v24;
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    a6 = v47;
  }
  else
  {
    sub_19E5F63A4((uint64_t)&v53);
    sub_19E668FC4((uint64_t)&v52);
    sub_19E668FC4((uint64_t)&v51);
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v30 = a3;
  v48[5] = v17;
  int64_t v31 = *(void *)(a3 + 16);
  if (v31)
  {
    uint64_t v50 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v31, 0);
    uint64_t v32 = 0;
    uint64_t v33 = v50;
    do
    {
      unint64_t v34 = *(void *)(v30 + 8 * v32 + 32);
      switch(v34 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v35 = v34 & 0x3FFFFFFFFFFFFFFFLL;
          char v36 = (uint64_t *)(v35 + 24);
          char v37 = (char *)(v35 + 32);
          uint64_t v38 = (char *)(v35 + 33);
          break;
        case 2uLL:
          uint64_t v39 = v34 & 0x3FFFFFFFFFFFFFFFLL;
          char v36 = (uint64_t *)(v39 + 16);
          char v37 = (char *)(v39 + 24);
          uint64_t v38 = (char *)(v39 + 25);
          break;
        default:
          char v36 = (uint64_t *)(v34 + 40);
          char v37 = (char *)(v34 + 48);
          uint64_t v38 = (char *)(v34 + 49);
          break;
      }
      char v40 = *v38;
      char v41 = *v37;
      uint64_t v42 = *v36;
      unint64_t v43 = *(void *)(v50 + 16);
      unint64_t v44 = *(void *)(v50 + 24);
      swift_bridgeObjectRetain();
      if (v43 >= v44 >> 1) {
        sub_19E66F728(v44 > 1, v43 + 1, 1);
      }
      *(void *)(v50 + 16) = v43 + 1;
      unint64_t v45 = v50 + 16 * v43;
      *(void *)(v45 + 32) = v42;
      ++v32;
      *(unsigned char *)(v45 + 40) = v41;
      *(unsigned char *)(v45 + 41) = v40;
      uint64_t v30 = a3;
    }
    while (v31 != v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  sub_19E5D8438((uint64_t)&v53);
  sub_19E669028((uint64_t)&v52);
  uint64_t result = sub_19E669028((uint64_t)&v51);
  v48[6] = v33;
  *((unsigned char *)v48 + 56) = a6;
  return result;
}

uint64_t sub_19E64E3A4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[3] = &type metadata for BandPartOperator;
  a4[4] = sub_19E646F38();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  unint64_t v45 = a4;
  *a4 = v8;
  long long v10 = *a1;
  long long v9 = a1[1];
  long long v47 = a1[2];
  long long v11 = v47;
  long long v48 = v9;
  v8[1] = v10;
  long long v8[2] = v9;
  v8[3] = v11;
  int64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    sub_19E668FC4((uint64_t)&v48);
    sub_19E668FC4((uint64_t)&v47);
    sub_19E66F728(0, v12, 0);
    uint64_t v14 = 0;
    uint64_t v15 = v13;
    uint64_t v46 = a3;
    uint64_t v16 = a2;
    do
    {
      unint64_t v17 = *(void *)(a2 + 8 * v14 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v19 = (uint64_t *)(v18 + 24);
          uint64_t v20 = (char *)(v18 + 32);
          char v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v19 = (uint64_t *)(v22 + 16);
          uint64_t v20 = (char *)(v22 + 24);
          char v21 = (char *)(v22 + 25);
          break;
        default:
          uint64_t v19 = (uint64_t *)(v17 + 40);
          uint64_t v20 = (char *)(v17 + 48);
          char v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v15 + 16);
      unint64_t v27 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v15 + 16) = v26 + 1;
      uint64_t v28 = v15 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v14;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
      a3 = v46;
      a2 = v16;
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v48);
    sub_19E668FC4((uint64_t)&v47);
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  v45[5] = v15;
  int64_t v29 = *(void *)(a3 + 16);
  if (v29)
  {
    sub_19E66F728(0, v29, 0);
    uint64_t v30 = 0;
    uint64_t v31 = v13;
    do
    {
      unint64_t v32 = *(void *)(a3 + 8 * v30 + 32);
      switch(v32 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v33 = v32 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v34 = (uint64_t *)(v33 + 24);
          uint64_t v35 = (char *)(v33 + 32);
          char v36 = (char *)(v33 + 33);
          break;
        case 2uLL:
          uint64_t v37 = v32 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v34 = (uint64_t *)(v37 + 16);
          uint64_t v35 = (char *)(v37 + 24);
          char v36 = (char *)(v37 + 25);
          break;
        default:
          unint64_t v34 = (uint64_t *)(v32 + 40);
          uint64_t v35 = (char *)(v32 + 48);
          char v36 = (char *)(v32 + 49);
          break;
      }
      char v38 = *v36;
      char v39 = *v35;
      uint64_t v40 = *v34;
      unint64_t v41 = *(void *)(v31 + 16);
      unint64_t v42 = *(void *)(v31 + 24);
      swift_bridgeObjectRetain();
      if (v41 >= v42 >> 1) {
        sub_19E66F728(v42 > 1, v41 + 1, 1);
      }
      *(void *)(v31 + 16) = v41 + 1;
      uint64_t v43 = v31 + 16 * v41;
      *(void *)(v43 + 32) = v40;
      ++v30;
      *(unsigned char *)(v43 + 40) = v39;
      *(unsigned char *)(v43 + 41) = v38;
    }
    while (v29 != v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  sub_19E669028((uint64_t)&v48);
  uint64_t result = sub_19E669028((uint64_t)&v47);
  v45[6] = v31;
  *((unsigned char *)v45 + 56) = 0;
  return result;
}

uint64_t sub_19E64E6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a7;
  char v12 = a3 & 1;
  *(void *)(a7 + 24) = &type metadata for CumulativeOperator;
  *(void *)(a7 + 32) = sub_19E646EBC();
  uint64_t v13 = swift_allocObject();
  *(void *)uint64_t v11 = v13;
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(unsigned char *)(v13 + 32) = v12;
  *(void *)(v13 + 40) = a4;
  int64_t v14 = *(void *)(a5 + 16);
  if (v14)
  {
    uint64_t v46 = v11;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19E66F728(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v48;
    do
    {
      unint64_t v17 = *(void *)(a5 + 8 * v15 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v19 = (uint64_t *)(v18 + 24);
          uint64_t v20 = (char *)(v18 + 32);
          char v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v19 = (uint64_t *)(v22 + 16);
          uint64_t v20 = (char *)(v22 + 24);
          char v21 = (char *)(v22 + 25);
          break;
        default:
          uint64_t v19 = (uint64_t *)(v17 + 40);
          uint64_t v20 = (char *)(v17 + 48);
          char v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v48 + 16);
      unint64_t v27 = *(void *)(v48 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v48 + 16) = v26 + 1;
      uint64_t v28 = v48 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v15;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v11 = v46;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v11 + 40) = v16;
  uint64_t v29 = a6;
  int64_t v30 = *(void *)(a6 + 16);
  if (v30)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v30, 0);
    uint64_t v31 = 0;
    uint64_t v32 = v49;
    do
    {
      unint64_t v33 = *(void *)(v29 + 8 * v31 + 32);
      switch(v33 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v34 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v35 = (uint64_t *)(v34 + 24);
          char v36 = (char *)(v34 + 32);
          uint64_t v37 = (char *)(v34 + 33);
          break;
        case 2uLL:
          uint64_t v38 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v35 = (uint64_t *)(v38 + 16);
          char v36 = (char *)(v38 + 24);
          uint64_t v37 = (char *)(v38 + 25);
          break;
        default:
          uint64_t v35 = (uint64_t *)(v33 + 40);
          char v36 = (char *)(v33 + 48);
          uint64_t v37 = (char *)(v33 + 49);
          break;
      }
      char v39 = *v37;
      char v40 = *v36;
      uint64_t v41 = *v35;
      unint64_t v42 = *(void *)(v49 + 16);
      unint64_t v43 = *(void *)(v49 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v43 >> 1) {
        sub_19E66F728(v43 > 1, v42 + 1, 1);
      }
      *(void *)(v49 + 16) = v42 + 1;
      uint64_t v44 = v49 + 16 * v42;
      *(void *)(v44 + 32) = v41;
      ++v31;
      *(unsigned char *)(v44 + 40) = v40;
      *(unsigned char *)(v44 + 41) = v39;
      uint64_t v29 = a6;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v11 + 48) = v32;
  *(unsigned char *)(v11 + 56) = 0;
  return result;
}

uint64_t sub_19E64EA00@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[3] = &type metadata for TopKOperator;
  a4[4] = sub_19E646E40();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v8;
  long long v9 = *a1;
  long long v46 = a1[1];
  long long v10 = v46;
  long long v47 = v9;
  v8[1] = v9;
  long long v8[2] = v10;
  v8[3] = a1[2];
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v17 + 24);
          uint64_t v19 = (char *)(v17 + 32);
          uint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v21 + 16);
          uint64_t v19 = (char *)(v21 + 24);
          uint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          uint64_t v18 = (uint64_t *)(v16 + 40);
          uint64_t v19 = (char *)(v16 + 48);
          uint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      uint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v32 + 24);
          uint64_t v34 = (char *)(v32 + 32);
          uint64_t v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v36 + 16);
          uint64_t v34 = (char *)(v36 + 24);
          uint64_t v35 = (char *)(v36 + 25);
          break;
        default:
          unint64_t v33 = (uint64_t *)(v31 + 40);
          uint64_t v34 = (char *)(v31 + 48);
          uint64_t v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      uint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  sub_19E669028((uint64_t)&v47);
  uint64_t result = sub_19E669028((uint64_t)&v46);
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 0;
  return result;
}

uint64_t sub_19E64ED3C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a4;
  *(void *)(a4 + 24) = &type metadata for PadOperator;
  *(void *)(a4 + 32) = sub_19E646DC4();
  uint64_t v7 = (_OWORD *)swift_allocObject();
  *(void *)uint64_t v6 = v7;
  long long v8 = a1[1];
  v7[1] = *a1;
  v7[2] = v8;
  v7[3] = a1[2];
  int64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v42 = (uint64_t)a1;
  if (v9)
  {
    uint64_t v41 = v6;
    sub_19E66905C((uint64_t)a1);
    sub_19E66F728(0, v9, 0);
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v12 = *(void *)(a2 + 8 * i + 32);
      switch(v12 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v13 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v13 + 24);
          uint64_t v15 = (char *)(v13 + 32);
          unint64_t v16 = (char *)(v13 + 33);
          break;
        case 2uLL:
          uint64_t v17 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v17 + 16);
          uint64_t v15 = (char *)(v17 + 24);
          unint64_t v16 = (char *)(v17 + 25);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          uint64_t v15 = (char *)(v12 + 48);
          unint64_t v16 = (char *)(v12 + 49);
          break;
      }
      char v18 = *v16;
      char v19 = *v15;
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v10 + 16);
      unint64_t v22 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1) {
        sub_19E66F728(v22 > 1, v21 + 1, 1);
      }
      *(void *)(v10 + 16) = v21 + 1;
      uint64_t v23 = v10 + 16 * v21;
      *(void *)(v23 + 32) = v20;
      *(unsigned char *)(v23 + 40) = v19;
      *(unsigned char *)(v23 + 41) = v18;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v41;
  }
  else
  {
    sub_19E66905C((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = a3;
  *(void *)(v6 + 40) = v10;
  int64_t v25 = *(void *)(a3 + 16);
  if (v25)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v25, 0);
    uint64_t v26 = 0;
    uint64_t v27 = v44;
    do
    {
      unint64_t v28 = *(void *)(v24 + 8 * v26 + 32);
      switch(v28 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v29 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v30 = (uint64_t *)(v29 + 24);
          unint64_t v31 = (char *)(v29 + 32);
          uint64_t v32 = (char *)(v29 + 33);
          break;
        case 2uLL:
          uint64_t v33 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v30 = (uint64_t *)(v33 + 16);
          unint64_t v31 = (char *)(v33 + 24);
          uint64_t v32 = (char *)(v33 + 25);
          break;
        default:
          uint64_t v30 = (uint64_t *)(v28 + 40);
          unint64_t v31 = (char *)(v28 + 48);
          uint64_t v32 = (char *)(v28 + 49);
          break;
      }
      char v34 = *v32;
      char v35 = *v31;
      uint64_t v36 = *v30;
      unint64_t v37 = *(void *)(v44 + 16);
      unint64_t v38 = *(void *)(v44 + 24);
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1) {
        sub_19E66F728(v38 > 1, v37 + 1, 1);
      }
      *(void *)(v44 + 16) = v37 + 1;
      uint64_t v39 = v44 + 16 * v37;
      *(void *)(v39 + 32) = v36;
      ++v26;
      *(unsigned char *)(v39 + 40) = v35;
      *(unsigned char *)(v39 + 41) = v34;
      uint64_t v24 = a3;
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_19E6690A8(v42);
  *(void *)(v6 + 48) = v27;
  *(unsigned char *)(v6 + 56) = 0;
  return result;
}

uint64_t sub_19E64F04C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[3] = &type metadata for ArgumentSortOperator;
  a4[4] = sub_19E646D48();
  long long v8 = (_OWORD *)swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v8;
  long long v9 = *a1;
  long long v46 = a1[1];
  long long v10 = v46;
  long long v47 = v9;
  v8[1] = v9;
  long long v8[2] = v10;
  *(_OWORD *)((char *)v8 + 41) = *(long long *)((char *)a1 + 25);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          char v18 = (uint64_t *)(v17 + 24);
          char v19 = (char *)(v17 + 32);
          uint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          char v18 = (uint64_t *)(v21 + 16);
          char v19 = (char *)(v21 + 24);
          uint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          char v18 = (uint64_t *)(v16 + 40);
          char v19 = (char *)(v16 + 48);
          uint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      uint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v33 = (uint64_t *)(v32 + 24);
          char v34 = (char *)(v32 + 32);
          char v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v33 = (uint64_t *)(v36 + 16);
          char v34 = (char *)(v36 + 24);
          char v35 = (char *)(v36 + 25);
          break;
        default:
          uint64_t v33 = (uint64_t *)(v31 + 40);
          char v34 = (char *)(v31 + 48);
          char v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      uint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  sub_19E669028((uint64_t)&v47);
  uint64_t result = sub_19E669028((uint64_t)&v46);
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 0;
  return result;
}

uint64_t sub_19E64F388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 24) = &type metadata for GatherOperator;
  *(void *)(a6 + 32) = sub_19E645734();
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  uint64_t v45 = a6;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  int64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v12, 0);
    uint64_t v14 = 0;
    uint64_t v15 = v47;
    uint64_t v46 = a5;
    uint64_t v16 = a4;
    do
    {
      unint64_t v17 = *(void *)(a4 + 8 * v14 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          char v19 = (uint64_t *)(v18 + 24);
          uint64_t v20 = (char *)(v18 + 32);
          uint64_t v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          char v19 = (uint64_t *)(v22 + 16);
          uint64_t v20 = (char *)(v22 + 24);
          uint64_t v21 = (char *)(v22 + 25);
          break;
        default:
          char v19 = (uint64_t *)(v17 + 40);
          uint64_t v20 = (char *)(v17 + 48);
          uint64_t v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v47 + 16);
      unint64_t v27 = *(void *)(v47 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v47 + 16) = v26 + 1;
      uint64_t v28 = v47 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v14;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
      a5 = v46;
      a4 = v16;
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v45 + 40) = v15;
  int64_t v29 = *(void *)(a5 + 16);
  if (v29)
  {
    sub_19E66F728(0, v29, 0);
    uint64_t v30 = 0;
    uint64_t v31 = v13;
    do
    {
      unint64_t v32 = *(void *)(a5 + 8 * v30 + 32);
      switch(v32 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v33 = v32 & 0x3FFFFFFFFFFFFFFFLL;
          char v34 = (uint64_t *)(v33 + 24);
          char v35 = (char *)(v33 + 32);
          uint64_t v36 = (char *)(v33 + 33);
          break;
        case 2uLL:
          uint64_t v37 = v32 & 0x3FFFFFFFFFFFFFFFLL;
          char v34 = (uint64_t *)(v37 + 16);
          char v35 = (char *)(v37 + 24);
          uint64_t v36 = (char *)(v37 + 25);
          break;
        default:
          char v34 = (uint64_t *)(v32 + 40);
          char v35 = (char *)(v32 + 48);
          uint64_t v36 = (char *)(v32 + 49);
          break;
      }
      char v38 = *v36;
      char v39 = *v35;
      uint64_t v40 = *v34;
      unint64_t v41 = *(void *)(v31 + 16);
      unint64_t v42 = *(void *)(v31 + 24);
      swift_bridgeObjectRetain();
      if (v41 >= v42 >> 1) {
        sub_19E66F728(v42 > 1, v41 + 1, 1);
      }
      *(void *)(v31 + 16) = v41 + 1;
      uint64_t v43 = v31 + 16 * v41;
      *(void *)(v43 + 32) = v40;
      ++v30;
      *(unsigned char *)(v43 + 40) = v39;
      *(unsigned char *)(v43 + 41) = v38;
    }
    while (v29 != v30);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v45 + 48) = v31;
  *(unsigned char *)(v45 + 56) = 0;
  return result;
}

uint64_t sub_19E64F680@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 24) = &type metadata for ScatterOperator;
  *(void *)(a5 + 32) = sub_19E6456B8();
  *(void *)a5 = a1;
  uint64_t v43 = a5;
  *(unsigned char *)(a5 + 8) = a2;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v10, 0);
    uint64_t v12 = 0;
    uint64_t v13 = v45;
    uint64_t v44 = a4;
    uint64_t v14 = a3;
    do
    {
      unint64_t v15 = *(void *)(a3 + 8 * v12 + 32);
      switch(v15 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v16 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v17 = (uint64_t *)(v16 + 24);
          uint64_t v18 = (char *)(v16 + 32);
          char v19 = (char *)(v16 + 33);
          break;
        case 2uLL:
          uint64_t v20 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v17 = (uint64_t *)(v20 + 16);
          uint64_t v18 = (char *)(v20 + 24);
          char v19 = (char *)(v20 + 25);
          break;
        default:
          unint64_t v17 = (uint64_t *)(v15 + 40);
          uint64_t v18 = (char *)(v15 + 48);
          char v19 = (char *)(v15 + 49);
          break;
      }
      char v21 = *v19;
      char v22 = *v18;
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v45 + 16);
      unint64_t v25 = *(void *)(v45 + 24);
      swift_bridgeObjectRetain();
      if (v24 >= v25 >> 1) {
        sub_19E66F728(v25 > 1, v24 + 1, 1);
      }
      *(void *)(v45 + 16) = v24 + 1;
      uint64_t v26 = v45 + 16 * v24;
      *(void *)(v26 + 32) = v23;
      ++v12;
      *(unsigned char *)(v26 + 40) = v22;
      *(unsigned char *)(v26 + 41) = v21;
      a4 = v44;
      a3 = v14;
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 40) = v13;
  int64_t v27 = *(void *)(a4 + 16);
  if (v27)
  {
    sub_19E66F728(0, v27, 0);
    uint64_t v28 = 0;
    uint64_t v29 = v11;
    do
    {
      unint64_t v30 = *(void *)(a4 + 8 * v28 + 32);
      switch(v30 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v31 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v32 = (uint64_t *)(v31 + 24);
          uint64_t v33 = (char *)(v31 + 32);
          char v34 = (char *)(v31 + 33);
          break;
        case 2uLL:
          uint64_t v35 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v32 = (uint64_t *)(v35 + 16);
          uint64_t v33 = (char *)(v35 + 24);
          char v34 = (char *)(v35 + 25);
          break;
        default:
          unint64_t v32 = (uint64_t *)(v30 + 40);
          uint64_t v33 = (char *)(v30 + 48);
          char v34 = (char *)(v30 + 49);
          break;
      }
      char v36 = *v34;
      char v37 = *v33;
      uint64_t v38 = *v32;
      unint64_t v39 = *(void *)(v29 + 16);
      unint64_t v40 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1) {
        sub_19E66F728(v40 > 1, v39 + 1, 1);
      }
      *(void *)(v29 + 16) = v39 + 1;
      uint64_t v41 = v29 + 16 * v39;
      *(void *)(v41 + 32) = v38;
      ++v28;
      *(unsigned char *)(v41 + 40) = v37;
      *(unsigned char *)(v41 + 41) = v36;
    }
    while (v27 != v28);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 48) = v29;
  *(unsigned char *)(v43 + 56) = 0;
  return result;
}

uint64_t sub_19E64F970@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a4;
  *(void *)(a4 + 24) = &type metadata for SliceOperator;
  *(void *)(a4 + 32) = sub_19E64B6E4();
  uint64_t v7 = (_OWORD *)swift_allocObject();
  *(void *)uint64_t v6 = v7;
  long long v8 = a1[1];
  v7[1] = *a1;
  v7[2] = v8;
  long long v9 = a1[3];
  v7[3] = a1[2];
  v7[4] = v9;
  int64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v43 = (uint64_t)a1;
  if (v10)
  {
    uint64_t v42 = v6;
    sub_19E669280((uint64_t)a1);
    sub_19E66F728(0, v10, 0);
    for (uint64_t i = 0; i != v10; ++i)
    {
      unint64_t v13 = *(void *)(a2 + 8 * i + 32);
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v15 = (uint64_t *)(v14 + 24);
          uint64_t v16 = (char *)(v14 + 32);
          unint64_t v17 = (char *)(v14 + 33);
          break;
        case 2uLL:
          uint64_t v18 = v13 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v15 = (uint64_t *)(v18 + 16);
          uint64_t v16 = (char *)(v18 + 24);
          unint64_t v17 = (char *)(v18 + 25);
          break;
        default:
          unint64_t v15 = (uint64_t *)(v13 + 40);
          uint64_t v16 = (char *)(v13 + 48);
          unint64_t v17 = (char *)(v13 + 49);
          break;
      }
      char v19 = *v17;
      char v20 = *v16;
      uint64_t v21 = *v15;
      unint64_t v22 = *(void *)(v11 + 16);
      unint64_t v23 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v22 >= v23 >> 1) {
        sub_19E66F728(v23 > 1, v22 + 1, 1);
      }
      *(void *)(v11 + 16) = v22 + 1;
      uint64_t v24 = v11 + 16 * v22;
      *(void *)(v24 + 32) = v21;
      *(unsigned char *)(v24 + 40) = v20;
      *(unsigned char *)(v24 + 41) = v19;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v42;
  }
  else
  {
    sub_19E669280((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = a3;
  *(void *)(v6 + 40) = v11;
  int64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v26, 0);
    uint64_t v27 = 0;
    uint64_t v28 = v45;
    do
    {
      unint64_t v29 = *(void *)(v25 + 8 * v27 + 32);
      switch(v29 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v30 = v29 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v31 = (uint64_t *)(v30 + 24);
          unint64_t v32 = (char *)(v30 + 32);
          uint64_t v33 = (char *)(v30 + 33);
          break;
        case 2uLL:
          uint64_t v34 = v29 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v31 = (uint64_t *)(v34 + 16);
          unint64_t v32 = (char *)(v34 + 24);
          uint64_t v33 = (char *)(v34 + 25);
          break;
        default:
          uint64_t v31 = (uint64_t *)(v29 + 40);
          unint64_t v32 = (char *)(v29 + 48);
          uint64_t v33 = (char *)(v29 + 49);
          break;
      }
      char v35 = *v33;
      char v36 = *v32;
      uint64_t v37 = *v31;
      unint64_t v38 = *(void *)(v45 + 16);
      unint64_t v39 = *(void *)(v45 + 24);
      swift_bridgeObjectRetain();
      if (v38 >= v39 >> 1) {
        sub_19E66F728(v39 > 1, v38 + 1, 1);
      }
      *(void *)(v45 + 16) = v38 + 1;
      uint64_t v40 = v45 + 16 * v38;
      *(void *)(v40 + 32) = v37;
      ++v27;
      *(unsigned char *)(v40 + 40) = v36;
      *(unsigned char *)(v40 + 41) = v35;
      uint64_t v25 = a3;
    }
    while (v26 != v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_19E625BAC(v43);
  *(void *)(v6 + 48) = v28;
  *(unsigned char *)(v6 + 56) = 1;
  return result;
}

uint64_t sub_19E64FC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = a7;
  *(void *)(a7 + 24) = &type metadata for ReductionOperator;
  *(void *)(a7 + 32) = sub_19E64AFB8();
  uint64_t v13 = swift_allocObject();
  *(void *)uint64_t v12 = v13;
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  *(unsigned char *)(v13 + 40) = a4;
  int64_t v14 = *(void *)(a5 + 16);
  if (v14)
  {
    uint64_t v46 = v12;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19E66F728(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v48;
    do
    {
      unint64_t v17 = *(void *)(a5 + 8 * v15 + 32);
      switch(v17 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v18 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          char v19 = (uint64_t *)(v18 + 24);
          char v20 = (char *)(v18 + 32);
          uint64_t v21 = (char *)(v18 + 33);
          break;
        case 2uLL:
          uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
          char v19 = (uint64_t *)(v22 + 16);
          char v20 = (char *)(v22 + 24);
          uint64_t v21 = (char *)(v22 + 25);
          break;
        default:
          char v19 = (uint64_t *)(v17 + 40);
          char v20 = (char *)(v17 + 48);
          uint64_t v21 = (char *)(v17 + 49);
          break;
      }
      char v23 = *v21;
      char v24 = *v20;
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v48 + 16);
      unint64_t v27 = *(void *)(v48 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_19E66F728(v27 > 1, v26 + 1, 1);
      }
      *(void *)(v48 + 16) = v26 + 1;
      uint64_t v28 = v48 + 16 * v26;
      *(void *)(v28 + 32) = v25;
      ++v15;
      *(unsigned char *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 41) = v23;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v12 = v46;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v12 + 40) = v16;
  uint64_t v29 = a6;
  int64_t v30 = *(void *)(a6 + 16);
  if (v30)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v30, 0);
    uint64_t v31 = 0;
    uint64_t v32 = v49;
    do
    {
      unint64_t v33 = *(void *)(v29 + 8 * v31 + 32);
      switch(v33 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v34 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          char v35 = (uint64_t *)(v34 + 24);
          char v36 = (char *)(v34 + 32);
          uint64_t v37 = (char *)(v34 + 33);
          break;
        case 2uLL:
          uint64_t v38 = v33 & 0x3FFFFFFFFFFFFFFFLL;
          char v35 = (uint64_t *)(v38 + 16);
          char v36 = (char *)(v38 + 24);
          uint64_t v37 = (char *)(v38 + 25);
          break;
        default:
          char v35 = (uint64_t *)(v33 + 40);
          char v36 = (char *)(v33 + 48);
          uint64_t v37 = (char *)(v33 + 49);
          break;
      }
      char v39 = *v37;
      char v40 = *v36;
      uint64_t v41 = *v35;
      unint64_t v42 = *(void *)(v49 + 16);
      unint64_t v43 = *(void *)(v49 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v43 >> 1) {
        sub_19E66F728(v43 > 1, v42 + 1, 1);
      }
      *(void *)(v49 + 16) = v42 + 1;
      uint64_t v44 = v49 + 16 * v42;
      *(void *)(v44 + 32) = v41;
      ++v31;
      *(unsigned char *)(v44 + 40) = v40;
      *(unsigned char *)(v44 + 41) = v39;
      uint64_t v29 = a6;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = v32;
  *(unsigned char *)(v12 + 56) = 1;
  return result;
}

uint64_t sub_19E64FFC8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5();
  uint64_t v43 = a6;
  *(unsigned char *)a6 = a1;
  int64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v10, 0);
    uint64_t v12 = 0;
    uint64_t v13 = v45;
    uint64_t v44 = a3;
    uint64_t v14 = a2;
    do
    {
      unint64_t v15 = *(void *)(a2 + 8 * v12 + 32);
      switch(v15 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v16 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v17 = (uint64_t *)(v16 + 24);
          uint64_t v18 = (char *)(v16 + 32);
          char v19 = (char *)(v16 + 33);
          break;
        case 2uLL:
          uint64_t v20 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v17 = (uint64_t *)(v20 + 16);
          uint64_t v18 = (char *)(v20 + 24);
          char v19 = (char *)(v20 + 25);
          break;
        default:
          unint64_t v17 = (uint64_t *)(v15 + 40);
          uint64_t v18 = (char *)(v15 + 48);
          char v19 = (char *)(v15 + 49);
          break;
      }
      char v21 = *v19;
      char v22 = *v18;
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v45 + 16);
      unint64_t v25 = *(void *)(v45 + 24);
      swift_bridgeObjectRetain();
      if (v24 >= v25 >> 1) {
        sub_19E66F728(v25 > 1, v24 + 1, 1);
      }
      *(void *)(v45 + 16) = v24 + 1;
      uint64_t v26 = v45 + 16 * v24;
      *(void *)(v26 + 32) = v23;
      ++v12;
      *(unsigned char *)(v26 + 40) = v22;
      *(unsigned char *)(v26 + 41) = v21;
      a3 = v44;
      a2 = v14;
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 40) = v13;
  int64_t v27 = *(void *)(a3 + 16);
  if (v27)
  {
    sub_19E66F728(0, v27, 0);
    uint64_t v28 = 0;
    uint64_t v29 = v11;
    do
    {
      unint64_t v30 = *(void *)(a3 + 8 * v28 + 32);
      switch(v30 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v31 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v31 + 24);
          unint64_t v33 = (char *)(v31 + 32);
          uint64_t v34 = (char *)(v31 + 33);
          break;
        case 2uLL:
          uint64_t v35 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v35 + 16);
          unint64_t v33 = (char *)(v35 + 24);
          uint64_t v34 = (char *)(v35 + 25);
          break;
        default:
          uint64_t v32 = (uint64_t *)(v30 + 40);
          unint64_t v33 = (char *)(v30 + 48);
          uint64_t v34 = (char *)(v30 + 49);
          break;
      }
      char v36 = *v34;
      char v37 = *v33;
      uint64_t v38 = *v32;
      unint64_t v39 = *(void *)(v29 + 16);
      unint64_t v40 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1) {
        sub_19E66F728(v40 > 1, v39 + 1, 1);
      }
      *(void *)(v29 + 16) = v39 + 1;
      uint64_t v41 = v29 + 16 * v39;
      *(void *)(v41 + 32) = v38;
      ++v28;
      *(unsigned char *)(v41 + 40) = v37;
      *(unsigned char *)(v41 + 41) = v36;
    }
    while (v27 != v28);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v43 + 48) = v29;
  *(unsigned char *)(v43 + 56) = 1;
  return result;
}

uint64_t sub_19E6502B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v46 = *(_OWORD *)(a1 + 24);
  long long v47 = v8;
  a4[3] = (uint64_t)&type metadata for MatrixMultiplicationOperator;
  a4[4] = sub_19E64BD7C();
  uint64_t v9 = swift_allocObject();
  uint64_t v44 = a4;
  *a4 = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v10;
  *(void *)(v9 + 48) = *(void *)(a1 + 32);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    sub_19E66F728(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v12;
    uint64_t v45 = a3;
    uint64_t v15 = a2;
    do
    {
      unint64_t v16 = *(void *)(a2 + 8 * v13 + 32);
      switch(v16 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v17 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v17 + 24);
          char v19 = (char *)(v17 + 32);
          uint64_t v20 = (char *)(v17 + 33);
          break;
        case 2uLL:
          uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v18 = (uint64_t *)(v21 + 16);
          char v19 = (char *)(v21 + 24);
          uint64_t v20 = (char *)(v21 + 25);
          break;
        default:
          uint64_t v18 = (uint64_t *)(v16 + 40);
          char v19 = (char *)(v16 + 48);
          uint64_t v20 = (char *)(v16 + 49);
          break;
      }
      char v22 = *v20;
      char v23 = *v19;
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v14 + 16);
      unint64_t v26 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1) {
        sub_19E66F728(v26 > 1, v25 + 1, 1);
      }
      *(void *)(v14 + 16) = v25 + 1;
      unint64_t v27 = v14 + 16 * v25;
      *(void *)(v27 + 32) = v24;
      ++v13;
      *(unsigned char *)(v27 + 40) = v23;
      *(unsigned char *)(v27 + 41) = v22;
      a3 = v45;
      a2 = v15;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_19E668FC4((uint64_t)&v47);
    sub_19E668FC4((uint64_t)&v46);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v44[5] = v14;
  int64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    sub_19E66F728(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v12;
    do
    {
      unint64_t v31 = *(void *)(a3 + 8 * v29 + 32);
      switch(v31 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v32 + 24);
          uint64_t v34 = (char *)(v32 + 32);
          uint64_t v35 = (char *)(v32 + 33);
          break;
        case 2uLL:
          uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v33 = (uint64_t *)(v36 + 16);
          uint64_t v34 = (char *)(v36 + 24);
          uint64_t v35 = (char *)(v36 + 25);
          break;
        default:
          unint64_t v33 = (uint64_t *)(v31 + 40);
          uint64_t v34 = (char *)(v31 + 48);
          uint64_t v35 = (char *)(v31 + 49);
          break;
      }
      char v37 = *v35;
      char v38 = *v34;
      uint64_t v39 = *v33;
      unint64_t v40 = *(void *)(v30 + 16);
      unint64_t v41 = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      if (v40 >= v41 >> 1) {
        sub_19E66F728(v41 > 1, v40 + 1, 1);
      }
      *(void *)(v30 + 16) = v40 + 1;
      unint64_t v42 = v30 + 16 * v40;
      *(void *)(v42 + 32) = v39;
      ++v29;
      *(unsigned char *)(v42 + 40) = v38;
      *(unsigned char *)(v42 + 41) = v37;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
    sub_19E669028((uint64_t)&v47);
    uint64_t result = sub_19E669028((uint64_t)&v46);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19E669028((uint64_t)&v47);
    uint64_t result = sub_19E669028((uint64_t)&v46);
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  v44[6] = v30;
  *((unsigned char *)v44 + 56) = 0;
  return result;
}

uint64_t sub_19E650604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for ConvolutionOperator;
  a4[4] = sub_19E647780();
  uint64_t v8 = swift_allocObject();
  uint64_t v43 = a4;
  *a4 = v8;
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 64) = *(void *)(a1 + 48);
  int64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v10, 0);
    uint64_t v12 = 0;
    uint64_t v13 = v45;
    uint64_t v44 = a3;
    uint64_t v14 = a2;
    do
    {
      unint64_t v15 = *(void *)(a2 + 8 * v12 + 32);
      switch(v15 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v16 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v17 = (uint64_t *)(v16 + 24);
          uint64_t v18 = (char *)(v16 + 32);
          char v19 = (char *)(v16 + 33);
          break;
        case 2uLL:
          uint64_t v20 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v17 = (uint64_t *)(v20 + 16);
          uint64_t v18 = (char *)(v20 + 24);
          char v19 = (char *)(v20 + 25);
          break;
        default:
          uint64_t v17 = (uint64_t *)(v15 + 40);
          uint64_t v18 = (char *)(v15 + 48);
          char v19 = (char *)(v15 + 49);
          break;
      }
      char v21 = *v19;
      char v22 = *v18;
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v45 + 16);
      unint64_t v25 = *(void *)(v45 + 24);
      swift_bridgeObjectRetain();
      if (v24 >= v25 >> 1) {
        sub_19E66F728(v25 > 1, v24 + 1, 1);
      }
      *(void *)(v45 + 16) = v24 + 1;
      unint64_t v26 = v45 + 16 * v24;
      *(void *)(v26 + 32) = v23;
      ++v12;
      *(unsigned char *)(v26 + 40) = v22;
      *(unsigned char *)(v26 + 41) = v21;
      a3 = v44;
      a2 = v14;
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  v43[5] = v13;
  int64_t v27 = *(void *)(a3 + 16);
  if (v27)
  {
    sub_19E66F728(0, v27, 0);
    uint64_t v28 = 0;
    uint64_t v29 = v11;
    do
    {
      unint64_t v30 = *(void *)(a3 + 8 * v28 + 32);
      switch(v30 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v31 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v31 + 24);
          unint64_t v33 = (char *)(v31 + 32);
          uint64_t v34 = (char *)(v31 + 33);
          break;
        case 2uLL:
          uint64_t v35 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v32 = (uint64_t *)(v35 + 16);
          unint64_t v33 = (char *)(v35 + 24);
          uint64_t v34 = (char *)(v35 + 25);
          break;
        default:
          uint64_t v32 = (uint64_t *)(v30 + 40);
          unint64_t v33 = (char *)(v30 + 48);
          uint64_t v34 = (char *)(v30 + 49);
          break;
      }
      char v36 = *v34;
      char v37 = *v33;
      uint64_t v38 = *v32;
      unint64_t v39 = *(void *)(v29 + 16);
      unint64_t v40 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1) {
        sub_19E66F728(v40 > 1, v39 + 1, 1);
      }
      *(void *)(v29 + 16) = v39 + 1;
      unint64_t v41 = v29 + 16 * v39;
      *(void *)(v41 + 32) = v38;
      ++v28;
      *(unsigned char *)(v41 + 40) = v37;
      *(unsigned char *)(v41 + 41) = v36;
    }
    while (v27 != v28);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  v43[6] = v29;
  *((unsigned char *)v43 + 56) = 0;
  return result;
}

uint64_t sub_19E650918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a4;
  *(void *)(a4 + 24) = &type metadata for StatelessRandomOperator;
  *(void *)(a4 + 32) = sub_19E645AB4();
  uint64_t v7 = swift_allocObject();
  *(void *)uint64_t v6 = v7;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v7 + 64) = *(void *)(a1 + 48);
  int64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v42 = a1;
  if (v9)
  {
    uint64_t v41 = v6;
    sub_19E6469E0(a1);
    sub_19E66F728(0, v9, 0);
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v12 = *(void *)(a2 + 8 * i + 32);
      switch(v12 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v13 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v13 + 24);
          unint64_t v15 = (char *)(v13 + 32);
          uint64_t v16 = (char *)(v13 + 33);
          break;
        case 2uLL:
          uint64_t v17 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v17 + 16);
          unint64_t v15 = (char *)(v17 + 24);
          uint64_t v16 = (char *)(v17 + 25);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          unint64_t v15 = (char *)(v12 + 48);
          uint64_t v16 = (char *)(v12 + 49);
          break;
      }
      char v18 = *v16;
      char v19 = *v15;
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v10 + 16);
      unint64_t v22 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1) {
        sub_19E66F728(v22 > 1, v21 + 1, 1);
      }
      *(void *)(v10 + 16) = v21 + 1;
      uint64_t v23 = v10 + 16 * v21;
      *(void *)(v23 + 32) = v20;
      *(unsigned char *)(v23 + 40) = v19;
      *(unsigned char *)(v23 + 41) = v18;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v41;
  }
  else
  {
    sub_19E6469E0(a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = a3;
  *(void *)(v6 + 40) = v10;
  int64_t v25 = *(void *)(a3 + 16);
  if (v25)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v25, 0);
    uint64_t v26 = 0;
    uint64_t v27 = v44;
    do
    {
      unint64_t v28 = *(void *)(v24 + 8 * v26 + 32);
      switch(v28 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v29 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v30 = (uint64_t *)(v29 + 24);
          uint64_t v31 = (char *)(v29 + 32);
          uint64_t v32 = (char *)(v29 + 33);
          break;
        case 2uLL:
          uint64_t v33 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v30 = (uint64_t *)(v33 + 16);
          uint64_t v31 = (char *)(v33 + 24);
          uint64_t v32 = (char *)(v33 + 25);
          break;
        default:
          unint64_t v30 = (uint64_t *)(v28 + 40);
          uint64_t v31 = (char *)(v28 + 48);
          uint64_t v32 = (char *)(v28 + 49);
          break;
      }
      char v34 = *v32;
      char v35 = *v31;
      uint64_t v36 = *v30;
      unint64_t v37 = *(void *)(v44 + 16);
      unint64_t v38 = *(void *)(v44 + 24);
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1) {
        sub_19E66F728(v38 > 1, v37 + 1, 1);
      }
      *(void *)(v44 + 16) = v37 + 1;
      uint64_t v39 = v44 + 16 * v37;
      *(void *)(v39 + 32) = v36;
      ++v26;
      *(unsigned char *)(v39 + 40) = v35;
      *(unsigned char *)(v39 + 41) = v34;
      uint64_t v24 = a3;
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
    uint64_t result = sub_19E6694F8(v42);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_19E6694F8(v42);
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v6 + 48) = v27;
  *(unsigned char *)(v6 + 56) = 1;
  return result;
}

uint64_t sub_19E650C3C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a4;
  *(void *)(a4 + 24) = &type metadata for ResizeOperator;
  *(void *)(a4 + 32) = sub_19E64C740();
  uint64_t v7 = (_OWORD *)swift_allocObject();
  *(void *)uint64_t v6 = v7;
  long long v8 = a1[1];
  v7[1] = *a1;
  v7[2] = v8;
  *(_OWORD *)((char *)v7 + 41) = *(_OWORD *)((char *)a1 + 25);
  int64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v42 = (uint64_t)a1;
  if (v9)
  {
    uint64_t v41 = v6;
    sub_19E668FC4((uint64_t)a1);
    sub_19E66F728(0, v9, 0);
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v12 = *(void *)(a2 + 8 * i + 32);
      switch(v12 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v13 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v13 + 24);
          unint64_t v15 = (char *)(v13 + 32);
          uint64_t v16 = (char *)(v13 + 33);
          break;
        case 2uLL:
          uint64_t v17 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v14 = (uint64_t *)(v17 + 16);
          unint64_t v15 = (char *)(v17 + 24);
          uint64_t v16 = (char *)(v17 + 25);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          unint64_t v15 = (char *)(v12 + 48);
          uint64_t v16 = (char *)(v12 + 49);
          break;
      }
      char v18 = *v16;
      char v19 = *v15;
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v10 + 16);
      unint64_t v22 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1) {
        sub_19E66F728(v22 > 1, v21 + 1, 1);
      }
      *(void *)(v10 + 16) = v21 + 1;
      uint64_t v23 = v10 + 16 * v21;
      *(void *)(v23 + 32) = v20;
      *(unsigned char *)(v23 + 40) = v19;
      *(unsigned char *)(v23 + 41) = v18;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v41;
  }
  else
  {
    sub_19E668FC4((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = a3;
  *(void *)(v6 + 40) = v10;
  int64_t v25 = *(void *)(a3 + 16);
  if (v25)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_19E66F728(0, v25, 0);
    uint64_t v26 = 0;
    uint64_t v27 = v44;
    do
    {
      unint64_t v28 = *(void *)(v24 + 8 * v26 + 32);
      switch(v28 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v29 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v30 = (uint64_t *)(v29 + 24);
          uint64_t v31 = (char *)(v29 + 32);
          uint64_t v32 = (char *)(v29 + 33);
          break;
        case 2uLL:
          uint64_t v33 = v28 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v30 = (uint64_t *)(v33 + 16);
          uint64_t v31 = (char *)(v33 + 24);
          uint64_t v32 = (char *)(v33 + 25);
          break;
        default:
          unint64_t v30 = (uint64_t *)(v28 + 40);
          uint64_t v31 = (char *)(v28 + 48);
          uint64_t v32 = (char *)(v28 + 49);
          break;
      }
      char v34 = *v32;
      char v35 = *v31;
      uint64_t v36 = *v30;
      unint64_t v37 = *(void *)(v44 + 16);
      unint64_t v38 = *(void *)(v44 + 24);
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1) {
        sub_19E66F728(v38 > 1, v37 + 1, 1);
      }
      *(void *)(v44 + 16) = v37 + 1;
      uint64_t v39 = v44 + 16 * v37;
      *(void *)(v39 + 32) = v36;
      ++v26;
      *(unsigned char *)(v39 + 40) = v35;
      *(unsigned char *)(v39 + 41) = v34;
      uint64_t v24 = a3;
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
    uint64_t result = sub_19E669028(v42);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_19E669028(v42);
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v6 + 48) = v27;
  *(unsigned char *)(v6 + 56) = 1;
  return result;
}

unint64_t sub_19E650F58(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE08);
  uint64_t v2 = sub_19EBF7268();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19E669588(v6, (uint64_t)&v15, &qword_1E945CE18);
    uint64_t v7 = v15;
    char v8 = v16;
    unint64_t result = sub_19E6628F8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = v3[6] + 16 * result;
    *(void *)uint64_t v11 = v7;
    *(unsigned char *)(v11 + 8) = v8;
    unint64_t result = sub_19E5FE188(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19E6510A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC20);
  uint64_t v2 = (void *)sub_19EBF7268();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19E669588(v4, (uint64_t)v14, &qword_1E945CE00);
    unint64_t result = sub_19E66298C((uint64_t)v14);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = (_OWORD *)(v2[6] + (result << 6));
    long long v8 = v14[0];
    long long v9 = v14[1];
    long long v10 = v15[0];
    *(_OWORD *)((char *)v7 + 41) = *(_OWORD *)((char *)v15 + 9);
    v7[1] = v9;
    v7[2] = v10;
    *uint64_t v7 = v8;
    *(void *)(v2[7] + 8 * result) = v16;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 72;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19E6511D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDA8);
  uint64_t v2 = sub_19EBF7268();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19E669588(v6, (uint64_t)&v13, &qword_1E945CDB0);
    uint64_t v7 = v13;
    unint64_t result = sub_19E662BB0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_19E5E29A8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_19E651308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v105 = objc_msgSend(self, sel_commandBufferFromCommandQueue_, *(void *)(a1 + 32));
  aBlock[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v108 = (void *)aBlock[0];
  uint64_t v110 = v6;
  uint64_t v101 = a4;
  uint64_t v103 = a2;
  if (v6)
  {
    uint64_t v7 = (unint64_t *)(a2 + 32);
    while (1)
    {
      unint64_t v9 = *v7++;
      unint64_t v8 = v9;
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v8 + 24);
          uint64_t v10 = *(void *)(v8 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10) == *(void *)(a1 + 16)
            || (long long v14 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 32),
                unint64_t v15 = v14(ObjectType, v10),
                (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(ObjectType, v10) >= v15))
          {
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v16 = v14(ObjectType, v10);
            long long v17 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v18 = v17(ObjectType, v10);
            if (v108[2])
            {
              unint64_t v19 = sub_19E6628BC(v18);
              if (v20)
              {
                uint64_t v107 = *(void *)(v108[7] + 16 * v19 + 8);
                uint64_t v21 = swift_getObjectType();
                unint64_t v102 = v16;
                v99 = *(uint64_t (**)(uint64_t, uint64_t))(v107 + 32);
                uint64_t v100 = v21;
                swift_unknownObjectRetain();
                unint64_t v22 = v99(v100, v107);
                swift_unknownObjectRelease();
                if (v102 < v22)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  goto LABEL_5;
                }
              }
            }
            uint64_t v23 = v17(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v113 = v108;
            unint64_t v26 = sub_19E6628BC(v23);
            uint64_t v27 = v108[2];
            BOOL v28 = (v25 & 1) == 0;
            uint64_t v29 = v27 + v28;
            if (__OFADD__(v27, v28)) {
              goto LABEL_88;
            }
            char v30 = v25;
            if (v108[3] >= v29)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_19E666758();
              }
            }
            else
            {
              sub_19E663F1C(v29, isUniquelyReferenced_nonNull_native);
              unint64_t v31 = sub_19E6628BC(v23);
              if ((v30 & 1) != (v32 & 1)) {
                goto LABEL_91;
              }
              unint64_t v26 = v31;
            }
            uint64_t v33 = v113;
            uint64_t v108 = v113;
            if (v30)
            {
              char v34 = (uint64_t *)(v113[7] + 16 * v26);
              swift_unknownObjectRelease();
              uint64_t *v34 = v11;
              v34[1] = v10;
            }
            else
            {
              v113[(v26 >> 6) + 8] |= 1 << v26;
              *(void *)(v33[6] + 8 * v26) = v23;
              char v35 = (uint64_t *)(v33[7] + 16 * v26);
              uint64_t *v35 = v11;
              v35[1] = v10;
              uint64_t v36 = v33[2];
              BOOL v37 = __OFADD__(v36, 1);
              uint64_t v38 = v36 + 1;
              if (v37) {
                goto LABEL_89;
              }
              v33[2] = v38;
            }
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_4:
          swift_release();
LABEL_5:
          if (!--v6) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
LABEL_29:
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_19E5DE088(v39);
  swift_bridgeObjectRelease_n();
  uint64_t v41 = *(void *)(v40 + 16);
  if (v41)
  {
    uint64_t v42 = sub_19E64A9C0(0, &qword_1E945CBE8);
    uint64_t v43 = (uint64_t *)(v40 + 40);
    do
    {
      uint64_t v44 = *v43;
      uint64_t v45 = swift_getObjectType();
      long long v46 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v44 + 64);
      swift_unknownObjectRetain();
      v46(v105, v42, v45, v44);
      swift_unknownObjectRelease();
      v43 += 2;
      --v41;
    }
    while (v41);
  }
  swift_release();
  aBlock[0] = MEMORY[0x1E4FBC868];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CBF0);
  sub_19EBF6658();
  uint64_t v47 = aBlock[0];
  if (v110)
  {
    unint64_t v48 = 0;
    uint64_t v49 = v106[3];
    while (1)
    {
      if ((v49 & 0xC000000000000001) != 0)
      {
        id v51 = (id)MEMORY[0x19F3BF970](v48, v49);
      }
      else
      {
        if (v48 >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_86;
        }
        id v51 = *(id *)(v49 + 8 * v48 + 32);
      }
      long long v52 = v51;
      unint64_t v53 = *(void *)(v103 + 32 + 8 * v48);
      swift_retain();
      id v54 = v52;
      id v55 = sub_19E6C2ABC(a1, 0, v53);
      if ((v47 & 0xC000000000000001) != 0)
      {
        if (v47 < 0) {
          uint64_t v56 = v47;
        }
        else {
          uint64_t v56 = v47 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v57 = sub_19EBF71C8();
        if (__OFADD__(v57, 1)) {
          goto LABEL_82;
        }
        uint64_t v47 = sub_19E667AE4(v56, v57 + 1);
      }
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      v113 = (void *)v47;
      unint64_t v60 = sub_19E662B60((uint64_t)v54);
      uint64_t v61 = *(void *)(v47 + 16);
      BOOL v62 = (v59 & 1) == 0;
      uint64_t v63 = v61 + v62;
      if (__OFADD__(v61, v62)) {
        break;
      }
      char v64 = v59;
      if (*(void *)(v47 + 24) >= v63)
      {
        if ((v58 & 1) == 0) {
          sub_19E666EA0(&qword_1E945CC18);
        }
      }
      else
      {
        sub_19E664A30(v63, v58, &qword_1E945CC18);
        unint64_t v65 = sub_19E662B60((uint64_t)v54);
        if ((v64 & 1) != (v66 & 1)) {
          goto LABEL_90;
        }
        unint64_t v60 = v65;
      }
      uint64_t v47 = (uint64_t)v113;
      if (v64)
      {
        uint64_t v50 = v113[7];

        *(void *)(v50 + 8 * v60) = v55;
      }
      else
      {
        v113[(v60 >> 6) + 8] |= 1 << v60;
        *(void *)(*(void *)(v47 + 48) + 8 * v60) = v54;
        *(void *)(*(void *)(v47 + 56) + 8 * v60) = v55;
        uint64_t v67 = *(void *)(v47 + 16);
        BOOL v37 = __OFADD__(v67, 1);
        uint64_t v68 = v67 + 1;
        if (v37) {
          goto LABEL_84;
        }
        *(void *)(v47 + 16) = v68;
        id v69 = v54;
      }
      ++v48;
      swift_release();

      swift_bridgeObjectRelease();
      if (v110 == v48) {
        goto LABEL_55;
      }
    }
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    sub_19E64A9C0(0, &qword_1E945CB40);
    sub_19EBF7408();
    __break(1u);
LABEL_91:
    sub_19EBF7408();
    __break(1u);
    JUMPOUT(0x19E651DACLL);
  }
LABEL_55:
  aBlock[0] = MEMORY[0x1E4FBC868];
  uint64_t v70 = *(void *)(a3 + 16);
  sub_19EBF6658();
  uint64_t v71 = aBlock[0];
  if (v70)
  {
    unint64_t v72 = 0;
    uint64_t v109 = v106[4];
    do
    {
      if ((v109 & 0xC000000000000001) != 0)
      {
        id v74 = (id)MEMORY[0x19F3BF970](v72, v109);
      }
      else
      {
        if (v72 >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_87;
        }
        id v74 = *(id *)(v109 + 8 * v72 + 32);
      }
      long long v75 = v74;
      unint64_t v76 = *(void *)(a3 + 32 + 8 * v72);
      swift_retain();
      id v77 = v75;
      id v78 = sub_19E6C2ABC(a1, 0, v76);
      if ((v71 & 0xC000000000000001) != 0)
      {
        if (v71 >= 0) {
          v71 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v79 = sub_19EBF71C8();
        if (__OFADD__(v79, 1)) {
          goto LABEL_83;
        }
        uint64_t v71 = sub_19E667AE4(v71, v79 + 1);
      }
      char v80 = swift_isUniquelyReferenced_nonNull_native();
      v113 = (void *)v71;
      unint64_t v82 = sub_19E662B60((uint64_t)v77);
      uint64_t v83 = *(void *)(v71 + 16);
      BOOL v84 = (v81 & 1) == 0;
      uint64_t v85 = v83 + v84;
      if (__OFADD__(v83, v84)) {
        goto LABEL_81;
      }
      char v86 = v81;
      if (*(void *)(v71 + 24) >= v85)
      {
        if ((v80 & 1) == 0) {
          sub_19E666EA0(&qword_1E945CC18);
        }
      }
      else
      {
        sub_19E664A30(v85, v80, &qword_1E945CC18);
        unint64_t v87 = sub_19E662B60((uint64_t)v77);
        if ((v86 & 1) != (v88 & 1)) {
          goto LABEL_90;
        }
        unint64_t v82 = v87;
      }
      uint64_t v71 = (uint64_t)v113;
      if (v86)
      {
        uint64_t v73 = v113[7];

        *(void *)(v73 + 8 * v82) = v78;
      }
      else
      {
        v113[(v82 >> 6) + 8] |= 1 << v82;
        *(void *)(*(void *)(v71 + 48) + 8 * v82) = v77;
        *(void *)(*(void *)(v71 + 56) + 8 * v82) = v78;
        uint64_t v89 = *(void *)(v71 + 16);
        BOOL v37 = __OFADD__(v89, 1);
        uint64_t v90 = v89 + 1;
        if (v37) {
          goto LABEL_85;
        }
        *(void *)(v71 + 16) = v90;
        id v91 = v77;
      }
      ++v72;
      swift_release();

      swift_bridgeObjectRelease();
    }
    while (v70 != v72);
  }
  uint64_t v92 = (void *)v106[2];
  sub_19E64A9C0(0, &qword_1E945CB40);
  sub_19E64A9C0(0, &qword_1E945CC00);
  sub_19E668EEC();
  uint64_t v93 = (void *)sub_19EBF6628();
  swift_bridgeObjectRelease();
  uint64_t v94 = (void *)sub_19EBF6628();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, sel_encodeToCommandBuffer_feeds_targetOperations_resultsDictionary_executionDescriptor_, v105, v93, 0, v94, v106[7]);

  uint64_t v95 = swift_allocObject();
  *(void *)(v95 + 16) = v103;
  *(void *)(v95 + 24) = a3;
  aBlock[4] = sub_19E668F94;
  aBlock[5] = v95;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E662630;
  aBlock[3] = &block_descriptor_4;
  uint64_t v96 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v105, sel_addCompletedHandler_, v96);
  _Block_release(v96);
  if (v101)
  {
    uint64_t v97 = *(void *)(v101 + 16);
    swift_unownedRetainStrong();
    uint64_t v98 = *(void *)(v97 + 32);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v105, sel_encodeSignalEvent_value_, v98, *(void *)(v101 + 24));
    swift_unknownObjectRelease();
  }
  objc_msgSend(v105, sel_commit);
}

uint64_t sub_19E651DBC()
{
  sub_19E645384(*(void *)(v0 + 16));
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for MetalComputeStream()
{
  return self;
}

void sub_19E651E34(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
}

void sub_19E651E5C(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(a1 + 32);
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v12 = *v10++;
      uint64_t v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63) {
        break;
      }
      uint64_t v11 = v13;
      if (!--v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v13 = 1;
LABEL_7:
    if (a2 > 0xAu) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = qword_19EC39598[(char)a2];
    }
    uint64_t v5 = v13 * v14;
    if ((unsigned __int128)(v13 * (__int128)v14) >> 64 == (v13 * v14) >> 63)
    {
      uint64_t v23 = a3;
      uint64_t v6 = (void (*)(char *, uint64_t))v3[2];
      uint64_t v3 = (void *)MEMORY[0x19F3C1A40]();
      if (qword_1E945BB80 == -1) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  swift_once();
LABEL_12:
  unint64_t v15 = (uint64_t *)((char *)off_1E945C990 + 16);
  uint64_t v16 = (os_unfair_lock_s *)((char *)off_1E945C990 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1E945C990 + 6);
  sub_19E640784(v15, v6, a1, a2 & 0x1FF, 0, 1, (uint64_t *)&v24);
  if (v4)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v16);
    long long v17 = v24;
    uint64_t v18 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v19 = v17;
    v23(v18, &v18[v5]);
    type metadata accessor for MetalBufferStorage();
    uint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 48) = a2;
    *(unsigned char *)(v20 + 49) = HIBYTE(a2) & 1;
    *(void *)(v20 + 32) = 0;
    *(void *)(v20 + 40) = a1;
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = 0;
    uint64_t v21 = qword_1E945BB38;
    swift_bridgeObjectRetain();
    if (v21 != -1) {
      swift_once();
    }
    if (byte_1E946A4F3) {
      unint64_t v22 = sub_19E658668;
    }
    else {
      unint64_t v22 = 0;
    }
    *(void *)(v20 + 56) = v22;
    *(void *)(v20 + 64) = 0;
  }
}

uint64_t sub_19E6520AC(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E656ED0(a1, a2, a3);
}

uint64_t sub_19E6520D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v6 + 40);
  unint64_t v8 = (os_unfair_lock_s *)(v7 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v9 = (uint64_t *)(v7 + 16);
  if (*(void *)(v10 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v11 = (void *)*v9;
    uint64_t v12 = *(void *)(*v9 + 24);
    BOOL v13 = __OFSUB__(v12, 1);
    uint64_t v14 = v12 - 1;
    if (v13)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v15 = v11[4] + v14;
    uint64_t v16 = v11[2];
    if (v15 < v16) {
      uint64_t v16 = 0;
    }
    long long v17 = (void *)v11[v15 - v16 + 5];
    v11[3] = v14;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v18 = swift_retain();
    long long v17 = sub_19E648ABC(v18);
  }
  os_unfair_lock_unlock(v8);
  if (v17)
  {
    uint64_t v19 = v17[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
    sub_19E6469A8((uint64_t *)(v19 + 16), &v24);
    os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
    uint64_t v20 = v24;
    swift_release();
    uint64_t v21 = sub_19E658F30(v20, a2, v3, a1);
    swift_release();
    os_unfair_lock_lock(v8);
    sub_19E6469C4(v9);
    os_unfair_lock_unlock(v8);
    swift_release_n();
    return v21;
  }
LABEL_12:
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v23 = objc_msgSend(*(id *)(v6 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E652424(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    BOOL v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65C71C(v22, a3, v4, a1, a2, (uint64_t)&type metadata for BinaryLogicalOperator, (uint64_t (*)(void))sub_19E64AAA0, (uint64_t (*)(id, uint64_t, void))sub_19E64AB70);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6527B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v15 = (uint64_t *)(v13 + 16);
  uint64_t v33 = a2;
  uint64_t v34 = v6;
  if (*(void *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v17 = (void *)*v15;
    uint64_t v18 = *(void *)(*v15 + 24);
    BOOL v19 = __OFSUB__(v18, 1);
    uint64_t v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v21 = v17[4] + v20;
    uint64_t v22 = v17[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (void *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v23 = sub_19E648ABC(v24);
  }
  uint64_t v25 = a3;
  uint64_t v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    uint64_t v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19E6469A8((uint64_t *)(v27 + 16), &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = v35;
    swift_release();
    uint64_t v29 = sub_19E6595E0(v28, a6, v34, a1 & 1, v33, v25, a4, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19E6469C4(v15);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E652B54(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *a1;
  long long v29 = a1[1];
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E659D34(v23, a3, v4, (uint64_t)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E652ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = *(void *)a1;
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v29 = *(_OWORD *)(a1 + 24);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E5F63A4((uint64_t)&v31);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65A598(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E5D8438((uint64_t)&v31);
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E653278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v15 = (uint64_t *)(v13 + 16);
  uint64_t v33 = v6;
  uint64_t v34 = a3;
  if (*(void *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v17 = (void *)*v15;
    uint64_t v18 = *(void *)(*v15 + 24);
    BOOL v19 = __OFSUB__(v18, 1);
    uint64_t v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v21 = v17[4] + v20;
    uint64_t v22 = v17[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (void *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v23 = sub_19E648ABC(v24);
  }
  uint64_t v25 = a6;
  uint64_t v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    uint64_t v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19E6469A8((uint64_t *)(v27 + 16), &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = v35;
    swift_release();
    uint64_t v29 = sub_19E65ACF0(v28, v25, v33, a1, a2, v34, a4, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19E6469C4(v15);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E653614(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *a1;
  long long v29 = a1[1];
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65B360(v23, a3, v4, (uint64_t)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E653998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_19E61EE7C((uint64_t *)a1, (uint64_t)v31);
  long long v8 = *(_OWORD *)(a1 + 24);
  long long v29 = *(_OWORD *)(a1 + 40);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E6691C4((uint64_t)v31);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65BA2C(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E6691F4((uint64_t)v31);
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E653D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = *(void *)a1;
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v29 = *(_OWORD *)(a1 + 24);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E5F63A4((uint64_t)&v31);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65CD7C(v23, a3, v4, a1, a2, (uint64_t)&type metadata for ReverseOperator, (uint64_t (*)(void))sub_19E64B4F4, &unk_1EF0DF4D8, (SEL *)&selRef_reverseTensor_axes_name_);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E5D8438((uint64_t)&v31);
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E654108(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v12 = (os_unfair_lock_s *)(v11 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  uint64_t v14 = *(void *)(v11 + 16);
  uint64_t v13 = (uint64_t *)(v11 + 16);
  uint64_t v29 = a1;
  if (*(void *)(v14 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v15 = (void *)*v13;
    uint64_t v16 = *(void *)(*v13 + 24);
    BOOL v17 = __OFSUB__(v16, 1);
    uint64_t v18 = v16 - 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v19 = v15[4] + v18;
    uint64_t v20 = v15[2];
    if (v19 < v20) {
      uint64_t v20 = 0;
    }
    uint64_t v21 = (void *)v15[v19 - v20 + 5];
    v15[3] = v18;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v22 = swift_retain();
    uint64_t v21 = sub_19E648ABC(v22);
  }
  uint64_t v23 = a3;
  os_unfair_lock_unlock(v12);
  if (v21)
  {
    uint64_t v24 = v21[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
    sub_19E6469A8((uint64_t *)(v24 + 16), &v30);
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
    uint64_t v25 = v30;
    swift_release();
    uint64_t v26 = sub_19E65C0C4(v25, a4, v5, v29, a2 & 1, v23);
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19E6469C4(v13);
    os_unfair_lock_unlock(v12);
    swift_release_n();
    return v26;
  }
LABEL_12:
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v28 = objc_msgSend(*(id *)(v10 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E654478(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65C71C(v22, a3, v4, a1, a2, (uint64_t)&type metadata for BinaryArithmeticOperator, (uint64_t (*)(void))sub_19E63FB08, (uint64_t (*)(id, uint64_t, void))sub_19E63FB5C);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E654804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = *(void *)a1;
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v29 = *(_OWORD *)(a1 + 24);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E5F63A4((uint64_t)&v31);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65CD7C(v23, a3, v4, a1, a2, (uint64_t)&type metadata for TileOperator, (uint64_t (*)(void))sub_19E646FB4, &unk_1EF0DF4B0, (SEL *)&selRef_tileTensor_withMultiplier_name_);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E5D8438((uint64_t)&v31);
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E654BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v29 = *(_OWORD *)(a1 + 32);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65D598(v23, a3, v4, (uint64_t *)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E654F58(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v15 = (uint64_t *)(v13 + 16);
  uint64_t v33 = a6;
  uint64_t v34 = v6;
  if (*(void *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v17 = (void *)*v15;
    uint64_t v18 = *(void *)(*v15 + 24);
    BOOL v19 = __OFSUB__(v18, 1);
    uint64_t v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v21 = v17[4] + v20;
    uint64_t v22 = v17[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (void *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v23 = sub_19E648ABC(v24);
  }
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    uint64_t v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19E6469A8((uint64_t *)(v27 + 16), &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = v35;
    swift_release();
    uint64_t v29 = sub_19E65DD48(v28, v33, v34, a1, a2, a3 & 1, v25, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19E6469C4(v15);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6552E8(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *a1;
  long long v29 = a1[1];
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65E494(v23, a3, v4, (uint64_t)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E65566C(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  sub_19E66905C((uint64_t)a1);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65EC38(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    sub_19E6690A8((uint64_t)a1);
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6559D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *(_OWORD *)a1;
  long long v29 = *((_OWORD *)a1 + 1);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E65F364(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E655D58(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65C71C(v22, a3, v4, a1, a2, (uint64_t)&type metadata for BinaryComparisonOperator, (uint64_t (*)(void))sub_19E669464, (uint64_t (*)(id, uint64_t, void))sub_19E669618);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6560E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = (os_unfair_lock_s *)(v13 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v15 = (uint64_t *)(v13 + 16);
  uint64_t v32 = a1;
  uint64_t v33 = a5;
  if (*(void *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v17 = (void *)*v15;
    uint64_t v18 = *(void *)(*v15 + 24);
    BOOL v19 = __OFSUB__(v18, 1);
    uint64_t v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v21 = v17[4] + v20;
    uint64_t v22 = v17[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (void *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v23 = sub_19E648ABC(v24);
  }
  uint64_t v25 = a2;
  uint64_t v26 = a4;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    uint64_t v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19E6469A8((uint64_t *)(v27 + 16), &v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = v34;
    swift_release();
    uint64_t v29 = sub_19E65FB14(v28, v33, v6, v32, v25, a3 & 1, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19E6469C4(v15);
    os_unfair_lock_unlock(v14);
    swift_release_n();
    return v29;
  }
LABEL_12:
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E65645C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v12 = (os_unfair_lock_s *)(v11 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  uint64_t v14 = *(void *)(v11 + 16);
  uint64_t v13 = (uint64_t *)(v11 + 16);
  uint64_t v29 = a1;
  if (*(void *)(v14 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    BOOL v15 = (void *)*v13;
    uint64_t v16 = *(void *)(*v13 + 24);
    BOOL v17 = __OFSUB__(v16, 1);
    uint64_t v18 = v16 - 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v19 = v15[4] + v18;
    uint64_t v20 = v15[2];
    if (v19 < v20) {
      uint64_t v20 = 0;
    }
    uint64_t v21 = (void *)v15[v19 - v20 + 5];
    v15[3] = v18;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v22 = swift_retain();
    uint64_t v21 = sub_19E648ABC(v22);
  }
  uint64_t v23 = a3;
  os_unfair_lock_unlock(v12);
  if (v21)
  {
    uint64_t v24 = v21[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
    sub_19E6469A8((uint64_t *)(v24 + 16), &v30);
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
    uint64_t v25 = v30;
    swift_release();
    uint64_t v26 = sub_19E660254(v25, a4, v5, v29, a2, v23);
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19E6469C4(v13);
    os_unfair_lock_unlock(v12);
    swift_release_n();
    return v26;
  }
LABEL_12:
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v28 = objc_msgSend(*(id *)(v10 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6567C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  sub_19E669280(a1);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E66097C(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    sub_19E625BAC(a1);
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E656B30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v15 = (uint64_t *)(v13 + 16);
  int v34 = a4;
  uint64_t v33 = v6;
  if (*(void *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v17 = (void *)*v15;
    uint64_t v18 = *(void *)(*v15 + 24);
    BOOL v19 = __OFSUB__(v18, 1);
    uint64_t v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v21 = v17[4] + v20;
    uint64_t v22 = v17[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (void *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v23 = sub_19E648ABC(v24);
  }
  uint64_t v25 = a6;
  uint64_t v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    uint64_t v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19E6469A8((uint64_t *)(v27 + 16), &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = v35;
    swift_release();
    uint64_t v29 = sub_19E660FF0(v28, v25, v33, a1, a2, a3, v34, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19E6469C4(v15);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E656ED0(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    BOOL v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    BOOL v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65C71C(v22, a3, v4, a1, a2, (uint64_t)&type metadata for UnaryArithmeticOperator, (uint64_t (*)(void))sub_19E64C144, (uint64_t (*)(id, uint64_t, void))sub_19E64C198);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E65725C(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    BOOL v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    BOOL v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E65C71C(v22, a3, v4, a1, a2, (uint64_t)&type metadata for UnaryFloatingPointArithmeticOperator, (uint64_t (*)(void))sub_19E64C0C8, (uint64_t (*)(id, uint64_t, void))sub_19E64C36C);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6575E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v29 = *(_OWORD *)(a1 + 24);
  long long v30 = v8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19E668FC4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  if (*(void *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v14 = (void *)*v12;
    uint64_t v15 = *(void *)(*v12 + 24);
    BOOL v16 = __OFSUB__(v15, 1);
    uint64_t v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v18 = v14[4] + v17;
    uint64_t v19 = v14[2];
    if (v18 < v19) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    uint64_t v20 = sub_19E648ABC(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    uint64_t v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19E6469A8((uint64_t *)(v22 + 16), &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    uint64_t v23 = v27;
    swift_release();
    uint64_t v24 = sub_19E661664(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19E6469C4(v12);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19E669028((uint64_t)&v30);
    sub_19E669028((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E657970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v26;
    swift_release();
    uint64_t v23 = sub_19E661DAC(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E657CCC(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E65725C(a1, a2, a3);
}

uint64_t sub_19E657CF0(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E654478(a1, a2, a3);
}

uint64_t sub_19E657D14(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E655D58(a1, a2, a3);
}

uint64_t sub_19E657D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6575E8(a1, a2, a3);
}

uint64_t sub_19E657D5C(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E652B54(a1, a2, a3);
}

uint64_t sub_19E657D80(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_19E656B30(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19E657DA4(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_19E657DC8(a1, a2, a3);
}

uint64_t sub_19E657DC8(void **a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E657FDCLL);
  }
  unint64_t v3 = *(void *)(a2 + 32);
  unint64_t v4 = v3 >> 62;
  switch(v3 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = (void **)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = (void **)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v8 = (void **)(v3 + 40);
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      break;
  }
  uint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = (uint64_t)*a1;
  BOOL v11 = sub_19E5DDC7C(*a1, v9);
  swift_retain();
  swift_bridgeObjectRelease();
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19EC36240;
    *(void *)(v12 + 32) = v3;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    if (v4 == 3)
    {
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19EC36240;
      *(void *)(inited + 32) = *(void *)(v7 + 16);
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_19E657DC8(a1, inited, a3);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_release_n();
    }
    else
    {
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_19EC36240;
      type metadata accessor for MLTensorStorageView();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v3;
      BOOL v15 = (char *)(v3 + 48);
      uint64_t v16 = (char *)(v3 + 49);
      uint64_t v17 = (char *)(v7 + 32);
      uint64_t v18 = (char *)(v7 + 33);
      if (v4 != 1)
      {
        uint64_t v17 = (char *)(v7 + 24);
        uint64_t v18 = (char *)(v7 + 25);
      }
      if (v4)
      {
        BOOL v15 = v17;
        uint64_t v16 = v18;
      }
      char v19 = *v16;
      char v20 = *v15;
      *(void *)(v14 + 24) = v10;
      *(unsigned char *)(v14 + 32) = v20;
      *(unsigned char *)(v14 + 33) = v19;
      *(void *)(v12 + 32) = v14 | 0xC000000000000000;
      swift_bridgeObjectRetain();
    }
  }
  return v12;
}

uint64_t sub_19E657FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E652ED8(a1, a2, a3);
}

uint64_t sub_19E658010(uint64_t a1, uint64_t a2)
{
  return sub_19E6520D0(a1, a2);
}

uint64_t sub_19E658034(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E652424(a1, a2, a3);
}

uint64_t sub_19E658058(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E6527B0(a1 & 1, a2, a3, a4, a5, a6);
}

uint64_t sub_19E658080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6567C8(a1, a2, a3);
}

uint64_t sub_19E6580A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E653278(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19E6580C8(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E653614(a1, a2, a3);
}

uint64_t sub_19E6580EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E653998(a1, a2, a3);
}

uint64_t sub_19E658110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E653D38(a1, a2, a3);
}

uint64_t sub_19E658134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E654804(a1, a2, a3);
}

uint64_t sub_19E658158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E654BD4(a1, a2, a3);
}

uint64_t sub_19E65817C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E654F58(a1, a2, a3 & 1, a4, a5, a6);
}

uint64_t sub_19E6581A4(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6552E8(a1, a2, a3);
}

uint64_t sub_19E6581C8(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return sub_19E65566C(v5, a2, a3);
}

uint64_t sub_19E658208(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6559D4(a1, a2, a3);
}

uint64_t sub_19E65822C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_19E6560E4(a1, a2, a3 & 1, a4, a5);
}

uint64_t sub_19E658254(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_19E65645C(a1, a2, a3, a4);
}

uint64_t sub_19E658278(long long *a1, void *a2, uint64_t a3)
{
  return sub_19E65829C(a1, a2, a3);
}

uint64_t sub_19E65829C(long long *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v7 = a1[1];
  long long v27 = *a1;
  v28[0] = v7;
  *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)a1 + 25);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v11 = (uint64_t *)(v9 + 16);
  if (*(void *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
    }
    uint64_t v13 = (void *)*v11;
    uint64_t v14 = *(void *)(*v11 + 24);
    BOOL v15 = __OFSUB__(v14, 1);
    uint64_t v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v17 = v13[4] + v16;
    uint64_t v18 = v13[2];
    if (v17 < v18) {
      uint64_t v18 = 0;
    }
    char v19 = (void *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    char v19 = sub_19E648ABC(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    uint64_t v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19E6469A8((uint64_t *)(v21 + 16), &v25);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v25;
    swift_release();
    sub_19E658708(v22, a3, v4, a2, (uint64_t *)&v27, (uint64_t)&v25);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19E6469C4(v11);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v25;
  }
LABEL_12:
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  id v24 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19EBF6798();

  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E65861C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19E654108(a1, a2 & 1, a3, a4);
}

uint64_t sub_19E658644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E657970(a1, a2, a3);
}

void sub_19E65866C(void *a1)
{
  if (qword_1E945BB80 != -1) {
    swift_once();
  }
  uint64_t v2 = (uint64_t *)((char *)off_1E945C990 + 16);
  uint64_t v3 = (os_unfair_lock_s *)((char *)off_1E945C990 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1E945C990 + 6);
  sub_19E6416C0(v2, a1);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_19E658708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v14 = v13;
  uint64_t v15 = v6;
  uint64_t v63 = a3;
  swift_release();
  uint64_t v62 = a1;
  swift_release();
  if (!*(void *)(a2 + 16))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    a4 = sub_19E607130(0, a4[2] + 1, 1, a4);
    goto LABEL_12;
  }
  unint64_t v60 = a5;
  uint64_t v61 = (void *)a6;
  uint64_t v16 = *(void *)(a2 + 32);
  int64_t v17 = *(void *)(v16 + 16);
  a5 = (uint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v64 = v14;
  if (v17)
  {
    uint64_t v65 = v6;
    char v66 = a4;
    v74[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19E66F8C8(0, v17, 0);
    uint64_t v18 = 0;
    a6 = v74[0];
    a5 = (uint64_t *)0xFFFFFFFF80000000;
    uint64_t v15 = 0x7FFFFFFFLL;
    while (1)
    {
      uint64_t v14 = *(void *)(v16 + 8 * v18 + 32);
      if (v14 < (uint64_t)0xFFFFFFFF80000000) {
        break;
      }
      if (v14 > 0x7FFFFFFF) {
        goto LABEL_38;
      }
      v74[0] = a6;
      unint64_t v20 = *(void *)(a6 + 16);
      unint64_t v19 = *(void *)(a6 + 24);
      a4 = (void *)(v20 + 1);
      if (v20 >= v19 >> 1)
      {
        sub_19E66F8C8(v19 > 1, v20 + 1, 1);
        a6 = v74[0];
      }
      ++v18;
      *(void *)(a6 + 16) = a4;
      *(_DWORD *)(a6 + 4 * v20 + 32) = v14;
      if (v17 == v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v65;
        a4 = v66;
        uint64_t v14 = v64;
        a5 = (uint64_t *)MEMORY[0x1E4FBC860];
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  a6 = MEMORY[0x1E4FBC860];
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_19EC36240;
  *(void *)(v21 + 32) = *(void *)(a6 + 16);
  sub_19E60B474(v21, a6, v74);
  a6 = v74[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_40;
  }
LABEL_12:
  unint64_t v23 = a4[2];
  unint64_t v22 = a4[3];
  if (v23 >= v22 >> 1) {
    a4 = sub_19E607130((void *)(v22 > 1), v23 + 1, 1, a4);
  }
  a4[2] = v23 + 1;
  a4[v23 + 4] = a6;
  sub_19E668FC4((uint64_t)v60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E650C3C(v60, (uint64_t)a4, v14, (uint64_t)v74);
  char v24 = *((unsigned char *)v60 + 16);
  long long v25 = *((_OWORD *)v60 + 1);
  long long v72 = *(_OWORD *)v60;
  v73[0] = v25;
  *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)((char *)v60 + 25);
  if (v24)
  {
    uint64_t v26 = v63;
    uint64_t v27 = *(void *)(v63 + 24);
    unint64_t v28 = (os_unfair_lock_s *)(*(void *)(v27 + 16) + 16);
    os_unfair_lock_lock(v28);
    uint64_t v29 = sub_19E662760(v27, (uint64_t)v74);
    if (v15)
    {
LABEL_43:
      os_unfair_lock_unlock(v28);
      __break(1u);
      JUMPOUT(0x19E658F00);
    }
    uint64_t v30 = v29;
    uint64_t v15 = 0;
    os_unfair_lock_unlock(v28);
    if (v30) {
      goto LABEL_36;
    }
  }
  uint64_t v65 = v15;
  char v66 = a4;
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
  uint64_t v32 = v77;
  v69[0] = a5;
  swift_bridgeObjectRetain();
  sub_19EBF70D8();
  uint64_t v33 = *(void *)(v32 + 16);
  swift_bridgeObjectRetain();
  uint64_t v59 = v32;
  unint64_t v60 = &v57;
  if (v33)
  {
    uint64_t v34 = 0;
    uint64_t v35 = v32 + 41;
    while (2)
    {
      uint64_t v39 = v34++;
      uint64_t v36 = 2147483656;
      switch(*(unsigned char *)(v35 - 1))
      {
        case 1:
          uint64_t v36 = 8;
          goto LABEL_20;
        case 2:
          uint64_t v36 = 16;
          goto LABEL_20;
        case 3:
          uint64_t v36 = 32;
          goto LABEL_20;
        case 4:
          uint64_t v36 = 64;
          goto LABEL_20;
        case 5:
          uint64_t v36 = 536870920;
          goto LABEL_20;
        case 6:
          uint64_t v36 = 536870928;
          goto LABEL_20;
        case 7:
          uint64_t v36 = 536870944;
          goto LABEL_20;
        case 8:
          uint64_t v36 = 536870976;
          goto LABEL_20;
        case 9:
          uint64_t v36 = 268435472;
          goto LABEL_20;
        case 0xA:
          uint64_t v36 = 268435488;
          goto LABEL_20;
        case 0xB:
          uint64_t v70 = 0;
          unint64_t v71 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19E6C1A2C(11);
          sub_19EBF67D8();
          swift_bridgeObjectRelease();
          sub_19EBF67D8();
          LOBYTE(v68) = 1;
          sub_19EBF7188();
          unint64_t v28 = (os_unfair_lock_s *)&v70;
          sub_19EBF67D8();
          int v58 = 0;
          uint64_t v57 = 116;
          sub_19EBF71F8();
          __break(1u);
          goto LABEL_42;
        default:
LABEL_20:
          uint64_t v70 = 0x5F7475706E69;
          unint64_t v71 = 0xE600000000000000;
          uint64_t v68 = v39;
          swift_bridgeObjectRetain();
          sub_19EBF7318();
          sub_19EBF67D8();
          swift_bridgeObjectRelease();
          BOOL v37 = (void *)sub_19EBF6788();
          swift_bridgeObjectRelease();
          id v38 = objc_msgSend(v31, sel_placeholderWithShape_dataType_name_, 0, v36, v37);
          swift_bridgeObjectRelease();

          sub_19EBF70A8();
          sub_19EBF7108();
          sub_19EBF7118();
          sub_19EBF70B8();
          v35 += 16;
          if (v33 != v34) {
            continue;
          }
          goto LABEL_31;
      }
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v40 = v69[0];
  swift_bridgeObjectRelease();
  unint64_t v28 = (os_unfair_lock_s *)&v72;
  uint64_t v41 = v65;
  uint64_t v42 = sub_19E64C794(v31, v40);
  if (v41)
  {
LABEL_42:
    swift_unexpectedError();
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v43 = (uint64_t)v42;
  uint64_t v44 = v75;
  uint64_t v45 = v76;
  __swift_project_boxed_opaque_existential_1(v74, v75);
  long long v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 24);
  id v47 = v31;
  uint64_t v70 = v46(v44, v45);
  unint64_t v71 = v48;
  sub_19EBF67D8();
  __swift_project_boxed_opaque_existential_1(v74, v75);
  sub_19EBF7318();
  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  uint64_t v49 = v70;
  uint64_t v50 = v71;
  type metadata accessor for MetalComputeStream.MPSGraphOperation();
  uint64_t v51 = swift_allocObject();
  sub_19E6624F0(v47, v40, v43, v49, v50);
  if (v73[0])
  {
    uint64_t v52 = v63;
    uint64_t v53 = *(void *)(v63 + 24);
    sub_19E62E830((uint64_t)v74, (uint64_t)&v70);
    id v54 = (os_unfair_lock_s *)(*(void *)(v53 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v54);
    sub_19E62E830((uint64_t)&v70, (uint64_t)v69);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *(void *)(v53 + 24);
    *(void *)(v53 + 24) = 0x8000000000000000;
    sub_19E667FE4(v51, (uint64_t)v69, isUniquelyReferenced_nonNull_native);
    *(void *)(v53 + 24) = v67;
    uint64_t v26 = v52;
    swift_bridgeObjectRelease();
    sub_19E62E868((uint64_t)v69);
    swift_endAccess();
    os_unfair_lock_unlock(v54);
    sub_19E62E868((uint64_t)&v70);

    swift_release();
    a4 = v66;
  }
  else
  {

    a4 = v66;
    uint64_t v26 = v63;
  }
  uint64_t v14 = v64;
LABEL_36:
  sub_19E651308(*(void *)(v26 + 16), (uint64_t)a4, v14, v62);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_19E62E868((uint64_t)v74);
  *uint64_t v61 = v14;
  return result;
}

uint64_t sub_19E658F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v10 = v9;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64C9FC(a4, v10, (uint64_t)v59);
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = (os_unfair_lock_s *)(*(void *)(v11 + 16) + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = sub_19E662760(v11, (uint64_t)v59);
  if (v4) {
    goto LABEL_25;
  }
  uint64_t v14 = v13;
  os_unfair_lock_unlock(v12);
  if (!v14)
  {
    uint64_t v46 = v11;
    uint64_t v47 = 0;
    uint64_t v48 = v10;
    uint64_t v49 = a3;
    uint64_t v50 = a1;
    uint64_t v51 = a4;
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v52 = &v44;
    uint64_t v16 = v62;
    v56[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v53 = v16;
    swift_bridgeObjectRetain();
    if (v17)
    {
      uint64_t v18 = 0;
      uint64_t v19 = v53 + 41;
      while (2)
      {
        uint64_t v23 = v18++;
        uint64_t v20 = 2147483656;
        switch(*(unsigned char *)(v19 - 1))
        {
          case 1:
            uint64_t v20 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v20 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v20 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v20 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v20 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v20 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v20 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v20 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v20 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v20 = 268435488;
            goto LABEL_6;
          case 0xB:
            goto LABEL_24;
          default:
LABEL_6:
            uint64_t v57 = 0x5F7475706E69;
            unint64_t v58 = 0xE600000000000000;
            uint64_t v55 = v23;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v21 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v22 = objc_msgSend(v15, sel_placeholderWithShape_dataType_name_, 0, v20, v21);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v19 += 16;
            if (v17 != v18) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v24 = v56[0];
    swift_bridgeObjectRelease();
    if ((v24 & 0xC000000000000001) != 0)
    {
      id v25 = (id)MEMORY[0x19F3BF970](0, v24);
      goto LABEL_20;
    }
    if (*(void *)(v24 + 16))
    {
      id v25 = *(id *)(v24 + 32);
LABEL_20:
      uint64_t v26 = v25;
      uint64_t v27 = (void *)sub_19EBF6788();
      id v28 = objc_msgSend(v15, sel_notWithTensor_name_, v26, v27);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_19EC387F0;
      *(void *)(v29 + 32) = v28;
      uint64_t v57 = v29;
      sub_19EBF6908();
      uint64_t v30 = v57;
      uint64_t v31 = v60;
      uint64_t v32 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 24);
      id v34 = v15;
      uint64_t v57 = v33(v31, v32);
      unint64_t v58 = v35;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v59, v60);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v36 = v57;
      uint64_t v37 = v58;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v38 = swift_allocObject();
      sub_19E6624F0(v34, v24, v30, v36, v37);
      sub_19E62E830((uint64_t)v59, (uint64_t)&v57);
      uint64_t v39 = v46;
      uint64_t v40 = (os_unfair_lock_s *)(*(void *)(v46 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v40);
      sub_19E62E830((uint64_t)&v57, (uint64_t)v56);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = *(void *)(v39 + 24);
      *(void *)(v39 + 24) = 0x8000000000000000;
      sub_19E667FE4(v38, (uint64_t)v56, isUniquelyReferenced_nonNull_native);
      *(void *)(v39 + 24) = v54;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v56);
      swift_endAccess();
      os_unfair_lock_unlock(v40);
      sub_19E62E868((uint64_t)&v57);

      swift_release();
      a1 = v50;
      a4 = v51;
      uint64_t v10 = v48;
      a3 = v49;
      goto LABEL_21;
    }
    __break(1u);
LABEL_24:
    uint64_t v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v12 = v43;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v55) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v45 = 0;
    uint64_t v44 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_25:
    os_unfair_lock_unlock(v12);
    __break(1u);
    JUMPOUT(0x19E6595B0);
  }
LABEL_21:
  sub_19E651308(*(void *)(a3 + 16), a4, v10, a1);
  swift_release();
  sub_19E62E868((uint64_t)v59);
  return v10;
}

uint64_t sub_19E6595E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v16 = a4 & 1;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = a5;
  sub_19E64CCE0(v16, a5, a6, a7, a8, v18, (uint64_t)v74);
  char v73 = v16;
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v64 = v19;
  uint64_t v21 = sub_19E662760(v19, (uint64_t)v74);
  if (v8)
  {
LABEL_27:
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v22 = v21;
  uint64_t v23 = 0;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    uint64_t v59 = v18;
    uint64_t v60 = a3;
    uint64_t v61 = a1;
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v25 = v77;
    v70[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    if (v26)
    {
      uint64_t v57 = &v54;
      uint64_t v58 = a8;
      uint64_t v62 = 0;
      uint64_t v27 = 0;
      uint64_t v56 = v25;
      uint64_t v66 = v25 + 32;
      while (2)
      {
        uint64_t v31 = v24;
        uint64_t v32 = v27;
        uint64_t v33 = (uint64_t *)(v66 + 16 * v27);
        uint64_t v34 = *v33;
        uint64_t v35 = *((unsigned __int8 *)v33 + 8);
        int v65 = *((unsigned __int8 *)v33 + 9);
        uint64_t v36 = *(void *)(v34 + 16);
        if (v36)
        {
          uint64_t v71 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v37 = v34 + 32;
          do
          {
            v37 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v36;
          }
          while (v36);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v27 = v32 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v38 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v28 = 2147483656;
        switch(v35)
        {
          case 1:
            uint64_t v28 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v28 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v28 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v28 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v28 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v28 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v28 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v28 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v28 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v28 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v69) = 1;
            sub_19EBF7188();
            uint64_t v20 = (os_unfair_lock_s *)&v71;
            sub_19EBF67D8();
            int v55 = 0;
            uint64_t v54 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_27;
          default:
LABEL_6:
            uint64_t v71 = 0x5F7475706E69;
            unint64_t v72 = 0xE600000000000000;
            uint64_t v69 = v32;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v29 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v24 = v31;
            id v30 = objc_msgSend(v31, sel_placeholderWithShape_dataType_name_, v38, v28, v29);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v27 != v67) {
              continue;
            }
            char v16 = v73;
            a8 = v58;
            uint64_t v23 = v62;
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = v70[0];
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_19E64ADAC(v24, v39, v16, v63);
    uint64_t v62 = v23;
    if (!v23)
    {
      uint64_t v41 = (uint64_t)v40;
      uint64_t v42 = v75;
      uint64_t v43 = v76;
      __swift_project_boxed_opaque_existential_1(v74, v75);
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 24);
      id v45 = v24;
      uint64_t v71 = v44(v42, v43);
      unint64_t v72 = v46;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v74, v75);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v47 = v71;
      uint64_t v48 = v72;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v49 = swift_allocObject();
      sub_19E6624F0(v45, v39, v41, v47, v48);
      sub_19E62E830((uint64_t)v74, (uint64_t)&v71);
      uint64_t v50 = v64;
      uint64_t v51 = (os_unfair_lock_s *)(*(void *)(v64 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v51);
      sub_19E62E830((uint64_t)&v71, (uint64_t)v70);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v68 = *(void *)(v50 + 24);
      *(void *)(v50 + 24) = 0x8000000000000000;
      sub_19E667FE4(v49, (uint64_t)v70, isUniquelyReferenced_nonNull_native);
      *(void *)(v50 + 24) = v68;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v70);
      swift_endAccess();
      os_unfair_lock_unlock(v51);
      sub_19E62E868((uint64_t)&v71);

      swift_release();
      a3 = v60;
      a1 = v61;
      uint64_t v18 = v59;
      goto LABEL_25;
    }
LABEL_28:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E659D04);
  }
LABEL_25:
  sub_19E651308(*(void *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19E62E868((uint64_t)v74);
  return v18;
}

uint64_t sub_19E659D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *(_OWORD *)a4;
  long long v73 = *(_OWORD *)(a4 + 16);
  long long v74 = v13;
  sub_19E668FC4((uint64_t)&v74);
  sub_19E668FC4((uint64_t)&v73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64D018((long long *)a4, a5, v12, v69);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v60 = *(void *)(a4 + 24);
  uint64_t v61 = v14;
  uint64_t v59 = *(unsigned __int8 *)(a4 + 32);
  char v68 = *(unsigned char *)(a4 + 33);
  uint64_t v15 = *(void *)(a3 + 24);
  char v16 = (os_unfair_lock_s *)(*(void *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  uint64_t v62 = v15;
  uint64_t v17 = sub_19E662760(v15, (uint64_t)v69);
  if (v5) {
    goto LABEL_38;
  }
  uint64_t v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    uint64_t v54 = 0;
    uint64_t v55 = v12;
    uint64_t v56 = a3;
    uint64_t v57 = a1;
    uint64_t v58 = a5;
    uint64_t v19 = 2147483656;
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v21 = v72;
    v65[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v22 = *(void *)(v21 + 16);
    swift_bridgeObjectRetain();
    if (v22)
    {
      uint64_t v52 = v21;
      uint64_t v53 = &v50;
      uint64_t v23 = 0;
      uint64_t v24 = v21 + 41;
      while (2)
      {
        uint64_t v28 = v23++;
        uint64_t v25 = 2147483656;
        switch(*(unsigned char *)(v24 - 1))
        {
          case 1:
            uint64_t v25 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v25 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v25 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v25 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v25 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v25 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v25 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v25 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v25 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v25 = 268435488;
            goto LABEL_6;
          case 0xB:
            goto LABEL_36;
          default:
LABEL_6:
            uint64_t v66 = 0x5F7475706E69;
            unint64_t v67 = 0xE600000000000000;
            uint64_t v64 = v28;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v26 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v27 = objc_msgSend(v20, sel_placeholderWithShape_dataType_name_, 0, v25, v26);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v24 += 16;
            if (v22 != v23) {
              continue;
            }
            uint64_t v19 = 2147483656;
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = v65[0];
    swift_bridgeObjectRelease();
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v30 = (id)MEMORY[0x19F3BF970](0, v29);
    }
    else
    {
      if (!*(void *)(v29 + 16))
      {
        __break(1u);
LABEL_36:
        uint64_t v66 = 0;
        unint64_t v67 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_19EBF6FE8();
        sub_19EBF67D8();
        sub_19E6C1A2C(11);
        char v16 = v48;
        sub_19EBF67D8();
        swift_bridgeObjectRelease();
        sub_19EBF67D8();
        LOBYTE(v64) = 1;
        while (1)
        {
          sub_19EBF7188();
          sub_19EBF67D8();
          int v51 = 0;
          uint64_t v50 = 116;
          sub_19EBF71F8();
          __break(1u);
LABEL_38:
          os_unfair_lock_unlock(v16);
          __break(1u);
LABEL_39:
          uint64_t v66 = 0;
          unint64_t v67 = 0xE000000000000000;
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19E6C1A2C(11);
          char v16 = v49;
          sub_19EBF67D8();
          swift_bridgeObjectRelease();
          sub_19EBF67D8();
          LOBYTE(v65[0]) = 1;
        }
      }
      id v30 = *(id *)(v29 + 32);
    }
    uint64_t v31 = v30;
    switch(v59)
    {
      case 1:
        uint64_t v19 = 8;
        goto LABEL_32;
      case 2:
        uint64_t v19 = 16;
        goto LABEL_32;
      case 3:
        uint64_t v19 = 32;
        goto LABEL_32;
      case 4:
        uint64_t v19 = 64;
        goto LABEL_32;
      case 5:
        uint64_t v19 = 536870920;
        goto LABEL_32;
      case 6:
        uint64_t v19 = 536870928;
        goto LABEL_32;
      case 7:
        uint64_t v19 = 536870944;
        goto LABEL_32;
      case 8:
        uint64_t v19 = 536870976;
        goto LABEL_32;
      case 9:
        uint64_t v19 = 268435472;
        goto LABEL_32;
      case 10:
        uint64_t v19 = 268435488;
        goto LABEL_32;
      case 11:
        goto LABEL_39;
      default:
LABEL_32:
        uint64_t v32 = (void *)sub_19EBF6788();
        id v33 = objc_msgSend(v20, sel_castTensor_toType_name_, v31, v19, v32);

        __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_19EC387F0;
        *(void *)(v34 + 32) = v33;
        uint64_t v66 = v34;
        sub_19EBF6908();
        uint64_t v35 = v66;
        uint64_t v36 = v70;
        uint64_t v37 = v71;
        __swift_project_boxed_opaque_existential_1(v69, v70);
        uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
        id v39 = v20;
        uint64_t v66 = v38(v36, v37);
        unint64_t v67 = v40;
        sub_19EBF67D8();
        __swift_project_boxed_opaque_existential_1(v69, v70);
        sub_19EBF7318();
        sub_19EBF67D8();
        swift_bridgeObjectRelease();
        uint64_t v41 = v66;
        uint64_t v42 = v67;
        type metadata accessor for MetalComputeStream.MPSGraphOperation();
        uint64_t v43 = swift_allocObject();
        sub_19E6624F0(v39, v29, v35, v41, v42);
        sub_19E62E830((uint64_t)v69, (uint64_t)&v66);
        uint64_t v44 = v62;
        id v45 = (os_unfair_lock_s *)(*(void *)(v62 + 16) + 16);
        swift_retain();
        os_unfair_lock_lock(v45);
        sub_19E62E830((uint64_t)&v66, (uint64_t)v65);
        swift_beginAccess();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v63 = *(void *)(v44 + 24);
        *(void *)(v44 + 24) = 0x8000000000000000;
        sub_19E667FE4(v43, (uint64_t)v65, isUniquelyReferenced_nonNull_native);
        *(void *)(v44 + 24) = v63;
        swift_bridgeObjectRelease();
        sub_19E62E868((uint64_t)v65);
        swift_endAccess();
        os_unfair_lock_unlock(v45);
        sub_19E62E868((uint64_t)&v66);

        swift_release();
        a1 = v57;
        a5 = v58;
        uint64_t v12 = v55;
        a3 = v56;
        break;
    }
  }
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v69);
  return v12;
}

uint64_t sub_19E65A598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  v71[0] = *(void *)a4;
  long long v13 = *(_OWORD *)(a4 + 8);
  long long v69 = *(_OWORD *)(a4 + 24);
  long long v70 = v13;
  sub_19E5F63A4((uint64_t)v71);
  sub_19E668FC4((uint64_t)&v70);
  sub_19E668FC4((uint64_t)&v69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64E044((uint64_t *)a4, a5, v12, (uint64_t)&type metadata for TransposeOperator, (uint64_t (*)(void))sub_19E64B760, 1, v65);
  uint64_t v58 = *(void *)a4;
  v71[4] = *(void *)(a4 + 24);
  uint64_t v59 = *(void *)(a4 + 32);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = (os_unfair_lock_s *)(*(void *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = sub_19E662760(v14, (uint64_t)v65);
  if (v5) {
    goto LABEL_25;
  }
  uint64_t v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    uint64_t v50 = v14;
    uint64_t v51 = 0;
    uint64_t v52 = v12;
    uint64_t v53 = a3;
    uint64_t v54 = a5;
    uint64_t v55 = a1;
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v56 = &v48;
    uint64_t v19 = v68;
    v62[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v57 = v19;
    swift_bridgeObjectRetain();
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v22 = v57 + 41;
      while (2)
      {
        uint64_t v26 = v21++;
        uint64_t v23 = 2147483656;
        switch(*(unsigned char *)(v22 - 1))
        {
          case 1:
            uint64_t v23 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v23 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v23 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v23 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v23 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v23 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v23 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v23 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v23 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v23 = 268435488;
            goto LABEL_6;
          case 0xB:
            goto LABEL_24;
          default:
LABEL_6:
            uint64_t v63 = 0x5F7475706E69;
            unint64_t v64 = 0xE600000000000000;
            uint64_t v61 = v26;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v24 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v25 = objc_msgSend(v18, sel_placeholderWithShape_dataType_name_, 0, v23, v24);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v22 += 16;
            if (v20 != v21) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v27 = v62[0];
    swift_bridgeObjectRelease();
    if ((v27 & 0xC000000000000001) != 0)
    {
      id v28 = (id)MEMORY[0x19F3BF970](0, v27);
      goto LABEL_20;
    }
    if (*(void *)(v27 + 16))
    {
      id v28 = *(id *)(v27 + 32);
LABEL_20:
      uint64_t v29 = v28;
      sub_19E636F58(v58);
      sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
      id v30 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)sub_19EBF6788();
      id v32 = objc_msgSend(v18, sel_transposeTensor_permutation_name_, v29, v30, v31);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_19EC387F0;
      *(void *)(v33 + 32) = v32;
      uint64_t v63 = v33;
      sub_19EBF6908();
      uint64_t v34 = v63;
      uint64_t v35 = v66;
      uint64_t v36 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
      id v38 = v18;
      uint64_t v63 = v37(v35, v36);
      unint64_t v64 = v39;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v65, v66);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v40 = v63;
      uint64_t v41 = v64;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v42 = swift_allocObject();
      sub_19E6624F0(v38, v27, v34, v40, v41);
      sub_19E62E830((uint64_t)v65, (uint64_t)&v63);
      uint64_t v43 = v50;
      uint64_t v44 = (os_unfair_lock_s *)(*(void *)(v50 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v44);
      sub_19E62E830((uint64_t)&v63, (uint64_t)v62);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v60 = *(void *)(v43 + 24);
      *(void *)(v43 + 24) = 0x8000000000000000;
      sub_19E667FE4(v42, (uint64_t)v62, isUniquelyReferenced_nonNull_native);
      *(void *)(v43 + 24) = v60;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v62);
      swift_endAccess();
      os_unfair_lock_unlock(v44);
      sub_19E62E868((uint64_t)&v63);

      swift_release();
      a5 = v54;
      a1 = v55;
      uint64_t v12 = v52;
      a3 = v53;
      goto LABEL_21;
    }
    __break(1u);
LABEL_24:
    uint64_t v63 = 0;
    unint64_t v64 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v15 = v47;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v61) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v49 = 0;
    uint64_t v48 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_25:
    os_unfair_lock_unlock(v15);
    __break(1u);
    JUMPOUT(0x19E65ACC0);
  }
LABEL_21:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v65);
  return v12;
}

uint64_t sub_19E65ACF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = a6;
  sub_19E64D358(a4, a5, a6, a7, a8, v18, (uint64_t)v66);
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v21 = sub_19E662760(v19, (uint64_t)v66);
  if (v8)
  {
LABEL_21:
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    uint64_t v52 = a7;
    uint64_t v53 = v19;
    uint64_t v60 = 0;
    uint64_t v54 = v18;
    uint64_t v55 = a3;
    uint64_t v56 = a1;
    uint64_t v57 = a8;
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v51 = &v49;
    uint64_t v24 = v69;
    v63[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v58 = v24;
    swift_bridgeObjectRetain();
    if (v25)
    {
      uint64_t v26 = 0;
      uint64_t v27 = v58 + 41;
      while (2)
      {
        uint64_t v31 = v26++;
        uint64_t v28 = 2147483656;
        switch(*(unsigned char *)(v27 - 1))
        {
          case 1:
            uint64_t v28 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v28 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v28 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v28 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v28 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v28 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v28 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v28 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v28 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v28 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v64 = 0;
            unint64_t v65 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v20 = v48;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v62) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v50 = 0;
            uint64_t v49 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_21;
          default:
LABEL_6:
            uint64_t v64 = 0x5F7475706E69;
            unint64_t v65 = 0xE600000000000000;
            uint64_t v62 = v31;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v29 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v30 = objc_msgSend(v23, sel_placeholderWithShape_dataType_name_, 0, v28, v29);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v27 += 16;
            if (v25 != v26) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v32 = v63[0];
    swift_bridgeObjectRelease();
    uint64_t v33 = v60;
    uint64_t v34 = sub_19E64BA2C(v23, v32);
    uint64_t v60 = v33;
    if (!v33)
    {
      uint64_t v35 = (uint64_t)v34;
      uint64_t v36 = v67;
      uint64_t v37 = v68;
      __swift_project_boxed_opaque_existential_1(v66, v67);
      id v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
      id v39 = v23;
      uint64_t v64 = v38(v36, v37);
      unint64_t v65 = v40;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v66, v67);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v41 = v64;
      uint64_t v42 = v65;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v43 = swift_allocObject();
      sub_19E6624F0(v39, v32, v35, v41, v42);
      sub_19E62E830((uint64_t)v66, (uint64_t)&v64);
      uint64_t v44 = v53;
      id v45 = (os_unfair_lock_s *)(*(void *)(v53 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      sub_19E62E830((uint64_t)&v64, (uint64_t)v63);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v61 = *(void *)(v44 + 24);
      *(void *)(v44 + 24) = 0x8000000000000000;
      sub_19E667FE4(v43, (uint64_t)v63, isUniquelyReferenced_nonNull_native);
      *(void *)(v44 + 24) = v61;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v63);
      swift_endAccess();
      os_unfair_lock_unlock(v45);
      sub_19E62E868((uint64_t)&v64);

      swift_release();
      a1 = v56;
      a8 = v57;
      uint64_t v18 = v54;
      a3 = v55;
      goto LABEL_19;
    }
LABEL_22:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65B330);
  }
LABEL_19:
  sub_19E651308(*(void *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19E62E868((uint64_t)v66);
  return v18;
}

uint64_t sub_19E65B360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *(_OWORD *)a4;
  long long v68 = *(_OWORD *)(a4 + 16);
  long long v69 = v13;
  sub_19E668FC4((uint64_t)&v69);
  sub_19E668FC4((uint64_t)&v68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64D694((long long *)a4, a5, v12, v64);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v57 = *(void *)(a4 + 24);
  uint64_t v58 = v14;
  uint64_t v70 = *(void *)(a4 + 32);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  uint64_t v17 = sub_19E662760(v15, (uint64_t)v64);
  if (v5)
  {
LABEL_20:
    os_unfair_lock_unlock(v16);
    __break(1u);
    JUMPOUT(0x19E65B9FCLL);
  }
  uint64_t v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    uint64_t v50 = v15;
    uint64_t v51 = 0;
    uint64_t v52 = v12;
    uint64_t v53 = a3;
    uint64_t v54 = a5;
    uint64_t v55 = a1;
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v49 = &v47;
    uint64_t v20 = v67;
    v61[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v56 = v20;
    swift_bridgeObjectRetain();
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v56 + 41;
      while (2)
      {
        uint64_t v27 = v22++;
        uint64_t v24 = 2147483656;
        switch(*(unsigned char *)(v23 - 1))
        {
          case 1:
            uint64_t v24 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v24 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v24 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v24 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v24 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v24 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v24 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v24 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v24 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v24 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v62 = 0;
            unint64_t v63 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v16 = v46;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v60) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v48 = 0;
            uint64_t v47 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_20;
          default:
LABEL_6:
            uint64_t v62 = 0x5F7475706E69;
            unint64_t v63 = 0xE600000000000000;
            uint64_t v60 = v27;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v25 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v26 = objc_msgSend(v19, sel_placeholderWithShape_dataType_name_, 0, v24, v25);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v23 += 16;
            if (v21 != v22) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v28 = v61[0];
    swift_bridgeObjectRelease();
    sub_19E64A9C0(0, &qword_1E945CB40);
    uint64_t v29 = (void *)sub_19EBF68D8();
    id v30 = (void *)sub_19EBF6788();
    id v31 = objc_msgSend(v19, sel_concatTensors_dimension_name_, v29, v70, v30);

    __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_19EC387F0;
    *(void *)(v32 + 32) = v31;
    uint64_t v62 = v32;
    sub_19EBF6908();
    uint64_t v33 = v62;
    uint64_t v34 = v65;
    uint64_t v35 = v66;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
    id v37 = v19;
    uint64_t v62 = v36(v34, v35);
    unint64_t v63 = v38;
    sub_19EBF67D8();
    __swift_project_boxed_opaque_existential_1(v64, v65);
    sub_19EBF7318();
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    uint64_t v39 = v62;
    uint64_t v40 = v63;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    uint64_t v41 = swift_allocObject();
    sub_19E6624F0(v37, v28, v33, v39, v40);
    sub_19E62E830((uint64_t)v64, (uint64_t)&v62);
    uint64_t v42 = v50;
    uint64_t v43 = (os_unfair_lock_s *)(*(void *)(v50 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    sub_19E62E830((uint64_t)&v62, (uint64_t)v61);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = *(void *)(v42 + 24);
    *(void *)(v42 + 24) = 0x8000000000000000;
    sub_19E667FE4(v41, (uint64_t)v61, isUniquelyReferenced_nonNull_native);
    *(void *)(v42 + 24) = v59;
    swift_bridgeObjectRelease();
    sub_19E62E868((uint64_t)v61);
    swift_endAccess();
    os_unfair_lock_unlock(v43);
    sub_19E62E868((uint64_t)&v62);

    swift_release();
    a5 = v54;
    a1 = v55;
    uint64_t v12 = v52;
    a3 = v53;
  }
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v64);
  return v12;
}

uint64_t sub_19E65BA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  sub_19E61EE7C((uint64_t *)a4, (uint64_t)v74);
  long long v13 = *(_OWORD *)(a4 + 24);
  long long v72 = *(_OWORD *)(a4 + 40);
  long long v73 = v13;
  sub_19E6691C4((uint64_t)v74);
  sub_19E668FC4((uint64_t)&v73);
  sub_19E668FC4((uint64_t)&v72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64D9D4(a4, a5, v12, v68);
  uint64_t v14 = *(void *)a4;
  char v15 = *(unsigned char *)(a4 + 8);
  char v67 = v15;
  uint64_t v58 = *(void *)(a4 + 16);
  uint64_t v59 = v14;
  uint64_t v16 = *(void *)(a4 + 24);
  uint64_t v56 = *(void *)(a4 + 32);
  uint64_t v57 = v16;
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = (os_unfair_lock_s *)(*(void *)(v17 + 16) + 16);
  os_unfair_lock_lock(v18);
  uint64_t v60 = v17;
  uint64_t v19 = sub_19E662760(v17, (uint64_t)v68);
  uint64_t v61 = v5;
  if (v5)
  {
LABEL_23:
    os_unfair_lock_unlock(v18);
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v20 = v19;
  os_unfair_lock_unlock(v18);
  if (!v20)
  {
    uint64_t v52 = v12;
    uint64_t v53 = a3;
    uint64_t v54 = a1;
    uint64_t v55 = a5;
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v22 = v71;
    v64[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v23 = *(void *)(v22 + 16);
    swift_bridgeObjectRetain();
    if (v23)
    {
      uint64_t v50 = v22;
      uint64_t v51 = &v48;
      uint64_t v24 = 0;
      uint64_t v25 = v22 + 41;
      while (2)
      {
        uint64_t v29 = v24++;
        uint64_t v26 = 2147483656;
        switch(*(unsigned char *)(v25 - 1))
        {
          case 1:
            uint64_t v26 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v26 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v26 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v26 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v26 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v26 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v26 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v26 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v26 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v26 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v65 = 0;
            unint64_t v66 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v18 = v47;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v63) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v49 = 0;
            uint64_t v48 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_23;
          default:
LABEL_6:
            uint64_t v65 = 0x5F7475706E69;
            unint64_t v66 = 0xE600000000000000;
            uint64_t v63 = v29;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v27 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v28 = objc_msgSend(v21, sel_placeholderWithShape_dataType_name_, 0, v26, v27);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v25 += 16;
            if (v23 != v24) {
              continue;
            }
            char v30 = v67;
            break;
        }
        break;
      }
    }
    else
    {
      char v30 = v15 & 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v64[0];
    swift_bridgeObjectRelease();
    uint64_t v32 = v61;
    uint64_t v33 = sub_19E64BB7C(v21, v31, v59, v30, v58);
    uint64_t v61 = v32;
    if (!v32)
    {
      uint64_t v34 = (uint64_t)v33;
      uint64_t v35 = v69;
      uint64_t v36 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      id v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
      id v38 = v21;
      uint64_t v65 = v37(v35, v36);
      unint64_t v66 = v39;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v68, v69);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v40 = v65;
      uint64_t v41 = v66;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v42 = swift_allocObject();
      sub_19E6624F0(v38, v31, v34, v40, v41);
      sub_19E62E830((uint64_t)v68, (uint64_t)&v65);
      uint64_t v43 = v60;
      uint64_t v44 = (os_unfair_lock_s *)(*(void *)(v60 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v44);
      sub_19E62E830((uint64_t)&v65, (uint64_t)v64);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v62 = *(void *)(v43 + 24);
      *(void *)(v43 + 24) = 0x8000000000000000;
      sub_19E667FE4(v42, (uint64_t)v64, isUniquelyReferenced_nonNull_native);
      *(void *)(v43 + 24) = v62;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v64);
      swift_endAccess();
      os_unfair_lock_unlock(v44);
      sub_19E62E868((uint64_t)&v65);

      swift_release();
      a1 = v54;
      a5 = v55;
      uint64_t v12 = v52;
      a3 = v53;
      goto LABEL_21;
    }
LABEL_24:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65C094);
  }
LABEL_21:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v68);
  return v12;
}

uint64_t sub_19E65C0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v8 = a5;
  char v13 = a5 & 1;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v15 = v14;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = a4;
  sub_19E64DD4C(a4, v13, a6, v15, (uint64_t)v62);
  char v61 = v13;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = (os_unfair_lock_s *)(*(void *)(v16 + 16) + 16);
  os_unfair_lock_lock(v17);
  uint64_t v18 = sub_19E662760(v16, (uint64_t)v62);
  if (v6)
  {
LABEL_22:
    os_unfair_lock_unlock(v17);
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v19 = v18;
  uint64_t v20 = 0;
  os_unfair_lock_unlock(v17);
  if (!v19)
  {
    uint64_t v49 = v16;
    uint64_t v50 = v15;
    uint64_t v51 = a3;
    uint64_t v52 = a1;
    uint64_t v53 = a6;
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v22 = v65;
    v58[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v23 = *(void *)(v22 + 16);
    swift_bridgeObjectRetain();
    if (v23)
    {
      uint64_t v47 = v22;
      uint64_t v48 = &v45;
      uint64_t v54 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = v22 + 41;
      while (2)
      {
        uint64_t v29 = v24++;
        uint64_t v26 = 2147483656;
        switch(*(unsigned char *)(v25 - 1))
        {
          case 1:
            uint64_t v26 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v26 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v26 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v26 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v26 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v26 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v26 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v26 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v26 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v26 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v59 = 0;
            unint64_t v60 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v57) = 1;
            sub_19EBF7188();
            uint64_t v17 = (os_unfair_lock_s *)&v59;
            sub_19EBF67D8();
            int v46 = 0;
            uint64_t v45 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_22;
          default:
LABEL_6:
            uint64_t v59 = 0x5F7475706E69;
            unint64_t v60 = 0xE600000000000000;
            uint64_t v57 = v29;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v27 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v28 = objc_msgSend(v21, sel_placeholderWithShape_dataType_name_, 0, v26, v27);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v25 += 16;
            if (v23 != v24) {
              continue;
            }
            char v8 = v61;
            uint64_t v20 = v54;
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v58[0];
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_19E647508(v21, v30, v55, v8 & 1);
    uint64_t v54 = v20;
    if (!v20)
    {
      uint64_t v32 = (uint64_t)v31;
      uint64_t v33 = v63;
      uint64_t v34 = v64;
      __swift_project_boxed_opaque_existential_1(v62, v63);
      uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 24);
      id v36 = v21;
      uint64_t v59 = v35(v33, v34);
      unint64_t v60 = v37;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v62, v63);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v38 = v59;
      uint64_t v39 = v60;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v40 = swift_allocObject();
      sub_19E6624F0(v36, v30, v32, v38, v39);
      sub_19E62E830((uint64_t)v62, (uint64_t)&v59);
      uint64_t v41 = v49;
      uint64_t v42 = (os_unfair_lock_s *)(*(void *)(v49 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v42);
      sub_19E62E830((uint64_t)&v59, (uint64_t)v58);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = *(void *)(v41 + 24);
      *(void *)(v41 + 24) = 0x8000000000000000;
      sub_19E667FE4(v40, (uint64_t)v58, isUniquelyReferenced_nonNull_native);
      *(void *)(v41 + 24) = v56;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v58);
      swift_endAccess();
      os_unfair_lock_unlock(v42);
      sub_19E62E868((uint64_t)&v59);

      swift_release();
      a1 = v52;
      a6 = v53;
      uint64_t v15 = v50;
      a3 = v51;
      goto LABEL_20;
    }
LABEL_23:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65C6ECLL);
  }
LABEL_20:
  sub_19E651308(*(void *)(a3 + 16), a6, v15, a1);
  swift_release();
  sub_19E62E868((uint64_t)v62);
  return v15;
}

uint64_t sub_19E65C71C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(id, uint64_t, void))
{
  uint64_t v58 = a8;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v17 = v16;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned int v57 = a4;
  sub_19E64FFC8(a4, a5, v17, a6, a7, (uint64_t)v65);
  uint64_t v18 = *(void *)(a3 + 24);
  uint64_t v19 = (os_unfair_lock_s *)(*(void *)(v18 + 16) + 16);
  os_unfair_lock_lock(v19);
  uint64_t v20 = sub_19E662760(v18, (uint64_t)v65);
  if (v8)
  {
LABEL_21:
    os_unfair_lock_unlock(v19);
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v21 = v20;
  os_unfair_lock_unlock(v19);
  if (!v21)
  {
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v59 = 0;
    uint64_t v53 = a3;
    uint64_t v54 = a1;
    uint64_t v55 = a5;
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v50 = &v48;
    uint64_t v23 = v68;
    v62[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v56 = v23;
    swift_bridgeObjectRetain();
    if (v24)
    {
      uint64_t v25 = 0;
      uint64_t v26 = v56 + 41;
      while (2)
      {
        uint64_t v30 = v25++;
        uint64_t v27 = 2147483656;
        switch(*(unsigned char *)(v26 - 1))
        {
          case 1:
            uint64_t v27 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v27 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v27 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v27 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v27 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v27 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v27 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v27 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v27 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v27 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v63 = 0;
            unint64_t v64 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v19 = v47;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v61) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v49 = 0;
            uint64_t v48 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_21;
          default:
LABEL_6:
            uint64_t v63 = 0x5F7475706E69;
            unint64_t v64 = 0xE600000000000000;
            uint64_t v61 = v30;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            id v28 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v29 = objc_msgSend(v22, sel_placeholderWithShape_dataType_name_, 0, v27, v28);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v26 += 16;
            if (v24 != v25) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v31 = v62[0];
    swift_bridgeObjectRelease();
    uint64_t v32 = v59;
    uint64_t v33 = v58(v22, v31, v57);
    uint64_t v59 = v32;
    if (!v32)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v66;
      uint64_t v36 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      unint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
      id v38 = v22;
      uint64_t v63 = v37(v35, v36);
      unint64_t v64 = v39;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v65, v66);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v40 = v63;
      uint64_t v41 = v64;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v42 = swift_allocObject();
      sub_19E6624F0(v38, v31, v34, v40, v41);
      sub_19E62E830((uint64_t)v65, (uint64_t)&v63);
      uint64_t v43 = v51;
      uint64_t v44 = (os_unfair_lock_s *)(*(void *)(v51 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v44);
      sub_19E62E830((uint64_t)&v63, (uint64_t)v62);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v60 = *(void *)(v43 + 24);
      *(void *)(v43 + 24) = 0x8000000000000000;
      sub_19E667FE4(v42, (uint64_t)v62, isUniquelyReferenced_nonNull_native);
      *(void *)(v43 + 24) = v60;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v62);
      swift_endAccess();
      os_unfair_lock_unlock(v44);
      sub_19E62E868((uint64_t)&v63);

      swift_release();
      a1 = v54;
      a5 = v55;
      uint64_t v17 = v52;
      a3 = v53;
      goto LABEL_19;
    }
LABEL_22:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65CD4CLL);
  }
LABEL_19:
  sub_19E651308(*(void *)(a3 + 16), a5, v17, a1);
  swift_release();
  sub_19E62E868((uint64_t)v65);
  return v17;
}

uint64_t sub_19E65CD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), void *a8, SEL *a9)
{
  id v88 = a8;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  v87[0] = *(void *)a4;
  long long v19 = *(_OWORD *)(a4 + 8);
  long long v85 = *(_OWORD *)(a4 + 24);
  long long v86 = v19;
  sub_19E5F63A4((uint64_t)v87);
  sub_19E668FC4((uint64_t)&v86);
  sub_19E668FC4((uint64_t)&v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64E044((uint64_t *)a4, a5, v18, a6, a7, 0, v81);
  uint64_t v20 = *(void *)(a4 + 8);
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v72 = *(void *)a4;
  uint64_t v73 = v20;
  uint64_t v22 = a3;
  uint64_t v23 = *(void *)(a3 + 24);
  uint64_t v24 = (os_unfair_lock_s *)(*(void *)(v23 + 16) + 16);
  os_unfair_lock_lock(v24);
  uint64_t v25 = sub_19E662760(v23, (uint64_t)v81);
  if (v9) {
    goto LABEL_30;
  }
  uint64_t v26 = v25;
  os_unfair_lock_unlock(v24);
  if (!v26)
  {
    uint64_t v70 = v21;
    uint64_t v63 = v23;
    uint64_t v64 = 0;
    uint64_t v65 = v18;
    uint64_t v66 = v22;
    uint64_t v67 = a5;
    uint64_t v68 = a1;
    id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v69 = &v61;
    uint64_t v27 = v84;
    v78[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v28 = *(void *)(v27 + 16);
    uint64_t v71 = v27;
    swift_bridgeObjectRetain();
    uint64_t v75 = v28;
    if (v28)
    {
      uint64_t v29 = 0;
      uint64_t v74 = v71 + 32;
      while (2)
      {
        uint64_t v33 = v29;
        uint64_t v34 = (unsigned __int8 *)(v74 + 16 * v29);
        uint64_t v35 = *(void *)v34;
        uint64_t v36 = v34[8];
        uint64_t v37 = *(void *)(*(void *)v34 + 16);
        if (v37)
        {
          uint64_t v79 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v38 = v35 + 32;
          do
          {
            v38 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v37;
          }
          while (v37);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v29 = v33 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        unint64_t v39 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v30 = 2147483656;
        switch(v36)
        {
          case 1:
            uint64_t v30 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v30 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v30 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v30 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v30 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v30 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v30 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v30 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v30 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v30 = 268435488;
            goto LABEL_6;
          case 11:
            goto LABEL_29;
          default:
LABEL_6:
            uint64_t v79 = 0x5F7475706E69;
            unint64_t v80 = 0xE600000000000000;
            uint64_t v77 = v33;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v31 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v32 = objc_msgSend(v88, sel_placeholderWithShape_dataType_name_, v39, v30, v31);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v29 != v75) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v40 = v78[0];
    swift_bridgeObjectRelease();
    if ((v40 & 0xC000000000000001) != 0)
    {
      id v41 = (id)MEMORY[0x19F3BF970](0, v40);
      goto LABEL_25;
    }
    if (*(void *)(v40 + 16))
    {
      id v41 = *(id *)(v40 + 32);
LABEL_25:
      sub_19E636F58(v72);
      sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
      uint64_t v42 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      uint64_t v43 = (void *)sub_19EBF6788();
      id v44 = v88;
      id v45 = objc_msgSend(v88, *a9, v41, v42, v43);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_19EC387F0;
      *(void *)(v46 + 32) = v45;
      uint64_t v79 = v46;
      sub_19EBF6908();
      uint64_t v47 = v79;
      uint64_t v48 = v82;
      uint64_t v49 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 24);
      id v51 = v44;
      uint64_t v79 = v50(v48, v49);
      unint64_t v80 = v52;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v81, v82);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v53 = v79;
      uint64_t v54 = v80;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v55 = swift_allocObject();
      sub_19E6624F0(v51, v40, v47, v53, v54);
      sub_19E62E830((uint64_t)v81, (uint64_t)&v79);
      uint64_t v56 = v63;
      unsigned int v57 = (os_unfair_lock_s *)(*(void *)(v63 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v57);
      sub_19E62E830((uint64_t)&v79, (uint64_t)v78);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v76 = *(void *)(v56 + 24);
      *(void *)(v56 + 24) = 0x8000000000000000;
      sub_19E667FE4(v55, (uint64_t)v78, isUniquelyReferenced_nonNull_native);
      *(void *)(v56 + 24) = v76;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v78);
      swift_endAccess();
      os_unfair_lock_unlock(v57);
      sub_19E62E868((uint64_t)&v79);

      swift_release();
      a5 = v67;
      a1 = v68;
      uint64_t v18 = v65;
      uint64_t v22 = v66;
      goto LABEL_26;
    }
    __break(1u);
LABEL_29:
    uint64_t v79 = 0;
    unint64_t v80 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v24 = v60;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v77) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v62 = 0;
    uint64_t v61 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_30:
    os_unfair_lock_unlock(v24);
    __break(1u);
    JUMPOUT(0x19E65D568);
  }
LABEL_26:
  sub_19E651308(*(void *)(v22 + 16), a5, v18, a1);
  swift_release();
  sub_19E62E868((uint64_t)v81);
  return v18;
}

uint64_t sub_19E65D598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *((_OWORD *)a4 + 1);
  long long v78 = *((_OWORD *)a4 + 2);
  long long v79 = v13;
  sub_19E668FC4((uint64_t)&v79);
  sub_19E668FC4((uint64_t)&v78);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64E3A4((long long *)a4, a5, v12, v74);
  uint64_t v14 = *a4;
  uint64_t v64 = a4[1];
  uint64_t v65 = v14;
  uint64_t v15 = a4[2];
  uint64_t v62 = a4[3];
  uint64_t v63 = v15;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = (os_unfair_lock_s *)(*(void *)(v16 + 16) + 16);
  os_unfair_lock_lock(v17);
  uint64_t v66 = v16;
  uint64_t v18 = sub_19E662760(v16, (uint64_t)v74);
  if (v5) {
    goto LABEL_30;
  }
  uint64_t v19 = v18;
  os_unfair_lock_unlock(v17);
  if (!v19)
  {
    uint64_t v60 = 0;
    uint64_t v55 = v12;
    uint64_t v56 = a3;
    uint64_t v57 = a5;
    uint64_t v58 = a1;
    id v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v59 = &v53;
    uint64_t v20 = v77;
    v71[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v61 = v20;
    swift_bridgeObjectRetain();
    uint64_t v68 = v21;
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v67 = v61 + 32;
      while (2)
      {
        uint64_t v26 = v22;
        uint64_t v27 = (unsigned __int8 *)(v67 + 16 * v22);
        uint64_t v28 = *(void *)v27;
        uint64_t v29 = v27[8];
        uint64_t v30 = *(void *)(*(void *)v27 + 16);
        if (v30)
        {
          uint64_t v72 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v31 = v28 + 32;
          do
          {
            v31 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v30;
          }
          while (v30);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v22 = v26 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        id v32 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v23 = 2147483656;
        switch(v29)
        {
          case 1:
            uint64_t v23 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v23 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v23 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v23 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v23 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v23 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v23 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v23 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v23 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v23 = 268435488;
            goto LABEL_6;
          case 11:
            goto LABEL_29;
          default:
LABEL_6:
            uint64_t v72 = 0x5F7475706E69;
            unint64_t v73 = 0xE600000000000000;
            uint64_t v70 = v26;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v24 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v25 = objc_msgSend(v80, sel_placeholderWithShape_dataType_name_, v32, v23, v24);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v22 != v68) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = v71[0];
    swift_bridgeObjectRelease();
    uint64_t v68 = v33;
    if ((v33 & 0xC000000000000001) != 0)
    {
      id v34 = (id)MEMORY[0x19F3BF970](0, v33);
      goto LABEL_25;
    }
    if (*(void *)(v33 + 16))
    {
      id v34 = *(id *)(v33 + 32);
LABEL_25:
      uint64_t v35 = (void *)sub_19EBF6788();
      id v36 = v80;
      id v37 = objc_msgSend(v80, sel_bandPartWithTensor_numLower_numUpper_name_, v34, v65, v64, v35);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_19EC387F0;
      *(void *)(v38 + 32) = v37;
      uint64_t v72 = v38;
      sub_19EBF6908();
      uint64_t v39 = v72;
      uint64_t v40 = v75;
      uint64_t v41 = v76;
      __swift_project_boxed_opaque_existential_1(v74, v75);
      uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 24);
      id v43 = v36;
      uint64_t v72 = v42(v40, v41);
      unint64_t v73 = v44;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v74, v75);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v45 = v72;
      uint64_t v46 = v73;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v47 = swift_allocObject();
      sub_19E6624F0(v43, v68, v39, v45, v46);
      sub_19E62E830((uint64_t)v74, (uint64_t)&v72);
      uint64_t v48 = v66;
      uint64_t v49 = (os_unfair_lock_s *)(*(void *)(v66 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v49);
      sub_19E62E830((uint64_t)&v72, (uint64_t)v71);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = *(void *)(v48 + 24);
      *(void *)(v48 + 24) = 0x8000000000000000;
      sub_19E667FE4(v47, (uint64_t)v71, isUniquelyReferenced_nonNull_native);
      *(void *)(v48 + 24) = v69;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v71);
      swift_endAccess();
      os_unfair_lock_unlock(v49);
      sub_19E62E868((uint64_t)&v72);

      swift_release();
      a5 = v57;
      a1 = v58;
      uint64_t v12 = v55;
      a3 = v56;
      goto LABEL_26;
    }
    __break(1u);
LABEL_29:
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v17 = v52;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v70) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v54 = 0;
    uint64_t v53 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_30:
    os_unfair_lock_unlock(v17);
    __break(1u);
    JUMPOUT(0x19E65DD18);
  }
LABEL_26:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v74);
  return v12;
}

uint64_t sub_19E65DD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  char v16 = a6 & 1;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = a7;
  sub_19E64E6E0(a4, a5, v16, a7, a8, v18, (uint64_t)v74);
  char v73 = v16;
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v64 = v19;
  uint64_t v21 = sub_19E662760(v19, (uint64_t)v74);
  if (v8)
  {
LABEL_27:
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v22 = v21;
  uint64_t v23 = 0;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    uint64_t v59 = v18;
    uint64_t v60 = a3;
    uint64_t v61 = a1;
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v25 = v77;
    v70[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    if (v26)
    {
      uint64_t v57 = &v54;
      uint64_t v58 = a8;
      uint64_t v62 = 0;
      uint64_t v27 = 0;
      uint64_t v56 = v25;
      uint64_t v66 = v25 + 32;
      while (2)
      {
        uint64_t v31 = v24;
        uint64_t v32 = v27;
        uint64_t v33 = (uint64_t *)(v66 + 16 * v27);
        uint64_t v34 = *v33;
        uint64_t v35 = *((unsigned __int8 *)v33 + 8);
        int v65 = *((unsigned __int8 *)v33 + 9);
        uint64_t v36 = *(void *)(v34 + 16);
        if (v36)
        {
          uint64_t v71 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v37 = v34 + 32;
          do
          {
            v37 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v36;
          }
          while (v36);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v27 = v32 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v38 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v28 = 2147483656;
        switch(v35)
        {
          case 1:
            uint64_t v28 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v28 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v28 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v28 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v28 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v28 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v28 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v28 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v28 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v28 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v69) = 1;
            sub_19EBF7188();
            uint64_t v20 = (os_unfair_lock_s *)&v71;
            sub_19EBF67D8();
            int v55 = 0;
            uint64_t v54 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_27;
          default:
LABEL_6:
            uint64_t v71 = 0x5F7475706E69;
            unint64_t v72 = 0xE600000000000000;
            uint64_t v69 = v32;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v29 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v24 = v31;
            id v30 = objc_msgSend(v31, sel_placeholderWithShape_dataType_name_, v38, v28, v29);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v27 != v67) {
              continue;
            }
            char v16 = v73;
            a8 = v58;
            uint64_t v23 = v62;
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = v70[0];
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_19E64734C(v24, v39, v16, v63);
    uint64_t v62 = v23;
    if (!v23)
    {
      uint64_t v41 = (uint64_t)v40;
      uint64_t v42 = v75;
      uint64_t v43 = v76;
      __swift_project_boxed_opaque_existential_1(v74, v75);
      unint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 24);
      id v45 = v24;
      uint64_t v71 = v44(v42, v43);
      unint64_t v72 = v46;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v74, v75);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v47 = v71;
      uint64_t v48 = v72;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v49 = swift_allocObject();
      sub_19E6624F0(v45, v39, v41, v47, v48);
      sub_19E62E830((uint64_t)v74, (uint64_t)&v71);
      uint64_t v50 = v64;
      id v51 = (os_unfair_lock_s *)(*(void *)(v64 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v51);
      sub_19E62E830((uint64_t)&v71, (uint64_t)v70);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v68 = *(void *)(v50 + 24);
      *(void *)(v50 + 24) = 0x8000000000000000;
      sub_19E667FE4(v49, (uint64_t)v70, isUniquelyReferenced_nonNull_native);
      *(void *)(v50 + 24) = v68;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v70);
      swift_endAccess();
      os_unfair_lock_unlock(v51);
      sub_19E62E868((uint64_t)&v71);

      swift_release();
      a3 = v60;
      a1 = v61;
      uint64_t v18 = v59;
      goto LABEL_25;
    }
LABEL_28:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65E464);
  }
LABEL_25:
  sub_19E651308(*(void *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19E62E868((uint64_t)v74);
  return v18;
}

uint64_t sub_19E65E494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *(_OWORD *)a4;
  long long v78 = *(_OWORD *)(a4 + 16);
  long long v79 = v13;
  sub_19E668FC4((uint64_t)&v79);
  sub_19E668FC4((uint64_t)&v78);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64EA00((long long *)a4, a5, v12, v74);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v62 = *(void *)(a4 + 24);
  uint64_t v63 = v14;
  uint64_t v15 = *(void *)(a4 + 32);
  uint64_t v64 = *(void *)(a4 + 40);
  uint64_t v65 = v15;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = (os_unfair_lock_s *)(*(void *)(v16 + 16) + 16);
  os_unfair_lock_lock(v17);
  uint64_t v66 = v16;
  uint64_t v18 = sub_19E662760(v16, (uint64_t)v74);
  if (v5) {
    goto LABEL_30;
  }
  uint64_t v19 = v18;
  os_unfair_lock_unlock(v17);
  if (!v19)
  {
    uint64_t v60 = 0;
    uint64_t v55 = v12;
    uint64_t v56 = a3;
    uint64_t v57 = a5;
    uint64_t v58 = a1;
    id v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v59 = &v53;
    uint64_t v20 = v77;
    v71[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v61 = v20;
    swift_bridgeObjectRetain();
    uint64_t v68 = v21;
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v67 = v61 + 32;
      while (2)
      {
        uint64_t v26 = v22;
        uint64_t v27 = (unsigned __int8 *)(v67 + 16 * v22);
        uint64_t v28 = *(void *)v27;
        uint64_t v29 = v27[8];
        uint64_t v30 = *(void *)(*(void *)v27 + 16);
        if (v30)
        {
          uint64_t v72 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v31 = v28 + 32;
          do
          {
            v31 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v30;
          }
          while (v30);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v22 = v26 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v32 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v23 = 2147483656;
        switch(v29)
        {
          case 1:
            uint64_t v23 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v23 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v23 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v23 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v23 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v23 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v23 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v23 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v23 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v23 = 268435488;
            goto LABEL_6;
          case 11:
            goto LABEL_29;
          default:
LABEL_6:
            uint64_t v72 = 0x5F7475706E69;
            unint64_t v73 = 0xE600000000000000;
            uint64_t v70 = v26;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            id v24 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v25 = objc_msgSend(v80, sel_placeholderWithShape_dataType_name_, v32, v23, v24);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v22 != v68) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = v71[0];
    swift_bridgeObjectRelease();
    if ((v33 & 0xC000000000000001) != 0)
    {
      id v34 = (id)MEMORY[0x19F3BF970](0, v33);
      goto LABEL_25;
    }
    if (*(void *)(v33 + 16))
    {
      id v34 = *(id *)(v33 + 32);
LABEL_25:
      uint64_t v35 = (void *)sub_19EBF6788();
      id v36 = v80;
      id v37 = objc_msgSend(v80, sel_topKWithSourceTensor_axis_k_name_, v34, v64, v65, v35);

      sub_19E64A9C0(0, &qword_1E945CB40);
      uint64_t v38 = sub_19EBF68E8();

      uint64_t v39 = v75;
      uint64_t v40 = v76;
      __swift_project_boxed_opaque_existential_1(v74, v75);
      uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 24);
      id v42 = v36;
      uint64_t v72 = v41(v39, v40);
      unint64_t v73 = v43;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v74, v75);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v44 = v72;
      uint64_t v45 = v73;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v46 = swift_allocObject();
      uint64_t v47 = v42;
      sub_19E6624F0(v42, v33, v38, v44, v45);
      sub_19E62E830((uint64_t)v74, (uint64_t)&v72);
      uint64_t v48 = v66;
      uint64_t v49 = (os_unfair_lock_s *)(*(void *)(v66 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v49);
      sub_19E62E830((uint64_t)&v72, (uint64_t)v71);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = *(void *)(v48 + 24);
      *(void *)(v48 + 24) = 0x8000000000000000;
      sub_19E667FE4(v46, (uint64_t)v71, isUniquelyReferenced_nonNull_native);
      *(void *)(v48 + 24) = v69;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v71);
      swift_endAccess();
      os_unfair_lock_unlock(v49);
      sub_19E62E868((uint64_t)&v72);

      swift_release();
      a5 = v57;
      a1 = v58;
      uint64_t v12 = v55;
      a3 = v56;
      goto LABEL_26;
    }
    __break(1u);
LABEL_29:
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v17 = v52;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v70) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v54 = 0;
    uint64_t v53 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_30:
    os_unfair_lock_unlock(v17);
    __break(1u);
    JUMPOUT(0x19E65EC08);
  }
LABEL_26:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v74);
  return v12;
}

uint64_t sub_19E65EC38(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  sub_19E66905C((uint64_t)a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64ED3C(a4, a5, v12, (uint64_t)v71);
  long long v13 = a4[1];
  long long v68 = *a4;
  long long v69 = v13;
  long long v70 = a4[2];
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = (os_unfair_lock_s *)(*(void *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = sub_19E662760(v14, (uint64_t)v71);
  if (v5)
  {
LABEL_26:
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    uint64_t v53 = v14;
    uint64_t v54 = 0;
    uint64_t v55 = v12;
    uint64_t v56 = a3;
    uint64_t v57 = a1;
    uint64_t v58 = a5;
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    unint64_t v52 = &v50;
    uint64_t v19 = v74;
    v65[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v59 = v19;
    swift_bridgeObjectRetain();
    uint64_t v62 = v20;
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v61 = v59 + 32;
      while (2)
      {
        id v25 = v18;
        uint64_t v26 = v21;
        uint64_t v27 = (uint64_t *)(v61 + 16 * v21);
        uint64_t v28 = *v27;
        uint64_t v29 = *((unsigned __int8 *)v27 + 8);
        int v60 = *((unsigned __int8 *)v27 + 9);
        uint64_t v30 = *(void *)(v28 + 16);
        if (v30)
        {
          uint64_t v66 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v31 = v28 + 32;
          do
          {
            v31 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v30;
          }
          while (v30);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v21 = v26 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v32 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v22 = 2147483656;
        switch(v29)
        {
          case 1:
            uint64_t v22 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v22 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v22 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v22 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v22 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v22 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v22 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v22 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v22 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v22 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v66 = 0;
            unint64_t v67 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v15 = v49;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v64) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v51 = 0;
            uint64_t v50 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_26;
          default:
LABEL_6:
            uint64_t v66 = 0x5F7475706E69;
            unint64_t v67 = 0xE600000000000000;
            uint64_t v64 = v26;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v23 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v18 = v25;
            id v24 = objc_msgSend(v25, sel_placeholderWithShape_dataType_name_, v32, v22, v23);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v21 != v62) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = v65[0];
    swift_bridgeObjectRelease();
    uint64_t v34 = v54;
    uint64_t v35 = sub_19E647188(v18, v33);
    if (!v34)
    {
      uint64_t v36 = (uint64_t)v35;
      uint64_t v37 = v72;
      uint64_t v38 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 24);
      id v40 = v18;
      uint64_t v66 = v39(v37, v38);
      unint64_t v67 = v41;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v42 = v66;
      uint64_t v43 = v67;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v44 = swift_allocObject();
      sub_19E6624F0(v40, v33, v36, v42, v43);
      sub_19E62E830((uint64_t)v71, (uint64_t)&v66);
      uint64_t v45 = v53;
      uint64_t v46 = (os_unfair_lock_s *)(*(void *)(v53 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v46);
      sub_19E62E830((uint64_t)&v66, (uint64_t)v65);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v63 = *(void *)(v45 + 24);
      *(void *)(v45 + 24) = 0x8000000000000000;
      sub_19E667FE4(v44, (uint64_t)v65, isUniquelyReferenced_nonNull_native);
      *(void *)(v45 + 24) = v63;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v65);
      swift_endAccess();
      os_unfair_lock_unlock(v46);
      sub_19E62E868((uint64_t)&v66);

      swift_release();
      a1 = v57;
      a5 = v58;
      uint64_t v12 = v55;
      a3 = v56;
      goto LABEL_24;
    }
LABEL_27:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E65F334);
  }
LABEL_24:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v71);
  return v12;
}

uint64_t sub_19E65F364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *(_OWORD *)a4;
  long long v82 = *((_OWORD *)a4 + 1);
  long long v83 = v13;
  sub_19E668FC4((uint64_t)&v83);
  sub_19E668FC4((uint64_t)&v82);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64F04C((long long *)a4, a5, v12, v78);
  uint64_t v14 = *a4;
  uint64_t v65 = a4[1];
  uint64_t v66 = v14;
  uint64_t v67 = a4[4];
  unsigned __int8 v15 = *((unsigned char *)a4 + 40);
  unsigned __int8 v77 = v15;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = (os_unfair_lock_s *)(*(void *)(v16 + 16) + 16);
  os_unfair_lock_lock(v17);
  uint64_t v68 = v16;
  uint64_t v18 = sub_19E662760(v16, (uint64_t)v78);
  if (v5) {
    goto LABEL_32;
  }
  uint64_t v19 = v18;
  os_unfair_lock_unlock(v17);
  if (!v19)
  {
    id v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v20 = v81;
    v74[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRetain();
    uint64_t v70 = v21;
    uint64_t v63 = a3;
    uint64_t v64 = a1;
    uint64_t v61 = 0;
    uint64_t v62 = v12;
    if (v21)
    {
      uint64_t v59 = &v56;
      uint64_t v60 = a5;
      uint64_t v22 = v20;
      uint64_t v23 = 0;
      uint64_t v58 = v22;
      uint64_t v69 = v22 + 32;
      while (2)
      {
        uint64_t v27 = v23;
        uint64_t v28 = (unsigned __int8 *)(v69 + 16 * v23);
        uint64_t v29 = *(void *)v28;
        uint64_t v30 = v28[8];
        uint64_t v31 = *(void *)(*(void *)v28 + 16);
        if (v31)
        {
          uint64_t v75 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v32 = v29 + 32;
          do
          {
            v32 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v31;
          }
          while (v31);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v23 = v27 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v33 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v24 = 2147483656;
        switch(v30)
        {
          case 1:
            uint64_t v24 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v24 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v24 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v24 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v24 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v24 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v24 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v24 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v24 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v24 = 268435488;
            goto LABEL_6;
          case 11:
            goto LABEL_31;
          default:
LABEL_6:
            uint64_t v75 = 0x5F7475706E69;
            unint64_t v76 = 0xE600000000000000;
            uint64_t v73 = v27;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            id v25 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v26 = objc_msgSend(v71, sel_placeholderWithShape_dataType_name_, v33, v24, v25);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v23 != v70) {
              continue;
            }
            uint64_t v34 = v77;
            a5 = v60;
            break;
        }
        break;
      }
    }
    else
    {
      uint64_t v34 = v15 & 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = v74[0];
    swift_bridgeObjectRelease();
    uint64_t v70 = v35;
    if ((v35 & 0xC000000000000001) != 0)
    {
      id v36 = (id)MEMORY[0x19F3BF970](0, v35);
      goto LABEL_27;
    }
    if (*(void *)(v35 + 16))
    {
      id v36 = *(id *)(v35 + 32);
LABEL_27:
      uint64_t v37 = v36;
      uint64_t v38 = (void *)sub_19EBF6788();
      id v39 = v71;
      id v40 = objc_msgSend(v71, sel_argSortWithTensor_axis_descending_name_, v37, v67, v34, v38);

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_19EC387F0;
      *(void *)(v41 + 32) = v40;
      uint64_t v75 = v41;
      sub_19EBF6908();
      uint64_t v42 = v75;
      uint64_t v43 = v79;
      uint64_t v44 = v80;
      __swift_project_boxed_opaque_existential_1(v78, v79);
      uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 24);
      id v46 = v39;
      uint64_t v75 = v45(v43, v44);
      unint64_t v76 = v47;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v78, v79);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v48 = v75;
      uint64_t v49 = v76;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v50 = swift_allocObject();
      sub_19E6624F0(v46, v70, v42, v48, v49);
      sub_19E62E830((uint64_t)v78, (uint64_t)&v75);
      uint64_t v51 = v68;
      unint64_t v52 = (os_unfair_lock_s *)(*(void *)(v68 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v52);
      sub_19E62E830((uint64_t)&v75, (uint64_t)v74);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = *(void *)(v51 + 24);
      *(void *)(v51 + 24) = 0x8000000000000000;
      sub_19E667FE4(v50, (uint64_t)v74, isUniquelyReferenced_nonNull_native);
      *(void *)(v51 + 24) = v72;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v74);
      swift_endAccess();
      os_unfair_lock_unlock(v52);
      sub_19E62E868((uint64_t)&v75);

      swift_release();
      a3 = v63;
      a1 = v64;
      uint64_t v12 = v62;
      goto LABEL_28;
    }
    __break(1u);
LABEL_31:
    uint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19E6C1A2C(11);
    uint64_t v17 = v55;
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    LOBYTE(v73) = 1;
    sub_19EBF7188();
    sub_19EBF67D8();
    int v57 = 0;
    uint64_t v56 = 116;
    sub_19EBF71F8();
    __break(1u);
LABEL_32:
    os_unfair_lock_unlock(v17);
    __break(1u);
    JUMPOUT(0x19E65FAE4);
  }
LABEL_28:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v78);
  return v12;
}

uint64_t sub_19E65FB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  LODWORD(v68) = a6;
  char v14 = a6 & 1;
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v16 = v15;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  uint64_t v17 = a4;
  uint64_t v18 = a7;
  sub_19E64F388(v17, a5, v14, a7, v16, (uint64_t)v75);
  char v74 = v14;
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v65 = v19;
  uint64_t v21 = sub_19E662760(v19, (uint64_t)v75);
  if (v7)
  {
LABEL_28:
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v22 = v21;
  uint64_t v23 = 0;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    uint64_t v59 = v16;
    uint64_t v60 = a3;
    uint64_t v61 = a1;
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v25 = v78;
    v71[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    if (v26)
    {
      int v57 = &v54;
      uint64_t v58 = v18;
      id v68 = v24;
      uint64_t v62 = 0;
      uint64_t v27 = 0;
      uint64_t v56 = v25;
      uint64_t v66 = v25 + 32;
      while (2)
      {
        uint64_t v31 = v27;
        uint64_t v32 = (unsigned __int8 *)(v66 + 16 * v27);
        uint64_t v33 = *(void *)v32;
        uint64_t v34 = v32[8];
        uint64_t v35 = *(void *)(*(void *)v32 + 16);
        if (v35)
        {
          uint64_t v72 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v36 = v33 + 32;
          do
          {
            v36 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v35;
          }
          while (v35);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v27 = v31 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v37 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v28 = 2147483656;
        switch(v34)
        {
          case 1:
            uint64_t v28 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v28 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v28 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v28 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v28 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v28 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v28 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v28 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v28 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v28 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v72 = 0;
            unint64_t v73 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v70) = 1;
            sub_19EBF7188();
            uint64_t v20 = (os_unfair_lock_s *)&v72;
            sub_19EBF67D8();
            int v55 = 0;
            uint64_t v54 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_28;
          default:
LABEL_6:
            uint64_t v72 = 0x5F7475706E69;
            unint64_t v73 = 0xE600000000000000;
            uint64_t v70 = v31;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v29 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v30 = objc_msgSend(v68, sel_placeholderWithShape_dataType_name_, v37, v28, v29);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v27 != v67) {
              continue;
            }
            char v38 = v74;
            uint64_t v18 = v58;
            uint64_t v23 = v62;
            id v24 = v68;
            break;
        }
        break;
      }
    }
    else
    {
      char v38 = (char)v68;
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = v71[0];
    swift_bridgeObjectRelease();
    id v40 = sub_19E645788(v24, v39, v63, v64, v38 & 1);
    uint64_t v62 = v23;
    if (!v23)
    {
      uint64_t v41 = (uint64_t)v40;
      uint64_t v42 = v76;
      uint64_t v43 = v77;
      __swift_project_boxed_opaque_existential_1(v75, v76);
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 24);
      id v45 = v24;
      uint64_t v72 = v44(v42, v43);
      unint64_t v73 = v46;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v75, v76);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v47 = v72;
      uint64_t v48 = v73;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v49 = swift_allocObject();
      sub_19E6624F0(v45, v39, v41, v47, v48);
      sub_19E62E830((uint64_t)v75, (uint64_t)&v72);
      uint64_t v50 = v65;
      uint64_t v51 = (os_unfair_lock_s *)(*(void *)(v65 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v51);
      sub_19E62E830((uint64_t)&v72, (uint64_t)v71);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = *(void *)(v50 + 24);
      *(void *)(v50 + 24) = 0x8000000000000000;
      sub_19E667FE4(v49, (uint64_t)v71, isUniquelyReferenced_nonNull_native);
      *(void *)(v50 + 24) = v69;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v71);
      swift_endAccess();
      os_unfair_lock_unlock(v51);
      sub_19E62E868((uint64_t)&v72);

      swift_release();
      a3 = v60;
      a1 = v61;
      uint64_t v16 = v59;
      goto LABEL_26;
    }
LABEL_29:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E660224);
  }
LABEL_26:
  sub_19E651308(*(void *)(a3 + 16), v18, v16, a1);
  swift_release();
  sub_19E62E868((uint64_t)v75);
  return v16;
}

uint64_t sub_19E660254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v14 = v13;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v61 = a4;
  int v62 = a5;
  sub_19E64F680(a4, a5, a6, v14, (uint64_t)v71);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  uint64_t v17 = sub_19E662760(v15, (uint64_t)v71);
  if (v6)
  {
LABEL_26:
    os_unfair_lock_unlock(v16);
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    uint64_t v54 = v15;
    uint64_t v55 = 0;
    uint64_t v56 = v14;
    uint64_t v57 = a3;
    uint64_t v58 = a1;
    uint64_t v59 = a6;
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v53 = &v51;
    uint64_t v20 = v74;
    v68[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v60 = v20;
    swift_bridgeObjectRetain();
    uint64_t v65 = v21;
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v64 = v60 + 32;
      while (2)
      {
        uint64_t v26 = v19;
        uint64_t v27 = v22;
        uint64_t v28 = (uint64_t *)(v64 + 16 * v22);
        uint64_t v29 = *v28;
        uint64_t v30 = *((unsigned __int8 *)v28 + 8);
        int v63 = *((unsigned __int8 *)v28 + 9);
        uint64_t v31 = *(void *)(v29 + 16);
        if (v31)
        {
          uint64_t v69 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v32 = v29 + 32;
          do
          {
            v32 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v31;
          }
          while (v31);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v22 = v27 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v33 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v23 = 2147483656;
        switch(v30)
        {
          case 1:
            uint64_t v23 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v23 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v23 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v23 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v23 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v23 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v23 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v23 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v23 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v23 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v69 = 0;
            unint64_t v70 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v16 = v50;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v67) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v52 = 0;
            uint64_t v51 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_26;
          default:
LABEL_6:
            uint64_t v69 = 0x5F7475706E69;
            unint64_t v70 = 0xE600000000000000;
            uint64_t v67 = v27;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            id v24 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v19 = v26;
            id v25 = objc_msgSend(v26, sel_placeholderWithShape_dataType_name_, v33, v23, v24);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v22 != v65) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v34 = v68[0];
    swift_bridgeObjectRelease();
    uint64_t v35 = v55;
    uint64_t v36 = sub_19E645908(v19, v34, v61, v62);
    if (!v35)
    {
      uint64_t v37 = (uint64_t)v36;
      uint64_t v38 = v72;
      uint64_t v39 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      id v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 24);
      id v41 = v19;
      uint64_t v69 = v40(v38, v39);
      unint64_t v70 = v42;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v43 = v69;
      uint64_t v44 = v70;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v45 = swift_allocObject();
      sub_19E6624F0(v41, v34, v37, v43, v44);
      sub_19E62E830((uint64_t)v71, (uint64_t)&v69);
      uint64_t v46 = v54;
      uint64_t v47 = (os_unfair_lock_s *)(*(void *)(v54 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      sub_19E62E830((uint64_t)&v69, (uint64_t)v68);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = *(void *)(v46 + 24);
      *(void *)(v46 + 24) = 0x8000000000000000;
      sub_19E667FE4(v45, (uint64_t)v68, isUniquelyReferenced_nonNull_native);
      *(void *)(v46 + 24) = v66;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v68);
      swift_endAccess();
      os_unfair_lock_unlock(v47);
      sub_19E62E868((uint64_t)&v69);

      swift_release();
      a1 = v58;
      a6 = v59;
      uint64_t v14 = v56;
      a3 = v57;
      goto LABEL_24;
    }
LABEL_27:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E66094CLL);
  }
LABEL_24:
  sub_19E651308(*(void *)(a3 + 16), a6, v14, a1);
  swift_release();
  sub_19E62E868((uint64_t)v71);
  return v14;
}

uint64_t sub_19E66097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  uint64_t v13 = v5;
  swift_release();
  swift_release();
  sub_19E669280(a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E64F970((_OWORD *)a4, a5, v12, (uint64_t)v64);
  char v14 = *(unsigned char *)(a4 + 16);
  long long v15 = *(_OWORD *)(a4 + 16);
  long long v60 = *(_OWORD *)a4;
  long long v61 = v15;
  long long v16 = *(_OWORD *)(a4 + 48);
  long long v62 = *(_OWORD *)(a4 + 32);
  long long v63 = v16;
  if (v14)
  {
    uint64_t v17 = *(void *)(a3 + 24);
    uint64_t v18 = (os_unfair_lock_s *)(*(void *)(v17 + 16) + 16);
    os_unfair_lock_lock(v18);
    uint64_t v19 = sub_19E662760(v17, (uint64_t)v64);
    if (v5)
    {
LABEL_26:
      os_unfair_lock_unlock(v18);
      __break(1u);
      JUMPOUT(0x19E660FC0);
    }
    uint64_t v20 = v19;
    uint64_t v13 = 0;
    os_unfair_lock_unlock(v18);
    if (v20) {
      goto LABEL_23;
    }
  }
  uint64_t v51 = v12;
  uint64_t v52 = a3;
  uint64_t v53 = a1;
  uint64_t v54 = a5;
  uint64_t v55 = v13;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
  uint64_t v22 = v67;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EBF70D8();
  uint64_t v23 = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  uint64_t v49 = v22;
  uint64_t v50 = &v47;
  if (v23)
  {
    uint64_t v24 = 0;
    uint64_t v25 = v22 + 41;
    while (2)
    {
      uint64_t v29 = v24++;
      uint64_t v26 = 2147483656;
      switch(*(unsigned char *)(v25 - 1))
      {
        case 1:
          uint64_t v26 = 8;
          goto LABEL_7;
        case 2:
          uint64_t v26 = 16;
          goto LABEL_7;
        case 3:
          uint64_t v26 = 32;
          goto LABEL_7;
        case 4:
          uint64_t v26 = 64;
          goto LABEL_7;
        case 5:
          uint64_t v26 = 536870920;
          goto LABEL_7;
        case 6:
          uint64_t v26 = 536870928;
          goto LABEL_7;
        case 7:
          uint64_t v26 = 536870944;
          goto LABEL_7;
        case 8:
          uint64_t v26 = 536870976;
          goto LABEL_7;
        case 9:
          uint64_t v26 = 268435472;
          goto LABEL_7;
        case 0xA:
          uint64_t v26 = 268435488;
          goto LABEL_7;
        case 0xB:
          *(void *)&long long v68 = 0;
          *((void *)&v68 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          uint64_t v18 = (os_unfair_lock_s *)&v68;
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19E6C1A2C(11);
          sub_19EBF67D8();
          swift_bridgeObjectRelease();
          sub_19EBF67D8();
          LOBYTE(v57[0]) = 1;
          sub_19EBF7188();
          sub_19EBF67D8();
          int v48 = 0;
          uint64_t v47 = 116;
          sub_19EBF71F8();
          __break(1u);
          goto LABEL_25;
        default:
LABEL_7:
          *(void *)&long long v68 = 0x5F7475706E69;
          *((void *)&v68 + 1) = 0xE600000000000000;
          v57[0] = v29;
          swift_bridgeObjectRetain();
          sub_19EBF7318();
          sub_19EBF67D8();
          swift_bridgeObjectRelease();
          uint64_t v27 = (void *)sub_19EBF6788();
          swift_bridgeObjectRelease();
          id v28 = objc_msgSend(v21, sel_placeholderWithShape_dataType_name_, 0, v26, v27);
          swift_bridgeObjectRelease();

          sub_19EBF70A8();
          sub_19EBF7108();
          sub_19EBF7118();
          sub_19EBF70B8();
          v25 += 16;
          if (v23 != v24) {
            continue;
          }
          goto LABEL_18;
      }
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v30 = v58;
  swift_bridgeObjectRelease();
  long long v68 = v60;
  long long v69 = v61;
  long long v70 = v62;
  long long v71 = v63;
  uint64_t v18 = (os_unfair_lock_s *)&v68;
  uint64_t v31 = v55;
  uint64_t v32 = sub_19E64B8AC(v21, v30);
  uint64_t v55 = v31;
  if (v31)
  {
LABEL_25:
    swift_unexpectedError();
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v33 = (uint64_t)v32;
  char v34 = v69;
  uint64_t v35 = v65;
  uint64_t v36 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
  id v38 = v21;
  uint64_t v58 = v37(v35, v36);
  uint64_t v59 = v39;
  sub_19EBF67D8();
  __swift_project_boxed_opaque_existential_1(v64, v65);
  sub_19EBF7318();
  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  type metadata accessor for MetalComputeStream.MPSGraphOperation();
  uint64_t v42 = swift_allocObject();
  sub_19E6624F0(v38, v30, v33, v40, v41);
  if (v34)
  {
    a3 = v52;
    uint64_t v43 = *(void *)(v52 + 24);
    sub_19E62E830((uint64_t)v64, (uint64_t)&v58);
    uint64_t v44 = (os_unfair_lock_s *)(*(void *)(v43 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v44);
    sub_19E62E830((uint64_t)&v58, (uint64_t)v57);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = *(void *)(v43 + 24);
    *(void *)(v43 + 24) = 0x8000000000000000;
    sub_19E667FE4(v42, (uint64_t)v57, isUniquelyReferenced_nonNull_native);
    *(void *)(v43 + 24) = v56;
    swift_bridgeObjectRelease();
    sub_19E62E868((uint64_t)v57);
    swift_endAccess();
    os_unfair_lock_unlock(v44);
    sub_19E62E868((uint64_t)&v58);

    swift_release();
    a1 = v53;
    a5 = v54;
  }
  else
  {

    a1 = v53;
    a5 = v54;
    a3 = v52;
  }
  uint64_t v12 = v51;
LABEL_23:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v64);
  return v12;
}

uint64_t sub_19E660FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = a6;
  sub_19E64FC84(a4, a5, a6, a7, a8, v18, (uint64_t)v66);
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v21 = sub_19E662760(v19, (uint64_t)v66);
  if (v8)
  {
LABEL_21:
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    int v52 = a7;
    uint64_t v53 = v19;
    uint64_t v54 = v18;
    uint64_t v60 = 0;
    uint64_t v55 = a3;
    uint64_t v56 = a1;
    uint64_t v57 = a8;
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v51 = &v49;
    uint64_t v24 = v69;
    v63[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v58 = v24;
    swift_bridgeObjectRetain();
    if (v25)
    {
      uint64_t v26 = 0;
      uint64_t v27 = v58 + 41;
      while (2)
      {
        uint64_t v31 = v26++;
        uint64_t v28 = 2147483656;
        switch(*(unsigned char *)(v27 - 1))
        {
          case 1:
            uint64_t v28 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v28 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v28 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v28 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v28 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v28 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v28 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v28 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v28 = 268435472;
            goto LABEL_6;
          case 0xA:
            uint64_t v28 = 268435488;
            goto LABEL_6;
          case 0xB:
            uint64_t v64 = 0;
            unint64_t v65 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v20 = v48;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v62) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v50 = 0;
            uint64_t v49 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_21;
          default:
LABEL_6:
            uint64_t v64 = 0x5F7475706E69;
            unint64_t v65 = 0xE600000000000000;
            uint64_t v62 = v31;
            swift_bridgeObjectRetain();
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v29 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v30 = objc_msgSend(v23, sel_placeholderWithShape_dataType_name_, 0, v28, v29);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            v27 += 16;
            if (v25 != v26) {
              continue;
            }
            goto LABEL_17;
        }
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v32 = v63[0];
    swift_bridgeObjectRelease();
    uint64_t v33 = v60;
    uint64_t v34 = sub_19E64B00C(v23, v32, v59, v52);
    uint64_t v60 = v33;
    if (!v33)
    {
      uint64_t v35 = v34;
      uint64_t v36 = v67;
      uint64_t v37 = v68;
      __swift_project_boxed_opaque_existential_1(v66, v67);
      id v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
      id v39 = v23;
      uint64_t v64 = v38(v36, v37);
      unint64_t v65 = v40;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v66, v67);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v41 = v64;
      uint64_t v42 = v65;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v43 = swift_allocObject();
      sub_19E6624F0(v39, v32, v35, v41, v42);
      sub_19E62E830((uint64_t)v66, (uint64_t)&v64);
      uint64_t v44 = v53;
      uint64_t v45 = (os_unfair_lock_s *)(*(void *)(v53 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      sub_19E62E830((uint64_t)&v64, (uint64_t)v63);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v61 = *(void *)(v44 + 24);
      *(void *)(v44 + 24) = 0x8000000000000000;
      sub_19E667FE4(v43, (uint64_t)v63, isUniquelyReferenced_nonNull_native);
      *(void *)(v44 + 24) = v61;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v63);
      swift_endAccess();
      os_unfair_lock_unlock(v45);
      sub_19E62E868((uint64_t)&v64);

      swift_release();
      a1 = v56;
      a8 = v57;
      uint64_t v18 = v54;
      a3 = v55;
      goto LABEL_19;
    }
LABEL_22:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E661634);
  }
LABEL_19:
  sub_19E651308(*(void *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19E62E868((uint64_t)v66);
  return v18;
}

uint64_t sub_19E661664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  long long v13 = *(_OWORD *)(a4 + 8);
  long long v75 = *(_OWORD *)(a4 + 24);
  long long v76 = v13;
  sub_19E668FC4((uint64_t)&v76);
  sub_19E668FC4((uint64_t)&v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E6502B0(a4, a5, v12, v71);
  long long v14 = *(_OWORD *)(a4 + 16);
  long long v68 = *(_OWORD *)a4;
  long long v69 = v14;
  uint64_t v70 = *(void *)(a4 + 32);
  uint64_t v15 = *(void *)(a3 + 24);
  long long v16 = (os_unfair_lock_s *)(*(void *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  uint64_t v17 = sub_19E662760(v15, (uint64_t)v71);
  if (v5)
  {
LABEL_26:
    os_unfair_lock_unlock(v16);
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    uint64_t v54 = v15;
    uint64_t v55 = 0;
    uint64_t v56 = v12;
    uint64_t v57 = a3;
    uint64_t v58 = a1;
    uint64_t v59 = a5;
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    uint64_t v53 = &v51;
    uint64_t v20 = v74;
    v65[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v60 = v20;
    swift_bridgeObjectRetain();
    uint64_t v63 = v21;
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v62 = v60 + 32;
      while (2)
      {
        uint64_t v26 = v22;
        uint64_t v27 = (uint64_t *)(v62 + 16 * v22);
        uint64_t v28 = *v27;
        uint64_t v29 = *((unsigned __int8 *)v27 + 8);
        int v61 = *((unsigned __int8 *)v27 + 9);
        uint64_t v30 = *(void *)(v28 + 16);
        if (v30)
        {
          uint64_t v66 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v31 = v28 + 32;
          do
          {
            v31 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v30;
          }
          while (v30);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v22 = v26 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v32 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v23 = 2147483656;
        switch(v29)
        {
          case 1:
            uint64_t v23 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v23 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v23 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v23 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v23 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v23 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v23 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v23 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v23 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v23 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v66 = 0;
            unint64_t v67 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            long long v16 = v50;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v77) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v52 = 0;
            uint64_t v51 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_26;
          default:
LABEL_6:
            uint64_t v66 = 0x5F7475706E69;
            unint64_t v67 = 0xE600000000000000;
            *(void *)&long long v77 = v26;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v24 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v25 = objc_msgSend(v19, sel_placeholderWithShape_dataType_name_, v32, v23, v24);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v22 != v63) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = v65[0];
    swift_bridgeObjectRelease();
    long long v77 = v68;
    long long v78 = v69;
    uint64_t v79 = v70;
    uint64_t v34 = v55;
    uint64_t v35 = sub_19E64BDD0(v19, v33);
    if (!v34)
    {
      uint64_t v36 = (uint64_t)v35;
      uint64_t v37 = v19;
      uint64_t v38 = v72;
      uint64_t v39 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      unint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 24);
      id v41 = v37;
      uint64_t v66 = v40(v38, v39);
      unint64_t v67 = v42;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v43 = v66;
      uint64_t v44 = v67;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v45 = swift_allocObject();
      sub_19E6624F0(v41, v33, v36, v43, v44);
      sub_19E62E830((uint64_t)v71, (uint64_t)&v66);
      uint64_t v46 = v54;
      uint64_t v47 = (os_unfair_lock_s *)(*(void *)(v54 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      sub_19E62E830((uint64_t)&v66, (uint64_t)v65);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v64 = *(void *)(v46 + 24);
      *(void *)(v46 + 24) = 0x8000000000000000;
      sub_19E667FE4(v45, (uint64_t)v65, isUniquelyReferenced_nonNull_native);
      *(void *)(v46 + 24) = v64;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v65);
      swift_endAccess();
      os_unfair_lock_unlock(v47);
      sub_19E62E868((uint64_t)&v66);

      swift_release();
      a1 = v58;
      a5 = v59;
      uint64_t v12 = v56;
      a3 = v57;
      goto LABEL_24;
    }
LABEL_27:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E661D7CLL);
  }
LABEL_24:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v71);
  return v12;
}

uint64_t sub_19E661DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_retain();
  sub_19E668B90(a2, a3, a1);
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E650604(a4, a5, v12, v71);
  long long v13 = *(_OWORD *)(a4 + 16);
  long long v67 = *(_OWORD *)a4;
  long long v68 = v13;
  long long v69 = *(_OWORD *)(a4 + 32);
  uint64_t v70 = *(void *)(a4 + 48);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = (os_unfair_lock_s *)(*(void *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = sub_19E662760(v14, (uint64_t)v71);
  if (v5)
  {
LABEL_26:
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    uint64_t v53 = v14;
    uint64_t v54 = 0;
    uint64_t v55 = v12;
    uint64_t v56 = a3;
    uint64_t v57 = a1;
    uint64_t v58 = a5;
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A28]), sel_init);
    int v52 = &v50;
    uint64_t v19 = v74;
    v64[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v59 = v19;
    swift_bridgeObjectRetain();
    uint64_t v62 = v20;
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v61 = v59 + 32;
      while (2)
      {
        id v25 = v18;
        uint64_t v26 = v21;
        uint64_t v27 = (uint64_t *)(v61 + 16 * v21);
        uint64_t v28 = *v27;
        uint64_t v29 = *((unsigned __int8 *)v27 + 8);
        int v60 = *((unsigned __int8 *)v27 + 9);
        uint64_t v30 = *(void *)(v28 + 16);
        if (v30)
        {
          uint64_t v65 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_19EBF70D8();
          uint64_t v31 = v28 + 32;
          do
          {
            v31 += 8;
            sub_19EBF6B38();
            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            --v30;
          }
          while (v30);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v21 = v26 + 1;
        sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
        uint64_t v32 = (void *)sub_19EBF68D8();
        swift_bridgeObjectRelease();
        uint64_t v22 = 2147483656;
        switch(v29)
        {
          case 1:
            uint64_t v22 = 8;
            goto LABEL_6;
          case 2:
            uint64_t v22 = 16;
            goto LABEL_6;
          case 3:
            uint64_t v22 = 32;
            goto LABEL_6;
          case 4:
            uint64_t v22 = 64;
            goto LABEL_6;
          case 5:
            uint64_t v22 = 536870920;
            goto LABEL_6;
          case 6:
            uint64_t v22 = 536870928;
            goto LABEL_6;
          case 7:
            uint64_t v22 = 536870944;
            goto LABEL_6;
          case 8:
            uint64_t v22 = 536870976;
            goto LABEL_6;
          case 9:
            uint64_t v22 = 268435472;
            goto LABEL_6;
          case 10:
            uint64_t v22 = 268435488;
            goto LABEL_6;
          case 11:
            uint64_t v65 = 0;
            unint64_t v66 = 0xE000000000000000;
            sub_19EBF6FE8();
            sub_19EBF67D8();
            sub_19E6C1A2C(11);
            uint64_t v15 = v49;
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            sub_19EBF67D8();
            LOBYTE(v75) = 1;
            sub_19EBF7188();
            sub_19EBF67D8();
            int v51 = 0;
            uint64_t v50 = 116;
            sub_19EBF71F8();
            __break(1u);
            goto LABEL_26;
          default:
LABEL_6:
            uint64_t v65 = 0x5F7475706E69;
            unint64_t v66 = 0xE600000000000000;
            *(void *)&long long v75 = v26;
            sub_19EBF7318();
            sub_19EBF67D8();
            swift_bridgeObjectRelease();
            uint64_t v23 = (void *)sub_19EBF6788();
            swift_bridgeObjectRelease();
            id v18 = v25;
            id v24 = objc_msgSend(v25, sel_placeholderWithShape_dataType_name_, v32, v22, v23);
            swift_bridgeObjectRelease();

            sub_19EBF70A8();
            sub_19EBF7108();
            sub_19EBF7118();
            sub_19EBF70B8();
            if (v21 != v62) {
              continue;
            }
            goto LABEL_22;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v33 = v64[0];
    swift_bridgeObjectRelease();
    long long v75 = v67;
    long long v76 = v68;
    long long v77 = v69;
    uint64_t v78 = v70;
    uint64_t v34 = v54;
    uint64_t v35 = sub_19E6477D4(v18, v33);
    if (!v34)
    {
      uint64_t v36 = (uint64_t)v35;
      uint64_t v37 = v72;
      uint64_t v38 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 24);
      id v40 = v18;
      uint64_t v65 = v39(v37, v38);
      unint64_t v66 = v41;
      sub_19EBF67D8();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      uint64_t v42 = v65;
      uint64_t v43 = v66;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      uint64_t v44 = swift_allocObject();
      sub_19E6624F0(v40, v33, v36, v42, v43);
      sub_19E62E830((uint64_t)v71, (uint64_t)&v65);
      uint64_t v45 = v53;
      uint64_t v46 = (os_unfair_lock_s *)(*(void *)(v53 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v46);
      sub_19E62E830((uint64_t)&v65, (uint64_t)v64);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v63 = *(void *)(v45 + 24);
      *(void *)(v45 + 24) = 0x8000000000000000;
      sub_19E667FE4(v44, (uint64_t)v64, isUniquelyReferenced_nonNull_native);
      *(void *)(v45 + 24) = v63;
      swift_bridgeObjectRelease();
      sub_19E62E868((uint64_t)v64);
      swift_endAccess();
      os_unfair_lock_unlock(v46);
      sub_19E62E868((uint64_t)&v65);

      swift_release();
      a1 = v57;
      a5 = v58;
      uint64_t v12 = v55;
      a3 = v56;
      goto LABEL_24;
    }
LABEL_27:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19E6624C0);
  }
LABEL_24:
  sub_19E651308(*(void *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19E62E868((uint64_t)v71);
  return v12;
}

void *sub_19E6624F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  long long v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F35A30]);
  id v8 = a1;
  id v9 = objc_msgSend(v7, sel_init);
  objc_msgSend(v9, sel_setWaitForCompilationCompletion_, 0);
  objc_msgSend(v9, sel_setAllowedComputeDevices_, 1);
  objc_msgSend(v9, sel_setCompilerOptions_, 0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35A70]), sel_init);
  v5[7] = v10;
  id v11 = v10;
  id v12 = v9;
  objc_msgSend(v11, sel_setCompilationDescriptor_, v12);

  return v5;
}

uint64_t sub_19E6625D8()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_19E612FF8(v0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19E662630(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_19E662690()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t type metadata accessor for MetalComputeStream.MPSGraphOperation()
{
  return self;
}

uint64_t sub_19E66270C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19E662760(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 24);
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_19E66298C(a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_19E6627EC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for MetalComputeStream.Cache()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_19E662844(uint64_t a1, uint64_t a2)
{
  sub_19EBF7478();
  sub_19EBF67C8();
  uint64_t v4 = sub_19EBF74B8();

  return sub_19E662CD0(a1, a2, v4);
}

unint64_t sub_19E6628BC(uint64_t a1)
{
  uint64_t v2 = sub_19EBF7468();
  return sub_19E6633F4(a1, v2);
}

unint64_t sub_19E6628F8(void *a1, char a2)
{
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7488();
  id v4 = a1;
  sub_19EBF6DF8();

  uint64_t v5 = sub_19EBF74B8();

  return sub_19E662DB4(a1, a2, v5);
}

uint64_t sub_19E66298C(uint64_t a1)
{
  sub_19EBF7478();
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_19EBF6698();
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    char v5 = *(unsigned char *)(a1 + 56);
    uint64_t v6 = v2 + 32;
    do
    {
      if ((v5 & 1) == 0)
      {
        uint64_t v7 = *(void *)(v6 + 16 * v4);
        sub_19EBF7488();
        uint64_t v8 = *(void *)(v7 + 16);
        if (v8)
        {
          uint64_t v9 = v7 + 32;
          do
          {
            v9 += 8;
            sub_19EBF7488();
            --v8;
          }
          while (v8);
        }
      }
      ++v4;
      sub_19EBF7488();
    }
    while (v4 != v3);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = 0;
    char v13 = *(unsigned char *)(a1 + 56);
    uint64_t v14 = v10 + 32;
    do
    {
      if ((v13 & 1) == 0)
      {
        uint64_t v15 = *(void *)(v14 + 16 * v12);
        sub_19EBF7488();
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          uint64_t v17 = v15 + 32;
          do
          {
            v17 += 8;
            sub_19EBF7488();
            --v16;
          }
          while (v16);
        }
      }
      ++v12;
      sub_19EBF7488();
    }
    while (v12 != v11);
  }
  uint64_t v18 = sub_19EBF74B8();

  return sub_19E662EF4((void *)a1, v18);
}

unint64_t sub_19E662B10(uint64_t a1)
{
  uint64_t v2 = sub_19EBF6DD8();
  return sub_19E663490(a1, v2, (unint64_t *)&qword_1E945BB10);
}

unint64_t sub_19E662B60(uint64_t a1)
{
  uint64_t v2 = sub_19EBF6DD8();
  return sub_19E663490(a1, v2, &qword_1E945CB40);
}

unint64_t sub_19E662BB0(uint64_t a1)
{
  sub_19EBF7478();
  type metadata accessor for CFString(0);
  sub_19E669530();
  sub_19EBF63E8();
  uint64_t v2 = sub_19EBF74B8();

  return sub_19E6635A4(a1, v2);
}

unint64_t sub_19E662C34(uint64_t a1, uint64_t a2)
{
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7498();
  if (a2) {
    sub_19EBF7488();
  }
  uint64_t v4 = sub_19EBF74B8();

  return sub_19E6636D0(a1, a2, v4);
}

unint64_t sub_19E662CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_19EBF7388() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_19EBF7388() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_19E662DB4(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    uint64_t v10 = ~v5;
    do
    {
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v6;
      uint64_t v15 = *(void **)v14;
      int v16 = *(unsigned __int8 *)(v14 + 8);
      if (v16)
      {
        if (v16 == 1)
        {
          if (a2 == 1) {
            goto LABEL_3;
          }
        }
        else if (a2 == 2)
        {
LABEL_3:
          sub_19E64A9C0(0, (unint64_t *)&qword_1E945C8A0);
          id v11 = v15;
          id v12 = a1;
          char v13 = sub_19EBF6DE8();

          if (v13) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_3;
      }
      unint64_t v6 = (v6 + 1) & v10;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_19E662EF4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v6 = v2;
  uint64_t v8 = ~v4;
  uint64_t v51 = ~v4;
  while (1)
  {
    sub_19E62E830(*(void *)(v6 + 48) + (v5 << 6), (uint64_t)v61);
    uint64_t v9 = v62;
    uint64_t v10 = a1[5];
    if (*(void *)(v62 + 16) != *(void *)(v10 + 16)) {
      goto LABEL_30;
    }
    if (*(void *)(v63 + 16) != *(void *)(a1[6] + 16)) {
      goto LABEL_30;
    }
    __swift_project_boxed_opaque_existential_1(v61, v61[3]);
    uint64_t v11 = sub_19EBF66A8();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    if (v11 != sub_19EBF66A8()) {
      goto LABEL_30;
    }
    uint64_t v58 = *(void *)(v9 + 16);
    if (!v58) {
      break;
    }
    uint64_t v55 = *(void *)(v10 + 16);
    if (!v55) {
      break;
    }
    int v12 = *(unsigned __int8 *)(v9 + 40);
    char v13 = *(void **)(v9 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v14 = 0;
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = v10 + 32 + 16 * v14;
      unint64_t v14 = v15;
      uint64_t v17 = *(void **)v16;
      int v18 = *(unsigned __int8 *)(v16 + 8);
      int v19 = v64;
      sub_19E62E830((uint64_t)a1, (uint64_t)v59);
      if (v19 == 1)
      {
        char v20 = v60;
        swift_bridgeObjectRetain();
        sub_19E62E868((uint64_t)v59);
        if (v20) {
          goto LABEL_18;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_19E62E868((uint64_t)v59);
      }
      uint64_t v21 = v13[2];
      if (v21 != v17[2]) {
        goto LABEL_28;
      }
      if (v21 && v13 != v17)
      {
        if (v13[4] != v17[4]) {
          goto LABEL_28;
        }
        if (v21 != 1) {
          break;
        }
      }
LABEL_18:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v12 != v18) {
        goto LABEL_29;
      }
      if (v14 == v58) {
        goto LABEL_33;
      }
      if (v14 >= *(void *)(v9 + 16)) {
        goto LABEL_64;
      }
      if (v14 == v55)
      {
LABEL_33:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_34;
      }
      uint64_t v15 = v14 + 1;
      uint64_t v23 = v9 + 32 + 16 * v14;
      int v12 = *(unsigned __int8 *)(v23 + 8);
      char v13 = *(void **)v23;
      unint64_t v24 = *(void *)(v10 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      if (v14 >= v24) {
        goto LABEL_65;
      }
    }
    if (v13[5] == v17[5])
    {
      id v25 = v13 + 6;
      uint64_t v26 = v17 + 6;
      uint64_t v27 = v21 - 2;
      while (v27)
      {
        uint64_t v29 = *v25++;
        uint64_t v28 = v29;
        uint64_t v30 = *v26++;
        --v27;
        if (v28 != v30) {
          goto LABEL_28;
        }
      }
      goto LABEL_18;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v52;
    uint64_t v6 = v53;
    uint64_t v8 = v51;
LABEL_30:
    sub_19E62E868((uint64_t)v61);
LABEL_31:
    unint64_t v5 = (v5 + 1) & v8;
    if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
LABEL_34:
  uint64_t v31 = v63;
  uint64_t v57 = *(void *)(v63 + 16);
  if (!v57 || (uint64_t v32 = a1[6], (v56 = *(void *)(v32 + 16)) == 0))
  {
LABEL_60:
    sub_19E62E868((uint64_t)v61);
    return v5;
  }
  uint64_t v54 = v63 + 32;
  int v33 = *(unsigned __int8 *)(v63 + 40);
  uint64_t v34 = *(void **)(v63 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v35 = 0;
  uint64_t v36 = 1;
  while (2)
  {
    uint64_t v37 = v32 + 32 + 16 * v35;
    unint64_t v35 = v36;
    uint64_t v38 = *(void **)v37;
    int v39 = *(unsigned __int8 *)(v37 + 8);
    int v40 = v64;
    sub_19E62E830((uint64_t)a1, (uint64_t)v59);
    if (v40 == 1)
    {
      char v41 = v60;
      swift_bridgeObjectRetain();
      sub_19E62E868((uint64_t)v59);
      if (v41) {
        goto LABEL_46;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_19E62E868((uint64_t)v59);
    }
    uint64_t v42 = v34[2];
    if (v42 != v38[2]) {
      goto LABEL_56;
    }
    if (v42 && v34 != v38)
    {
      if (v34[4] != v38[4]) {
        goto LABEL_56;
      }
      if (v42 != 1)
      {
        if (v34[5] != v38[5])
        {
LABEL_56:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_57:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_19E62E868((uint64_t)v61);
          uint64_t v3 = v52;
          uint64_t v6 = v53;
          uint64_t v8 = v51;
          goto LABEL_31;
        }
        uint64_t v45 = v34 + 6;
        uint64_t v46 = v38 + 6;
        uint64_t v47 = v42 - 2;
        while (v47)
        {
          uint64_t v49 = *v45++;
          uint64_t v48 = v49;
          uint64_t v50 = *v46++;
          --v47;
          if (v48 != v50) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v33 != v39) {
      goto LABEL_57;
    }
    if (v35 == v57)
    {
LABEL_59:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_60;
    }
    if (v35 < *(void *)(v31 + 16))
    {
      if (v35 == v56) {
        goto LABEL_59;
      }
      uint64_t v36 = v35 + 1;
      uint64_t v43 = v54 + 16 * v35;
      int v33 = *(unsigned __int8 *)(v43 + 8);
      uint64_t v34 = *(void **)v43;
      unint64_t v44 = *(void *)(v32 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      if (v35 >= v44) {
        goto LABEL_63;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

unint64_t sub_19E6633F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_19E663490(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_19E64A9C0(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_19EBF6DE8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_19EBF6DE8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_19E6635A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_19E669530();
    id v7 = v6;
    char v8 = sub_19EBF63D8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_19EBF63D8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_19E6636D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      char v8 = (void *)(*(void *)(v3 + 48) + 16 * result);
      if (*v8 == a1)
      {
        uint64_t v9 = v8[1];
        if (v9)
        {
          if (a2 && v9 == a2) {
            return result;
          }
        }
        else if (!a2)
        {
          return result;
        }
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_19E66375C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE08);
  uint64_t v6 = (void *)sub_19EBF7248();
  if (*(void *)(v5 + 16))
  {
    id v25 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    char v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        if (__OFADD__(v13++, 1)) {
          goto LABEL_30;
        }
        if (v13 >= v11)
        {
LABEL_21:
          swift_release();
          if (a2)
          {
            uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
            if (v24 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *char v8 = -1 << v24;
            }
            *(void *)(v5 + 16) = 0;
          }
          uint64_t result = swift_release();
          uint64_t v3 = v25;
          goto LABEL_28;
        }
        unint64_t v18 = v8[v13];
        if (!v18)
        {
          int64_t v19 = v13 + 1;
          if (v13 + 1 >= v11) {
            goto LABEL_21;
          }
          unint64_t v18 = v8[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v13 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                break;
              }
              if (v13 >= v11) {
                goto LABEL_21;
              }
              unint64_t v18 = v8[v13];
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
            __break(1u);
LABEL_30:
            __break(1u);
            return result;
          }
          ++v13;
        }
LABEL_18:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      uint64_t v21 = *(void **)v20;
      char v22 = *(unsigned char *)(v20 + 8);
      uint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
      if (a2)
      {
        sub_19E5FE188(v23, (uint64_t)v26);
      }
      else
      {
        sub_19E5FE124((uint64_t)v23, (uint64_t)v26);
        id v14 = v21;
      }
      uint64_t result = sub_19E665F60(v21, v22, v26, v6);
    }
  }
  uint64_t result = swift_release();
LABEL_28:
  void *v3 = v6;
  return result;
}

uint64_t sub_19E66395C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE30);
  uint64_t result = sub_19EBF7248();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_19EBF7468();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E663C08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C120);
  char v37 = a2;
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_19EBF7478();
    sub_19EBF67C8();
    uint64_t result = sub_19EBF74B8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E663F10(uint64_t a1, char a2)
{
  return sub_19E664A30(a1, a2, (uint64_t *)&unk_1E945CE20);
}

uint64_t sub_19E663F1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CC10);
  uint64_t result = sub_19EBF7248();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    BOOL v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      uint64_t result = sub_19EBF7468();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

void sub_19E6641E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC20);
  uint64_t v6 = (void *)sub_19EBF7248();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
                if (v23 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v23;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v12];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      unint64_t v19 = (long long *)(*(void *)(v5 + 48) + (v15 << 6));
      if (a2)
      {
        long long v20 = *v19;
        long long v21 = v19[1];
        long long v22 = v19[2];
        *(_OWORD *)&v25[9] = *(long long *)((char *)v19 + 41);
        v24[1] = v21;
        *(_OWORD *)unint64_t v25 = v22;
        v24[0] = v20;
        uint64_t v13 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      }
      else
      {
        sub_19E62E830((uint64_t)v19, (uint64_t)v24);
        uint64_t v13 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
        swift_retain();
      }
      sub_19E666050((uint64_t)v24, v13, v6);
    }
  }
  swift_release();
  void *v3 = v6;
}

uint64_t sub_19E6643F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDF0);
  char v40 = a2;
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = (long long *)(*(void *)(v5 + 56) + 48 * v21);
    long long v43 = v33[1];
    long long v41 = *v33;
    long long v42 = v33[2];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v34 = (id)v42;
      id v35 = *((id *)&v42 + 1);
    }
    sub_19EBF7478();
    sub_19EBF67C8();
    uint64_t result = sub_19EBF74B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v32;
    v18[1] = v31;
    unint64_t v19 = (_OWORD *)(*(void *)(v7 + 56) + 48 * v17);
    _OWORD *v19 = v41;
    v19[1] = v43;
    v19[2] = v42;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E664778(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CCA0);
  uint64_t result = sub_19EBF7248();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_19EBF7468();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E664A30(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_19EBF7248();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  char v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    char v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    int64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_19EBF6DD8();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  char v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_19E664D00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDE0);
  char v38 = a2;
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_19EBF7478();
    sub_19EBF67C8();
    uint64_t result = sub_19EBF74B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E665010(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDD8);
  char v41 = a2;
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v40 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v39) {
          goto LABEL_33;
        }
        unint64_t v24 = v40[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v39) {
            goto LABEL_33;
          }
          unint64_t v24 = v40[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v39)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v41)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
                if (v38 >= 64) {
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v40 = -1 << v38;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v40[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v24 = v40[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v34 = *(void *)(v5 + 56) + v30;
      int64_t v36 = *(void **)v34;
      uint64_t v35 = *(void *)(v34 + 8);
      if ((v41 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        id v37 = v36;
      }
      sub_19EBF7478();
      sub_19EBF67C8();
      uint64_t result = sub_19EBF74B8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 16 * v17;
      unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      void *v19 = v33;
      v19[1] = v32;
      unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
      *unint64_t v20 = v36;
      v20[1] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E665328(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDD0);
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_19E5E29A8(v24, v35);
      }
      else
      {
        sub_19E5E29B8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_19EBF7478();
      sub_19EBF67C8();
      uint64_t result = sub_19EBF74B8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_19E5E29A8(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E665628(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDC8);
  char v37 = a2;
  uint64_t v6 = sub_19EBF7248();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_19EBF7478();
    sub_19EBF67C8();
    uint64_t result = sub_19EBF74B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_19E66593C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDE8);
  char v33 = a2;
  uint64_t result = sub_19EBF7248();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v32 = (void *)(v4 + 64);
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v4 + 64;
        if (v16 >= v31) {
          goto LABEL_35;
        }
        unint64_t v17 = v32[v16];
        ++v7;
        if (!v17)
        {
          int64_t v7 = v16 + 1;
          if (v16 + 1 >= v31) {
            goto LABEL_35;
          }
          unint64_t v17 = v32[v7];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v31)
            {
LABEL_35:
              if (v33)
              {
                uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
                if (v30 >= 64) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v32[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v7 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_43;
                }
                if (v7 >= v31) {
                  goto LABEL_35;
                }
                unint64_t v17 = v32[v7];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v7 = v18;
          }
        }
LABEL_21:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = *(void *)(*(void *)(v4 + 56) + 8 * v15);
      if ((v33 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_19EBF7478();
      sub_19EBF7488();
      sub_19EBF7498();
      if (v20) {
        sub_19EBF7488();
      }
      uint64_t result = sub_19EBF74B8();
      uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v6 + 48) + 16 * v12);
      void *v13 = v21;
      v13[1] = v20;
      *(void *)(*(void *)(v6 + 56) + 8 * v12) = v22;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_19E665C48(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDF8);
  char v6 = a2;
  uint64_t v7 = sub_19EBF7248();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      int64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v38 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v34 = *((id *)&v38 + 1);
      }
      sub_19EBF7478();
      sub_19EBF67C8();
      uint64_t result = sub_19EBF74B8();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *uint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v38;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_19E665F60(void *a1, char a2, long long *a3, void *a4)
{
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7488();
  id v8 = a1;
  sub_19EBF6DF8();

  sub_19EBF74B8();
  unint64_t v9 = sub_19EBF6F98();
  *(void *)((char *)a4 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  uint64_t v10 = a4[6] + 16 * v9;
  *(void *)uint64_t v10 = a1;
  *(unsigned char *)(v10 + 8) = a2;
  uint64_t result = sub_19E5FE188(a3, a4[7] + 40 * v9);
  ++a4[2];
  return result;
}

__n128 sub_19E666050(uint64_t a1, uint64_t a2, void *a3)
{
  sub_19EBF7478();
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_19EBF6698();
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = 0;
    char v8 = *(unsigned char *)(a1 + 56);
    uint64_t v9 = v5 + 32;
    do
    {
      if ((v8 & 1) == 0)
      {
        uint64_t v10 = *(void *)(v9 + 16 * v7);
        sub_19EBF7488();
        uint64_t v11 = *(void *)(v10 + 16);
        if (v11)
        {
          uint64_t v12 = v10 + 32;
          do
          {
            v12 += 8;
            sub_19EBF7488();
            --v11;
          }
          while (v11);
        }
      }
      ++v7;
      sub_19EBF7488();
    }
    while (v7 != v6);
  }
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = 0;
    char v16 = *(unsigned char *)(a1 + 56);
    uint64_t v17 = v13 + 32;
    do
    {
      if ((v16 & 1) == 0)
      {
        uint64_t v18 = *(void *)(v17 + 16 * v15);
        sub_19EBF7488();
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19)
        {
          uint64_t v20 = v18 + 32;
          do
          {
            v20 += 8;
            sub_19EBF7488();
            --v19;
          }
          while (v19);
        }
      }
      ++v15;
      sub_19EBF7488();
    }
    while (v15 != v14);
  }
  sub_19EBF74B8();
  unint64_t v21 = sub_19EBF6F98();
  *(void *)((char *)a3 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v21;
  unint64_t v22 = a3[6] + (v21 << 6);
  __n128 result = *(__n128 *)a1;
  long long v24 = *(_OWORD *)(a1 + 16);
  long long v25 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v22 + 41) = *(_OWORD *)(a1 + 41);
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = v25;
  *(__n128 *)unint64_t v22 = result;
  *(void *)(a3[7] + 8 * v21) = a2;
  ++a3[2];
  return result;
}

id sub_19E666234()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (id)swift_release();
LABEL_26:
    *uint64_t v1 = v4;
    return result;
  }
  long long v25 = v1;
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_28;
    }
    if (v9 >= v13)
    {
LABEL_24:
      id result = (id)swift_release();
      uint64_t v1 = v25;
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void **)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = 40 * v15;
    sub_19E5FE124(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v19;
    sub_19E5FE188(v26, *(void *)(v4 + 56) + v20);
    id result = v18;
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E66640C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E66659C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C120);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E66674C()
{
  return sub_19E666EA0((uint64_t *)&unk_1E945CE20);
}

void *sub_19E666758()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CC10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E666904()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CC20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    sub_19E62E830(*(void *)(v2 + 48) + (v15 << 6), (uint64_t)v24);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = (_OWORD *)(*(void *)(v4 + 48) + (v15 << 6));
    long long v18 = *(_OWORD *)&v25[9];
    long long v20 = v24[1];
    long long v19 = *(_OWORD *)v25;
    _OWORD *v17 = v24[0];
    v17[1] = v20;
    v17[2] = v19;
    *(_OWORD *)((char *)v17 + 41) = v18;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E666AE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    int64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    long long v23 = *v21;
    long long v29 = v21[1];
    long long v30 = v21[2];
    *unint64_t v22 = v19;
    v22[1] = v18;
    int64_t v24 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    *int64_t v24 = v23;
    v24[1] = v29;
    _OWORD v24[2] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = (id)v30;
    id result = *((id *)&v30 + 1);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E666CFC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CCA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E666EA0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_19EBF7238();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    unint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E667040()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    id v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E6671F4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    int64_t v22 = *(void **)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v18;
    v23[1] = v19;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v22;
    v24[1] = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E6673C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_19E5E29B8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_19E5E29A8(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19E6675A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19E667764()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19E667914()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_19EBF7238();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = *((id *)&v24 + 1);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19E667AE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CC18);
    uint64_t v2 = sub_19EBF7258();
    uint64_t v18 = v2;
    sub_19EBF71B8();
    uint64_t v3 = sub_19EBF71D8();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_19E64A9C0(0, &qword_1E945CB40);
      do
      {
        swift_dynamicCast();
        sub_19E64A9C0(0, &qword_1E945CC00);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_19E664A30(v12 + 1, 1, &qword_1E945CC18);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_19EBF6DD8();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_19EBF71D8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

id sub_19E667D40(long long *a1, void *a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_19E6628F8(a2, a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 < v14 || (a4 & 1) == 0)
  {
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_19E666234();
      goto LABEL_7;
    }
    sub_19E66375C(v14, a4 & 1);
    unint64_t v20 = sub_19E6628F8(a2, a3);
    if ((v15 & 1) == (v21 & 1))
    {
      unint64_t v11 = v20;
      uint64_t v17 = *v5;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    id result = (id)sub_19EBF7408();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v17 = *v5;
  if (v15)
  {
LABEL_8:
    uint64_t v18 = v17[7] + 40 * v11;
    __swift_destroy_boxed_opaque_existential_0(v18);
    return (id)sub_19E5FE188(a1, v18);
  }
LABEL_13:
  sub_19E668824(v11, (uint64_t)a2, a3, a1, v17);

  return a2;
}

uint64_t sub_19E667EA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19E6628BC(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19E666758();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_unknownObjectRelease();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    char v21 = (void *)(v18[7] + 16 * v12);
    *char v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_19E663F1C(result, a4 & 1);
  uint64_t result = sub_19E6628BC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_19EBF7408();
  __break(1u);
  return result;
}

uint64_t sub_19E667FE4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_19E66298C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_19E666904();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19E6641E0(v13, a3 & 1);
  uint64_t v19 = sub_19E66298C(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    uint64_t result = sub_19EBF7408();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_19E62E830(a2, (uint64_t)v28);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  char v21 = (_OWORD *)(v16[6] + (v10 << 6));
  long long v22 = *(_OWORD *)&v29[9];
  long long v24 = v28[1];
  long long v23 = *(_OWORD *)v29;
  *char v21 = v28[0];
  v21[1] = v24;
  v21[2] = v23;
  *(_OWORD *)((char *)v21 + 41) = v22;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v25 = v16[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  void v16[2] = v27;
  return result;
}

uint64_t sub_19E668148(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_19E6628BC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19E666CFC();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_19E664778(result, a3 & 1);
  uint64_t result = sub_19E6628BC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_19EBF7408();
  __break(1u);
  return result;
}

uint64_t sub_19E668284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_19E662844(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_19E6671F4();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;

      uint64_t result = swift_release();
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_19E665010(v17, a5 & 1);
  unint64_t v23 = sub_19E662844(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_19EBF7408();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  BOOL v26 = (void *)(v20[7] + 16 * v14);
  *BOOL v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_19E668414(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_19E662844(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_19E6673C0();
      goto LABEL_7;
    }
    sub_19E665328(v15, a4 & 1);
    unint64_t v21 = sub_19E662844(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_19EBF7408();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_19E5E29A8(a1, v19);
  }
LABEL_13:
  sub_19E668898(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_19E668568(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19E662844(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19E6675A8();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19E665628(v15, a4 & 1);
  unint64_t v21 = sub_19E662844(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_19EBF7408();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_19E6686DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_19E662C34(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_19E667764();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    unint64_t v21 = (uint64_t *)(v18[6] + 16 * v12);
    *unint64_t v21 = a2;
    v21[1] = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_19E66593C(result, a4 & 1);
  uint64_t result = sub_19E662C34(a2, a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_19EBF7408();
  __break(1u);
  return result;
}

uint64_t sub_19E668824(unint64_t a1, uint64_t a2, char a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = a5[6] + 16 * a1;
  *(void *)uint64_t v6 = a2;
  *(unsigned char *)(v6 + 8) = a3;
  uint64_t result = sub_19E5FE188(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_19E668898(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_19E5E29A8(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_19E668904(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_19E66894C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t sub_19E668958()
{
  return sub_19E6689F8(&qword_1E945CAD8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A44C);
}

uint64_t sub_19E668978()
{
  return sub_19E6689F8((uint64_t *)&unk_1E945CAE0, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A478);
}

uint64_t sub_19E668998()
{
  return sub_19E6689F8((uint64_t *)&unk_1E945CC90, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A5E0);
}

uint64_t sub_19E6689B8()
{
  return sub_19E6689F8(&qword_1E945CAF0, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A764);
}

uint64_t sub_19E6689D8()
{
  return sub_19E6689F8(&qword_1E945CDA0, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19E64A794);
}

uint64_t sub_19E6689F8(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t v4 = *v2;
  uint64_t v5 = (uint64_t *)(*v2 + 16);
  uint64_t v6 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(v4 + 24);
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  if ((uint64_t)v8 >= 1) {
    a2(v7 + 16, v7 + 40, v5, v4 + 40);
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v7;
  return result;
}

unint64_t sub_19E668A90(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CCA0);
  uint64_t v3 = (void *)sub_19EBF7268();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_19E6628BC(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  long long v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_19E6628BC(v5);
    long long v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_19E668B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_19E66F708(0, v6, 0);
    uint64_t v8 = v29;
    BOOL v25 = *(void (**)(char *, uint64_t))(a2 + 16);
    for (unint64_t i = (unsigned __int8 *)(a1 + 41); ; i += 16)
    {
      uint64_t v27 = v8;
      uint64_t v10 = v4;
      uint64_t v11 = *(void *)(i - 9);
      int v12 = *(i - 1);
      int v13 = *i;
      uint64_t v14 = swift_bridgeObjectRetain();
      char v15 = (void *)MEMORY[0x19F3C1A40](v14);
      if (qword_1E945BB80 != -1) {
        swift_once();
      }
      char v16 = (uint64_t *)((char *)off_1E945C990 + 16);
      uint64_t v17 = (os_unfair_lock_s *)((char *)off_1E945C990 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)off_1E945C990 + 6);
      int v18 = v13 ? 256 : 0;
      sub_19E640784(v16, v25, v11, v18 | v12, 0, 1, &v28);
      if (v10) {
        break;
      }
      uint64_t v4 = 0;
      os_unfair_lock_unlock(v17);
      uint64_t v19 = v28;
      type metadata accessor for MetalBufferStorage();
      uint64_t v20 = swift_allocObject();
      *(unsigned char *)(v20 + 48) = v12;
      *(unsigned char *)(v20 + 49) = v13;
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = a3;
      *(void *)(v20 + 40) = v11;
      *(void *)(v20 + 32) = &off_1EF0C6CF0;
      uint64_t v21 = qword_1E945BB38;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v21 != -1) {
        swift_once();
      }
      if (byte_1E946A4F3) {
        uint64_t v22 = sub_19E658668;
      }
      else {
        uint64_t v22 = 0;
      }
      *(void *)(v20 + 56) = v22;
      *(void *)(v20 + 64) = 0;
      swift_bridgeObjectRelease();
      uint64_t v8 = v27;
      uint64_t v29 = v27;
      unint64_t v24 = *(void *)(v27 + 16);
      unint64_t v23 = *(void *)(v27 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_19E66F708(v23 > 1, v24 + 1, 1);
        uint64_t v8 = v29;
      }
      *(void *)(v8 + 16) = v24 + 1;
      *(void *)(v8 + 8 * v24 + 32) = v20;
      if (!--v6) {
        return;
      }
    }
    os_unfair_lock_unlock(v17);
    __break(1u);
  }
}

unint64_t sub_19E668DDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CC10);
  uint64_t v3 = (void *)sub_19EBF7268();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_19E6628BC(v4);
  long long v6 = v14;
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    int v12 = (_OWORD *)((char *)v8 + 24);
    uint64_t v4 = *((void *)v8 - 1);
    long long v15 = *v8;
    swift_unknownObjectRetain();
    unint64_t result = sub_19E6628BC(v4);
    uint64_t v8 = v12;
    long long v6 = v15;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_19E668EEC()
{
  unint64_t result = qword_1E945CC08;
  if (!qword_1E945CC08)
  {
    sub_19E64A9C0(255, &qword_1E945CB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CC08);
  }
  return result;
}

uint64_t sub_19E668F54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19E668F94()
{
  return sub_19E6625D8();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_19E668FB4()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E668FC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E668FF0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_19E669028(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E669054()
{
  return objectdestroy_25Tm(57);
}

uint64_t sub_19E66905C(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E6690A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E6690F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19E66913C()
{
  return objectdestroy_25Tm(64);
}

uint64_t sub_19E669144()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19E66917C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19E6691C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E6691F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E669224()
{
  sub_19E61EFA8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E669270()
{
  return objectdestroy_25Tm(56);
}

uint64_t sub_19E669278()
{
  return objectdestroy_25Tm(48);
}

uint64_t sub_19E669280(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E6692E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19E66933C()
{
  return objectdestroy_25Tm(48);
}

uint64_t objectdestroy_50Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19E669390()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_19E6693D0()
{
  return objectdestroy_25Tm(50);
}

uint64_t objectdestroy_25Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_19E669424()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_19E669464()
{
  unint64_t result = qword_1E945CD78;
  if (!qword_1E945CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CD78);
  }
  return result;
}

uint64_t sub_19E6694B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E6694F8(uint64_t a1)
{
  return a1;
}

unint64_t sub_19E669530()
{
  unint64_t result = qword_1E945CDB8;
  if (!qword_1E945CDB8)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CDB8);
  }
  return result;
}

uint64_t sub_19E669588(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_19E6695F0(uint64_t a1)
{
  unint64_t result = sub_19E669464();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19E669618(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_36;
      }
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
        if (v12 != 1)
        {
          char v13 = *(void **)(a2 + 40);
          id v7 = *(id *)(a2 + 32);
          id v14 = v13;
          goto LABEL_11;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_39:
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v17 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_16;
    case 2:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_39;
      }
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
        if (v15 != 1)
        {
          char v16 = *(void **)(a2 + 40);
          id v7 = *(id *)(a2 + 32);
          id v17 = v16;
LABEL_16:
          uint64_t v9 = v17;
          BOOL v10 = (void *)sub_19EBF6788();
          id v11 = objc_msgSend(a1, sel_greaterThanOrEqualToWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
          goto LABEL_32;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_42:
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v20 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_21;
    case 3:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_42;
      }
      uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18)
      {
        if (v18 != 1)
        {
          uint64_t v19 = *(void **)(a2 + 40);
          id v7 = *(id *)(a2 + 32);
          id v20 = v19;
LABEL_21:
          uint64_t v9 = v20;
          BOOL v10 = (void *)sub_19EBF6788();
          id v11 = objc_msgSend(a1, sel_lessThanWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
          goto LABEL_32;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_45:
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v23 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_26;
    case 4:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_45;
      }
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
        if (v21 != 1)
        {
          uint64_t v22 = *(void **)(a2 + 40);
          id v7 = *(id *)(a2 + 32);
          id v23 = v22;
LABEL_26:
          uint64_t v9 = v23;
          BOOL v10 = (void *)sub_19EBF6788();
          id v11 = objc_msgSend(a1, sel_lessThanOrEqualToWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
          goto LABEL_32;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_48:
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v26 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_31;
    case 5:
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_48;
      }
      uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v24)
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v24 == 1)
      {
LABEL_50:
        __break(1u);
        JUMPOUT(0x19E6699DCLL);
      }
      BOOL v25 = *(void **)(a2 + 40);
      id v7 = *(id *)(a2 + 32);
      id v26 = v25;
LABEL_31:
      uint64_t v9 = v26;
      BOOL v10 = (void *)sub_19EBF6788();
      id v11 = objc_msgSend(a1, sel_notEqualWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
LABEL_32:
      id v27 = v11;

      __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_19EC387F0;
      *(void *)(v28 + 32) = v27;
      uint64_t v30 = v28;
      sub_19EBF6908();
      return v30;
    default:
      if ((a2 & 0xC000000000000001) == 0)
      {
        uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v5)
        {
          if (v5 != 1)
          {
            long long v6 = *(void **)(a2 + 40);
            id v7 = *(id *)(a2 + 32);
            id v8 = v6;
LABEL_6:
            uint64_t v9 = v8;
            BOOL v10 = (void *)sub_19EBF6788();
            id v11 = objc_msgSend(a1, sel_equalWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
            goto LABEL_32;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_36:
        id v7 = (id)MEMORY[0x19F3BF970](0, a2);
        id v14 = (id)MEMORY[0x19F3BF970](1, a2);
LABEL_11:
        uint64_t v9 = v14;
        BOOL v10 = (void *)sub_19EBF6788();
        id v11 = objc_msgSend(a1, sel_greaterThanWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
        goto LABEL_32;
      }
      id v7 = (id)MEMORY[0x19F3BF970](0, a2);
      id v8 = (id)MEMORY[0x19F3BF970](1, a2);
      goto LABEL_6;
  }
}

CoreML::MLOptimizationHints __swiftcall MLOptimizationHints.init()()
{
  *(unsigned char *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0x3FF0000000000000;
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

CoreML::MLOptimizationHints::ReshapeFrequency_optional __swiftcall MLOptimizationHints.ReshapeFrequency.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (CoreML::MLOptimizationHints::ReshapeFrequency_optional)rawValue;
}

uint64_t MLOptimizationHints.ReshapeFrequency.rawValue.getter()
{
  return *v0;
}

void MLOptimizationHints.reshapeFrequency.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *MLOptimizationHints.reshapeFrequency.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*MLOptimizationHints.reshapeFrequency.modify())(void, void, void)
{
  return nullsub_1;
}

double MLOptimizationHints.hotHandDuration.getter()
{
  return *(double *)(v0 + 8);
}

void MLOptimizationHints.hotHandDuration.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*MLOptimizationHints.hotHandDuration.modify())(void, void, void)
{
  return nullsub_1;
}

void MLOptimizationHints.specializationStrategy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *MLOptimizationHints.specializationStrategy.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MLOptimizationHints.specializationStrategy.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t _s6CoreML19MLOptimizationHintsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1]) {
    return (*((unsigned __int8 *)a2 + 16) ^ *((unsigned __int8 *)a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

unint64_t sub_19E669B14()
{
  unint64_t result = qword_1E945CE40;
  if (!qword_1E945CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CE40);
  }
  return result;
}

unint64_t sub_19E669B6C()
{
  unint64_t result = qword_1E945CE48;
  if (!qword_1E945CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945CE48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MLOptimizationHints(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MLOptimizationHints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLOptimizationHints()
{
  return &type metadata for MLOptimizationHints;
}

ValueMetadata *type metadata accessor for MLOptimizationHints.ReshapeFrequency()
{
  return &type metadata for MLOptimizationHints.ReshapeFrequency;
}

unsigned char *_s6CoreML19MLOptimizationHintsV16ReshapeFrequencyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19E669D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLOptimizationHints.SpecializationStrategy()
{
  return &type metadata for MLOptimizationHints.SpecializationStrategy;
}

uint64_t sub_19E669D78(uint64_t a1)
{
  return a1;
}

uint64_t sub_19E669DA4(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  unint64_t v3 = a2[2];
  if (v3 < v2)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 32);
  uint64_t v6 = a2[4];
  unint64_t result = v5 * v6;
  if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63) {
    goto LABEL_21;
  }
  if (v2 != 1 && v3 != 1)
  {
    id v7 = (uint64_t *)(v4 + 40);
    if (v3 <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = a2[2];
    }
    uint64_t v9 = a2 + 5;
    unint64_t v10 = v3 - 2;
    uint64_t v11 = v8 - 1;
    unint64_t v12 = v2 - 2;
    while (v11)
    {
      unint64_t v13 = v10;
      uint64_t v14 = *v7 * *v9;
      if ((unsigned __int128)(*v7 * (__int128)*v9) >> 64 != v14 >> 63) {
        goto LABEL_18;
      }
      BOOL v15 = __OFADD__(result, v14);
      result += v14;
      if (v15) {
        goto LABEL_19;
      }
      if (v12)
      {
        ++v9;
        ++v7;
        unint64_t v10 = v13 - 1;
        --v11;
        --v12;
        if (v13) {
          continue;
        }
      }
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  id v26 = a5;
  uint64_t v9 = sub_19EBF6388();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DataStorage();
  uint64_t v24 = a3;
  uint64_t v13 = sub_19E6B58E8(a2, a3);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = a4;
  v14(v12, a4, v9);
  sub_19EBF6378();
  if (v13)
  {
    sub_19EBF6318();
    swift_allocObject();
    swift_retain();
    uint64_t v15 = sub_19EBF62D8();
    uint64_t v13 = sub_19E672650(v15, v13);
    unint64_t v17 = v16;
    swift_release();
  }
  else
  {
    uint64_t v18 = (void (*)(uint64_t, void))sub_19EBF6378();
    v18(a1, 0);
    swift_release();
    swift_release();
    unint64_t v17 = 0xC000000000000000;
  }
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  uint64_t v20 = sub_19E6B5A18(v13, v17, a2, v24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v19)(v25, v9);
  uint64_t v22 = v26;
  *id v26 = v20;
  v22[1] = (uint64_t)&off_1EF0C57A0;
  return result;
}

uint64_t MLShapedArray.init(unsafeUninitializedShape:initializingWith:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = sub_19EBF6968();
    *(void *)(v6 + 16) = v5;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = 0;
  v11[0] = v6 + 32;
  v11[1] = v5;
  sub_19E6B5844(v11, &v12, a1);
  if (!v2)
  {
    if (v5 >= v12)
    {
      *(void *)(v6 + 16) = v12;
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for StandardStorage();
      MEMORY[0x1F4188790](v7);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_19E63B0D8(a1, v6);
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v8;
      a2[1] = (uint64_t)&off_1EF0C70A8;
      return result;
    }
    __break(1u);
  }
  uint64_t v10 = v12;
  if (v5 < v12) {
    __break(1u);
  }
  *(void *)(v6 + 16) = v10;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t MLShapedArray.init(scalar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for StandardStorage();
  sub_19E66F568(a2, a2);
  uint64_t v6 = *(void *)(a2 - 8);
  swift_allocObject();
  uint64_t v7 = sub_19EBF6918();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  uint64_t v9 = sub_19EBF69C8();
  uint64_t v12 = v7;
  swift_getWitnessTable();
  uint64_t v10 = sub_19E63BA28(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], (uint64_t)&v12, v9);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v10;
  a3[1] = (uint64_t)&off_1EF0C70A8;
  return result;
}

uint64_t MLShapedArray.init(data:shape:strides:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  type metadata accessor for DataStorage();
  uint64_t result = sub_19E6B5A18(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = (uint64_t)&off_1EF0C57A0;
  return result;
}

uint64_t MLShapedArray.init<A>(scalars:shape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = sub_19EBF6968();
    *(void *)(v9 + 16) = v8;
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  v14[1] = v8;
  uint64_t v15 = 0;
  v14[0] = v9 + 32;
  sub_19E6B5844(v14, &v15, a2);
  uint64_t v10 = v15;
  BOOL v11 = v8 < v15;
  if (v8 < v15)
  {
    __break(1u);
    if (v11) {
      __break(1u);
    }
    *(void *)(v9 + 16) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    *(void *)(v9 + 16) = v15;
    swift_bridgeObjectRelease();
    type metadata accessor for StandardStorage();
    uint64_t v12 = sub_19E63BA28(a2, v9, a1, a3);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    *a4 = v12;
    a4[1] = (uint64_t)&off_1EF0C70A8;
  }
  return result;
}

uint64_t sub_19E66A55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = a5;
  uint64_t v8 = (char *)sub_19E64A9C0(0, (unint64_t *)&qword_1E945CFE0);
  unint64_t v10 = sub_19E5DA064((void (*)(char *, char *))sub_19E673D64, (uint64_t)v17, a3, v8, MEMORY[0x1E4FBC248], a4, MEMORY[0x1E4FBC278], v9);
  if (v10 >> 62)
  {
    uint64_t result = sub_19EBF7228();
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t result = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result)
    {
LABEL_3:
      swift_getAssociatedTypeWitness();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
      uint64_t v15 = (void *)sub_19EBF68D8();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v15, a2, v14);

      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t MLShapedArray.init<A>(reshaping:to:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for ReshapedStorage();
  uint64_t v8 = sub_19E5F7A78(a1, a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  *a4 = v8;
  a4[1] = (uint64_t)&off_1EF0C6E20;
  return result;
}

uint64_t sub_19E66A7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  id v27 = a3;
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v8 + 64);
  uint64_t v25 = v8;
  uint64_t v26 = v5;
  uint64_t v11 = v9(v10);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(v11 + 32);
    unint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v18 = *v13++;
      uint64_t v17 = v18;
      if (v18 != 1)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v28 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19E66F600(0, *(void *)(v14 + 16) + 1, 1);
          unint64_t v14 = v28;
        }
        unint64_t v16 = *(void *)(v14 + 16);
        unint64_t v15 = *(void *)(v14 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_19E66F600(v15 > 1, v16 + 1, 1);
          unint64_t v14 = v28;
        }
        *(void *)(v14 + 16) = v16 + 1;
        *(void *)(v14 + 8 * v16 + 32) = v17;
      }
      --v12;
    }
    while (v12);
  }
  else
  {
    unint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v26, a2);
  type metadata accessor for ReshapedStorage();
  uint64_t v21 = sub_19E5F7A78((uint64_t)v7, v14);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v7, a2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v22)(v20, a2);
  uint64_t v24 = v27;
  *id v27 = v21;
  v24[1] = (uint64_t)&off_1EF0C6E20;
  return result;
}

uint64_t sub_19E66A9C0@<X0>(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v12, v11);
  unint64_t v18 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) >= a2)
  {
    sub_19E612790(a2, a2, 1);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, a1, a3);
    unint64_t v14 = v18;
    type metadata accessor for ReshapedStorage();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_19E5F7A78((uint64_t)v10, v14);
    unint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16(v10, a3);
    v16(a1, a3);
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v15;
    a4[1] = (uint64_t)&off_1EF0C6E20;
    return result;
  }
  __break(1u);
  return result;
}

double sub_19E66AB60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v10, v9) + 16);
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    *(void *)&long long v17 = MEMORY[0x1E4FBC860];
    sub_19E66F600(0, v11, 0);
    uint64_t v12 = v17;
    int64_t v13 = v11 - 1;
    do
    {
      *(void *)&long long v17 = v12;
      unint64_t v15 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_19E66F600(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v17;
      }
      *(void *)(v12 + 16) = v15 + 1;
      *(void *)(v12 + 8 * v15 + 32) = v13--;
    }
    while (v13 != -1);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  sub_19E66AD1C((uint64_t)v8, v12, a2, (uint64_t *)&v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  double result = *(double *)&v17;
  *a3 = v17;
  return result;
}

uint64_t sub_19E66AD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for TransposedStorage();
  uint64_t v8 = sub_19E636570(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  *a4 = v8;
  a4[1] = (uint64_t)&off_1EF0C7C50;
  return result;
}

uint64_t MLShapedArray.init(mutating:shape:)@<X0>(__CVBuffer *a1@<X0>, uint64_t a2@<X1>, size_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE50);
  swift_allocObject();
  size_t v6 = sub_19E6728F0(a1, a2, 1);

  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6;
  a3[1] = (size_t)&off_1EF0C82D0;
  return result;
}

uint64_t MLShapedArray.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, size_t *a4@<X8>)
{
  uint64_t v8 = sub_19EBF6388();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v52 = (uint64_t *)((char *)&v47 - v12);
  uint64_t v53 = a2;
  unint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  if ((id)v13 == objc_msgSend(a1, sel_dataType))
  {
    id v14 = objc_msgSend(a1, sel_shape);
    uint64_t v55 = sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
    unint64_t v13 = sub_19EBF68E8();

    id v56 = a1;
    if (!(v13 >> 62))
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_19EBF7228();
  swift_bridgeObjectRelease();
LABEL_4:
  uint64_t v54 = a4;
  uint64_t v49 = a3;
  uint64_t v50 = v8;
  uint64_t v48 = v9;
  if (v15)
  {
    v57[0] = MEMORY[0x1E4FBC860];
    uint64_t result = sub_19E66F600(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v17 = 0;
    uint64_t v18 = v57[0];
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x19F3BF970](v17, v13);
      }
      else {
        id v19 = *(id *)(v13 + 8 * v17 + 32);
      }
      uint64_t v20 = v19;
      id v21 = objc_msgSend(v19, sel_integerValue);

      v57[0] = v18;
      unint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_19E66F600(v22 > 1, v23 + 1, 1);
        uint64_t v18 = v57[0];
      }
      ++v17;
      *(void *)(v18 + 16) = v23 + 1;
      *(void *)(v18 + 8 * v23 + 32) = v21;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  id v24 = objc_msgSend(v56, sel_strides);
  unint64_t v25 = sub_19EBF68E8();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_19EBF7228();
    swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_17:
      v57[0] = MEMORY[0x1E4FBC860];
      uint64_t result = sub_19E66F600(0, v26 & ~(v26 >> 63), 0);
      if ((v26 & 0x8000000000000000) == 0)
      {
        uint64_t v27 = 0;
        uint64_t v28 = v57[0];
        do
        {
          if ((v25 & 0xC000000000000001) != 0) {
            id v29 = (id)MEMORY[0x19F3BF970](v27, v25);
          }
          else {
            id v29 = *(id *)(v25 + 8 * v27 + 32);
          }
          uint64_t v30 = v29;
          id v31 = objc_msgSend(v29, sel_integerValue);

          v57[0] = v28;
          unint64_t v33 = *(void *)(v28 + 16);
          unint64_t v32 = *(void *)(v28 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_19E66F600(v32 > 1, v33 + 1, 1);
            uint64_t v28 = v57[0];
          }
          ++v27;
          *(void *)(v28 + 16) = v33 + 1;
          *(void *)(v28 + 8 * v33 + 32) = v31;
        }
        while (v26 != v27);
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
LABEL_35:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_30:
  id v34 = v56;
  uint64_t v35 = (__CVBuffer *)objc_msgSend(v56, sel_pixelBuffer);
  if (v35)
  {
    int64_t v36 = v35;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE50);
    swift_allocObject();
    size_t v37 = sub_19E6728F0(v36, v18, 0);

    uint64_t result = swift_bridgeObjectRelease();
    long long v38 = &off_1EF0C82D0;
  }
  else
  {
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v34;
    char v40 = v52;
    *uint64_t v52 = nullsub_1;
    v40[1] = v39;
    uint64_t v41 = v48;
    uint64_t v42 = v50;
    (*(void (**)(void *, void, uint64_t))(v48 + 104))(v40, *MEMORY[0x1E4F27758], v50);
    id v43 = v34;
    id v44 = objc_msgSend(v43, sel_bytes);
    uint64_t v45 = (uint64_t)v51;
    (*(void (**)(char *, void *, uint64_t))(v41 + 16))(v51, v40, v42);
    MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)((uint64_t)v44, v18, v28, v45, v57);

    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v41 + 8))(v40, v42);
    size_t v37 = v57[0];
    long long v38 = (_UNKNOWN **)v57[1];
  }
  uint64_t v46 = v54;
  *uint64_t v54 = v37;
  v46[1] = (size_t)v38;
  return result;
}

uint64_t MLShapedArray.shape.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_19E66B3C8(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (a2[2] >= v2)
  {
    unint64_t v3 = a2;
    uint64_t v13 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    BOOL v5 = v2 == 0;
    if (v2) {
      goto LABEL_4;
    }
LABEL_3:
    long long v16 = 0u;
    long long v17 = 0u;
    unint64_t v4 = v2;
    long long v15 = 0u;
    while (1)
    {
      sub_19E673CFC((uint64_t)&v15, (uint64_t)&v18);
      if (!v20)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
      unint64_t v6 = v18;
      sub_19E5FE188(&v19, (uint64_t)&v15);
      uint64_t v7 = *((void *)&v16 + 1);
      uint64_t v8 = v17;
      uint64_t result = (uint64_t)__swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
      if ((v6 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= v3[2]) {
        goto LABEL_16;
      }
      uint64_t v9 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v8 + 8))(v3[2 * v6 + 4], v3[2 * v6 + 5], v7, v8);
      uint64_t v11 = v10;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_19E612768(v3);
        unint64_t v3 = (void *)result;
      }
      if (v6 >= v3[2]) {
        goto LABEL_17;
      }
      uint64_t v12 = &v3[2 * v6];
      v12[4] = v9;
      v12[5] = v11;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v15);
      BOOL v5 = v4 >= v2;
      if (v4 == v2) {
        goto LABEL_3;
      }
LABEL_4:
      if (v5) {
        goto LABEL_18;
      }
      sub_19E5FE124(v13 + 40 * v4, (uint64_t)v14);
      *(void *)&long long v15 = v4;
      sub_19E5FE188(v14, (uint64_t)&v15 + 8);
      ++v4;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MLShapedArray.strides.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

BOOL sub_19E66B5CC(uint64_t a1)
{
  return *(void *)(a1 + 16) >= *(void *)(a1 + 8);
}

uint64_t MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = a4;
  uint64_t v18 = v12;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 32))(sub_19E672A60, v15, a4, ObjectType, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19E66B6F4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1)) {
    return swift_isUniquelyReferenced_nonNull() ^ 1;
  }
  else {
    return 1;
  }
}

uint64_t MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v6 = v5;
  v20[9] = a5;
  if (sub_19E66B6F4())
  {
    uint64_t v11 = *(void *)(a3 + 16);
    uint64_t v12 = *(void *)(a3 + 24);
    type metadata accessor for StandardStorage();
    uint64_t v13 = v5[1];
    uint64_t v14 = swift_unknownObjectRetain();
    uint64_t v15 = sub_19E63BA94(v14, v13, 0);
    swift_unknownObjectRelease_n();
    uint64_t v16 = &off_1EF0C70A8;
    *unint64_t v6 = v15;
    v6[1] = (uint64_t)&off_1EF0C70A8;
  }
  else
  {
    uint64_t v16 = (_UNKNOWN **)v5[1];
    uint64_t v11 = *(void *)(a3 + 16);
    uint64_t v12 = *(void *)(a3 + 24);
  }
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  v20[2] = v11;
  v20[3] = a4;
  v20[4] = v12;
  v20[5] = v6;
  v20[6] = a1;
  v20[7] = a2;
  uint64_t v18 = (void (*)(void, void, void, void, void))v16[5];
  swift_unknownObjectRetain();
  v18(sub_19E672A94, v20, a4, ObjectType, v16);
  return swift_unknownObjectRelease();
}

uint64_t MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(using:_:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v38 = a2;
  unint64_t v11 = *a1;
  uint64_t v12 = v5[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
  uint64_t v15 = v14;
  uint64_t v39 = a3;
  if (!v11) {
    goto LABEL_10;
  }
  uint64_t v37 = v6;
  if (v11 != 1)
  {
    uint64_t v18 = (void *)v11;
    goto LABEL_19;
  }
  int64_t v16 = *(void *)(v14 + 16);
  if (!v16)
  {
    unint64_t v19 = 0;
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v17 = sub_19EBF6968();
  uint64_t v18 = (void *)v17;
  *(void *)(v17 + 16) = v16;
  unint64_t v19 = *(void *)(v15 + 16);
  if (!v19)
  {
LABEL_18:
    v18[2] = v19;
LABEL_19:
    sub_19E5DF494(v11);
    swift_bridgeObjectRelease();
    if ((sub_19E66B6F4() & 1) != 0
      || (unint64_t v23 = (_UNKNOWN **)v7[1],
          uint64_t v24 = swift_getObjectType(),
          unint64_t v25 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v23[2])(v24, v23),
          BOOL v26 = sub_19E5DDC7C(v25, v18),
          swift_bridgeObjectRelease(),
          !v26))
    {
      uint64_t v27 = *(void *)(a4 + 16);
      uint64_t v28 = *(void *)(a4 + 24);
      type metadata accessor for StandardStorage();
      uint64_t v29 = v7[1];
      uint64_t v30 = swift_unknownObjectRetain();
      uint64_t v31 = sub_19E63BA94(v30, v29, (uint64_t)v18);
      swift_unknownObjectRelease_n();
      unint64_t v23 = &off_1EF0C70A8;
      *uint64_t v7 = v31;
      v7[1] = (uint64_t)&off_1EF0C70A8;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a4 + 16);
      uint64_t v28 = *(void *)(a4 + 24);
    }
    uint64_t v32 = swift_getObjectType();
    MEMORY[0x1F4188790](v32);
    v36[2] = v27;
    v36[3] = a5;
    v36[4] = v28;
    v36[5] = v7;
    v36[6] = v38;
    v36[7] = v39;
    unint64_t v33 = (void (*)(void, void, void, void, void))v23[5];
    swift_unknownObjectRetain();
    v33(sub_19E672A94, v36, a5, v32, v23);
    return swift_unknownObjectRelease();
  }
  uint64_t v20 = 0;
  uint64_t v21 = 1;
  do
  {
    *(void *)(v17 + 8 * v20 + 32) = v21;
    uint64_t v22 = *(void *)(v15 + 32 + 8 * v20);
    if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
    {
      __break(1u);
      goto LABEL_25;
    }
    ++v20;
    v21 *= v22;
  }
  while (v19 != v20);
  if (v16 >= v19) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_10:
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v18 = (void *)sub_19EBF6968();
    v18[2] = v16;
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = 0;
  v40[0] = v18 + 4;
  v40[1] = v16;
  sub_19E6B5844(v40, &v41, v15);
  if (!v6)
  {
    unint64_t v19 = v41;
    if (v16 >= v41)
    {
      uint64_t v37 = 0;
      goto LABEL_18;
    }
LABEL_25:
    __break(1u);
  }
  uint64_t v35 = v41;
  if (v16 < v41) {
    __break(1u);
  }
  v18[2] = v35;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_19E66BBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v26 = a1;
  uint64_t v9 = *(void *)(a7 - 8);
  uint64_t result = MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v14 < 0) {
    goto LABEL_20;
  }
  if (!a4) {
    return result;
  }
  if (v11[2] < 2uLL)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  uint64_t v16 = v11[5];
  uint64_t v23 = v11[4];
  uint64_t v25 = v9 + 16;
  while (2)
  {
    if (v15 == a4)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v17 = v15 * v23;
    if ((unsigned __int128)(v15 * (__int128)v23) >> 64 != (v15 * v23) >> 63)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v18 = 0;
    uint64_t v24 = v15 + 1;
    do
    {
      uint64_t v19 = v18 * v16;
      if ((unsigned __int128)(v18 * (__int128)v16) >> 64 != (v18 * v16) >> 63)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v20 = v17 + v19;
      if (__OFADD__(v17, v19)) {
        goto LABEL_17;
      }
      uint64_t v21 = v18 + 1;
      if (v15 == v18) {
        uint64_t v22 = v28;
      }
      else {
        uint64_t v22 = v27;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v22, a7);
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(v26 + *(void *)(v9 + 72) * v20, v13, a7);
      uint64_t v18 = v21;
    }
    while (a4 != v21);
    uint64_t v15 = v24;
    if (v24 != a4) {
      continue;
    }
    return result;
  }
}

uint64_t MLShapedArray.withPixelBufferIfAvailable<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  type metadata accessor for PixelBufferStorage();
  if (!swift_dynamicCastClass()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
  swift_unknownObjectRetain();
  sub_19E63F9C0(a1);
  if (!v3) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 0, 1, a2);
  }
  return swift_unknownObjectRelease();
}

double MLShapedArray.init<A>(concatenating:alongAxis:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  unint64_t v11 = (void *)sub_19E66A55C(a1, a2, a4, a5, a6);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MLShapedArray.init(_:)(v11, a3, AssociatedConformanceWitness, (size_t *)&v14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
  double result = *(double *)&v14;
  *a7 = v14;
  return result;
}

double MLShapedArray.init<A>(squeezing:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v8, a1);
  sub_19E66A7B0((uint64_t)v8, a2, (uint64_t *)&v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  double result = *(double *)&v10;
  *a3 = v10;
  return result;
}

double MLShapedArray.init<A>(expandingDimensionsOf:alongAxis:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  long long v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v11);
  sub_19E66A9C0(v10, a2, a3, (uint64_t *)&v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  double result = *(double *)&v13;
  *a4 = v13;
  return result;
}

uint64_t sub_19E66C190(uint64_t a1, unint64_t *a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v3 = *a2;
  type metadata accessor for MLShapedArrayTensorStorageView();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19E66C240;
  return sub_19E6C3180(v3);
}

uint64_t sub_19E66C240(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E66C340, 0, 0);
}

uint64_t sub_19E66C340()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *uint64_t v1 = *(void *)(v0 + 32);
  v1[1] = &off_1EF0C9728;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19E66C368(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!result)
  {
    uint64_t v8 = 0;
    return a3(result, v8, a5, a6);
  }
  uint64_t v7 = *(void *)(*(void *)(a7 - 8) + 72);
  if (v7)
  {
    if (a2 - result != 0x8000000000000000 || v7 != -1)
    {
      uint64_t v8 = (a2 - result) / v7;
      return a3(result, v8, a5, a6);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MLShapedArray.withMutablePixelBufferIfAvailable<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  if (sub_19E66B6F4())
  {
    type metadata accessor for StandardStorage();
    uint64_t v14 = a2;
    uint64_t v8 = a3;
    uint64_t v9 = v4;
    uint64_t v10 = v3[1];
    uint64_t v11 = swift_unknownObjectRetain();
    uint64_t v12 = sub_19E63BA94(v11, v10, 0);
    uint64_t v5 = v9;
    a3 = v8;
    a2 = v14;
    swift_unknownObjectRelease_n();
    uint64_t *v3 = v12;
    v3[1] = (uint64_t)&off_1EF0C70A8;
  }
  type metadata accessor for PixelBufferStorage();
  if (!swift_dynamicCastClass()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
  swift_unknownObjectRetain();
  sub_19E63F9C0(a1);
  if (!v5) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 0, 1, a2);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_19E66C590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19E66C59C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return MLShapedArray.init(unsafeUninitializedShape:initializingWith:)(a1, a2);
}

double sub_19E66C5C4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a2);
}

double MLShapedArray.subscript.getter@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  long long v8 = *v2;
  long long v9 = v8;
  (*(void (**)(char *))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE60);
  uint64_t v6 = sub_19EBF69D8();
  return sub_19E5D9D34(&v9, v6, a2);
}

{
  long long *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  long long v8;
  long long v9;

  MEMORY[0x1F4188790](a1);
  long long v8 = *v2;
  long long v9 = v8;
  (*(void (**)(char *))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectRetain();
  uint64_t v6 = sub_19EBF69D8();
  return sub_19E5D8DC4(&v9, v6, a2);
}

uint64_t sub_19E66C6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E66CA00(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_19E672D14);
}

uint64_t MLShapedArray.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19E66CA98(a1, a2, a3, a4, a5, (void (*)(void))sub_19E672D14);
}

{
  return sub_19E66CA98(a1, a2, a3, a4, a5, (void (*)(void))sub_19E672AD0);
}

{
  uint64_t (*v9)(uint64_t);
  uint64_t vars8;

  sub_19E673340(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  long long v9 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);

  return v9(a1);
}

uint64_t (*sub_19E66C718(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19E5DB3C0;
}

void (*MLShapedArray.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void **a1, char a2)
{
  uint64_t v11 = malloc(0x60uLL);
  *a1 = v11;
  v11[8] = a5;
  v11[9] = v5;
  v11[6] = a3;
  v11[7] = a4;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = v12;
  v11[10] = v12;
  v11[11] = malloc(*(void *)(v12 + 64));
  (*(void (**)(void))(v13 + 16))();
  MLShapedArray.subscript.getter(a2, v11);
  return sub_19E66C8B0;
}

{
  uint64_t v5;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v11 = malloc(0x60uLL);
  *a1 = v11;
  v11[8] = a5;
  v11[9] = v5;
  v11[6] = a3;
  v11[7] = a4;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = v12;
  v11[10] = v12;
  v11[11] = malloc(*(void *)(v12 + 64));
  (*(void (**)(void))(v13 + 16))();
  MLShapedArray.subscript.getter(a2, v11);
  return sub_19E66CCA0;
}

void sub_19E66C8B0(void **a1, char a2)
{
}

double sub_19E66C8C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a2);
}

uint64_t sub_19E66C9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E66CA00(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_19E672AD0);
}

uint64_t sub_19E66CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  a7(a1, a2, a5, a3, a4);
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v9(a2, a3);
}

uint64_t sub_19E66CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  a6();
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8);

  return v8(a2, a4);
}

uint64_t (*sub_19E66CB08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19E5DB3C0;
}

void sub_19E66CCA0(void **a1, char a2)
{
}

void sub_19E66CCB8(void **a1, char a2, void (*a3)(void *, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v8 = (*a1)[4];
  uint64_t v7 = (*a1)[5];
  uint64_t v10 = (*a1)[10];
  long long v9 = (void *)(*a1)[11];
  uint64_t v11 = (*a1)[8];
  uint64_t v13 = (*a1)[6];
  uint64_t v12 = (*a1)[7];
  v16[0] = **a1;
  v16[1] = v4;
  void v16[2] = v5;
  v16[3] = v6;
  v16[4] = v8;
  v16[5] = v7;
  if (a2)
  {
    uint64_t v14 = v11;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(v16, v9, v13, v12, v14);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v9, v12);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    a3(v16, v9, v13, v12, v11);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v9, v12);
  }
  free(v9);

  free(v3);
}

uint64_t sub_19E66CE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a4, a2, a3, a5);
}

uint64_t MLShapedArray.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = *v5;
  uint64_t v11 = v5[1];
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v34 = a4;
  uint64_t v14 = sub_19EBF69D8();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v18 = *(void *)(v17(ObjectType, v11) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 == v18)
  {
    uint64_t v20 = swift_getObjectType();
    uint64_t v21 = v17(v20, v11);
    uint64_t v22 = *(void *)(v14 + 16);
    if (!v22 || (uint64_t v23 = *(void *)(v21 + 16)) == 0)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRelease();
      uint64_t v36 = v12;
      uint64_t v37 = v11;
      MEMORY[0x1F4188790](v29);
      uint64_t v30 = *(void *)(a2 + 16);
      uint64_t v31 = *(void *)(a2 + 24);
      *(&v33 - 8) = v30;
      *(&v33 - 7) = a3;
      uint64_t v32 = v34;
      *(&v33 - 6) = v31;
      *(&v33 - 5) = v32;
      *(&v33 - 4) = a1;
      *(&v33 - 3) = v12;
      *(&v33 - 2) = v11;
      return MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19E6730FC, (uint64_t)(&v33 - 10), a2, v30);
    }
    unint64_t v24 = v23 - 1;
    unint64_t v25 = v22 - 1;
    if (v24 < v25) {
      unint64_t v25 = v24;
    }
    uint64_t v26 = ~v25;
    uint64_t v27 = 4;
    while (1)
    {
      uint64_t v28 = *(void *)(v14 + 8 * v27);
      if (v28 < 0 || v28 >= *(void *)(v21 + 8 * v27)) {
        break;
      }
      ++v27;
      if (v26 + v27 == 4) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E66D060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19E673340(a1, a2, a5, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
  long long v9 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a5 + 16) - 8) + 8);

  return v9(a1);
}

uint64_t (*sub_19E66D1C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19E5DB3C0;
}

void (*MLShapedArray.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x50uLL);
  *a1 = v11;
  void v11[2] = a5;
  v11[3] = v5;
  *uint64_t v11 = a3;
  v11[1] = a4;
  uint64_t v12 = *(void *)(a3 + 16);
  v11[4] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v11[5] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[6] = malloc(v14);
  uint64_t v15 = malloc(v14);
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v17 = v16;
  v11[7] = v15;
  v11[8] = v16;
  v11[9] = malloc(*(void *)(v16 + 64));
  (*(void (**)(void))(v17 + 16))();
  MLShapedArray.subscript.getter(a2, a3, a4, a5, (uint64_t)v15);
  return sub_19E66D3C4;
}

void sub_19E66D3C4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[8];
  uint64_t v5 = (void *)(*a1)[6];
  uint64_t v4 = (void *)(*a1)[7];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = (*a1)[5];
  uint64_t v8 = (*a1)[2];
  uint64_t v10 = **a1;
  uint64_t v9 = (*a1)[1];
  uint64_t v12 = (void *)(*a1)[9];
  if (a2)
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v5, v4, v6);
    sub_19E673340((uint64_t)v5, (uint64_t)v12, v10, v9, v8);
    (*(void (**)(void *, uint64_t))(v3 + 8))(v12, v9);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v7 + 8);
    v11(v5, v6);
    v11(v4, v6);
  }
  else
  {
    sub_19E673340((uint64_t)v4, (uint64_t)v12, v10, v9, v8);
    (*(void (**)(void *, uint64_t))(v3 + 8))(v12, v9);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v4, v6);
  }
  free(v12);
  free(v4);
  free(v5);

  free(v2);
}

uint64_t sub_19E66D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)(a1, a2, a4, a3);
}

uint64_t sub_19E66D550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)(a1, a2, a4, a3, a5);
}

uint64_t sub_19E66D574(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  return MLShapedArray.subscript.setter(a1, *a2, a3);
}

uint64_t MLShapedArray.subscript.setter(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19EC36240;
  *(void *)(v6 + 32) = a2;
  long long v7 = a1[1];
  v12[0] = *a1;
  v12[1] = v7;
  void v12[2] = a1[2];
  uint64_t v11 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE70);
  uint64_t v9 = sub_19E673BDC(&qword_1E945C258);
  sub_19E672AD0((uint64_t)v12, (uint64_t)&v11, a3, v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_19E66D64C(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = MLShapedArray.subscript.modify(v6, *a2, a3);
  return sub_19E5DB3C0;
}

void (*MLShapedArray.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void **a1, char a2)
{
  long long v7 = malloc(0x48uLL);
  *a1 = v7;
  v7[7] = a3;
  v7[8] = v3;
  v7[6] = a2;
  MLShapedArray.subscript.getter(a2, v7);
  return sub_19E66D74C;
}

void sub_19E66D74C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = (*a1)[4];
  uint64_t v6 = (*a1)[5];
  uint64_t v8 = (*a1)[7];
  uint64_t v9 = (*a1)[6];
  *(void *)&long long v10 = **a1;
  *((void *)&v10 + 1) = v3;
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v7;
  uint64_t v14 = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MLShapedArray.subscript.setter(&v10, v9, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    MLShapedArray.subscript.setter(&v10, v9, v8);
  }

  free(v2);
}

uint64_t sub_19E66D848(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t WitnessTable = swift_getWitnessTable();

  return MLShapedArrayProtocol.subscript.setter(a1, v5, v6, a3, WitnessTable);
}

uint64_t (*sub_19E66D8C0(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t WitnessTable = swift_getWitnessTable();
  v6[4] = MLShapedArrayProtocol.subscript.modify(v6, v8, v7, a3, WitnessTable);
  return sub_19E5DB3C0;
}

uint64_t sub_19E66D95C()
{
  return sub_19EBF6718();
}

uint64_t sub_19E66D9DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MLShapedArrayProtocol.init(arrayLiteral:)(a1, a2, WitnessTable);
}

uint64_t sub_19E66DA44()
{
  swift_getWitnessTable();

  return sub_19EBF6B68();
}

uint64_t sub_19E66DAB4(void *a1)
{
  swift_getWitnessTable();
  uint64_t result = sub_19EBF6B68();
  *a1 = v3;
  return result;
}

uint64_t sub_19E66DB24()
{
  swift_getWitnessTable();

  return sub_19EBF6B58();
}

uint64_t sub_19E66DBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t MLShapedArray.startIndex.getter()
{
  return 0;
}

uint64_t sub_19E66DC24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MLShapedArray.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t MLShapedArray.endIndex.getter(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MLShapedArrayProtocol.count.getter(a1, WitnessTable);
}

void (*sub_19E66DCA8(void *a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_19E66DD18(v4, *a2);
  return sub_19E5DC788;
}

void (*sub_19E66DD18(void *a1, uint64_t a2))(void **a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  MLShapedArray.subscript.getter(a2, v4);
  return sub_19E5F85E8;
}

uint64_t sub_19E66DD8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t WitnessTable = swift_getWitnessTable();

  return MLShapedArrayProtocol.subscript.getter(v3, v4, a2, WitnessTable);
}

uint64_t sub_19E66DE00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = MLShapedArray.indices.getter(a1);
  *a2 = 0;
  a2[1] = v4;
  return result;
}

uint64_t MLShapedArray.indices.getter(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = MLShapedArrayProtocol.count.getter(a1, WitnessTable);
  if ((result & 0x8000000000000000) == 0) {
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E66DE94(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MLShapedArrayProtocol.count.getter(a1, WitnessTable);
}

uint64_t sub_19E66DEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E672318(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_19E66DF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E672318(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

__n128 sub_19E66DF68@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_19E66DF78(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_19E66DFCC()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_19E672588();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MLShapedArray.description.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  long long v15 = *v1;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = MLShapedArrayProtocol.scalars.getter(a1, WitnessTable);
  if (MEMORY[0x19F3BF2E0](v8, v3))
  {
    uint64_t v14 = v5;
    uint64_t v9 = 0;
    while (1)
    {
      char v10 = sub_19EBF6988();
      sub_19EBF6928();
      if (v10)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v9, v3);
        uint64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_19EBF7038();
        if (v14 != 8)
        {
          __break(1u);
          return result;
        }
        *(void *)&long long v15 = result;
        (*(void (**)(char *, long long *, uint64_t))(v4 + 16))(v6, &v15, v3);
        swift_unknownObjectRelease();
        uint64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          swift_bridgeObjectRelease();
          return v16;
        }
      }
      *(void *)&long long v15 = 0;
      *((void *)&v15 + 1) = 0xE000000000000000;
      sub_19EBF7358();
      sub_19EBF67D8();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      ++v9;
      if (v11 == MEMORY[0x19F3BF2E0](v8, v3)) {
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t MLShapedArray.subscript.getter@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19EC36240;
  *(void *)(v5 + 32) = a1;
  long long v8 = *v2;
  uint64_t v7 = v5;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CE70);
  sub_19E673BDC(&qword_1E945C258);
  MLShapedArray.subscript.getter((uint64_t)&v7, a2);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_19E66E368@<D0>(uint64_t *a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for MLShapedArray();
  MLShapedArray.subscript.getter(v3, v6);
  long long v4 = v6[1];
  *a2 = v6[0];
  a2[1] = v4;
  double result = *(double *)&v7;
  a2[2] = v7;
  return result;
}

uint64_t sub_19E66E3DC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v9 = *a1;
  long long v10 = *(_OWORD *)(a1 + 1);
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  uint64_t v7 = type metadata accessor for MLShapedArray();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MLShapedArray.subscript.setter(&v9, v3, v7);
}

uint64_t sub_19E66E498(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  long long v10 = a4[1];
  long long v14 = *a4;
  long long v15 = v10;
  long long v16 = a4[2];
  v13[2] = a7;
  v13[3] = a8;
  v13[4] = a9;
  v13[5] = a10;
  v13[6] = a5;
  v13[7] = a3;
  v13[8] = a2;
  v13[9] = a6;
  v13[10] = a1;
  uint64_t v11 = type metadata accessor for MLShapedArraySlice();
  return MLShapedArraySlice.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19E673B9C, (uint64_t)v13, v11, MEMORY[0x1E4FBC848] + 8);
}

uint64_t sub_19E66E53C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = sub_19EBF6758();
  uint64_t v45 = result;
  if (result)
  {
    uint64_t v44 = sub_19E669DA4(a5, a6);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_19EBF6BA8();
    uint64_t v17 = sub_19E5D9CF0(v15, a7);
    uint64_t v19 = v18;
    unint64_t v21 = v20;
    if (v20)
    {
      uint64_t v42 = v16;
      uint64_t v43 = a3;
      sub_19EBF73A8();
      swift_unknownObjectRetain_n();
      uint64_t v23 = swift_dynamicCastClass();
      if (!v23)
      {
        swift_unknownObjectRelease();
        uint64_t v23 = MEMORY[0x1E4FBC860];
      }
      uint64_t v24 = *(void *)(v23 + 16);
      swift_release();
      if (__OFSUB__(v21 >> 1, v19)) {
        goto LABEL_24;
      }
      if (v24 != (v21 >> 1) - v19) {
        goto LABEL_25;
      }
      uint64_t v22 = (void *)swift_dynamicCastClass();
      if (!v22)
      {
        swift_unknownObjectRelease();
        uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
      }
      goto LABEL_10;
    }
    while (1)
    {
      uint64_t v22 = (void *)sub_19E5DDDB0(v17, v16, v19, v21);
LABEL_10:
      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_19EBF6BA8();
      uint64_t v26 = sub_19E5D9CF0(v25, a6);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      unint64_t v32 = v31;
      if ((v31 & 1) == 0) {
        goto LABEL_11;
      }
      uint64_t v34 = a3;
      sub_19EBF73A8();
      swift_unknownObjectRetain_n();
      uint64_t v35 = swift_dynamicCastClass();
      if (!v35)
      {
        swift_unknownObjectRelease();
        uint64_t v35 = MEMORY[0x1E4FBC860];
      }
      uint64_t v36 = *(void *)(v35 + 16);
      swift_release();
      if (__OFSUB__(v32 >> 1, v30)) {
        break;
      }
      if (v36 != (v32 >> 1) - v30) {
        goto LABEL_27;
      }
      uint64_t v33 = (void *)swift_dynamicCastClass();
      a3 = v34;
      if (!v33)
      {
        swift_unknownObjectRelease();
        uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
      }
LABEL_18:
      uint64_t v19 = a9;
      swift_unknownObjectRelease();
      uint64_t result = sub_19EBF6758();
      uint64_t v17 = (uint64_t)a4;
      if (!result) {
        goto LABEL_29;
      }
      unint64_t v21 = *(void *)(*(void *)(a10 - 8) + 72);
      unint64_t v37 = *(void *)(a3 + 16);
      if (v37 == a4[2])
      {
        uint64_t v19 = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_19E60F71C(0, v37);
        unint64_t v39 = v22[2];
        if (v39 == v33[2])
        {
          uint64_t v40 = v38;
          uint64_t v41 = sub_19E60F71C(0, v39);
          sub_19E6B3D30(v40, a3, a4, v41, v22, v33, v45, v19 + v21 * v44, a10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_unknownObjectRelease();
      uint64_t v16 = v42;
      a3 = v43;
    }
    __break(1u);
LABEL_27:
    swift_unknownObjectRelease();
    a3 = v34;
LABEL_11:
    uint64_t v33 = (void *)sub_19E5DDDB0(v26, v28, v30, v32);
    goto LABEL_18;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_19E66E874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + a1 - 24);
  uint64_t v6 = *(void *)(a2 + a1 - 8);
  uint64_t v7 = type metadata accessor for MLShapedArray();
  return MLShapedArray.subscript.getter(a1, v7, v5, v6, a3);
}

uint64_t sub_19E66E8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = *(void *)(a4 + a3 - 8);
  uint64_t v8 = type metadata accessor for MLShapedArray();
  return sub_19E673340(a1, a3, v8, v6, v7);
}

uint64_t sub_19E66E94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v9 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_19EBF69D8();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  uint64_t v13 = sub_19E669DA4(v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, a1 + *(void *)(*(void *)(a3 - 8) + 72) * v13, a3);
}

double sub_19E66EAD0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + a1 - 24);
  uint64_t v8 = *(void *)(a2 + a1 - 8);
  uint64_t v9 = type metadata accessor for MLShapedArray();
  a3(v12, a1, v9, v7, v8);
  long long v10 = v12[1];
  *a4 = v12[0];
  a4[1] = v10;
  double result = *(double *)&v13;
  a4[2] = v13;
  return result;
}

uint64_t sub_19E66EB5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a4 + a3 - 24);
  uint64_t v8 = *(void *)(a4 + a3 - 8);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v14 = *a1;
  long long v15 = *(_OWORD *)(a1 + 1);
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  uint64_t v18 = v11;
  uint64_t v12 = type metadata accessor for MLShapedArray();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a5(&v14, a3, v12, v7, v8);
}

uint64_t sub_19E66EC34(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_19EBF6758();
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v16 = result;
  uint64_t result = sub_19EBF6758();
  if (result)
  {
    unint64_t v17 = a3[2];
    if (v17 == a4[2])
    {
      uint64_t v21 = result;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_19E60F71C(0, v17);
      uint64_t result = sub_19E5F7AC4((void (*)(char *, char *))sub_19E66EDD0, 0, a9, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC248], a11, MEMORY[0x1E4FBC278], v19);
      if (v17 == *(void *)(result + 16))
      {
        if (v17 == a7[2])
        {
          uint64_t v20 = result;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_19E6B395C(v18, a3, a4, v20, a3, a7, v16, v21, a8, a8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19E66EDD0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t MLShapedArray.init(data:shape:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = sub_19EBF6968();
    *(void *)(v9 + 16) = v8;
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  v13[1] = v8;
  uint64_t v14 = 0;
  v13[0] = v9 + 32;
  sub_19E6B5844(v13, &v14, a3);
  uint64_t v10 = v14;
  BOOL v11 = v8 < v14;
  if (v8 < v14)
  {
    __break(1u);
    if (v11) {
      __break(1u);
    }
    *(void *)(v9 + 16) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    *(void *)(v9 + 16) = v14;
    swift_bridgeObjectRelease();
    type metadata accessor for DataStorage();
    uint64_t result = sub_19E6B5A18(a1, a2, a3, v9);
    *a4 = result;
    a4[1] = (uint64_t)&off_1EF0C57A0;
  }
  return result;
}

uint64_t MLShapedArray.reshaped(to:)(uint64_t a1, uint64_t a2)
{
  return sub_19E66F098(a1, a2, (uint64_t (*)(long long *, uint64_t))MLShapedArray.init<A>(reshaping:to:));
}

uint64_t MLShapedArray.squeezingShape()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v6 = *v2;
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  return sub_19E66A7B0((uint64_t)&v6, a1, a2);
}

uint64_t MLShapedArray.expandingShape(at:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v8 = *v3;
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  return sub_19E66A9C0((char *)&v8, a1, a2, a3);
}

double MLShapedArray.transposed()@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = *v2;
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  return sub_19E66AB60((uint64_t)&v6, a1, a2);
}

uint64_t MLShapedArray.transposed(permutation:)(uint64_t a1, uint64_t a2)
{
  return sub_19E66F098(a1, a2, (uint64_t (*)(long long *, uint64_t))sub_19E66AD1C);
}

uint64_t sub_19E66F098(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *, uint64_t))
{
  long long v7 = *v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return a3(&v7, a1);
}

uint64_t MLShapedArray.changingLayout(to:)@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = *a1;
  uint64_t v5 = *v2;
  long long v6 = (_UNKNOWN **)v2[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v6[1])(ObjectType, v6);
  uint64_t v9 = v8;
  if (!v4) {
    goto LABEL_10;
  }
  if (v4 != 1)
  {
    uint64_t v12 = (void *)v4;
LABEL_17:
    sub_19E5DF494(v4);
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_getObjectType();
    uint64_t v22 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v6[2])(v21, v6);
    BOOL v23 = sub_19E5DDC7C(v12, v22);
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_unknownObjectRetain();
    }
    else
    {
      type metadata accessor for StandardStorage();
      uint64_t v25 = swift_unknownObjectRetain();
      uint64_t v26 = sub_19E63BA94(v25, (uint64_t)v6, (uint64_t)v12);
      uint64_t result = swift_unknownObjectRelease();
      long long v6 = &off_1EF0C70A8;
      uint64_t v5 = v26;
    }
    *a2 = v5;
    a2[1] = (uint64_t)v6;
    return result;
  }
  unint64_t v10 = *(void *)(v8 + 16);
  if (!v10)
  {
    unint64_t v13 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v11 = sub_19EBF6968();
  uint64_t v12 = (void *)v11;
  *(void *)(v11 + 16) = v10;
  unint64_t v13 = *(void *)(v9 + 16);
  if (!v13)
  {
LABEL_16:
    _OWORD v12[2] = v13;
    goto LABEL_17;
  }
  uint64_t v14 = 0;
  uint64_t v15 = 1;
  do
  {
    *(void *)(v11 + 8 * v14 + 32) = v15;
    uint64_t v16 = *(void *)(v9 + 32 + 8 * v14);
    uint64_t v17 = v15 * v16;
    uint64_t v18 = (unsigned __int128)(v15 * (__int128)v16) >> 64;
    BOOL v19 = v18 < v17 >> 63;
    if (v18 != v17 >> 63)
    {
      __break(1u);
      goto LABEL_22;
    }
    ++v14;
    uint64_t v15 = v17;
  }
  while (v13 != v14);
  if (v10 >= v13) {
    goto LABEL_16;
  }
  __break(1u);
LABEL_10:
  uint64_t v20 = *(void *)(v9 + 16);
  if (v20)
  {
    uint64_t v12 = (void *)sub_19EBF6968();
    _OWORD v12[2] = v20;
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  v27[1] = v20;
  uint64_t v28 = 0;
  v27[0] = v12 + 4;
  sub_19E6B5844(v27, &v28, v9);
  unint64_t v13 = v28;
  BOOL v19 = v20 < v28;
  if (v20 >= v28) {
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  if (v19) {
    __break(1u);
  }
  _OWORD v12[2] = v13;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_19E66F364(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  swift_unknownObjectRetain();
  uint64_t v13 = v12(ObjectType, v10);
  swift_unknownObjectRelease();
  uint64_t v14 = *(void *)(a3 + 8);
  uint64_t v15 = swift_getObjectType();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_unknownObjectRetain();
  uint64_t v17 = v16(v15, v14);
  uint64_t result = swift_unknownObjectRelease();
  if (!a1)
  {
    uint64_t v20 = 0;
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)(*(void *)(a6 - 8) + 72);
  if (v19)
  {
    if (a2 - a1 != 0x8000000000000000 || v19 != -1)
    {
      uint64_t v20 = (a2 - a1) / v19;
LABEL_7:
      v22[0] = a1;
      v22[1] = v20;
      a4(v22, v13, v17);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E66F4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_19E64A9C0(0, (unint64_t *)&qword_1E945CFE0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = sub_19E63974C(a1, AssociatedTypeWitness, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19E66F568(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(qword_1E945C728);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t sub_19E66F5D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671740(a1, a2, a3, *v3, qword_1E945B970);
  long long *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F600(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E67189C(a1, a2, a3, *v3, &qword_1E945BB18);
  long long *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F628(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E66FA54(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F648(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E66FBF8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F668(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E66FD58(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F688(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E66FEC0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F6A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E67002C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F6C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E67018C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F6E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670334(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F708(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6704C0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F728(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670BF4(a1, a2, a3, *v3, &qword_1E945C2B0);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F758(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6715B0(a1, a2, a3, (void *)*v3, &qword_1E945CF88, (uint64_t *)&unk_1E945CE70);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F788(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E67062C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F7A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670798(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F7C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670914(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F7E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670A70(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F808(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670BF4(a1, a2, a3, *v3, &qword_1E945C2C0);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F838(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670D60(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F858(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E670EEC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F878(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671078(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F898(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6715B0(a1, a2, a3, (void *)*v3, &qword_1E945CEA0, &qword_1E945CEA8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F8C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6711F4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F8E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671354(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F908(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6715B0(a1, a2, a3, (void *)*v3, &qword_1E945CEC0, &qword_1E945CEC8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66F938(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671740(a1, a2, a3, *v3, &qword_1E945CEE8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E67189C(a1, a2, a3, *v3, &qword_1E945CF18);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E6719F8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F9A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671B74(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F9C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671CFC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66F9E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671E68(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66FA08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E671FD4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_19E66FA28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_19E672160(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_19E66FA48(char a1, int64_t a2, char a3, char *a4)
{
  return sub_19E67189C(a1, a2, a3, a4, &qword_1E945BB18);
}

uint64_t sub_19E66FA54(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CFD0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C260);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E66FBF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E66FD58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF08);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E66FEB4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_19E671740(a1, a2, a3, a4, &qword_1E945C2C8);
}

uint64_t sub_19E66FEC0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E67002C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E67018C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFB0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFB8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670334(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFA0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFA8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E6704C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E67062C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945CF90);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670798(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEF0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670914(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670A70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CED0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[176 * v8]) {
      memmove(v12, v13, 176 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[176 * v8] || v12 >= &v13[176 * v8])
  {
    memcpy(v12, v13, 176 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670BF4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670D60(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E670EEC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF68);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF70);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671078(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E6711E0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_19E6715B0(a1, a2, a3, a4, &qword_1E945CEA0, &qword_1E945CEA8);
}

uint64_t sub_19E6711F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671354(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CED8);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E67159C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_19E6715B0(a1, a2, a3, a4, &qword_1E945CEC0, &qword_1E945CEC8);
}

uint64_t sub_19E6715B0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671740(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E67189C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E6719F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671B74(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671CFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671E68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E671FD4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF48);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E672160(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CF00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E6722C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E672318(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_19E6722EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E672318(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_19E672318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  BOOL v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_19EBF66D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_19E67258C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_19E672650(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    sub_19EBF6398();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = (unsigned char *)sub_19EBF62E8();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = sub_19EBF62F8();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      int64_t v7 = &v4[v6];
      if (v4) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v3 = sub_19E67258C(v4, v8);
      swift_release();
      return v3;
    }
    uint64_t result = sub_19EBF6308();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19E672738(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 32))(a1, *(void *)(v1 + 48));
}

uint64_t sub_19E672768(uint64_t a1, uint64_t a2, __CVBuffer *a3)
{
  if (a1 < 0) {
    goto LABEL_24;
  }
  if (a1)
  {
    uint64_t v6 = sub_19EBF6968();
    *(void *)(v6 + 16) = a1;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  char v7 = 0;
  uint64_t v8 = v6 + 32;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = v9 - 1;
  uint64_t v11 = a2 + 32;
  while (1)
  {
    uint64_t v13 = v10 - 1;
    if (v10 < 1)
    {
      if ((v10 != 0) | v7 & 1) {
        goto LABEL_20;
      }
      uint64_t v13 = 0;
      char v7 = 1;
    }
    uint64_t v14 = v10 + 1;
    if (v10 + 1 == v9)
    {
      uint64_t v12 = 1;
      goto LABEL_7;
    }
    if (v10 + 2 == v9)
    {
      int64_t BytesPerRow = CVPixelBufferGetBytesPerRow(a3);
      if (BytesPerRow >= 0) {
        uint64_t v16 = BytesPerRow;
      }
      else {
        uint64_t v16 = BytesPerRow + 1;
      }
      uint64_t v12 = v16 >> 1;
      goto LABEL_7;
    }
    if (v14 >= v9)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v17 = 8 * v14;
    uint64_t v18 = *(void *)(v8 + v17);
    uint64_t v19 = *(void *)(v11 + v17);
    uint64_t v12 = v18 * v19;
    if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63) {
      break;
    }
LABEL_7:
    *(void *)(v8 + 8 * v10) = v12;
    uint64_t v10 = v13;
  }
  __break(1u);
LABEL_20:
  if (v9 <= a1)
  {
    *(void *)(v6 + 16) = v9;
    return v6;
  }
LABEL_23:
  __break(1u);
LABEL_24:

  swift_bridgeObjectRelease();
  uint64_t result = sub_19EBF71E8();
  __break(1u);
  return result;
}

size_t sub_19E6728F0(__CVBuffer *a1, uint64_t a2, char a3)
{
  size_t result = CVPixelBufferGetPixelFormatType(a1);
  if (result != 1278226536)
  {
    __break(1u);
    goto LABEL_16;
  }
  size_t result = (size_t)CVPixelBufferGetIOSurface(a1);
  if (!result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = 1;
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v12 = *(void *)(a2 + 32 + 8 * v9++);
      if (v9 >= v8)
      {
        uint64_t v10 = v12;
      }
      else
      {
        uint64_t v13 = (unsigned __int128)(v11 * (__int128)v12) >> 64;
        v11 *= v12;
        if (v13 != v11 >> 63)
        {
          __break(1u);
          break;
        }
      }
      if (v8 == v9) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v10 = 1;
  uint64_t v11 = 1;
LABEL_11:
  size_t result = CVPixelBufferGetWidth(a1);
  if (result != v10) {
    goto LABEL_17;
  }
  size_t result = CVPixelBufferGetHeight(a1);
  if (result != v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = a3 & 1;
  *(void *)(v3 + 32) = a2;
  swift_bridgeObjectRetain();
  uint64_t v14 = a1;
  size_t result = CVPixelBufferGetPixelFormatType(v14);
  if (result == 1278226536)
  {
    *(void *)(v3 + 40) = sub_19E672768(v8, a2, v14);
    return v3;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_19E672A28()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19E672A60(uint64_t a1, uint64_t a2)
{
  return sub_19E66C368(a1, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 16));
}

uint64_t sub_19E672A94(uint64_t a1, uint64_t a2)
{
  return sub_19E672AAC(a1, a2);
}

uint64_t sub_19E672AAC(uint64_t a1, uint64_t a2)
{
  return sub_19E66F364(a1, a2, *(void *)(v2 + 40), *(void (**)(void *, uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16));
}

uint64_t sub_19E672AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = (_OWORD *)MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = v10[1];
  v38[0] = *v10;
  v38[1] = v13;
  v38[2] = v10[2];
  uint64_t v15 = *(void (**)(char *))(v14 + 16);
  uint64_t v37 = v16;
  v15(v12);
  uint64_t v36 = a5;
  uint64_t v17 = sub_19EBF69D8();
  unint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v6 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  unint64_t v22 = *(void *)(v21(ObjectType, v19) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v22 >= v18)
  {
    uint64_t v24 = swift_getObjectType();
    uint64_t v25 = v21(v24, v19);
    uint64_t v26 = *(void *)(v17 + 16);
    if (!v26 || (uint64_t v27 = *(void *)(v25 + 16)) == 0)
    {
LABEL_9:
      uint64_t v32 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v32);
      uint64_t v33 = *(void *)(a3 + 24);
      *(&v35 - 8) = *(void *)(a3 + 16);
      *(&v35 - 7) = a4;
      uint64_t v34 = v36;
      *(&v35 - 6) = v33;
      *(&v35 - 5) = v34;
      *(&v35 - 4) = (uint64_t)v38;
      *(&v35 - 3) = v17;
      *(&v35 - 2) = v37;
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19E673B68, (uint64_t)(&v35 - 10), a3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
      sub_19E5DFE2C((uint64_t)v38);
      return swift_bridgeObjectRelease();
    }
    uint64_t v28 = 0;
    unint64_t v29 = v27 - 1;
    unint64_t v30 = v26 - 1;
    if (v29 < v30) {
      unint64_t v30 = v29;
    }
    unint64_t v31 = v30 + 1;
    while (*(void *)(v17 + 32 + 8 * v28) < *(void *)(v25 + 8 * v28 + 32))
    {
      if (v31 == ++v28) {
        goto LABEL_9;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E672D14(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a3;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E945CE70);
  uint64_t v34 = a5;
  uint64_t v10 = *(void *)(a5 + 8);
  uint64_t v44 = sub_19E673BDC((unint64_t *)&unk_1E945CF20);
  *(void *)&long long v47 = a4;
  *((void *)&v47 + 1) = v45;
  *(void *)&long long v48 = v10;
  *((void *)&v48 + 1) = v44;
  uint64_t v11 = sub_19EBF7018();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = *(void *)(a4 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  uint64_t v40 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v34 - v18;
  long long v20 = a1[1];
  long long v47 = *a1;
  long long v48 = v20;
  long long v49 = a1[2];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v42 = a2;
  unint64_t v39 = v21;
  v21((char *)&v34 - v18, a2, a4);
  uint64_t v22 = *(void *)(v5 + 8);
  uint64_t v36 = v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(ObjectType, v22);
  uint64_t v41 = v10;
  uint64_t v24 = v43;
  sub_19EBF73E8();
  swift_bridgeObjectRelease();
  uint64_t WitnessTable = swift_getWitnessTable();
  char v25 = sub_19EBF6848();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v24 + 8);
  v37(v14, v11);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  uint64_t v43 = v15 + 8;
  uint64_t result = v26(v19, a4);
  if (v25)
  {
    uint64_t v28 = v40;
    uint64_t v29 = v42;
    v39(v40, v42, a4);
    uint64_t v46 = v47;
    sub_19EBF73E8();
    char v30 = sub_19EBF6848();
    v37(v14, v11);
    uint64_t result = v26(v28, a4);
    if (v30)
    {
      MEMORY[0x1F4188790](result);
      uint64_t v31 = v35;
      uint64_t v32 = *(void *)(v35 + 24);
      *(&v34 - 6) = *(void *)(v35 + 16);
      *(&v34 - 5) = a4;
      uint64_t v33 = v34;
      *(&v34 - 4) = v32;
      *(&v34 - 3) = v33;
      *(&v34 - 2) = (uint64_t)&v47;
      *(&v34 - 1) = v29;
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19E673C24, (uint64_t)(&v34 - 8), v31, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
      return sub_19E5DFE2C((uint64_t)&v47);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E6730FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E66E94C(a1, *(void *)(v2 + 64), *(void *)(v2 + 16), a2);
}

uint64_t sub_19E673134(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_19EBF6C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_19EBF66D8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_19EBF66D8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_19E673340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a1;
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v10 + 16))((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = a5;
  uint64_t v11 = sub_19EBF69D8();
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v5 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  uint64_t v16 = *(void *)(v15(ObjectType, v13) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 == v16)
  {
    uint64_t v18 = swift_getObjectType();
    uint64_t v19 = v15(v18, v13);
    uint64_t v20 = *(void *)(v11 + 16);
    if (!v20 || (uint64_t v21 = *(void *)(v19 + 16)) == 0)
    {
LABEL_10:
      uint64_t v27 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v27);
      uint64_t v28 = *(void *)(a3 + 24);
      *(&v31 - 6) = *(void *)(a3 + 16);
      *(&v31 - 5) = a4;
      uint64_t v29 = v33;
      *(&v31 - 4) = v28;
      *(&v31 - 3) = v29;
      uint64_t v30 = v32;
      *(&v31 - 2) = v11;
      *(&v31 - 1) = v30;
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19E5DFC24, (uint64_t)(&v31 - 8), a3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
      return swift_bridgeObjectRelease();
    }
    uint64_t v22 = 0;
    unint64_t v23 = v21 - 1;
    unint64_t v24 = v20 - 1;
    if (v23 < v24) {
      unint64_t v24 = v23;
    }
    unint64_t v25 = v24 + 1;
    while (1)
    {
      uint64_t v26 = *(void *)(v11 + 32 + 8 * v22);
      if (v26 < 0 || v26 >= *(void *)(v19 + 8 * v22 + 32)) {
        break;
      }
      if (v25 == ++v22) {
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E673568(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_19E6735E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E673604()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E673620()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E67363C()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E673658()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E673674()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E673690()
{
  return swift_getWitnessTable();
}

uint64_t sub_19E6736B4()
{
  return 16;
}

__n128 sub_19E6736C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

double sub_19E6736CC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  return sub_19E66EAD0(a1, a2, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))MLShapedArray.subscript.getter, a3);
}

uint64_t sub_19E6736F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E66EB5C(a1, a2, a3, a4, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))sub_19E672AD0);
}

uint64_t sub_19E673724()
{
  return 32;
}

__n128 sub_19E673730(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_19E673744()
{
  return 32;
}

__n128 sub_19E673750(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

double sub_19E67375C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  return sub_19E66EAD0(a1, a2, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))MLShapedArray.subscript.getter, a3);
}

uint64_t sub_19E673788(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19E66EB5C(a1, a2, a3, a4, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))sub_19E672D14);
}

uint64_t sub_19E6737B4()
{
  return 32;
}

__n128 sub_19E6737C0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

_OWORD *sub_19E6737CC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_19E673800()
{
  return swift_unknownObjectRelease();
}

void *sub_19E673808(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_19E67385C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for RangedIndices(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RangedIndices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MLShapedArray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for MLShapedArrayBufferLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for MLShapedArrayBufferLayout(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for MLShapedArrayBufferLayout(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for MLShapedArrayBufferLayout(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLComputePolicy.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MLComputePolicy.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_19E673B20(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_19E673B38(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  _OWORD *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MLShapedArrayBufferLayout()
{
  return &type metadata for MLShapedArrayBufferLayout;
}

uint64_t sub_19E673B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E66E498(a1, a2, a3, *(long long **)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_19E673B9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_19E66E53C(a1, a2, a3, a4, *(void *)(v4 + 48), *(void **)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), *(void *)(v4 + 16));
}

uint64_t sub_19E673BDC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E945CE70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19E673C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(long long **)(v3 + 48);
  uint64_t v5 = *(void *)(v3 + 56);
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 32);
  long long v8 = v4[1];
  long long v15 = *v4;
  long long v16 = v8;
  long long v17 = v4[2];
  v11[1] = v6;
  void v11[2] = v7;
  uint64_t v12 = a1;
  uint64_t v13 = v5;
  uint64_t v14 = a3;
  uint64_t v9 = type metadata accessor for MLShapedArraySlice();
  return MLShapedArraySlice.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19E673CC4, (uint64_t)v11, v9, MEMORY[0x1E4FBC848] + 8);
}

uint64_t sub_19E673CC4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_19E66EC34(a1, a2, a3, a4, *(void *)(v4 + 48), *(void *)(v4 + 56), *(void **)(v4 + 64), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_19E673CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E673D64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19E66F4C4(a1, *(void *)(v2 + 32), a2);
}

uint64_t static Int32.multiArrayDataType.getter()
{
  return 131104;
}

uint64_t sub_19E673DA4()
{
  return 131104;
}

uint64_t static Double.multiArrayDataType.getter()
{
  return 65600;
}

uint64_t sub_19E673DBC()
{
  return 65600;
}

uint64_t static Float.multiArrayDataType.getter()
{
  return 65568;
}

uint64_t sub_19E673DD4()
{
  return 65568;
}

uint64_t static Float16.multiArrayDataType.getter()
{
  return 65552;
}

uint64_t sub_19E673DEC()
{
  return 65552;
}

uint64_t dispatch thunk of static MLShapedArrayScalar.multiArrayDataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id static MLModelCollection.beginAccessing(identifier:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  long long v7 = (void *)sub_19EBF6788();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v12[4] = sub_19E674064;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_19E67406C;
  _OWORD v12[3] = &block_descriptor_5;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(ObjCClassFromMetadata, sel_beginAccessingModelCollectionWithIdentifier_completionHandler_, v7, v9);
  _Block_release(v9);

  return v10;
}

void sub_19E673F30(void *a1, id a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v8 = a1;
    a3(a1, 0);
    id v5 = v8;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v7 = a2;
    a3(a2, 1);
    id v5 = a2;
    goto LABEL_4;
  }
  sub_19EBF71F8();
  __break(1u);
}

uint64_t sub_19E67402C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19E674064(void *a1, void *a2)
{
  sub_19E673F30(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

void sub_19E67406C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void static MLModelCollection.endAccessing(identifier:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v7 = (void *)sub_19EBF6788();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_19E674300;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_19E674308;
  v10[3] = &block_descriptor_6;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_endAccessingModelCollectionWithIdentifier_completionHandler_, v7, v9);
  _Block_release(v9);
}

void sub_19E674224(char a1, id a2, void (*a3)(id, uint64_t))
{
  if (a1)
  {
    a3(0, 0);
  }
  else if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    sub_19EBF71F8();
    __break(1u);
  }
}

void sub_19E674300(char a1, void *a2)
{
  sub_19E674224(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_19E674308(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_19E67438C(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (!result) {
    return v2;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = a2 + 32;
  uint64_t v20 = v4 - 1;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v18 = result;
  uint64_t v19 = a2 + 32;
  do
  {
    uint64_t v12 = *(void *)(v7 + 8 * v5);
    uint64_t v13 = *(void *)(v8 + 16);
    if (v13 < v3)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_19E66F600(0, v13 + 1, 1);
        uint64_t v7 = v19;
      }
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t result = sub_19E66F600(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v8 + 16) = v11 + 1;
      *(void *)(v8 + 8 * v11 + 32) = v12;
LABEL_8:
      if (v20 == v5) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v6 >= v13) {
      goto LABEL_28;
    }
    uint64_t v14 = v2;
    uint64_t v15 = *(void *)(v8 + 8 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_19E66F600(0, *(void *)(v9 + 16) + 1, 1);
      uint64_t v7 = v19;
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_19E66F600(v16 > 1, v17 + 1, 1);
      uint64_t v7 = v19;
    }
    *(void *)(v9 + 16) = v17 + 1;
    *(void *)(v9 + 8 * v17 + 32) = v15;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_19E643A0C(v8);
      uint64_t v8 = result;
    }
    uint64_t v2 = v14;
    uint64_t v3 = v18;
    if (v6 >= *(void *)(v8 + 16)) {
      goto LABEL_29;
    }
    *(void *)(v8 + 8 * v6++ + 32) = v12;
    if ((uint64_t)v6 < v18) {
      goto LABEL_8;
    }
    if (v20 == v5) {
      goto LABEL_25;
    }
    unint64_t v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(void *)(v2 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19E6745B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return a2;
  }
  if (*(void *)(a3 + 32) == result) {
    return 0;
  }
  if (v3 == 1) {
    return a2;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    if (*(void *)(a3 + 8 * i) == result) {
      return 0;
    }
    if (v5 == v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19E67462C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_19E643A0C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_19E674698(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19E674698(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_19EBF7308();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v83 >= v81) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          long long v86 = v11;
          unint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_19E674D24((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v86 = sub_19E632D08((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          unint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_19EBF6968();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        unint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (*v25 >= v23) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          uint64_t *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_19E632A94(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      long long v77 = sub_19E632A94((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      unint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            unint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        long long v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        long long v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_19E674D24((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)long long v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_19EBF71E8();
  __break(1u);
  return result;
}

uint64_t sub_19E674D24(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (v20 >= *((void *)v16 - 1))
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v4 >= *(void *)v6)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_19E632C4C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_19EBF7278();
  __break(1u);
  return result;
}

uint64_t sub_19E674F94@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_19E6745B8(*a1, a1[1], *a2);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_19E674FD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_18;
  }
  uint64_t v5 = result;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v18 = v5;
    uint64_t result = sub_19E66F600(0, v4 & ~(v4 >> 63), 0);
    uint64_t v9 = v18;
    if (a2 < v18 || v4 < 0) {
      goto LABEL_19;
    }
    uint64_t v10 = a3 + 32;
    uint64_t result = v19;
    uint64_t v11 = *(void *)(a4 + 16);
    unint64_t v12 = *(void *)(a3 + 16);
    if (v11 <= v18) {
      uint64_t v11 = v18;
    }
    uint64_t v13 = v11 - v18;
    uint64_t v14 = (unint64_t *)(a4 + 8 * v18 + 32);
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (!v13) {
        goto LABEL_16;
      }
      if (*v14 >= v12) {
        goto LABEL_17;
      }
      uint64_t v15 = *(void *)(v10 + 8 * *v14);
      uint64_t v20 = result;
      unint64_t v17 = *(void *)(result + 16);
      unint64_t v16 = *(void *)(result + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19E66F600(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v18;
        uint64_t result = v20;
      }
      *(void *)(result + 16) = v17 + 1;
      *(void *)(result + 8 * v17 + 32) = v15;
      --v13;
      ++v14;
      if (!--v4) {
        return result;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_19E67512C(uint64_t a1, void *a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_19E66F758(0, v3, 0);
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = (uint64_t *)(a1 + 32);
    uint64_t v4 = v15;
    while (1)
    {
      uint64_t v11 = *v9++;
      uint64_t v10 = v11;
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v12 = a2;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_19E612754(a2);
        unint64_t v12 = (void *)result;
      }
      if (v12[2] <= a3) {
        break;
      }
      v12[a3 + 4] = v10;
      unint64_t v14 = *(void *)(v15 + 16);
      unint64_t v13 = *(void *)(v15 + 24);
      if (v14 >= v13 >> 1) {
        sub_19E66F758(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v15 + 16) = v14 + 1;
      *(void *)(v15 + 8 * v14 + 32) = v12;
      if (!--v3) {
        return v4;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19E675244(void *a1, void *a2)
{
  unint64_t v2 = a2[2];
  unint64_t v3 = a1[2];
  if (v2 < v3) {
    return 0;
  }
  uint64_t v5 = a1;
  if (sub_19E5DDC7C(a1, a2))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    char v6 = sub_19E606EE4(0, v2, 0, MEMORY[0x1E4FBC860]);
    uint64_t v7 = a2 + 4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = v3;
    if (!v3) {
      goto LABEL_17;
    }
    while (1)
    {
      unint64_t v9 = v8 - 1;
      if ((uint64_t)(v8 - 1) >= (uint64_t)v3) {
        break;
      }
      if (!v2) {
        goto LABEL_24;
      }
      uint64_t v10 = v5[v9 + 4];
      uint64_t v11 = v7[--v2];
      if (v11 == 1)
      {
        if (v10 == 1)
        {
          unint64_t v13 = v6[2];
          unint64_t v12 = v6[3];
          int64_t v14 = v13 + 1;
          uint64_t v10 = 1;
          goto LABEL_14;
        }
        goto LABEL_19;
      }
      if (v10 != 1)
      {
        if (v10 == v11) {
          goto LABEL_13;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v10 = v7[v2];
LABEL_13:
      while (1)
      {
        unint64_t v13 = v6[2];
        unint64_t v12 = v6[3];
        int64_t v14 = v13 + 1;
LABEL_14:
        if (v13 >= v12 >> 1) {
          char v6 = sub_19E606EE4((void *)(v12 > 1), v14, 1, v6);
        }
        _OWORD v6[2] = v14;
        v6[v13 + 4] = v10;
        unint64_t v8 = v9;
        if (v9) {
          break;
        }
LABEL_17:
        if (!v2) {
          goto LABEL_24;
        }
        unint64_t v9 = 0;
        uint64_t v10 = v7[--v2];
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_20;
    }
    return sub_19E602940((uint64_t)v6);
  }
  return (uint64_t)v5;
}

void *sub_19E6753E8(void *a1, void *a2)
{
  unint64_t v3 = a1;
  if (sub_19E5DDC7C(a1, a2))
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  unint64_t v4 = v3[2];
  unint64_t v5 = a2[2];
  if (v5 <= v4) {
    int64_t v6 = v3[2];
  }
  else {
    int64_t v6 = a2[2];
  }
  uint64_t result = sub_19E606EE4(0, v6, 0, MEMORY[0x1E4FBC860]);
  unint64_t v8 = result;
  unint64_t v9 = a2 + 3;
  uint64_t v10 = v3 + 3;
  unint64_t v11 = v4;
  unint64_t v12 = v5;
  uint64_t v13 = v4 - 1;
  if ((uint64_t)(v4 - 1) >= 0) {
    goto LABEL_13;
  }
LABEL_17:
  uint64_t v18 = 0;
  if (__OFSUB__(v13, 1))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  while (1)
  {
    uint64_t v19 = v12 - 1;
    if (((v12 - 1) & 0x8000000000000000) != 0)
    {
      uint64_t v14 = 0;
      if (__OFSUB__(v19, 1)) {
        goto LABEL_35;
      }
    }
    else
    {
      if (v19 >= (uint64_t)v5) {
        goto LABEL_37;
      }
      uint64_t v14 = v9[v12];
      if (__OFSUB__(v19, 1)) {
        goto LABEL_35;
      }
    }
    if (v13 < 0)
    {
      if (v19 < 0) {
        return (void *)sub_19E602940((uint64_t)v8);
      }
      goto LABEL_9;
    }
    if ((v19 & 0x8000000000000000) == 0 && v14 != 1) {
      break;
    }
    uint64_t v14 = v18;
LABEL_9:
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    int64_t v17 = v16 + 1;
    uint64_t v18 = v14;
LABEL_10:
    if (v16 >= v15 >> 1)
    {
      uint64_t result = sub_19E606EE4((void *)(v15 > 1), v17, 1, v8);
      unint64_t v8 = result;
    }
    long long v8[2] = v17;
    v8[v16 + 4] = v18;
    unint64_t v11 = v13;
    unint64_t v12 = v19;
    if (--v13 < 0) {
      goto LABEL_17;
    }
LABEL_13:
    if (v13 >= (uint64_t)v4) {
      goto LABEL_36;
    }
    uint64_t v18 = v10[v11];
    if (__OFSUB__(v13, 1)) {
      goto LABEL_34;
    }
  }
  if (v18 == 1) {
    goto LABEL_9;
  }
  if (v18 == v14)
  {
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    int64_t v17 = v16 + 1;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19E675588(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (a3)
    {
LABEL_18:
      uint64_t v15 = v12[2];
      swift_bridgeObjectRetain();
      if (v15)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_32:
        }
          unint64_t v3 = sub_19E612754(v3);
        for (uint64_t i = 0; i != v15; ++i)
        {
          unint64_t v17 = v12[i + 4];
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          if (v17 >= v3[2]) {
            goto LABEL_31;
          }
          v3[v17 + 4] = 1;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return (uint64_t)v3;
    }
LABEL_27:
    v22[0] = v12;
    MEMORY[0x1F4188790](a1);
    v19[2] = v22;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_19E601EF8((void (*)(void *__return_ptr, void))sub_19E676FD4, (uint64_t)v19, (uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  uint64_t result = 0;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = v3[2];
  if (v7 >= -v8 && v7 < v8)
  {
    int v20 = a3;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = v4 - 1;
    unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      v22[0] = v7;
      v22[1] = v8;
      char v23 = 6;
      if (v7 >= v8)
      {
        sub_19E5E2970((uint64_t)v22, (uint64_t)v21);
        sub_19E5E1864();
        uint64_t result = sub_19EBF71F8();
        __break(1u);
        return result;
      }
      sub_19E607D84((uint64_t)v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_19E606EE4(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        unint64_t v12 = sub_19E606EE4((void *)(v13 > 1), v14 + 1, 1, v12);
      }
      _OWORD v12[2] = v14 + 1;
      v12[v14 + 4] = (v8 & (v7 >> 63)) + v7;
      if (v11 == v10) {
        break;
      }
      uint64_t v7 = *(void *)(a2 + 8 * v10 + 40);
      if (v7 >= -v8)
      {
        ++v10;
        if (v7 < v8) {
          continue;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    a1 = swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19E675858(void *a1, uint64_t a2)
{
  uint64_t result = 0;
  unint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = a1[2];
  if (v5 < v4) {
    return result;
  }
  uint64_t v26 = a1;
  if (!v4)
  {
    if (v5)
    {
      if (a1[4] == 1)
      {
        uint64_t v14 = 0;
      }
      else
      {
        if (v5 == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = 1;
          goto LABEL_50;
        }
        uint64_t v21 = 5;
        while (1)
        {
          uint64_t v14 = v21 - 4;
          if (a1[v21] == 1) {
            break;
          }
          uint64_t v22 = v21 - 3;
          if (__OFADD__(v14, 1)) {
            goto LABEL_59;
          }
          ++v21;
          if (v22 == v5)
          {
            swift_bridgeObjectRetain();
            uint64_t v14 = v5;
            goto LABEL_50;
          }
        }
      }
      uint64_t v15 = v14 + 1;
      if (!__OFADD__(v14, 1))
      {
        if (v15 == v5)
        {
          swift_bridgeObjectRetain();
LABEL_27:
          if ((uint64_t)v5 < v14)
          {
            __break(1u);
            goto LABEL_29;
          }
LABEL_50:
          sub_19E61314C(v14, v5);
          return (uint64_t)v26;
        }
        swift_bridgeObjectRetain();
        uint64_t v16 = v14 + 5;
        while ((v15 & 0x8000000000000000) == 0)
        {
          if (v16 - 4 >= v5) {
            goto LABEL_57;
          }
          uint64_t v18 = a1[v16];
          if (v18 != 1)
          {
            if (v16 - 4 != v14)
            {
              if (v14 >= v5) {
                goto LABEL_63;
              }
              uint64_t v19 = a1[v14 + 4];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                a1 = sub_19E612754(a1);
              }
              a1[v14 + 4] = v18;
              a1[v16] = v19;
              uint64_t v26 = a1;
            }
            if (__OFADD__(v14++, 1)) {
              goto LABEL_58;
            }
            unint64_t v5 = a1[2];
          }
          uint64_t v17 = v16 - 3;
          ++v16;
          if (v17 == v5) {
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      __break(1u);
LABEL_65:
      uint64_t v26 = a1;
      sub_19E5E2970((uint64_t)v24, (uint64_t)v23);
      sub_19E5E1864();
      sub_19EBF71F8();
      __break(1u);
      swift_release();
      __break(1u);
LABEL_66:
      uint64_t result = sub_19EBF7278();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    goto LABEL_50;
  }
  v24[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E67462C(v24);
  uint64_t v6 = v24[0];
  uint64_t v7 = *(void *)(v24[0] + 16);
  if (!v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)a1;
  }
  uint64_t v8 = *(void *)(v24[0] + 32);
  if (v8 >= -(uint64_t)v5 && v8 < (uint64_t)v5)
  {
    uint64_t v9 = 0;
    uint64_t v10 = a1[2];
    uint64_t v11 = v7 - 1;
    while (1)
    {
      v24[0] = v8;
      v24[1] = v10;
      char v25 = 6;
      if (v8 < -v10 || v8 >= v10) {
        goto LABEL_65;
      }
      sub_19E607D84((uint64_t)v24);
      uint64_t v12 = (v10 & (v8 >> 63)) + v8;
      if (v12 >= a1[2]) {
        goto LABEL_51;
      }
      if (v12 < 0) {
        goto LABEL_60;
      }
      if (a1[v12 + 4] != 1)
      {
LABEL_51:
        uint64_t v26 = a1;
        swift_bridgeObjectRelease();
        swift_release();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_19E612754(a1);
      }
      unint64_t v13 = a1[2];
      if (v12 >= v13) {
        goto LABEL_61;
      }
      uint64_t v10 = v13 - 1;
      if ((uint64_t)(v13 - 1 - v12) < 0) {
        goto LABEL_66;
      }
      memmove(&a1[v12 + 4], &a1[v12 + 5], 8 * (v13 - 1 - v12));
      a1[2] = v10;
      if (v11 == v9) {
        goto LABEL_29;
      }
      if ((unint64_t)(v9 + 1) >= *(void *)(v6 + 16)) {
        goto LABEL_62;
      }
      uint64_t v8 = *(void *)(v6 + 8 * v9 + 40);
      if (v8 >= (uint64_t)(1 - v13))
      {
        ++v9;
        if (v8 < v10) {
          continue;
        }
      }
      uint64_t v26 = a1;
      break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19E675C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v7 = *(void *)(a1 + 8 * v5 + 32);
    v13[0] = v7;
    v13[1] = v4;
    char v14 = 6;
    if (v7 < -v4 || v7 >= v4)
    {
      sub_19E5E2970((uint64_t)v13, (uint64_t)v12);
      sub_19E5E1864();
      uint64_t result = sub_19EBF71F8();
      __break(1u);
      return result;
    }
    sub_19E607D84((uint64_t)v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_19E606EE4(0, v6[2] + 1, 1, v6);
    }
    unint64_t v10 = v6[2];
    unint64_t v9 = v6[3];
    if (v10 >= v9 >> 1) {
      uint64_t v6 = sub_19E606EE4((void *)(v9 > 1), v10 + 1, 1, v6);
    }
    ++v5;
    _OWORD v6[2] = v10 + 1;
    v6[v10 + 4] = (v4 & (v7 >> 63)) + v7;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_19E675DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v15 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v5 < ~v6 || v5 > v6) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = v3 - 1;
  while (1)
  {
    v13[0] = v5;
    v13[1] = v6 + 1;
    char v14 = 6;
    if (v5 < ~v6 || v5 > v6) {
      break;
    }
    sub_19E607D84((uint64_t)v13);
    uint64_t v10 = ((v6 + 1) & (v5 >> 63)) + v5;
    if (*(void *)(v2 + 16) < v10) {
      goto LABEL_16;
    }
    if (v10 < 0)
    {
      __break(1u);
      break;
    }
    sub_19E612790(v10, ((v6 + 1) & (v5 >> 63)) + v5, 1);
    if (v9 == v8)
    {
      swift_bridgeObjectRelease();
      return v15;
    }
    uint64_t v5 = *(void *)(a2 + 8 * v8 + 40);
    uint64_t v2 = v15;
    uint64_t v6 = *(void *)(v15 + 16);
    if (v5 >= ~v6)
    {
      ++v8;
      if (v5 <= v6) {
        continue;
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19E5E2970((uint64_t)v13, (uint64_t)v12);
  sub_19E5E1864();
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E675F50(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a1 + 16);
  BOOL v9 = __OFSUB__(a2, v8);
  int64_t v10 = a2 - v8;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    return v7;
  }
  if (!((v10 < 0) ^ v9 | (v10 == 0)))
  {
    uint64_t v18 = sub_19E60F71C(1uLL, v10);
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_19E612A98(v11);
    return v18;
  }
  if (__OFSUB__(v8, a2))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = sub_19E5D9CF0(v8 - a2, a1);
  uint64_t v3 = v12;
  uint64_t v4 = v13;
  unint64_t v5 = v14;
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t v7 = sub_19E5DDDB0(v2, v3, v4, v5);
    swift_unknownObjectRelease();
    return v7;
  }
  sub_19EBF73A8();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  swift_release();
  if (__OFSUB__(v5 >> 1, v4)) {
    goto LABEL_17;
  }
  if (v16 != (v5 >> 1) - v4)
  {
LABEL_18:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  uint64_t v7 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v7)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

uint64_t sub_19E6760B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_19E675C38(a2, a1);
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_19E6362C4(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7 != *(void *)(a1 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    while (*(void *)(v4 + 8 * v9 + 32) < v7)
    {
      if (v8 == ++v9) {
        goto LABEL_6;
      }
    }
    goto LABEL_7;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_19E674FD8(0, v7, a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_19E6761B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = a1;
    uint64_t v5 = 0;
    uint64_t v7 = a1 + 32;
    uint64_t v6 = *(void **)(a1 + 32);
    unint64_t v8 = v6[2];
    while (*(void *)(*(void *)(a1 + 8 * v5 + 32) + 16) == v8)
    {
      if (v2 == ++v5)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = 1;
        uint64_t v10 = v6;
        while (1)
        {
          swift_bridgeObjectRetain();
          if (v8)
          {
            for (unint64_t i = 0; v8 != i; ++i)
            {
              if (a2 != i)
              {
                if (i >= v8)
                {
                  __break(1u);
                  goto LABEL_31;
                }
                if (v10[i + 4] != v6[i + 4])
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_15;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          if (v9 == v2) {
            break;
          }
          uint64_t v12 = *(void **)(v7 + 8 * v9);
          unint64_t v8 = v12[2];
          ++v9;
          uint64_t v10 = v12;
          if (v8 != v6[2])
          {
LABEL_15:
            swift_bridgeObjectRelease();
LABEL_16:
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = v6[2];
        if (-v14 > a2 || v14 <= a2) {
          goto LABEL_16;
        }
        uint64_t v4 = (v14 & (a2 >> 63)) + a2;
        if (v4 >= 0)
        {
          a2 = 0;
          while (v4 < *(void *)(*(void *)v7 + 16))
          {
            uint64_t v15 = *(void *)(*(void *)v7 + 8 * v4 + 32);
            BOOL v16 = __OFADD__(a2, v15);
            a2 += v15;
            if (v16) {
              goto LABEL_32;
            }
            v7 += 8;
            if (!--v2)
            {
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0) {
                goto LABEL_34;
              }
              goto LABEL_27;
            }
          }
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
        }
        __break(1u);
LABEL_34:
        uint64_t result = (uint64_t)sub_19E612754(v6);
        uint64_t v6 = (void *)result;
LABEL_27:
        if (v4 < v6[2])
        {
          v6[v4 + 4] = a2;
          return (uint64_t)v6;
        }
        __break(1u);
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_19E67638C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1[2];
  v11[0] = a3;
  v11[1] = v3;
  char v12 = 6;
  if (-v3 > a3 || v3 <= a3) {
    goto LABEL_22;
  }
  uint64_t v7 = a1;
  sub_19E607D84((uint64_t)v11);
  unint64_t v8 = (v3 & (a3 >> 63)) + a3;
  if (v3 < (uint64_t)v8) {
    return 0;
  }
  if (v8 < v3)
  {
    uint64_t v3 = v7[v8 + 4];
    if (a2 == -1)
    {
LABEL_11:
      if (v3 != 0x8000000000000000) {
        goto LABEL_15;
      }
      __break(1u);
LABEL_13:
      if (v3 % a2) {
        return 0;
      }
LABEL_15:
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
    if (a2) {
      goto LABEL_13;
    }
    if (!v3)
    {
      __break(1u);
      goto LABEL_11;
    }
    return 0;
  }
  __break(1u);
LABEL_20:
  uint64_t v7 = sub_19E612754(v7);
LABEL_16:
  if (v8 >= v7[2])
  {
    __break(1u);
LABEL_22:
    sub_19E5E2970((uint64_t)v11, (uint64_t)v10);
    sub_19E5E1864();
    uint64_t result = sub_19EBF71F8();
    __break(1u);
    return result;
  }
  v7[v8 + 4] = v3 / a2;
  return sub_19E60F808((uint64_t)v7, a2);
}

void *sub_19E6764E0(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  unint64_t v4 = result[2];
  if (-(uint64_t)v4 > a3 || (uint64_t)v4 <= a3) {
    return (void *)v3;
  }
  unint64_t v6 = (v4 & (a3 >> 63)) + a3;
  if (v6 < v4)
  {
    unint64_t v8 = result;
    uint64_t v9 = result[v6 + 4];
    uint64_t v10 = *(void *)(a2 + 16);
    if (v10)
    {
      uint64_t v11 = 0;
      char v12 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v13 = *v12++;
        BOOL v14 = __OFADD__(v11, v13);
        v11 += v13;
        if (v14)
        {
          __break(1u);
          goto LABEL_16;
        }
        --v10;
      }
      while (v10);
      if (v9 != v11) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_19E67512C(a2, v8, v6);
    swift_bridgeObjectRelease();
    return (void *)v3;
  }
LABEL_16:
  __break(1u);
  return result;
}

void *sub_19E6765B4(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2 != a1[2]) {
    return 0;
  }
  uint64_t v3 = a1;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    unint64_t v6 = (void *)(a2 + 16 * v2 + 24);
    uint64_t v7 = -v2;
    while (1)
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = v8 + *v6;
      if (__OFADD__(v8, *v6)) {
        break;
      }
      uint64_t v10 = v3[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_19E612754(v3);
      }
      unint64_t v11 = v5 + v10 - 1;
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if (v11 >= v3[2]) {
        goto LABEL_16;
      }
      uint64_t v12 = v3[v11 + 4];
      BOOL v13 = __OFADD__(v12, v9);
      uint64_t v14 = v12 + v9;
      if (v13) {
        goto LABEL_17;
      }
      v6 -= 2;
      v3[v11 + 4] = v14;
      if (v7 == --v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

void *sub_19E6766C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3 != *(void *)(a2 + 16) || v3 != *(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t result = sub_19E606EE4(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v8 = result;
  if (!v3)
  {
LABEL_16:
    if (sub_19E5DDC7C(v8, qword_1EF0C6900))
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x1E4FBC860];
    }
    return v8;
  }
  uint64_t v9 = (uint64_t *)(a2 + 32);
  uint64_t v10 = (uint64_t *)(a1 + 32);
  unint64_t v11 = (uint64_t *)(a3 + 32);
  while (1)
  {
    uint64_t v13 = *v9++;
    uint64_t v12 = v13;
    uint64_t v14 = *v10++;
    BOOL v15 = __OFSUB__(v12, v14);
    uint64_t v16 = v12 - v14;
    if (v15) {
      break;
    }
    BOOL v15 = __OFSUB__(v16, 1);
    uint64_t v17 = v16 - 1;
    if (v15) {
      goto LABEL_22;
    }
    uint64_t v18 = *v11;
    if (*v11 < 0)
    {
      BOOL v15 = __OFSUB__(0, v18);
      uint64_t v18 = -v18;
      if (v15) {
        goto LABEL_25;
      }
    }
    else if (!v18)
    {
      goto LABEL_23;
    }
    uint64_t v19 = v17 / v18;
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      goto LABEL_24;
    }
    if (v20 < 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    unint64_t v22 = v8[2];
    unint64_t v21 = v8[3];
    if (v22 >= v21 >> 1)
    {
      uint64_t result = sub_19E606EE4((void *)(v21 > 1), v22 + 1, 1, v8);
      uint64_t v8 = result;
    }
    long long v8[2] = v22 + 1;
    v8[v22 + 4] = v20;
    ++v11;
    if (!--v3) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void *sub_19E676824(uint64_t a1, char a2, uint64_t a3, char a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 < 2) {
    return 0;
  }
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 < 2) {
    return 0;
  }
  unint64_t v8 = a1 + 8 * v4;
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v9 = *(void *)(v8 + 24);
  unint64_t v11 = a3 + 8 * v6;
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v14 = (a2 & 1) != 0 ? v10 : v9;
  uint64_t v15 = (a2 & 1) != 0 ? v9 : v10;
  uint64_t v16 = (a4 & 1) != 0 ? v13 : v12;
  uint64_t v17 = (a4 & 1) != 0 ? v12 : v13;
  if (v14 != v17) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_19E67438C(2, a1);
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_19E67438C(2, a3);
  uint64_t v20 = sub_19E6753E8(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v20) {
    return 0;
  }
  char v23 = (void *)v20[2];
  uint64_t v24 = (uint64_t)v23 + 2;
  if (__OFADD__(v23, 2))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && (unint64_t v21 = v20[3], v26 = v21 >> 1, (uint64_t)(v21 >> 1) >= v24))
    {
      char v23 = v20;
    }
    else
    {
      if ((uint64_t)v23 <= v24) {
        int64_t v28 = (int64_t)v23 + 2;
      }
      else {
        int64_t v28 = (int64_t)v23;
      }
      char v23 = sub_19E606EE4(isUniquelyReferenced_nonNull_native, v28, 1, v20);
      unint64_t v21 = v23[3];
      unint64_t v26 = v21 >> 1;
    }
    uint64_t v24 = v23[2];
    int64_t v22 = v24 + 1;
    if (v26 > v24) {
      goto LABEL_28;
    }
  }
  int64_t v33 = v22;
  uint64_t v30 = sub_19E606EE4((void *)(v21 > 1), v22, 1, v23);
  int64_t v22 = v33;
  char v23 = v30;
  unint64_t v21 = v30[3];
  unint64_t v26 = v21 >> 1;
LABEL_28:
  v23[2] = v22;
  v23[v24 + 4] = v15;
  int64_t v29 = v24 + 2;
  if ((uint64_t)v26 < v24 + 2)
  {
    int64_t v31 = v22;
    int64_t v34 = v29;
    uint64_t v32 = sub_19E606EE4((void *)(v21 > 1), v29, 1, v23);
    int64_t v29 = v34;
    int64_t v22 = v31;
    char v23 = v32;
  }
  v23[2] = v29;
  v23[v22 + 4] = v16;
  swift_bridgeObjectRelease();
  return v23;
}

void *sub_19E6769FC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9 = a1[2];
  if (v9 < 2)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v10 = a2[2];
  if (v10 < 2)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v11 = a2[5];
  if ((unsigned __int128)(v11 * (__int128)a9) >> 64 != (v11 * a9) >> 63)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (a1[5] != v11 * a9) {
    goto LABEL_52;
  }
  if (v9 != 4 || v10 != 4) {
    goto LABEL_50;
  }
  if (a5 + 0x4000000000000000 < 0) {
    goto LABEL_46;
  }
  uint64_t v13 = a1[6];
  BOOL v14 = __OFADD__(v13, 2 * a5);
  uint64_t v15 = v13 + 2 * a5;
  if (v14)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v15 < a2[6]) {
    goto LABEL_59;
  }
  uint64_t v17 = a6 + 0x4000000000000000;
  if (a6 + 0x4000000000000000 < 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v18 = a1[7];
  BOOL v14 = __OFADD__(v18, 2 * a6);
  uint64_t v19 = v18 + 2 * a6;
  if (v14)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF7318();
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    goto LABEL_51;
  }
  uint64_t v46 = a2[6];
  uint64_t v47 = a5 + 0x4000000000000000;
  uint64_t v20 = a2[7];
  if (v19 < v20)
  {
LABEL_59:
    while (1)
    {
LABEL_51:
      sub_19EBF71F8();
      __break(1u);
LABEL_52:
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
    }
  }
  int64_t v22 = sub_19E606EE4(0, 4, 0, MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v25 = a7;
  uint64_t v24 = a8;
  uint64_t v27 = a3;
  uint64_t v26 = a5;
  uint64_t v28 = v47;
  int64_t v29 = a2;
  uint64_t v30 = v46;
  do
  {
    uint64_t v31 = a1[v23 + 4];
    if (!v23) {
      goto LABEL_30;
    }
    uint64_t v32 = v17;
    uint64_t v33 = a6;
    uint64_t v34 = a4;
    uint64_t v35 = v24;
    uint64_t v36 = v20;
    if (v23 != 3)
    {
      if (v23 == 1)
      {
        uint64_t v31 = v29[4];
        goto LABEL_30;
      }
      uint64_t v32 = v28;
      uint64_t v33 = v26;
      uint64_t v34 = v27;
      uint64_t v35 = v25;
      uint64_t v36 = v30;
    }
    if (v32 < 0)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    BOOL v14 = __OFADD__(v31, 2 * v33);
    uint64_t v37 = v31 + 2 * v33;
    if (v14) {
      goto LABEL_35;
    }
    BOOL v14 = __OFSUB__(v36, 1);
    uint64_t v38 = v36 - 1;
    if (v14) {
      goto LABEL_36;
    }
    uint64_t v39 = v35 * v38;
    if ((unsigned __int128)(v35 * (__int128)v38) >> 64 != (v35 * v38) >> 63) {
      goto LABEL_37;
    }
    uint64_t v40 = v37 - v39;
    if (__OFSUB__(v37, v39)) {
      goto LABEL_38;
    }
    BOOL v14 = __OFSUB__(v40, 1);
    uint64_t v41 = v40 - 1;
    if (v14) {
      goto LABEL_39;
    }
    if (!v34) {
      goto LABEL_40;
    }
    if (v41 == 0x8000000000000000 && v34 == -1) {
      goto LABEL_42;
    }
    uint64_t v42 = v41 / v34;
    uint64_t v31 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      goto LABEL_41;
    }
    if (v31 < 1) {
      goto LABEL_50;
    }
LABEL_30:
    unint64_t v44 = v22[2];
    unint64_t v43 = v22[3];
    if (v44 >= v43 >> 1)
    {
      int64_t v22 = sub_19E606EE4((void *)(v43 > 1), v44 + 1, 1, v22);
      uint64_t v25 = a7;
      uint64_t v24 = a8;
      uint64_t v27 = a3;
      uint64_t v26 = a5;
      uint64_t v28 = v47;
      int64_t v29 = a2;
      uint64_t v30 = v46;
    }
    ++v23;
    void v22[2] = v44 + 1;
    v22[v44 + 4] = v31;
  }
  while (v23 != 4);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_19E676FD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19E674F94(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_19E676FF0(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_19E66F708(0, v5, 0);
    uint64_t v6 = v20;
    for (unint64_t i = (char *)(a3 + 41); ; i += 16)
    {
      char v10 = *(i - 1);
      char v11 = *i;
      uint64_t v16 = *(void *)(i - 9);
      char v17 = v10;
      char v18 = v11;
      swift_bridgeObjectRetain();
      a1(&v19, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v12 = v19;
      uint64_t v20 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_19E66F708(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v20;
      }
      *(void *)(v6 + 16) = v14 + 1;
      *(void *)(v6 + 8 * v14 + 32) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_19E67712C(uint64_t a1)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v3 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int64_t v5 = (unint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = v1;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v6, 0);
    uint64_t v7 = v19;
    unint64_t v8 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v10 = *v8++;
      unint64_t v9 = v10;
      switch(v10 >> 62)
      {
        case 1uLL:
        case 3uLL:
          char v11 = (void **)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          char v11 = (void **)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          char v11 = (void **)(v9 + 40);
          break;
      }
      uint64_t v12 = *v11;
      swift_bridgeObjectRetain();
      swift_retain_n();
      unint64_t v13 = sub_19E69B568(v9);
      sub_19E68F8F0(v12, (uint64_t)v13);
      swift_release();
      *int64_t v5 = v9;
      uint64_t v19 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_19E66F8E8(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v15 + 1;
      sub_19E5E7C14((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15, &qword_1E945CEE0);
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_19E677340(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  uint64_t v20 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (unint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = v3;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v9, 0);
    uint64_t v10 = v21;
    char v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          unint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          unint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          unint64_t v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      swift_retain();
      v20(v15, 0);
      *unint64_t v8 = v12;
      uint64_t v21 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19E66F8E8(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v17 + 1;
      sub_19E5E7C14((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, &qword_1E945CEE0);
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_19E677548(uint64_t a1)
{
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v3 = *(void *)(v27 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v27);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v26 = (char *)v23 - v7;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v23[0] = v1;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_19E66F708(0, v8, 0);
    uint64_t v10 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v25 = *(void *)(v3 + 72);
    uint64_t v11 = sub_19EBF6188();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v23[1] = v12 + 16;
    uint64_t v24 = v13;
    unint64_t v14 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    do
    {
      uint64_t v15 = v27;
      uint64_t v16 = *(int *)(v27 + 48);
      unint64_t v17 = &v26[v16];
      uint64_t v18 = *v10;
      v24(&v26[v16], (char *)v10 + v16, v11);
      uint64_t v19 = (char *)v6 + *(int *)(v15 + 48);
      *uint64_t v6 = v18;
      (*v14)(v19, v17, v11);
      swift_retain_n();
      sub_19E68D51C((uint64_t)v6, &qword_1E945CEE0);
      uint64_t v9 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19E66F708(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v28;
      }
      unint64_t v21 = *(void *)(v9 + 16);
      unint64_t v20 = *(void *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_19E66F708(v20 > 1, v21 + 1, 1);
        uint64_t v9 = v28;
      }
      uint64_t v10 = (uint64_t *)((char *)v10 + v25);
      *(void *)(v9 + 16) = v21 + 1;
      *(void *)(v9 + 8 * v21 + 32) = v18;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *sub_19E67779C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v15)(int *__return_ptr, uint64_t *);
  uint64_t v16;
  int v17;
  uint64_t v18;

  uint64_t v15 = (void *(*)(int *__return_ptr, uint64_t *))result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return (void *)v7;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t result = (void *)sub_19E66FA28(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v18;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      uint64_t v16 = v11;
      uint64_t result = v15(&v17, &v16);
      if (v6)
      {
        swift_release();
        return (void *)v7;
      }
      uint64_t v6 = 0;
      int v12 = v17;
      uint64_t v18 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (void *)sub_19E66FA28(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v18;
      }
      *(void *)(v7 + 16) = v14 + 1;
      *(_DWORD *)(v7 + 4 * v14 + 32) = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v10 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return (void *)v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19E6778F0(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for BNNSDevice();
  swift_allocObject();
  id v4 = a1;
  uint64_t v5 = sub_19E692848(v4);
  if (v5)
  {
    *(void *)(v2 + 16) = v5;
    uint64_t v6 = type metadata accessor for AsyncComputeFunctionScheduler();
    swift_allocObject();
    swift_retain();
    uint64_t v7 = sub_19E6873D4();
    uint64_t v10 = v6;
    uint64_t v11 = &off_1EF0C9718;
    swift_release();

    *(void *)&long long v9 = v7;
    sub_19E5FE188(&v9, v2 + 24);
    return v2;
  }
  else
  {
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v9 = 0;
      *((void *)&v9 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      char v12 = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19E677AC4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t type metadata accessor for BNNSComputeStream()
{
  return self;
}

uint64_t sub_19E677B28(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  __int16 v4 = a2 & 0x1FF;
  uint64_t v5 = (void *)swift_bridgeObjectRetain();
  sub_19E6C8EB8(v5, v4, a3);
  return v6 | 0x4000000000000000;
}

os_unfair_lock_t sub_19E677B70(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E6858FC(a1, a2, MEMORY[0x1E4FBC870], a3);
}

uint64_t sub_19E677BA0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E681514(a1, a2, a3);
}

uint64_t sub_19E677BC4(int a1, uint64_t a2, uint64_t a3)
{
  __int16 v4 = v3;
  uint64_t v65 = a3;
  int v66 = a1;
  v74[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v72 = v6;
  if (v6)
  {
    uint64_t v64 = v3;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v7 = 0;
    int64_t v8 = (uint64_t *)v74[0];
    uint64_t v71 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      os_unfair_lock_t v7 = (os_unfair_lock_t)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!v8[2]) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = v8[7] + 16 * v17;
          unint64_t v70 = v8;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v68 = swift_getObjectType();
          unint64_t v69 = v14;
          uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          uint64_t v21 = v20;
          int64_t v8 = v70;
          unint64_t v22 = v67(v68, v21);
          swift_unknownObjectRelease();
          if (v69 >= v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v73 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            uint64_t v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v74[0] = 0;
                v74[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v63) = 0;
              uint64_t v62 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E6783D0);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              a2 = v71;
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v35 = v73;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v35 = v73;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              a2 = v71;
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_37;
              }
              unint64_t v28 = v33;
              uint64_t v35 = v73;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                uint64_t v37 = (uint64_t *)(v35[7] + 16 * v28);
                *uint64_t v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_36;
                }
                int64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            uint64_t v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *uint64_t v36 = v10;
            v36[1] = v11;
            int64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v71;
LABEL_5:
          if (v72 == v7)
          {
            swift_bridgeObjectRelease();
            __int16 v4 = v64;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    unint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    unint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    unint64_t v70 = v44;
    sub_19E68C444((uint64_t)v44, v74);
    os_unfair_lock_t v72 = v45;
    os_unfair_lock_unlock(v45);
    if (!v74[0]) {
      goto LABEL_38;
    }
    uint64_t v46 = *(void *)(v74[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), v74);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v74[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v62 = (uint64_t)v4;
    uint64_t v63 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v61, v65);
    uint64_t v50 = swift_allocObject();
    *(unsigned char *)(v50 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v51 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v51;
    v53[3] = v52;
    v53[4] = v42;
    v53[5] = v47;
    v53[6] = sub_19E68D1E4;
    v53[7] = v50;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    char v54 = v72;
    os_unfair_lock_lock(v72);
    sub_19E68C49C(v70);
    os_unfair_lock_unlock(v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v65, 0);
    uint64_t v49 = v55;
    swift_release();
    uint64_t v56 = swift_allocObject();
    *(unsigned char *)(v56 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v57;
    inited[3] = v58;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D668;
    inited[7] = v56;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v49;
}

uint64_t sub_19E6783E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  os_unfair_lock_t v7 = v6;
  uint64_t v70 = a6;
  uint64_t v73 = a4;
  uint64_t v71 = a3;
  uint64_t v72 = a2;
  int v74 = a1;
  v82[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  unint64_t v9 = *(os_unfair_lock_s **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v80 = a5;
  if (v9)
  {
    unint64_t v69 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)v82[0];
    os_unfair_lock_t v79 = v9;
    while (1)
    {
      unint64_t v12 = *(void *)(a5 + 8 * (void)v10 + 32);
      uint64_t v10 = (os_unfair_lock_s *)((char *)v10 + 1);
      switch(v12 >> 62)
      {
        case 1uLL:
          uint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v13 = sub_19E6C4398();
          uint64_t v14 = v15;
          if (v13) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v13 = *(void *)(v12 + 24);
          uint64_t v14 = *(void *)(v12 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v13) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(ObjectType, v14) & 1) == 0)
          {
            uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(ObjectType, v14);
            char v18 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 24);
            uint64_t v19 = v18(ObjectType, v14);
            if (v11[2])
            {
              unint64_t v20 = sub_19E6628BC(v19);
              if (v21)
              {
                uint64_t v22 = v11[7] + 16 * v20;
                unint64_t v77 = v17;
                uint64_t v23 = *(void *)(v22 + 8);
                uint64_t v76 = swift_getObjectType();
                uint64_t v78 = v11;
                uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
                swift_unknownObjectRetain();
                unint64_t v24 = v75(v76, v23);
                swift_unknownObjectRelease();
                BOOL v25 = v77 >= v24;
                uint64_t v11 = v78;
                if (!v25)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  unint64_t v9 = v79;
                  a5 = v80;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v26 = v18(ObjectType, v14);
            swift_unknownObjectRetain();
            uint64_t v27 = v11;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v81 = v27;
            unint64_t v30 = sub_19E6628BC(v26);
            uint64_t v31 = v27[2];
            BOOL v32 = (v29 & 1) == 0;
            uint64_t v33 = v31 + v32;
            if (__OFADD__(v31, v32))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v82[0] = 0;
                v82[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v68) = 0;
              uint64_t v67 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E678C50);
            }
            char v34 = v29;
            if (v27[3] >= v33)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v11 = v81;
                if ((v29 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v11 = v81;
                if ((v34 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v33, isUniquelyReferenced_nonNull_native);
              unint64_t v35 = sub_19E6628BC(v26);
              if ((v34 & 1) != (v36 & 1)) {
                goto LABEL_38;
              }
              unint64_t v30 = v35;
              uint64_t v11 = v81;
              if ((v34 & 1) == 0)
              {
LABEL_26:
                v11[(v30 >> 6) + 8] |= 1 << v30;
                *(void *)(v11[6] + 8 * v30) = v26;
                uint64_t v38 = (uint64_t *)(v11[7] + 16 * v30);
                uint64_t *v38 = v13;
                v38[1] = v14;
                uint64_t v39 = v11[2];
                BOOL v40 = __OFADD__(v39, 1);
                uint64_t v41 = v39 + 1;
                if (v40) {
                  goto LABEL_37;
                }
                void v11[2] = v41;
                goto LABEL_28;
              }
            }
            uint64_t v37 = (uint64_t *)(v11[7] + 16 * v30);
            swift_unknownObjectRelease();
            *uint64_t v37 = v13;
            v37[1] = v14;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v9 == v10)
          {
            swift_bridgeObjectRelease();
            os_unfair_lock_t v7 = v69;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  char v42 = v74 & 1;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_19E5DE088(v43);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v44 + 16))
  {
    uint64_t v45 = *(os_unfair_lock_s **)(v7[2] + 40);
    uint64_t v46 = (uint64_t *)&v45[4];
    uint64_t v47 = v45 + 6;
    os_unfair_lock_lock(v45 + 6);
    uint64_t v78 = v46;
    sub_19E68C444((uint64_t)v46, v82);
    os_unfair_lock_t v79 = v47;
    os_unfair_lock_unlock(v47);
    if (!v82[0]) {
      goto LABEL_39;
    }
    uint64_t v48 = *(void *)(v82[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v48 + 24));
    sub_19E68C460((uint64_t *)(v48 + 16), v82);
    os_unfair_lock_unlock((os_unfair_lock_t)(v48 + 24));
    uint64_t v49 = v82[0];
    uint64_t v50 = swift_release();
    MEMORY[0x1F4188790](v50);
    uint64_t v67 = (uint64_t)v7;
    uint64_t v68 = v49;
    uint64_t v51 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v66, v70);
    uint64_t v52 = swift_allocObject();
    *(unsigned char *)(v52 + 16) = v42;
    uint64_t v53 = v71;
    *(void *)(v52 + 24) = v72;
    *(void *)(v52 + 32) = v53;
    *(void *)(v52 + 40) = v73;
    uint64_t v54 = v80;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v55 = sub_19E69E1D8(v54);
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_19E69E488(v51);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v57 = (void *)swift_allocObject();
    uint64_t v57[2] = v55;
    v57[3] = v56;
    v57[4] = v44;
    v57[5] = v49;
    v57[6] = sub_19E68D1B8;
    v57[7] = v52;
    __swift_project_boxed_opaque_existential_1(v7 + 3, v7[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v57);
    swift_release();
    swift_release();
    uint64_t v58 = v79;
    os_unfair_lock_lock(v79);
    sub_19E68C49C(v78);
    os_unfair_lock_unlock(v58);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v70, 0);
    uint64_t v51 = v59;
    swift_release();
    uint64_t v60 = swift_allocObject();
    *(unsigned char *)(v60 + 16) = v42;
    uint64_t v61 = v71;
    *(void *)(v60 + 24) = v72;
    *(void *)(v60 + 32) = v61;
    *(void *)(v60 + 40) = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_19E69E1D8(a5);
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_19E69E488(v51);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v62;
    inited[3] = v63;
    inited[4] = v44;
    inited[5] = 0;
    inited[6] = sub_19E68D1B8;
    inited[7] = v60;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v51;
}

uint64_t sub_19E678C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v4 = v3;
  uint64_t v55 = a3;
  uint64_t v56 = a1;
  v64[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v61 = a2;
  if (v6)
  {
    uint64_t v54 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    int64_t v8 = (void *)v64[0];
    uint64_t v60 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v62 = v7;
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (v8[2])
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v19 = *(void *)(v8[7] + 16 * v17 + 8);
                uint64_t v58 = swift_getObjectType();
                unint64_t v59 = v14;
                uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                unint64_t v20 = v57(v58, v19);
                swift_unknownObjectRelease();
                if (v59 < v20)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  uint64_t v6 = v60;
                  a2 = v61;
                  uint64_t v7 = v62;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v21 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v63 = v8;
            unint64_t v24 = sub_19E6628BC(v21);
            uint64_t v25 = v8[2];
            BOOL v26 = (v23 & 1) == 0;
            uint64_t v27 = v25 + v26;
            if (__OFADD__(v25, v26))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              sub_19EBF7408();
              __break(1u);
LABEL_43:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v64[0] = 0;
                v64[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v53) = 0;
              uint64_t v52 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E679344);
            }
            char v28 = v23;
            if (v8[3] >= v27)
            {
              uint64_t v7 = v62;
              if (isUniquelyReferenced_nonNull_native)
              {
                int64_t v8 = v63;
                if ((v23 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                int64_t v8 = v63;
                if ((v28 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v27, isUniquelyReferenced_nonNull_native);
              unint64_t v29 = sub_19E6628BC(v21);
              uint64_t v7 = v62;
              if ((v28 & 1) != (v30 & 1)) {
                goto LABEL_42;
              }
              unint64_t v24 = v29;
              int64_t v8 = v63;
              if ((v28 & 1) == 0)
              {
LABEL_26:
                v8[(v24 >> 6) + 8] |= 1 << v24;
                *(void *)(v8[6] + 8 * v24) = v21;
                BOOL v32 = (uint64_t *)(v8[7] + 16 * v24);
                *BOOL v32 = v11;
                v32[1] = v10;
                uint64_t v33 = v8[2];
                BOOL v34 = __OFADD__(v33, 1);
                uint64_t v35 = v33 + 1;
                if (v34) {
                  goto LABEL_41;
                }
                long long v8[2] = v35;
                goto LABEL_28;
              }
            }
            uint64_t v31 = (uint64_t *)(v8[7] + 16 * v24);
            swift_unknownObjectRelease();
            *uint64_t v31 = v11;
            v31[1] = v10;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v6 = v60;
            a2 = v61;
            goto LABEL_5;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            __int16 v4 = v54;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_19E5DE088(v36);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v37 + 16))
  {
    uint64_t v38 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v39 = (uint64_t *)&v38[4];
    BOOL v40 = v38 + 6;
    os_unfair_lock_lock(v38 + 6);
    sub_19E68C444((uint64_t)v39, v64);
    os_unfair_lock_unlock(v40);
    if (!v64[0]) {
      goto LABEL_43;
    }
    uint64_t v41 = *(void *)(v64[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v41 + 24));
    sub_19E68C460((uint64_t *)(v41 + 16), v64);
    os_unfair_lock_unlock((os_unfair_lock_t)(v41 + 24));
    uint64_t v42 = v64[0];
    uint64_t v43 = swift_release();
    MEMORY[0x1F4188790](v43);
    uint64_t v52 = (uint64_t)v4;
    uint64_t v53 = v42;
    uint64_t v44 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v51, v55);
    uint64_t v45 = sub_19E6998BC(v61, v44, v37, v42);
    uint64_t v46 = v4;
    uint64_t v47 = (uint64_t)v45;
    if (v45[5])
    {
      __swift_project_boxed_opaque_existential_1(v46 + 3, v46[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C(v47);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v40);
    sub_19E68C49C(v39);
    os_unfair_lock_unlock(v40);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v55, 0);
    uint64_t v44 = v48;
    swift_release();
    uint64_t v49 = sub_19E6998BC(a2, v44, v37, 0);
    if (v49[5])
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v49);
    }
    else
    {
      sub_19E6868FC();
    }
  }
  swift_release();
  swift_release();
  return v44;
}

uint64_t sub_19E679354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v4 = v3;
  uint64_t v67 = a3;
  uint64_t v68 = a1;
  *(void *)&long long v76 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  int v74 = v6;
  if (v6)
  {
    uint64_t v66 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    os_unfair_lock_t v8 = (os_unfair_lock_t)v76;
    uint64_t v73 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      uint64_t v7 = (uint64_t *)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!*(void *)&v8[4]._os_unfair_lock_opaque) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = *(void *)&v8[14]._os_unfair_lock_opaque + 16 * v17;
          unint64_t v71 = v14;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v70 = swift_getObjectType();
          os_unfair_lock_t v72 = v8;
          unint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          unint64_t v21 = v69(v70, v20);
          swift_unknownObjectRelease();
          BOOL v22 = v71 >= v21;
          os_unfair_lock_t v8 = v72;
          if (v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            os_unfair_lock_t v24 = v8;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v75 = v24;
            unint64_t v27 = sub_19E6628BC(v23);
            uint64_t v28 = *(void *)&v24[4]._os_unfair_lock_opaque;
            BOOL v29 = (v26 & 1) == 0;
            uint64_t v30 = v28 + v29;
            if (__OFADD__(v28, v29))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&long long v76 = 0;
                *((void *)&v76 + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v65) = 0;
              uint64_t v64 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E679C00);
            }
            char v31 = v26;
            if (*(void *)&v24[6]._os_unfair_lock_opaque >= v30)
            {
              a2 = v73;
              if (isUniquelyReferenced_nonNull_native)
              {
                os_unfair_lock_t v8 = (os_unfair_lock_t)v75;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                os_unfair_lock_t v8 = (os_unfair_lock_t)v75;
                if ((v31 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v30, isUniquelyReferenced_nonNull_native);
              unint64_t v32 = sub_19E6628BC(v23);
              a2 = v73;
              if ((v31 & 1) != (v33 & 1)) {
                goto LABEL_37;
              }
              unint64_t v27 = v32;
              os_unfair_lock_t v8 = (os_unfair_lock_t)v75;
              if ((v31 & 1) == 0)
              {
LABEL_26:
                *(void *)&v8[2 * (v27 >> 6) + 16]._os_unfair_lock_opaque |= 1 << v27;
                *(void *)(*(void *)&v8[12]._os_unfair_lock_opaque + 8 * v27) = v23;
                uint64_t v35 = (uint64_t *)(*(void *)&v8[14]._os_unfair_lock_opaque + 16 * v27);
                uint64_t *v35 = v10;
                v35[1] = v11;
                uint64_t v36 = *(void *)&v8[4]._os_unfair_lock_opaque;
                BOOL v37 = __OFADD__(v36, 1);
                uint64_t v38 = v36 + 1;
                if (v37) {
                  goto LABEL_36;
                }
                *(void *)&v8[4]._os_unfair_lock_opaque = v38;
                goto LABEL_28;
              }
            }
            BOOL v34 = (uint64_t *)(*(void *)&v8[14]._os_unfair_lock_opaque + 16 * v27);
            swift_unknownObjectRelease();
            uint64_t *v34 = v10;
            v34[1] = v11;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v73;
LABEL_5:
          if (v74 == v7)
          {
            swift_bridgeObjectRelease();
            __int16 v4 = v66;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_19E5DE088(v39);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v40 + 16))
  {
    uint64_t v41 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v42 = (uint64_t *)&v41[4];
    uint64_t v43 = v41 + 6;
    os_unfair_lock_lock(v41 + 6);
    int v74 = v42;
    sub_19E68C444((uint64_t)v42, (uint64_t *)&v76);
    os_unfair_lock_t v72 = v43;
    os_unfair_lock_unlock(v43);
    if (!(void)v76) {
      goto LABEL_38;
    }
    uint64_t v44 = *(void *)(v76 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_19E68C460((uint64_t *)(v44 + 16), (uint64_t *)&v76);
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    uint64_t v45 = v76;
    uint64_t v46 = swift_release();
    MEMORY[0x1F4188790](v46);
    uint64_t v64 = (uint64_t)v4;
    uint64_t v65 = v45;
    uint64_t v47 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v63, v67);
    uint64_t v48 = v68;
    v77[0] = *(void *)v68;
    long long v76 = *(_OWORD *)(v68 + 8);
    long long v75 = *(_OWORD *)(v68 + 24);
    uint64_t v49 = swift_allocObject();
    long long v50 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)(v49 + 16) = *(_OWORD *)v48;
    *(_OWORD *)(v49 + 32) = v50;
    *(void *)(v49 + 48) = *(void *)(v48 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19E5F63A4((uint64_t)v77);
    sub_19E668FC4((uint64_t)&v76);
    sub_19E668FC4((uint64_t)&v75);
    swift_retain();
    uint64_t v51 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_19E69E488(v47);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v51;
    v53[3] = v52;
    v53[4] = v40;
    v53[5] = v45;
    v53[6] = sub_19E68D200;
    v53[7] = v49;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    uint64_t v54 = v72;
    os_unfair_lock_lock(v72);
    sub_19E68C49C(v74);
    os_unfair_lock_unlock(v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v67, 0);
    uint64_t v47 = v55;
    swift_release();
    uint64_t v56 = v68;
    v77[0] = *(void *)v68;
    long long v76 = *(_OWORD *)(v68 + 8);
    long long v75 = *(_OWORD *)(v68 + 24);
    uint64_t v57 = swift_allocObject();
    long long v58 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)(v57 + 16) = *(_OWORD *)v68;
    *(_OWORD *)(v57 + 32) = v58;
    *(void *)(v57 + 48) = *(void *)(v56 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19E5F63A4((uint64_t)v77);
    sub_19E668FC4((uint64_t)&v76);
    sub_19E668FC4((uint64_t)&v75);
    uint64_t v59 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_19E69E488(v47);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v59;
    inited[3] = v60;
    inited[4] = v40;
    inited[5] = 0;
    inited[6] = sub_19E68D6C4;
    inited[7] = v57;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v47;
}

uint64_t sub_19E679C10(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  unint64_t v69 = a1;
  *(void *)&v77[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v4 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v75 = v4;
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    os_unfair_lock_t v6 = *(os_unfair_lock_t *)&v77[0];
    uint64_t v74 = a2;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + 8 * v5++ + 32);
      switch(v7 >> 62)
      {
        case 1uLL:
          uint64_t v8 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v9 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v8 = sub_19E6C4398();
          uint64_t v9 = v10;
          if (v8) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v8 = *(void *)(v7 + 24);
          uint64_t v9 = *(void *)(v7 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v8) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v12 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
          uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
          uint64_t v14 = v13(ObjectType, v9);
          if (!*(void *)&v6[4]._os_unfair_lock_opaque) {
            goto LABEL_17;
          }
          unint64_t v15 = sub_19E6628BC(v14);
          if ((v16 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v17 = *(void *)&v6[14]._os_unfair_lock_opaque + 16 * v15;
          os_unfair_lock_t v72 = v12;
          uint64_t v18 = *(void *)(v17 + 8);
          uint64_t v71 = swift_getObjectType();
          os_unfair_lock_t v73 = v6;
          uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 32);
          swift_unknownObjectRetain();
          unint64_t v19 = v70(v71, v18);
          swift_unknownObjectRelease();
          BOOL v20 = (unint64_t)v72 >= v19;
          os_unfair_lock_t v6 = v73;
          if (v20)
          {
LABEL_17:
            uint64_t v21 = v13(ObjectType, v9);
            swift_unknownObjectRetain();
            os_unfair_lock_t v22 = v6;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v76 = v22;
            unint64_t v25 = sub_19E6628BC(v21);
            uint64_t v26 = *(void *)&v22[4]._os_unfair_lock_opaque;
            BOOL v27 = (v24 & 1) == 0;
            uint64_t v28 = v26 + v27;
            if (__OFADD__(v26, v27))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&v77[0] = 0;
                *((void *)&v77[0] + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v66) = 0;
              uint64_t v65 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67A47CLL);
            }
            char v29 = v24;
            if (*(void *)&v22[6]._os_unfair_lock_opaque >= v28)
            {
              a2 = v74;
              if (isUniquelyReferenced_nonNull_native)
              {
                os_unfair_lock_t v6 = (os_unfair_lock_t)v76;
                if ((v24 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                os_unfair_lock_t v6 = (os_unfair_lock_t)v76;
                if ((v29 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v28, isUniquelyReferenced_nonNull_native);
              unint64_t v30 = sub_19E6628BC(v21);
              a2 = v74;
              if ((v29 & 1) != (v31 & 1)) {
                goto LABEL_37;
              }
              unint64_t v25 = v30;
              os_unfair_lock_t v6 = (os_unfair_lock_t)v76;
              if ((v29 & 1) == 0)
              {
LABEL_26:
                *(void *)&v6[2 * (v25 >> 6) + 16]._os_unfair_lock_opaque |= 1 << v25;
                *(void *)(*(void *)&v6[12]._os_unfair_lock_opaque + 8 * v25) = v21;
                char v33 = (uint64_t *)(*(void *)&v6[14]._os_unfair_lock_opaque + 16 * v25);
                *char v33 = v8;
                v33[1] = v9;
                uint64_t v34 = *(void *)&v6[4]._os_unfair_lock_opaque;
                BOOL v35 = __OFADD__(v34, 1);
                uint64_t v36 = v34 + 1;
                if (v35) {
                  goto LABEL_36;
                }
                *(void *)&v6[4]._os_unfair_lock_opaque = v36;
                goto LABEL_28;
              }
            }
            unint64_t v32 = (uint64_t *)(*(void *)&v6[14]._os_unfair_lock_opaque + 16 * v25);
            swift_unknownObjectRelease();
            *unint64_t v32 = v8;
            v32[1] = v9;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v74;
LABEL_5:
          if (v75 == v5)
          {
            swift_bridgeObjectRelease();
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_19E5DE088(v37);
  swift_bridgeObjectRelease_n();
  uint64_t v39 = v68;
  if (*(void *)(v38 + 16))
  {
    uint64_t v75 = v38;
    uint64_t v40 = *(os_unfair_lock_s **)(*(void *)(v68 + 16) + 40);
    uint64_t v41 = (uint64_t *)&v40[4];
    uint64_t v42 = v40 + 6;
    os_unfair_lock_lock(v40 + 6);
    os_unfair_lock_t v72 = v41;
    sub_19E68C444((uint64_t)v41, (uint64_t *)v77);
    os_unfair_lock_t v73 = v42;
    os_unfair_lock_unlock(v42);
    if (!*(void *)&v77[0]) {
      goto LABEL_38;
    }
    uint64_t v43 = *(void *)(*(void *)&v77[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v43 + 24));
    sub_19E68C460((uint64_t *)(v43 + 16), (uint64_t *)v77);
    os_unfair_lock_unlock((os_unfair_lock_t)(v43 + 24));
    uint64_t v44 = *(void *)&v77[0];
    uint64_t v45 = swift_release();
    MEMORY[0x1F4188790](v45);
    uint64_t v65 = v68;
    uint64_t v66 = v44;
    uint64_t v46 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v64, v67);
    uint64_t v47 = sub_19E67712C(a2);
    uint64_t v48 = sub_19E67712C(v46);
    uint64_t v49 = v69;
    long long v50 = v69[1];
    v77[0] = *v69;
    long long v76 = v50;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = a2;
    long long v52 = v49[1];
    *(_OWORD *)(v51 + 24) = *v49;
    *(_OWORD *)(v51 + 40) = v52;
    *(void *)(v51 + 56) = *((void *)v49 + 4);
    *(void *)(v51 + 64) = v46;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v47;
    v53[3] = v48;
    v53[4] = v75;
    v53[5] = v44;
    v53[6] = sub_19E68C718;
    v53[7] = v51;
    __swift_project_boxed_opaque_existential_1((void *)(v39 + 24), *(void *)(v39 + 48));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_19E668FC4((uint64_t)v77);
    sub_19E668FC4((uint64_t)&v76);
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_bridgeObjectRetain();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    uint64_t v54 = v73;
    os_unfair_lock_lock(v73);
    sub_19E68C49C(v72);
    os_unfair_lock_unlock(v54);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v67, 0);
    uint64_t v46 = v55;
    swift_release();
    uint64_t v56 = sub_19E67712C(a2);
    uint64_t v57 = sub_19E67712C(v46);
    long long v58 = v69;
    long long v59 = v69[1];
    v77[0] = *v69;
    long long v76 = v59;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = a2;
    long long v61 = v58[1];
    *(_OWORD *)(v60 + 24) = *v58;
    *(_OWORD *)(v60 + 40) = v61;
    *(void *)(v60 + 56) = *((void *)v58 + 4);
    *(void *)(v60 + 64) = v46;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v56;
    inited[3] = v57;
    inited[4] = v38;
    inited[5] = 0;
    inited[6] = sub_19E68D6B4;
    inited[7] = v60;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19E668FC4((uint64_t)v77);
    sub_19E668FC4((uint64_t)&v76);
    swift_bridgeObjectRetain();
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
  }
  swift_release();
  swift_release();
  return v46;
}

uint64_t sub_19E67A48C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = a3;
  uint64_t v66 = a1;
  *(void *)&long long v74 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v4 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v72 = v4;
  if (v4)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_t v5 = 0;
    os_unfair_lock_t v6 = (uint64_t *)v74;
    uint64_t v71 = a2;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + 8 * (void)v5 + 32);
      os_unfair_lock_t v5 = (os_unfair_lock_t)((char *)v5 + 1);
      switch(v7 >> 62)
      {
        case 1uLL:
          uint64_t v8 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v9 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v8 = sub_19E6C4398();
          uint64_t v9 = v10;
          if (v8) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v8 = *(void *)(v7 + 24);
          uint64_t v9 = *(void *)(v7 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v8) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
          uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
          uint64_t v14 = v13(ObjectType, v9);
          if (!v6[2]) {
            goto LABEL_17;
          }
          unint64_t v15 = sub_19E6628BC(v14);
          if ((v16 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v17 = v6[7] + 16 * v15;
          unint64_t v69 = v12;
          uint64_t v18 = *(void *)(v17 + 8);
          uint64_t v68 = swift_getObjectType();
          uint64_t v70 = v6;
          uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 32);
          swift_unknownObjectRetain();
          unint64_t v19 = v67(v68, v18);
          swift_unknownObjectRelease();
          BOOL v20 = v69 >= v19;
          os_unfair_lock_t v6 = v70;
          if (v20)
          {
LABEL_17:
            uint64_t v21 = v13(ObjectType, v9);
            swift_unknownObjectRetain();
            os_unfair_lock_t v22 = v6;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v73 = v22;
            unint64_t v25 = sub_19E6628BC(v21);
            uint64_t v26 = v22[2];
            BOOL v27 = (v24 & 1) == 0;
            uint64_t v28 = v26 + v27;
            if (__OFADD__(v26, v27))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&long long v74 = 0;
                *((void *)&v74 + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v63) = 0;
              uint64_t v62 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67AD48);
            }
            char v29 = v24;
            if (v22[3] >= v28)
            {
              a2 = v71;
              if (isUniquelyReferenced_nonNull_native)
              {
                os_unfair_lock_t v6 = (uint64_t *)v73;
                if ((v24 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                os_unfair_lock_t v6 = (uint64_t *)v73;
                if ((v29 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v28, isUniquelyReferenced_nonNull_native);
              unint64_t v30 = sub_19E6628BC(v21);
              a2 = v71;
              if ((v29 & 1) != (v31 & 1)) {
                goto LABEL_37;
              }
              unint64_t v25 = v30;
              os_unfair_lock_t v6 = (uint64_t *)v73;
              if ((v29 & 1) == 0)
              {
LABEL_26:
                v6[(v25 >> 6) + 8] |= 1 << v25;
                *(void *)(v6[6] + 8 * v25) = v21;
                char v33 = (uint64_t *)(v6[7] + 16 * v25);
                *char v33 = v8;
                v33[1] = v9;
                uint64_t v34 = v6[2];
                BOOL v35 = __OFADD__(v34, 1);
                uint64_t v36 = v34 + 1;
                if (v35) {
                  goto LABEL_36;
                }
                _OWORD v6[2] = v36;
                goto LABEL_28;
              }
            }
            unint64_t v32 = (uint64_t *)(v6[7] + 16 * v25);
            swift_unknownObjectRelease();
            *unint64_t v32 = v8;
            v32[1] = v9;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v71;
LABEL_5:
          if (v72 == v5)
          {
            swift_bridgeObjectRelease();
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_19E5DE088(v37);
  swift_bridgeObjectRelease_n();
  uint64_t v39 = v65;
  if (*(void *)(v38 + 16))
  {
    uint64_t v40 = *(os_unfair_lock_s **)(*(void *)(v65 + 16) + 40);
    uint64_t v41 = (uint64_t *)&v40[4];
    uint64_t v42 = v40 + 6;
    os_unfair_lock_lock(v40 + 6);
    uint64_t v70 = v41;
    sub_19E68C444((uint64_t)v41, (uint64_t *)&v74);
    os_unfair_lock_t v72 = v42;
    os_unfair_lock_unlock(v42);
    if (!(void)v74) {
      goto LABEL_38;
    }
    uint64_t v43 = *(void *)(v74 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v43 + 24));
    sub_19E68C460((uint64_t *)(v43 + 16), (uint64_t *)&v74);
    os_unfair_lock_unlock((os_unfair_lock_t)(v43 + 24));
    uint64_t v44 = v74;
    uint64_t v45 = swift_release();
    MEMORY[0x1F4188790](v45);
    uint64_t v62 = v65;
    uint64_t v63 = v44;
    uint64_t v46 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v61, v64);
    unint64_t v69 = sub_19E67712C(a2);
    uint64_t v47 = sub_19E67712C(v46);
    uint64_t v48 = v66;
    sub_19E61EE7C(v66, (uint64_t)v75);
    long long v74 = *(_OWORD *)(v48 + 3);
    long long v73 = *(_OWORD *)(v48 + 5);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v46;
    long long v50 = *((_OWORD *)v48 + 1);
    *(_OWORD *)(v49 + 24) = *(_OWORD *)v48;
    *(_OWORD *)(v49 + 40) = v50;
    *(_OWORD *)(v49 + 56) = *((_OWORD *)v48 + 2);
    *(void *)(v49 + 72) = v48[6];
    *(void *)(v49 + 80) = a2;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v51 = (void *)swift_allocObject();
    v51[2] = v69;
    v51[3] = v47;
    v51[4] = v38;
    v51[5] = v44;
    v51[6] = sub_19E68C6A4;
    v51[7] = v49;
    __swift_project_boxed_opaque_existential_1((void *)(v39 + 24), *(void *)(v39 + 48));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19E6691C4((uint64_t)v75);
    sub_19E668FC4((uint64_t)&v74);
    sub_19E668FC4((uint64_t)&v73);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v51);
    swift_release();
    swift_release();
    long long v52 = v72;
    os_unfair_lock_lock(v72);
    sub_19E68C49C(v70);
    os_unfair_lock_unlock(v52);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v64, 0);
    uint64_t v46 = v53;
    swift_release();
    uint64_t v54 = sub_19E67712C(a2);
    uint64_t v55 = sub_19E67712C(v46);
    uint64_t v56 = v66;
    sub_19E61EE7C(v66, (uint64_t)v75);
    long long v74 = *(_OWORD *)(v66 + 3);
    long long v73 = *(_OWORD *)(v66 + 5);
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v46;
    long long v58 = *((_OWORD *)v56 + 1);
    *(_OWORD *)(v57 + 24) = *(_OWORD *)v56;
    *(_OWORD *)(v57 + 40) = v58;
    *(_OWORD *)(v57 + 56) = *((_OWORD *)v56 + 2);
    *(void *)(v57 + 72) = v56[6];
    *(void *)(v57 + 80) = a2;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v54;
    inited[3] = v55;
    inited[4] = v38;
    inited[5] = 0;
    inited[6] = sub_19E68D6B0;
    inited[7] = v57;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19E6691C4((uint64_t)v75);
    sub_19E668FC4((uint64_t)&v74);
    sub_19E668FC4((uint64_t)&v73);
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v46;
}

uint64_t sub_19E67AD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v55 = a3;
  uint64_t v56 = a1;
  v64[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v61 = a2;
  if (v6)
  {
    uint64_t v54 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = (void *)v64[0];
    uint64_t v60 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v62 = v7;
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (v8[2])
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v19 = *(void *)(v8[7] + 16 * v17 + 8);
                uint64_t v58 = swift_getObjectType();
                unint64_t v59 = v14;
                uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                unint64_t v20 = v57(v58, v19);
                swift_unknownObjectRelease();
                if (v59 < v20)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  uint64_t v6 = v60;
                  a2 = v61;
                  uint64_t v7 = v62;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v21 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v63 = v8;
            unint64_t v24 = sub_19E6628BC(v21);
            uint64_t v25 = v8[2];
            BOOL v26 = (v23 & 1) == 0;
            uint64_t v27 = v25 + v26;
            if (__OFADD__(v25, v26))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              sub_19EBF7408();
              __break(1u);
LABEL_43:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v64[0] = 0;
                v64[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v53) = 0;
              uint64_t v52 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67B43CLL);
            }
            char v28 = v23;
            if (v8[3] >= v27)
            {
              uint64_t v7 = v62;
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v8 = v63;
                if ((v23 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v8 = v63;
                if ((v28 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v27, isUniquelyReferenced_nonNull_native);
              unint64_t v29 = sub_19E6628BC(v21);
              uint64_t v7 = v62;
              if ((v28 & 1) != (v30 & 1)) {
                goto LABEL_42;
              }
              unint64_t v24 = v29;
              uint64_t v8 = v63;
              if ((v28 & 1) == 0)
              {
LABEL_26:
                v8[(v24 >> 6) + 8] |= 1 << v24;
                *(void *)(v8[6] + 8 * v24) = v21;
                unint64_t v32 = (uint64_t *)(v8[7] + 16 * v24);
                *unint64_t v32 = v11;
                v32[1] = v10;
                uint64_t v33 = v8[2];
                BOOL v34 = __OFADD__(v33, 1);
                uint64_t v35 = v33 + 1;
                if (v34) {
                  goto LABEL_41;
                }
                long long v8[2] = v35;
                goto LABEL_28;
              }
            }
            char v31 = (uint64_t *)(v8[7] + 16 * v24);
            swift_unknownObjectRelease();
            *char v31 = v11;
            v31[1] = v10;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v6 = v60;
            a2 = v61;
            goto LABEL_5;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v54;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_19E5DE088(v36);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v37 + 16))
  {
    uint64_t v38 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v39 = (uint64_t *)&v38[4];
    uint64_t v40 = v38 + 6;
    os_unfair_lock_lock(v38 + 6);
    sub_19E68C444((uint64_t)v39, v64);
    os_unfair_lock_unlock(v40);
    if (!v64[0]) {
      goto LABEL_43;
    }
    uint64_t v41 = *(void *)(v64[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v41 + 24));
    sub_19E68C460((uint64_t *)(v41 + 16), v64);
    os_unfair_lock_unlock((os_unfair_lock_t)(v41 + 24));
    uint64_t v42 = v64[0];
    uint64_t v43 = swift_release();
    MEMORY[0x1F4188790](v43);
    uint64_t v52 = (uint64_t)v4;
    uint64_t v53 = v42;
    uint64_t v44 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v51, v55);
    uint64_t v45 = sub_19E69CA00(v61, v44, v37, v42);
    uint64_t v46 = v4;
    uint64_t v47 = (uint64_t)v45;
    if (v45[5])
    {
      __swift_project_boxed_opaque_existential_1(v46 + 3, v46[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C(v47);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v40);
    sub_19E68C49C(v39);
    os_unfair_lock_unlock(v40);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v55, 0);
    uint64_t v44 = v48;
    swift_release();
    uint64_t v49 = sub_19E69CA00(a2, v44, v37, 0);
    if (v49[5])
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v49);
    }
    else
    {
      sub_19E6868FC();
    }
  }
  swift_release();
  swift_release();
  return v44;
}

uint64_t sub_19E67B44C(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v63 = a3;
  *(void *)&long long v71 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v68 = a2;
  if (v6)
  {
    uint64_t v61 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    unint64_t v69 = (void *)v71;
    uint64_t v67 = v6;
    while (2)
    {
      unint64_t v8 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v8 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v9 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v9 = v11;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v8 + 24);
          uint64_t v9 = *(void *)(v8 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
          }
          else
          {
            uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
            uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
            uint64_t v15 = v14(ObjectType, v9);
            uint64_t v16 = v69;
            if (!v69[2]) {
              goto LABEL_17;
            }
            unint64_t v17 = sub_19E6628BC(v15);
            if ((v18 & 1) == 0) {
              goto LABEL_17;
            }
            uint64_t v19 = v69[7] + 16 * v17;
            unint64_t v66 = v13;
            uint64_t v20 = *(void *)(v19 + 8);
            uint64_t v21 = swift_getObjectType();
            uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
            uint64_t v65 = v21;
            swift_unknownObjectRetain();
            unint64_t v22 = v64(v65, v20);
            swift_unknownObjectRelease();
            BOOL v23 = v66 >= v22;
            uint64_t v16 = v69;
            if (!v23)
            {
              swift_unknownObjectRelease();
            }
            else
            {
LABEL_17:
              uint64_t v24 = v14(ObjectType, v9);
              swift_unknownObjectRetain();
              uint64_t v25 = v16;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v70 = v25;
              unint64_t v28 = sub_19E6628BC(v24);
              uint64_t v29 = v25[2];
              BOOL v30 = (v27 & 1) == 0;
              uint64_t v31 = v29 + v30;
              if (__OFADD__(v29, v30))
              {
                __break(1u);
LABEL_42:
                __break(1u);
LABEL_43:
                sub_19EBF7408();
                __break(1u);
LABEL_44:
                sub_19EBF7008();
                if (qword_1E945BB28 != -1) {
                  swift_once();
                }
                if (byte_1E946A4F1)
                {
                  *(void *)&long long v71 = 0;
                  *((void *)&v71 + 1) = 0xE000000000000000;
                  sub_19EBF6FE8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                }
                LODWORD(v60) = 0;
                uint64_t v59 = 116;
                sub_19EBF71F8();
                __break(1u);
                JUMPOUT(0x19E67BB4CLL);
              }
              char v32 = v27;
              if (v25[3] >= v31)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_19E666758();
                }
              }
              else
              {
                sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
                unint64_t v33 = sub_19E6628BC(v24);
                if ((v32 & 1) != (v34 & 1)) {
                  goto LABEL_43;
                }
                unint64_t v28 = v33;
              }
              uint64_t v35 = v70;
              unint64_t v69 = v70;
              if (v32)
              {
                uint64_t v36 = (uint64_t *)(v70[7] + 16 * v28);
                swift_unknownObjectRelease();
                *uint64_t v36 = v10;
                v36[1] = v9;
              }
              else
              {
                v70[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v24;
                uint64_t v37 = (uint64_t *)(v35[7] + 16 * v28);
                *uint64_t v37 = v10;
                v37[1] = v9;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_42;
                }
                _OWORD v35[2] = v40;
              }
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_release();
            uint64_t v6 = v67;
            a2 = v68;
          }
LABEL_5:
          if (v6 != v7) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v4 = v61;
          break;
      }
      break;
    }
  }
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    sub_19E68C444((uint64_t)v44, (uint64_t *)&v71);
    os_unfair_lock_unlock(v45);
    if (!(void)v71) {
      goto LABEL_44;
    }
    uint64_t v46 = *(void *)(v71 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), (uint64_t *)&v71);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v71;
    uint64_t v48 = swift_release();
    long long v49 = v62[1];
    long long v71 = *v62;
    v72[0] = v49;
    *(_OWORD *)((char *)v72 + 9) = *(long long *)((char *)v62 + 25);
    MEMORY[0x1F4188790](v48);
    uint64_t v59 = (uint64_t)v4;
    uint64_t v60 = v47;
    uint64_t v50 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v58, v63);
    uint64_t v51 = sub_19E69E92C(v68, v50, v42, v47);
    uint64_t v52 = v4;
    uint64_t v53 = (uint64_t)v51;
    if (v51[5])
    {
      __swift_project_boxed_opaque_existential_1(v52 + 3, v52[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C(v53);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v45);
    sub_19E68C49C(v44);
    os_unfair_lock_unlock(v45);
    swift_release();
    swift_release_n();
  }
  else
  {
    long long v54 = v62[1];
    long long v71 = *v62;
    v72[0] = v54;
    *(_OWORD *)((char *)v72 + 9) = *(long long *)((char *)v62 + 25);
    swift_retain();
    sub_19E68C008(v63, 0);
    uint64_t v50 = v55;
    swift_release();
    uint64_t v56 = sub_19E69E92C(a2, v50, v42, 0);
    if (v56[5])
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v56);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
  }
  return v50;
}

uint64_t sub_19E67BB5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  os_unfair_lock_t v5 = v4;
  uint64_t v61 = a4;
  uint64_t v62 = a1;
  v70[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  unint64_t v8 = *(uint64_t **)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v68 = a3;
  if (v8)
  {
    int v59 = a2;
    uint64_t v60 = v4;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    uint64_t v10 = v70[0];
    uint64_t v67 = v8;
    while (1)
    {
      unint64_t v11 = *(void *)(a3 + 8 * (void)v9 + 32);
      uint64_t v9 = (uint64_t *)((char *)v9 + 1);
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v13 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v12 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v13 = sub_19E6C4398();
          uint64_t v12 = v14;
          if (v13) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v13 = *(void *)(v11 + 24);
          uint64_t v12 = *(void *)(v11 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v13) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(ObjectType, v12) & 1) == 0)
          {
            uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
            unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 24);
            uint64_t v18 = v17(ObjectType, v12);
            if (*(void *)(v10 + 16))
            {
              unint64_t v19 = sub_19E6628BC(v18);
              if (v20)
              {
                uint64_t v21 = *(void *)(v10 + 56) + 16 * v19;
                uint64_t v66 = v10;
                uint64_t v22 = *(void *)(v21 + 8);
                uint64_t v64 = swift_getObjectType();
                unint64_t v65 = v16;
                uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
                swift_unknownObjectRetain();
                uint64_t v23 = v22;
                uint64_t v10 = v66;
                unint64_t v24 = v63(v64, v23);
                swift_unknownObjectRelease();
                if (v65 < v24)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  unint64_t v8 = v67;
                  a3 = v68;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v25 = v17(ObjectType, v12);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v69 = (void *)v10;
            unint64_t v28 = sub_19E6628BC(v25);
            uint64_t v29 = v10;
            uint64_t v30 = *(void *)(v10 + 16);
            BOOL v31 = (v27 & 1) == 0;
            uint64_t v32 = v30 + v31;
            if (__OFADD__(v30, v31))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              sub_19EBF7408();
              __break(1u);
LABEL_43:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v70[0] = 0;
                v70[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v58) = 0;
              uint64_t v57 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67C264);
            }
            char v33 = v27;
            if (*(void *)(v29 + 24) >= v32)
            {
              a3 = v68;
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v36 = v69;
                if ((v27 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v36 = v69;
                if ((v33 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v32, isUniquelyReferenced_nonNull_native);
              unint64_t v34 = sub_19E6628BC(v25);
              a3 = v68;
              if ((v33 & 1) != (v35 & 1)) {
                goto LABEL_42;
              }
              unint64_t v28 = v34;
              uint64_t v36 = v69;
              if ((v33 & 1) == 0)
              {
LABEL_26:
                v36[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v36[6] + 8 * v28) = v25;
                uint64_t v38 = (uint64_t *)(v36[7] + 16 * v28);
                uint64_t *v38 = v13;
                v38[1] = v12;
                uint64_t v39 = v36[2];
                BOOL v40 = __OFADD__(v39, 1);
                uint64_t v41 = v39 + 1;
                if (v40) {
                  goto LABEL_41;
                }
                uint64_t v10 = (uint64_t)v36;
                v36[2] = v41;
                goto LABEL_28;
              }
            }
            uint64_t v37 = (uint64_t *)(v36[7] + 16 * v28);
            swift_unknownObjectRelease();
            *uint64_t v37 = v13;
            v37[1] = v12;
            uint64_t v10 = (uint64_t)v36;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v8 = v67;
            goto LABEL_5;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v8 == v9)
          {
            swift_bridgeObjectRelease();
            os_unfair_lock_t v5 = v60;
            LOBYTE(a2) = v59;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  char v42 = a2 & 1;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_19E5DE088(v43);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v44 + 16))
  {
    uint64_t v45 = *(os_unfair_lock_s **)(v5[2] + 40);
    uint64_t v46 = (uint64_t *)&v45[4];
    uint64_t v47 = v45 + 6;
    os_unfair_lock_lock(v45 + 6);
    uint64_t v67 = v46;
    sub_19E68C444((uint64_t)v46, v70);
    os_unfair_lock_unlock(v47);
    if (!v70[0]) {
      goto LABEL_43;
    }
    uint64_t v48 = *(void *)(v70[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v48 + 24));
    sub_19E68C460((uint64_t *)(v48 + 16), v70);
    os_unfair_lock_unlock((os_unfair_lock_t)(v48 + 24));
    uint64_t v49 = v70[0];
    uint64_t v50 = swift_release();
    MEMORY[0x1F4188790](v50);
    uint64_t v57 = (uint64_t)v5;
    uint64_t v58 = v49;
    uint64_t v51 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v56, v61);
    uint64_t v52 = sub_19E6A1EB4(v68, v51, v44, v49, v62, v42);
    if (v52[5])
    {
      __swift_project_boxed_opaque_existential_1(v5 + 3, v5[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v52);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v47);
    sub_19E68C49C(v67);
    os_unfair_lock_unlock(v47);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v61, 0);
    uint64_t v51 = v53;
    swift_release();
    long long v54 = sub_19E6A1EB4(a3, v51, v44, 0, v62, a2 & 1);
    if (v54[5])
    {
      __swift_project_boxed_opaque_existential_1(v5 + 3, v5[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v54);
    }
    else
    {
      sub_19E6868FC();
    }
  }
  swift_release();
  swift_release();
  return v51;
}

uint64_t sub_19E67C274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v70 = a3;
  uint64_t v71 = a1;
  *(void *)&long long v83 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  unint64_t v77 = v6;
  if (v6)
  {
    unint64_t v69 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    unint64_t v8 = (void *)v83;
    uint64_t v76 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      uint64_t v7 = (uint64_t *)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11) & 1) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
            uint64_t v16 = v15(ObjectType, v11);
            if (v8[2])
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v19 = v8[7] + 16 * v17;
                uint64_t v75 = (uint64_t)v8;
                uint64_t v20 = *(void *)(v19 + 8);
                uint64_t v73 = swift_getObjectType();
                unint64_t v74 = v14;
                os_unfair_lock_t v72 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
                swift_unknownObjectRetain();
                uint64_t v21 = v20;
                unint64_t v8 = (void *)v75;
                unint64_t v22 = v72(v73, v21);
                swift_unknownObjectRelease();
                if (v74 < v22)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  a2 = v76;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v82 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            char v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&long long v83 = 0;
                *((void *)&v83 + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v68) = 0;
              uint64_t v67 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67CB18);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                char v35 = (void *)v82;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                char v35 = (void *)v82;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_38;
              }
              unint64_t v28 = v33;
              char v35 = (void *)v82;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                uint64_t v37 = (uint64_t *)(v35[7] + 16 * v28);
                *uint64_t v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_37;
                }
                unint64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            uint64_t v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *uint64_t v36 = v10;
            v36[1] = v11;
            unint64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v77 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v69;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    unint64_t v77 = v44;
    sub_19E68C444((uint64_t)v44, (uint64_t *)&v83);
    os_unfair_lock_unlock(v45);
    if (!(void)v83) {
      goto LABEL_39;
    }
    uint64_t v46 = *(void *)(v83 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), (uint64_t *)&v83);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v83;
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v67 = (uint64_t)v4;
    uint64_t v68 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v66, v70);
    uint64_t v75 = v49;
    uint64_t v50 = sub_19E677340(a2, (uint64_t)v81, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v51 = sub_19E677340(v49, (uint64_t)v80, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v52 = v71;
    v84[0] = *(void *)v71;
    long long v83 = *(_OWORD *)(v71 + 8);
    long long v82 = *(_OWORD *)(v71 + 24);
    uint64_t v53 = swift_allocObject();
    long long v54 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)(v53 + 16) = *(_OWORD *)v52;
    *(_OWORD *)(v53 + 32) = v54;
    *(void *)(v53 + 48) = *(void *)(v52 + 32);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = v50;
    v55[3] = v51;
    v55[4] = v42;
    v55[5] = v47;
    v55[6] = sub_19E68C694;
    v55[7] = v53;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    swift_retain();
    swift_retain();
    sub_19E5F63A4((uint64_t)v84);
    sub_19E668FC4((uint64_t)&v83);
    sub_19E668FC4((uint64_t)&v82);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v55);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v45);
    sub_19E68C49C(v77);
    uint64_t v56 = v45;
    uint64_t v57 = v75;
    os_unfair_lock_unlock(v56);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v70, 0);
    uint64_t v57 = v58;
    swift_release();
    uint64_t v59 = sub_19E677340(a2, (uint64_t)v79, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v60 = sub_19E677340(v57, (uint64_t)v78, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v61 = v71;
    v84[0] = *(void *)v71;
    long long v83 = *(_OWORD *)(v71 + 8);
    long long v82 = *(_OWORD *)(v71 + 24);
    uint64_t v62 = swift_allocObject();
    long long v63 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)(v62 + 16) = *(_OWORD *)v71;
    *(_OWORD *)(v62 + 32) = v63;
    *(void *)(v62 + 48) = *(void *)(v61 + 32);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v59;
    inited[3] = v60;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D6C0;
    inited[7] = v62;
    swift_retain();
    sub_19E5F63A4((uint64_t)v84);
    sub_19E668FC4((uint64_t)&v83);
    sub_19E668FC4((uint64_t)&v82);
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v57;
}

uint64_t sub_19E67CB28(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v71 = a3;
  os_unfair_lock_t v72 = a1;
  *(void *)&v84[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v78 = v6;
  if (v6)
  {
    uint64_t v70 = v3;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v7 = 0;
    unint64_t v8 = *(uint64_t **)&v84[0];
    uint64_t v77 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      os_unfair_lock_t v7 = (os_unfair_lock_t)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!v8[2]) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = v8[7] + 16 * v17;
          uint64_t v76 = v8;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v74 = swift_getObjectType();
          unint64_t v75 = v14;
          uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          uint64_t v21 = v20;
          unint64_t v8 = v76;
          unint64_t v22 = v73(v74, v21);
          swift_unknownObjectRelease();
          if (v75 >= v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v83 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            char v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&v84[0] = 0;
                *((void *)&v84[0] + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v69) = 0;
              uint64_t v68 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67D3A0);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              a2 = v77;
              if (isUniquelyReferenced_nonNull_native)
              {
                char v35 = (uint64_t *)v83;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                char v35 = (uint64_t *)v83;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              a2 = v77;
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_37;
              }
              unint64_t v28 = v33;
              char v35 = (uint64_t *)v83;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                uint64_t v37 = (uint64_t *)(v35[7] + 16 * v28);
                *uint64_t v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_36;
                }
                unint64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            uint64_t v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *uint64_t v36 = v10;
            v36[1] = v11;
            unint64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v77;
LABEL_5:
          if (v78 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v70;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    uint64_t v76 = v44;
    sub_19E68C444((uint64_t)v44, (uint64_t *)v84);
    os_unfair_lock_t v78 = v45;
    os_unfair_lock_unlock(v45);
    if (!*(void *)&v84[0]) {
      goto LABEL_38;
    }
    uint64_t v46 = *(void *)(*(void *)&v84[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), (uint64_t *)v84);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = *(void *)&v84[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v68 = (uint64_t)v4;
    uint64_t v69 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v67, v71);
    uint64_t v50 = sub_19E677340(a2, (uint64_t)v82, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v51 = sub_19E677340(v49, (uint64_t)v81, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v52 = v72;
    long long v53 = v72[2];
    v84[0] = v72[1];
    long long v83 = v53;
    long long v54 = (_OWORD *)swift_allocObject();
    long long v55 = v52[1];
    v54[1] = *v52;
    v54[2] = v55;
    v54[3] = v52[2];
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v50;
    v56[3] = v51;
    v56[4] = v42;
    v56[5] = v47;
    v56[6] = sub_19E68C644;
    v56[7] = v54;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    swift_retain();
    swift_retain();
    sub_19E668FC4((uint64_t)v84);
    sub_19E668FC4((uint64_t)&v83);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v56);
    swift_release();
    swift_release();
    uint64_t v57 = v78;
    os_unfair_lock_lock(v78);
    sub_19E68C49C(v76);
    os_unfair_lock_unlock(v57);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v71, 0);
    uint64_t v49 = v58;
    swift_release();
    uint64_t v59 = sub_19E677340(a2, (uint64_t)v80, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v60 = sub_19E677340(v49, (uint64_t)v79, (void (*)(uint64_t, void))sub_19E68F8F0);
    uint64_t v61 = v72;
    long long v62 = v72[2];
    v84[0] = v72[1];
    long long v83 = v62;
    long long v63 = (_OWORD *)swift_allocObject();
    long long v64 = v72[1];
    v63[1] = *v72;
    v63[2] = v64;
    v63[3] = v61[2];
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v59;
    inited[3] = v60;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D6BC;
    inited[7] = v63;
    swift_retain();
    sub_19E668FC4((uint64_t)v84);
    sub_19E668FC4((uint64_t)&v83);
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v49;
}

uint64_t sub_19E67D3B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  os_unfair_lock_t v7 = v6;
  uint64_t v63 = a6;
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v66 = a4;
  v74[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v10 = *(uint64_t **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v72 = a5;
  if (v10)
  {
    int v61 = a3;
    long long v62 = v6;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = v74[0];
    uint64_t v71 = v10;
    while (1)
    {
      unint64_t v13 = *(void *)(a5 + 8 * (void)v11 + 32);
      uint64_t v11 = (uint64_t *)((char *)v11 + 1);
      switch(v13 >> 62)
      {
        case 1uLL:
          uint64_t v14 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v15 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v14 = sub_19E6C4398();
          uint64_t v15 = v16;
          if (v14) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v14 = *(void *)(v13 + 24);
          uint64_t v15 = *(void *)(v13 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v14) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 48))(ObjectType, v15) & 1) == 0)
          {
            uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(ObjectType, v15);
            uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 24);
            uint64_t v20 = v19(ObjectType, v15);
            if (*(void *)(v12 + 16))
            {
              unint64_t v21 = sub_19E6628BC(v20);
              if (v22)
              {
                uint64_t v23 = *(void *)(v12 + 56) + 16 * v21;
                uint64_t v70 = v12;
                uint64_t v24 = *(void *)(v23 + 8);
                uint64_t v68 = swift_getObjectType();
                unint64_t v69 = v18;
                uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 32);
                swift_unknownObjectRetain();
                uint64_t v25 = v24;
                uint64_t v12 = v70;
                unint64_t v26 = v67(v68, v25);
                swift_unknownObjectRelease();
                if (v69 < v26)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  uint64_t v10 = v71;
                  a5 = v72;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v27 = v19(ObjectType, v15);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v73 = (void *)v12;
            unint64_t v30 = sub_19E6628BC(v27);
            uint64_t v31 = v12;
            uint64_t v32 = *(void *)(v12 + 16);
            BOOL v33 = (v29 & 1) == 0;
            uint64_t v34 = v32 + v33;
            if (__OFADD__(v32, v33))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              sub_19EBF7408();
              __break(1u);
LABEL_43:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v74[0] = 0;
                v74[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v60) = 0;
              uint64_t v59 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67DAC4);
            }
            char v35 = v29;
            if (*(void *)(v31 + 24) >= v34)
            {
              a5 = v72;
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v38 = v73;
                if ((v29 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v38 = v73;
                if ((v35 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v34, isUniquelyReferenced_nonNull_native);
              unint64_t v36 = sub_19E6628BC(v27);
              a5 = v72;
              if ((v35 & 1) != (v37 & 1)) {
                goto LABEL_42;
              }
              unint64_t v30 = v36;
              uint64_t v38 = v73;
              if ((v35 & 1) == 0)
              {
LABEL_26:
                v38[(v30 >> 6) + 8] |= 1 << v30;
                *(void *)(v38[6] + 8 * v30) = v27;
                uint64_t v40 = (uint64_t *)(v38[7] + 16 * v30);
                *uint64_t v40 = v14;
                v40[1] = v15;
                uint64_t v41 = v38[2];
                BOOL v42 = __OFADD__(v41, 1);
                uint64_t v43 = v41 + 1;
                if (v42) {
                  goto LABEL_41;
                }
                uint64_t v12 = (uint64_t)v38;
                v38[2] = v43;
                goto LABEL_28;
              }
            }
            BOOL v39 = (uint64_t *)(v38[7] + 16 * v30);
            swift_unknownObjectRelease();
            *BOOL v39 = v14;
            v39[1] = v15;
            uint64_t v12 = (uint64_t)v38;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v10 = v71;
            goto LABEL_5;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v10 == v11)
          {
            swift_bridgeObjectRelease();
            os_unfair_lock_t v7 = v62;
            LOBYTE(a3) = v61;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  char v44 = a3 & 1;
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_19E5DE088(v45);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v46 + 16))
  {
    uint64_t v47 = *(os_unfair_lock_s **)(v7[2] + 40);
    uint64_t v48 = (uint64_t *)&v47[4];
    uint64_t v49 = v47 + 6;
    os_unfair_lock_lock(v47 + 6);
    uint64_t v71 = v48;
    sub_19E68C444((uint64_t)v48, v74);
    os_unfair_lock_unlock(v49);
    if (!v74[0]) {
      goto LABEL_43;
    }
    uint64_t v50 = *(void *)(v74[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v50 + 24));
    sub_19E68C460((uint64_t *)(v50 + 16), v74);
    os_unfair_lock_unlock((os_unfair_lock_t)(v50 + 24));
    uint64_t v51 = v74[0];
    uint64_t v52 = swift_release();
    MEMORY[0x1F4188790](v52);
    uint64_t v59 = (uint64_t)v7;
    uint64_t v60 = v51;
    uint64_t v53 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v58, v63);
    long long v54 = sub_19E69698C(v72, v53, v46, v51, v64, v65, v44, v66);
    if (v54[5])
    {
      __swift_project_boxed_opaque_existential_1(v7 + 3, v7[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v54);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v49);
    sub_19E68C49C(v71);
    os_unfair_lock_unlock(v49);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v63, 0);
    uint64_t v53 = v55;
    swift_release();
    uint64_t v56 = sub_19E69698C(a5, v53, v46, 0, v64, v65, a3 & 1, v66);
    if (v56[5])
    {
      __swift_project_boxed_opaque_existential_1(v7 + 3, v7[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v56);
    }
    else
    {
      sub_19E6868FC();
    }
  }
  swift_release();
  swift_release();
  return v53;
}

uint64_t sub_19E67DAD4(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v58[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v56 = a2;
  if (v6)
  {
    uint64_t v48 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = v58[0];
    uint64_t v55 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (*(void *)(v8 + 16))
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v54 = v8;
                uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 16 * v17 + 8);
                uint64_t v52 = swift_getObjectType();
                unint64_t v53 = v14;
                uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                uint64_t v20 = v19;
                uint64_t v8 = v54;
                unint64_t v21 = v51(v52, v20);
                swift_unknownObjectRelease();
                if (v53 < v21)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  uint64_t v6 = v55;
                  a2 = v56;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v22 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v57 = (void *)v8;
            unint64_t v25 = sub_19E6628BC(v22);
            uint64_t v26 = v8;
            uint64_t v27 = *(void *)(v8 + 16);
            BOOL v28 = (v24 & 1) == 0;
            uint64_t v29 = v27 + v28;
            if (__OFADD__(v27, v28))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v58[0] = 0;
                v58[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67E0D4);
            }
            char v30 = v24;
            if (*(void *)(v26 + 24) >= v29)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                BOOL v33 = v57;
                if ((v24 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                BOOL v33 = v57;
                if ((v30 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v29, isUniquelyReferenced_nonNull_native);
              unint64_t v31 = sub_19E6628BC(v22);
              if ((v30 & 1) != (v32 & 1)) {
                goto LABEL_38;
              }
              unint64_t v25 = v31;
              BOOL v33 = v57;
              if ((v30 & 1) == 0)
              {
LABEL_26:
                v33[(v25 >> 6) + 8] |= 1 << v25;
                *(void *)(v33[6] + 8 * v25) = v22;
                char v35 = (uint64_t *)(v33[7] + 16 * v25);
                uint64_t *v35 = v11;
                v35[1] = v10;
                uint64_t v36 = v33[2];
                BOOL v37 = __OFADD__(v36, 1);
                uint64_t v38 = v36 + 1;
                if (v37) {
                  goto LABEL_37;
                }
                uint64_t v8 = (uint64_t)v33;
                v33[2] = v38;
                goto LABEL_28;
              }
            }
            uint64_t v34 = (uint64_t *)(v33[7] + 16 * v25);
            swift_unknownObjectRelease();
            uint64_t *v34 = v11;
            v34[1] = v10;
            uint64_t v8 = (uint64_t)v33;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v48;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_19E5DE088(v39);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v40 + 16))
  {
    uint64_t v41 = *(os_unfair_lock_s **)(*(void *)(v4 + 16) + 40);
    BOOL v42 = (uint64_t *)&v41[4];
    uint64_t v43 = v41 + 6;
    os_unfair_lock_lock(v41 + 6);
    sub_19E68C444((uint64_t)v42, v58);
    os_unfair_lock_unlock(v43);
    if (!v58[0]) {
      goto LABEL_39;
    }
    uint64_t v44 = *(void *)(v58[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_19E68C460((uint64_t *)(v44 + 16), v58);
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    uint64_t v45 = v58[0];
    swift_release();
    uint64_t v46 = sub_19E6833E0(v40, v45, a3, v4, a1, v56);
    swift_release();
    os_unfair_lock_lock(v43);
    sub_19E68C49C(v42);
    os_unfair_lock_unlock(v43);
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v46 = sub_19E6833E0(v40, 0, a3, v4, a1, a2);
    swift_release();
  }
  return v46;
}

uint64_t sub_19E67E0E4(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v62 = a1;
  uint64_t v63 = a3;
  *(void *)&long long v71 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v68 = a2;
  if (v6)
  {
    int v61 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    unint64_t v69 = (void *)v71;
    uint64_t v67 = v6;
    while (2)
    {
      unint64_t v8 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v8 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v9 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v9 = v11;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v8 + 24);
          uint64_t v9 = *(void *)(v8 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
          }
          else
          {
            uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
            uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
            uint64_t v15 = v14(ObjectType, v9);
            uint64_t v16 = v69;
            if (!v69[2]) {
              goto LABEL_17;
            }
            unint64_t v17 = sub_19E6628BC(v15);
            if ((v18 & 1) == 0) {
              goto LABEL_17;
            }
            uint64_t v19 = v69[7] + 16 * v17;
            unint64_t v66 = v13;
            uint64_t v20 = *(void *)(v19 + 8);
            uint64_t v21 = swift_getObjectType();
            uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
            uint64_t v65 = v21;
            swift_unknownObjectRetain();
            unint64_t v22 = v64(v65, v20);
            swift_unknownObjectRelease();
            BOOL v23 = v66 >= v22;
            uint64_t v16 = v69;
            if (!v23)
            {
              swift_unknownObjectRelease();
            }
            else
            {
LABEL_17:
              uint64_t v24 = v14(ObjectType, v9);
              swift_unknownObjectRetain();
              unint64_t v25 = v16;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v70 = v25;
              unint64_t v28 = sub_19E6628BC(v24);
              uint64_t v29 = v25[2];
              BOOL v30 = (v27 & 1) == 0;
              uint64_t v31 = v29 + v30;
              if (__OFADD__(v29, v30))
              {
                __break(1u);
LABEL_42:
                __break(1u);
LABEL_43:
                sub_19EBF7408();
                __break(1u);
LABEL_44:
                sub_19EBF7008();
                if (qword_1E945BB28 != -1) {
                  swift_once();
                }
                if (byte_1E946A4F1)
                {
                  *(void *)&long long v71 = 0;
                  *((void *)&v71 + 1) = 0xE000000000000000;
                  sub_19EBF6FE8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                  sub_19EBF67D8();
                }
                LODWORD(v60) = 0;
                uint64_t v59 = 116;
                sub_19EBF71F8();
                __break(1u);
                JUMPOUT(0x19E67E7E4);
              }
              char v32 = v27;
              if (v25[3] >= v31)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_19E666758();
                }
              }
              else
              {
                sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
                unint64_t v33 = sub_19E6628BC(v24);
                if ((v32 & 1) != (v34 & 1)) {
                  goto LABEL_43;
                }
                unint64_t v28 = v33;
              }
              char v35 = v70;
              unint64_t v69 = v70;
              if (v32)
              {
                uint64_t v36 = (uint64_t *)(v70[7] + 16 * v28);
                swift_unknownObjectRelease();
                *uint64_t v36 = v10;
                v36[1] = v9;
              }
              else
              {
                v70[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v24;
                BOOL v37 = (uint64_t *)(v35[7] + 16 * v28);
                *BOOL v37 = v10;
                v37[1] = v9;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_42;
                }
                _OWORD v35[2] = v40;
              }
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_release();
            uint64_t v6 = v67;
            a2 = v68;
          }
LABEL_5:
          if (v6 != v7) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v4 = v61;
          break;
      }
      break;
    }
  }
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    sub_19E68C444((uint64_t)v44, (uint64_t *)&v71);
    os_unfair_lock_unlock(v45);
    if (!(void)v71) {
      goto LABEL_44;
    }
    uint64_t v46 = *(void *)(v71 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), (uint64_t *)&v71);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v71;
    uint64_t v48 = swift_release();
    long long v49 = v62[1];
    long long v71 = *v62;
    long long v72 = v49;
    long long v73 = v62[2];
    MEMORY[0x1F4188790](v48);
    uint64_t v59 = (uint64_t)v4;
    uint64_t v60 = v47;
    uint64_t v50 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v58, v63);
    uint64_t v51 = sub_19E69745C(v68, v50, v42, v47);
    uint64_t v52 = v4;
    uint64_t v53 = (uint64_t)v51;
    if (v51[5])
    {
      __swift_project_boxed_opaque_existential_1(v52 + 3, v52[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C(v53);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v45);
    sub_19E68C49C(v44);
    os_unfair_lock_unlock(v45);
    swift_release();
    swift_release_n();
  }
  else
  {
    long long v54 = v62[1];
    long long v71 = *v62;
    long long v72 = v54;
    long long v73 = v62[2];
    swift_retain();
    sub_19E68C008(v63, 0);
    uint64_t v50 = v55;
    swift_release();
    uint64_t v56 = sub_19E69745C(a2, v50, v42, 0);
    if (v56[5])
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v56);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
  }
  return v50;
}

uint64_t sub_19E67E7F4(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v58[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v56 = a2;
  if (v6)
  {
    uint64_t v48 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = v58[0];
    uint64_t v55 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (*(void *)(v8 + 16))
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v54 = v8;
                uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 16 * v17 + 8);
                uint64_t v52 = swift_getObjectType();
                unint64_t v53 = v14;
                uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                uint64_t v20 = v19;
                uint64_t v8 = v54;
                unint64_t v21 = v51(v52, v20);
                swift_unknownObjectRelease();
                if (v53 < v21)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  uint64_t v6 = v55;
                  a2 = v56;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v22 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v57 = (void *)v8;
            unint64_t v25 = sub_19E6628BC(v22);
            uint64_t v26 = v8;
            uint64_t v27 = *(void *)(v8 + 16);
            BOOL v28 = (v24 & 1) == 0;
            uint64_t v29 = v27 + v28;
            if (__OFADD__(v27, v28))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v58[0] = 0;
                v58[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67EDF4);
            }
            char v30 = v24;
            if (*(void *)(v26 + 24) >= v29)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v33 = v57;
                if ((v24 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                unint64_t v33 = v57;
                if ((v30 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v29, isUniquelyReferenced_nonNull_native);
              unint64_t v31 = sub_19E6628BC(v22);
              if ((v30 & 1) != (v32 & 1)) {
                goto LABEL_38;
              }
              unint64_t v25 = v31;
              unint64_t v33 = v57;
              if ((v30 & 1) == 0)
              {
LABEL_26:
                v33[(v25 >> 6) + 8] |= 1 << v25;
                *(void *)(v33[6] + 8 * v25) = v22;
                char v35 = (uint64_t *)(v33[7] + 16 * v25);
                uint64_t *v35 = v11;
                v35[1] = v10;
                uint64_t v36 = v33[2];
                BOOL v37 = __OFADD__(v36, 1);
                uint64_t v38 = v36 + 1;
                if (v37) {
                  goto LABEL_37;
                }
                uint64_t v8 = (uint64_t)v33;
                v33[2] = v38;
                goto LABEL_28;
              }
            }
            char v34 = (uint64_t *)(v33[7] + 16 * v25);
            swift_unknownObjectRelease();
            uint64_t *v34 = v11;
            v34[1] = v10;
            uint64_t v8 = (uint64_t)v33;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v48;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_19E5DE088(v39);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v40 + 16))
  {
    uint64_t v41 = *(os_unfair_lock_s **)(*(void *)(v4 + 16) + 40);
    uint64_t v42 = (uint64_t *)&v41[4];
    uint64_t v43 = v41 + 6;
    os_unfair_lock_lock(v41 + 6);
    sub_19E68C444((uint64_t)v42, v58);
    os_unfair_lock_unlock(v43);
    if (!v58[0]) {
      goto LABEL_39;
    }
    uint64_t v44 = *(void *)(v58[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_19E68C460((uint64_t *)(v44 + 16), v58);
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    uint64_t v45 = v58[0];
    swift_release();
    uint64_t v46 = sub_19E683608(v40, v45, a3, v4, a1, v56);
    swift_release();
    os_unfair_lock_lock(v43);
    sub_19E68C49C(v42);
    os_unfair_lock_unlock(v43);
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v46 = sub_19E683608(v40, 0, a3, v4, a1, a2);
    swift_release();
  }
  return v46;
}

uint64_t sub_19E67EE04(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v65 = a3;
  int v66 = a1;
  v74[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v72 = v6;
  if (v6)
  {
    uint64_t v64 = v3;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v7 = 0;
    uint64_t v8 = (uint64_t *)v74[0];
    uint64_t v71 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      os_unfair_lock_t v7 = (os_unfair_lock_t)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!v8[2]) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = v8[7] + 16 * v17;
          uint64_t v70 = v8;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v68 = swift_getObjectType();
          unint64_t v69 = v14;
          uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          uint64_t v21 = v20;
          uint64_t v8 = v70;
          unint64_t v22 = v67(v68, v21);
          swift_unknownObjectRelease();
          if (v69 >= v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            long long v73 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            uint64_t v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v74[0] = 0;
                v74[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v63) = 0;
              uint64_t v62 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67F610);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              a2 = v71;
              if (isUniquelyReferenced_nonNull_native)
              {
                char v35 = v73;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                char v35 = v73;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              a2 = v71;
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_37;
              }
              unint64_t v28 = v33;
              char v35 = v73;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                BOOL v37 = (uint64_t *)(v35[7] + 16 * v28);
                *BOOL v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_36;
                }
                uint64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            uint64_t v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *uint64_t v36 = v10;
            v36[1] = v11;
            uint64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v71;
LABEL_5:
          if (v72 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v64;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    uint64_t v70 = v44;
    sub_19E68C444((uint64_t)v44, v74);
    os_unfair_lock_t v72 = v45;
    os_unfair_lock_unlock(v45);
    if (!v74[0]) {
      goto LABEL_38;
    }
    uint64_t v46 = *(void *)(v74[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), v74);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v74[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v62 = (uint64_t)v4;
    uint64_t v63 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v61, v65);
    uint64_t v50 = swift_allocObject();
    *(unsigned char *)(v50 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v51 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    unint64_t v53 = (void *)swift_allocObject();
    v53[2] = v51;
    v53[3] = v52;
    v53[4] = v42;
    v53[5] = v47;
    v53[6] = sub_19E68D2C4;
    v53[7] = v50;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    uint64_t v54 = v72;
    os_unfair_lock_lock(v72);
    sub_19E68C49C(v70);
    os_unfair_lock_unlock(v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v65, 0);
    uint64_t v49 = v55;
    swift_release();
    uint64_t v56 = swift_allocObject();
    *(unsigned char *)(v56 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v57;
    inited[3] = v58;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D66C;
    inited[7] = v56;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v49;
}

uint64_t sub_19E67F620(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v69 = a5;
  int v72 = a3;
  uint64_t v71 = a2;
  uint64_t v70 = a1;
  v84[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v8 = *(os_unfair_lock_s **)(a4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  if (v8)
  {
    uint64_t v68 = v5;
    swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    uint64_t v10 = (uint64_t *)v84[0];
    os_unfair_lock_t v77 = v8;
    uint64_t v78 = a4;
    while (1)
    {
      unint64_t v11 = *(void *)(a4 + 8 * (void)v9 + 32);
      unint64_t v9 = (os_unfair_lock_s *)((char *)v9 + 1);
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v12 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v13 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v12 = sub_19E6C4398();
          uint64_t v13 = v14;
          if (v12) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v12 = *(void *)(v11 + 24);
          uint64_t v13 = *(void *)(v11 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v12) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(ObjectType, v13) & 1) == 0)
          {
            uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(ObjectType, v13);
            unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
            uint64_t v18 = v17(ObjectType, v13);
            if (v10[2])
            {
              unint64_t v19 = sub_19E6628BC(v18);
              if (v20)
              {
                uint64_t v21 = v10[7] + 16 * v19;
                unint64_t v75 = v16;
                uint64_t v22 = *(void *)(v21 + 8);
                uint64_t v74 = swift_getObjectType();
                uint64_t v76 = v10;
                long long v73 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
                swift_unknownObjectRetain();
                unint64_t v23 = v73(v74, v22);
                swift_unknownObjectRelease();
                BOOL v24 = v75 >= v23;
                uint64_t v10 = v76;
                if (!v24)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  uint64_t v8 = v77;
                  a4 = v78;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v25 = v17(ObjectType, v13);
            swift_unknownObjectRetain();
            char v26 = v10;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            os_unfair_lock_t v79 = v26;
            unint64_t v29 = sub_19E6628BC(v25);
            uint64_t v30 = v26[2];
            BOOL v31 = (v28 & 1) == 0;
            uint64_t v32 = v30 + v31;
            if (__OFADD__(v30, v31))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v84[0] = 0;
                v84[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v67) = 0;
              uint64_t v66 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E67FE54);
            }
            char v33 = v28;
            if (v26[3] >= v32)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v10 = v79;
                if ((v28 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v10 = v79;
                if ((v33 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v32, isUniquelyReferenced_nonNull_native);
              unint64_t v34 = sub_19E6628BC(v25);
              if ((v33 & 1) != (v35 & 1)) {
                goto LABEL_38;
              }
              unint64_t v29 = v34;
              uint64_t v10 = v79;
              if ((v33 & 1) == 0)
              {
LABEL_26:
                v10[(v29 >> 6) + 8] |= 1 << v29;
                *(void *)(v10[6] + 8 * v29) = v25;
                BOOL v37 = (uint64_t *)(v10[7] + 16 * v29);
                *BOOL v37 = v12;
                v37[1] = v13;
                uint64_t v38 = v10[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_37;
                }
                v10[2] = v40;
                goto LABEL_28;
              }
            }
            uint64_t v36 = (uint64_t *)(v10[7] + 16 * v29);
            swift_unknownObjectRelease();
            *uint64_t v36 = v12;
            v36[1] = v13;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v8 == v9)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v68;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(*(void *)(v6 + 16) + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    uint64_t v76 = v44;
    sub_19E68C444((uint64_t)v44, v84);
    os_unfair_lock_t v77 = v45;
    os_unfair_lock_unlock(v45);
    if (!v84[0]) {
      goto LABEL_39;
    }
    uint64_t v46 = *(void *)(v84[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), v84);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v84[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v66 = v6;
    uint64_t v67 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v65, v69);
    uint64_t v50 = sub_19E677340(a4, (uint64_t)v83, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v51 = sub_19E677340(v49, (uint64_t)v82, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v52 = v6;
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v71;
    *(void *)(v53 + 16) = v70;
    *(void *)(v53 + 24) = v54;
    *(unsigned char *)(v53 + 32) = v72 & 1;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = v50;
    v55[3] = v51;
    v55[4] = v42;
    v55[5] = v47;
    v55[6] = sub_19E68C5A4;
    v55[7] = v53;
    __swift_project_boxed_opaque_existential_1((void *)(v52 + 24), *(void *)(v52 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_retain();
    swift_retain();
    uint64_t v56 = v49;
    sub_19E688F0C((uint64_t)v55);
    swift_release();
    swift_release();
    uint64_t v57 = v77;
    os_unfair_lock_lock(v77);
    sub_19E68C49C(v76);
    os_unfair_lock_unlock(v57);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v69, 0);
    uint64_t v56 = v58;
    swift_release();
    uint64_t v59 = sub_19E677340(a4, (uint64_t)v81, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v60 = sub_19E677340(v56, (uint64_t)v80, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = v71;
    *(void *)(v61 + 16) = v70;
    *(void *)(v61 + 24) = v62;
    *(unsigned char *)(v61 + 32) = v72 & 1;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v59;
    inited[3] = v60;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D67C;
    inited[7] = v61;
    swift_retain();
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v56;
}

uint64_t sub_19E67FE64(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v65 = a4;
  int v67 = a2;
  uint64_t v66 = a1;
  v79[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  os_unfair_lock_t v7 = *(uint64_t **)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  if (v7)
  {
    uint64_t v64 = v4;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    unint64_t v9 = (void *)v79[0];
    int v72 = v7;
    uint64_t v73 = a3;
    while (1)
    {
      unint64_t v10 = *(void *)(a3 + 8 * (void)v8 + 32);
      uint64_t v8 = (uint64_t *)((char *)v8 + 1);
      switch(v10 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v12 = v13;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v10 + 24);
          uint64_t v12 = *(void *)(v10 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(ObjectType, v12) & 1) == 0)
          {
            uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
            uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 24);
            uint64_t v17 = v16(ObjectType, v12);
            if (v9[2])
            {
              unint64_t v18 = sub_19E6628BC(v17);
              if (v19)
              {
                uint64_t v20 = v9[7] + 16 * v18;
                unint64_t v70 = v15;
                uint64_t v21 = *(void *)(v20 + 8);
                uint64_t v69 = swift_getObjectType();
                uint64_t v71 = v9;
                uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 32);
                swift_unknownObjectRetain();
                unint64_t v22 = v68(v69, v21);
                swift_unknownObjectRelease();
                BOOL v23 = v70 >= v22;
                unint64_t v9 = v71;
                if (!v23)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  os_unfair_lock_t v7 = v72;
                  a3 = v73;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v24 = v16(ObjectType, v12);
            swift_unknownObjectRetain();
            uint64_t v25 = v9;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v74 = v25;
            unint64_t v28 = sub_19E6628BC(v24);
            uint64_t v29 = v25[2];
            BOOL v30 = (v27 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v79[0] = 0;
                v79[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v63) = 0;
              uint64_t v62 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E680674);
            }
            char v32 = v27;
            if (v25[3] >= v31)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v9 = v74;
                if ((v27 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                unint64_t v9 = v74;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v24);
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_38;
              }
              unint64_t v28 = v33;
              unint64_t v9 = v74;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v9[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v9[6] + 8 * v28) = v24;
                uint64_t v36 = (uint64_t *)(v9[7] + 16 * v28);
                *uint64_t v36 = v11;
                v36[1] = v12;
                uint64_t v37 = v9[2];
                BOOL v38 = __OFADD__(v37, 1);
                uint64_t v39 = v37 + 1;
                if (v38) {
                  goto LABEL_37;
                }
                void v9[2] = v39;
                goto LABEL_28;
              }
            }
            char v35 = (uint64_t *)(v9[7] + 16 * v28);
            swift_unknownObjectRelease();
            uint64_t *v35 = v11;
            v35[1] = v12;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v7 == v8)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = v64;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_19E5DE088(v40);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v41 + 16))
  {
    uint64_t v42 = *(os_unfair_lock_s **)(*(void *)(v5 + 16) + 40);
    uint64_t v43 = (uint64_t *)&v42[4];
    uint64_t v44 = v42 + 6;
    os_unfair_lock_lock(v42 + 6);
    int v72 = v43;
    sub_19E68C444((uint64_t)v43, v79);
    os_unfair_lock_unlock(v44);
    if (!v79[0]) {
      goto LABEL_39;
    }
    uint64_t v45 = *(void *)(v79[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v45 + 24));
    sub_19E68C460((uint64_t *)(v45 + 16), v79);
    os_unfair_lock_unlock((os_unfair_lock_t)(v45 + 24));
    uint64_t v46 = v79[0];
    uint64_t v47 = swift_release();
    MEMORY[0x1F4188790](v47);
    uint64_t v62 = v5;
    uint64_t v63 = v46;
    uint64_t v48 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v61, v65);
    uint64_t v71 = (void *)v48;
    uint64_t v49 = sub_19E677340(a3, (uint64_t)v78, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v50 = sub_19E677340(v48, (uint64_t)v77, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v51 = v5;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v66;
    *(unsigned char *)(v52 + 24) = v67;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v49;
    v53[3] = v50;
    v53[4] = v41;
    v53[5] = v46;
    v53[6] = sub_19E68C578;
    v53[7] = v52;
    __swift_project_boxed_opaque_existential_1((void *)(v51 + 24), *(void *)(v51 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_retain();
    swift_retain();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v44);
    sub_19E68C49C(v72);
    os_unfair_lock_unlock(v44);
    swift_release();
    swift_release();
    uint64_t v54 = (uint64_t)v71;
  }
  else
  {
    swift_retain();
    sub_19E68C008(v65, 0);
    uint64_t v54 = v55;
    swift_release();
    uint64_t v56 = sub_19E677340(a3, (uint64_t)v76, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v57 = sub_19E677340(v54, (uint64_t)v75, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v66;
    *(unsigned char *)(v58 + 24) = v67;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v56;
    inited[3] = v57;
    inited[4] = v41;
    inited[5] = 0;
    inited[6] = sub_19E68D6CC;
    inited[7] = v58;
    swift_retain();
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v54;
}

uint64_t sub_19E680684(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v58[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v56 = a2;
  if (v6)
  {
    uint64_t v48 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = v58[0];
    uint64_t v55 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (*(void *)(v8 + 16))
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v54 = v8;
                uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 16 * v17 + 8);
                uint64_t v52 = swift_getObjectType();
                unint64_t v53 = v14;
                uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                uint64_t v20 = v19;
                uint64_t v8 = v54;
                unint64_t v21 = v51(v52, v20);
                swift_unknownObjectRelease();
                if (v53 < v21)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  uint64_t v6 = v55;
                  a2 = v56;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v22 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v57 = (void *)v8;
            unint64_t v25 = sub_19E6628BC(v22);
            uint64_t v26 = v8;
            uint64_t v27 = *(void *)(v8 + 16);
            BOOL v28 = (v24 & 1) == 0;
            uint64_t v29 = v27 + v28;
            if (__OFADD__(v27, v28))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v58[0] = 0;
                v58[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E680C84);
            }
            char v30 = v24;
            if (*(void *)(v26 + 24) >= v29)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v33 = v57;
                if ((v24 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                unint64_t v33 = v57;
                if ((v30 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v29, isUniquelyReferenced_nonNull_native);
              unint64_t v31 = sub_19E6628BC(v22);
              if ((v30 & 1) != (v32 & 1)) {
                goto LABEL_38;
              }
              unint64_t v25 = v31;
              unint64_t v33 = v57;
              if ((v30 & 1) == 0)
              {
LABEL_26:
                v33[(v25 >> 6) + 8] |= 1 << v25;
                *(void *)(v33[6] + 8 * v25) = v22;
                char v35 = (uint64_t *)(v33[7] + 16 * v25);
                uint64_t *v35 = v11;
                v35[1] = v10;
                uint64_t v36 = v33[2];
                BOOL v37 = __OFADD__(v36, 1);
                uint64_t v38 = v36 + 1;
                if (v37) {
                  goto LABEL_37;
                }
                uint64_t v8 = (uint64_t)v33;
                v33[2] = v38;
                goto LABEL_28;
              }
            }
            char v34 = (uint64_t *)(v33[7] + 16 * v25);
            swift_unknownObjectRelease();
            uint64_t *v34 = v11;
            v34[1] = v10;
            uint64_t v8 = (uint64_t)v33;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v48;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_19E5DE088(v39);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v40 + 16))
  {
    uint64_t v41 = *(os_unfair_lock_s **)(*(void *)(v4 + 16) + 40);
    uint64_t v42 = (uint64_t *)&v41[4];
    uint64_t v43 = v41 + 6;
    os_unfair_lock_lock(v41 + 6);
    sub_19E68C444((uint64_t)v42, v58);
    os_unfair_lock_unlock(v43);
    if (!v58[0]) {
      goto LABEL_39;
    }
    uint64_t v44 = *(void *)(v58[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_19E68C460((uint64_t *)(v44 + 16), v58);
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    uint64_t v45 = v58[0];
    swift_release();
    uint64_t v46 = sub_19E683858(v40, v45, a3, v4, a1, v56);
    swift_release();
    os_unfair_lock_lock(v43);
    sub_19E68C49C(v42);
    os_unfair_lock_unlock(v43);
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v46 = sub_19E683858(v40, 0, a3, v4, a1, a2);
    swift_release();
  }
  return v46;
}

uint64_t sub_19E680C94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v68 = a6;
  int v70 = a4;
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v69 = a1;
  v80[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  unint64_t v9 = *(os_unfair_lock_s **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v78 = v9;
  if (v9)
  {
    int v67 = v6;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v10 = 0;
    uint64_t v11 = (uint64_t *)v80[0];
    uint64_t v77 = a5;
    while (1)
    {
      unint64_t v12 = *(void *)(a5 + 8 * (void)v10 + 32);
      os_unfair_lock_t v10 = (os_unfair_lock_t)((char *)v10 + 1);
      switch(v12 >> 62)
      {
        case 1uLL:
          uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v14 = sub_19E6C4398();
          uint64_t v13 = v15;
          if (v14) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v14 = *(void *)(v12 + 24);
          uint64_t v13 = *(void *)(v12 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v14) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(ObjectType, v13) & 1) == 0)
          {
            uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(ObjectType, v13);
            char v18 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
            uint64_t v19 = v18(ObjectType, v13);
            if (v11[2])
            {
              unint64_t v20 = sub_19E6628BC(v19);
              if (v21)
              {
                uint64_t v22 = v11[7] + 16 * v20;
                unint64_t v75 = v17;
                uint64_t v23 = *(void *)(v22 + 8);
                uint64_t v74 = swift_getObjectType();
                uint64_t v76 = v11;
                uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
                swift_unknownObjectRetain();
                unint64_t v24 = v73(v74, v23);
                swift_unknownObjectRelease();
                BOOL v25 = v75 >= v24;
                uint64_t v11 = v76;
                if (!v25)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  a5 = v77;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v26 = v18(ObjectType, v13);
            swift_unknownObjectRetain();
            uint64_t v27 = v11;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            os_unfair_lock_t v79 = v27;
            unint64_t v30 = sub_19E6628BC(v26);
            uint64_t v31 = v27[2];
            BOOL v32 = (v29 & 1) == 0;
            uint64_t v33 = v31 + v32;
            if (__OFADD__(v31, v32))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v80[0] = 0;
                v80[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v66) = 0;
              uint64_t v65 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E681504);
            }
            char v34 = v29;
            if (v27[3] >= v33)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v11 = v79;
                if ((v29 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v11 = v79;
                if ((v34 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v33, isUniquelyReferenced_nonNull_native);
              unint64_t v35 = sub_19E6628BC(v26);
              if ((v34 & 1) != (v36 & 1)) {
                goto LABEL_38;
              }
              unint64_t v30 = v35;
              uint64_t v11 = v79;
              if ((v34 & 1) == 0)
              {
LABEL_26:
                v11[(v30 >> 6) + 8] |= 1 << v30;
                *(void *)(v11[6] + 8 * v30) = v26;
                uint64_t v38 = (uint64_t *)(v11[7] + 16 * v30);
                uint64_t *v38 = v14;
                v38[1] = v13;
                uint64_t v39 = v11[2];
                BOOL v40 = __OFADD__(v39, 1);
                uint64_t v41 = v39 + 1;
                if (v40) {
                  goto LABEL_37;
                }
                void v11[2] = v41;
                goto LABEL_28;
              }
            }
            BOOL v37 = (uint64_t *)(v11[7] + 16 * v30);
            swift_unknownObjectRelease();
            *BOOL v37 = v14;
            v37[1] = v13;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v78 == v10)
          {
            swift_bridgeObjectRelease();
            uint64_t v7 = v67;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_19E5DE088(v42);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v43 + 16))
  {
    uint64_t v44 = *(os_unfair_lock_s **)(v7[2] + 40);
    uint64_t v45 = (uint64_t *)&v44[4];
    uint64_t v46 = v44 + 6;
    os_unfair_lock_lock(v44 + 6);
    uint64_t v76 = v45;
    sub_19E68C444((uint64_t)v45, v80);
    os_unfair_lock_t v78 = v46;
    os_unfair_lock_unlock(v46);
    if (!v80[0]) {
      goto LABEL_39;
    }
    uint64_t v47 = *(void *)(v80[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v47 + 24));
    sub_19E68C460((uint64_t *)(v47 + 16), v80);
    os_unfair_lock_unlock((os_unfair_lock_t)(v47 + 24));
    uint64_t v48 = v80[0];
    uint64_t v49 = swift_release();
    MEMORY[0x1F4188790](v49);
    uint64_t v65 = (uint64_t)v7;
    uint64_t v66 = v48;
    uint64_t v50 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v64, v68);
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = v71;
    *(void *)(v51 + 16) = v69;
    *(void *)(v51 + 24) = v52;
    *(void *)(v51 + 32) = v72;
    *(unsigned char *)(v51 + 40) = v70;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v53 = sub_19E69E1D8(a5);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_19E69E488(v50);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = v53;
    v55[3] = v54;
    v55[4] = v43;
    v55[5] = v48;
    v55[6] = sub_19E68D210;
    v55[7] = v51;
    __swift_project_boxed_opaque_existential_1(v7 + 3, v7[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v55);
    swift_release();
    swift_release();
    uint64_t v56 = v78;
    os_unfair_lock_lock(v78);
    sub_19E68C49C(v76);
    os_unfair_lock_unlock(v56);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v68, 0);
    uint64_t v50 = v57;
    swift_release();
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = v71;
    *(void *)(v58 + 16) = v69;
    *(void *)(v58 + 24) = v59;
    *(void *)(v58 + 32) = v72;
    *(unsigned char *)(v58 + 40) = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_19E69E1D8(a5);
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_19E69E488(v50);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v60;
    inited[3] = v61;
    inited[4] = v43;
    inited[5] = 0;
    inited[6] = sub_19E68D6B8;
    inited[7] = v58;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v50;
}

uint64_t sub_19E681514(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v65 = a3;
  int v66 = a1;
  v74[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v72 = v6;
  if (v6)
  {
    uint64_t v64 = v3;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v7 = 0;
    uint64_t v8 = (uint64_t *)v74[0];
    uint64_t v71 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      os_unfair_lock_t v7 = (os_unfair_lock_t)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!v8[2]) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = v8[7] + 16 * v17;
          int v70 = v8;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v68 = swift_getObjectType();
          unint64_t v69 = v14;
          int v67 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          uint64_t v21 = v20;
          uint64_t v8 = v70;
          unint64_t v22 = v67(v68, v21);
          swift_unknownObjectRelease();
          if (v69 >= v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v73 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            uint64_t v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v74[0] = 0;
                v74[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v63) = 0;
              uint64_t v62 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E681D20);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              a2 = v71;
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v35 = v73;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                unint64_t v35 = v73;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              a2 = v71;
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_37;
              }
              unint64_t v28 = v33;
              unint64_t v35 = v73;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                BOOL v37 = (uint64_t *)(v35[7] + 16 * v28);
                *BOOL v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_36;
                }
                uint64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            char v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *char v36 = v10;
            v36[1] = v11;
            uint64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v71;
LABEL_5:
          if (v72 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v64;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    int v70 = v44;
    sub_19E68C444((uint64_t)v44, v74);
    os_unfair_lock_t v72 = v45;
    os_unfair_lock_unlock(v45);
    if (!v74[0]) {
      goto LABEL_38;
    }
    uint64_t v46 = *(void *)(v74[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), v74);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = v74[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v62 = (uint64_t)v4;
    uint64_t v63 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v61, v65);
    uint64_t v50 = swift_allocObject();
    *(unsigned char *)(v50 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v51 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v51;
    v53[3] = v52;
    v53[4] = v42;
    v53[5] = v47;
    v53[6] = sub_19E68D314;
    v53[7] = v50;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v53);
    swift_release();
    swift_release();
    uint64_t v54 = v72;
    os_unfair_lock_lock(v72);
    sub_19E68C49C(v70);
    os_unfair_lock_unlock(v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v65, 0);
    uint64_t v49 = v55;
    swift_release();
    uint64_t v56 = swift_allocObject();
    *(unsigned char *)(v56 + 16) = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = sub_19E69E1D8(a2);
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_19E69E488(v49);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v57;
    inited[3] = v58;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D674;
    inited[7] = v56;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v49;
}

uint64_t sub_19E681D30(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v69 = a3;
  int v70 = a1;
  *(void *)&v82[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  os_unfair_lock_t v76 = v6;
  if (v6)
  {
    uint64_t v68 = v3;
    swift_bridgeObjectRetain();
    os_unfair_lock_t v7 = 0;
    uint64_t v8 = *(uint64_t **)&v82[0];
    uint64_t v75 = a2;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + 8 * (void)v7 + 32);
      os_unfair_lock_t v7 = (os_unfair_lock_t)((char *)v7 + 1);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11))
          {
            swift_unknownObjectRelease();
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
          uint64_t v16 = v15(ObjectType, v11);
          if (!v8[2]) {
            goto LABEL_17;
          }
          unint64_t v17 = sub_19E6628BC(v16);
          if ((v18 & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v19 = v8[7] + 16 * v17;
          uint64_t v74 = v8;
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v72 = swift_getObjectType();
          unint64_t v73 = v14;
          uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
          swift_unknownObjectRetain();
          uint64_t v21 = v20;
          uint64_t v8 = v74;
          unint64_t v22 = v71(v72, v21);
          swift_unknownObjectRelease();
          if (v73 >= v22)
          {
LABEL_17:
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v81 = v8;
            unint64_t v25 = sub_19E6628BC(v23);
            uint64_t v27 = v8;
            unint64_t v28 = v25;
            uint64_t v29 = v27[2];
            BOOL v30 = (v26 & 1) == 0;
            uint64_t v31 = v29 + v30;
            if (__OFADD__(v29, v30))
            {
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              sub_19EBF7408();
              __break(1u);
LABEL_38:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                *(void *)&v82[0] = 0;
                *((void *)&v82[0] + 1) = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v67) = 0;
              uint64_t v66 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E6825B0);
            }
            char v32 = v26;
            if (v27[3] >= v31)
            {
              a2 = v75;
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v35 = (uint64_t *)v81;
                if ((v26 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                unint64_t v35 = (uint64_t *)v81;
                if ((v32 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v31, isUniquelyReferenced_nonNull_native);
              unint64_t v33 = sub_19E6628BC(v23);
              a2 = v75;
              if ((v32 & 1) != (v34 & 1)) {
                goto LABEL_37;
              }
              unint64_t v28 = v33;
              unint64_t v35 = (uint64_t *)v81;
              if ((v32 & 1) == 0)
              {
LABEL_26:
                v35[(v28 >> 6) + 8] |= 1 << v28;
                *(void *)(v35[6] + 8 * v28) = v23;
                BOOL v37 = (uint64_t *)(v35[7] + 16 * v28);
                *BOOL v37 = v10;
                v37[1] = v11;
                uint64_t v38 = v35[2];
                BOOL v39 = __OFADD__(v38, 1);
                uint64_t v40 = v38 + 1;
                if (v39) {
                  goto LABEL_36;
                }
                uint64_t v8 = v35;
                _OWORD v35[2] = v40;
                goto LABEL_28;
              }
            }
            char v36 = (uint64_t *)(v35[7] + 16 * v28);
            swift_unknownObjectRelease();
            *char v36 = v10;
            v36[1] = v11;
            uint64_t v8 = v35;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_unknownObjectRelease();
          swift_release();
          a2 = v75;
LABEL_5:
          if (v76 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v68;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_19E5DE088(v41);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(os_unfair_lock_s **)(v4[2] + 40);
    uint64_t v44 = (uint64_t *)&v43[4];
    uint64_t v45 = v43 + 6;
    os_unfair_lock_lock(v43 + 6);
    uint64_t v74 = v44;
    sub_19E68C444((uint64_t)v44, (uint64_t *)v82);
    os_unfair_lock_t v76 = v45;
    os_unfair_lock_unlock(v45);
    if (!*(void *)&v82[0]) {
      goto LABEL_38;
    }
    uint64_t v46 = *(void *)(*(void *)&v82[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
    sub_19E68C460((uint64_t *)(v46 + 16), (uint64_t *)v82);
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
    uint64_t v47 = *(void *)&v82[0];
    uint64_t v48 = swift_release();
    MEMORY[0x1F4188790](v48);
    uint64_t v66 = (uint64_t)v4;
    uint64_t v67 = v47;
    uint64_t v49 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D680, (uint64_t)&v65, v69);
    uint64_t v50 = sub_19E677340(a2, (uint64_t)v80, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v51 = sub_19E677340(v49, (uint64_t)v79, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v52 = v70;
    v82[0] = *(_OWORD *)((char *)v70 + 8);
    long long v81 = *(_OWORD *)((char *)v70 + 24);
    uint64_t v53 = swift_allocObject();
    long long v54 = v52[1];
    *(_OWORD *)(v53 + 16) = *v52;
    *(_OWORD *)(v53 + 32) = v54;
    *(void *)(v53 + 48) = *((void *)v52 + 4);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = v50;
    v55[3] = v51;
    v55[4] = v42;
    v55[5] = v47;
    v55[6] = sub_19E68D268;
    v55[7] = v53;
    __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    swift_retain();
    swift_retain();
    sub_19E668FC4((uint64_t)v82);
    sub_19E668FC4((uint64_t)&v81);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v55);
    swift_release();
    swift_release();
    uint64_t v56 = v76;
    os_unfair_lock_lock(v76);
    sub_19E68C49C(v74);
    os_unfair_lock_unlock(v56);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v69, 0);
    uint64_t v49 = v57;
    swift_release();
    uint64_t v58 = sub_19E677340(a2, (uint64_t)v78, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v59 = sub_19E677340(v49, (uint64_t)v77, (void (*)(uint64_t, void))sub_19E68F09C);
    uint64_t v60 = v70;
    v82[0] = *(_OWORD *)((char *)v70 + 8);
    long long v81 = *(_OWORD *)((char *)v70 + 24);
    uint64_t v61 = swift_allocObject();
    long long v62 = v70[1];
    *(_OWORD *)(v61 + 16) = *v70;
    *(_OWORD *)(v61 + 32) = v62;
    *(void *)(v61 + 48) = *((void *)v60 + 4);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v58;
    inited[3] = v59;
    inited[4] = v42;
    inited[5] = 0;
    inited[6] = sub_19E68D6C8;
    inited[7] = v61;
    swift_retain();
    sub_19E668FC4((uint64_t)v82);
    sub_19E668FC4((uint64_t)&v81);
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v49;
}

uint64_t sub_19E6825C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v55 = a3;
  uint64_t v56 = a1;
  v64[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v61 = a2;
  if (v6)
  {
    long long v54 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = (void *)v64[0];
    uint64_t v60 = v6;
    while (1)
    {
      unint64_t v9 = a2[v7++ + 4];
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v11 = sub_19E6C4398();
          uint64_t v10 = v12;
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v11 = *(void *)(v9 + 24);
          uint64_t v10 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v11) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10) & 1) == 0)
          {
            uint64_t v62 = v7;
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
            uint64_t v16 = v15(ObjectType, v10);
            if (v8[2])
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v19 = *(void *)(v8[7] + 16 * v17 + 8);
                uint64_t v58 = swift_getObjectType();
                unint64_t v59 = v14;
                uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 32);
                swift_unknownObjectRetain();
                unint64_t v20 = v57(v58, v19);
                swift_unknownObjectRelease();
                if (v59 < v20)
                {
                  swift_unknownObjectRelease();
                  swift_release();
                  uint64_t v6 = v60;
                  a2 = v61;
                  uint64_t v7 = v62;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v21 = v15(ObjectType, v10);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v63 = v8;
            unint64_t v24 = sub_19E6628BC(v21);
            uint64_t v25 = v8[2];
            BOOL v26 = (v23 & 1) == 0;
            uint64_t v27 = v25 + v26;
            if (__OFADD__(v25, v26))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              sub_19EBF7408();
              __break(1u);
LABEL_43:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1)
              {
                v64[0] = 0;
                v64[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              LODWORD(v53) = 0;
              uint64_t v52 = 116;
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E682CA4);
            }
            char v28 = v23;
            if (v8[3] >= v27)
            {
              uint64_t v7 = v62;
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v8 = v63;
                if ((v23 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v8 = v63;
                if ((v28 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v27, isUniquelyReferenced_nonNull_native);
              unint64_t v29 = sub_19E6628BC(v21);
              uint64_t v7 = v62;
              if ((v28 & 1) != (v30 & 1)) {
                goto LABEL_42;
              }
              unint64_t v24 = v29;
              uint64_t v8 = v63;
              if ((v28 & 1) == 0)
              {
LABEL_26:
                v8[(v24 >> 6) + 8] |= 1 << v24;
                *(void *)(v8[6] + 8 * v24) = v21;
                char v32 = (uint64_t *)(v8[7] + 16 * v24);
                *char v32 = v11;
                v32[1] = v10;
                uint64_t v33 = v8[2];
                BOOL v34 = __OFADD__(v33, 1);
                uint64_t v35 = v33 + 1;
                if (v34) {
                  goto LABEL_41;
                }
                long long v8[2] = v35;
                goto LABEL_28;
              }
            }
            uint64_t v31 = (uint64_t *)(v8[7] + 16 * v24);
            swift_unknownObjectRelease();
            *uint64_t v31 = v11;
            v31[1] = v10;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v6 = v60;
            a2 = v61;
            goto LABEL_5;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v54;
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_19E5DE088(v36);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v37 + 16))
  {
    uint64_t v38 = *(os_unfair_lock_s **)(v4[2] + 40);
    BOOL v39 = (uint64_t *)&v38[4];
    uint64_t v40 = v38 + 6;
    os_unfair_lock_lock(v38 + 6);
    sub_19E68C444((uint64_t)v39, v64);
    os_unfair_lock_unlock(v40);
    if (!v64[0]) {
      goto LABEL_43;
    }
    uint64_t v41 = *(void *)(v64[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v41 + 24));
    sub_19E68C460((uint64_t *)(v41 + 16), v64);
    os_unfair_lock_unlock((os_unfair_lock_t)(v41 + 24));
    uint64_t v42 = v64[0];
    uint64_t v43 = swift_release();
    MEMORY[0x1F4188790](v43);
    uint64_t v52 = (uint64_t)v4;
    uint64_t v53 = v42;
    uint64_t v44 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68C47C, (uint64_t)&v51, v55);
    uint64_t v45 = sub_19E6912CC(v61, v44, v37, v42);
    uint64_t v46 = v4;
    uint64_t v47 = (uint64_t)v45;
    if (v45[5])
    {
      __swift_project_boxed_opaque_existential_1(v46 + 3, v46[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C(v47);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v40);
    sub_19E68C49C(v39);
    os_unfair_lock_unlock(v40);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v55, 0);
    uint64_t v44 = v48;
    swift_release();
    uint64_t v49 = sub_19E6912CC(a2, v44, v37, 0);
    if (v49[5])
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v49);
    }
    else
    {
      sub_19E6868FC();
    }
  }
  swift_release();
  swift_release();
  return v44;
}

os_unfair_lock_t sub_19E682CB4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E684A84(a1, a2, MEMORY[0x1E4FBC870], a3);
}

uint64_t sub_19E682CE4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67EE04(a1, a2, a3);
}

uint64_t sub_19E682D08(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E681D30(a1, a2, a3);
}

uint64_t sub_19E682D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E678C60(a1, a2, a3);
}

uint64_t sub_19E682D50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_19E680C94(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19E682D74(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_19E682D98(a1, a2, a3);
}

uint64_t sub_19E682D98(void **a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E682FACLL);
  }
  unint64_t v3 = *(void *)(a2 + 32);
  unint64_t v4 = v3 >> 62;
  switch(v3 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = (void **)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = (void **)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v8 = (void **)(v3 + 40);
      uint64_t v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      break;
  }
  unint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = (uint64_t)*a1;
  BOOL v11 = sub_19E5DDC7C(*a1, v9);
  swift_retain();
  swift_bridgeObjectRelease();
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19EC36240;
    *(void *)(v12 + 32) = v3;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    if (v4 == 3)
    {
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19EC36240;
      *(void *)(inited + 32) = *(void *)(v7 + 16);
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_19E682D98(a1, inited, a3);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_release_n();
    }
    else
    {
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_19EC36240;
      type metadata accessor for MLTensorStorageView();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v3;
      uint64_t v15 = (char *)(v3 + 48);
      uint64_t v16 = (char *)(v3 + 49);
      unint64_t v17 = (char *)(v7 + 32);
      char v18 = (char *)(v7 + 33);
      if (v4 != 1)
      {
        unint64_t v17 = (char *)(v7 + 24);
        char v18 = (char *)(v7 + 25);
      }
      if (v4)
      {
        uint64_t v15 = v17;
        uint64_t v16 = v18;
      }
      char v19 = *v16;
      char v20 = *v15;
      *(void *)(v14 + 24) = v10;
      *(unsigned char *)(v14 + 32) = v20;
      *(unsigned char *)(v14 + 33) = v19;
      *(void *)(v12 + 32) = v14 | 0xC000000000000000;
      swift_bridgeObjectRetain();
    }
  }
  return v12;
}

uint64_t sub_19E682FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E679354(a1, a2, a3);
}

uint64_t sub_19E682FE0(uint64_t a1, uint64_t a2)
{
  return sub_19E68C77C(a1, a2);
}

uint64_t sub_19E683004(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19E677BC4(a1, a2, a3);
}

uint64_t sub_19E683028(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E6783E0(a1 & 1, a2, a3, a4, a5, a6);
}

uint64_t sub_19E683050(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E680684(a1, a2, a3);
}

uint64_t *sub_19E683074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (uint64_t *)sub_19E68CFDC((uint64_t)&unk_1EF0C78D0);
  uint64_t v13 = sub_19E683CB8(a1, a2, a3, a4, a5, v12, a6);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19E683104(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E679C10(a1, a2, a3);
}

uint64_t sub_19E683128(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67A48C(a1, a2, a3);
}

uint64_t sub_19E68314C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67AD58(a1, a2, a3);
}

uint64_t sub_19E683170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67C274(a1, a2, a3);
}

uint64_t sub_19E683194(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67CB28(a1, a2, a3);
}

uint64_t sub_19E6831B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19E67D3B0(a1, a2, a3 & 1, a4, a5, a6);
}

uint64_t sub_19E6831E0(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67DAD4(a1, a2, a3);
}

uint64_t sub_19E683204(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  void v5[2] = a1[2];
  return sub_19E67E0E4(v5, a2, a3);
}

uint64_t sub_19E683244(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_19E67E7F4(a1, a2, a3);
}

uint64_t sub_19E683268(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_19E67F620(a1, a2, a3 & 1, a4, a5);
}

uint64_t sub_19E683290(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_19E67FE64(a1, a2, a3, a4);
}

uint64_t sub_19E6832B4(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  long long v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  return sub_19E67B44C(&v5, a2, a3);
}

uint64_t sub_19E6832F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19E67BB5C(a1, a2 & 1, a3, a4);
}

uint64_t sub_19E68331C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_19E6825C0(a1, a2, a3);
}

void sub_19E683344(__IOSurface *a1)
{
  if (qword_1E945BB88 != -1) {
    swift_once();
  }
  uint64_t v2 = (void (*)(char *, char *, uint64_t))(qword_1E945D0B0 + 16);
  long long v3 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
  sub_19E695404(v2, a1);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_19E6833E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19E68C008(a3, a2);
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  if (!*(void *)(v13 + 16))
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(v13 + 32);
  switch(v14 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v15 = (uint64_t *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v15 = (uint64_t *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v15 = (uint64_t *)(v14 + 40);
      break;
  }
  uint64_t v16 = *v15;
  if (!*(void *)(v16 + 16))
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x19E6835F8);
  }
  uint64_t v17 = *(void *)(v16 + 32);
  long long v18 = *a5;
  long long v25 = a5[1];
  long long v26 = v18;
  uint64_t v19 = swift_allocObject();
  long long v20 = a5[1];
  *(_OWORD *)(v19 + 16) = *a5;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = a5[2];
  *(void *)(v19 + 64) = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v26);
  sub_19E668FC4((uint64_t)&v25);
  uint64_t v21 = sub_19E69E1D8(a6);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_19E69E488(v13);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  char v23 = (void *)swift_allocObject();
  void v23[2] = v21;
  v23[3] = v22;
  v23[4] = a1;
  v23[5] = a2;
  v23[6] = sub_19E68C634;
  v23[7] = v19;
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a4 + 24), *(void *)(a4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v23);
  }
  else
  {
    sub_19E6868FC();
  }
  swift_release();
  return v13;
}

uint64_t sub_19E683608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19E68C008(a3, a2);
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  if (!*(void *)(a6 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E683848);
  }
  unint64_t v14 = *(void *)(a6 + 32);
  uint64_t v30 = a1;
  switch(v14 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v16 = (uint64_t *)(v15 + 24);
      uint64_t v17 = (char *)(v15 + 32);
      long long v18 = (char *)(v15 + 33);
      break;
    case 2uLL:
      uint64_t v19 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v16 = (uint64_t *)(v19 + 16);
      uint64_t v17 = (char *)(v19 + 24);
      long long v18 = (char *)(v19 + 25);
      break;
    default:
      uint64_t v16 = (uint64_t *)(v14 + 40);
      uint64_t v17 = (char *)(v14 + 48);
      long long v18 = (char *)(v14 + 49);
      break;
  }
  uint64_t v20 = *v16;
  char v21 = *v17;
  char v22 = *v18;
  swift_bridgeObjectRetain();
  long long v23 = *a5;
  long long v31 = a5[1];
  long long v32 = v23;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v20;
  *(unsigned char *)(v24 + 24) = v21;
  *(unsigned char *)(v24 + 25) = v22;
  long long v25 = a5[1];
  *(_OWORD *)(v24 + 32) = *a5;
  *(_OWORD *)(v24 + 48) = v25;
  *(_OWORD *)(v24 + 57) = *(long long *)((char *)a5 + 25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v32);
  sub_19E668FC4((uint64_t)&v31);
  uint64_t v26 = sub_19E69E1D8(a6);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_19E69E488(v13);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  char v28 = (void *)swift_allocObject();
  _OWORD v28[2] = v26;
  v28[3] = v27;
  v28[4] = v30;
  v28[5] = a2;
  v28[6] = sub_19E68C608;
  v28[7] = v24;
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a4 + 24), *(void *)(a4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v28);
  }
  else
  {
    sub_19E6868FC();
  }
  swift_release();
  return v13;
}

uint64_t sub_19E683858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19E68C008(a3, a2);
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  if (!*(void *)(a6 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v14 = *(void *)(a6 + 32);
  switch(v14 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v16 = (uint64_t *)(v15 + 24);
      uint64_t v17 = (char *)(v15 + 32);
      long long v18 = (char *)(v15 + 33);
      break;
    case 2uLL:
      uint64_t v19 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v16 = (uint64_t *)(v19 + 16);
      uint64_t v17 = (char *)(v19 + 24);
      long long v18 = (char *)(v19 + 25);
      break;
    default:
      uint64_t v16 = (uint64_t *)(v14 + 40);
      uint64_t v17 = (char *)(v14 + 48);
      long long v18 = (char *)(v14 + 49);
      break;
  }
  if (!*(void *)(v13 + 16))
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x19E683B24);
  }
  char v38 = *v17;
  char v39 = *v18;
  uint64_t v20 = *v16;
  unint64_t v21 = *(void *)(v13 + 32);
  uint64_t v37 = a4;
  uint64_t v40 = a1;
  switch(v21 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v22 = v21 & 0x3FFFFFFFFFFFFFFFLL;
      long long v23 = (uint64_t *)(v22 + 24);
      uint64_t v24 = (char *)(v22 + 32);
      long long v25 = (char *)(v22 + 33);
      break;
    case 2uLL:
      uint64_t v26 = v21 & 0x3FFFFFFFFFFFFFFFLL;
      long long v23 = (uint64_t *)(v26 + 16);
      uint64_t v24 = (char *)(v26 + 24);
      long long v25 = (char *)(v26 + 25);
      break;
    default:
      long long v23 = (uint64_t *)(v21 + 40);
      uint64_t v24 = (char *)(v21 + 48);
      long long v25 = (char *)(v21 + 49);
      break;
  }
  char v27 = *v25;
  char v28 = *v24;
  uint64_t v29 = *v23;
  uint64_t v30 = swift_allocObject();
  long long v31 = a5[1];
  *(_OWORD *)(v30 + 16) = *a5;
  *(_OWORD *)(v30 + 32) = v31;
  long long v32 = a5[3];
  *(_OWORD *)(v30 + 48) = a5[2];
  *(_OWORD *)(v30 + 64) = v32;
  *(void *)(v30 + 80) = v20;
  *(unsigned char *)(v30 + 88) = v38;
  *(unsigned char *)(v30 + 89) = v39;
  *(void *)(v30 + 96) = v29;
  *(unsigned char *)(v30 + 104) = v28;
  *(unsigned char *)(v30 + 105) = v27;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E669280((uint64_t)a5);
  uint64_t v33 = sub_19E69E1D8(a6);
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_19E69E488(v13);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t v35 = (void *)swift_allocObject();
  _OWORD v35[2] = v33;
  v35[3] = v34;
  v35[4] = v40;
  v35[5] = a2;
  v35[6] = sub_19E68D174;
  v35[7] = v30;
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v37 + 24), *(void *)(v37 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v35);
  }
  else
  {
    sub_19E6868FC();
  }
  swift_release();
  return v13;
}

void sub_19E683B44(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void **)a1;
  unsigned int v7 = *(unsigned __int8 *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 9);
  unint64_t v9 = (void *)MEMORY[0x19F3C1A40]();
  if (qword_1E945BB88 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)(qword_1E945D0B0 + 16);
  BOOL v11 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
  if (v8) {
    int v12 = 256;
  }
  else {
    int v12 = 0;
  }
  sub_19E694038(v10, v6, v12 | v7, 0, 1, &v15);
  if (v3)
  {
    os_unfair_lock_unlock(v11);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v11);
    uint64_t v13 = v15;
    type metadata accessor for IOSurfaceStorage();
    uint64_t v14 = swift_allocObject();
    *(unsigned char *)(v14 + 32) = v7;
    *(unsigned char *)(v14 + 33) = v8;
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v6;
    if (a2)
    {
      *(void *)(v14 + 40) = a2;
      *(void *)(v14 + 48) = &off_1EF0C8480;
    }
    else
    {
      *(void *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
    }
    *(void *)(v14 + 56) = sub_19E683340;
    *(void *)(v14 + 64) = 0;
    *a3 = v14 | 0x4000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

uint64_t *sub_19E683CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v107 = a4;
  uint64_t v108 = a7;
  long long v117 = a6;
  uint64_t v105 = a2;
  uint64_t v106 = a3;
  uint64_t v104 = a1;
  unint64_t v8 = *(void *)(a5 + 16);
  unint64_t v9 = sub_19E607130(0, v8, 0, MEMORY[0x1E4FBC860]);
  if (!v8)
  {
    int v109 = 0;
    goto LABEL_30;
  }
  int v109 = 0;
  uint64_t v10 = 0;
  long long v115 = (uint64_t *)(a5 + 32);
  BOOL v11 = v117 + 7;
  long long v114 = xmmword_19EC36240;
  unint64_t v113 = 0x800000019EC09240;
  do
  {
    if ((unint64_t)v10 <= v8) {
      int v12 = (void *)v8;
    }
    else {
      int v12 = v10;
    }
    uint64_t v116 = v12;
    uint64_t v13 = v10;
    while (1)
    {
      if (v13 == v116)
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      uint64_t v10 = (void *)((char *)v13 + 1);
      unint64_t v14 = v115[(void)v13];
      if (!v117[2]) {
        goto LABEL_15;
      }
      uint64_t v15 = sub_19EBF7468();
      uint64_t v16 = -1 << *((unsigned char *)v117 + 32);
      unint64_t v17 = v15 & ~v16;
      if (((*(unint64_t *)((char *)v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_15;
      }
      uint64_t v18 = v117[6];
      if (*(void **)(v18 + 8 * v17) != v13) {
        break;
      }
LABEL_20:
      unint64_t v21 = v8;
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      uint64_t v24 = v9;
      swift_retain_n();
      if (v23 >= v22 >> 1) {
        uint64_t v24 = sub_19E607130((void *)(v22 > 1), v23 + 1, 1, v9);
      }
      _OWORD v24[2] = v23 + 1;
      unint64_t v9 = v24;
      v24[v23 + 4] = v14;
      swift_release();
      uint64_t v13 = (void *)((char *)v13 + 1);
      unint64_t v8 = v21;
      if (v10 == (void *)v21) {
        goto LABEL_30;
      }
    }
    uint64_t v19 = ~v16;
    while (1)
    {
      unint64_t v17 = (v17 + 1) & v19;
      if (((*(unint64_t *)((char *)v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        break;
      }
      if (*(void **)(v18 + 8 * v17) == v13) {
        goto LABEL_20;
      }
    }
LABEL_15:
    switch(v14 >> 62)
    {
      case 1uLL:
      case 3uLL:
        uint64_t v20 = (unsigned __int8 *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 32);
        break;
      case 2uLL:
        uint64_t v20 = (unsigned __int8 *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      default:
        uint64_t v20 = (unsigned __int8 *)(v14 + 48);
        break;
    }
    if (*v20 > 8u) {
      goto LABEL_20;
    }
    uint64_t v116 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v114;
    *(void *)(inited + 32) = v14;
    uint64_t v111 = inited + 32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
    uint64_t v26 = swift_initStackObject();
    *(_OWORD *)(v26 + 16) = v114;
    uint64_t v27 = v26;
    *(void *)(v26 + 32) = swift_bridgeObjectRetain();
    *(_WORD *)(v27 + 40) = 10;
    v125[0] = 0xD000000000000011;
    v125[1] = v113;
    v125[2] = 1953718627;
    v125[3] = 0xE400000000000000;
    __int16 v126 = 10;
    swift_retain_n();
    uint64_t v28 = sub_19E678C60((uint64_t)v125, inited, v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_setDeallocating();
    swift_arrayDestroy();
    if (!*(void *)(v28 + 16)) {
      goto LABEL_91;
    }
    uint64_t v111 = v8;
    uint64_t v29 = *(void *)(v28 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v30 = v116[2];
    unint64_t v31 = v116[3];
    swift_retain();
    if (v30 >= v31 >> 1) {
      uint64_t v116 = sub_19E607130((void *)(v31 > 1), v30 + 1, 1, v116);
    }
    long long v32 = v116;
    v116[2] = v30 + 1;
    v32[v30 + 4] = v29;
    unint64_t v9 = v32;
    swift_release();
    swift_release();
    int v109 = 1;
    unint64_t v8 = v111;
  }
  while (v10 != (void *)v111);
LABEL_30:
  unint64_t v119 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v33 = (uint64_t *)v9[2];
  uint64_t v116 = v9;
  if (v33)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
    uint64_t v35 = (void *)v119;
    long long v115 = v33;
    while (2)
    {
      unint64_t v36 = v9[(void)v34 + 4];
      uint64_t v34 = (uint64_t *)((char *)v34 + 1);
      switch(v36 >> 62)
      {
        case 1uLL:
          uint64_t v38 = *(void *)((v36 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v37 = *(void *)((v36 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_37;
        case 2uLL:
          goto LABEL_33;
        case 3uLL:
          swift_retain();
          uint64_t v38 = sub_19E6C4398();
          uint64_t v37 = v39;
          if (v38) {
            goto LABEL_40;
          }
          goto LABEL_32;
        default:
          uint64_t v38 = *(void *)(v36 + 24);
          uint64_t v37 = *(void *)(v36 + 32);
LABEL_37:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v38)
          {
LABEL_32:
            swift_release();
            goto LABEL_33;
          }
LABEL_40:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 48))(ObjectType, v37))
          {
            swift_unknownObjectRelease();
            swift_release();
            unint64_t v9 = v116;
            goto LABEL_33;
          }
          long long v117 = v34;
          uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 32))(ObjectType, v37);
          uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
          uint64_t v43 = v42(ObjectType, v37);
          if (v35[2])
          {
            unint64_t v44 = sub_19E6628BC(v43);
            if (v45)
            {
              uint64_t v46 = v35[7] + 16 * v44;
              *(void *)&long long v114 = v35;
              uint64_t v47 = *(void *)(v46 + 8);
              uint64_t v48 = swift_getObjectType();
              unint64_t v113 = v41;
              uint64_t v110 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 32);
              uint64_t v111 = v48;
              swift_unknownObjectRetain();
              uint64_t v49 = v47;
              uint64_t v35 = (void *)v114;
              unint64_t v50 = v110(v111, v49);
              swift_unknownObjectRelease();
              if (v113 < v50)
              {
                swift_unknownObjectRelease();
                goto LABEL_58;
              }
            }
          }
          uint64_t v51 = v42(ObjectType, v37);
          swift_unknownObjectRetain();
          uint64_t v52 = v35;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v118 = v52;
          unint64_t v119 = 0x8000000000000000;
          unint64_t v55 = sub_19E6628BC(v51);
          uint64_t v56 = v52[2];
          BOOL v57 = (v54 & 1) == 0;
          uint64_t v58 = v56 + v57;
          if (__OFADD__(v56, v57)) {
            goto LABEL_89;
          }
          char v59 = v54;
          if (v52[3] >= v58)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v35 = v118;
              if (v54) {
                goto LABEL_53;
              }
            }
            else
            {
              sub_19E666758();
              uint64_t v35 = v118;
              if (v59) {
                goto LABEL_53;
              }
            }
          }
          else
          {
            sub_19E663F1C(v58, isUniquelyReferenced_nonNull_native);
            unint64_t v60 = sub_19E6628BC(v51);
            if ((v59 & 1) != (v61 & 1)) {
              goto LABEL_93;
            }
            unint64_t v55 = v60;
            uint64_t v35 = v118;
            if (v59)
            {
LABEL_53:
              uint64_t v62 = (uint64_t *)(v35[7] + 16 * v55);
              swift_unknownObjectRelease();
              *uint64_t v62 = v38;
              v62[1] = v37;
              goto LABEL_57;
            }
          }
          v35[(v55 >> 6) + 8] |= 1 << v55;
          *(void *)(v35[6] + 8 * v55) = v51;
          uint64_t v63 = (uint64_t *)(v35[7] + 16 * v55);
          uint64_t *v63 = v38;
          v63[1] = v37;
          uint64_t v64 = v35[2];
          BOOL v65 = __OFADD__(v64, 1);
          uint64_t v66 = v64 + 1;
          if (v65) {
            goto LABEL_90;
          }
          _OWORD v35[2] = v66;
LABEL_57:
          unint64_t v119 = (unint64_t)v35;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_58:
          swift_release();
          uint64_t v33 = v115;
          unint64_t v9 = v116;
          uint64_t v34 = v117;
LABEL_33:
          if (v33 != v34) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_19E5DE088(v67);
  swift_bridgeObjectRelease_n();
  if (!*(void *)(v68 + 16))
  {
    swift_retain();
    sub_19E68C21C(v108, 0);
    uint64_t v80 = v79;
    swift_release();
    uint64_t v81 = swift_bridgeObjectRetain();
    long long v82 = sub_19E69B0B4(v81, v80, v68, 0, v104, v105, v106, v107);
    swift_bridgeObjectRelease();
    if (v82[5])
    {
      __swift_project_boxed_opaque_existential_1(v112 + 3, v112[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v82);
    }
    else
    {
      sub_19E6868FC();
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if ((v109 & 1) == 0) {
      goto LABEL_85;
    }
LABEL_68:
    unint64_t v83 = *(void *)(v80 + 16);
    uint64_t v84 = sub_19E607130(0, v83, 0, MEMORY[0x1E4FBC860]);
    if (!v83) {
      goto LABEL_82;
    }
    if (v83 <= *(void *)(v108 + 16))
    {
      unint64_t v85 = 0;
      long long v86 = (char *)(v108 + 41);
      long long v114 = xmmword_19EC36240;
      uint64_t v110 = (uint64_t (*)(uint64_t, uint64_t))0x800000019EC09240;
      uint64_t v111 = v80;
      unint64_t v113 = v83;
      do
      {
        long long v117 = v84;
        uint64_t v87 = v80 + 8 * (void)v85;
        uint64_t v88 = (uint64_t *)((char *)v85 + 1);
        unint64_t v89 = *(void *)(v87 + 32);
        uint64_t v90 = *(void *)(v86 - 9);
        int v91 = *(v86 - 1);
        char v92 = *v86;
        switch(v89 >> 62)
        {
          case 1uLL:
          case 3uLL:
            uint64_t v93 = (unsigned __int8 *)((v89 & 0x3FFFFFFFFFFFFFFFLL) + 32);
            break;
          case 2uLL:
            uint64_t v93 = (unsigned __int8 *)((v89 & 0x3FFFFFFFFFFFFFFFLL) + 24);
            break;
          default:
            uint64_t v93 = (unsigned __int8 *)(v89 + 48);
            break;
        }
        long long v115 = v88;
        if (*v93 == v91)
        {
          swift_retain_n();
          uint64_t v94 = v89;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
          uint64_t v95 = swift_initStackObject();
          *(_OWORD *)(v95 + 16) = v114;
          *(void *)(v95 + 32) = v89;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
          uint64_t v96 = swift_initStackObject();
          *(_OWORD *)(v96 + 16) = v114;
          *(void *)(v96 + 32) = v90;
          *(unsigned char *)(v96 + 40) = v91;
          *(unsigned char *)(v96 + 41) = v92;
          unint64_t v119 = 0xD000000000000011;
          unint64_t v120 = (unint64_t)v110;
          uint64_t v121 = 1953718627;
          unint64_t v122 = 0xE400000000000000;
          char v123 = v91;
          char v124 = v92;
          swift_retain_n();
          swift_bridgeObjectRetain();
          uint64_t v97 = sub_19E678C60((uint64_t)&v119, v95, v96);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_setDeallocating();
          swift_arrayDestroy();
          if (!*(void *)(v97 + 16)) {
            goto LABEL_88;
          }
          uint64_t v94 = *(void *)(v97 + 32);
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v80 = v111;
        }
        uint64_t v84 = v117;
        unint64_t v98 = v117[2];
        unint64_t v99 = v117[3];
        swift_retain();
        if (v98 >= v99 >> 1) {
          uint64_t v84 = sub_19E607130((void *)(v99 > 1), v98 + 1, 1, v84);
        }
        _OWORD v84[2] = v98 + 1;
        v84[v98 + 4] = v94;
        swift_release();
        swift_release();
        v86 += 16;
        unint64_t v85 = v115;
      }
      while ((uint64_t *)v113 != v115);
LABEL_82:
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
LABEL_92:
    __break(1u);
LABEL_93:
    sub_19EBF7408();
    __break(1u);
LABEL_94:
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      unint64_t v119 = 0;
      unint64_t v120 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    LODWORD(v103) = 0;
    uint64_t v102 = 116;
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E684A44);
  }
  uint64_t v69 = v112;
  int v70 = *(os_unfair_lock_s **)(v112[2] + 40);
  uint64_t v71 = (uint64_t *)&v70[4];
  uint64_t v72 = v70 + 6;
  os_unfair_lock_lock(v70 + 6);
  long long v117 = v71;
  sub_19E68C444((uint64_t)v71, (uint64_t *)&v119);
  os_unfair_lock_unlock(v72);
  if (!v119) {
    goto LABEL_94;
  }
  uint64_t v73 = *(void *)(v119 + 64);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v73 + 24));
  sub_19E68C460((uint64_t *)(v73 + 16), (uint64_t *)&v119);
  os_unfair_lock_unlock((os_unfair_lock_t)(v73 + 24));
  uint64_t v74 = v119;
  uint64_t v75 = swift_release();
  MEMORY[0x1F4188790](v75);
  uint64_t v102 = (uint64_t)v112;
  uint64_t v103 = v74;
  uint64_t v76 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D0EC, (uint64_t)&v101, v108);
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v111 = v76;
  os_unfair_lock_t v78 = sub_19E69B0B4(v77, v76, v68, v74, v104, v105, v106, v107);
  swift_bridgeObjectRelease();
  if (v78[5])
  {
    __swift_project_boxed_opaque_existential_1(v69 + 3, v69[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19E688F0C((uint64_t)v78);
  }
  else
  {
    sub_19E6868FC();
  }
  swift_release();
  swift_release();
  os_unfair_lock_lock(v72);
  sub_19E68C49C(v117);
  os_unfair_lock_unlock(v72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  uint64_t v80 = v111;
  if (v109) {
    goto LABEL_68;
  }
LABEL_85:
  uint64_t v84 = (uint64_t *)v80;
LABEL_86:
  swift_bridgeObjectRelease();
  return v84;
}

os_unfair_lock_t sub_19E684A84(int a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4)
{
  uint64_t v107 = a4;
  os_unfair_lock_t v116 = a3;
  int v106 = a1;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_19E607130(0, v5, 0, MEMORY[0x1E4FBC860]);
  if (!v5)
  {
    int v108 = 0;
    goto LABEL_30;
  }
  int v108 = 0;
  unsigned int v7 = 0;
  long long v114 = (uint64_t *)(a2 + 32);
  os_unfair_lock_t v8 = v116 + 14;
  long long v113 = xmmword_19EC36240;
  v112 = (uint64_t *)0x800000019EC09240;
  do
  {
    if ((unint64_t)v7 <= v5) {
      unint64_t v9 = (void *)v5;
    }
    else {
      unint64_t v9 = v7;
    }
    long long v115 = v9;
    uint64_t v10 = v7;
    while (1)
    {
      if (v10 == v115)
      {
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        sub_19EBF7408();
        __break(1u);
        goto LABEL_90;
      }
      unsigned int v7 = (void *)((char *)v10 + 1);
      unint64_t v11 = v114[(void)v10];
      if (!*(void *)&v116[4]._os_unfair_lock_opaque) {
        goto LABEL_15;
      }
      uint64_t v12 = sub_19EBF7468();
      uint64_t v13 = -1 << LOBYTE(v116[8]._os_unfair_lock_opaque);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)((char *)&v8->_os_unfair_lock_opaque + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_15;
      }
      uint64_t v15 = *(void *)&v116[12]._os_unfair_lock_opaque;
      if (*(void **)(v15 + 8 * v14) != v10) {
        break;
      }
LABEL_20:
      unint64_t v18 = v5;
      unint64_t v19 = v6[2];
      unint64_t v20 = v6[3];
      unint64_t v21 = v6;
      swift_retain_n();
      if (v19 >= v20 >> 1) {
        unint64_t v21 = sub_19E607130((void *)(v20 > 1), v19 + 1, 1, v6);
      }
      v21[2] = v19 + 1;
      uint64_t v6 = v21;
      v21[v19 + 4] = v11;
      swift_release();
      uint64_t v10 = (void *)((char *)v10 + 1);
      unint64_t v5 = v18;
      if (v7 == (void *)v18) {
        goto LABEL_30;
      }
    }
    uint64_t v16 = ~v13;
    while (1)
    {
      unint64_t v14 = (v14 + 1) & v16;
      if (((*(void *)((char *)&v8->_os_unfair_lock_opaque + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        break;
      }
      if (*(void **)(v15 + 8 * v14) == v10) {
        goto LABEL_20;
      }
    }
LABEL_15:
    switch(v11 >> 62)
    {
      case 1uLL:
      case 3uLL:
        unint64_t v17 = (unsigned __int8 *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 32);
        break;
      case 2uLL:
        unint64_t v17 = (unsigned __int8 *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      default:
        unint64_t v17 = (unsigned __int8 *)(v11 + 48);
        break;
    }
    if (*v17 > 8u) {
      goto LABEL_20;
    }
    long long v115 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v113;
    *(void *)(inited + 32) = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = v113;
    uint64_t v24 = v23;
    int v109 = (uint64_t (*)(unint64_t, uint64_t))(v23 + 32);
    unint64_t v110 = inited + 32;
    *(void *)(v23 + 32) = swift_bridgeObjectRetain();
    *(_WORD *)(v24 + 40) = 10;
    v124[0] = 0xD000000000000011;
    v124[1] = v112;
    v124[2] = 1953718627;
    v124[3] = 0xE400000000000000;
    __int16 v125 = 10;
    swift_retain_n();
    uint64_t v25 = sub_19E678C60((uint64_t)v124, inited, v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_setDeallocating();
    swift_arrayDestroy();
    if (!*(void *)(v25 + 16)) {
      goto LABEL_87;
    }
    unint64_t v110 = v5;
    uint64_t v26 = *(void *)(v25 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v27 = v115[2];
    unint64_t v28 = v115[3];
    swift_retain();
    if (v27 >= v28 >> 1) {
      long long v115 = sub_19E607130((void *)(v28 > 1), v27 + 1, 1, v115);
    }
    uint64_t v6 = v115;
    v115[2] = v27 + 1;
    v6[v27 + 4] = v26;
    swift_release();
    swift_release();
    int v108 = 1;
    unint64_t v5 = v110;
  }
  while (v7 != (void *)v110);
LABEL_30:
  unint64_t v118 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v29 = (uint64_t *)v6[2];
  long long v115 = v6;
  if (v29)
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = 0;
    unint64_t v31 = (void *)v118;
    long long v114 = v29;
    while (2)
    {
      unint64_t v32 = v6[(void)v30 + 4];
      unint64_t v30 = (os_unfair_lock_s *)((char *)v30 + 1);
      switch(v32 >> 62)
      {
        case 1uLL:
          uint64_t v34 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v33 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_37;
        case 2uLL:
          goto LABEL_33;
        case 3uLL:
          swift_retain();
          uint64_t v34 = sub_19E6C4398();
          uint64_t v33 = v35;
          if (v34) {
            goto LABEL_40;
          }
          goto LABEL_32;
        default:
          uint64_t v34 = *(void *)(v32 + 24);
          uint64_t v33 = *(void *)(v32 + 32);
LABEL_37:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v34)
          {
LABEL_32:
            swift_release();
            goto LABEL_33;
          }
LABEL_40:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(ObjectType, v33))
          {
            swift_unknownObjectRelease();
            swift_release();
            uint64_t v6 = v115;
            goto LABEL_33;
          }
          os_unfair_lock_t v116 = v30;
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(ObjectType, v33);
          uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 24);
          uint64_t v39 = v38(ObjectType, v33);
          if (v31[2])
          {
            unint64_t v40 = sub_19E6628BC(v39);
            if (v41)
            {
              uint64_t v42 = v31[7] + 16 * v40;
              *(void *)&long long v113 = v31;
              uint64_t v43 = *(void *)(v42 + 8);
              uint64_t v44 = swift_getObjectType();
              v112 = (uint64_t *)v37;
              int v109 = *(uint64_t (**)(unint64_t, uint64_t))(v43 + 32);
              unint64_t v110 = v44;
              swift_unknownObjectRetain();
              uint64_t v45 = v43;
              unint64_t v31 = (void *)v113;
              unint64_t v46 = v109(v110, v45);
              swift_unknownObjectRelease();
              if ((unint64_t)v112 < v46)
              {
                swift_unknownObjectRelease();
                goto LABEL_58;
              }
            }
          }
          uint64_t v47 = v38(ObjectType, v33);
          swift_unknownObjectRetain();
          uint64_t v48 = v31;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          long long v117 = v48;
          unint64_t v118 = 0x8000000000000000;
          unint64_t v51 = sub_19E6628BC(v47);
          uint64_t v52 = v48[2];
          BOOL v53 = (v50 & 1) == 0;
          uint64_t v54 = v52 + v53;
          if (__OFADD__(v52, v53)) {
            goto LABEL_85;
          }
          char v55 = v50;
          if (v48[3] >= v54)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              unint64_t v31 = v117;
              if (v50) {
                goto LABEL_53;
              }
            }
            else
            {
              sub_19E666758();
              unint64_t v31 = v117;
              if (v55) {
                goto LABEL_53;
              }
            }
          }
          else
          {
            sub_19E663F1C(v54, isUniquelyReferenced_nonNull_native);
            unint64_t v56 = sub_19E6628BC(v47);
            if ((v55 & 1) != (v57 & 1)) {
              goto LABEL_89;
            }
            unint64_t v51 = v56;
            unint64_t v31 = v117;
            if (v55)
            {
LABEL_53:
              uint64_t v58 = (uint64_t *)(v31[7] + 16 * v51);
              swift_unknownObjectRelease();
              *uint64_t v58 = v34;
              v58[1] = v33;
              goto LABEL_57;
            }
          }
          v31[(v51 >> 6) + 8] |= 1 << v51;
          *(void *)(v31[6] + 8 * v51) = v47;
          char v59 = (uint64_t *)(v31[7] + 16 * v51);
          uint64_t *v59 = v34;
          v59[1] = v33;
          uint64_t v60 = v31[2];
          BOOL v61 = __OFADD__(v60, 1);
          uint64_t v62 = v60 + 1;
          if (v61) {
            goto LABEL_86;
          }
          void v31[2] = v62;
LABEL_57:
          unint64_t v118 = (unint64_t)v31;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_58:
          swift_release();
          uint64_t v29 = v114;
          uint64_t v6 = v115;
          unint64_t v30 = v116;
LABEL_33:
          if (v29 != (uint64_t *)v30) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  uint64_t v63 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_19E5DE088(v63);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = v111;
    uint64_t v66 = *(os_unfair_lock_s **)(*(void *)(v111 + 16) + 40);
    uint64_t v67 = (uint64_t *)&v66[4];
    uint64_t v68 = v66 + 6;
    os_unfair_lock_lock(v66 + 6);
    long long v114 = v67;
    sub_19E68C444((uint64_t)v67, (uint64_t *)&v118);
    os_unfair_lock_t v116 = v68;
    os_unfair_lock_unlock(v68);
    if (v118)
    {
      uint64_t v69 = *(void *)(v118 + 64);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v69 + 24));
      sub_19E68C460((uint64_t *)(v69 + 16), (uint64_t *)&v118);
      os_unfair_lock_unlock((os_unfair_lock_t)(v69 + 24));
      unint64_t v70 = v118;
      uint64_t v71 = swift_release();
      MEMORY[0x1F4188790](v71);
      uint64_t v104 = v111;
      unint64_t v105 = v70;
      *(void *)&long long v113 = v70;
      uint64_t v72 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D698, (uint64_t)&v103, v107);
      uint64_t v73 = swift_allocObject();
      *(unsigned char *)(v73 + 16) = v106;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v74 = sub_19E69E1D8((uint64_t)v6);
      uint64_t v75 = v72;
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_19E69E488(v72);
      swift_bridgeObjectRelease();
      type metadata accessor for BNNSComputeStream.ComputeFunction();
      uint64_t v77 = (void *)swift_allocObject();
      _OWORD v77[2] = v74;
      void v77[3] = v76;
      uint64_t v78 = v113;
      v77[4] = v64;
      v77[5] = v78;
      v77[6] = sub_19E68D2EC;
      v77[7] = v73;
      __swift_project_boxed_opaque_existential_1((void *)(v65 + 24), *(void *)(v65 + 48));
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v77);
      swift_release();
      swift_release();
      uint64_t v79 = v116;
      os_unfair_lock_lock(v116);
      sub_19E68C49C(v114);
      os_unfair_lock_unlock(v79);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_64;
    }
LABEL_90:
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1 == 1)
    {
      unint64_t v118 = 0;
      unint64_t v119 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    LODWORD(v105) = 0;
    uint64_t v104 = 116;
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E6858BCLL);
  }
  swift_retain();
  sub_19E68C21C(v107, 0);
  uint64_t v75 = v80;
  swift_release();
  uint64_t v81 = swift_allocObject();
  *(unsigned char *)(v81 + 16) = v106;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v82 = sub_19E69E1D8((uint64_t)v115);
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_19E69E488(v75);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t v84 = (void *)swift_initStackObject();
  _OWORD v84[2] = v82;
  void v84[3] = v83;
  uint64_t v84[4] = v64;
  v84[5] = 0;
  v84[6] = sub_19E68D670;
  v84[7] = v81;
  sub_19E6868FC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_64:
  swift_release();
  if ((v108 & 1) == 0)
  {
    os_unfair_lock_t v86 = (os_unfair_lock_t)v75;
    goto LABEL_82;
  }
  unint64_t v85 = *(void *)(v75 + 16);
  os_unfair_lock_t v86 = (os_unfair_lock_t)sub_19E607130(0, v85, 0, MEMORY[0x1E4FBC860]);
  if (!v85) {
    goto LABEL_81;
  }
  if (v85 > *(void *)(v107 + 16)) {
    goto LABEL_88;
  }
  uint64_t v87 = 0;
  uint64_t v88 = (char *)(v107 + 41);
  long long v113 = xmmword_19EC36240;
  int v109 = (uint64_t (*)(unint64_t, uint64_t))v75;
  unint64_t v110 = 0x800000019EC09240;
  v112 = (uint64_t *)v85;
  do
  {
    os_unfair_lock_t v116 = v86;
    uint64_t v89 = v75 + 8 * (void)v87;
    uint64_t v90 = (uint64_t *)((char *)v87 + 1);
    unint64_t v91 = *(void *)(v89 + 32);
    uint64_t v92 = *(void *)(v88 - 9);
    int v93 = *(v88 - 1);
    char v94 = *v88;
    switch(v91 >> 62)
    {
      case 1uLL:
      case 3uLL:
        uint64_t v95 = (unsigned __int8 *)((v91 & 0x3FFFFFFFFFFFFFFFLL) + 32);
        break;
      case 2uLL:
        uint64_t v95 = (unsigned __int8 *)((v91 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      default:
        uint64_t v95 = (unsigned __int8 *)(v91 + 48);
        break;
    }
    long long v114 = v90;
    if (*v95 == v93)
    {
      swift_retain_n();
      unint64_t v96 = v91;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
      uint64_t v97 = swift_initStackObject();
      *(_OWORD *)(v97 + 16) = v113;
      *(void *)(v97 + 32) = v91;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
      uint64_t v98 = swift_initStackObject();
      *(_OWORD *)(v98 + 16) = v113;
      *(void *)(v98 + 32) = v92;
      *(unsigned char *)(v98 + 40) = v93;
      *(unsigned char *)(v98 + 41) = v94;
      unint64_t v118 = 0xD000000000000011;
      unint64_t v119 = v110;
      uint64_t v120 = 1953718627;
      unint64_t v121 = 0xE400000000000000;
      char v122 = v93;
      char v123 = v94;
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_19E678C60((uint64_t)&v118, v97, v98);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_setDeallocating();
      swift_arrayDestroy();
      if (!*(void *)(v99 + 16)) {
        goto LABEL_84;
      }
      unint64_t v96 = *(void *)(v99 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v75 = (uint64_t)v109;
    }
    os_unfair_lock_t v86 = v116;
    unint64_t v100 = *(void *)&v116[4]._os_unfair_lock_opaque;
    unint64_t v101 = *(void *)&v116[6]._os_unfair_lock_opaque;
    swift_retain();
    if (v100 >= v101 >> 1) {
      os_unfair_lock_t v86 = (os_unfair_lock_t)sub_19E607130((void *)(v101 > 1), v100 + 1, 1, v86);
    }
    *(void *)&v86[4]._os_unfair_lock_opaque = v100 + 1;
    *(void *)&v86[2 * v100 + 8]._os_unfair_lock_opaque = v96;
    swift_release();
    swift_release();
    v88 += 16;
    uint64_t v87 = v114;
  }
  while (v112 != v114);
LABEL_81:
  swift_bridgeObjectRelease();
LABEL_82:
  swift_bridgeObjectRelease();
  return v86;
}

os_unfair_lock_t sub_19E6858FC(int a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4)
{
  uint64_t v107 = a4;
  os_unfair_lock_t v116 = a3;
  int v106 = a1;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_19E607130(0, v5, 0, MEMORY[0x1E4FBC860]);
  if (!v5)
  {
    int v108 = 0;
    goto LABEL_30;
  }
  int v108 = 0;
  unsigned int v7 = 0;
  long long v114 = (uint64_t *)(a2 + 32);
  os_unfair_lock_t v8 = v116 + 14;
  long long v113 = xmmword_19EC36240;
  v112 = (uint64_t *)0x800000019EC09240;
  do
  {
    if ((unint64_t)v7 <= v5) {
      unint64_t v9 = (void *)v5;
    }
    else {
      unint64_t v9 = v7;
    }
    long long v115 = v9;
    uint64_t v10 = v7;
    while (1)
    {
      if (v10 == v115)
      {
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        sub_19EBF7408();
        __break(1u);
        goto LABEL_90;
      }
      unsigned int v7 = (void *)((char *)v10 + 1);
      unint64_t v11 = v114[(void)v10];
      if (!*(void *)&v116[4]._os_unfair_lock_opaque) {
        goto LABEL_15;
      }
      uint64_t v12 = sub_19EBF7468();
      uint64_t v13 = -1 << LOBYTE(v116[8]._os_unfair_lock_opaque);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)((char *)&v8->_os_unfair_lock_opaque + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_15;
      }
      uint64_t v15 = *(void *)&v116[12]._os_unfair_lock_opaque;
      if (*(void **)(v15 + 8 * v14) != v10) {
        break;
      }
LABEL_20:
      unint64_t v18 = v5;
      unint64_t v19 = v6[2];
      unint64_t v20 = v6[3];
      unint64_t v21 = v6;
      swift_retain_n();
      if (v19 >= v20 >> 1) {
        unint64_t v21 = sub_19E607130((void *)(v20 > 1), v19 + 1, 1, v6);
      }
      v21[2] = v19 + 1;
      uint64_t v6 = v21;
      v21[v19 + 4] = v11;
      swift_release();
      uint64_t v10 = (void *)((char *)v10 + 1);
      unint64_t v5 = v18;
      if (v7 == (void *)v18) {
        goto LABEL_30;
      }
    }
    uint64_t v16 = ~v13;
    while (1)
    {
      unint64_t v14 = (v14 + 1) & v16;
      if (((*(void *)((char *)&v8->_os_unfair_lock_opaque + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        break;
      }
      if (*(void **)(v15 + 8 * v14) == v10) {
        goto LABEL_20;
      }
    }
LABEL_15:
    switch(v11 >> 62)
    {
      case 1uLL:
      case 3uLL:
        unint64_t v17 = (unsigned __int8 *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 32);
        break;
      case 2uLL:
        unint64_t v17 = (unsigned __int8 *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      default:
        unint64_t v17 = (unsigned __int8 *)(v11 + 48);
        break;
    }
    if (*v17 > 8u) {
      goto LABEL_20;
    }
    long long v115 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v113;
    *(void *)(inited + 32) = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = v113;
    uint64_t v24 = v23;
    int v109 = (uint64_t (*)(unint64_t, uint64_t))(v23 + 32);
    unint64_t v110 = inited + 32;
    *(void *)(v23 + 32) = swift_bridgeObjectRetain();
    *(_WORD *)(v24 + 40) = 10;
    v124[0] = 0xD000000000000011;
    v124[1] = v112;
    v124[2] = 1953718627;
    v124[3] = 0xE400000000000000;
    __int16 v125 = 10;
    swift_retain_n();
    uint64_t v25 = sub_19E678C60((uint64_t)v124, inited, v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_setDeallocating();
    swift_arrayDestroy();
    if (!*(void *)(v25 + 16)) {
      goto LABEL_87;
    }
    unint64_t v110 = v5;
    uint64_t v26 = *(void *)(v25 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v27 = v115[2];
    unint64_t v28 = v115[3];
    swift_retain();
    if (v27 >= v28 >> 1) {
      long long v115 = sub_19E607130((void *)(v28 > 1), v27 + 1, 1, v115);
    }
    uint64_t v6 = v115;
    v115[2] = v27 + 1;
    v6[v27 + 4] = v26;
    swift_release();
    swift_release();
    int v108 = 1;
    unint64_t v5 = v110;
  }
  while (v7 != (void *)v110);
LABEL_30:
  unint64_t v118 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v29 = (uint64_t *)v6[2];
  long long v115 = v6;
  if (v29)
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = 0;
    unint64_t v31 = (void *)v118;
    long long v114 = v29;
    while (2)
    {
      unint64_t v32 = v6[(void)v30 + 4];
      unint64_t v30 = (os_unfair_lock_s *)((char *)v30 + 1);
      switch(v32 >> 62)
      {
        case 1uLL:
          uint64_t v34 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v33 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_37;
        case 2uLL:
          goto LABEL_33;
        case 3uLL:
          swift_retain();
          uint64_t v34 = sub_19E6C4398();
          uint64_t v33 = v35;
          if (v34) {
            goto LABEL_40;
          }
          goto LABEL_32;
        default:
          uint64_t v34 = *(void *)(v32 + 24);
          uint64_t v33 = *(void *)(v32 + 32);
LABEL_37:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v34)
          {
LABEL_32:
            swift_release();
            goto LABEL_33;
          }
LABEL_40:
          uint64_t ObjectType = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(ObjectType, v33))
          {
            swift_unknownObjectRelease();
            swift_release();
            uint64_t v6 = v115;
            goto LABEL_33;
          }
          os_unfair_lock_t v116 = v30;
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(ObjectType, v33);
          uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 24);
          uint64_t v39 = v38(ObjectType, v33);
          if (v31[2])
          {
            unint64_t v40 = sub_19E6628BC(v39);
            if (v41)
            {
              uint64_t v42 = v31[7] + 16 * v40;
              *(void *)&long long v113 = v31;
              uint64_t v43 = *(void *)(v42 + 8);
              uint64_t v44 = swift_getObjectType();
              v112 = (uint64_t *)v37;
              int v109 = *(uint64_t (**)(unint64_t, uint64_t))(v43 + 32);
              unint64_t v110 = v44;
              swift_unknownObjectRetain();
              uint64_t v45 = v43;
              unint64_t v31 = (void *)v113;
              unint64_t v46 = v109(v110, v45);
              swift_unknownObjectRelease();
              if ((unint64_t)v112 < v46)
              {
                swift_unknownObjectRelease();
                goto LABEL_58;
              }
            }
          }
          uint64_t v47 = v38(ObjectType, v33);
          swift_unknownObjectRetain();
          uint64_t v48 = v31;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          long long v117 = v48;
          unint64_t v118 = 0x8000000000000000;
          unint64_t v51 = sub_19E6628BC(v47);
          uint64_t v52 = v48[2];
          BOOL v53 = (v50 & 1) == 0;
          uint64_t v54 = v52 + v53;
          if (__OFADD__(v52, v53)) {
            goto LABEL_85;
          }
          char v55 = v50;
          if (v48[3] >= v54)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              unint64_t v31 = v117;
              if (v50) {
                goto LABEL_53;
              }
            }
            else
            {
              sub_19E666758();
              unint64_t v31 = v117;
              if (v55) {
                goto LABEL_53;
              }
            }
          }
          else
          {
            sub_19E663F1C(v54, isUniquelyReferenced_nonNull_native);
            unint64_t v56 = sub_19E6628BC(v47);
            if ((v55 & 1) != (v57 & 1)) {
              goto LABEL_89;
            }
            unint64_t v51 = v56;
            unint64_t v31 = v117;
            if (v55)
            {
LABEL_53:
              uint64_t v58 = (uint64_t *)(v31[7] + 16 * v51);
              swift_unknownObjectRelease();
              *uint64_t v58 = v34;
              v58[1] = v33;
              goto LABEL_57;
            }
          }
          v31[(v51 >> 6) + 8] |= 1 << v51;
          *(void *)(v31[6] + 8 * v51) = v47;
          char v59 = (uint64_t *)(v31[7] + 16 * v51);
          uint64_t *v59 = v34;
          v59[1] = v33;
          uint64_t v60 = v31[2];
          BOOL v61 = __OFADD__(v60, 1);
          uint64_t v62 = v60 + 1;
          if (v61) {
            goto LABEL_86;
          }
          void v31[2] = v62;
LABEL_57:
          unint64_t v118 = (unint64_t)v31;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_58:
          swift_release();
          uint64_t v29 = v114;
          uint64_t v6 = v115;
          unint64_t v30 = v116;
LABEL_33:
          if (v29 != (uint64_t *)v30) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  uint64_t v63 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_19E5DE088(v63);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = v111;
    uint64_t v66 = *(os_unfair_lock_s **)(*(void *)(v111 + 16) + 40);
    uint64_t v67 = (uint64_t *)&v66[4];
    uint64_t v68 = v66 + 6;
    os_unfair_lock_lock(v66 + 6);
    long long v114 = v67;
    sub_19E68C444((uint64_t)v67, (uint64_t *)&v118);
    os_unfair_lock_t v116 = v68;
    os_unfair_lock_unlock(v68);
    if (v118)
    {
      uint64_t v69 = *(void *)(v118 + 64);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v69 + 24));
      sub_19E68C460((uint64_t *)(v69 + 16), (uint64_t *)&v118);
      os_unfair_lock_unlock((os_unfair_lock_t)(v69 + 24));
      unint64_t v70 = v118;
      uint64_t v71 = swift_release();
      MEMORY[0x1F4188790](v71);
      uint64_t v104 = v111;
      unint64_t v105 = v70;
      *(void *)&long long v113 = v70;
      uint64_t v72 = sub_19E676FF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19E68D698, (uint64_t)&v103, v107);
      uint64_t v73 = swift_allocObject();
      *(unsigned char *)(v73 + 16) = v106;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v74 = sub_19E69E1D8((uint64_t)v6);
      uint64_t v75 = v72;
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_19E69E488(v72);
      swift_bridgeObjectRelease();
      type metadata accessor for BNNSComputeStream.ComputeFunction();
      uint64_t v77 = (void *)swift_allocObject();
      _OWORD v77[2] = v74;
      void v77[3] = v76;
      uint64_t v78 = v113;
      v77[4] = v64;
      v77[5] = v78;
      v77[6] = sub_19E68D33C;
      v77[7] = v73;
      __swift_project_boxed_opaque_existential_1((void *)(v65 + 24), *(void *)(v65 + 48));
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19E688F0C((uint64_t)v77);
      swift_release();
      swift_release();
      uint64_t v79 = v116;
      os_unfair_lock_lock(v116);
      sub_19E68C49C(v114);
      os_unfair_lock_unlock(v79);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_64;
    }
LABEL_90:
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1 == 1)
    {
      unint64_t v118 = 0;
      unint64_t v119 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    LODWORD(v105) = 0;
    uint64_t v104 = 116;
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E686734);
  }
  swift_retain();
  sub_19E68C21C(v107, 0);
  uint64_t v75 = v80;
  swift_release();
  uint64_t v81 = swift_allocObject();
  *(unsigned char *)(v81 + 16) = v106;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v82 = sub_19E69E1D8((uint64_t)v115);
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_19E69E488(v75);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t v84 = (void *)swift_initStackObject();
  _OWORD v84[2] = v82;
  void v84[3] = v83;
  uint64_t v84[4] = v64;
  v84[5] = 0;
  v84[6] = sub_19E68D678;
  v84[7] = v81;
  sub_19E6868FC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_64:
  swift_release();
  if ((v108 & 1) == 0)
  {
    os_unfair_lock_t v86 = (os_unfair_lock_t)v75;
    goto LABEL_82;
  }
  unint64_t v85 = *(void *)(v75 + 16);
  os_unfair_lock_t v86 = (os_unfair_lock_t)sub_19E607130(0, v85, 0, MEMORY[0x1E4FBC860]);
  if (!v85) {
    goto LABEL_81;
  }
  if (v85 > *(void *)(v107 + 16)) {
    goto LABEL_88;
  }
  uint64_t v87 = 0;
  uint64_t v88 = (char *)(v107 + 41);
  long long v113 = xmmword_19EC36240;
  int v109 = (uint64_t (*)(unint64_t, uint64_t))v75;
  unint64_t v110 = 0x800000019EC09240;
  v112 = (uint64_t *)v85;
  do
  {
    os_unfair_lock_t v116 = v86;
    uint64_t v89 = v75 + 8 * (void)v87;
    uint64_t v90 = (uint64_t *)((char *)v87 + 1);
    unint64_t v91 = *(void *)(v89 + 32);
    uint64_t v92 = *(void *)(v88 - 9);
    int v93 = *(v88 - 1);
    char v94 = *v88;
    switch(v91 >> 62)
    {
      case 1uLL:
      case 3uLL:
        uint64_t v95 = (unsigned __int8 *)((v91 & 0x3FFFFFFFFFFFFFFFLL) + 32);
        break;
      case 2uLL:
        uint64_t v95 = (unsigned __int8 *)((v91 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      default:
        uint64_t v95 = (unsigned __int8 *)(v91 + 48);
        break;
    }
    long long v114 = v90;
    if (*v95 == v93)
    {
      swift_retain_n();
      unint64_t v96 = v91;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEB0);
      uint64_t v97 = swift_initStackObject();
      *(_OWORD *)(v97 + 16) = v113;
      *(void *)(v97 + 32) = v91;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B0);
      uint64_t v98 = swift_initStackObject();
      *(_OWORD *)(v98 + 16) = v113;
      *(void *)(v98 + 32) = v92;
      *(unsigned char *)(v98 + 40) = v93;
      *(unsigned char *)(v98 + 41) = v94;
      unint64_t v118 = 0xD000000000000011;
      unint64_t v119 = v110;
      uint64_t v120 = 1953718627;
      unint64_t v121 = 0xE400000000000000;
      char v122 = v93;
      char v123 = v94;
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_19E678C60((uint64_t)&v118, v97, v98);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_setDeallocating();
      swift_arrayDestroy();
      if (!*(void *)(v99 + 16)) {
        goto LABEL_84;
      }
      unint64_t v96 = *(void *)(v99 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v75 = (uint64_t)v109;
    }
    os_unfair_lock_t v86 = v116;
    unint64_t v100 = *(void *)&v116[4]._os_unfair_lock_opaque;
    unint64_t v101 = *(void *)&v116[6]._os_unfair_lock_opaque;
    swift_retain();
    if (v100 >= v101 >> 1) {
      os_unfair_lock_t v86 = (os_unfair_lock_t)sub_19E607130((void *)(v101 > 1), v100 + 1, 1, v86);
    }
    *(void *)&v86[4]._os_unfair_lock_opaque = v100 + 1;
    *(void *)&v86[2 * v100 + 8]._os_unfair_lock_opaque = v96;
    swift_release();
    swift_release();
    v88 += 16;
    uint64_t v87 = v114;
  }
  while (v112 != v114);
LABEL_81:
  swift_bridgeObjectRelease();
LABEL_82:
  swift_bridgeObjectRelease();
  return v86;
}

void sub_19E686774(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void **)a1;
  unsigned int v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 <= 8) {
    int v8 = 10;
  }
  else {
    int v8 = *(unsigned __int8 *)(a1 + 8);
  }
  int v9 = (v7 > 8) & *(unsigned char *)(a1 + 9);
  uint64_t v10 = (void *)MEMORY[0x19F3C1A40]();
  if (qword_1E945BB88 != -1) {
    swift_once();
  }
  unint64_t v11 = (void *)(qword_1E945D0B0 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
  if (v9) {
    int v13 = 256;
  }
  else {
    int v13 = 0;
  }
  sub_19E694038(v11, v6, v13 | v8, 0, 1, &v16);
  if (v3)
  {
    os_unfair_lock_unlock(v12);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v12);
    uint64_t v14 = v16;
    type metadata accessor for IOSurfaceStorage();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 32) = v8;
    *(unsigned char *)(v15 + 33) = v9;
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = v6;
    if (a2)
    {
      *(void *)(v15 + 40) = a2;
      *(void *)(v15 + 48) = &off_1EF0C8480;
    }
    else
    {
      *(void *)(v15 + 40) = 0;
      *(void *)(v15 + 48) = 0;
    }
    *(void *)(v15 + 56) = sub_19E683340;
    *(void *)(v15 + 64) = 0;
    *a3 = v15 | 0x4000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

void sub_19E6868FC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D5A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  unint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  int v9 = (unint64_t *)((char *)&v91 - v8);
  char v94 = v0;
  uint64_t v10 = v0[2];
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v97 = v12;
  unint64_t v98 = v7;
  if (v11)
  {
    v110[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v13 = *((unsigned __int8 *)v5 + 80);
    uint64_t v93 = v10;
    uint64_t v14 = v10 + ((v13 + 32) & ~v13);
    uint64_t v15 = v5[9];
    uint64_t v95 = v5;
    uint64_t v96 = v15;
    do
    {
      sub_19E669588(v14, (uint64_t)v9, &qword_1E945CEE0);
      unint64_t v16 = *v9;
      uint64_t v17 = *(int *)(v4 + 48);
      unint64_t v18 = (char *)v97 + v17;
      unint64_t v19 = (char *)v9 + v17;
      unint64_t *v97 = *v9;
      uint64_t v20 = sub_19EBF6188();
      uint64_t v21 = *(void *)(v20 - 8);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v3, v18, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v3, 0, 1, v20);
      uint64_t v4 = v98;
      sub_19E6C3324((uint64_t)v3, v16);
      sub_19E68D51C((uint64_t)v3, &qword_1E945D5A0);
      sub_19E68D51C((uint64_t)v9, &qword_1E945CEE0);
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      v14 += v96;
      --v11;
    }
    while (v11);
    unint64_t v22 = v110[0];
    swift_bridgeObjectRelease();
    unint64_t v5 = v95;
  }
  else
  {
    unint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v94[3];
  uint64_t v24 = *(void *)(v23 + 16);
  unint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v96 = v22;
  if (v24)
  {
    v110[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v26 = *((unsigned __int8 *)v5 + 80);
    uint64_t v93 = v23;
    uint64_t v27 = v23 + ((v26 + 32) & ~v26);
    uint64_t v95 = (void *)v5[9];
    do
    {
      sub_19E669588(v27, (uint64_t)v9, &qword_1E945CEE0);
      unint64_t v28 = *v9;
      uint64_t v29 = *(int *)(v4 + 48);
      unint64_t v30 = (char *)v97 + v29;
      unint64_t v31 = (char *)v9 + v29;
      unint64_t *v97 = *v9;
      uint64_t v32 = sub_19EBF6188();
      uint64_t v33 = *(void *)(v32 - 8);
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v3, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v3, 0, 1, v32);
      sub_19E6C3324((uint64_t)v3, v28);
      sub_19E68D51C((uint64_t)v3, &qword_1E945D5A0);
      sub_19E68D51C((uint64_t)v9, &qword_1E945CEE0);
      sub_19EBF70A8();
      sub_19EBF7108();
      uint64_t v4 = v98;
      sub_19EBF7118();
      sub_19EBF70B8();
      v27 += (uint64_t)v95;
      --v24;
    }
    while (v24);
    unint64_t v25 = v110[0];
    swift_bridgeObjectRelease();
    unint64_t v22 = v96;
  }
  uint64_t v34 = v94[7];
  uint64_t v95 = (void *)v94[6];
  uint64_t v93 = v34;
  uint64_t v97 = (unint64_t *)(v22 >> 62);
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v36 = MEMORY[0x1E4FBC860];
  if (v35)
  {
    uint64_t v111 = MEMORY[0x1E4FBC860];
    sub_19E66F7E8(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
    {
      __break(1u);
      goto LABEL_66;
    }
    unint64_t v98 = v25;
    uint64_t v37 = 0;
    unint64_t v38 = v22 & 0xC000000000000001;
    uint64_t v36 = v111;
    do
    {
      if (v38)
      {
        uint64_t v39 = MEMORY[0x19F3BF970](v37, v22);
      }
      else
      {
        uint64_t v39 = *(void *)(v22 + 8 * v37 + 32);
        swift_retain();
      }
      sub_19E5E7C14(v39 + 16, (uint64_t)v110, (uint64_t *)&unk_1E945D5B0);
      swift_release();
      uint64_t v111 = v36;
      unint64_t v41 = *(void *)(v36 + 16);
      unint64_t v40 = *(void *)(v36 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_19E66F7E8(v40 > 1, v41 + 1, 1);
        uint64_t v36 = v111;
      }
      ++v37;
      sub_19E5E7C14((uint64_t)v110, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
      *(void *)(v36 + 16) = v41 + 1;
      uint64_t v42 = (_OWORD *)(v36 + 176 * v41);
      long long v44 = v100;
      long long v43 = v101;
      v42[2] = v99;
      v42[3] = v44;
      v42[4] = v43;
      long long v45 = v105;
      long long v47 = v102;
      long long v46 = v103;
      v42[7] = v104;
      v42[8] = v45;
      v42[5] = v47;
      v42[6] = v46;
      long long v48 = v109;
      long long v50 = v106;
      long long v49 = v107;
      v42[11] = v108;
      v42[12] = v48;
      v42[9] = v50;
      v42[10] = v49;
      unint64_t v22 = v96;
    }
    while (v35 != v37);
    unint64_t v25 = v98;
  }
  unint64_t v51 = v25 >> 62;
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v53 = MEMORY[0x1E4FBC860];
  if (!v52) {
    goto LABEL_34;
  }
  uint64_t v111 = MEMORY[0x1E4FBC860];
  sub_19E66F7E8(0, v52 & ~(v52 >> 63), 0);
  if (v52 < 0)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  unint64_t v92 = v25 >> 62;
  unint64_t v54 = v25;
  uint64_t v55 = 0;
  unint64_t v56 = v54;
  unint64_t v98 = v54 & 0xC000000000000001;
  uint64_t v53 = v111;
  do
  {
    if (v98)
    {
      uint64_t v57 = MEMORY[0x19F3BF970](v55, v56);
    }
    else
    {
      uint64_t v57 = *(void *)(v56 + 8 * v55 + 32);
      swift_retain();
    }
    sub_19E5E7C14(v57 + 16, (uint64_t)v110, (uint64_t *)&unk_1E945D5B0);
    swift_release();
    uint64_t v111 = v53;
    unint64_t v59 = *(void *)(v53 + 16);
    unint64_t v58 = *(void *)(v53 + 24);
    if (v59 >= v58 >> 1)
    {
      sub_19E66F7E8(v58 > 1, v59 + 1, 1);
      uint64_t v53 = v111;
    }
    ++v55;
    sub_19E5E7C14((uint64_t)v110, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
    *(void *)(v53 + 16) = v59 + 1;
    uint64_t v60 = (_OWORD *)(v53 + 176 * v59);
    long long v62 = v100;
    long long v61 = v101;
    v60[2] = v99;
    v60[3] = v62;
    v60[4] = v61;
    long long v63 = v105;
    long long v65 = v102;
    long long v64 = v103;
    v60[7] = v104;
    v60[8] = v63;
    v60[5] = v65;
    v60[6] = v64;
    long long v66 = v109;
    long long v68 = v106;
    long long v67 = v107;
    v60[11] = v108;
    v60[12] = v66;
    v60[9] = v68;
    v60[10] = v67;
  }
  while (v52 != v55);
  unint64_t v25 = v56;
  unint64_t v22 = v96;
  unint64_t v51 = v92;
LABEL_34:
  ((void (*)(uint64_t, uint64_t))v95)(v36, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v97)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_19EBF7228();
    if (!v69) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v69 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v69) {
      goto LABEL_47;
    }
  }
  double v70 = sub_19E68C4B8((uint64_t)v110);
  if (v69 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    uint64_t v71 = MEMORY[0x19F3BF970](0, v22, v70) + 16;
    sub_19E5E7C14(v71, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
    sub_19E5E7C14((uint64_t)v110, v71, (uint64_t *)&unk_1E945D5B0);
    sub_19E68C4E0((uint64_t *)&v99);
    swift_unknownObjectRelease();
    if (v69 != 1)
    {
      uint64_t v72 = 1;
      do
      {
        uint64_t v73 = MEMORY[0x19F3BF970](v72++, v22);
        uint64_t v74 = v73 + 16;
        sub_19E5E7C14(v73 + 16, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)v110, v74, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0((uint64_t *)&v99);
        swift_unknownObjectRelease();
      }
      while (v69 != v72);
    }
  }
  else
  {
    uint64_t v75 = *(void *)(v22 + 32) + 16;
    sub_19E5E7C14(v75, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
    sub_19E5E7C14((uint64_t)v110, v75, (uint64_t *)&unk_1E945D5B0);
    sub_19E68C4E0((uint64_t *)&v99);
    uint64_t v76 = v69 - 1;
    if (v69 != 1)
    {
      uint64_t v77 = (uint64_t *)(v22 + 40);
      do
      {
        uint64_t v78 = *v77++;
        sub_19E5E7C14(v78 + 16, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)v110, v78 + 16, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0((uint64_t *)&v99);
        --v76;
      }
      while (v76);
    }
  }
LABEL_47:
  swift_bridgeObjectRelease_n();
  if (v51)
  {
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_19EBF7228();
    if (!v79) {
      goto LABEL_60;
    }
    goto LABEL_51;
  }
  uint64_t v79 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v79)
  {
LABEL_51:
    double v80 = sub_19E68C4B8((uint64_t)v110);
    if (v79 >= 1)
    {
      if ((v25 & 0xC000000000000001) != 0)
      {
        uint64_t v81 = MEMORY[0x19F3BF970](0, v25, v80) + 16;
        sub_19E5E7C14(v81, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)v110, v81, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0((uint64_t *)&v99);
        swift_unknownObjectRelease();
        if (v79 != 1)
        {
          uint64_t v82 = 1;
          do
          {
            uint64_t v83 = MEMORY[0x19F3BF970](v82++, v25);
            uint64_t v84 = v83 + 16;
            sub_19E5E7C14(v83 + 16, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
            sub_19E5E7C14((uint64_t)v110, v84, (uint64_t *)&unk_1E945D5B0);
            sub_19E68C4E0((uint64_t *)&v99);
            swift_unknownObjectRelease();
          }
          while (v79 != v82);
        }
      }
      else
      {
        uint64_t v85 = *(void *)(v25 + 32) + 16;
        sub_19E5E7C14(v85, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)v110, v85, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0((uint64_t *)&v99);
        uint64_t v86 = v79 - 1;
        if (v79 != 1)
        {
          uint64_t v87 = (uint64_t *)(v25 + 40);
          do
          {
            uint64_t v88 = *v87++;
            sub_19E5E7C14(v88 + 16, (uint64_t)&v99, (uint64_t *)&unk_1E945D5B0);
            sub_19E5E7C14((uint64_t)v110, v88 + 16, (uint64_t *)&unk_1E945D5B0);
            sub_19E68C4E0((uint64_t *)&v99);
            --v86;
          }
          while (v86);
        }
      }
      goto LABEL_60;
    }
LABEL_68:
    __break(1u);
    return;
  }
LABEL_60:
  swift_bridgeObjectRelease_n();
  uint64_t v89 = v94[5];
  if (v89)
  {
    uint64_t v90 = *(void *)(v89 + 16);
    swift_unownedRetainStrong();
    objc_msgSend(*(id *)(v90 + 32), sel_setSignaledValue_, *(void *)(v89 + 24));
    swift_release();
  }
}

uint64_t sub_19E6873D4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D020);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v31 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D028);
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D030);
  uint64_t v6 = *(void *)(v30 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D038);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v28 - v15;
  uint64_t v32 = v0;
  swift_defaultActor_initialize();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D018);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  uint64_t v34 = v16;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBD028], v33);
  sub_19EBF6A98();
  sub_19E669588((uint64_t)v16, (uint64_t)v14, &qword_1E945D038);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v32+ OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_streamContinuation, v14, v17);
    uint64_t v21 = sub_19EBF6A38();
    uint64_t v22 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31, 1, 1, v21);
    uint64_t v24 = v29;
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v29, v10, v30);
    unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v24, v23);
    uint64_t v27 = sub_19E688B18(v22, (uint64_t)&unk_1E945D048, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v23);
    *(void *)(v20 + OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_task) = v27;
    sub_19E68D51C((uint64_t)v16, &qword_1E945D038);
    return v20;
  }
  return result;
}

uint64_t sub_19E687824(uint64_t a1, uint64_t a2)
{
  sub_19E68D51C(a2, &qword_1E945D038);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D018);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  unint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_19E6878F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D060);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19E6879B8, 0, 0);
}

uint64_t sub_19E6879B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D030);
  sub_19EBF6A78();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19E687A88;
  uint64_t v2 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_19E687A88()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E687B84, 0, 0);
}

uint64_t sub_19E687B84()
{
  uint64_t v1 = v0[2];
  v0[8] = v1;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    goto LABEL_5;
  }
  if (sub_19EBF6AB8())
  {
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    swift_release();
LABEL_5:
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19E687C98;
  return sub_19E687E48();
}

uint64_t sub_19E687C98()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E687D94, 0, 0);
}

uint64_t sub_19E687D94()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_19E687A88;
  uint64_t v2 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_19E687E48()
{
  v1[232] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D5A0);
  v1[233] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  v1[234] = v2;
  v1[235] = *(void *)(v2 - 8);
  v1[236] = swift_task_alloc();
  v1[237] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[238] = v3;
  void *v3 = v1;
  v3[1] = sub_19E687F78;
  return sub_19E689010();
}

uint64_t sub_19E687F78()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E688074, 0, 0);
}

void sub_19E688074()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[232];
  uint64_t v3 = v2[2];
  uint64_t v4 = *(void *)(v3 + 16);
  unint64_t v5 = MEMORY[0x1E4FBC860];
  long long v103 = v1;
  if (v4)
  {
    uint64_t v6 = v1[235];
    uint64_t v101 = v1[234];
    unint64_t v104 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v98 = *(void *)(v6 + 72);
    do
    {
      uint64_t v8 = (unint64_t *)v1[237];
      uint64_t v9 = (unint64_t *)v1[236];
      uint64_t v10 = v1[233];
      sub_19E669588(v7, (uint64_t)v8, &qword_1E945CEE0);
      unint64_t v11 = *v8;
      uint64_t v12 = *(int *)(v101 + 48);
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v8 + v12;
      *uint64_t v9 = *v8;
      uint64_t v15 = sub_19EBF6188();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      uint64_t v17 = v13;
      uint64_t v1 = v103;
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v10, v17, v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      sub_19E6C3324(v10, v11);
      sub_19E68D51C(v10, &qword_1E945D5A0);
      sub_19E68D51C((uint64_t)v8, &qword_1E945CEE0);
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      v7 += v98;
      --v4;
    }
    while (v4);
    unint64_t v5 = v104;
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)v103[232];
  }
  uint64_t v18 = v2[3];
  uint64_t v19 = *(void *)(v18 + 16);
  unint64_t v20 = MEMORY[0x1E4FBC860];
  unint64_t v102 = v5;
  if (v19)
  {
    uint64_t v21 = v1[235];
    uint64_t v99 = v1[234];
    unint64_t v105 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19EBF70D8();
    uint64_t v22 = v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v96 = *(void *)(v21 + 72);
    do
    {
      uint64_t v23 = (unint64_t *)v1[237];
      uint64_t v24 = (unint64_t *)v1[236];
      uint64_t v25 = v1[233];
      sub_19E669588(v22, (uint64_t)v23, &qword_1E945CEE0);
      unint64_t v26 = *v23;
      uint64_t v27 = *(int *)(v99 + 48);
      uint64_t v28 = (char *)v24 + v27;
      uint64_t v29 = (char *)v23 + v27;
      *uint64_t v24 = *v23;
      uint64_t v30 = sub_19EBF6188();
      uint64_t v31 = *(void *)(v30 - 8);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      uint64_t v32 = v28;
      uint64_t v1 = v103;
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v25, v32, v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v30);
      sub_19E6C3324(v25, v26);
      sub_19E68D51C(v25, &qword_1E945D5A0);
      sub_19E68D51C((uint64_t)v23, &qword_1E945CEE0);
      sub_19EBF70A8();
      sub_19EBF7108();
      sub_19EBF7118();
      sub_19EBF70B8();
      v22 += v96;
      --v19;
    }
    while (v19);
    unint64_t v20 = v105;
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)v103[232];
  }
  char v94 = (void (*)(uint64_t, uint64_t))v2[6];
  unint64_t v95 = v5 >> 62;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  unint64_t v100 = v20;
  if (v33)
  {
    uint64_t v106 = MEMORY[0x1E4FBC860];
    sub_19E66F7E8(0, v33 & ~(v33 >> 63), 0);
    if (v33 < 0)
    {
      __break(1u);
      goto LABEL_67;
    }
    uint64_t v35 = 0;
    uint64_t v36 = (uint64_t)(v1 + 2);
    uint64_t v37 = v1 + 25;
    unint64_t v38 = v5 & 0xC000000000000001;
    uint64_t v34 = v106;
    do
    {
      if (v38)
      {
        uint64_t v39 = MEMORY[0x19F3BF970](v35, v102);
      }
      else
      {
        uint64_t v39 = *(void *)(v102 + 8 * v35 + 32);
        swift_retain();
      }
      sub_19E5E7C14(v39 + 16, v36, (uint64_t *)&unk_1E945D5B0);
      swift_release();
      unint64_t v41 = *(void *)(v106 + 16);
      unint64_t v40 = *(void *)(v106 + 24);
      if (v41 >= v40 >> 1) {
        sub_19E66F7E8(v40 > 1, v41 + 1, 1);
      }
      ++v35;
      sub_19E5E7C14(v36, (uint64_t)v37, (uint64_t *)&unk_1E945D5B0);
      *(void *)(v106 + 16) = v41 + 1;
      uint64_t v42 = (_OWORD *)(v106 + 176 * v41);
      long long v44 = v37[1];
      long long v43 = v37[2];
      v42[2] = *v37;
      v42[3] = v44;
      v42[4] = v43;
      long long v45 = v37[6];
      long long v47 = v37[3];
      long long v46 = v37[4];
      v42[7] = v37[5];
      v42[8] = v45;
      v42[5] = v47;
      v42[6] = v46;
      long long v48 = v37[10];
      long long v50 = v37[7];
      long long v49 = v37[8];
      v42[11] = v37[9];
      v42[12] = v48;
      v42[9] = v50;
      v42[10] = v49;
    }
    while (v33 != v35);
    unint64_t v5 = v102;
    uint64_t v1 = v103;
    unint64_t v20 = v100;
  }
  unint64_t v93 = v20 >> 62;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v52 = MEMORY[0x1E4FBC860];
  if (!v51) {
    goto LABEL_33;
  }
  uint64_t v107 = MEMORY[0x1E4FBC860];
  sub_19E66F7E8(0, v51 & ~(v51 >> 63), 0);
  if (v51 < 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  unint64_t v53 = v20;
  uint64_t v54 = 0;
  uint64_t v55 = v1;
  uint64_t v56 = (uint64_t)(v1 + 48);
  uint64_t v57 = v55 + 71;
  unint64_t v97 = v53 & 0xC000000000000001;
  uint64_t v52 = v107;
  do
  {
    if (v97)
    {
      uint64_t v58 = MEMORY[0x19F3BF970](v54, v100);
    }
    else
    {
      uint64_t v58 = *(void *)(v100 + 8 * v54 + 32);
      swift_retain();
    }
    sub_19E5E7C14(v58 + 16, v56, (uint64_t *)&unk_1E945D5B0);
    swift_release();
    unint64_t v60 = *(void *)(v107 + 16);
    unint64_t v59 = *(void *)(v107 + 24);
    if (v60 >= v59 >> 1) {
      sub_19E66F7E8(v59 > 1, v60 + 1, 1);
    }
    ++v54;
    sub_19E5E7C14(v56, (uint64_t)v57, (uint64_t *)&unk_1E945D5B0);
    *(void *)(v107 + 16) = v60 + 1;
    long long v61 = (_OWORD *)(v107 + 176 * v60);
    long long v63 = *(_OWORD *)(v55 + 73);
    long long v62 = *(_OWORD *)(v55 + 75);
    v61[2] = *v57;
    v61[3] = v63;
    void v61[4] = v62;
    long long v64 = *(_OWORD *)(v55 + 83);
    long long v66 = *(_OWORD *)(v55 + 77);
    long long v65 = *(_OWORD *)(v55 + 79);
    v61[7] = *(_OWORD *)(v55 + 81);
    void v61[8] = v64;
    v61[5] = v66;
    v61[6] = v65;
    long long v67 = *(_OWORD *)(v55 + 91);
    long long v69 = *(_OWORD *)(v55 + 85);
    long long v68 = *(_OWORD *)(v55 + 87);
    v61[11] = *(_OWORD *)(v55 + 89);
    v61[12] = v67;
    v61[9] = v69;
    v61[10] = v68;
  }
  while (v51 != v54);
  unint64_t v5 = v102;
  uint64_t v1 = v103;
  unint64_t v20 = v100;
LABEL_33:
  v94(v34, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v95)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_19EBF7228();
    if (!v70) {
      goto LABEL_46;
    }
  }
  else
  {
    uint64_t v70 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v70) {
      goto LABEL_46;
    }
  }
  double v71 = sub_19E68C4B8((uint64_t)(v1 + 94));
  if (v70 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v72 = MEMORY[0x19F3BF970](0, v5, v71) + 16;
    sub_19E5E7C14(v72, (uint64_t)(v1 + 117), (uint64_t *)&unk_1E945D5B0);
    sub_19E5E7C14((uint64_t)(v1 + 94), v72, (uint64_t *)&unk_1E945D5B0);
    sub_19E68C4E0(v1 + 117);
    swift_unknownObjectRelease();
    if (v70 != 1)
    {
      uint64_t v73 = 1;
      do
      {
        uint64_t v74 = MEMORY[0x19F3BF970](v73++, v5);
        uint64_t v75 = v74 + 16;
        sub_19E5E7C14(v74 + 16, (uint64_t)(v1 + 117), (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)(v1 + 94), v75, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0(v1 + 117);
        swift_unknownObjectRelease();
      }
      while (v70 != v73);
    }
  }
  else
  {
    uint64_t v76 = *(void *)(v5 + 32) + 16;
    sub_19E5E7C14(v76, (uint64_t)(v1 + 209), (uint64_t *)&unk_1E945D5B0);
    sub_19E5E7C14((uint64_t)(v1 + 94), v76, (uint64_t *)&unk_1E945D5B0);
    sub_19E68C4E0(v1 + 209);
    uint64_t v77 = v70 - 1;
    if (v70 != 1)
    {
      uint64_t v78 = (uint64_t *)(v5 + 40);
      do
      {
        uint64_t v79 = *v78++;
        sub_19E5E7C14(v79 + 16, (uint64_t)(v1 + 209), (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)(v1 + 94), v79 + 16, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0(v1 + 209);
        --v77;
      }
      while (v77);
    }
  }
LABEL_46:
  swift_bridgeObjectRelease_n();
  if (!v93)
  {
    uint64_t v80 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v80) {
      goto LABEL_59;
    }
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_19EBF7228();
  if (v80)
  {
LABEL_50:
    double v81 = sub_19E68C4B8((uint64_t)(v1 + 140));
    if (v80 >= 1)
    {
      if ((v20 & 0xC000000000000001) != 0)
      {
        uint64_t v82 = MEMORY[0x19F3BF970](0, v20, v81) + 16;
        sub_19E5E7C14(v82, (uint64_t)(v1 + 163), (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)(v1 + 140), v82, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0(v1 + 163);
        swift_unknownObjectRelease();
        if (v80 != 1)
        {
          uint64_t v83 = 1;
          do
          {
            uint64_t v84 = MEMORY[0x19F3BF970](v83++, v20);
            uint64_t v85 = v84 + 16;
            sub_19E5E7C14(v84 + 16, (uint64_t)(v1 + 163), (uint64_t *)&unk_1E945D5B0);
            sub_19E5E7C14((uint64_t)(v1 + 140), v85, (uint64_t *)&unk_1E945D5B0);
            sub_19E68C4E0(v1 + 163);
            swift_unknownObjectRelease();
          }
          while (v80 != v83);
        }
      }
      else
      {
        uint64_t v86 = *(void *)(v20 + 32) + 16;
        sub_19E5E7C14(v86, (uint64_t)(v1 + 186), (uint64_t *)&unk_1E945D5B0);
        sub_19E5E7C14((uint64_t)(v1 + 140), v86, (uint64_t *)&unk_1E945D5B0);
        sub_19E68C4E0(v1 + 186);
        uint64_t v87 = v80 - 1;
        if (v80 != 1)
        {
          uint64_t v88 = (uint64_t *)(v20 + 40);
          do
          {
            uint64_t v89 = *v88++;
            sub_19E5E7C14(v89 + 16, (uint64_t)(v1 + 186), (uint64_t *)&unk_1E945D5B0);
            sub_19E5E7C14((uint64_t)(v1 + 140), v89 + 16, (uint64_t *)&unk_1E945D5B0);
            sub_19E68C4E0(v1 + 186);
            --v87;
          }
          while (v87);
        }
      }
      goto LABEL_59;
    }
LABEL_69:
    __break(1u);
    return;
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  uint64_t v90 = *(void *)(v1[232] + 40);
  if (v90)
  {
    uint64_t v91 = *(void *)(v90 + 16);
    swift_unownedRetainStrong();
    objc_msgSend(*(id *)(v91 + 32), sel_setSignaledValue_, *(void *)(v90 + 24));
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v92 = (void (*)(void))v1[1];
  v92();
}

uint64_t sub_19E688B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19EBF6A38();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19EBF6A28();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_19E68D51C(a1, &qword_1E945D020);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19EBF69F8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_19E688CC4()
{
  uint64_t v1 = v0;
  sub_19EBF6AA8();
  uint64_t v2 = v0
     + OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_streamContinuation;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D018);
  sub_19EBF6A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v1);
}

uint64_t sub_19E688D8C()
{
  return type metadata accessor for AsyncComputeFunctionScheduler();
}

uint64_t type metadata accessor for AsyncComputeFunctionScheduler()
{
  uint64_t result = qword_1E945CFF8;
  if (!qword_1E945CFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_19E688DE0()
{
  sub_19E688E88();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_19E688E88()
{
  if (!qword_1E945D008)
  {
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    unint64_t v0 = sub_19EBF6A68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E945D008);
    }
  }
}

uint64_t type metadata accessor for BNNSComputeStream.ComputeFunction()
{
  return self;
}

uint64_t sub_19E688F00()
{
  return v0;
}

uint64_t sub_19E688F0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D010);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D018);
  sub_19EBF6A48();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19E689010()
{
  v1[3] = v0;
  uint64_t v2 = sub_19EBF6558();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_19EBF6528();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19E689170, 0, 0);
}

uint64_t sub_19E689170()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_19E677548(v1);
  *(void *)(v0 + 120) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 128) = v3;
  if (!v3)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
    return v73();
  }
  uint64_t v4 = 0;
  *(_DWORD *)(v0 + 272) = *MEMORY[0x1E4FBD340];
  uint64_t v5 = &OBJC_IVAR___MLLoaderEvent__modelHash;
  while (2)
  {
    *(void *)(v0 + 136) = v4;
    unint64_t v6 = *(void *)(*(void *)(v0 + 120) + 8 * v4 + 32);
    *(void *)(v0 + 144) = v6;
    switch(v6 >> 62)
    {
      case 1uLL:
        uint64_t v7 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v8 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_8;
      case 2uLL:
        goto LABEL_4;
      case 3uLL:
        swift_retain_n();
        uint64_t v9 = sub_19E6C4398();
        uint64_t v8 = v10;
        swift_release();
        if (v9) {
          goto LABEL_11;
        }
        goto LABEL_3;
      default:
        uint64_t v7 = *(void *)(v6 + 24);
        uint64_t v8 = *(void *)(v6 + 32);
LABEL_8:
        swift_unknownObjectRetain();
        swift_retain();
        if (!v7) {
          goto LABEL_3;
        }
LABEL_11:
        uint64_t ObjectType = swift_getObjectType();
        char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(ObjectType, v8);
        swift_unknownObjectRelease();
        if (v12) {
          goto LABEL_3;
        }
        break;
    }
    switch(v6 >> 62)
    {
      case 0uLL:
        uint64_t v13 = *((void *)v5 + 362);
        swift_retain();
        if (v13 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_19EBF6548();
        *(void *)(v0 + 160) = __swift_project_value_buffer(v14, (uint64_t)qword_1E946A518);
        sub_19EBF6518();
        uint64_t v15 = sub_19EBF6538();
        os_signpost_type_t v16 = sub_19EBF6D78();
        if (sub_19EBF6E18())
        {
          uint64_t v17 = *(void *)(v0 + 104);
          uint64_t v19 = *(void *)(v0 + 64);
          uint64_t v18 = *(void *)(v0 + 72);
          unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
          v20(v17, *(void *)(v0 + 112), v19);
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v21 = 0;
          os_signpost_id_t v22 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v15, v16, v22, "GPU :: Data synchronization", "", v21, 2u);
          MEMORY[0x19F3C3580](v21, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
        }
        else
        {
          uint64_t v34 = *(void *)(v0 + 72);

          unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
        }
        uint64_t v35 = *(void *)(v0 + 104);
        uint64_t v36 = *(void *)(v0 + 112);
        uint64_t v38 = *(void *)(v0 + 64);
        uint64_t v37 = *(void *)(v0 + 72);
        *(void *)(v0 + 168) = v20;
        *(void *)(v0 + 176) = (v37 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v20(v35, v36, v38);
        sub_19EBF6588();
        swift_allocObject();
        *(void *)(v0 + 184) = sub_19EBF6578();
        uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        *(void *)(v0 + 192) = v39;
        *(void *)(v0 + 200) = (v37 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v39(v36, v38);
        if (*(void *)(v6 + 24))
        {
          uint64_t v76 = *(void *)(v6 + 32);
          uint64_t v77 = swift_getObjectType();
          uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v76 + 56) + **(int **)(v76 + 56));
          uint64_t v78 = (void *)swift_task_alloc();
          *(void *)(v0 + 208) = v78;
          *uint64_t v78 = v0;
          uint64_t v79 = sub_19E68A794;
          goto LABEL_45;
        }
        unint64_t v40 = sub_19EBF6538();
        sub_19EBF6568();
        os_signpost_type_t v41 = sub_19EBF6D68();
        if (sub_19EBF6E18())
        {
          int v42 = *(_DWORD *)(v0 + 272);
          uint64_t v43 = *(void *)(v0 + 56);
          uint64_t v45 = *(void *)(v0 + 32);
          uint64_t v44 = *(void *)(v0 + 40);
          swift_retain();
          sub_19EBF6598();
          swift_release();
          int v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v43, v45);
          long long v47 = "[Error] Interval already ended";
          if (v46 != v42)
          {
            (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
            long long v47 = "";
          }
          long long v48 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
          uint64_t v49 = *(void *)(v0 + 96);
          uint64_t v50 = *(void *)(v0 + 64);
          (*(void (**)(void, uint64_t, uint64_t))(v0 + 168))(*(void *)(v0 + 104), v49, v50);
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          os_signpost_id_t v52 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v40, v41, v52, "GPU :: Data synchronization", v47, v51, 2u);
          MEMORY[0x19F3C3580](v51, -1, -1);

          v48(v49, v50);
          unint64_t v53 = (void *)(v0 + 104);
          uint64_t v5 = &OBJC_IVAR___MLLoaderEvent__modelHash;
        }
        else
        {

          unint64_t v53 = (void *)(v0 + 96);
        }
        (*(void (**)(void, void))(v0 + 192))(*v53, *(void *)(v0 + 64));
        swift_release();
        swift_release();
        goto LABEL_3;
      case 1uLL:
        uint64_t v23 = v6 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v24 = *((void *)v5 + 362);
        swift_retain();
        if (v24 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_19EBF6548();
        *(void *)(v0 + 216) = __swift_project_value_buffer(v25, (uint64_t)qword_1E946A518);
        sub_19EBF6518();
        unint64_t v26 = sub_19EBF6538();
        os_signpost_type_t v27 = sub_19EBF6D78();
        if (sub_19EBF6E18())
        {
          uint64_t v28 = *(void *)(v0 + 104);
          uint64_t v30 = *(void *)(v0 + 64);
          uint64_t v29 = *(void *)(v0 + 72);
          uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
          v31(v28, *(void *)(v0 + 88), v30);
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v32 = 0;
          os_signpost_id_t v33 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v26, v27, v33, "CPU :: Data synchronization", "", v32, 2u);
          MEMORY[0x19F3C3580](v32, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
        }
        else
        {
          uint64_t v54 = *(void *)(v0 + 72);

          uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
        }
        uint64_t v55 = *(void *)(v0 + 104);
        uint64_t v56 = *(void *)(v0 + 88);
        uint64_t v58 = *(void *)(v0 + 64);
        uint64_t v57 = *(void *)(v0 + 72);
        *(void *)(v0 + 224) = v31;
        *(void *)(v0 + 232) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v31(v55, v56, v58);
        sub_19EBF6588();
        swift_allocObject();
        *(void *)(v0 + 240) = sub_19EBF6578();
        unint64_t v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
        *(void *)(v0 + 248) = v59;
        *(void *)(v0 + 256) = (v57 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v59(v56, v58);
        if (!*(void *)(v23 + 40))
        {
          unint64_t v60 = sub_19EBF6538();
          sub_19EBF6568();
          os_signpost_type_t v61 = sub_19EBF6D68();
          if (sub_19EBF6E18())
          {
            int v62 = *(_DWORD *)(v0 + 272);
            uint64_t v63 = *(void *)(v0 + 40);
            uint64_t v64 = *(void *)(v0 + 48);
            uint64_t v65 = *(void *)(v0 + 32);
            swift_retain();
            sub_19EBF6598();
            swift_release();
            long long v66 = "[Error] Interval already ended";
            if ((*(unsigned int (**)(uint64_t, uint64_t))(v63 + 88))(v64, v65) != v62)
            {
              (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
              long long v66 = "";
            }
            long long v67 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
            uint64_t v68 = *(void *)(v0 + 80);
            uint64_t v69 = *(void *)(v0 + 64);
            (*(void (**)(void, uint64_t, uint64_t))(v0 + 224))(*(void *)(v0 + 104), v68, v69);
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v70 = 0;
            os_signpost_id_t v71 = sub_19EBF6508();
            _os_signpost_emit_with_name_impl(&dword_19E58B000, v60, v61, v71, "CPU :: Data synchronization", v66, v70, 2u);
            MEMORY[0x19F3C3580](v70, -1, -1);

            v67(v68, v69);
            uint64_t v72 = (void *)(v0 + 104);
            uint64_t v5 = &OBJC_IVAR___MLLoaderEvent__modelHash;
          }
          else
          {

            uint64_t v72 = (void *)(v0 + 80);
          }
          (*(void (**)(void, void))(v0 + 248))(*v72, *(void *)(v0 + 64));
          swift_release();
          swift_release();
LABEL_3:
          swift_release();
          uint64_t v3 = *(void *)(v0 + 128);
          uint64_t v4 = *(void *)(v0 + 136);
LABEL_4:
          if (++v4 == v3) {
            goto LABEL_37;
          }
          continue;
        }
        uint64_t v76 = *(void *)(v23 + 48);
        uint64_t v77 = swift_getObjectType();
        uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v76 + 56) + **(int **)(v76 + 56));
        uint64_t v78 = (void *)swift_task_alloc();
        *(void *)(v0 + 264) = v78;
        *uint64_t v78 = v0;
        uint64_t v79 = sub_19E68B2B8;
LABEL_45:
        v78[1] = v79;
        return v80(v77, v76);
      case 2uLL:
        goto LABEL_3;
      case 3uLL:
        swift_retain();
        uint64_t v75 = (void *)swift_task_alloc();
        *(void *)(v0 + 152) = v75;
        void *v75 = v0;
        v75[1] = sub_19E689C00;
        return sub_19E6C55E4();
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_19E689C00()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E689CFC, 0, 0);
}

uint64_t sub_19E689CFC()
{
  swift_release();
  uint64_t v1 = (void *)(v0 + 104);
  uint64_t v2 = (void *)(v0 + 80);
  uint64_t v3 = &OBJC_IVAR___MLLoaderEvent__modelHash;
  uint64_t v4 = qword_1E946A518;
  do
  {
LABEL_2:
    while (1)
    {
      swift_release();
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 128) - 1;
      do
      {
        if (v6 == v5)
        {
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
          return v82();
        }
        uint64_t v7 = *(void *)(v0 + 120) + 8 * v5++;
        *(void *)(v0 + 136) = v5;
        unint64_t v8 = *(void *)(v7 + 40);
        *(void *)(v0 + 144) = v8;
        unint64_t v9 = v8 >> 62;
      }
      while (v8 >> 62 == 2);
      if (!v9) {
        break;
      }
      if (v9 == 1)
      {
        uint64_t v10 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v11 = *(void *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_9;
      }
      swift_retain_n();
      uint64_t v14 = sub_19E6C4398();
      uint64_t v11 = v15;
      swift_release();
      if (v14) {
        goto LABEL_10;
      }
    }
    uint64_t v10 = *(void *)(v8 + 24);
    uint64_t v11 = *(void *)(v8 + 32);
LABEL_9:
    swift_unknownObjectRetain();
    swift_retain();
  }
  while (!v10);
LABEL_10:
  uint64_t ObjectType = swift_getObjectType();
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11);
  swift_unknownObjectRelease();
  if (v13) {
    goto LABEL_2;
  }
  switch((int)v9)
  {
    case 1:
      uint64_t v28 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v29 = *((void *)v3 + 362);
      swift_retain();
      if (v29 != -1) {
        swift_once();
      }
      unint64_t v95 = v1;
      uint64_t v30 = sub_19EBF6548();
      *(void *)(v0 + 216) = __swift_project_value_buffer(v30, (uint64_t)v4);
      sub_19EBF6518();
      uint64_t v31 = sub_19EBF6538();
      os_signpost_type_t v32 = sub_19EBF6D78();
      if (sub_19EBF6E18())
      {
        uint64_t v33 = *(void *)(v0 + 104);
        uint64_t v34 = *(void *)(v0 + 72);
        uint64_t v91 = *(void *)(v0 + 64);
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
        ((void (*)(uint64_t, void))v35)(v33, *(void *)(v0 + 88));
        uint64_t v36 = v28;
        uint64_t v37 = v4;
        uint64_t v38 = v2;
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        os_signpost_id_t v40 = sub_19EBF6508();
        _os_signpost_emit_with_name_impl(&dword_19E58B000, v31, v32, v40, "CPU :: Data synchronization", "", v39, 2u);
        os_signpost_type_t v41 = v39;
        uint64_t v2 = v38;
        uint64_t v4 = v37;
        uint64_t v28 = v36;
        MEMORY[0x19F3C3580](v41, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v91);
      }
      else
      {
        uint64_t v62 = *(void *)(v0 + 72);

        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
      }
      uint64_t v63 = *(void *)(v0 + 104);
      uint64_t v64 = *(void *)(v0 + 88);
      uint64_t v66 = *(void *)(v0 + 64);
      uint64_t v65 = *(void *)(v0 + 72);
      *(void *)(v0 + 224) = v35;
      *(void *)(v0 + 232) = (v65 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v35(v63, v64, v66);
      sub_19EBF6588();
      swift_allocObject();
      *(void *)(v0 + 240) = sub_19EBF6578();
      long long v67 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      *(void *)(v0 + 248) = v67;
      *(void *)(v0 + 256) = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v67(v64, v66);
      if (!*(void *)(v28 + 40))
      {
        uint64_t v68 = sub_19EBF6538();
        sub_19EBF6568();
        os_signpost_type_t v69 = sub_19EBF6D68();
        if (sub_19EBF6E18())
        {
          unint64_t v92 = v2;
          int v70 = *(_DWORD *)(v0 + 272);
          uint64_t v71 = *(void *)(v0 + 40);
          uint64_t v72 = *(void *)(v0 + 48);
          uint64_t v73 = *(void *)(v0 + 32);
          swift_retain();
          sub_19EBF6598();
          swift_release();
          int v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 88))(v72, v73);
          uint64_t v75 = "[Error] Interval already ended";
          if (v74 != v70)
          {
            (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
            uint64_t v75 = "";
          }
          uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
          uint64_t v77 = *(void *)(v0 + 80);
          uint64_t v78 = *(void *)(v0 + 64);
          (*(void (**)(void, uint64_t, uint64_t))(v0 + 224))(*(void *)(v0 + 104), v77, v78);
          uint64_t v79 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v79 = 0;
          os_signpost_id_t v80 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v68, v69, v80, "CPU :: Data synchronization", v75, v79, 2u);
          MEMORY[0x19F3C3580](v79, -1, -1);

          v76(v77, v78);
          uint64_t v1 = v95;
          uint64_t v81 = v95;
          uint64_t v2 = v92;
          uint64_t v4 = qword_1E946A518;
        }
        else
        {

          uint64_t v81 = v2;
          uint64_t v1 = v95;
        }
        (*(void (**)(void, void))(v0 + 248))(*v81, *(void *)(v0 + 64));
        swift_release();
        swift_release();
        uint64_t v3 = &OBJC_IVAR___MLLoaderEvent__modelHash;
        goto LABEL_2;
      }
      uint64_t v85 = *(void *)(v28 + 48);
      uint64_t v86 = swift_getObjectType();
      unint64_t v93 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v85 + 56) + **(int **)(v85 + 56));
      uint64_t v87 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v87;
      void *v87 = v0;
      uint64_t v88 = sub_19E68B2B8;
LABEL_47:
      v87[1] = v88;
      return v93(v86, v85);
    case 2:
      goto LABEL_2;
    case 3:
      swift_retain();
      uint64_t v84 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v84;
      void *v84 = v0;
      v84[1] = sub_19E689C00;
      return sub_19E6C55E4();
    default:
      uint64_t v16 = *((void *)v3 + 362);
      swift_retain();
      if (v16 != -1) {
        swift_once();
      }
      char v94 = v1;
      uint64_t v90 = v2;
      uint64_t v17 = sub_19EBF6548();
      *(void *)(v0 + 160) = __swift_project_value_buffer(v17, (uint64_t)v4);
      sub_19EBF6518();
      uint64_t v18 = sub_19EBF6538();
      os_signpost_type_t v19 = sub_19EBF6D78();
      if (sub_19EBF6E18())
      {
        uint64_t v20 = *(void *)(v0 + 104);
        uint64_t v21 = *(void *)(v0 + 72);
        uint64_t v89 = *(void *)(v0 + 64);
        os_signpost_id_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
        ((void (*)(uint64_t, void))v22)(v20, *(void *)(v0 + 112));
        uint64_t v23 = v4;
        uint64_t v24 = v3;
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        os_signpost_id_t v26 = sub_19EBF6508();
        _os_signpost_emit_with_name_impl(&dword_19E58B000, v18, v19, v26, "GPU :: Data synchronization", "", v25, 2u);
        os_signpost_type_t v27 = v25;
        uint64_t v3 = v24;
        uint64_t v4 = v23;
        MEMORY[0x19F3C3580](v27, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v89);
      }
      else
      {
        uint64_t v42 = *(void *)(v0 + 72);

        os_signpost_id_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
      }
      uint64_t v43 = *(void *)(v0 + 104);
      uint64_t v44 = *(void *)(v0 + 112);
      uint64_t v46 = *(void *)(v0 + 64);
      uint64_t v45 = *(void *)(v0 + 72);
      *(void *)(v0 + 168) = v22;
      *(void *)(v0 + 176) = (v45 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v22(v43, v44, v46);
      sub_19EBF6588();
      swift_allocObject();
      *(void *)(v0 + 184) = sub_19EBF6578();
      long long v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      *(void *)(v0 + 192) = v47;
      *(void *)(v0 + 200) = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v47(v44, v46);
      if (*(void *)(v8 + 24))
      {
        uint64_t v85 = *(void *)(v8 + 32);
        uint64_t v86 = swift_getObjectType();
        unint64_t v93 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v85 + 56) + **(int **)(v85 + 56));
        uint64_t v87 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v87;
        void *v87 = v0;
        uint64_t v88 = sub_19E68A794;
        goto LABEL_47;
      }
      long long v48 = sub_19EBF6538();
      sub_19EBF6568();
      os_signpost_type_t v49 = sub_19EBF6D68();
      if (sub_19EBF6E18())
      {
        int v50 = *(_DWORD *)(v0 + 272);
        uint64_t v51 = *(void *)(v0 + 56);
        uint64_t v52 = *(void *)(v0 + 32);
        uint64_t v53 = *(void *)(v0 + 40);
        swift_retain();
        sub_19EBF6598();
        swift_release();
        int v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88))(v51, v52);
        uint64_t v55 = "[Error] Interval already ended";
        if (v54 != v50)
        {
          (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
          uint64_t v55 = "";
        }
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
        uint64_t v57 = *(void *)(v0 + 96);
        uint64_t v58 = *(void *)(v0 + 64);
        (*(void (**)(void, uint64_t, uint64_t))(v0 + 168))(*(void *)(v0 + 104), v57, v58);
        unint64_t v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v59 = 0;
        os_signpost_id_t v60 = sub_19EBF6508();
        _os_signpost_emit_with_name_impl(&dword_19E58B000, v48, v49, v60, "GPU :: Data synchronization", v55, v59, 2u);
        MEMORY[0x19F3C3580](v59, -1, -1);

        v56(v57, v58);
        os_signpost_type_t v61 = v94;
        uint64_t v2 = v90;
        uint64_t v3 = &OBJC_IVAR___MLLoaderEvent__modelHash;
        uint64_t v4 = qword_1E946A518;
      }
      else
      {

        uint64_t v2 = v90;
        os_signpost_type_t v61 = (void *)(v0 + 96);
      }
      (*(void (**)(void, void))(v0 + 192))(*v61, *(void *)(v0 + 64));
      swift_release();
      swift_release();
      uint64_t v1 = v94;
      goto LABEL_2;
  }
}

uint64_t sub_19E68A794()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E68A890, 0, 0);
}

uint64_t sub_19E68A890()
{
  uint64_t v1 = (void *)(v0 + 96);
  uint64_t v2 = (void *)(v0 + 104);
  while (2)
  {
    uint64_t v3 = sub_19EBF6538();
    sub_19EBF6568();
    os_signpost_type_t v4 = sub_19EBF6D68();
    if (sub_19EBF6E18())
    {
      int v5 = *(_DWORD *)(v0 + 272);
      uint64_t v6 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 32);
      uint64_t v7 = *(void *)(v0 + 40);
      swift_retain();
      sub_19EBF6598();
      swift_release();
      int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8);
      uint64_t v10 = "[Error] Interval already ended";
      if (v9 != v5)
      {
        (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
        uint64_t v10 = "";
      }
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
      uint64_t v12 = *(void *)(v0 + 96);
      uint64_t v13 = *(void *)(v0 + 64);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 168))(*(void *)(v0 + 104), v12, v13);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      os_signpost_id_t v15 = sub_19EBF6508();
      _os_signpost_emit_with_name_impl(&dword_19E58B000, v3, v4, v15, "GPU :: Data synchronization", v10, v14, 2u);
      MEMORY[0x19F3C3580](v14, -1, -1);

      v11(v12, v13);
      uint64_t v16 = v2;
    }
    else
    {

      uint64_t v16 = v1;
    }
    (*(void (**)(void, void))(v0 + 192))(*v16, *(void *)(v0 + 64));
    swift_release();
    swift_release();
    do
    {
LABEL_10:
      while (1)
      {
        swift_release();
        uint64_t v23 = *(void *)(v0 + 136);
        uint64_t v24 = *(void *)(v0 + 128) - 1;
        do
        {
          if (v24 == v23)
          {
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v75 = *(uint64_t (**)(void))(v0 + 8);
            return v75();
          }
          uint64_t v25 = *(void *)(v0 + 120) + 8 * v23++;
          *(void *)(v0 + 136) = v23;
          unint64_t v26 = *(void *)(v25 + 40);
          *(void *)(v0 + 144) = v26;
          unint64_t v27 = v26 >> 62;
        }
        while (v26 >> 62 == 2);
        if (v27) {
          break;
        }
        uint64_t v28 = *(void *)(v26 + 24);
        uint64_t v29 = *(void *)(v26 + 32);
LABEL_17:
        swift_unknownObjectRetain();
        swift_retain();
        if (v28) {
          goto LABEL_20;
        }
      }
      if (v27 == 1)
      {
        uint64_t v28 = *(void *)((v26 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v29 = *(void *)((v26 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_17;
      }
      swift_retain_n();
      uint64_t v30 = sub_19E6C4398();
      uint64_t v29 = v31;
      swift_release();
    }
    while (!v30);
LABEL_20:
    uint64_t ObjectType = swift_getObjectType();
    char v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 48))(ObjectType, v29);
    swift_unknownObjectRelease();
    if (v33) {
      goto LABEL_10;
    }
    switch((int)v27)
    {
      case 1:
        uint64_t v34 = v26 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v35 = qword_1E945BB50;
        swift_retain();
        if (v35 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_19EBF6548();
        *(void *)(v0 + 216) = __swift_project_value_buffer(v36, (uint64_t)qword_1E946A518);
        sub_19EBF6518();
        uint64_t v37 = sub_19EBF6538();
        os_signpost_type_t v38 = sub_19EBF6D78();
        if (sub_19EBF6E18())
        {
          uint64_t v39 = *(void *)(v0 + 104);
          uint64_t v41 = *(void *)(v0 + 64);
          uint64_t v40 = *(void *)(v0 + 72);
          uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
          v42(v39, *(void *)(v0 + 88), v41);
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          os_signpost_id_t v44 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v37, v38, v44, "CPU :: Data synchronization", "", v43, 2u);
          MEMORY[0x19F3C3580](v43, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
        }
        else
        {
          uint64_t v45 = *(void *)(v0 + 72);

          uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
        }
        uint64_t v46 = *(void *)(v0 + 104);
        uint64_t v47 = *(void *)(v0 + 88);
        uint64_t v49 = *(void *)(v0 + 64);
        uint64_t v48 = *(void *)(v0 + 72);
        *(void *)(v0 + 224) = v42;
        *(void *)(v0 + 232) = (v48 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v42(v46, v47, v49);
        sub_19EBF6588();
        swift_allocObject();
        *(void *)(v0 + 240) = sub_19EBF6578();
        int v50 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        *(void *)(v0 + 248) = v50;
        *(void *)(v0 + 256) = (v48 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v50(v47, v49);
        if (!*(void *)(v34 + 40))
        {
          uint64_t v51 = sub_19EBF6538();
          sub_19EBF6568();
          os_signpost_type_t v52 = sub_19EBF6D68();
          if (sub_19EBF6E18())
          {
            uint64_t v83 = v2;
            int v53 = *(_DWORD *)(v0 + 272);
            uint64_t v55 = *(void *)(v0 + 40);
            uint64_t v54 = *(void *)(v0 + 48);
            uint64_t v56 = *(void *)(v0 + 32);
            swift_retain();
            sub_19EBF6598();
            swift_release();
            int v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88))(v54, v56);
            uint64_t v58 = "[Error] Interval already ended";
            if (v57 != v53)
            {
              (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
              uint64_t v58 = "";
            }
            uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
            uint64_t v18 = *(void *)(v0 + 80);
            uint64_t v19 = *(void *)(v0 + 64);
            (*(void (**)(void, uint64_t, uint64_t))(v0 + 224))(*(void *)(v0 + 104), v18, v19);
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v20 = 0;
            os_signpost_id_t v21 = sub_19EBF6508();
            _os_signpost_emit_with_name_impl(&dword_19E58B000, v51, v52, v21, "CPU :: Data synchronization", v58, v20, 2u);
            MEMORY[0x19F3C3580](v20, -1, -1);

            v17(v18, v19);
            uint64_t v2 = v83;
            os_signpost_id_t v22 = v83;
          }
          else
          {

            os_signpost_id_t v22 = (void *)(v0 + 80);
          }
          (*(void (**)(void, void))(v0 + 248))(*v22, *(void *)(v0 + 64));
          swift_release();
          swift_release();
          goto LABEL_10;
        }
        uint64_t v78 = *(void *)(v34 + 48);
        uint64_t v79 = swift_getObjectType();
        uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v78 + 56) + **(int **)(v78 + 56));
        os_signpost_id_t v80 = (void *)swift_task_alloc();
        *(void *)(v0 + 264) = v80;
        *os_signpost_id_t v80 = v0;
        uint64_t v81 = sub_19E68B2B8;
LABEL_46:
        v80[1] = v81;
        uint64_t result = v82(v79, v78);
        break;
      case 2:
        goto LABEL_10;
      case 3:
        swift_retain();
        uint64_t v77 = (void *)swift_task_alloc();
        *(void *)(v0 + 152) = v77;
        void *v77 = v0;
        v77[1] = sub_19E689C00;
        return sub_19E6C55E4();
      default:
        uint64_t v59 = qword_1E945BB50;
        swift_retain();
        if (v59 != -1) {
          swift_once();
        }
        uint64_t v60 = sub_19EBF6548();
        *(void *)(v0 + 160) = __swift_project_value_buffer(v60, (uint64_t)qword_1E946A518);
        sub_19EBF6518();
        os_signpost_type_t v61 = sub_19EBF6538();
        os_signpost_type_t v62 = sub_19EBF6D78();
        if (sub_19EBF6E18())
        {
          uint64_t v63 = *(void *)(v0 + 104);
          uint64_t v64 = *(void *)(v0 + 64);
          uint64_t v65 = *(void *)(v0 + 72);
          uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
          v66(v63, *(void *)(v0 + 112), v64);
          long long v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v67 = 0;
          os_signpost_id_t v68 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v61, v62, v68, "GPU :: Data synchronization", "", v67, 2u);
          MEMORY[0x19F3C3580](v67, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
        }
        else
        {
          uint64_t v69 = *(void *)(v0 + 72);

          uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
        }
        uint64_t v70 = *(void *)(v0 + 104);
        uint64_t v71 = *(void *)(v0 + 112);
        uint64_t v73 = *(void *)(v0 + 64);
        uint64_t v72 = *(void *)(v0 + 72);
        *(void *)(v0 + 168) = v66;
        *(void *)(v0 + 176) = (v72 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v66(v70, v71, v73);
        sub_19EBF6588();
        swift_allocObject();
        *(void *)(v0 + 184) = sub_19EBF6578();
        int v74 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        *(void *)(v0 + 192) = v74;
        *(void *)(v0 + 200) = (v72 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v74(v71, v73);
        uint64_t v1 = (void *)(v0 + 96);
        if (!*(void *)(v26 + 24)) {
          continue;
        }
        uint64_t v78 = *(void *)(v26 + 32);
        uint64_t v79 = swift_getObjectType();
        uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v78 + 56) + **(int **)(v78 + 56));
        os_signpost_id_t v80 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v80;
        *os_signpost_id_t v80 = v0;
        uint64_t v81 = sub_19E68A794;
        goto LABEL_46;
    }
    return result;
  }
}

uint64_t sub_19E68B2B8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E68B3B4, 0, 0);
}

uint64_t sub_19E68B3B4()
{
LABEL_1:
  uint64_t v1 = sub_19EBF6538();
  sub_19EBF6568();
  os_signpost_type_t v2 = sub_19EBF6D68();
  if (sub_19EBF6E18())
  {
    int v3 = *(_DWORD *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 32);
    swift_retain();
    sub_19EBF6598();
    swift_release();
    int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    uint64_t v8 = "[Error] Interval already ended";
    if (v7 != v3)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
      uint64_t v8 = "";
    }
    int v9 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 64);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 224))(*(void *)(v0 + 104), v10, v11);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    os_signpost_id_t v13 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v1, v2, v13, "CPU :: Data synchronization", v8, v12, 2u);
    MEMORY[0x19F3C3580](v12, -1, -1);

    v9(v10, v11);
    uint64_t v14 = (void *)(v0 + 104);
  }
  else
  {

    uint64_t v14 = (void *)(v0 + 80);
  }
  (*(void (**)(void, void))(v0 + 248))(*v14, *(void *)(v0 + 64));
  swift_release();
  swift_release();
LABEL_7:
  swift_release();
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 128) - 1;
  while (v16 != v15)
  {
    uint64_t v17 = *(void *)(v0 + 120) + 8 * v15++;
    *(void *)(v0 + 136) = v15;
    unint64_t v18 = *(void *)(v17 + 40);
    *(void *)(v0 + 144) = v18;
    unint64_t v19 = v18 >> 62;
    if (v18 >> 62 != 2)
    {
      if (v19)
      {
        if (v19 == 1)
        {
          uint64_t v20 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v21 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_14;
        }
        swift_retain_n();
        uint64_t v22 = sub_19E6C4398();
        uint64_t v21 = v23;
        swift_release();
        if (v22)
        {
LABEL_17:
          uint64_t ObjectType = swift_getObjectType();
          char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(ObjectType, v21);
          swift_unknownObjectRelease();
          if ((v25 & 1) == 0)
          {
            switch((int)v19)
            {
              case 1:
                uint64_t v56 = v18 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v57 = qword_1E945BB50;
                swift_retain();
                if (v57 != -1) {
                  swift_once();
                }
                uint64_t v58 = sub_19EBF6548();
                *(void *)(v0 + 216) = __swift_project_value_buffer(v58, (uint64_t)qword_1E946A518);
                sub_19EBF6518();
                uint64_t v59 = sub_19EBF6538();
                os_signpost_type_t v60 = sub_19EBF6D78();
                if (sub_19EBF6E18())
                {
                  uint64_t v61 = *(void *)(v0 + 104);
                  uint64_t v63 = *(void *)(v0 + 64);
                  uint64_t v62 = *(void *)(v0 + 72);
                  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
                  v64(v61, *(void *)(v0 + 88), v63);
                  uint64_t v65 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v65 = 0;
                  os_signpost_id_t v66 = sub_19EBF6508();
                  _os_signpost_emit_with_name_impl(&dword_19E58B000, v59, v60, v66, "CPU :: Data synchronization", "", v65, 2u);
                  MEMORY[0x19F3C3580](v65, -1, -1);

                  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
                }
                else
                {
                  uint64_t v67 = *(void *)(v0 + 72);

                  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
                }
                uint64_t v68 = *(void *)(v0 + 104);
                uint64_t v69 = *(void *)(v0 + 88);
                uint64_t v71 = *(void *)(v0 + 64);
                uint64_t v70 = *(void *)(v0 + 72);
                *(void *)(v0 + 224) = v64;
                *(void *)(v0 + 232) = (v70 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                v64(v68, v69, v71);
                sub_19EBF6588();
                swift_allocObject();
                *(void *)(v0 + 240) = sub_19EBF6578();
                uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
                *(void *)(v0 + 248) = v72;
                *(void *)(v0 + 256) = (v70 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
                v72(v69, v71);
                if (!*(void *)(v56 + 40)) {
                  goto LABEL_1;
                }
                uint64_t v76 = *(void *)(v56 + 48);
                uint64_t v77 = swift_getObjectType();
                os_signpost_id_t v80 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v76 + 56) + **(int **)(v76 + 56));
                uint64_t v78 = (void *)swift_task_alloc();
                *(void *)(v0 + 264) = v78;
                *uint64_t v78 = v0;
                uint64_t v79 = sub_19E68B2B8;
                goto LABEL_45;
              case 2:
                goto LABEL_7;
              case 3:
                swift_retain();
                uint64_t v75 = (void *)swift_task_alloc();
                *(void *)(v0 + 152) = v75;
                void *v75 = v0;
                v75[1] = sub_19E689C00;
                return sub_19E6C55E4();
              default:
                uint64_t v26 = qword_1E945BB50;
                swift_retain();
                if (v26 != -1) {
                  swift_once();
                }
                uint64_t v27 = sub_19EBF6548();
                *(void *)(v0 + 160) = __swift_project_value_buffer(v27, (uint64_t)qword_1E946A518);
                sub_19EBF6518();
                uint64_t v28 = sub_19EBF6538();
                os_signpost_type_t v29 = sub_19EBF6D78();
                if (sub_19EBF6E18())
                {
                  uint64_t v30 = *(void *)(v0 + 104);
                  uint64_t v31 = *(void *)(v0 + 64);
                  uint64_t v32 = *(void *)(v0 + 72);
                  char v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
                  v33(v30, *(void *)(v0 + 112), v31);
                  uint64_t v34 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v34 = 0;
                  os_signpost_id_t v35 = sub_19EBF6508();
                  _os_signpost_emit_with_name_impl(&dword_19E58B000, v28, v29, v35, "GPU :: Data synchronization", "", v34, 2u);
                  MEMORY[0x19F3C3580](v34, -1, -1);

                  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
                }
                else
                {
                  uint64_t v36 = *(void *)(v0 + 72);

                  char v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
                }
                uint64_t v37 = *(void *)(v0 + 104);
                uint64_t v38 = *(void *)(v0 + 112);
                uint64_t v39 = *(void *)(v0 + 64);
                uint64_t v40 = *(void *)(v0 + 72);
                *(void *)(v0 + 168) = v33;
                *(void *)(v0 + 176) = (v40 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                v33(v37, v38, v39);
                sub_19EBF6588();
                swift_allocObject();
                *(void *)(v0 + 184) = sub_19EBF6578();
                uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
                *(void *)(v0 + 192) = v41;
                *(void *)(v0 + 200) = (v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
                v41(v38, v39);
                if (*(void *)(v18 + 24))
                {
                  uint64_t v76 = *(void *)(v18 + 32);
                  uint64_t v77 = swift_getObjectType();
                  os_signpost_id_t v80 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v76 + 56) + **(int **)(v76 + 56));
                  uint64_t v78 = (void *)swift_task_alloc();
                  *(void *)(v0 + 208) = v78;
                  *uint64_t v78 = v0;
                  uint64_t v79 = sub_19E68A794;
LABEL_45:
                  v78[1] = v79;
                  return v80(v77, v76);
                }
                uint64_t v42 = sub_19EBF6538();
                sub_19EBF6568();
                os_signpost_type_t v43 = sub_19EBF6D68();
                if (sub_19EBF6E18())
                {
                  int v44 = *(_DWORD *)(v0 + 272);
                  uint64_t v45 = *(void *)(v0 + 56);
                  uint64_t v46 = *(void *)(v0 + 32);
                  uint64_t v47 = *(void *)(v0 + 40);
                  swift_retain();
                  sub_19EBF6598();
                  swift_release();
                  int v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 88))(v45, v46);
                  uint64_t v49 = "[Error] Interval already ended";
                  if (v48 != v44)
                  {
                    (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
                    uint64_t v49 = "";
                  }
                  int v50 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
                  uint64_t v51 = *(void *)(v0 + 96);
                  uint64_t v52 = *(void *)(v0 + 64);
                  (*(void (**)(void, uint64_t, uint64_t))(v0 + 168))(*(void *)(v0 + 104), v51, v52);
                  int v53 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)int v53 = 0;
                  os_signpost_id_t v54 = sub_19EBF6508();
                  _os_signpost_emit_with_name_impl(&dword_19E58B000, v42, v43, v54, "GPU :: Data synchronization", v49, v53, 2u);
                  MEMORY[0x19F3C3580](v53, -1, -1);

                  v50(v51, v52);
                  uint64_t v55 = (void *)(v0 + 104);
                }
                else
                {

                  uint64_t v55 = (void *)(v0 + 96);
                }
                (*(void (**)(void, void))(v0 + 192))(*v55, *(void *)(v0 + 64));
                swift_release();
                swift_release();
                break;
            }
          }
        }
      }
      else
      {
        uint64_t v20 = *(void *)(v18 + 24);
        uint64_t v21 = *(void *)(v18 + 32);
LABEL_14:
        swift_unknownObjectRetain();
        swift_retain();
        if (v20) {
          goto LABEL_17;
        }
      }
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
  return v73();
}

  uint64_t v10 = (unint64_t *)(a2 - 16);
  k = (unint64_t)a1;
  while (1)
  {
    a1 = (unint64_t *)k;
    uint64_t v12 = a2 - k;
    os_signpost_id_t v13 = (uint64_t)(a2 - k) >> 4;
    if (v5 || !v4)
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          uint64_t v47 = *v10;
          int v48 = *(void *)k;
          if (*v10 >= *(void *)k)
          {
            if (v48 < v47) {
              return;
            }
            int v50 = *(double *)(a2 - 8);
            uint64_t v49 = *(double *)(k + 8);
            if (v50 >= v49) {
              return;
            }
          }
          else
          {
            uint64_t v49 = *(double *)(k + 8);
            int v50 = *(double *)(a2 - 8);
          }
          *(void *)k = v47;
          *(void *)(a2 - 16) = v48;
          *(double *)(k + 8) = v50;
          *(double *)(a2 - 8) = v49;
          return;
        case 3uLL:
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>((unint64_t *)k, (unint64_t *)(k + 16), (unint64_t *)(a2 - 16));
          return;
        case 4uLL:
          std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(k, k + 16, k + 32, a2 - 16);
          return;
        case 5uLL:
          std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(k, k + 16, k + 32, k + 48, (unint64_t *)(a2 - 16));
          return;
        default:
          JUMPOUT(0);
      }
    }
    if (v12 <= 383)
    {
      uint64_t v51 = (unint64_t *)(k + 16);
      int v53 = k == a2 || v51 == (unint64_t *)a2;
      if (a4)
      {
        if (v53) {
          return;
        }
        os_signpost_id_t v54 = 0;
        uint64_t v55 = k;
        while (2)
        {
          uint64_t v56 = v55;
          uint64_t v55 = (unint64_t)v51;
          uint64_t v57 = *(void *)(v56 + 16);
          uint64_t v58 = *(void *)v56;
          if (v57 < *(void *)v56)
          {
            uint64_t v59 = *(double *)(v56 + 24);
            os_signpost_type_t v60 = *(double *)(v56 + 8);
            goto LABEL_113;
          }
          if (v58 >= v57)
          {
            uint64_t v59 = *(double *)(v56 + 24);
            os_signpost_type_t v60 = *(double *)(v56 + 8);
            if (v59 < v60)
            {
LABEL_113:
              *(void *)(v56 + 16) = v58;
              *(double *)(v55 + 8) = v60;
              uint64_t v61 = k;
              if (v56 != k)
              {
                uint64_t v62 = v54;
                do
                {
                  uint64_t v63 = *(void *)(k + v62 - 16);
                  if (v57 >= v63)
                  {
                    if (v63 < v57)
                    {
                      uint64_t v61 = v56;
                      goto LABEL_122;
                    }
                    uint64_t v61 = k + v62;
                    uint64_t v64 = *(double *)(k + v62 - 8);
                    if (v59 >= v64) {
                      goto LABEL_122;
                    }
                  }
                  else
                  {
                    uint64_t v64 = *(double *)(k + v62 - 8);
                  }
                  v56 -= 16;
                  uint64_t v65 = k + v62;
                  *(void *)uint64_t v65 = v63;
                  *(double *)(v65 + 8) = v64;
                  v62 -= 16;
                }
                while (v62);
                uint64_t v61 = k;
              }
LABEL_122:
              *(void *)uint64_t v61 = v57;
              *(double *)(v61 + 8) = v59;
            }
          }
          uint64_t v51 = (unint64_t *)(v55 + 16);
          v54 += 16;
          if (v55 + 16 == a2) {
            return;
          }
          continue;
        }
      }
      if (v53) {
        return;
      }
      while (2)
      {
        uint64_t v84 = a1;
        a1 = v51;
        uint64_t v85 = v84[2];
        uint64_t v86 = *v84;
        if (v85 >= *v84)
        {
          if (v86 >= v85)
          {
            uint64_t v87 = *((double *)v84 + 3);
            if (v87 < *((double *)v84 + 1)) {
              goto LABEL_162;
            }
          }
        }
        else
        {
          uint64_t v87 = *((double *)v84 + 3);
          do
          {
            do
            {
LABEL_162:
              uint64_t v88 = v84;
              uint64_t v89 = v86;
              uint64_t v90 = *(v84 - 2);
              v84 -= 2;
              uint64_t v86 = v90;
              uint64_t v84[4] = v89;
              v84[5] = v84[3];
            }
            while (v85 < v90);
          }
          while (v86 >= v85 && v87 < *((double *)v88 - 1));
          *uint64_t v88 = v85;
          *((double *)v88 + 1) = v87;
        }
        uint64_t v51 = a1 + 2;
        if (a1 + 2 == (unint64_t *)a2) {
          return;
        }
        continue;
      }
    }
    if (!a3) {
      break;
    }
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = (unint64_t *)(k + 16 * (v13 >> 1));
    if ((unint64_t)v12 >= 0x801)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1, &a1[2 * (v13 >> 1)], (unint64_t *)(a2 - 16));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1 + 2, v15 - 2, (unint64_t *)(a2 - 32));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1 + 4, &a1[2 * v14 + 2], (unint64_t *)(a2 - 48));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(v15 - 2, v15, &a1[2 * v14 + 2]);
      uint64_t v16 = *a1;
      *a1 = *v15;
      *uint64_t v15 = v16;
      uint64_t v17 = a1[1];
      a1[1] = v15[1];
      v15[1] = v17;
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(&a1[2 * (v13 >> 1)], a1, (unint64_t *)(a2 - 16));
    }
    --a3;
    unint64_t v18 = *a1;
    if ((a4 & 1) != 0 || (unint64_t v19 = *(a1 - 2), v19 < v18))
    {
LABEL_13:
      uint64_t v21 = *((double *)a1 + 1);
      for (unint64_t i = a1 + 2; ; i += 2)
      {
        uint64_t v23 = *i;
        if (*i >= v18 && (v18 < v23 || *((double *)i + 1) >= v21)) {
          break;
        }
      }
      if (i - 2 == a1)
      {
        j = a2;
        if ((unint64_t)i < a2)
        {
          uint64_t v27 = *v10;
          j = a2 - 16;
          if (*v10 >= v18)
          {
            j = a2 - 16;
            do
            {
              if (v18 >= v27)
              {
                if (*(double *)(j + 8) < v21 || (unint64_t)i >= j) {
                  break;
                }
              }
              else if ((unint64_t)i >= j)
              {
                break;
              }
              os_signpost_type_t v29 = *(void *)(j - 16);
              j -= 16;
              uint64_t v27 = v29;
            }
            while (v29 >= v18);
          }
        }
      }
      else
      {
        uint64_t v24 = *v10;
        for (j = a2 - 16; v24 >= v18 && (v18 < v24 || *(double *)(j + 8) >= v21); j -= 16)
        {
          uint64_t v26 = *(void *)(j - 16);
          uint64_t v24 = v26;
        }
      }
      k = (unint64_t)i;
      if ((unint64_t)i < j)
      {
        uint64_t v30 = *(void *)j;
        k = (unint64_t)i;
        uint64_t v31 = (double *)j;
        do
        {
          *(void *)k = v30;
          *(void *)uint64_t v31 = v23;
          uint64_t v32 = *(void *)(k + 8);
          *(double *)(k + 8) = v31[1];
          *((void *)v31 + 1) = v32;
          do
          {
            do
            {
              char v33 = *(void *)(k + 16);
              k += 16;
              uint64_t v23 = v33;
            }
            while (v33 < v18);
          }
          while (v18 >= v23 && *(double *)(k + 8) < v21);
          do
          {
            uint64_t v34 = *((void *)v31 - 2);
            v31 -= 2;
            uint64_t v30 = v34;
          }
          while (v34 >= v18 && (v18 < v30 || v31[1] >= v21));
        }
        while (k < (unint64_t)v31);
      }
      if ((unint64_t *)(k - 16) != a1)
      {
        *a1 = *(void *)(k - 16);
        a1[1] = *(void *)(k - 8);
      }
      *(void *)(k - 16) = v18;
      *(double *)(k - 8) = v21;
      if ((unint64_t)i < j) {
        goto LABEL_50;
      }
      os_signpost_id_t v35 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>((uint64_t)a1, k - 16);
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(k, a2))
      {
        a2 = k - 16;
        if (v35) {
          return;
        }
        goto LABEL_1;
      }
      if (!v35)
      {
LABEL_50:
        std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *,false>(a1, k - 16, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      if (v18 < v19)
      {
        uint64_t v20 = *((double *)a1 + 1);
      }
      else
      {
        uint64_t v20 = *((double *)a1 + 1);
        if (*((double *)a1 - 1) < v20) {
          goto LABEL_13;
        }
      }
      uint64_t v36 = *v10;
      if (v18 >= *v10 && (v36 < v18 || v20 >= *(double *)(a2 - 8)))
      {
        for (k = (unint64_t)(a1 + 2);
              k < a2 && v18 >= *(void *)k && (*(void *)k < v18 || v20 >= *(double *)(k + 8));
      }
      else
      {
        k = (unint64_t)a1;
        do
        {
          uint64_t v38 = *(void *)(k + 16);
          k += 16;
          uint64_t v37 = v38;
        }
        while (v18 >= v38 && (v37 < v18 || v20 >= *(double *)(k + 8)));
      }
      m = a2;
      if (k < a2)
      {
        for (m = a2 - 16; v18 < v36 || v36 >= v18 && v20 < *(double *)(m + 8); m -= 16)
        {
          uint64_t v40 = *(void *)(m - 16);
          uint64_t v36 = v40;
        }
      }
      if (k < m)
      {
        uint64_t v41 = *(void *)k;
        uint64_t v42 = *(void *)m;
        do
        {
          *(void *)k = v42;
          *(void *)m = v41;
          os_signpost_type_t v43 = *(void *)(k + 16);
          k += 16;
          uint64_t v41 = v43;
          int v44 = *(void *)(k - 8);
          *(void *)(k - 8) = *(void *)(m + 8);
          *(void *)(m + 8) = v44;
          while (v18 >= v41 && (v41 < v18 || v20 >= *(double *)(k + 8)))
          {
            uint64_t v45 = *(void *)(k + 16);
            k += 16;
            uint64_t v41 = v45;
          }
          do
          {
            do
            {
              uint64_t v46 = *(void *)(m - 16);
              m -= 16;
              uint64_t v42 = v46;
            }
            while (v18 < v46);
          }
          while (v42 >= v18 && v20 < *(double *)(m + 8));
        }
        while (k < m);
      }
      uint64_t v4 = k - 16 >= (unint64_t)a1;
      uint64_t v5 = k - 16 == (void)a1;
      if ((unint64_t *)(k - 16) != a1)
      {
        *a1 = *(void *)(k - 16);
        a1[1] = *(void *)(k - 8);
      }
      a4 = 0;
      *(void *)(k - 16) = v18;
      *(double *)(k - 8) = v20;
    }
  }
  if (k != a2)
  {
    os_signpost_id_t v66 = (v13 - 2) >> 1;
    uint64_t v67 = v66;
    while (2)
    {
      uint64_t v68 = v67;
      if (v66 >= v67)
      {
        uint64_t v69 = (2 * v67) | 1;
        uint64_t v70 = k + 16 * v69;
        if (2 * v68 + 2 < (uint64_t)v13)
        {
          uint64_t v71 = *(void *)(v70 + 16);
          if (*(void *)v70 < v71 || v71 >= *(void *)v70 && *(double *)(k + 16 * v69 + 8) < *(double *)(v70 + 24))
          {
            v70 += 16;
            uint64_t v69 = 2 * v68 + 2;
          }
        }
        uint64_t v72 = k + 16 * v68;
        uint64_t v73 = *(void *)v70;
        int v74 = *(void *)v72;
        if (*(void *)v70 >= *(void *)v72)
        {
          if (v74 < v73)
          {
            uint64_t v75 = *(double *)(v72 + 8);
            uint64_t v76 = *(double *)(v70 + 8);
            goto LABEL_137;
          }
          uint64_t v76 = *(double *)(v70 + 8);
          uint64_t v75 = *(double *)(k + 16 * v68 + 8);
          if (v76 >= v75)
          {
LABEL_137:
            *(void *)uint64_t v72 = v73;
            *(double *)(v72 + 8) = v76;
            if (v66 >= v69)
            {
              while (1)
              {
                uint64_t v78 = 2 * v69;
                uint64_t v69 = (2 * v69) | 1;
                uint64_t v77 = k + 16 * v69;
                uint64_t v79 = v78 + 2;
                if (v79 < (uint64_t)v13)
                {
                  os_signpost_id_t v80 = *(void *)(v77 + 16);
                  if (*(void *)v77 < v80
                    || v80 >= *(void *)v77 && *(double *)(k + 16 * v69 + 8) < *(double *)(v77 + 24))
                  {
                    v77 += 16;
                    uint64_t v69 = v79;
                  }
                }
                uint64_t v81 = *(void *)v77;
                if (*(void *)v77 < v74) {
                  break;
                }
                uint64_t v82 = *(double *)(v77 + 8);
                if (v74 >= v81 && v82 < v75) {
                  break;
                }
                *(void *)uint64_t v70 = v81;
                *(double *)(v70 + 8) = v82;
                uint64_t v70 = v77;
                if (v66 < v69) {
                  goto LABEL_139;
                }
              }
            }
            uint64_t v77 = v70;
LABEL_139:
            *(void *)uint64_t v77 = v74;
            *(double *)(v77 + 8) = v75;
          }
        }
      }
      uint64_t v67 = v68 - 1;
      if (v68) {
        continue;
      }
      break;
    }
    uint64_t v91 = (unint64_t)v12 >> 4;
    while (2)
    {
      unint64_t v92 = 0;
      unint64_t v93 = *(void *)k;
      char v94 = *(double *)(k + 8);
      unint64_t v95 = v91 - 2;
      if (v91 < 2) {
        unint64_t v95 = v91 - 1;
      }
      uint64_t v96 = v95 >> 1;
      unint64_t v97 = k;
      do
      {
        uint64_t v98 = (void *)v97;
        uint64_t v99 = v92 + 1;
        v97 += 16 * (v92 + 1);
        unint64_t v100 = 2 * v92;
        unint64_t v92 = (2 * v92) | 1;
        uint64_t v101 = v100 + 2;
        if (v101 < v91)
        {
          unint64_t v102 = *(void *)(v97 + 16);
          if (*(void *)v97 < v102 || v102 >= *(void *)v97 && *(double *)&v98[2 * v99 + 1] < *(double *)(v97 + 24))
          {
            v97 += 16;
            unint64_t v92 = v101;
          }
        }
        *uint64_t v98 = *(void *)v97;
        v98[1] = *(void *)(v97 + 8);
      }
      while (v92 <= v96);
      if (v97 != a2 - 16)
      {
        *(void *)unint64_t v97 = *(void *)(a2 - 16);
        *(void *)(v97 + 8) = *(void *)(a2 - 8);
        *(void *)(a2 - 16) = v93;
        *(double *)(a2 - 8) = v94;
        long long v103 = v97 - k + 16;
        if (v103 < 17) {
          goto LABEL_189;
        }
        unint64_t v104 = (v103 >> 4) - 2;
        unint64_t v105 = v104 >> 1;
        uint64_t v106 = k + 16 * (v104 >> 1);
        uint64_t v107 = *(void *)v106;
        unint64_t v93 = *(void *)v97;
        if (*(void *)v106 < *(void *)v97)
        {
          char v94 = *(double *)(v97 + 8);
          uint64_t v108 = *(double *)(v106 + 8);
          goto LABEL_181;
        }
        if (v93 < v107 || (v108 = *(double *)(k + 16 * v105 + 8), char v94 = *(double *)(v97 + 8), v108 >= v94))
        {
LABEL_189:
          a2 -= 16;
          if (v91-- <= 2) {
            return;
          }
          continue;
        }
LABEL_181:
        *(void *)unint64_t v97 = v107;
        *(double *)(v97 + 8) = v108;
        if (v104 >= 2)
        {
          while (1)
          {
            long long v109 = v105 - 1;
            unint64_t v105 = (v105 - 1) >> 1;
            unint64_t v97 = k + 16 * v105;
            unint64_t v110 = *(void *)v97;
            if (*(void *)v97 >= v93)
            {
              if (v93 < v110) {
                break;
              }
              uint64_t v111 = *(double *)(k + 16 * v105 + 8);
              if (v111 >= v94) {
                break;
              }
            }
            else
            {
              uint64_t v111 = *(double *)(v97 + 8);
            }
            *(void *)uint64_t v106 = v110;
            *(double *)(v106 + 8) = v111;
            uint64_t v106 = k + 16 * v105;
            if (v109 <= 1) {
              goto LABEL_188;
            }
          }
        }
        unint64_t v97 = v106;
      }
      break;
    }
LABEL_188:
    *(void *)unint64_t v97 = v93;
    *(double *)(v97 + 8) = v94;
    goto LABEL_189;
  }
}

  uint64_t v10 = (unint64_t *)(a2 - 16);
  k = (unint64_t)a1;
  while (1)
  {
    a1 = (unint64_t *)k;
    uint64_t v12 = a2 - k;
    os_signpost_id_t v13 = (uint64_t)(a2 - k) >> 4;
    if (v5 || !v4)
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          uint64_t v47 = *v10;
          int v48 = *(void *)k;
          if (*v10 >= *(void *)k)
          {
            if (v48 < v47) {
              return;
            }
            int v50 = *(double *)(a2 - 8);
            uint64_t v49 = *(double *)(k + 8);
            if (v50 >= v49) {
              return;
            }
          }
          else
          {
            uint64_t v49 = *(double *)(k + 8);
            int v50 = *(double *)(a2 - 8);
          }
          *(void *)k = v47;
          *(void *)(a2 - 16) = v48;
          *(double *)(k + 8) = v50;
          *(double *)(a2 - 8) = v49;
          return;
        case 3uLL:
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>((unint64_t *)k, (unint64_t *)(k + 16), (unint64_t *)(a2 - 16));
          return;
        case 4uLL:
          std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(k, k + 16, k + 32, a2 - 16);
          return;
        case 5uLL:
          std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(k, k + 16, k + 32, k + 48, (unint64_t *)(a2 - 16));
          return;
        default:
          JUMPOUT(0);
      }
    }
    if (v12 <= 383)
    {
      uint64_t v51 = (unint64_t *)(k + 16);
      int v53 = k == a2 || v51 == (unint64_t *)a2;
      if (a4)
      {
        if (v53) {
          return;
        }
        os_signpost_id_t v54 = 0;
        uint64_t v55 = k;
        while (2)
        {
          uint64_t v56 = v55;
          uint64_t v55 = (unint64_t)v51;
          uint64_t v57 = *(void *)(v56 + 16);
          uint64_t v58 = *(void *)v56;
          if (v57 < *(void *)v56)
          {
            uint64_t v59 = *(double *)(v56 + 24);
            os_signpost_type_t v60 = *(double *)(v56 + 8);
            goto LABEL_113;
          }
          if (v58 >= v57)
          {
            uint64_t v59 = *(double *)(v56 + 24);
            os_signpost_type_t v60 = *(double *)(v56 + 8);
            if (v59 < v60)
            {
LABEL_113:
              *(void *)(v56 + 16) = v58;
              *(double *)(v55 + 8) = v60;
              uint64_t v61 = k;
              if (v56 != k)
              {
                uint64_t v62 = v54;
                do
                {
                  uint64_t v63 = *(void *)(k + v62 - 16);
                  if (v57 >= v63)
                  {
                    if (v63 < v57)
                    {
                      uint64_t v61 = v56;
                      goto LABEL_122;
                    }
                    uint64_t v61 = k + v62;
                    uint64_t v64 = *(double *)(k + v62 - 8);
                    if (v59 >= v64) {
                      goto LABEL_122;
                    }
                  }
                  else
                  {
                    uint64_t v64 = *(double *)(k + v62 - 8);
                  }
                  v56 -= 16;
                  uint64_t v65 = k + v62;
                  *(void *)uint64_t v65 = v63;
                  *(double *)(v65 + 8) = v64;
                  v62 -= 16;
                }
                while (v62);
                uint64_t v61 = k;
              }
LABEL_122:
              *(void *)uint64_t v61 = v57;
              *(double *)(v61 + 8) = v59;
            }
          }
          uint64_t v51 = (unint64_t *)(v55 + 16);
          v54 += 16;
          if (v55 + 16 == a2) {
            return;
          }
          continue;
        }
      }
      if (v53) {
        return;
      }
      while (2)
      {
        uint64_t v84 = a1;
        a1 = v51;
        uint64_t v85 = v84[2];
        uint64_t v86 = *v84;
        if (v85 >= *v84)
        {
          if (v86 >= v85)
          {
            uint64_t v87 = *((double *)v84 + 3);
            if (v87 < *((double *)v84 + 1)) {
              goto LABEL_162;
            }
          }
        }
        else
        {
          uint64_t v87 = *((double *)v84 + 3);
          do
          {
            do
            {
LABEL_162:
              uint64_t v88 = v84;
              uint64_t v89 = v86;
              uint64_t v90 = *(v84 - 2);
              v84 -= 2;
              uint64_t v86 = v90;
              uint64_t v84[4] = v89;
              v84[5] = v84[3];
            }
            while (v85 < v90);
          }
          while (v86 >= v85 && v87 < *((double *)v88 - 1));
          *uint64_t v88 = v85;
          *((double *)v88 + 1) = v87;
        }
        uint64_t v51 = a1 + 2;
        if (a1 + 2 == (unint64_t *)a2) {
          return;
        }
        continue;
      }
    }
    if (!a3) {
      break;
    }
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = (unint64_t *)(k + 16 * (v13 >> 1));
    if ((unint64_t)v12 >= 0x801)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1, &a1[2 * (v13 >> 1)], (unint64_t *)(a2 - 16));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1 + 2, v15 - 2, (unint64_t *)(a2 - 32));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1 + 4, &a1[2 * v14 + 2], (unint64_t *)(a2 - 48));
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(v15 - 2, v15, &a1[2 * v14 + 2]);
      uint64_t v16 = *a1;
      *a1 = *v15;
      *uint64_t v15 = v16;
      uint64_t v17 = a1[1];
      a1[1] = v15[1];
      v15[1] = v17;
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(&a1[2 * (v13 >> 1)], a1, (unint64_t *)(a2 - 16));
    }
    --a3;
    unint64_t v18 = *a1;
    if ((a4 & 1) != 0 || (unint64_t v19 = *(a1 - 2), v19 < v18))
    {
LABEL_13:
      uint64_t v21 = *((double *)a1 + 1);
      for (unint64_t i = a1 + 2; ; i += 2)
      {
        uint64_t v23 = *i;
        if (*i >= v18 && (v18 < v23 || *((double *)i + 1) >= v21)) {
          break;
        }
      }
      if (i - 2 == a1)
      {
        j = a2;
        if ((unint64_t)i < a2)
        {
          uint64_t v27 = *v10;
          j = a2 - 16;
          if (*v10 >= v18)
          {
            j = a2 - 16;
            do
            {
              if (v18 >= v27)
              {
                if (*(double *)(j + 8) < v21 || (unint64_t)i >= j) {
                  break;
                }
              }
              else if ((unint64_t)i >= j)
              {
                break;
              }
              os_signpost_type_t v29 = *(void *)(j - 16);
              j -= 16;
              uint64_t v27 = v29;
            }
            while (v29 >= v18);
          }
        }
      }
      else
      {
        uint64_t v24 = *v10;
        for (j = a2 - 16; v24 >= v18 && (v18 < v24 || *(double *)(j + 8) >= v21); j -= 16)
        {
          uint64_t v26 = *(void *)(j - 16);
          uint64_t v24 = v26;
        }
      }
      k = (unint64_t)i;
      if ((unint64_t)i < j)
      {
        uint64_t v30 = *(void *)j;
        k = (unint64_t)i;
        uint64_t v31 = (double *)j;
        do
        {
          *(void *)k = v30;
          *(void *)uint64_t v31 = v23;
          uint64_t v32 = *(void *)(k + 8);
          *(double *)(k + 8) = v31[1];
          *((void *)v31 + 1) = v32;
          do
          {
            do
            {
              char v33 = *(void *)(k + 16);
              k += 16;
              uint64_t v23 = v33;
            }
            while (v33 < v18);
          }
          while (v18 >= v23 && *(double *)(k + 8) < v21);
          do
          {
            uint64_t v34 = *((void *)v31 - 2);
            v31 -= 2;
            uint64_t v30 = v34;
          }
          while (v34 >= v18 && (v18 < v30 || v31[1] >= v21));
        }
        while (k < (unint64_t)v31);
      }
      if ((unint64_t *)(k - 16) != a1)
      {
        *a1 = *(void *)(k - 16);
        a1[1] = *(void *)(k - 8);
      }
      *(void *)(k - 16) = v18;
      *(double *)(k - 8) = v21;
      if ((unint64_t)i < j) {
        goto LABEL_50;
      }
      os_signpost_id_t v35 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *>((uint64_t)a1, k - 16);
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *>(k, a2))
      {
        a2 = k - 16;
        if (v35) {
          return;
        }
        goto LABEL_1;
      }
      if (!v35)
      {
LABEL_50:
        std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *,false>(a1, k - 16, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      if (v18 < v19)
      {
        uint64_t v20 = *((double *)a1 + 1);
      }
      else
      {
        uint64_t v20 = *((double *)a1 + 1);
        if (*((double *)a1 - 1) < v20) {
          goto LABEL_13;
        }
      }
      uint64_t v36 = *v10;
      if (v18 >= *v10 && (v36 < v18 || v20 >= *(double *)(a2 - 8)))
      {
        for (k = (unint64_t)(a1 + 2);
              k < a2 && v18 >= *(void *)k && (*(void *)k < v18 || v20 >= *(double *)(k + 8));
      }
      else
      {
        k = (unint64_t)a1;
        do
        {
          uint64_t v38 = *(void *)(k + 16);
          k += 16;
          uint64_t v37 = v38;
        }
        while (v18 >= v38 && (v37 < v18 || v20 >= *(double *)(k + 8)));
      }
      m = a2;
      if (k < a2)
      {
        for (m = a2 - 16; v18 < v36 || v36 >= v18 && v20 < *(double *)(m + 8); m -= 16)
        {
          uint64_t v40 = *(void *)(m - 16);
          uint64_t v36 = v40;
        }
      }
      if (k < m)
      {
        uint64_t v41 = *(void *)k;
        uint64_t v42 = *(void *)m;
        do
        {
          *(void *)k = v42;
          *(void *)m = v41;
          os_signpost_type_t v43 = *(void *)(k + 16);
          k += 16;
          uint64_t v41 = v43;
          int v44 = *(void *)(k - 8);
          *(void *)(k - 8) = *(void *)(m + 8);
          *(void *)(m + 8) = v44;
          while (v18 >= v41 && (v41 < v18 || v20 >= *(double *)(k + 8)))
          {
            uint64_t v45 = *(void *)(k + 16);
            k += 16;
            uint64_t v41 = v45;
          }
          do
          {
            do
            {
              uint64_t v46 = *(void *)(m - 16);
              m -= 16;
              uint64_t v42 = v46;
            }
            while (v18 < v46);
          }
          while (v42 >= v18 && v20 < *(double *)(m + 8));
        }
        while (k < m);
      }
      uint64_t v4 = k - 16 >= (unint64_t)a1;
      uint64_t v5 = k - 16 == (void)a1;
      if ((unint64_t *)(k - 16) != a1)
      {
        *a1 = *(void *)(k - 16);
        a1[1] = *(void *)(k - 8);
      }
      a4 = 0;
      *(void *)(k - 16) = v18;
      *(double *)(k - 8) = v20;
    }
  }
  if (k != a2)
  {
    os_signpost_id_t v66 = (v13 - 2) >> 1;
    uint64_t v67 = v66;
    while (2)
    {
      uint64_t v68 = v67;
      if (v66 >= v67)
      {
        uint64_t v69 = (2 * v67) | 1;
        uint64_t v70 = k + 16 * v69;
        if (2 * v68 + 2 < (uint64_t)v13)
        {
          uint64_t v71 = *(void *)(v70 + 16);
          if (*(void *)v70 < v71 || v71 >= *(void *)v70 && *(double *)(k + 16 * v69 + 8) < *(double *)(v70 + 24))
          {
            v70 += 16;
            uint64_t v69 = 2 * v68 + 2;
          }
        }
        uint64_t v72 = k + 16 * v68;
        uint64_t v73 = *(void *)v70;
        int v74 = *(void *)v72;
        if (*(void *)v70 >= *(void *)v72)
        {
          if (v74 < v73)
          {
            uint64_t v75 = *(double *)(v72 + 8);
            uint64_t v76 = *(double *)(v70 + 8);
            goto LABEL_137;
          }
          uint64_t v76 = *(double *)(v70 + 8);
          uint64_t v75 = *(double *)(k + 16 * v68 + 8);
          if (v76 >= v75)
          {
LABEL_137:
            *(void *)uint64_t v72 = v73;
            *(double *)(v72 + 8) = v76;
            if (v66 >= v69)
            {
              while (1)
              {
                uint64_t v78 = 2 * v69;
                uint64_t v69 = (2 * v69) | 1;
                uint64_t v77 = k + 16 * v69;
                uint64_t v79 = v78 + 2;
                if (v79 < (uint64_t)v13)
                {
                  os_signpost_id_t v80 = *(void *)(v77 + 16);
                  if (*(void *)v77 < v80
                    || v80 >= *(void *)v77 && *(double *)(k + 16 * v69 + 8) < *(double *)(v77 + 24))
                  {
                    v77 += 16;
                    uint64_t v69 = v79;
                  }
                }
                uint64_t v81 = *(void *)v77;
                if (*(void *)v77 < v74) {
                  break;
                }
                uint64_t v82 = *(double *)(v77 + 8);
                if (v74 >= v81 && v82 < v75) {
                  break;
                }
                *(void *)uint64_t v70 = v81;
                *(double *)(v70 + 8) = v82;
                uint64_t v70 = v77;
                if (v66 < v69) {
                  goto LABEL_139;
                }
              }
            }
            uint64_t v77 = v70;
LABEL_139:
            *(void *)uint64_t v77 = v74;
            *(double *)(v77 + 8) = v75;
          }
        }
      }
      uint64_t v67 = v68 - 1;
      if (v68) {
        continue;
      }
      break;
    }
    uint64_t v91 = (unint64_t)v12 >> 4;
    while (2)
    {
      unint64_t v92 = 0;
      unint64_t v93 = *(void *)k;
      char v94 = *(double *)(k + 8);
      unint64_t v95 = v91 - 2;
      if (v91 < 2) {
        unint64_t v95 = v91 - 1;
      }
      uint64_t v96 = v95 >> 1;
      unint64_t v97 = k;
      do
      {
        uint64_t v98 = (void *)v97;
        uint64_t v99 = v92 + 1;
        v97 += 16 * (v92 + 1);
        unint64_t v100 = 2 * v92;
        unint64_t v92 = (2 * v92) | 1;
        uint64_t v101 = v100 + 2;
        if (v101 < v91)
        {
          unint64_t v102 = *(void *)(v97 + 16);
          if (*(void *)v97 < v102 || v102 >= *(void *)v97 && *(double *)&v98[2 * v99 + 1] < *(double *)(v97 + 24))
          {
            v97 += 16;
            unint64_t v92 = v101;
          }
        }
        *uint64_t v98 = *(void *)v97;
        v98[1] = *(void *)(v97 + 8);
      }
      while (v92 <= v96);
      if (v97 != a2 - 16)
      {
        *(void *)unint64_t v97 = *(void *)(a2 - 16);
        *(void *)(v97 + 8) = *(void *)(a2 - 8);
        *(void *)(a2 - 16) = v93;
        *(double *)(a2 - 8) = v94;
        long long v103 = v97 - k + 16;
        if (v103 < 17) {
          goto LABEL_189;
        }
        unint64_t v104 = (v103 >> 4) - 2;
        unint64_t v105 = v104 >> 1;
        uint64_t v106 = k + 16 * (v104 >> 1);
        uint64_t v107 = *(void *)v106;
        unint64_t v93 = *(void *)v97;
        if (*(void *)v106 < *(void *)v97)
        {
          char v94 = *(double *)(v97 + 8);
          uint64_t v108 = *(double *)(v106 + 8);
          goto LABEL_181;
        }
        if (v93 < v107 || (v108 = *(double *)(k + 16 * v105 + 8), char v94 = *(double *)(v97 + 8), v108 >= v94))
        {
LABEL_189:
          a2 -= 16;
          if (v91-- <= 2) {
            return;
          }
          continue;
        }
LABEL_181:
        *(void *)unint64_t v97 = v107;
        *(double *)(v97 + 8) = v108;
        if (v104 >= 2)
        {
          while (1)
          {
            long long v109 = v105 - 1;
            unint64_t v105 = (v105 - 1) >> 1;
            unint64_t v97 = k + 16 * v105;
            unint64_t v110 = *(void *)v97;
            if (*(void *)v97 >= v93)
            {
              if (v93 < v110) {
                break;
              }
              uint64_t v111 = *(double *)(k + 16 * v105 + 8);
              if (v111 >= v94) {
                break;
              }
            }
            else
            {
              uint64_t v111 = *(double *)(v97 + 8);
            }
            *(void *)uint64_t v106 = v110;
            *(double *)(v106 + 8) = v111;
            uint64_t v106 = k + 16 * v105;
            if (v109 <= 1) {
              goto LABEL_188;
            }
          }
        }
        unint64_t v97 = v106;
      }
      break;
    }
LABEL_188:
    *(void *)unint64_t v97 = v93;
    *(double *)(v97 + 8) = v94;
    goto LABEL_189;
  }
}

uint64_t sub_19E68BDDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t sub_19E68BE34(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_19E68BF10;
  return v6(a1);
}

uint64_t sub_19E68BF10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_19E68C008(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_19E66F708(0, v4, 0);
    uint64_t v7 = v26;
    uint64_t v8 = (unsigned __int8 *)(a1 + 41);
    uint64_t v23 = a2;
    while (1)
    {
      uint64_t v24 = v7;
      uint64_t v9 = v3;
      uint64_t v10 = *(void **)(v8 - 9);
      unsigned int v11 = *(v8 - 1);
      int v12 = *v8;
      uint64_t v13 = swift_bridgeObjectRetain();
      uint64_t v14 = (void *)MEMORY[0x19F3C1A40](v13);
      if (qword_1E945BB88 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)(qword_1E945D0B0 + 16);
      uint64_t v16 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
      int v17 = v12 ? 256 : 0;
      sub_19E694038(v15, v10, v17 | v11, 0, 1, &v25);
      if (v9) {
        break;
      }
      uint64_t v3 = 0;
      os_unfair_lock_unlock(v16);
      uint64_t v18 = v25;
      type metadata accessor for IOSurfaceStorage();
      uint64_t v19 = swift_allocObject();
      uint64_t v20 = v19;
      *(unsigned char *)(v19 + 32) = v11;
      *(unsigned char *)(v19 + 33) = v12;
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v10;
      uint64_t v7 = v24;
      if (v23)
      {
        *(void *)(v19 + 40) = v23;
        *(void *)(v19 + 48) = &off_1EF0C8480;
      }
      else
      {
        *(void *)(v19 + 40) = 0;
        *(void *)(v19 + 48) = 0;
      }
      *(void *)(v19 + 56) = sub_19E683340;
      *(void *)(v19 + 64) = 0;
      uint64_t v26 = v24;
      unint64_t v21 = *(void *)(v24 + 16);
      unint64_t v22 = *(void *)(v24 + 24);
      swift_retain();
      if (v21 >= v22 >> 1)
      {
        sub_19E66F708(v22 > 1, v21 + 1, 1);
        uint64_t v7 = v26;
      }
      *(void *)(v7 + 16) = v21 + 1;
      *(void *)(v7 + 8 * v21 + 32) = v20 | 0x4000000000000000;
      v8 += 16;
      if (!--v4) {
        return;
      }
    }
    os_unfair_lock_unlock(v16);
    __break(1u);
  }
}

void sub_19E68C21C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_19E66F708(0, v4, 0);
    uint64_t v7 = v29;
    uint64_t v8 = (unsigned __int8 *)(a1 + 41);
    uint64_t v26 = a2;
    while (1)
    {
      uint64_t v27 = v7;
      uint64_t v9 = v3;
      uint64_t v10 = *(void **)(v8 - 9);
      unsigned int v11 = *(v8 - 1);
      BOOL v12 = v11 > 8;
      int v13 = *v8;
      if (v11 <= 8) {
        int v14 = 10;
      }
      else {
        int v14 = *(v8 - 1);
      }
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = (void *)MEMORY[0x19F3C1A40](v15);
      if (qword_1E945BB88 != -1) {
        swift_once();
      }
      int v17 = v12 & v13;
      uint64_t v18 = (void *)(qword_1E945D0B0 + 16);
      uint64_t v19 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
      int v20 = v17 ? 256 : 0;
      sub_19E694038(v18, v10, v20 | v14, 0, 1, &v28);
      if (v9) {
        break;
      }
      uint64_t v3 = 0;
      os_unfair_lock_unlock(v19);
      uint64_t v21 = v28;
      type metadata accessor for IOSurfaceStorage();
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = v22;
      *(unsigned char *)(v22 + 32) = v14;
      *(unsigned char *)(v22 + 33) = v17;
      *(void *)(v22 + 16) = v21;
      *(void *)(v22 + 24) = v10;
      uint64_t v7 = v27;
      if (v26)
      {
        *(void *)(v22 + 40) = v26;
        *(void *)(v22 + 48) = &off_1EF0C8480;
      }
      else
      {
        *(void *)(v22 + 40) = 0;
        *(void *)(v22 + 48) = 0;
      }
      *(void *)(v22 + 56) = sub_19E683340;
      *(void *)(v22 + 64) = 0;
      uint64_t v29 = v27;
      unint64_t v24 = *(void *)(v27 + 16);
      unint64_t v25 = *(void *)(v27 + 24);
      swift_retain();
      if (v24 >= v25 >> 1)
      {
        sub_19E66F708(v25 > 1, v24 + 1, 1);
        uint64_t v7 = v29;
      }
      *(void *)(v7 + 16) = v24 + 1;
      *(void *)(v7 + 8 * v24 + 32) = v23 | 0x4000000000000000;
      v8 += 16;
      if (!--v4) {
        return;
      }
    }
    os_unfair_lock_unlock(v19);
    __break(1u);
  }
}

uint64_t sub_19E68C444@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19E692A50(a1, v2, a2);
}

uint64_t *sub_19E68C460@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19E692FE8(a1, v2, a2);
}

void sub_19E68C47C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19E683B44(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_19E68C49C(uint64_t *a1)
{
  return sub_19E692B10(a1, v1);
}

double sub_19E68C4B8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 176) = 0xF000000000000007;
  return result;
}

uint64_t *sub_19E68C4E0(uint64_t *a1)
{
  sub_19E68C54C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

uint64_t sub_19E68C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if ((~a23 & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_19E68C568()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19E68C578(uint64_t a1, uint64_t a2)
{
  return sub_19E69DB6C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_19E68C584()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19E68C594()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_19E68C5A4(uint64_t a1, uint64_t a2)
{
  return sub_19E69D7DC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

uint64_t sub_19E68C5B0()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_19E68C5C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_19E68C608(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 25)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_19E697A98(a1, a2, *(void *)(v2 + 16), v3 | *(unsigned __int8 *)(v2 + 24), (long long *)(v2 + 32));
}

uint64_t sub_19E68C62C()
{
  return objectdestroy_25Tm(72);
}

uint64_t sub_19E68C634(uint64_t a1, uint64_t a2)
{
  return sub_19E6971D0(a1, a2, v2 + 16);
}

uint64_t sub_19E68C644(uint64_t a1, uint64_t a2)
{
  return sub_19E696744(a1, a2);
}

uint64_t objectdestroy_64Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19E68C694(uint64_t a1, uint64_t a2)
{
  return sub_19E696500(a1, a2);
}

uint64_t sub_19E68C6A4(uint64_t a1, uint64_t a2)
{
  return sub_19E69C06C(a1, a2, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 80));
}

uint64_t objectdestroy_90Tm()
{
  swift_bridgeObjectRelease();
  sub_19E61EFA8(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_19E68C718(uint64_t a1, uint64_t a2)
{
  return sub_19E69B6E0(a1, a2, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 64));
}

uint64_t objectdestroy_101Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E68C77C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v65 = a2;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D010);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v62 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[0] = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v71 = a1;
  if (v6)
  {
    uint64_t v61 = v2;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = v73[0];
    uint64_t v70 = v6;
    while (1)
    {
      unint64_t v9 = *(void *)(a1 + 8 * v7++ + 32);
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v10 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v11 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          goto LABEL_9;
        case 2uLL:
          goto LABEL_5;
        case 3uLL:
          swift_retain();
          uint64_t v10 = sub_19E6C4398();
          uint64_t v11 = v12;
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_4;
        default:
          uint64_t v10 = *(void *)(v9 + 24);
          uint64_t v11 = *(void *)(v9 + 32);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v10) {
            goto LABEL_4;
          }
LABEL_12:
          uint64_t ObjectType = swift_getObjectType();
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11) & 1) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
            uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
            uint64_t v16 = v15(ObjectType, v11);
            if (*(void *)(v8 + 16))
            {
              unint64_t v17 = sub_19E6628BC(v16);
              if (v18)
              {
                uint64_t v19 = *(void *)(v8 + 56) + 16 * v17;
                uint64_t v69 = v8;
                uint64_t v20 = *(void *)(v19 + 8);
                uint64_t v67 = swift_getObjectType();
                unint64_t v68 = v14;
                os_signpost_id_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
                swift_unknownObjectRetain();
                uint64_t v21 = v20;
                uint64_t v8 = v69;
                unint64_t v22 = v66(v67, v21);
                swift_unknownObjectRelease();
                if (v68 < v22)
                {
                  swift_unknownObjectRelease();
LABEL_29:
                  swift_release();
                  uint64_t v6 = v70;
                  a1 = v71;
                  goto LABEL_5;
                }
              }
            }
            uint64_t v23 = v15(ObjectType, v11);
            swift_unknownObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v72 = (void *)v8;
            unint64_t v26 = sub_19E6628BC(v23);
            uint64_t v27 = v8;
            uint64_t v28 = *(void *)(v8 + 16);
            BOOL v29 = (v25 & 1) == 0;
            uint64_t v30 = v28 + v29;
            if (__OFADD__(v28, v29))
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              sub_19EBF7408();
              __break(1u);
LABEL_39:
              sub_19EBF7008();
              if (qword_1E945BB28 != -1) {
                swift_once();
              }
              if (byte_1E946A4F1 == 1)
              {
                v73[0] = 0;
                v73[1] = 0xE000000000000000;
                sub_19EBF6FE8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
                sub_19EBF67D8();
              }
              sub_19EBF71F8();
              __break(1u);
              JUMPOUT(0x19E68CFCCLL);
            }
            char v31 = v25;
            if (*(void *)(v27 + 24) >= v30)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t v34 = v72;
                if ((v25 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              else
              {
                sub_19E666758();
                uint64_t v34 = v72;
                if ((v31 & 1) == 0) {
                  goto LABEL_26;
                }
              }
            }
            else
            {
              sub_19E663F1C(v30, isUniquelyReferenced_nonNull_native);
              unint64_t v32 = sub_19E6628BC(v23);
              if ((v31 & 1) != (v33 & 1)) {
                goto LABEL_38;
              }
              unint64_t v26 = v32;
              uint64_t v34 = v72;
              if ((v31 & 1) == 0)
              {
LABEL_26:
                v34[(v26 >> 6) + 8] |= 1 << v26;
                *(void *)(v34[6] + 8 * v26) = v23;
                uint64_t v36 = (uint64_t *)(v34[7] + 16 * v26);
                *uint64_t v36 = v10;
                v36[1] = v11;
                uint64_t v37 = v34[2];
                BOOL v38 = __OFADD__(v37, 1);
                uint64_t v39 = v37 + 1;
                if (v38) {
                  goto LABEL_37;
                }
                uint64_t v8 = (uint64_t)v34;
                v34[2] = v39;
                goto LABEL_28;
              }
            }
            os_signpost_id_t v35 = (uint64_t *)(v34[7] + 16 * v26);
            swift_unknownObjectRelease();
            uint64_t *v35 = v10;
            v35[1] = v11;
            uint64_t v8 = (uint64_t)v34;
LABEL_28:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          swift_unknownObjectRelease();
LABEL_4:
          swift_release();
LABEL_5:
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v61;
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_19E5DE088(v40);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v41 + 16))
  {
    uint64_t v42 = *(os_unfair_lock_s **)(*(void *)(v3 + 16) + 40);
    os_signpost_type_t v43 = (uint64_t *)&v42[4];
    int v44 = v42 + 6;
    os_unfair_lock_lock(v42 + 6);
    sub_19E68C444((uint64_t)v43, v73);
    os_unfair_lock_unlock(v44);
    if (!v73[0]) {
      goto LABEL_39;
    }
    uint64_t v45 = *(void *)(v73[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v45 + 24));
    sub_19E68C460((uint64_t *)(v45 + 16), v73);
    os_unfair_lock_unlock((os_unfair_lock_t)(v45 + 24));
    uint64_t v46 = v73[0];
    swift_release();
    swift_retain();
    swift_retain();
    sub_19E68C008(v65, v46);
    uint64_t v48 = v47;
    swift_release();
    swift_release();
    uint64_t v49 = v71;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_19E69E1D8(v49);
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_19E69E488(v48);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t v52 = (void *)swift_allocObject();
    uint64_t v53 = v3;
    uint64_t v54 = (uint64_t)v52;
    v52[2] = v50;
    v52[3] = v51;
    v52[4] = v41;
    v52[5] = v46;
    v52[6] = sub_19E68DD80;
    v52[7] = 0;
    __swift_project_boxed_opaque_existential_1((void *)(v53 + 24), *(void *)(v53 + 48));
    v73[0] = v54;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D018);
    uint64_t v55 = v62;
    sub_19EBF6A48();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v64);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v44);
    sub_19E68C49C(v43);
    os_unfair_lock_unlock(v44);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19E68C008(v65, 0);
    uint64_t v48 = v56;
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = sub_19E69E1D8(a1);
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_19E69E488(v48);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v57;
    inited[3] = v58;
    inited[4] = v41;
    inited[5] = 0;
    inited[6] = sub_19E68DD80;
    inited[7] = 0;
    sub_19E6868FC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return v48;
}

uint64_t sub_19E68CFDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C710);
    uint64_t v3 = sub_19EBF6FD8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = sub_19EBF7468();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_19E68D0EC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19E686774(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_19E68D10C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 106, 7);
}

uint64_t sub_19E68D174(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 89)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  if (*(unsigned char *)(v2 + 105)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_19E69A0A0(a1, a2, v2 + 16, *(void **)(v2 + 80), (void *)(v3 | *(unsigned __int8 *)(v2 + 88)), *(void *)(v2 + 96), v4 | *(unsigned __int8 *)(v2 + 104));
}

uint64_t sub_19E68D1B0()
{
  return objectdestroy_25Tm(48);
}

uint64_t sub_19E68D1BC()
{
  return objectdestroy_25Tm(48);
}

uint64_t sub_19E68D1C4(uint64_t a1, uint64_t a2)
{
  return sub_19E68D970(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_19E68D1D4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D1E4(uint64_t a1, uint64_t a2)
{
  return sub_19E68D6D0(a1, a2);
}

uint64_t sub_19E68D1EC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D200(uint64_t a1, void *a2)
{
  return sub_19E699E1C(a1, a2);
}

uint64_t sub_19E68D210(uint64_t a1, uint64_t a2)
{
  return sub_19E695E78(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t objectdestroy_161Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_19E68D268(uint64_t a1, uint64_t a2)
{
  return sub_19E68E6E0(a1, a2, (unsigned __int8 *)(v2 + 16));
}

uint64_t objectdestroy_172Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19E68D2B4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D2C4(uint64_t a1, uint64_t a2)
{
  return sub_19E6932E4(a1, a2);
}

uint64_t sub_19E68D2CC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D2DC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D2EC(uint64_t a1, uint64_t a2)
{
  return sub_19E68E9B8(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19E68D2F4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D304()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D314(uint64_t a1, uint64_t a2)
{
  return sub_19E69230C(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19E68D31C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D32C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D33C(uint64_t a1, uint64_t a2)
{
  return sub_19E691D10(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19E68D344()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19E68D354(uint64_t a1)
{
  return sub_19E687824(a1, *(void *)(v1 + 16));
}

uint64_t sub_19E68D35C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D030);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_19E68D42C(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E945D030) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_19E635084;
  return sub_19E6878F4(a1, v5, v6, v7);
}

uint64_t sub_19E68D51C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_19E68D578()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19E68D5B0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19E635084;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E945D050 + dword_1E945D050);
  return v6(a1, v4);
}

void sub_19E68D680(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_19E68D698(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_19E68D6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = v23;
  long long v4 = *(_OWORD *)(a1 + 160);
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v6 = *(_OWORD *)(a1 + 128);
  v23[7] = *(_OWORD *)(a1 + 144);
  v23[8] = v4;
  long long v7 = *(_OWORD *)(a1 + 192);
  v23[9] = v5;
  v23[10] = v7;
  long long v8 = *(_OWORD *)(a1 + 112);
  v23[4] = *(_OWORD *)(a1 + 96);
  v23[5] = v8;
  v23[6] = v6;
  long long v9 = *(_OWORD *)(a1 + 48);
  v23[0] = *(_OWORD *)(a1 + 32);
  v23[1] = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  void v23[2] = *(_OWORD *)(a1 + 64);
  v23[3] = v10;
  if (v3 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  long long v12 = *(_OWORD *)(a1 + 352);
  v23[19] = *(_OWORD *)(a1 + 336);
  v23[20] = v12;
  v23[21] = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 288);
  v23[15] = *(_OWORD *)(a1 + 272);
  v23[16] = v13;
  long long v14 = *(_OWORD *)(a1 + 320);
  v23[17] = *(_OWORD *)(a1 + 304);
  v23[18] = v14;
  long long v15 = *(_OWORD *)(a1 + 224);
  v23[11] = *(_OWORD *)(a1 + 208);
  v23[12] = v15;
  long long v16 = *(_OWORD *)(a1 + 256);
  v23[13] = *(_OWORD *)(a1 + 240);
  v23[14] = v16;
  sub_19EBF6038();
  if (*(void *)(a2 + 16))
  {
    long long v17 = *(_OWORD *)(a2 + 176);
    v23[30] = *(_OWORD *)(a2 + 160);
    v23[31] = v17;
    v23[32] = *(_OWORD *)(a2 + 192);
    long long v18 = *(_OWORD *)(a2 + 112);
    v23[26] = *(_OWORD *)(a2 + 96);
    v23[27] = v18;
    long long v19 = *(_OWORD *)(a2 + 144);
    v23[28] = *(_OWORD *)(a2 + 128);
    v23[29] = v19;
    long long v20 = *(_OWORD *)(a2 + 48);
    v23[22] = *(_OWORD *)(a2 + 32);
    v23[23] = v20;
    long long v21 = *(_OWORD *)(a2 + 80);
    v23[24] = *(_OWORD *)(a2 + 64);
    v23[25] = v21;
    return sub_19EBF61B8();
  }
LABEL_7:
  __break(1u);

  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E68D970(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_19EBF5FF8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  long long v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  long long v12 = &v25[-v11];
  long long v13 = (unsigned int *)MEMORY[0x1E4FBAA68];
  if (a3) {
    long long v13 = (unsigned int *)MEMORY[0x1E4FBAA70];
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v10, *v13, v6);
  sub_19EBF5F88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v12, v10, v6);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)(a1 + 176);
  long long v36 = *(_OWORD *)(a1 + 160);
  long long v37 = v14;
  long long v38 = *(_OWORD *)(a1 + 192);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v32 = *(_OWORD *)(a1 + 96);
  long long v33 = v15;
  long long v16 = *(_OWORD *)(a1 + 144);
  long long v34 = *(_OWORD *)(a1 + 128);
  long long v35 = v16;
  long long v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v28[184] = *(_OWORD *)(a1 + 32);
  long long v29 = v17;
  long long v18 = *(_OWORD *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 64);
  long long v31 = v18;
  if (!*(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  long long v19 = *(_OWORD *)(a2 + 176);
  long long v47 = *(_OWORD *)(a2 + 160);
  long long v48 = v19;
  long long v49 = *(_OWORD *)(a2 + 192);
  long long v20 = *(_OWORD *)(a2 + 112);
  long long v43 = *(_OWORD *)(a2 + 96);
  long long v44 = v20;
  long long v21 = *(_OWORD *)(a2 + 144);
  long long v45 = *(_OWORD *)(a2 + 128);
  long long v46 = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  long long v39 = *(_OWORD *)(a2 + 32);
  long long v40 = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  long long v41 = *(_OWORD *)(a2 + 64);
  long long v42 = v23;
  sub_19E5E7C78((uint64_t)v28);
  sub_19E68DD18((uint64_t)v28, (uint64_t)&v50);
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF5F78())
  {
    sub_19EBF5ED8();
    return swift_release();
  }
LABEL_9:
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    v25[23] = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E68DD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E68DD80(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    sub_19EBF6038();
    if (*(void *)(a2 + 16)) {
      return sub_19EBF61B8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E68DFA4()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19E68DFC4, 0, 0);
}

uint64_t sub_19E68DFC4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[3] = v2;
  swift_unownedRetainStrong();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = swift_task_alloc();
  v0[4] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  long long v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *long long v5 = v0;
  v5[1] = sub_19E63FF0C;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_19E68E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v11 = *(void **)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 48);
  aBlock[4] = sub_19E640544;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E68E654;
  aBlock[3] = &block_descriptor_6;
  long long v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_notifyListener_atValue_block_, v12, a3, v13);
  _Block_release(v13);
  return swift_release();
}

uint64_t sub_19E68E29C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  uint64_t v4 = *(void *)(v3 + 40);
  swift_unknownObjectRetain();
  swift_release();
  if (v4)
  {
    objc_msgSend(a1, sel_encodeWaitForEvent_value_, v4, *(void *)(v1 + 24));
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for IOSurfaceAsyncEvent()
{
  return self;
}

uint64_t sub_19E68E470()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_unownedRetainStrong();
  uint64_t v2 = *(void *)(v1 + 40);
  swift_unknownObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_19E68E4B0()
{
  uint64_t v0 = *(void *)(swift_unownedRetainStrong() + 24);
  swift_release();
  return v0;
}

uint64_t sub_19E68E4E0()
{
  uint64_t v0 = *(void *)(swift_unownedRetainStrong() + 56);
  swift_release();
  return v0;
}

uint64_t sub_19E68E510()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_19E635084;
  v2[2] = v0;
  return MEMORY[0x1F4188298](sub_19E68DFC4, 0, 0);
}

uint64_t sub_19E68E5B8(uint64_t a1)
{
  return sub_19E68E0CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19E68E5C0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_19E68E654(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_19E68E6E0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_19EBF60F8();
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v7 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = (void *)*a3;
  if (!*(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);

    goto LABEL_11;
  }
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF60E8())
  {
    sub_19EBF60D8();
    return swift_release();
  }
LABEL_11:
  uint64_t v9 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E68E9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19EBF6018();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_19EBF60C8();
  uint64_t v9 = *(void *)(v46 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v46);
  long long v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v48 = (char *)v42 - v12;
  uint64_t v13 = sub_19EBF5F68();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  long long v47 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  long long v19 = (char *)v42 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = *(void *)(a1 + 16);
  if (!v21)
  {
    __break(1u);
    goto LABEL_7;
  }
  long long v43 = v8;
  uint64_t v44 = a3;
  long long v22 = *(_OWORD *)(a1 + 176);
  long long v62 = *(_OWORD *)(a1 + 160);
  long long v63 = v22;
  long long v64 = *(_OWORD *)(a1 + 192);
  long long v23 = *(_OWORD *)(a1 + 112);
  long long v58 = *(_OWORD *)(a1 + 96);
  long long v59 = v23;
  long long v24 = *(_OWORD *)(a1 + 144);
  long long v60 = *(_OWORD *)(a1 + 128);
  long long v61 = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  long long v54 = *(_OWORD *)(a1 + 32);
  long long v55 = v25;
  long long v26 = *(_OWORD *)(a1 + 80);
  long long v56 = *(_OWORD *)(a1 + 64);
  long long v57 = v26;
  uint64_t v27 = *MEMORY[0x1E4FBAA58];
  uint64_t v28 = *(void (**)(void))(v14 + 104);
  v42[1] = (char *)v42 - v20;
  v28();
  if (v21 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  long long v29 = *(_OWORD *)(a1 + 352);
  long long v73 = *(_OWORD *)(a1 + 336);
  long long v74 = v29;
  long long v75 = *(_OWORD *)(a1 + 368);
  long long v30 = *(_OWORD *)(a1 + 288);
  long long v69 = *(_OWORD *)(a1 + 272);
  long long v70 = v30;
  long long v31 = *(_OWORD *)(a1 + 320);
  long long v71 = *(_OWORD *)(a1 + 304);
  long long v72 = v31;
  long long v32 = *(_OWORD *)(a1 + 224);
  long long v65 = *(_OWORD *)(a1 + 208);
  long long v66 = v32;
  long long v33 = *(_OWORD *)(a1 + 256);
  long long v67 = *(_OWORD *)(a1 + 240);
  long long v68 = v33;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v19, v27, v13);
  if (!*(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      char v51 = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E68F05CLL);
  }
  long long v34 = *(_OWORD *)(a2 + 176);
  long long v84 = *(_OWORD *)(a2 + 160);
  long long v85 = v34;
  long long v86 = *(_OWORD *)(a2 + 192);
  long long v35 = *(_OWORD *)(a2 + 112);
  long long v80 = *(_OWORD *)(a2 + 96);
  long long v81 = v35;
  long long v36 = *(_OWORD *)(a2 + 144);
  long long v82 = *(_OWORD *)(a2 + 128);
  long long v83 = v36;
  long long v37 = *(_OWORD *)(a2 + 48);
  long long v76 = *(_OWORD *)(a2 + 32);
  long long v77 = v37;
  long long v38 = *(_OWORD *)(a2 + 80);
  long long v78 = *(_OWORD *)(a2 + 64);
  long long v79 = v38;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v47, v27, v13);
  long long v40 = v45;
  uint64_t v39 = v46;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v45, **((unsigned int **)&unk_1E59A35A8 + (char)v44), v46);
  sub_19EBF60A8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v48, v40, v39);
  sub_19EBF6E08();
  sub_19EBF6D88();
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v43, *MEMORY[0x1E4FBAA88], v50);
  if (!sub_19EBF6098()) {
    goto LABEL_9;
  }
  sub_19EBF6088();
  return swift_release();
}

uint64_t sub_19E68F09C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v20[0] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19EBF5EC8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v20 - v13;
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = a1;
    if (a2) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v16 = 0;
    goto LABEL_7;
  }
  uint64_t v15 = &unk_1EF0C5528;
  if (!a2) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v16 = a2;
  if (!a2[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = &unk_1EF0C5500;
  }
LABEL_7:
  unint64_t v17 = v15[2] - 1;
  if (v17 >= 8)
  {
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_19EBF6FE8();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001ALL;
    unint64_t v22 = 0x800000019EC0AF80;
    v20[1] = a1[2];
    sub_19EBF7318();
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  else
  {
    uint64_t v18 = (unsigned int *)*(&off_1E59A35E8 + v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *v18, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
    if (v16) {
      sub_19E602940((uint64_t)v16);
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v14, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if (a2) {
      swift_bridgeObjectRetain();
    }
    sub_19EBF6198();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19E68F4AC()
{
  sub_19EBF6178();
  uint64_t v0 = v21;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v21)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_19E66F600(0, 1, 1);
    uint64_t result = v22;
    unint64_t v3 = *(void *)(v22 + 16);
    unint64_t v2 = *(void *)(v22 + 24);
    unint64_t v4 = v3 + 1;
    if (v3 >= v2 >> 1)
    {
      sub_19E66F600(v2 > 1, v3 + 1, 1);
      uint64_t result = v22;
    }
    *(void *)(result + 16) = v4;
    *(void *)(result + 8 * v3 + 32) = v0;
    if (v30)
    {
      uint64_t v23 = result;
      unint64_t v5 = *(void *)(result + 24);
      if (v4 >= v5 >> 1)
      {
        sub_19E66F600(v5 > 1, v3 + 2, 1);
        uint64_t result = v23;
      }
      *(void *)(result + 16) = v3 + 2;
      *(void *)(result + 8 * v4 + 32) = v30;
      if (v31)
      {
        uint64_t v24 = result;
        unint64_t v7 = *(void *)(result + 16);
        unint64_t v6 = *(void *)(result + 24);
        unint64_t v8 = v7 + 1;
        if (v7 >= v6 >> 1)
        {
          sub_19E66F600(v6 > 1, v7 + 1, 1);
          uint64_t result = v24;
        }
        *(void *)(result + 16) = v8;
        *(void *)(result + 8 * v7 + 32) = v31;
        if (v32)
        {
          uint64_t v25 = result;
          unint64_t v9 = *(void *)(result + 24);
          int64_t v10 = v7 + 2;
          if (v8 >= v9 >> 1)
          {
            sub_19E66F600(v9 > 1, v10, 1);
            uint64_t result = v25;
          }
          *(void *)(result + 16) = v10;
          *(void *)(result + 8 * v8 + 32) = v32;
          if (v33)
          {
            uint64_t v26 = result;
            unint64_t v12 = *(void *)(result + 16);
            unint64_t v11 = *(void *)(result + 24);
            unint64_t v13 = v12 + 1;
            if (v12 >= v11 >> 1)
            {
              sub_19E66F600(v11 > 1, v12 + 1, 1);
              uint64_t result = v26;
            }
            *(void *)(result + 16) = v13;
            *(void *)(result + 8 * v12 + 32) = v33;
            if (v34)
            {
              uint64_t v27 = result;
              unint64_t v14 = *(void *)(result + 24);
              int64_t v15 = v12 + 2;
              if (v13 >= v14 >> 1)
              {
                sub_19E66F600(v14 > 1, v15, 1);
                uint64_t result = v27;
              }
              *(void *)(result + 16) = v15;
              *(void *)(result + 8 * v13 + 32) = v34;
              if (v35)
              {
                uint64_t v28 = result;
                unint64_t v17 = *(void *)(result + 16);
                unint64_t v16 = *(void *)(result + 24);
                unint64_t v18 = v17 + 1;
                if (v17 >= v16 >> 1)
                {
                  sub_19E66F600(v16 > 1, v17 + 1, 1);
                  uint64_t result = v28;
                }
                *(void *)(result + 16) = v18;
                *(void *)(result + 8 * v17 + 32) = v35;
                if (v36)
                {
                  uint64_t v29 = result;
                  unint64_t v19 = *(void *)(result + 24);
                  int64_t v20 = v17 + 2;
                  if (v18 >= v19 >> 1)
                  {
                    sub_19E66F600(v19 > 1, v20, 1);
                    uint64_t result = v29;
                  }
                  *(void *)(result + 16) = v20;
                  *(void *)(result + 8 * v18 + 32) = v36;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_19E68F77C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
    uint64_t result = swift_allocObject();
    uint64_t v7 = 0;
    *(_OWORD *)(result + 16) = xmmword_19EC36240;
    uint64_t v8 = 1;
    while (1)
    {
      uint64_t v9 = *(void *)(a1 + 8 * v7 + 32);
      uint64_t v10 = v8 * v9;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 != (v8 * v9) >> 63) {
        break;
      }
      v8 *= v9;
      if (v5 == ++v7)
      {
        *(void *)(result + 32) = v10;
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!qword_1EF0C54E8) {
LABEL_6:
    }
      swift_bridgeObjectRelease();
    uint64_t v11 = sub_19EBF5EC8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    return sub_19EBF6198();
  }
  return result;
}

uint64_t sub_19E68F8F0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19EBF5EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)v18 - v12;
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = a1;
  }
  else
  {
    unint64_t v14 = &unk_1EF0C5578;
  }
  unint64_t v15 = v14[2] - 1;
  if (v15 >= 8)
  {
    unint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    sub_19EBF6FE8();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD00000000000001ALL;
    unint64_t v20 = 0x800000019EC0AF80;
    v18[1] = a1[2];
    sub_19EBF7318();
    sub_19EBF67D8();
    swift_bridgeObjectRelease();
    sub_19EBF67D8();
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  else
  {
    unint64_t v16 = (unsigned int *)*(&off_1E59A3628 + v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    sub_19E602940((uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v13, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if (a2)
    {
      if (*(void *)(a2 + 16)) {
        sub_19E602940(a2);
      }
      else {
        swift_bridgeObjectRelease();
      }
    }
    sub_19EBF6198();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_19E68FCE0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v40 - v10;
  if (a1[2])
  {
    long long v43 = v9;
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    a1 = &qword_1EF0C55C8;
    long long v43 = v9;
    if (a2)
    {
LABEL_3:
      uint64_t v12 = a2[2];
      swift_bridgeObjectRetain();
      unint64_t v13 = a2;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = &unk_1EF0C55A0;
      }
      goto LABEL_7;
    }
  }
  unint64_t v14 = a1[2];
  swift_bridgeObjectRetain();
  unint64_t v13 = (void *)sub_19E60F71C(0, v14);
LABEL_7:
  uint64_t v15 = sub_19EBF5EC8();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v11, 1, 1, v15);
  uint64_t v18 = a1[2];
  switch(v18)
  {
    case 1:
      sub_19E690328((uint64_t)v11);
      swift_bridgeObjectRelease();
      unint64_t v19 = (unsigned int *)MEMORY[0x1E4FBAA30];
      goto LABEL_17;
    case 2:
      long long v41 = a2;
      uint64_t v42 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
      uint64_t v18 = swift_allocObject();
      long long v40 = xmmword_19EC36240;
      *(_OWORD *)(v18 + 16) = xmmword_19EC36240;
      uint64_t v26 = a1[5];
      swift_bridgeObjectRelease();
      *(void *)(v18 + 32) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v40;
      if (v13[2] < 2uLL) {
        goto LABEL_39;
      }
      uint64_t v24 = (void *)v27;
      *(void *)(v27 + 32) = v13[5];
      swift_bridgeObjectRelease();
      sub_19E690328((uint64_t)v11);
      unint64_t v19 = (unsigned int *)MEMORY[0x1E4FBAA30];
      goto LABEL_16;
    case 3:
      long long v41 = a2;
      uint64_t v42 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
      uint64_t v18 = swift_allocObject();
      long long v40 = xmmword_19EC38490;
      long long v20 = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v18 + 16) = xmmword_19EC38490;
      *(_OWORD *)(v18 + 32) = v20;
      *(void *)(v18 + 48) = 1;
      uint64_t v21 = a1[6];
      swift_bridgeObjectRelease();
      *(void *)(v18 + 56) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v40;
      unint64_t v23 = v13[2];
      if (!v23)
      {
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v24 = (void *)v22;
      *(void *)(v22 + 32) = v13[4];
      if (v23 == 1)
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      uint64_t v25 = v13[5];
      *(void *)(v22 + 40) = v25;
      *(void *)(v22 + 48) = v25;
      if (v23 < 3)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        unint64_t v45 = 0;
        unint64_t v46 = 0xE000000000000000;
        sub_19EBF6FE8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v45 = 0xD000000000000012;
        unint64_t v46 = 0x800000019EC0AF60;
        uint64_t v44 = v18;
        sub_19EBF7318();
        sub_19EBF67D8();
        swift_bridgeObjectRelease();
        sub_19EBF71F8();
        __break(1u);
        JUMPOUT(0x19E690318);
      }
      *(void *)(v22 + 56) = v13[6];
      swift_bridgeObjectRelease();
      sub_19E690328((uint64_t)v11);
      unint64_t v19 = (unsigned int *)MEMORY[0x1E4FBAA38];
LABEL_16:
      a1 = (uint64_t *)v18;
      unint64_t v13 = v24;
      a2 = v41;
LABEL_17:
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v11, *v19, v15);
      v17(v11, 0, 1, v15);
      unint64_t v28 = a1[2];
      if (v28 < 4)
      {
        uint64_t v29 = (uint64_t)a1;
        uint64_t v30 = (uint64_t)v43;
        goto LABEL_32;
      }
      uint64_t v31 = a2;
      sub_19EBF73A8();
      swift_unknownObjectRetain_n();
      uint64_t v32 = swift_dynamicCastClass();
      if (!v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = MEMORY[0x1E4FBC860];
      }
      uint64_t v33 = *(void *)(v32 + 16);
      swift_release();
      if (v33 == v28 - 1)
      {
        uint64_t v29 = swift_dynamicCastClass();
        if (!v29)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_19E5DDDB0((uint64_t)a1, (uint64_t)(a1 + 4), 1, (2 * v28) | 1);
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = v13[2];
      if (!v34)
      {
        __break(1u);
LABEL_37:
        swift_bridgeObjectRelease();
        uint64_t v38 = sub_19E5DDDB0((uint64_t)v13, (uint64_t)(v13 + 4), 1, (2 * v34) | 1);
        a2 = v31;
        goto LABEL_31;
      }
      swift_unknownObjectRetain_n();
      uint64_t v35 = swift_dynamicCastClass();
      if (!v35)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = MEMORY[0x1E4FBC860];
      }
      uint64_t v36 = *(void *)(v35 + 16);
      swift_release();
      if (v36 != v34 - 1) {
        goto LABEL_37;
      }
      uint64_t v37 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      a2 = v31;
      if (v37)
      {
        unint64_t v13 = (void *)v37;
        uint64_t v30 = (uint64_t)v43;
        goto LABEL_32;
      }
      uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_31:
      uint64_t v30 = (uint64_t)v43;
      swift_bridgeObjectRelease();
      unint64_t v13 = (void *)v38;
LABEL_32:
      sub_19E602940(v29);
      swift_bridgeObjectRetain();
      sub_19E602940((uint64_t)v13);
      sub_19E690720((uint64_t)v11, v30);
      if (a2) {
        swift_bridgeObjectRetain();
      }
      sub_19EBF6198();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_19E690328((uint64_t)v11);
    case 4:
      sub_19E690328((uint64_t)v11);
      swift_bridgeObjectRelease();
      unint64_t v19 = (unsigned int *)MEMORY[0x1E4FBAA38];
      goto LABEL_17;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_19E690328(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19E690388(int a1)
{
  uint64_t result = 1;
  if (a1 >= 294912)
  {
    unsigned int v3 = a1 - 425984;
    if (a1 < 425984)
    {
      if ((a1 - 294912) < 2) {
        return 4;
      }
      if ((a1 - 360448) < 2) {
        return 5;
      }
    }
    else
    {
      unsigned int v4 = a1 - 491520;
      BOOL v5 = (a1 - 557056) >= 2;
      uint64_t v6 = 8;
      if (v5) {
        uint64_t v6 = 1;
      }
      if (v4 < 2) {
        uint64_t v6 = 7;
      }
      if (v3 >= 2) {
        return v6;
      }
      else {
        return 6;
      }
    }
  }
  else if (a1 < 196608)
  {
    if ((a1 - 0x20000) < 2 || (a1 - 163840) < 2) {
      return 2;
    }
  }
  else
  {
    if ((a1 - 196608) < 3 || (a1 - 229376) < 2) {
      return 3;
    }
    if (a1 == 0x40000) {
      return 4;
    }
  }
  return result;
}

uint64_t sub_19E690440(uint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      unsigned int v3 = v2 + 1;
      break;
    case 1:
      unsigned int v3 = v2 + 2;
      break;
    case 2:
      unsigned int v3 = v2 + 3;
      break;
    case 3:
      unsigned int v3 = v2 + 4;
      break;
    case 4:
      unsigned int v3 = v2 + 5;
      break;
    case 5:
      unsigned int v3 = v2 + 6;
      break;
    case 6:
      unsigned int v3 = v2 + 7;
      break;
    case 7:
      unsigned int v3 = v2 + 8;
      break;
    default:
      sub_19EBF6FE8();
      swift_bridgeObjectRelease();
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      sub_19EBF71F8();
      __break(1u);
      JUMPOUT(0x19E690590);
  }
  void *v3 = result;
  return result;
}

uint64_t sub_19E6905B0(uint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      unsigned int v3 = v2 + 9;
      break;
    case 1:
      unsigned int v3 = v2 + 10;
      break;
    case 2:
      unsigned int v3 = v2 + 11;
      break;
    case 3:
      unsigned int v3 = v2 + 12;
      break;
    case 4:
      unsigned int v3 = v2 + 13;
      break;
    case 5:
      unsigned int v3 = v2 + 14;
      break;
    case 6:
      unsigned int v3 = v2 + 15;
      break;
    case 7:
      unsigned int v3 = v2 + 16;
      break;
    default:
      sub_19EBF6FE8();
      swift_bridgeObjectRelease();
      sub_19EBF7318();
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      sub_19EBF71F8();
      __break(1u);
      JUMPOUT(0x19E690700);
  }
  void *v3 = result;
  return result;
}

uint64_t sub_19E690720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E690788@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a1;
  int v27 = a2;
  uint64_t v18 = a5;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_19EBF6188();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v17 = a3;
  v10(v9, a3, v6);
  int v11 = sub_19EBF6168();
  sub_19EBF6158();
  long long v23 = v32;
  long long v24 = v31;
  long long v22 = v33;
  long long v12 = v34;
  sub_19EBF6178();
  long long v20 = v32;
  long long v21 = v31;
  long long v19 = v33;
  long long v13 = v34;
  unint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  *(_DWORD *)unint64_t v28 = 0;
  *(_DWORD *)&v28[4] = v11;
  *(_OWORD *)&v28[8] = v24;
  *(_OWORD *)&v28[24] = v23;
  *(_OWORD *)&v28[40] = v22;
  *(_OWORD *)&v28[56] = v12;
  *(_OWORD *)&v28[72] = v21;
  *(_OWORD *)&v28[88] = v20;
  *(_OWORD *)&v28[104] = v19;
  *(_OWORD *)&v28[120] = v13;
  *(void *)&v28[136] = v26;
  LODWORD(v29) = v27;
  *((void *)&v29 + 1) = 0;
  LODWORD(v30) = v27;
  unint64_t v15 = *(void *)(v25 + 16);
  *(void *)((char *)&v30 + 4) = 1065353216;
  if (v15 >> 60) {
    __break(1u);
  }
  *(void *)&long long v31 = v25 + 32;
  *((void *)&v31 + 1) = v25 + 32 + 8 * v15;
  sub_19E690A14();
  sub_19EBF62C8();
  v14(v17, v6);
  long long v39 = *(_OWORD *)&v28[128];
  long long v40 = v29;
  long long v41 = v30;
  long long v35 = *(_OWORD *)&v28[64];
  long long v36 = *(_OWORD *)&v28[80];
  long long v37 = *(_OWORD *)&v28[96];
  long long v38 = *(_OWORD *)&v28[112];
  long long v31 = *(_OWORD *)v28;
  long long v32 = *(_OWORD *)&v28[16];
  long long v33 = *(_OWORD *)&v28[32];
  long long v34 = *(_OWORD *)&v28[48];
  sub_19E5E7CA0((uint64_t)&v31);
  return sub_19E5E7C14((uint64_t)&v31, v18, &qword_1E945C0D0);
}

unint64_t sub_19E690A14()
{
  unint64_t result = qword_1E945D600;
  if (!qword_1E945D600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945D600);
  }
  return result;
}

void sub_19E690A68(size_t a1, _OWORD *a2, _OWORD *a3, _OWORD *a4, _OWORD *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v94 = a8;
  unint64_t v92 = a7;
  *(void *)&long long v91 = a6;
  size_t v87 = a1;
  uint64_t v165 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = sub_19EBF6188();
  uint64_t v85 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  long long v84 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  long long v83 = (char *)&v80 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  long long v82 = (char *)&v80 - v19;
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v80 - v20;
  uint64_t v21 = sub_19EBF6018();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  long long v24 = a2[9];
  v107[8] = a2[8];
  v107[9] = v24;
  v107[10] = a2[10];
  long long v25 = a2[5];
  v107[4] = a2[4];
  v107[5] = v25;
  long long v26 = a2[7];
  v107[6] = a2[6];
  v107[7] = v26;
  long long v27 = a2[1];
  v107[0] = *a2;
  v107[1] = v27;
  long long v28 = a2[3];
  v107[2] = a2[2];
  v107[3] = v28;
  long long v29 = a3[6];
  *(_OWORD *)&v164[116] = a3[7];
  long long v30 = a3[9];
  *(_OWORD *)&v164[132] = a3[8];
  *(_OWORD *)&v164[148] = v30;
  *(_OWORD *)&v164[164] = a3[10];
  long long v31 = a3[2];
  *(_OWORD *)&v164[52] = a3[3];
  long long v32 = a3[5];
  *(_OWORD *)&v164[68] = a3[4];
  *(_OWORD *)&v164[84] = v32;
  *(_OWORD *)&v164[100] = v29;
  long long v33 = *a3;
  long long v34 = a3[1];
  uint64_t v90 = a3;
  *(_OWORD *)&v164[4] = v33;
  *(_OWORD *)&v164[20] = v34;
  *(_OWORD *)&v164[36] = v31;
  long long v35 = a4[6];
  *(_OWORD *)&v163[116] = a4[7];
  long long v36 = a4[9];
  *(_OWORD *)&v163[132] = a4[8];
  *(_OWORD *)&v163[148] = v36;
  *(_OWORD *)&v163[164] = a4[10];
  long long v37 = a4[2];
  *(_OWORD *)&v163[52] = a4[3];
  long long v38 = a4[5];
  *(_OWORD *)&v163[68] = a4[4];
  *(_OWORD *)&v163[84] = v38;
  *(_OWORD *)&v163[100] = v35;
  long long v39 = *a4;
  long long v40 = a4[1];
  uint64_t v89 = a4;
  *(_OWORD *)&v163[4] = v39;
  *(_OWORD *)&v163[20] = v40;
  *(_OWORD *)&v163[36] = v37;
  long long v41 = a5[6];
  *(_OWORD *)&v162[116] = a5[7];
  long long v42 = a5[9];
  *(_OWORD *)&v162[132] = a5[8];
  *(_OWORD *)&v162[148] = v42;
  *(_OWORD *)&v162[164] = a5[10];
  long long v43 = a5[2];
  *(_OWORD *)&v162[52] = a5[3];
  long long v44 = a5[5];
  *(_OWORD *)&v162[68] = a5[4];
  *(_OWORD *)&v162[84] = v44;
  *(_OWORD *)&v162[100] = v41;
  long long v45 = *a5;
  long long v46 = a5[1];
  uint64_t v88 = a5;
  *(_OWORD *)&v162[4] = v45;
  *(_OWORD *)&v162[20] = v46;
  *(_OWORD *)&v162[36] = v43;
  long long v118 = *(_OWORD *)&v164[144];
  long long v119 = *(_OWORD *)&v164[160];
  long long v114 = *(_OWORD *)&v164[80];
  long long v115 = *(_OWORD *)&v164[96];
  long long v116 = *(_OWORD *)&v164[112];
  long long v117 = *(_OWORD *)&v164[128];
  int v108 = 0;
  int v120 = *(_DWORD *)&v164[176];
  long long v113 = *(_OWORD *)&v164[64];
  long long v109 = *(_OWORD *)v164;
  long long v110 = *(_OWORD *)&v164[16];
  long long v111 = *(_OWORD *)&v164[32];
  long long v112 = *(_OWORD *)&v164[48];
  int v121 = 0;
  long long v130 = *(_OWORD *)&v163[128];
  long long v131 = *(_OWORD *)&v163[144];
  long long v132 = *(_OWORD *)&v163[160];
  long long v126 = *(_OWORD *)&v163[64];
  long long v127 = *(_OWORD *)&v163[80];
  long long v128 = *(_OWORD *)&v163[96];
  long long v129 = *(_OWORD *)&v163[112];
  long long v122 = *(_OWORD *)v163;
  long long v123 = *(_OWORD *)&v163[16];
  long long v124 = *(_OWORD *)&v163[32];
  long long v125 = *(_OWORD *)&v163[48];
  int v133 = *(_DWORD *)&v163[176];
  int v134 = 0;
  long long v143 = *(_OWORD *)&v162[128];
  long long v144 = *(_OWORD *)&v162[144];
  long long v145 = *(_OWORD *)&v162[160];
  long long v139 = *(_OWORD *)&v162[64];
  long long v140 = *(_OWORD *)&v162[80];
  long long v141 = *(_OWORD *)&v162[96];
  long long v142 = *(_OWORD *)&v162[112];
  long long v135 = *(_OWORD *)v162;
  long long v136 = *(_OWORD *)&v162[16];
  long long v137 = *(_OWORD *)&v162[32];
  long long v138 = *(_OWORD *)&v162[48];
  int v146 = *(_DWORD *)&v162[176];
  int v147 = 0;
  long long v47 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v48;
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v47, *MEMORY[0x1E4FBAA88], v48);
  sub_19EBF6008();
  int v50 = v148;
  int v51 = v151;
  long long v93 = v152;
  uint64_t v52 = v153;
  uint64_t v53 = v149;
  uint64_t v54 = v150;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v49);
  int v99 = 31;
  unint64_t v100 = v107;
  int v101 = v50;
  uint64_t v102 = v53;
  uint64_t v103 = v54;
  int v104 = v51;
  long long v105 = v93;
  uint64_t v106 = v52;
  if (v94 == 1)
  {
    long long v55 = 0;
  }
  else
  {
    int v95 = v91;
    uint64_t v96 = v92;
    uint64_t v97 = v94;
    uint64_t v98 = a9;
    long long v55 = &v95;
  }
  long long v56 = (void *)MEMORY[0x19F3BFF80](&v99, v55);
  if (!v56)
  {
    uint64_t v74 = sub_19EBF6128();
    sub_19E691274();
    swift_allocError();
    uint64_t v76 = v79;
    long long v77 = (unsigned int *)MEMORY[0x1E4FBAB48];
    goto LABEL_13;
  }
  sub_19E5E7C14((uint64_t)a2 + 136, (uint64_t)&v157, &qword_1E945C0D8);
  sub_19E5E7C14((uint64_t)&v157, (uint64_t)&v158, &qword_1E945C0D8);
  uint64_t v57 = v158;
  if (!v158) {
    goto LABEL_11;
  }
  sub_19E5E7C14((uint64_t)v90 + 136, (uint64_t)&v156, &qword_1E945C0D8);
  sub_19E5E7C14((uint64_t)&v156, (uint64_t)&v159, &qword_1E945C0D8);
  uint64_t v58 = v159;
  if (!v159
    || (sub_19E5E7C14((uint64_t)v89 + 136, (uint64_t)&v155, &qword_1E945C0D8),
        sub_19E5E7C14((uint64_t)&v155, (uint64_t)&v160, &qword_1E945C0D8),
        (uint64_t v59 = v160) == 0)
    || (sub_19E5E7C14((uint64_t)v88 + 136, (uint64_t)&v154, &qword_1E945C0D8),
        sub_19E5E7C14((uint64_t)&v154, (uint64_t)&v161, &qword_1E945C0D8),
        !v161))
  {
LABEL_11:
    uint64_t v74 = sub_19EBF6128();
    sub_19E691274();
    swift_allocError();
    uint64_t v76 = v78;
    long long v77 = (unsigned int *)MEMORY[0x1E4FBAB50];
    goto LABEL_13;
  }
  unint64_t v92 = v161;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945C2B8);
  uint64_t v60 = swift_allocObject();
  long long v91 = xmmword_19EC365F0;
  uint64_t v94 = v60;
  *(_OWORD *)(v60 + 16) = xmmword_19EC365F0;
  *(void *)(v60 + 32) = v57;
  *(void *)&long long v93 = v60 + 32;
  *(void *)(v60 + 40) = v58;
  *(void *)(v60 + 48) = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v91;
  uint64_t v62 = v61;
  long long v63 = v81;
  sub_19EBF6DA8();
  uint64_t v64 = sub_19EBF6138();
  uint64_t v65 = v86;
  long long v66 = *(void (**)(char *, uint64_t))(v85 + 8);
  v66(v63, v86);
  *(void *)(v62 + 32) = v64;
  *(void *)&long long v91 = v62 + 32;
  long long v67 = v82;
  sub_19EBF6DA8();
  uint64_t v68 = sub_19EBF6138();
  v66(v67, v65);
  uint64_t v69 = v62;
  *(void *)(v62 + 40) = v68;
  long long v70 = v83;
  sub_19EBF6DA8();
  uint64_t v71 = sub_19EBF6138();
  v66(v70, v65);
  *(void *)(v69 + 48) = v71;
  long long v72 = v84;
  sub_19EBF6DA8();
  size_t v73 = sub_19EBF6138();
  v66(v72, v65);
  LODWORD(v73) = BNNSArithmeticFilterApplyBatch(v56, v87, 3uLL, (const void **)v93, (const size_t *)v91, v92, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73)
  {
    uint64_t v74 = sub_19EBF6128();
    sub_19E691274();
    swift_allocError();
    uint64_t v76 = v75;
    long long v77 = (unsigned int *)MEMORY[0x1E4FBAB40];
LABEL_13:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v74 - 8) + 104))(v76, *v77, v74);
    swift_willThrow();
    return;
  }
  BNNSFilterDestroy(v56);
}

unint64_t sub_19E691274()
{
  unint64_t result = qword_1E945D090;
  if (!qword_1E945D090)
  {
    sub_19EBF6128();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945D090);
  }
  return result;
}

void *sub_19E6912CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CED8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = (v10 + 32) & ~v10;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19EC365B0;
  unint64_t v13 = a1[2];
  if (!v13)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v14 = a2;
  uint64_t v15 = v12 + v11;
  unint64_t v16 = a1[4];
  *(void *)(v12 + v11) = v16;
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  uint64_t v35 = v12;
  switch(v16 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v17 = (uint64_t **)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v17 = (uint64_t **)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v17 = (uint64_t **)(v16 + 40);
      break;
  }
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = v15 + *(int *)(v8 + 48);
  swift_retain();
  sub_19E68FCE0(v18, 0, v19);
  if (v13 < 2) {
    goto LABEL_20;
  }
  unint64_t v20 = a1[5];
  *(void *)(v15 + v9) = v20;
  switch(v20 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v21 = (uint64_t *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v21 = (uint64_t *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v21 = (uint64_t *)(v20 + 40);
      break;
  }
  uint64_t v22 = *v21;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19E691658(v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_19EC36240;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_21;
  }
  uint64_t v24 = v23;
  uint64_t v25 = v23 + v11;
  unint64_t v26 = *(void *)(v14 + 32);
  *(void *)(v23 + v11) = v26;
  switch(v26 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v27 = (v26 & 0x3FFFFFFFFFFFFFFFLL) + 24;
      goto LABEL_16;
    case 2uLL:
      uint64_t v27 = (v26 & 0x3FFFFFFFFFFFFFFFLL) + 16;
LABEL_16:
      uint64_t v28 = v25 + *(int *)(v8 + 48);
      break;
    default:
      uint64_t v27 = v26 + 40;
      uint64_t v28 = v25 + *(int *)(v8 + 48);
      break;
  }
  swift_retain();
  long long v29 = (uint64_t *)swift_bridgeObjectRetain();
  sub_19E68FCE0(v29, 0, v28);
  if (!*(void *)(*(void *)v27 + 16))
  {
LABEL_22:
    __break(1u);
    JUMPOUT(0x19E691628);
  }
  uint64_t v30 = *(void *)(*(void *)v27 + 32);
  uint64_t v31 = swift_allocObject();
  long long v32 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)v38;
  *(_OWORD *)(v31 + 32) = v32;
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(v38 + 32);
  *(void *)(v31 + 64) = *(void *)(v38 + 48);
  *(void *)(v31 + 72) = v30;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  long long v33 = (void *)swift_allocObject();
  v33[2] = v35;
  v33[3] = v24;
  void v33[4] = v37;
  void v33[5] = v36;
  v33[6] = sub_19E691CCC;
  v33[7] = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_19E691658(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5 == 3)
  {
    sub_19E612790(2, 2, 1);
    a1 = v11;
  }
  sub_19E602940(a1);
  uint64_t v6 = *MEMORY[0x1E4FBAA28];
  uint64_t v7 = sub_19EBF5EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v4, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  return sub_19EBF6198();
}

uint64_t sub_19E6917C4(uint64_t a1, uint64_t a2, int8x16_t *a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v36 = sub_19EBF6018();
  uint64_t v7 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_19EBF6028();
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v11 = (int8x16_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_19EBF5FC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_19EBF5FE8();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBAA60], v12);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  long long v17 = *(_OWORD *)(a1 + 176);
  long long v50 = *(_OWORD *)(a1 + 160);
  long long v51 = v17;
  long long v52 = *(_OWORD *)(a1 + 192);
  long long v18 = *(_OWORD *)(a1 + 112);
  long long v46 = *(_OWORD *)(a1 + 96);
  long long v47 = v18;
  long long v19 = *(_OWORD *)(a1 + 144);
  long long v48 = *(_OWORD *)(a1 + 128);
  long long v49 = v19;
  long long v20 = *(_OWORD *)(a1 + 48);
  long long v42 = *(_OWORD *)(a1 + 32);
  long long v43 = v20;
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v44 = *(_OWORD *)(a1 + 64);
  long long v45 = v21;
  if (v16 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  long long v22 = *(_OWORD *)(a1 + 352);
  long long v72 = *(_OWORD *)(a1 + 336);
  long long v73 = v22;
  long long v74 = *(_OWORD *)(a1 + 368);
  long long v23 = *(_OWORD *)(a1 + 288);
  long long v68 = *(_OWORD *)(a1 + 272);
  long long v69 = v23;
  long long v24 = *(_OWORD *)(a1 + 320);
  long long v70 = *(_OWORD *)(a1 + 304);
  long long v71 = v24;
  long long v25 = *(_OWORD *)(a1 + 224);
  long long v64 = *(_OWORD *)(a1 + 208);
  long long v65 = v25;
  long long v26 = *(_OWORD *)(a1 + 256);
  long long v66 = *(_OWORD *)(a1 + 240);
  long long v67 = v26;
  if (!*(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  long long v27 = *(_OWORD *)(a2 + 176);
  long long v61 = *(_OWORD *)(a2 + 160);
  long long v62 = v27;
  long long v63 = *(_OWORD *)(a2 + 192);
  long long v28 = *(_OWORD *)(a2 + 112);
  long long v57 = *(_OWORD *)(a2 + 96);
  long long v58 = v28;
  long long v29 = *(_OWORD *)(a2 + 144);
  long long v59 = *(_OWORD *)(a2 + 128);
  long long v60 = v29;
  long long v30 = *(_OWORD *)(a2 + 48);
  long long v53 = *(_OWORD *)(a2 + 32);
  long long v54 = v30;
  long long v31 = *(_OWORD *)(a2 + 80);
  long long v55 = *(_OWORD *)(a2 + 64);
  long long v56 = v31;
  sub_19E5E7C78((uint64_t)v76);
  sub_19E68DD18((uint64_t)v76, (uint64_t)&v75);
  *uint64_t v11 = vextq_s8(a3[1], a3[1], 8uLL);
  (*(void (**)(int8x16_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBAA90], v34);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v37, *MEMORY[0x1E4FBAA88], v36);
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF5FD8())
  {
    sub_19EBF5ED8();
    return swift_release();
  }
LABEL_9:
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    char v39 = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E691CBC()
{
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19E691CCC(uint64_t a1, uint64_t a2)
{
  return sub_19E6917C4(a1, a2, v2 + 1, v2[4].i64[1]);
}

uint64_t sub_19E691CD8@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3 = 8 * (char)result;
  uint64_t v4 = *(void *)&aAcos_0[v3];
  uint64_t v5 = *(void *)((char *)&unk_19EC39E98 + v3);
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = a2 & 1;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 5;
  return result;
}

uint64_t sub_19E691D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_19EBF6018();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_19EBF60B8();
  uint64_t v7 = *(void *)(v33 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v33);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v32 - v11;
  uint64_t v12 = sub_19EBF5F68();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v32 = v5;
  long long v18 = *(_OWORD *)(a1 + 176);
  long long v49 = *(_OWORD *)(a1 + 160);
  long long v50 = v18;
  long long v51 = *(_OWORD *)(a1 + 192);
  long long v19 = *(_OWORD *)(a1 + 112);
  long long v45 = *(_OWORD *)(a1 + 96);
  long long v46 = v19;
  long long v20 = *(_OWORD *)(a1 + 144);
  long long v47 = *(_OWORD *)(a1 + 128);
  long long v48 = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  long long v41 = *(_OWORD *)(a1 + 32);
  long long v42 = v21;
  long long v22 = *(_OWORD *)(a1 + 80);
  long long v43 = *(_OWORD *)(a1 + 64);
  long long v44 = v22;
  uint64_t v23 = *MEMORY[0x1E4FBAA58];
  long long v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v24((char *)&v32 - v17, v23, v12);
  if (!*(void *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
LABEL_7:
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      uint64_t v39 = 0;
      unint64_t v40 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      char v38 = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E6922DCLL);
  }
  long long v25 = *(_OWORD *)(a2 + 176);
  long long v60 = *(_OWORD *)(a2 + 160);
  long long v61 = v25;
  long long v62 = *(_OWORD *)(a2 + 192);
  long long v26 = *(_OWORD *)(a2 + 112);
  long long v56 = *(_OWORD *)(a2 + 96);
  long long v57 = v26;
  long long v27 = *(_OWORD *)(a2 + 144);
  long long v58 = *(_OWORD *)(a2 + 128);
  long long v59 = v27;
  long long v28 = *(_OWORD *)(a2 + 48);
  long long v52 = *(_OWORD *)(a2 + 32);
  long long v53 = v28;
  long long v29 = *(_OWORD *)(a2 + 80);
  long long v54 = *(_OWORD *)(a2 + 64);
  long long v55 = v29;
  v24(v16, v23, v12);
  uint64_t v30 = v33;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, **((unsigned int **)&unk_1E59A3668 + (char)v37), v33);
  sub_19EBF6078();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v10, v30);
  sub_19EBF6E08();
  sub_19EBF6D88();
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v36, *MEMORY[0x1E4FBAA88], v32);
  if (!sub_19EBF6068()) {
    goto LABEL_7;
  }
  sub_19EBF6058();
  return swift_release();
}

uint64_t sub_19E69230C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v34 = a3;
  uint64_t v5 = (void *)sub_19EBF6018();
  uint64_t v6 = *(v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19EBF60B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19EBF5F68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = sub_19EBF6078();
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v31 = v18;
  uint64_t v32 = v5;
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v43 = *(_OWORD *)(a1 + 160);
  long long v44 = v19;
  long long v45 = *(_OWORD *)(a1 + 192);
  long long v20 = *(_OWORD *)(a1 + 112);
  long long v39 = *(_OWORD *)(a1 + 96);
  long long v40 = v20;
  long long v21 = *(_OWORD *)(a1 + 144);
  long long v41 = *(_OWORD *)(a1 + 128);
  long long v42 = v21;
  long long v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v35[56] = *(_OWORD *)(a1 + 32);
  long long v36 = v22;
  long long v23 = *(_OWORD *)(a1 + 80);
  long long v37 = *(_OWORD *)(a1 + 64);
  long long v38 = v23;
  uint64_t v24 = *MEMORY[0x1E4FBAA58];
  uint64_t v5 = *(void **)(v12 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v5)(v17, v24, v11);
  if (!*(void *)(a2 + 16))
  {
LABEL_6:
    __break(1u);

    goto LABEL_7;
  }
  long long v25 = *(_OWORD *)(a2 + 176);
  long long v54 = *(_OWORD *)(a2 + 160);
  long long v55 = v25;
  long long v56 = *(_OWORD *)(a2 + 192);
  long long v26 = *(_OWORD *)(a2 + 112);
  long long v50 = *(_OWORD *)(a2 + 96);
  long long v51 = v26;
  long long v27 = *(_OWORD *)(a2 + 144);
  long long v52 = *(_OWORD *)(a2 + 128);
  long long v53 = v27;
  long long v28 = *(_OWORD *)(a2 + 48);
  long long v46 = *(_OWORD *)(a2 + 32);
  long long v47 = v28;
  long long v29 = *(_OWORD *)(a2 + 80);
  long long v48 = *(_OWORD *)(a2 + 64);
  long long v49 = v29;
  ((void (*)(char *, uint64_t, uint64_t))v5)(v15, v24, v11);
  sub_19E69268C(v34, (uint64_t)v10);
  sub_19EBF6E08();
  sub_19EBF6D88();
  (*(void (**)(char *, void, void *))(v6 + 104))(v33, *MEMORY[0x1E4FBAA88], v32);
  if (sub_19EBF6068())
  {
    sub_19EBF6058();
    return swift_release();
  }
LABEL_7:
  sub_19E691CD8(v34, 0, (uint64_t)v35);
  sub_19E5E0028();
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E69268C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB20];
      break;
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAF0];
      break;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB28];
      break;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAF8];
      break;
    case 5:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB30];
      break;
    case 6:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAC0];
      break;
    case 7:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB00];
      break;
    case 8:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAC8];
      break;
    case 9:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB08];
      break;
    case 10:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAD0];
      break;
    case 11:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAA8];
      break;
    case 12:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAB8];
      break;
    case 13:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAD8];
      break;
    case 14:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB10];
      break;
    case 15:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAB0];
      break;
    case 16:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB38];
      break;
    case 17:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAE0];
      break;
    case 18:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAB18];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBAAE8];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_19EBF60B8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

void *sub_19E692848(void *a1)
{
  uint64_t v3 = *(void *)sub_19EBF64C8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945D0A0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  v1[5] = v4;
  v1[3] = a1;
  swift_retain();
  id v5 = a1;
  uint64_t v6 = (uint64_t)MTLCreateSystemDefaultDevice();
  if (v6)
  {
    uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
    if (!v6)
    {
      swift_unknownObjectRelease();
      uint64_t v6 = 0;
    }
  }
  v1[4] = v6;
  v1[2] = v5;
  uint64_t v7 = (os_unfair_lock_s *)v1[5];
  uint64_t v8 = (uint64_t *)&v7[4];
  uint64_t v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_19E6932C8(v8, &v12);
  os_unfair_lock_unlock(v9);
  uint64_t v10 = v12;

  if (v10 < 1)
  {
    swift_release();
    return 0;
  }
  return v1;
}

uint64_t sub_19E692940@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 32);
  type metadata accessor for BNNSDevice.SharedEvent();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t result = sub_19E692C40(v5, v6);
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v8 = result;
  uint64_t result = *a1;
  uint64_t v9 = *(void *)(*a1 + 24);
  uint64_t v10 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (void *)*a1;
  if (*(void *)(*a1 + 16) < v10 || (result & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v12 = v11[4];
  if (v12)
  {
    while (1)
    {
      BOOL v13 = __OFSUB__(v12, 1);
      uint64_t v14 = v12 - 1;
      if (!v13) {
        break;
      }
      __break(1u);
LABEL_9:
      uint64_t v15 = v10;
      uint64_t v10 = (uint64_t)a1;
      uint64_t result = sub_19E649C30(v15, 0);
      uint64_t v11 = (void *)*a1;
      uint64_t v12 = *(void *)(*a1 + 32);
      if (!v12) {
        goto LABEL_10;
      }
    }
LABEL_11:
    v11[v14 + 5] = v8;
    v11[4] = v14;
    uint64_t v17 = v11[3];
    BOOL v13 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (!v13)
    {
      _OWORD v11[3] = v18;
LABEL_13:
      *a3 = *(void *)(*a1 + 24);
      return result;
    }
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v16 = v11[2];
  BOOL v13 = __OFSUB__(v16, 1);
  uint64_t v14 = v16 - 1;
  if (!v13) {
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_19E692A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!*(void *)(*(void *)a1 + 24))
  {
    uint64_t v12 = *(void *)(a2 + 16);
    BOOL v13 = *(void **)(a2 + 32);
    type metadata accessor for BNNSDevice.SharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t result = sub_19E692C40(v12, v13);
LABEL_9:
    *a3 = result;
    return result;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    uint64_t result = sub_19E6689B8();
  }
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  BOOL v8 = __OFSUB__(v7, 1);
  uint64_t v9 = v7 - 1;
  if (!v8)
  {
    uint64_t v10 = v6[4] + v9;
    uint64_t v11 = v6[2];
    if (v10 < v11) {
      uint64_t v11 = 0;
    }
    uint64_t result = v6[v10 - v11 + 5];
    v6[3] = v9;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_19E692B10(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  uint64_t v4 = *(void *)(result + 24);
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = (void *)*a1;
  if (*(void *)(*a1 + 16) < v5 || (result & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v8 = v7[4];
  if (v8)
  {
    while (1)
    {
      BOOL v9 = __OFSUB__(v8, 1);
      uint64_t v10 = v8 - 1;
      if (!v9) {
        break;
      }
      __break(1u);
LABEL_8:
      uint64_t result = sub_19E649C30(v5, 0);
      uint64_t v7 = (void *)*a1;
      uint64_t v8 = *(void *)(*a1 + 32);
      if (!v8) {
        goto LABEL_9;
      }
    }
LABEL_10:
    v7[v10 + 5] = a2;
    v7[4] = v10;
    uint64_t v12 = v7[3];
    BOOL v9 = __OFADD__(v12, 1);
    uint64_t v13 = v12 + 1;
    if (!v9)
    {
      v7[3] = v13;
      return swift_retain();
    }
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v11 = v7[2];
  BOOL v9 = __OFSUB__(v11, 1);
  uint64_t v10 = v11 - 1;
  if (!v9) {
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_19E692BD4()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t type metadata accessor for BNNSDevice()
{
  return self;
}

uint64_t sub_19E692C40(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_19EBF6D48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  BOOL v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19EBF6D38();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_19EBF65D8();
  MEMORY[0x1F4188790](v11 - 8);
  sub_19E693288();
  sub_19EBF65C8();
  sub_19EBF6D28();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC68], v6);
  uint64_t v12 = sub_19EBF6D58();
  *(void *)(v3 + 16) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D180);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(void *)(v13 + 16) = 0;
  *(void *)(v3 + 64) = v13;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2EF90]), sel_init);
  if (v14)
  {
    uint64_t v15 = v14;
    *(void *)(v3 + 56) = v14;
    *(void *)(v3 + 24) = a1;
    *(void *)(v3 + 32) = v14;
    id v16 = objc_allocWithZone(MEMORY[0x1E4F2EF98]);
    id v17 = v15;
    *(void *)(v3 + 48) = objc_msgSend(v16, sel_initWithDispatchQueue_, v12);
    if (a2)
    {
      swift_unknownObjectRetain();
      id v18 = objc_msgSend(a2, sel_newSharedEventWithMachPort_, objc_msgSend(v17, sel_eventPort));

      swift_unknownObjectRelease_n();
    }
    else
    {

      id v18 = 0;
    }
    *(void *)(v3 + 40) = v18;
  }
  else
  {
    if (qword_1E945BB48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_19EBF65B8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E946A500);
    long long v20 = sub_19EBF65A8();
    os_log_type_t v21 = sub_19EBF6D18();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v22 = 0;
      _os_log_impl(&dword_19E58B000, v20, v21, "Failed to create shared event.", v22, 2u);
      MEMORY[0x19F3C3580](v22, -1, -1);
    }

    swift_unknownObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t *sub_19E692FE8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    void *result = v4;
    type metadata accessor for IOSurfaceAsyncEvent();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_unownedRetain();
  }
  return result;
}

uint64_t sub_19E693054()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 72, 7);
}

uint64_t type metadata accessor for BNNSDevice.SharedEvent()
{
  return self;
}

uint64_t sub_19E6930D0()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  id v2 = *(id *)(v1 + 32);
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

void sub_19E693130()
{
  uint64_t v1 = *v0;
  sub_19EBF7488();
  id v2 = *(id *)(v1 + 32);
  sub_19EBF6DF8();
}

uint64_t sub_19E6931A0()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  sub_19EBF7488();
  id v2 = *(id *)(v1 + 32);
  sub_19EBF6DF8();

  return sub_19EBF74B8();
}

BOOL sub_19E6931FC(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24)
      && *(void *)(*(void *)a1 + 56) == *(void *)(*(void *)a2 + 56);
}

unint64_t sub_19E693234()
{
  unint64_t result = qword_1E945D098;
  if (!qword_1E945D098)
  {
    type metadata accessor for BNNSDevice.SharedEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945D098);
  }
  return result;
}

unint64_t sub_19E693288()
{
  unint64_t result = qword_1E945CAC0;
  if (!qword_1E945CAC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E945CAC0);
  }
  return result;
}

uint64_t sub_19E6932C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_19E692940(a1, v2, a2);
}

uint64_t sub_19E6932E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = v23;
  long long v4 = *(_OWORD *)(a1 + 160);
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v6 = *(_OWORD *)(a1 + 128);
  v23[7] = *(_OWORD *)(a1 + 144);
  v23[8] = v4;
  long long v7 = *(_OWORD *)(a1 + 192);
  v23[9] = v5;
  v23[10] = v7;
  long long v8 = *(_OWORD *)(a1 + 112);
  v23[4] = *(_OWORD *)(a1 + 96);
  v23[5] = v8;
  v23[6] = v6;
  long long v9 = *(_OWORD *)(a1 + 48);
  v23[0] = *(_OWORD *)(a1 + 32);
  v23[1] = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  void v23[2] = *(_OWORD *)(a1 + 64);
  v23[3] = v10;
  if (v3 == 1)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);

    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E6935FCLL);
  }
  long long v12 = *(_OWORD *)(a1 + 352);
  v23[19] = *(_OWORD *)(a1 + 336);
  v23[20] = v12;
  v23[21] = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 288);
  v23[15] = *(_OWORD *)(a1 + 272);
  v23[16] = v13;
  long long v14 = *(_OWORD *)(a1 + 320);
  v23[17] = *(_OWORD *)(a1 + 304);
  v23[18] = v14;
  long long v15 = *(_OWORD *)(a1 + 224);
  v23[11] = *(_OWORD *)(a1 + 208);
  v23[12] = v15;
  long long v16 = *(_OWORD *)(a1 + 256);
  v23[13] = *(_OWORD *)(a1 + 240);
  v23[14] = v16;
  sub_19EBF6038();
  if (!*(void *)(a2 + 16)) {
    goto LABEL_7;
  }
  long long v17 = *(_OWORD *)(a2 + 176);
  v23[30] = *(_OWORD *)(a2 + 160);
  v23[31] = v17;
  v23[32] = *(_OWORD *)(a2 + 192);
  long long v18 = *(_OWORD *)(a2 + 112);
  v23[26] = *(_OWORD *)(a2 + 96);
  v23[27] = v18;
  long long v19 = *(_OWORD *)(a2 + 144);
  v23[28] = *(_OWORD *)(a2 + 128);
  v23[29] = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  v23[22] = *(_OWORD *)(a2 + 32);
  v23[23] = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  v23[24] = *(_OWORD *)(a2 + 64);
  v23[25] = v21;
  return sub_19EBF61B8();
}

uint64_t sub_19E693618(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v86 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_19EBF7348();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)MEMORY[0x19F3BFF40](0, *(void *)(a3 + 24), 0);
  unint64_t v12 = *(void *)(a2 + 16);
  if (!v12)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  long long v51 = v11;
  long long v13 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)&v53.stride[7] = *(_OWORD *)(a2 + 160);
  *(_OWORD *)&v53.BNNSDataType data_type = v13;
  *(_OWORD *)&v53.table_BNNSDataType data_type = *(_OWORD *)(a2 + 192);
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)&v53.size[7] = *(_OWORD *)(a2 + 96);
  *(_OWORD *)&v53.stride[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)&v53.stride[3] = *(_OWORD *)(a2 + 128);
  *(_OWORD *)&v53.stride[5] = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)&v53.flags = *(_OWORD *)(a2 + 32);
  *(_OWORD *)&v53.size[1] = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)&v53.size[3] = *(_OWORD *)(a2 + 64);
  *(_OWORD *)&v53.size[5] = v17;
  sub_19E61EE7C((uint64_t *)a3, (uint64_t)&v54);
  sub_19E61EE7C(&v54, (uint64_t)&v83);
  if (v85)
  {
    if (v85 == 1)
    {
      long long v18 = v51;
      int v19 = BNNSRandomFillUniformFloat(v51, &v53, *(float *)&v83, v84);
    }
    else
    {
      if (__OFADD__(LODWORD(v84), 1)) {
        goto LABEL_28;
      }
      long long v18 = v51;
      int v19 = BNNSRandomFillUniformInt(v51, &v53, v83, LODWORD(v84) + 1);
    }
  }
  else
  {
    long long v18 = v51;
    int v19 = BNNSRandomFillNormalFloat(v51, &v53, *(float *)&v83, v84);
  }
  long long v50 = v10;
  if (!v19)
  {
    int v20 = *(unsigned __int8 *)(a3 + 32);
    if (v20 == a4)
    {
      long long v21 = v18;
      return MEMORY[0x19F3BFF50](v21);
    }
    int v47 = a4;
    uint64_t v48 = v8;
    uint64_t v49 = v7;
    data = v53.data;
    if (v53.data)
    {
      if (v12 < 2)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
      }
      uint64_t v23 = *(void *)(a2 + 344);
      if (v23)
      {
        int v46 = *(unsigned __int8 *)(a3 + 33);
        uint64_t v69 = *(void *)&v53.flags;
        long long v70 = *(_OWORD *)v53.size;
        long long v71 = *(_OWORD *)&v53.size[2];
        long long v72 = *(_OWORD *)&v53.size[4];
        long long v73 = *(_OWORD *)&v53.size[6];
        long long v74 = *(_OWORD *)v53.stride;
        long long v75 = *(_OWORD *)&v53.stride[2];
        long long v76 = *(_OWORD *)&v53.stride[4];
        long long v77 = *(_OWORD *)&v53.stride[6];
        uint64_t v78 = v53.data;
        BNNSDataType data_type = v53.data_type;
        table_data = v53.table_data;
        table_BNNSDataType data_type = v53.table_data_type;
        uint64_t v82 = *(void *)&v53.data_scale;
        uint64_t v45 = sub_19EBF6DB8();
        uint64_t v55 = *(void *)(a2 + 208);
        long long v24 = *(_OWORD *)(a2 + 232);
        long long v56 = *(_OWORD *)(a2 + 216);
        long long v57 = v24;
        long long v58 = *(_OWORD *)(a2 + 248);
        long long v25 = *(_OWORD *)(a2 + 280);
        long long v59 = *(_OWORD *)(a2 + 264);
        long long v60 = v25;
        long long v26 = *(_OWORD *)(a2 + 312);
        long long v61 = *(_OWORD *)(a2 + 296);
        int v27 = *(_DWORD *)(a2 + 352);
        uint64_t v28 = *(void *)(a2 + 360);
        int v29 = *(_DWORD *)(a2 + 368);
        long long v62 = v26;
        long long v63 = *(_OWORD *)(a2 + 328);
        uint64_t v64 = v23;
        int v65 = v27;
        uint64_t v66 = v28;
        int v67 = v29;
        uint64_t v68 = *(void *)(a2 + 372);
        uint64_t v30 = sub_19EBF6DB8();
        uint64_t v31 = *(void *)(a3 + 16);
        uint64_t v32 = *(void *)(v31 + 16);
        if (!v32)
        {
          unint64_t v36 = 1;
LABEL_20:
          uint64_t v37 = (uint64_t)data + v45;
          uint64_t v38 = v23 + v30;
          uint64_t v40 = v48;
          uint64_t v39 = v49;
          uint64_t v41 = (uint64_t)v50;
          (*(void (**)(char *, void, uint64_t))(v48 + 104))(v50, *MEMORY[0x1E4FBBE88], v49);
          if (v46) {
            __int16 v42 = 256;
          }
          else {
            __int16 v42 = 0;
          }
          sub_19E6B60D0((uint64_t)data, v37, v47 & 0x1FF, v23, v38, v42 | v20, v36, v41);
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
          long long v21 = v51;
          return MEMORY[0x19F3BFF50](v21);
        }
        uint64_t v33 = (uint64_t *)(v31 + 32);
        uint64_t v34 = 1;
        while (1)
        {
          uint64_t v35 = *v33++;
          unint64_t v36 = v34 * v35;
          if ((unsigned __int128)(v34 * (__int128)v35) >> 64 != (v34 * v35) >> 63) {
            break;
          }
          uint64_t v34 = v36;
          if (!--v32) {
            goto LABEL_20;
          }
        }
        __break(1u);
        goto LABEL_26;
      }
    }
  }
  sub_19E61EE7C(&v54, (uint64_t)&v55);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v69 = 0;
    *(void *)&long long v70 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    char v52 = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E693B84(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  int v29 = *(unsigned __int8 *)(a1 + 33);
  sub_19E61EE7C((uint64_t *)a1, (uint64_t)&v32);
  sub_19E61EE7C(&v32, (uint64_t)v33);
  if (v33[8] == 2) {
    uint64_t v4 = 7;
  }
  else {
    uint64_t v4 = 10;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  long long v6 = (void *)MEMORY[0x19F3C1A40](v5);
  if (qword_1E945BB88 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)(qword_1E945D0B0 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
  sub_19E694038(v7, v2, v4, 0, 1, &v31);
  os_unfair_lock_unlock(v8);
  uint64_t v9 = v31;
  type metadata accessor for IOSurfaceStorage();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 33) = 0;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 56) = sub_19E683340;
  *(void *)(v10 + 64) = 0;
  uint64_t v11 = v10 | 0x4000000000000000;
  char v30 = v4;
  if (v3 == v4)
  {
    swift_retain();
    uint64_t v12 = v11;
    uint64_t v13 = v11;
  }
  else
  {
    uint64_t v28 = v10 | 0x4000000000000000;
    uint64_t v14 = swift_bridgeObjectRetain();
    long long v15 = (void *)MEMORY[0x19F3C1A40](v14);
    os_unfair_lock_lock(v8);
    if (v29) {
      int v16 = 256;
    }
    else {
      int v16 = 0;
    }
    sub_19E694038(v7, v2, v16 | v3, 0, 1, &v31);
    os_unfair_lock_unlock(v8);
    uint64_t v17 = v31;
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 32) = v3;
    *(unsigned char *)(v18 + 33) = v29;
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v2;
    *(void *)(v18 + 40) = 0;
    *(void *)(v18 + 48) = 0;
    *(void *)(v18 + 56) = sub_19E683340;
    *(void *)(v18 + 64) = 0;
    uint64_t v12 = v18 | 0x4000000000000000;
    uint64_t v13 = v28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CED8);
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0) - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_19EC365B0;
  *(void *)(v22 + v21) = v13;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19E68F77C((uint64_t)v2);
  *(void *)(v22 + v21 + v20) = v12;
  swift_retain();
  sub_19E68F77C((uint64_t)v2);
  uint64_t v23 = swift_allocObject();
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v23 + 64) = *(void *)(a1 + 48);
  *(unsigned char *)(v23 + 72) = v30;
  *(unsigned char *)(v23 + 73) = 0;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  inited[2] = MEMORY[0x1E4FBC860];
  inited[3] = v22;
  inited[4] = v26;
  inited[5] = 0;
  inited[6] = sub_19E693F5C;
  inited[7] = v23;
  sub_19E6469E0(a1);
  sub_19E6868FC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t sub_19E693F1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 74, 7);
}

uint64_t sub_19E693F5C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 73)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_19E693618(a1, a2, v2 + 16, v3 | *(unsigned __int8 *)(v2 + 72));
}

uint64_t sub_19E693F7C()
{
  type metadata accessor for IOSurfaceAllocator();
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 16;
  v0[11] = 0;
  uint64_t v1 = (uint64_t *)sub_19EBF64C8();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *v1;
  v0[3] = 0;
  v0[4] = v2;
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = 100;
  v0[8] = sub_19E694028;
  v0[9] = 0;
  v0[10] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D0C0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v0;
  qword_1E945D0B0 = v4;

  return swift_retain();
}

uint64_t sub_19E694028(IOSurfaceRef *a1)
{
  return IOSurfaceSetPurgeable(*a1, 1u, 0);
}

uint64_t sub_19E694038@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  void (*v51)(uint64_t *__return_ptr, uint64_t *);
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t AllocSize;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  float v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __IOSurface *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t inited;
  void *v120;
  uint64_t v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  uint64_t v126;
  void *v127;
  void **v128;
  void *v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  CFDictionaryRef v137;
  IOSurfaceRef v138;
  NSObject *v139;
  char *v140;
  os_signpost_type_t v141;
  char v142;
  uint64_t v143;
  void *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  const char *v148;
  uint8_t *v149;
  os_signpost_id_t v150;
  void (*v151)(char *, void *);
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t result;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  void *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, void *);
  uint64_t v174;
  void *v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, char *, void *);
  void *v182;
  int v183;
  uint64_t v184;
  void *v185;
  void *v186;
  char *v187;
  uint64_t v188;
  uint64_t *v189;
  void *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  __IOSurface *v199;
  uint64_t v200[3];
  uint64_t v201;

  v183 = a5;
  v180 = a4;
  v178 = a3;
  v185 = a2;
  v186 = a1;
  v175 = a6;
  v169 = sub_19EBF6558();
  v176 = *(void *)(v169 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v169);
  v167 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t)&v162 - v8;
  uint64_t v10 = (void *)sub_19EBF6528();
  uint64_t v11 = *(v10 - 1);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  v166 = (char *)&v162 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v187 = (char *)&v162 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v162 - v19;
  if (qword_1E945BB50 != -1) {
    goto LABEL_218;
  }
  while (1)
  {
    v179 = v14;
    uint64_t v21 = sub_19EBF6548();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1E946A518);
    sub_19EBF6518();
    v174 = v22;
    uint64_t v23 = sub_19EBF6538();
    int v24 = sub_19EBF6D78();
    char v25 = sub_19EBF6E18();
    v163 = v9;
    if (v25)
    {
      v181 = *(void (**)(char *, char *, void *))(v11 + 16);
      uint64_t v9 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      LODWORD(v195) = v24;
      uint64_t v26 = v187;
      v181(v187, v20, v10);
      int v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v27 = 0;
      os_signpost_id_t v28 = sub_19EBF6508();
      _os_signpost_emit_with_name_impl(&dword_19E58B000, v23, (os_signpost_type_t)v195, v28, "CPU :: Storage allocation", "", v27, 2u);
      MEMORY[0x19F3C3580](v27, -1, -1);

      (*(void (**)(char *, void *))(v11 + 8))(v26, v10);
      int v29 = v181;
    }
    else
    {

      int v29 = *(void (**)(char *, char *, void *))(v11 + 16);
      uint64_t v9 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v26 = v187;
    }
    v181 = v29;
    v168 = v9;
    v29(v26, v20, v10);
    sub_19EBF6588();
    swift_allocObject();
    uint64_t v30 = 1;
    uint64_t v14 = sub_19EBF6578();
    uint64_t v31 = *(void (**)(char *, void *))(v11 + 8);
    v11 += 8;
    v177 = v10;
    v173 = v31;
    v31(v20, v10);
    uint64_t v32 = (void *)*v186;
    uint64_t v33 = v185[2];
    if (v33)
    {
      uint64_t v34 = v185 + 4;
      uint64_t v35 = 1;
      uint64_t v36 = v185[2];
      do
      {
        uint64_t v37 = *v34++;
        uint64_t v30 = v35 * v37;
        if ((unsigned __int128)(v35 * (__int128)v37) >> 64 != (v35 * v37) >> 63)
        {
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
          goto LABEL_194;
        }
        uint64_t v35 = v30;
        --v36;
      }
      while (v36);
    }
    if (v178 > 0xAu) {
      uint64_t v38 = 8;
    }
    else {
      uint64_t v38 = qword_19EC3A0A8[(char)v178];
    }
    uint64_t v39 = v30 * v38;
    if ((unsigned __int128)(v30 * (__int128)v38) >> 64 != (v30 * v38) >> 63)
    {
      __break(1u);
LABEL_220:
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
      goto LABEL_224;
    }
    v201 = v30 * v38;
    v184 = v14;
    v171 = v33;
    v172 = v11;
    v170 = v38;
    if ((v183 & 1) == 0)
    {
      if (!v180) {
        goto LABEL_221;
      }
      if (v180 == -1 && v39 == 0x8000000000000000) {
        goto LABEL_227;
      }
      uint64_t v40 = v39 % v180;
      if (!(v39 % v180)) {
        goto LABEL_27;
      }
      uint64_t v41 = v39 + v180;
      if (__OFADD__(v39, v180)) {
        goto LABEL_223;
      }
      uint64_t v39 = v41 - v40;
      if (!__OFSUB__(v41, v40)) {
        goto LABEL_27;
      }
      __break(1u);
    }
    int v42 = getpagesize();
    if (v39 > v42)
    {
      if (!v42) {
        goto LABEL_226;
      }
      uint64_t v43 = v39 % v42;
      if (v43)
      {
        uint64_t v44 = v39 + v42;
        if (__OFADD__(v39, v42)) {
          goto LABEL_230;
        }
        uint64_t v39 = v44 - v43;
        if (__OFSUB__(v44, v43)) {
          goto LABEL_231;
        }
      }
LABEL_27:
      v201 = v39;
    }
    v164 = v32 + 3;
    swift_beginAccess();
    uint64_t v45 = v32[3];
    uint64_t v10 = (void *)v32[4];
    uint64_t v165 = v32;
    uint64_t v46 = v32[5];
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v39;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_19E6455AC;
    *(void *)(v48 + 24) = v47;
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = sub_19E6455C0;
    v32[3] = v48;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_beginAccess();
    uint64_t v20 = 0;
    uint64_t v14 = 0;
    v189 = (uint64_t *)(v45 + 16);
    v190 = v10 + 4;
    v188 = v45 + 32;
    v194 = v45;
    v195 = v10 + 5;
    v192 = v46 + 32;
    v193 = v46;
    v182 = v10 + 8;
    unint64_t v49 = -1;
LABEL_31:
    uint64_t v9 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
      goto LABEL_215;
    }
    uint64_t v20 = (char *)v10[2];
    if (v9 >= (uint64_t)v20) {
      goto LABEL_97;
    }
    while (1)
    {
      if (v9 < 0) {
        goto LABEL_192;
      }
      uint64_t v11 = v49 + 1;
      if (v49 + 1 >= v10[2]) {
        goto LABEL_193;
      }
      long long v51 = (void (*)(uint64_t *__return_ptr, uint64_t *))v32[2];
      uint64_t v14 = v32[3];
      v196 = v195[v49];
      v51(v200, &v196);
      if (v200[0]) {
        break;
      }
      char v52 = v49 + 2;
      if (__OFADD__(v11, 1)) {
        goto LABEL_195;
      }
      ++v49;
      if (v52 >= (uint64_t)v20) {
        goto LABEL_97;
      }
    }
    if ((uint64_t)++v49 >= (uint64_t)v20) {
      goto LABEL_97;
    }
    BNNSNDArrayDescriptor v53 = v10[2];
    if (v49 >= v53) {
      goto LABEL_213;
    }
    long long v50 = v190;
    uint64_t v54 = v190[v49];
    if (!v194) {
      break;
    }
    uint64_t v55 = sub_19E643EF4(v54, (uint64_t)v190, v53, v189);
    if (v56) {
      goto LABEL_97;
    }
    long long v50 = v190;
    if ((v55 & 0x8000000000000000) == 0) {
      goto LABEL_61;
    }
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    swift_once();
  }
  if (*v190 == v54)
  {
    uint64_t v55 = 0;
  }
  else
  {
    if (v53 == 1) {
      goto LABEL_97;
    }
    if (*v195 == v54)
    {
      uint64_t v55 = 1;
      long long v50 = v190;
    }
    else
    {
      if (v53 == 2) {
        goto LABEL_97;
      }
      if (v10[6] == v54)
      {
        uint64_t v55 = 2;
        long long v50 = v190;
      }
      else
      {
        if (v53 == 3) {
          goto LABEL_97;
        }
        if (v10[7] == v54)
        {
          uint64_t v55 = 3;
          long long v50 = v190;
        }
        else
        {
          long long v57 = 0;
          do
          {
            if (v53 - 4 == v57) {
              goto LABEL_97;
            }
            long long v58 = v182[v57++];
          }
          while (v58 != v54);
          uint64_t v55 = v57 + 3;
          long long v50 = v190;
          if (v57 + 3 < 0) {
            goto LABEL_215;
          }
        }
      }
    }
  }
LABEL_61:
  if (v55 >= *(void *)(v193 + 16)) {
    goto LABEL_214;
  }
  uint64_t v14 = 0;
  uint64_t v20 = *(char **)(*(void *)(v192 + 8 * v55) + 24);
  if ((v49 & 0x8000000000000000) != 0) {
    goto LABEL_201;
  }
  while (1)
  {
    long long v59 = v10[2];
    if (v49 >= v59) {
      goto LABEL_202;
    }
    uint64_t v9 = v50[v49];
    if (v194)
    {
      long long v60 = sub_19E643EF4(v50[v49], (uint64_t)v50, v59, v189);
      if (v61) {
        goto LABEL_97;
      }
      if ((v60 & 0x8000000000000000) != 0) {
        goto LABEL_207;
      }
    }
    else if (*v50 == v9)
    {
      long long v60 = 0;
    }
    else
    {
      if (v59 == 1) {
        goto LABEL_97;
      }
      if (*v195 == v9)
      {
        long long v60 = 1;
      }
      else
      {
        if (v59 == 2) {
          goto LABEL_97;
        }
        if (v10[6] == v9)
        {
          long long v60 = 2;
        }
        else
        {
          if (v59 == 3) {
            goto LABEL_97;
          }
          if (v10[7] == v9)
          {
            long long v60 = 3;
          }
          else
          {
            long long v62 = 0;
            do
            {
              if (v59 - 4 == v62) {
                goto LABEL_96;
              }
              long long v63 = v182[v62++];
            }
            while (v63 != v9);
            long long v60 = v62 + 3;
            if (v62 + 3 < 0) {
              goto LABEL_207;
            }
          }
        }
      }
    }
    if (v60 >= *(void *)(v193 + 16)) {
      goto LABEL_206;
    }
    uint64_t v64 = *(void **)(v192 + 8 * v60);
    if (v14 >= v64[3]) {
      break;
    }
    if (v14 < 0) {
      goto LABEL_208;
    }
    int v65 = v9;
    uint64_t v66 = v64[4] + v14;
    int v67 = v64[2];
    if (v66 < v67) {
      int v67 = 0;
    }
    uint64_t v9 = (uint64_t)(id)v64[v66 - v67 + 5];
    AllocSize = IOSurfaceGetAllocSize((IOSurfaceRef)v9);
    if (v201 + 0x4000000000000000 < 0)
    {
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    if (2 * v201 < v201) {
      goto LABEL_210;
    }
    uint64_t v11 = AllocSize;
    if (AllocSize >= v201 && AllocSize < 2 * v201)
    {
      swift_beginAccess();
      long long v152 = (void *)sub_19E64295C(v65, v14);
      swift_endAccess();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();

      uint64_t v153 = v165[11];
      long long v73 = __OFSUB__(v153, v11);
      uint64_t v154 = v153 - v11;
      if (!v73)
      {
        v165[11] = v154;
        *v175 = v9;
        long long v139 = sub_19EBF6538();
        long long v140 = v166;
        sub_19EBF6568();
        long long v141 = sub_19EBF6D68();
        uint64_t v155 = sub_19EBF6E18();
        uint64_t v156 = v176;
        long long v144 = v177;
        long long v145 = v187;
        if ((v155 & 1) == 0) {
          goto LABEL_187;
        }
        swift_retain();
        uint64_t v157 = v163;
        sub_19EBF6598();
        uint64_t v158 = v157;
        swift_release();
        uint64_t v159 = v157;
        uint64_t v160 = v169;
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v156 + 88))(v159, v169) == *MEMORY[0x1E4FBD340])
        {
          int v148 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v158, v160);
          int v148 = "";
        }
        v181(v145, v140, v144);
LABEL_182:
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v149 = 0;
        uint64_t v150 = sub_19EBF6508();
        _os_signpost_emit_with_name_impl(&dword_19E58B000, v139, v141, v150, "CPU :: Storage allocation", v148, v149, 2u);
        MEMORY[0x19F3C3580](v149, -1, -1);

        int v151 = v173;
        v173(v140, v144);
LABEL_188:
        v151(v145, v144);
        return swift_release();
      }
LABEL_234:
      __break(1u);
      goto LABEL_235;
    }
    ++v14;

    if (v14 >= (uint64_t)v20) {
      goto LABEL_31;
    }
    long long v50 = v190;
    if ((v49 & 0x8000000000000000) != 0) {
      goto LABEL_201;
    }
  }
LABEL_96:
  if (v14 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
    goto LABEL_232;
  }
LABEL_97:
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  long long v70 = (void *)*v186;
  uint64_t v20 = (char *)(*v186 + 24);
  long long v71 = swift_beginAccess();
  long long v72 = v70[7];
  long long v73 = __OFSUB__(v72, 1);
  long long v74 = v72 - 1;
  if (v73) {
    goto LABEL_196;
  }
  long long v75 = v70 + 6;
  uint64_t v11 = 1064514355;
  while (2)
  {
    if (v70[10] >= v74) {
      goto LABEL_105;
    }
    long long v76 = MEMORY[0x19F3C2E80](v71);
    if (v76 >= 1)
    {
      long long v77 = (float)v76 * 0.95;
      if ((~LODWORD(v77) & 0x7F800000) == 0) {
        goto LABEL_203;
      }
      if (v77 <= -9.2234e18) {
        goto LABEL_204;
      }
      if (v77 >= 9.2234e18) {
        goto LABEL_205;
      }
      if (v70[11] >= (uint64_t)v77)
      {
LABEL_105:
        swift_beginAccess();
        if (*(uint64_t *)(*v75 + 24) < 1) {
          goto LABEL_154;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v14 = (uint64_t)v75;
          sub_19E668978();
        }
        uint64_t v78 = (void *)*v75;
        uint64_t v79 = *(void *)(*v75 + 24);
        long long v73 = __OFSUB__(v79, 1);
        uint64_t v80 = v79 - 1;
        if (v73) {
          goto LABEL_197;
        }
        long long v81 = v78[4] + v80;
        uint64_t v82 = v78[2];
        if (v81 < v82) {
          uint64_t v82 = 0;
        }
        int v83 = v78[v81 - v82 + 5];
        void v78[3] = v80;
        v198 = v83;
        uint64_t v9 = (uint64_t)sub_19E6436CC(&v196, v83);
        if (!*(void *)v84 || *(uint64_t *)(*(void *)v84 + 24) <= 0) {
          goto LABEL_153;
        }
        uint64_t v14 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_19E6689D8();
        }
        char v85 = *(void **)v14;
        uint64_t v86 = *(void *)(*(void *)v14 + 24);
        long long v73 = __OFSUB__(v86, 1);
        size_t v87 = v86 - 1;
        if (v73) {
          goto LABEL_198;
        }
        uint64_t v88 = v85[4] + v87;
        uint64_t v89 = v85[2];
        if (v88 < v89) {
          uint64_t v89 = 0;
        }
        uint64_t v90 = (__IOSurface *)v85[v88 - v89 + 5];
        v85[3] = v87;
        ((void (*)(uint64_t *, void))v9)(&v196, 0);
        unint64_t v92 = v70[3];
        long long v91 = (void *)v70[4];
        uint64_t v14 = v70[5];
        long long v93 = v91 + 4;
        uint64_t v94 = v91[2];
        if (v92)
        {
          int v95 = sub_19E643EF4(v198, (uint64_t)v93, v94, (uint64_t *)(v92 + 16));
          if ((v96 & 1) == 0)
          {
            if ((v95 & 0x8000000000000000) != 0)
            {
LABEL_152:
              __break(1u);
LABEL_153:
              ((void (*)(uint64_t *, void))v9)(&v196, 0);
LABEL_154:
              swift_endAccess();
              break;
            }
LABEL_125:
            if (v95 >= *(void *)(v14 + 16)) {
              goto LABEL_211;
            }
            if (!*(void *)(*(void *)(v14 + 8 * v95 + 32) + 24))
            {
              uint64_t v11 = (uint64_t)v20;
              uint64_t v20 = (char *)&v162;
              MEMORY[0x1F4188790](v95);
              uint64_t v14 = (uint64_t)v75;
              uint64_t v97 = v191;
              uint64_t v9 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E645670);
              v191 = v97;
              uint64_t v98 = *(void *)(*v75 + 24);
              if (v98 < v9) {
                goto LABEL_216;
              }
              if (v9 < 0) {
                goto LABEL_217;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_19E668978();
              }
              int v99 = v98;
              long long v75 = (void *)v14;
              sub_19E644380((char *)v9, v99, (uint64_t *)(*(void *)v14 + 16), (char *)(*(void *)v14 + 40));
              uint64_t v20 = (char *)v11;
              uint64_t v11 = 1064514355;
            }
          }
        }
        else if (v94)
        {
          if (*v93 == v198)
          {
            int v95 = 0;
            goto LABEL_125;
          }
          if (v94 != 1)
          {
            if (v91[5] == v198)
            {
              int v95 = 1;
              goto LABEL_125;
            }
            if (v94 != 2)
            {
              if (v91[6] == v198)
              {
                int v95 = 2;
                goto LABEL_125;
              }
              if (v94 != 3)
              {
                if (v91[7] == v198)
                {
                  int v95 = 3;
                  goto LABEL_125;
                }
                long long v105 = 0;
                uint64_t v106 = v91 + 8;
                while (v94 - 4 != v105)
                {
                  uint64_t v107 = v106[v105++];
                  if (v107 == v198)
                  {
                    int v95 = v105 + 3;
                    if (((v105 + 3) & 0x8000000000000000) == 0) {
                      goto LABEL_125;
                    }
                    goto LABEL_152;
                  }
                }
              }
            }
          }
        }
        unint64_t v100 = v70[10];
        long long v73 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v73) {
          goto LABEL_199;
        }
        v70[10] = v101;
        v199 = v90;
        uint64_t v9 = v70[8];
        if (v9)
        {
          swift_retain();
          ((void (*)(__IOSurface **))v9)(&v199);
          sub_19E645640(v9);
        }
        swift_endAccess();
        uint64_t v14 = IOSurfaceGetAllocSize(v90);

        uint64_t v102 = v70[11];
        long long v73 = __OFSUB__(v102, v14);
        uint64_t v103 = v102 - v14;
        if (v73) {
          goto LABEL_200;
        }
        v70[11] = v103;
        int v104 = v70[7];
        long long v73 = __OFSUB__(v104, 1);
        long long v74 = v104 - 1;
        if (v73) {
          goto LABEL_196;
        }
        continue;
      }
    }
    break;
  }
  int v108 = v171;
  if (v171)
  {
    uint64_t v32 = v185;
    long long v109 = v185 + 4;
    long long v110 = 1;
    uint64_t v14 = v191;
    while (1)
    {
      long long v111 = *v109++;
      long long v112 = v110 * v111;
      if ((unsigned __int128)(v110 * (__int128)v111) >> 64 != (v110 * v111) >> 63) {
        break;
      }
      long long v110 = v112;
      if (!--v108) {
        goto LABEL_161;
      }
    }
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  long long v112 = 1;
  uint64_t v14 = v191;
  uint64_t v32 = v185;
LABEL_161:
  long long v113 = v112 * v170;
  if ((unsigned __int128)(v112 * (__int128)v170) >> 64 != (v112 * v170) >> 63) {
    goto LABEL_220;
  }
  if (v183) {
    goto LABEL_171;
  }
  if (!v180) {
    goto LABEL_222;
  }
  if (v180 == -1 && v113 == 0x8000000000000000) {
    goto LABEL_229;
  }
  long long v114 = v113 % v180;
  if (!(v113 % v180)) {
    goto LABEL_176;
  }
  long long v115 = v113 + v180;
  if (__OFADD__(v113, v180)) {
    goto LABEL_225;
  }
  long long v113 = v115 - v114;
  if (__OFSUB__(v115, v114))
  {
    __break(1u);
LABEL_171:
    long long v116 = getpagesize();
    if (v113 <= v116) {
      goto LABEL_176;
    }
    if (v116)
    {
      long long v117 = v113 % v116;
      if (!v117) {
        goto LABEL_176;
      }
      long long v118 = v113 + v116;
      if (!__OFADD__(v113, v116))
      {
        long long v113 = v118 - v117;
        if (!__OFSUB__(v118, v117)) {
          goto LABEL_176;
        }
        goto LABEL_233;
      }
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
      goto LABEL_234;
    }
    goto LABEL_228;
  }
LABEL_176:
  v191 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D0B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19EC3A060;
  int v120 = (void *)*MEMORY[0x1E4F2F2C0];
  int v121 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2F2C0];
  *(void *)(inited + 40) = v113;
  long long v122 = (void *)*MEMORY[0x1E4F2F0E8];
  *(void *)(inited + 64) = v121;
  *(void *)(inited + 72) = v122;
  *(void *)(inited + 80) = 1;
  long long v123 = (void *)*MEMORY[0x1E4F2EFD8];
  *(void *)(inited + 104) = v121;
  *(void *)(inited + 112) = v123;
  *(void *)(inited + 120) = 1;
  long long v124 = (void *)*MEMORY[0x1E4F2EFE0];
  *(void *)(inited + 144) = v121;
  *(void *)(inited + 152) = v124;
  *(void *)(inited + 160) = v113;
  long long v125 = (void *)*MEMORY[0x1E4F2EFB8];
  *(void *)(inited + 184) = v121;
  *(void *)(inited + 192) = v125;
  *(void *)(inited + 200) = v113;
  long long v126 = MEMORY[0x1E4FBC4C0];
  long long v127 = (void *)*MEMORY[0x1E4F2F150];
  *(_DWORD *)(inited + 240) = 1278226488;
  long long v128 = (void **)MEMORY[0x1E4F2F138];
  *(void *)(inited + 224) = v121;
  *(void *)(inited + 232) = v127;
  long long v129 = *v128;
  *(void *)(inited + 264) = v126;
  *(void *)(inited + 272) = v129;
  *(void *)(inited + 304) = v121;
  *(void *)(inited + 280) = 0;
  long long v130 = v120;
  long long v131 = v122;
  long long v132 = v123;
  int v133 = v124;
  int v134 = v125;
  long long v135 = v127;
  long long v136 = v129;
  sub_19E6511D8(inited);
  type metadata accessor for CFString(0);
  sub_19E695E1C();
  long long v137 = (const __CFDictionary *)sub_19EBF6628();
  swift_bridgeObjectRelease();
  long long v138 = IOSurfaceCreate(v137);

  if (v138)
  {
    *v175 = v138;
    long long v139 = sub_19EBF6538();
    long long v140 = (char *)v179;
    sub_19EBF6568();
    long long v141 = sub_19EBF6D68();
    long long v142 = sub_19EBF6E18();
    long long v143 = v176;
    long long v144 = v177;
    long long v145 = v187;
    if (v142)
    {
      swift_retain();
      int v146 = v167;
      sub_19EBF6598();
      swift_release();
      int v147 = v169;
      if ((*(unsigned int (**)(char *, uint64_t))(v143 + 88))(v146, v169) == *MEMORY[0x1E4FBD340])
      {
        int v148 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v143 + 8))(v146, v147);
        int v148 = "";
      }
      long long v140 = (char *)v179;
      v181(v145, (char *)v179, v144);
      goto LABEL_182;
    }
LABEL_187:

    long long v145 = v140;
    int v151 = v173;
    goto LABEL_188;
  }
LABEL_235:
  v196 = 0;
  v197 = 0xE000000000000000;
  sub_19EBF6FE8();
  sub_19EBF67D8();
  MEMORY[0x19F3BF220](v32, MEMORY[0x1E4FBB550]);
  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19E6C1A2C(v178);
  sub_19EBF67D8();
  swift_bridgeObjectRelease();
  sub_19EBF67D8();
  sub_19EBF7008();
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1 == 1)
  {
    v196 = 0;
    v197 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E695404(void (*a1)(char *, char *, uint64_t), __IOSurface *a2)
{
  uint64_t v44 = a1;
  uint64_t v41 = sub_19EBF6558();
  uint64_t v3 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_19EBF6528();
  uint64_t v6 = *(void **)(v46 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v39 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v39 - v12;
  if (qword_1E945BB50 != -1) {
    swift_once();
  }
  uint64_t v39 = v5;
  uint64_t v40 = v3;
  uint64_t v14 = sub_19EBF6548();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1E946A518);
  sub_19EBF6518();
  uint64_t v43 = v15;
  uint64_t v16 = sub_19EBF6538();
  os_signpost_type_t v17 = sub_19EBF6D78();
  if (sub_19EBF6E18())
  {
    uint64_t v18 = (void (*)(char *, char *, uint64_t))v6[2];
    v18(v11, v13, v46);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    int v42 = v6;
    uint64_t v20 = a2;
    uint64_t v21 = v19;
    *(_WORD *)uint64_t v19 = 0;
    os_signpost_id_t v22 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v16, v17, v22, "CPU :: Storage recycle", "", v21, 2u);
    uint64_t v23 = v21;
    a2 = v20;
    uint64_t v6 = v42;
    MEMORY[0x19F3C3580](v23, -1, -1);

    ((void (*)(char *, uint64_t))v6[1])(v11, v46);
  }
  else
  {

    uint64_t v18 = (void (*)(char *, char *, uint64_t))v6[2];
  }
  uint64_t v24 = v46;
  v18(v11, v13, v46);
  sub_19EBF6588();
  swift_allocObject();
  sub_19EBF6578();
  int v42 = (void *)v6[1];
  ((void (*)(char *, uint64_t))v42)(v13, v24);
  sub_19E6958A0(a2);
  char v25 = sub_19EBF6538();
  sub_19EBF6568();
  int v26 = sub_19EBF6D68();
  if (sub_19EBF6E18())
  {
    uint64_t v44 = v18;
    swift_retain();
    int v27 = v39;
    sub_19EBF6598();
    swift_release();
    uint64_t v29 = v40;
    uint64_t v28 = v41;
    int v30 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v27, v41);
    int v31 = *MEMORY[0x1E4FBD340];
    LODWORD(v43) = v26;
    if (v30 == v31)
    {
      uint64_t v32 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      uint64_t v32 = "";
    }
    uint64_t v33 = v45;
    uint64_t v34 = v46;
    v44(v11, v45, v46);
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    os_signpost_id_t v36 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v25, (os_signpost_type_t)v43, v36, "CPU :: Storage recycle", v32, v35, 2u);
    MEMORY[0x19F3C3580](v35, -1, -1);

    uint64_t v37 = (void (*)(char *, uint64_t))v42;
    ((void (*)(char *, uint64_t))v42)(v33, v34);
    v37(v11, v46);
  }
  else
  {

    ((void (*)(char *, uint64_t))v42)(v45, v46);
  }
  return swift_release();
}

void sub_19E6958A0(__IOSurface *a1)
{
  uint64_t v3 = v1;
  int64_t AllocSize = IOSurfaceGetAllocSize(a1);
  int64_t v6 = AllocSize;
  if (AllocSize <= 0) {
    uint64_t v7 = -(-AllocSize & 0xF);
  }
  else {
    uint64_t v7 = AllocSize & 0xF;
  }
  char v52 = a1;
  if (v7)
  {
    int64_t v8 = AllocSize + 16;
    if (__OFADD__(AllocSize, 16)) {
      goto LABEL_80;
    }
    BOOL v9 = __OFSUB__(v8, v7);
    uint64_t v10 = v8 - v7;
    if (v9)
    {
LABEL_81:
      __break(1u);
      return;
    }
    uint64_t v51 = v10;
  }
  else
  {
    uint64_t v51 = AllocSize;
  }
  uint64_t v11 = swift_beginAccess();
  uint64_t v12 = v3[7];
  BOOL v9 = __OFSUB__(v12, 1);
  uint64_t v13 = v12 - 1;
  if (!v9)
  {
    uint64_t v14 = v3 + 6;
    do
    {
      if (v3[10] < v13)
      {
        uint64_t v15 = MEMORY[0x19F3C2E80](v11);
        if (v15 < 1) {
          goto LABEL_66;
        }
        float v16 = (float)v15 * 0.95;
        if ((~LODWORD(v16) & 0x7F800000) == 0) {
          goto LABEL_72;
        }
        if (v16 <= -9.2234e18) {
          goto LABEL_73;
        }
        if (v16 >= 9.2234e18) {
          goto LABEL_74;
        }
        if (v3[11] < (uint64_t)v16) {
          goto LABEL_66;
        }
      }
      swift_beginAccess();
      if (*(uint64_t *)(*v14 + 24) < 1) {
        goto LABEL_65;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19E668978();
      }
      os_signpost_type_t v17 = (void *)*v14;
      uint64_t v18 = *(void *)(*v14 + 24);
      BOOL v9 = __OFSUB__(v18, 1);
      uint64_t v19 = v18 - 1;
      if (v9)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      uint64_t v20 = v17[4] + v19;
      uint64_t v21 = v17[2];
      if (v20 < v21) {
        uint64_t v21 = 0;
      }
      uint64_t v22 = v17[v20 - v21 + 5];
      v17[3] = v19;
      uint64_t v54 = v22;
      uint64_t v2 = (uint64_t)sub_19E6436CC(v53, v22);
      if (!*(void *)v23 || *(uint64_t *)(*(void *)v23 + 24) <= 0) {
        goto LABEL_64;
      }
      uint64_t v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_19E6689D8();
      }
      char v25 = *(void **)v24;
      uint64_t v26 = *(void *)(*(void *)v24 + 24);
      BOOL v9 = __OFSUB__(v26, 1);
      uint64_t v27 = v26 - 1;
      if (v9) {
        goto LABEL_69;
      }
      uint64_t v28 = v25[4] + v27;
      uint64_t v29 = v25[2];
      if (v28 < v29) {
        uint64_t v29 = 0;
      }
      int v30 = (__IOSurface *)v25[v28 - v29 + 5];
      v25[3] = v27;
      ((void (*)(void *, void))v2)(v53, 0);
      uint64_t v32 = v3[3];
      int v31 = (void *)v3[4];
      uint64_t v33 = v3[5];
      uint64_t v34 = v31 + 4;
      uint64_t v35 = v31[2];
      if (v32)
      {
        unint64_t v36 = sub_19E643EF4(v54, (uint64_t)v34, v35, (uint64_t *)(v32 + 16));
        if (v37) {
          goto LABEL_57;
        }
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_75;
        }
      }
      else
      {
        if (!v35) {
          goto LABEL_57;
        }
        if (*v34 == v54)
        {
          unint64_t v36 = 0;
        }
        else
        {
          if (v35 == 1) {
            goto LABEL_57;
          }
          if (v31[5] == v54)
          {
            unint64_t v36 = 1;
          }
          else
          {
            if (v35 == 2) {
              goto LABEL_57;
            }
            if (v31[6] == v54)
            {
              unint64_t v36 = 2;
            }
            else
            {
              if (v35 == 3) {
                goto LABEL_57;
              }
              if (v31[7] != v54)
              {
                uint64_t v38 = 0;
                uint64_t v39 = v31 + 8;
                while (v35 - 4 != v38)
                {
                  uint64_t v40 = v39[v38++];
                  if (v40 == v54)
                  {
                    unint64_t v36 = v38 + 3;
                    if (v38 + 3 < 0) {
                      goto LABEL_75;
                    }
                    goto LABEL_50;
                  }
                }
                goto LABEL_57;
              }
              unint64_t v36 = 3;
            }
          }
        }
      }
LABEL_50:
      if (v36 >= *(void *)(v33 + 16)) {
        goto LABEL_76;
      }
      if (!*(void *)(*(void *)(v33 + 8 * v36 + 32) + 24))
      {
        MEMORY[0x1F4188790](v36);
        uint64_t v2 = sub_19E6437E0((uint64_t (*)(uint64_t *))sub_19E64536C);
        uint64_t v41 = *(void *)(*v14 + 24);
        if (v41 < v2) {
          goto LABEL_77;
        }
        if (v2 < 0) {
          goto LABEL_78;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_19E668978();
        }
        sub_19E644380((char *)v2, v41, (uint64_t *)(*v14 + 16), (char *)(*v14 + 40));
      }
LABEL_57:
      uint64_t v42 = v3[10];
      BOOL v9 = __OFSUB__(v42, 1);
      uint64_t v43 = v42 - 1;
      if (v9) {
        goto LABEL_70;
      }
      v3[10] = v43;
      uint64_t v55 = v30;
      uint64_t v44 = (void (*)(__IOSurface **))v3[8];
      if (v44)
      {
        swift_retain();
        v44(&v55);
        sub_19E645640((uint64_t)v44);
      }
      swift_endAccess();
      size_t v45 = IOSurfaceGetAllocSize(v30);

      uint64_t v46 = v3[11];
      BOOL v9 = __OFSUB__(v46, v45);
      size_t v47 = v46 - v45;
      if (v9) {
        goto LABEL_71;
      }
      v3[11] = v47;
      uint64_t v48 = v3[7];
      BOOL v9 = __OFSUB__(v48, 1);
      uint64_t v13 = v48 - 1;
    }
    while (!v9);
  }
  __break(1u);
LABEL_64:
  ((void (*)(void *, void))v2)(v53, 0);
LABEL_65:
  swift_endAccess();
LABEL_66:
  swift_beginAccess();
  sub_19E642494(v52, v51);
  swift_endAccess();
  uint64_t v49 = v3[11];
  BOOL v9 = __OFADD__(v49, v6);
  uint64_t v50 = v49 + v6;
  if (v9) {
    goto LABEL_79;
  }
  v3[11] = v50;
}

uint64_t sub_19E695D34()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19E645640(v1);

  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t type metadata accessor for IOSurfaceAllocator()
{
  return self;
}

uint64_t sub_19E695DD4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19E695DE4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_19E695E1C()
{
  unint64_t result = qword_1E945BD20;
  if (!qword_1E945BD20)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945BD20);
  }
  return result;
}

uint64_t sub_19E695E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9 = sub_19EBF5FF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v27[-v14];
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v13, **((unsigned int **)&unk_1E59A3698 + a6), v9);
  sub_19EBF5F88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v13, v9);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  long long v16 = *(_OWORD *)(a1 + 176);
  long long v38 = *(_OWORD *)(a1 + 160);
  long long v39 = v16;
  long long v40 = *(_OWORD *)(a1 + 192);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v34 = *(_OWORD *)(a1 + 96);
  long long v35 = v17;
  long long v18 = *(_OWORD *)(a1 + 144);
  long long v36 = *(_OWORD *)(a1 + 128);
  long long v37 = v18;
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v30[184] = *(_OWORD *)(a1 + 32);
  long long v31 = v19;
  long long v20 = *(_OWORD *)(a1 + 80);
  long long v32 = *(_OWORD *)(a1 + 64);
  long long v33 = v20;
  if (!*(void *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
LABEL_7:
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      v27[23] = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E6962D4);
  }
  long long v21 = *(_OWORD *)(a2 + 176);
  long long v49 = *(_OWORD *)(a2 + 160);
  long long v50 = v21;
  long long v51 = *(_OWORD *)(a2 + 192);
  long long v22 = *(_OWORD *)(a2 + 112);
  long long v45 = *(_OWORD *)(a2 + 96);
  long long v46 = v22;
  long long v23 = *(_OWORD *)(a2 + 144);
  long long v47 = *(_OWORD *)(a2 + 128);
  long long v48 = v23;
  long long v24 = *(_OWORD *)(a2 + 48);
  long long v41 = *(_OWORD *)(a2 + 32);
  long long v42 = v24;
  long long v25 = *(_OWORD *)(a2 + 80);
  long long v43 = *(_OWORD *)(a2 + 64);
  long long v44 = v25;
  sub_19E5E7C78((uint64_t)v30);
  sub_19E68DD18((uint64_t)v30, (uint64_t)&v52);
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (!sub_19EBF5F78()) {
    goto LABEL_7;
  }
  sub_19EBF5ED8();
  return swift_release();
}

uint64_t sub_19E69630C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v17[1] = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v11 = *v9++;
      unint64_t v10 = v11;
      switch(v11 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v12 = (void **)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v12 = (void **)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v12 = (void **)(v10 + 40);
          break;
      }
      uint64_t v13 = *v12;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19E68F8F0(v13, 0);
      *int64_t v6 = v10;
      uint64_t v18 = v8;
      unint64_t v15 = *(void *)(v8 + 16);
      unint64_t v14 = *(void *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_19E66F8E8(v14 > 1, v15 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v15 + 1;
      sub_19E698FA4((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15);
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_19E696500(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    if (*(void *)(a2 + 16))
    {
      sub_19EBF6E08();
      sub_19EBF6D88();
      return sub_19EBF6118();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  uint64_t v4 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E696744(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    if (*(void *)(a2 + 16))
    {
      sub_19EBF6E08();
      sub_19EBF6D88();
      return sub_19EBF5F58();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  uint64_t v4 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

void *sub_19E69698C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v16 = sub_19E69630C(a1);
  uint64_t v17 = sub_19E69630C(a2);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E696B20);
  }
  unint64_t v18 = *(void *)(a1 + 32);
  uint64_t v32 = v17;
  uint64_t v33 = v16;
  switch(v18 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v19 = a8;
      uint64_t v20 = v18 & 0x3FFFFFFFFFFFFFFFLL;
      long long v21 = (uint64_t *)(v20 + 24);
      long long v22 = (char *)(v20 + 32);
      long long v23 = (char *)(v20 + 33);
      break;
    case 2uLL:
      uint64_t v19 = a8;
      uint64_t v24 = v18 & 0x3FFFFFFFFFFFFFFFLL;
      long long v21 = (uint64_t *)(v24 + 16);
      long long v22 = (char *)(v24 + 24);
      long long v23 = (char *)(v24 + 25);
      break;
    default:
      uint64_t v19 = a8;
      long long v21 = (uint64_t *)(v18 + 40);
      long long v22 = (char *)(v18 + 48);
      long long v23 = (char *)(v18 + 49);
      break;
  }
  uint64_t v25 = *v21;
  char v26 = *v22;
  char v27 = *v23;
  swift_bridgeObjectRetain();
  char v28 = a7 & 1;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a5;
  *(void *)(v29 + 24) = a6;
  *(unsigned char *)(v29 + 32) = v28;
  *(void *)(v29 + 40) = v19;
  *(void *)(v29 + 48) = v25;
  *(unsigned char *)(v29 + 56) = v26;
  *(unsigned char *)(v29 + 57) = v27;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  int v30 = (void *)swift_allocObject();
  v30[2] = v33;
  v30[3] = v32;
  v30[4] = a3;
  v30[5] = a4;
  v30[6] = sub_19E69904C;
  v30[7] = v29;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v30;
}

uint64_t sub_19E696B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(a1 + 168);
  if (!v8) {
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a2 + 168);
  if (v9)
  {
    if (a5) {
      return sub_19E699238(v8, v9, a7, a8, a6);
    }
    else {
      return sub_19E699074(v8, v9, a7, a8, a6);
    }
  }
LABEL_11:
  uint64_t v11 = sub_19EBF6128();
  sub_19E691274();
  uint64_t v12 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x1E4FBAB50], v11);
  swift_willThrow();

  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E696D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v69 = a7;
  long long v70 = a8;
  uint64_t v72 = a2;
  uint64_t v73 = a4;
  uint64_t v61 = *(void *)(a6 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v68 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t result = MEMORY[0x1F4188790](v11);
  int v67 = (char *)&v56 - v17;
  int64_t v18 = *(void *)(v15 + 16);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(v15 + 32);
    uint64_t v20 = 1;
    long long v21 = (uint64_t *)(v15 + 32);
    uint64_t v22 = *(void *)(v15 + 16);
    while (1)
    {
      uint64_t v23 = *v21++;
      uint64_t v24 = v20 * v23;
      if ((unsigned __int128)(v20 * (__int128)v23) >> 64 != (v20 * v23) >> 63) {
        break;
      }
      uint64_t v20 = v24;
      if (!--v22)
      {
        uint64_t v25 = 1;
        char v26 = (uint64_t *)(v15 + 32);
        uint64_t v27 = *(void *)(v15 + 16);
        while (1)
        {
          uint64_t v28 = *v26++;
          uint64_t v29 = v25 * v28;
          if ((unsigned __int128)(v25 * (__int128)v28) >> 64 != (v25 * v28) >> 63) {
            goto LABEL_44;
          }
          uint64_t v25 = v29;
          if (!--v27)
          {
            uint64_t v30 = 1;
            uint64_t v31 = *(void *)(v15 + 16);
            while (1)
            {
              uint64_t v32 = *v19++;
              uint64_t v33 = v30 * v32;
              if ((unsigned __int128)(v30 * (__int128)v32) >> 64 != (v30 * v32) >> 63) {
                goto LABEL_45;
              }
              uint64_t v30 = v33;
              if (!--v31)
              {
                if (v18 <= v16) {
                  goto LABEL_40;
                }
                uint64_t v34 = *(void *)(v15 + 8 * v16 + 32);
                if (!v34) {
                  goto LABEL_51;
                }
                if (v33 == 0x8000000000000000 && v34 == -1) {
                  goto LABEL_56;
                }
                if (v18 <= (uint64_t)v16) {
                  goto LABEL_52;
                }
                if (v16 + 1 != v18)
                {
                  if ((uint64_t)(v16 + 1) >= v18) {
                    goto LABEL_57;
                  }
                  unint64_t v36 = ~v16 + v18;
                  long long v37 = (uint64_t *)(v15 + 8 * v16 + 40);
                  uint64_t v38 = 1;
                  while (1)
                  {
                    uint64_t v39 = *v37++;
                    uint64_t v35 = v38 * v39;
                    if ((unsigned __int128)(v38 * (__int128)v39) >> 64 != (v38 * v39) >> 63) {
                      goto LABEL_46;
                    }
                    uint64_t v38 = v35;
                    if (!--v36) {
                      goto LABEL_22;
                    }
                  }
                }
                uint64_t v35 = 1;
LABEL_22:
                uint64_t v60 = v34 * v35;
                if ((unsigned __int128)(v34 * (__int128)v35) >> 64 != (v34 * v35) >> 63) {
                  goto LABEL_53;
                }
                uint64_t v40 = v33 / v34;
                if (v33 / v34 < 0) {
                  goto LABEL_54;
                }
                if (v40)
                {
                  if (v34 < 0) {
                    goto LABEL_55;
                  }
                  uint64_t v41 = 0;
                  long long v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
                  uint64_t v64 = (uint64_t (**)(uint64_t, char *, uint64_t))(v61 + 40);
                  int v65 = (void (**)(char *, uint64_t))(v61 + 8);
                  uint64_t v58 = v34;
                  uint64_t v59 = v61 + 24;
                  uint64_t v56 = v34 - 1;
                  uint64_t v57 = v33 / v34;
                  uint64_t v66 = (uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
                  uint64_t v63 = v35;
                  while (v41 != v40)
                  {
                    if (!v35) {
                      goto LABEL_48;
                    }
                    uint64_t v43 = v41 / v35 * v60;
                    if ((unsigned __int128)(v41 / v35 * (__int128)v60) >> 64 != v43 >> 63) {
                      goto LABEL_49;
                    }
                    uint64_t v44 = v43 + v41 % v35;
                    if (__OFADD__(v43, v41 % v35)) {
                      goto LABEL_50;
                    }
                    uint64_t v62 = v41;
                    uint64_t v45 = *(void *)(v61 + 72);
                    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 24))(v73 + v45 * v44, v72 + v45 * v44, a6);
                    uint64_t v46 = v44 + v35;
                    if (__OFADD__(v44, v35)) {
                      goto LABEL_41;
                    }
                    if (v58 != 1)
                    {
                      long long v47 = *v42;
                      uint64_t v48 = v56;
                      uint64_t v49 = v44;
                      uint64_t v71 = v45;
                      do
                      {
                        uint64_t result = v47(v13, v73 + v45 * v49, a6);
                        if (__OFADD__(v44, v35)) {
                          goto LABEL_42;
                        }
                        uint64_t v50 = v72 + v45 * (v44 + v35);
                        long long v51 = v68;
                        uint64_t v52 = v47;
                        v47(v68, v50, a6);
                        BNNSNDArrayDescriptor v53 = v67;
                        v70(v13, v51, a6, v69);
                        uint64_t v54 = *v65;
                        uint64_t v55 = v51;
                        uint64_t v45 = v71;
                        (*v65)(v55, a6);
                        v54(v13, a6);
                        uint64_t v35 = v63;
                        long long v42 = v66;
                        uint64_t result = (*v64)(v73 + v45 * v46, v53, a6);
                        if (__OFADD__(v46, v35)) {
                          goto LABEL_41;
                        }
                        uint64_t v49 = v46;
                        v44 += v35;
                        v46 += v35;
                        --v48;
                        long long v47 = v52;
                      }
                      while (v48);
                    }
                    uint64_t v41 = v62 + 1;
                    uint64_t v40 = v57;
                    if (v62 + 1 == v57) {
                      return result;
                    }
                  }
                  goto LABEL_47;
                }
                return result;
              }
            }
          }
        }
      }
    }
  }
  else
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_19E6971D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = *(void **)(a3 + 32);
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    sub_19EBF6E08();
    sub_19EBF6D88();
    return sub_19EBF61D8();
  }
LABEL_7:
  __break(1u);

  uint64_t v6 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

void *sub_19E69745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v9 = v4[1];
  long long v22 = *v4;
  long long v23 = v9;
  long long v24 = v4[2];
  uint64_t v10 = sub_19E69630C(a1);
  uint64_t v11 = sub_19E69630C(a2);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = v11;
  switch(v12 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v14 = (v12 & 0x3FFFFFFFFFFFFFFFLL) + 24;
      break;
    case 2uLL:
      uint64_t v14 = (v12 & 0x3FFFFFFFFFFFFFFFLL) + 16;
      break;
    default:
      uint64_t v14 = v12 + 40;
      break;
  }
  if (*(void *)(*(void *)v14 + 16) >= 2uLL)
  {
    switch(v12 >> 62)
    {
      case 1uLL:
      case 3uLL:
        uint64_t v15 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      case 2uLL:
        uint64_t v15 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
        break;
      default:
        uint64_t v15 = (uint64_t *)(v12 + 40);
        break;
    }
    uint64_t v17 = *v15;
    if (*(void *)(v17 + 16))
    {
      uint64_t v16 = *(void *)(v17 + 32);
      goto LABEL_14;
    }
LABEL_16:
    __break(1u);
    JUMPOUT(0x19E697614);
  }
  uint64_t v16 = 1;
LABEL_14:
  uint64_t v18 = swift_allocObject();
  long long v19 = v23;
  *(_OWORD *)(v18 + 16) = v22;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = v24;
  *(void *)(v18 + 64) = v16;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v10;
  v20[3] = v13;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = sub_19E698F3C;
  v20[7] = v18;
  sub_19E66905C((uint64_t)&v22);
  swift_retain();
  swift_bridgeObjectRetain();
  return v20;
}

uint64_t sub_19E697634(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_19EBF5EE8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (_DWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v34 - v13;
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  long long v15 = *(_OWORD *)(a1 + 176);
  long long v47 = *(_OWORD *)(a1 + 160);
  long long v48 = v15;
  long long v49 = *(_OWORD *)(a1 + 192);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v43 = *(_OWORD *)(a1 + 96);
  long long v44 = v16;
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v45 = *(_OWORD *)(a1 + 128);
  long long v46 = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v39[8] = *(_OWORD *)(a1 + 32);
  long long v40 = v18;
  long long v19 = *(_OWORD *)(a1 + 80);
  long long v41 = *(_OWORD *)(a1 + 64);
  long long v42 = v19;
  if (!*(void *)(a2 + 16))
  {
LABEL_18:
    __break(1u);

    goto LABEL_19;
  }
  long long v20 = *(_OWORD *)(a2 + 176);
  long long v58 = *(_OWORD *)(a2 + 160);
  long long v59 = v20;
  long long v60 = *(_OWORD *)(a2 + 192);
  long long v21 = *(_OWORD *)(a2 + 112);
  long long v54 = *(_OWORD *)(a2 + 96);
  long long v55 = v21;
  long long v22 = *(_OWORD *)(a2 + 144);
  long long v56 = *(_OWORD *)(a2 + 128);
  long long v57 = v22;
  long long v23 = *(_OWORD *)(a2 + 48);
  long long v50 = *(_OWORD *)(a2 + 32);
  long long v51 = v23;
  long long v24 = *(_OWORD *)(a2 + 80);
  long long v52 = *(_OWORD *)(a2 + 64);
  long long v53 = v24;
  sub_19E698F48(a3 + 32, (uint64_t)v39);
  sub_19E698F48((uint64_t)v39, (uint64_t)&v61);
  if (v62 == 1)
  {
    if (v61) {
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FBAA50];
    }
    else {
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4FBAA48];
    }
    (*(void (**)(_DWORD *, void, uint64_t))(v9 + 104))(v12, *v25, v8);
  }
  else
  {
    *unint64_t v12 = v61;
    (*(void (**)(_DWORD *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4FBAA40], v8);
  }
  (*(void (**)(char *, _DWORD *, uint64_t))(v9 + 32))(v14, v12, v8);
  uint64_t v38 = *(void *)(a3 + 40);
  uint64_t v27 = v38 + 16;
  int64_t v26 = *(void *)(v38 + 16);
  if (v26)
  {
    uint64_t v36 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_19E66F938(0, v26, 0);
    uint64_t v28 = v36;
    do
    {
      long long v29 = *(_OWORD *)(v27 + 16 * v26);
      uint64_t v36 = v28;
      unint64_t v31 = *(void *)(v28 + 16);
      unint64_t v30 = *(void *)(v28 + 24);
      if (v31 >= v30 >> 1)
      {
        long long v34 = v29;
        sub_19E66F938(v30 > 1, v31 + 1, 1);
        long long v29 = v34;
        uint64_t v28 = v36;
      }
      *(void *)(v28 + 16) = v31 + 1;
      *(_OWORD *)(v28 + 16 * v31 + 32) = v29;
      --v26;
    }
    while (v26);
    sub_19E5D8438((uint64_t)&v38);
  }
  sub_19EBF5F28();
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF5F18())
  {
    sub_19EBF5ED8();
    return swift_release();
  }
LABEL_19:
  uint64_t v33 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    char v35 = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E697A98(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, long long *a5)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a1 + 168);
  if (!v6) {
    goto LABEL_8;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 168);
  if (v7)
  {
    long long v10 = *a5;
    long long v17 = a5[1];
    long long v18 = v10;
    swift_bridgeObjectRetain();
    sub_19E668FC4((uint64_t)&v18);
    sub_19E668FC4((uint64_t)&v17);
    return sub_19E69846C(v6, a3, a4 & 0x1FF, v7, a3, a5, v11);
  }
LABEL_8:
  uint64_t v13 = sub_19EBF6128();
  sub_19E691274();
  uint64_t v14 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FBAB50], v13);
  swift_willThrow();

  uint64_t v16 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

void sub_19E697D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v69 = a1;
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = *(void *)(a4 + 32);
  if (*(unsigned char *)(a4 + 40)) {
    int v6 = -1;
  }
  else {
    int v6 = 1;
  }
  int v68 = v6;
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  uint64_t v9 = sub_19E698E78(1, 0, v5, a3);
  uint64_t v10 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  unint64_t v11 = *(void *)(a3 + 16);
  if ((uint64_t)v11 < v10)
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  uint64_t v12 = v9;
  uint64_t v13 = sub_19E698E78(1, v10, *(void *)(a3 + 16), a3);
  if (v5 >= v11)
  {
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  unint64_t v14 = v13;
  uint64_t v15 = *(void *)(a3 + 8 * v5 + 32);
  uint64_t v65 = v13 * v15;
  if ((unsigned __int128)(v13 * (__int128)v15) >> 64 != (v13 * v15) >> 63)
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if ((unint64_t)(v15 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  if (4 * v15 < 0)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  if ((unint64_t)(4 * v15 + 0x2000000000000000) >> 62)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  if (16 * v15 < 1025 || (uint64_t v13 = swift_stdlib_isStackAllocationSafe(), (v13 & 1) != 0))
  {
    uint64_t isStackAllocationSafe = MEMORY[0x1F4188790](v13);
    long long v18 = (float *)((char *)&v56 - v17);
    if ((unint64_t)(v15 - 0x1000000000000000) >> 61 != 7)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (8 * v15 < 0)
    {
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if ((unint64_t)(8 * v15 + 0x1000000000000000) >> 61)
    {
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    char v62 = &v56;
    uint64_t v63 = v4;
    if (v15 << 6 >= 1025)
    {
      uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        uint64_t v39 = swift_slowAlloc();
        if (v12 < 0)
        {
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        long long v20 = (vDSP_Length *)v39;
        if (!v12)
        {
LABEL_109:
          MEMORY[0x19F3C3580](v20, -1, -1);
          return;
        }
        if ((v14 & 0x8000000000000000) != 0) {
LABEL_145:
        }
          __break(1u);
        uint64_t v40 = 0;
        if (v15 <= 4) {
          uint64_t v41 = 4;
        }
        else {
          uint64_t v41 = v15;
        }
        long long v42 = (long long *)(v41 - 4);
        if (v41 - 4 >= (unint64_t)(v15 - 5)) {
          long long v42 = (long long *)(v15 - 5);
        }
        int v61 = v42;
        long long v43 = (char *)v42 + 1;
        uint64_t v44 = v43 & 3;
        if ((v43 & 3) == 0) {
          uint64_t v44 = 4;
        }
        unint64_t v60 = (unint64_t)&v43[-v44];
        uint64_t v58 = v39 + 48;
        uint64_t v59 = (uint64_t)&v43[-v44 + 4];
        unint64_t v67 = v14 >> 31;
        long long v57 = xmmword_19EC3A120;
        uint64_t v64 = v12;
        while (1)
        {
          if (v40 == v12) {
            goto LABEL_141;
          }
          uint64_t v66 = v40;
          if (v14) {
            break;
          }
LABEL_75:
          uint64_t v40 = v66 + 1;
          uint64_t v12 = v64;
          if (v66 + 1 == v64) {
            goto LABEL_109;
          }
        }
        uint64_t v45 = v65 * v66;
        if ((unsigned __int128)(v65 * (__int128)v66) >> 64 != (v65 * v66) >> 63) {
          goto LABEL_142;
        }
        if (v15 < 0)
        {
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v46 = 0;
        while (1)
        {
          if (v46 == v14) {
            goto LABEL_121;
          }
          uint64_t v47 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_122;
          }
          if (v15)
          {
            *long long v20 = 0;
            if (v15 != 1)
            {
              v20[1] = 1;
              if (v15 != 2)
              {
                void v20[2] = 2;
                if (v15 != 3)
                {
                  v20[3] = 3;
                  if (v15 != 4)
                  {
                    if ((unint64_t)v61 >= 4)
                    {
                      long long v49 = (int64x2_t *)v58;
                      unint64_t v50 = v60;
                      int64x2_t v51 = (int64x2_t)v57;
                      do
                      {
                        v49[-1] = v51;
                        int64x2_t *v49 = vaddq_s64(v51, vdupq_n_s64(2uLL));
                        int64x2_t v51 = vaddq_s64(v51, vdupq_n_s64(4uLL));
                        v49 += 2;
                        v50 -= 4;
                      }
                      while (v50);
                      uint64_t v48 = v59;
                    }
                    else
                    {
                      uint64_t v48 = 4;
                    }
                    do
                    {
                      if (v41 == v48) {
                        goto LABEL_119;
                      }
                      v20[v48] = v48;
                      ++v48;
                    }
                    while (v15 != v48);
                    if (v15 > 0x7FFFFFFF) {
                      goto LABEL_120;
                    }
                  }
                }
              }
            }
          }
          if (v67) {
            goto LABEL_123;
          }
          cblas_scopy(v15, (const float *)(v69 + 4 * v47), v14, v18, 1);
          vDSP_vsorti(v18, v20, 0, v15, v68);
          if (v15) {
            break;
          }
LABEL_81:
          if (++v46 == v14) {
            goto LABEL_75;
          }
        }
        if (v15 < 1) {
          goto LABEL_124;
        }
        uint64_t v52 = 0;
        while (1)
        {
          unint64_t v53 = v52 * v14;
          if ((unsigned __int128)(v52 * (__int128)(uint64_t)v14) >> 64 != (uint64_t)(v52 * v14) >> 63) {
            break;
          }
          BOOL v35 = __OFADD__(v47, v53);
          uint64_t v54 = v47 + v53;
          if (v35) {
            goto LABEL_111;
          }
          vDSP_Length v55 = v20[v52];
          if (v55 >> 31) {
            goto LABEL_112;
          }
          ++v52;
          *(_DWORD *)(a2 + 4 * v54) = v55;
          if (v15 == v52) {
            goto LABEL_81;
          }
        }
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
        goto LABEL_126;
      }
    }
    int v61 = &v56;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    long long v20 = (vDSP_Length *)((char *)&v56 - v19);
    if (v12 < 0)
    {
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (v12)
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_140;
      }
      uint64_t v21 = 0;
      if (v15 <= 4) {
        uint64_t v22 = 4;
      }
      else {
        uint64_t v22 = v15;
      }
      unint64_t v23 = v22 - 4;
      if (v22 - 4 >= (unint64_t)(v15 - 5)) {
        unint64_t v23 = v15 - 5;
      }
      unint64_t v60 = v23;
      unint64_t v24 = v23 + 1;
      uint64_t v25 = v24 & 3;
      if ((v24 & 3) == 0) {
        uint64_t v25 = 4;
      }
      uint64_t v59 = v24 - v25;
      uint64_t v58 = v24 - v25 + 4;
      *(void *)&long long v57 = v20 + 6;
      unint64_t v67 = v14 >> 31;
      long long v56 = xmmword_19EC3A120;
      uint64_t v64 = v12;
      while (1)
      {
        if (v21 == v12) {
          goto LABEL_125;
        }
        uint64_t v66 = v21;
        if (v14) {
          break;
        }
LABEL_30:
        uint64_t v21 = v66 + 1;
        uint64_t v12 = v64;
        if (v66 + 1 == v64) {
          return;
        }
      }
      uint64_t v26 = v65 * v66;
      if ((unsigned __int128)(v65 * (__int128)v66) >> 64 != (v65 * v66) >> 63) {
        goto LABEL_133;
      }
      if (v15 < 0)
      {
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }
      uint64_t v27 = 0;
      while (1)
      {
        if (v27 == v14) {
          goto LABEL_115;
        }
        uint64_t v28 = v26 + v27;
        if (__OFADD__(v26, v27)) {
          goto LABEL_116;
        }
        if (v15)
        {
          *long long v20 = 0;
          if (v15 != 1)
          {
            v20[1] = 1;
            if (v15 != 2)
            {
              void v20[2] = 2;
              if (v15 != 3)
              {
                v20[3] = 3;
                if (v15 != 4)
                {
                  if (v60 >= 4)
                  {
                    unint64_t v30 = (int64x2_t *)v57;
                    uint64_t v31 = v59;
                    int64x2_t v32 = (int64x2_t)v56;
                    do
                    {
                      v30[-1] = v32;
                      *unint64_t v30 = vaddq_s64(v32, vdupq_n_s64(2uLL));
                      int64x2_t v32 = vaddq_s64(v32, vdupq_n_s64(4uLL));
                      v30 += 2;
                      v31 -= 4;
                    }
                    while (v31);
                    uint64_t v29 = v58;
                  }
                  else
                  {
                    uint64_t v29 = 4;
                  }
                  do
                  {
                    if (v22 == v29) {
                      goto LABEL_113;
                    }
                    v20[v29] = v29;
                    ++v29;
                  }
                  while (v15 != v29);
                  if (v15 > 0x7FFFFFFF) {
                    goto LABEL_114;
                  }
                }
              }
            }
          }
        }
        if (v67) {
          goto LABEL_117;
        }
        cblas_scopy(v15, (const float *)(v69 + 4 * v28), v14, v18, 1);
        vDSP_vsorti(v18, v20, 0, v15, v68);
        if (v15) {
          break;
        }
LABEL_36:
        if (++v27 == v14) {
          goto LABEL_30;
        }
      }
      if (v15 >= 1)
      {
        uint64_t v33 = 0;
        while (1)
        {
          unint64_t v34 = v33 * v14;
          if ((unsigned __int128)(v33 * (__int128)(uint64_t)v14) >> 64 != (uint64_t)(v33 * v14) >> 63) {
            break;
          }
          BOOL v35 = __OFADD__(v28, v34);
          uint64_t v36 = v28 + v34;
          if (v35) {
            goto LABEL_107;
          }
          vDSP_Length v37 = v20[v33];
          if (v37 >> 31) {
            goto LABEL_108;
          }
          ++v33;
          *(_DWORD *)(a2 + 4 * v36) = v37;
          if (v15 == v33) {
            goto LABEL_36;
          }
        }
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
      goto LABEL_118;
    }
  }
  else
  {
    uint64_t v38 = swift_slowAlloc();
    sub_19E6988BC(v38, 4 * v15, v15, v69, a2, v12, v14, v65, v68);
    if (v4)
    {

      MEMORY[0x19F3C3580](v38, -1, -1);
      __break(1u);
    }
    else
    {
      MEMORY[0x19F3C3580](v38, -1, -1);
    }
  }
}

uint64_t sub_19E69846C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, char *a7@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a4;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = sub_19EBF7348();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a2 + 16);
  if (!v18)
  {
    if (a3 == 10) {
      goto LABEL_14;
    }
    uint64_t v43 = v7;
    int64_t v20 = 1;
    uint64_t v23 = 4;
LABEL_8:
    if ((unint64_t)(v23 + 0x2000000000000000) >> 62) {
      goto LABEL_35;
    }
    uint64_t v42 = a5;
    if (16 * v20 < 1025 || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
    {
      uint64_t v15 = MEMORY[0x1F4188790](&v40);
      a7 = (char *)&v40 - v24;
      if (v25 > 0xA) {
        goto LABEL_18;
      }
      uint64_t v26 = qword_19EC3A1E8[(char)a3];
LABEL_19:
      if ((unsigned __int128)(v20 * (__int128)v26) >> 64 != (v20 * v26) >> 63)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v41 = a6;
      uint64_t v27 = v44;
      uint64_t v28 = v44 + v20 * v26;
      uint64_t v29 = *MEMORY[0x1E4FBBE88];
      unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
      uint64_t v40 = v15;
      v30(v17, v29, v13);
      uint64_t v31 = v27;
      a6 = v41;
      sub_19E6B60D0(v31, v28, a3 & 0x1FF, (uint64_t)a7, (uint64_t)&a7[v23], 10, v20, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      uint64_t v32 = v43;
      sub_19E697D04((uint64_t)a7, v45, v42, (uint64_t)a6);
      if (v32)
      {
        swift_willThrow();
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    else
    {
      LODWORD(v41) = a3;
      uint64_t v33 = swift_slowAlloc();
      if (v41 > 0xA) {
        uint64_t v34 = 8;
      }
      else {
        uint64_t v34 = qword_19EC3A1E8[(char)a3];
      }
      if ((unsigned __int128)(v20 * (__int128)v34) >> 64 != (v20 * v34) >> 63) {
LABEL_36:
      }
        __break(1u);
      uint64_t v35 = v44;
      uint64_t v40 = v44 + v20 * v34;
      uint64_t v41 = (_OWORD *)(v33 + v23);
      uint64_t v36 = v33;
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FBBE88], v13);
      sub_19E6B60D0(v35, v40, a3 & 0x1FF, v36, (uint64_t)v41, 10, v20, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      uint64_t v37 = v43;
      sub_19E697D04(v36, v45, v42, (uint64_t)a6);
      MEMORY[0x19F3C3580](v36, -1, -1);
      if (v37) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_30:
    long long v47 = *a6;
    sub_19E669028((uint64_t)&v47);
    long long v46 = a6[1];
    uint64_t v38 = &v46;
    return sub_19E669028((uint64_t)v38);
  }
  uint64_t v19 = (uint64_t *)(a2 + 32);
  int64_t v20 = 1;
  do
  {
    uint64_t v21 = *v19++;
    uint64_t v22 = (unsigned __int128)(v20 * (__int128)v21) >> 64;
    v20 *= v21;
    if (v22 != v20 >> 63)
    {
      __break(1u);
      goto LABEL_33;
    }
    --v18;
  }
  while (v18);
  if (a3 != 10)
  {
    if ((unint64_t)(v20 - 0x2000000000000000) >> 62 == 3)
    {
      uint64_t v43 = v7;
      uint64_t v23 = 4 * v20;
      if (((4 * v20) & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
      __break(1u);
LABEL_18:
      uint64_t v26 = 8;
      goto LABEL_19;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_14:
  sub_19E697D04(v44, v45, a5, (uint64_t)a6);
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_30;
  }
LABEL_28:
  long long v49 = *a6;
  sub_19E669028((uint64_t)&v49);
  long long v48 = a6[1];
  uint64_t v38 = &v48;
  return sub_19E669028((uint64_t)v38);
}

void sub_19E6988BC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, int a9)
{
  uint64_t v56 = a8;
  uint64_t v62 = a4;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)(a3 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  if (8 * a3 < 0)
  {
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  if ((unint64_t)(8 * a3 + 0x1000000000000000) >> 61)
  {
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  uint64_t v11 = a6;
  uint64_t v13 = (float *)isStackAllocationSafe;
  int v61 = a9;
  uint64_t v57 = a6;
  if (a3 << 6 <= 1024 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v16 = (vDSP_Length *)((char *)&v51 - v15);
    if (v11 < 0)
    {
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    uint64_t v51 = v14;
    if (!v11) {
      return;
    }
    if ((a7 & 0x8000000000000000) != 0) {
      goto LABEL_116;
    }
    uint64_t v17 = 0;
    if (a3 <= 2) {
      uint64_t v18 = 2;
    }
    else {
      uint64_t v18 = a3;
    }
    unint64_t v19 = v18 - 2;
    if (v18 - 2 >= (unint64_t)(a3 - 3)) {
      unint64_t v19 = a3 - 3;
    }
    unint64_t v58 = v19;
    unint64_t v20 = v19 + 1;
    uint64_t v21 = v20 & 3;
    if ((v20 & 3) == 0) {
      uint64_t v21 = 4;
    }
    unint64_t v55 = v20 - v21;
    unint64_t v53 = (int64x2_t *)(v16 + 4);
    uint64_t v54 = v20 - v21 + 2;
    unint64_t v60 = a7 >> 31;
    long long v52 = xmmword_19EC3A130;
    while (1)
    {
      if (v17 == v11) {
        goto LABEL_109;
      }
      uint64_t v59 = v17;
      if (a7) {
        break;
      }
LABEL_17:
      uint64_t v17 = v59 + 1;
      uint64_t v11 = v57;
      if (v59 + 1 == v57) {
        return;
      }
    }
    uint64_t v22 = v56 * v59;
    if ((unsigned __int128)(v56 * (__int128)v59) >> 64 != (v56 * v59) >> 63) {
      goto LABEL_111;
    }
    if (a3 < 0)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    uint64_t v23 = 0;
    while (1)
    {
      if (v23 == a7) {
        goto LABEL_100;
      }
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_101;
      }
      if (a3)
      {
        *uint64_t v16 = 0;
        if (a3 != 1)
        {
          v16[1] = 1;
          if (a3 != 2)
          {
            if (v58 >= 4)
            {
              unint64_t v26 = v55;
              uint64_t v27 = v53;
              int64x2_t v28 = (int64x2_t)v52;
              do
              {
                v27[-1] = v28;
                *uint64_t v27 = vaddq_s64(v28, vdupq_n_s64(2uLL));
                int64x2_t v28 = vaddq_s64(v28, vdupq_n_s64(4uLL));
                v27 += 2;
                v26 -= 4;
              }
              while (v26);
              uint64_t v25 = v54;
            }
            else
            {
              uint64_t v25 = 2;
            }
            do
            {
              if (v18 == v25) {
                goto LABEL_97;
              }
              v16[v25] = v25;
              ++v25;
            }
            while (a3 != v25);
            if (a3 > 0x7FFFFFFF) {
              goto LABEL_99;
            }
          }
        }
      }
      if (v60) {
        goto LABEL_102;
      }
      if (!v13) {
        goto LABEL_122;
      }
      cblas_scopy(a3, (const float *)(v62 + 4 * v24), a7, v13, 1);
      vDSP_vsorti(v13, v16, 0, a3, v61);
      if (a3) {
        break;
      }
LABEL_23:
      if (++v23 == a7) {
        goto LABEL_17;
      }
    }
    if (a3 >= 1)
    {
      uint64_t v29 = 0;
      while (1)
      {
        uint64_t v30 = v29 * a7;
        if ((unsigned __int128)(v29 * (__int128)(uint64_t)a7) >> 64 != (uint64_t)(v29 * a7) >> 63) {
          break;
        }
        BOOL v31 = __OFADD__(v24, v30);
        uint64_t v32 = v24 + v30;
        if (v31) {
          goto LABEL_90;
        }
        vDSP_Length v33 = v16[v29];
        if (v33 >> 31) {
          goto LABEL_91;
        }
        ++v29;
        *(_DWORD *)(a5 + 4 * v32) = v33;
        if (a3 == v29) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    goto LABEL_103;
  }
  uint64_t v34 = swift_slowAlloc();
  if (v11 < 0)
  {
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
  }
  uint64_t v16 = (vDSP_Length *)v34;
  if (v11)
  {
    if ((a7 & 0x8000000000000000) != 0) {
      goto LABEL_121;
    }
    uint64_t v35 = 0;
    if (a3 <= 2) {
      uint64_t v36 = 2;
    }
    else {
      uint64_t v36 = a3;
    }
    unint64_t v37 = v36 - 2;
    if (v36 - 2 >= (unint64_t)(a3 - 3)) {
      unint64_t v37 = a3 - 3;
    }
    unint64_t v58 = v37;
    unint64_t v38 = v37 + 1;
    uint64_t v39 = v38 & 3;
    if ((v38 & 3) == 0) {
      uint64_t v39 = 4;
    }
    unint64_t v55 = v38 - v39;
    unint64_t v53 = (int64x2_t *)(v34 + 32);
    uint64_t v54 = v38 - v39 + 2;
    unint64_t v60 = a7 >> 31;
    long long v52 = xmmword_19EC3A130;
    while (1)
    {
      if (v35 == v11) {
        goto LABEL_117;
      }
      uint64_t v59 = v35;
      if (a7) {
        break;
      }
LABEL_59:
      uint64_t v35 = v59 + 1;
      uint64_t v11 = v57;
      if (v59 + 1 == v57) {
        goto LABEL_92;
      }
    }
    uint64_t v40 = v56 * v59;
    if ((unsigned __int128)(v56 * (__int128)v59) >> 64 != (v56 * v59) >> 63) {
      goto LABEL_118;
    }
    if (a3 < 0)
    {
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    uint64_t v41 = 0;
    while (1)
    {
      if (v41 == a7) {
        goto LABEL_105;
      }
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_106;
      }
      if (a3)
      {
        *uint64_t v16 = 0;
        if (a3 != 1)
        {
          v16[1] = 1;
          if (a3 != 2)
          {
            if (v58 >= 4)
            {
              unint64_t v44 = v55;
              uint64_t v45 = v53;
              int64x2_t v46 = (int64x2_t)v52;
              do
              {
                v45[-1] = v46;
                int64x2_t *v45 = vaddq_s64(v46, vdupq_n_s64(2uLL));
                int64x2_t v46 = vaddq_s64(v46, vdupq_n_s64(4uLL));
                v45 += 2;
                v44 -= 4;
              }
              while (v44);
              uint64_t v43 = v54;
            }
            else
            {
              uint64_t v43 = 2;
            }
            do
            {
              if (v36 == v43) {
                goto LABEL_98;
              }
              v16[v43] = v43;
              ++v43;
            }
            while (a3 != v43);
            if (a3 > 0x7FFFFFFF) {
              goto LABEL_104;
            }
          }
        }
      }
      if (v60) {
        goto LABEL_107;
      }
      if (!v13) {
        goto LABEL_123;
      }
      cblas_scopy(a3, (const float *)(v62 + 4 * v42), a7, v13, 1);
      vDSP_vsorti(v13, v16, 0, a3, v61);
      if (a3) {
        break;
      }
LABEL_65:
      if (++v41 == a7) {
        goto LABEL_59;
      }
    }
    if (a3 < 1) {
      goto LABEL_108;
    }
    uint64_t v47 = 0;
    while (1)
    {
      uint64_t v48 = v47 * a7;
      if ((unsigned __int128)(v47 * (__int128)(uint64_t)a7) >> 64 != (uint64_t)(v47 * a7) >> 63) {
        break;
      }
      BOOL v31 = __OFADD__(v42, v48);
      uint64_t v49 = v42 + v48;
      if (v31) {
        goto LABEL_95;
      }
      vDSP_Length v50 = v16[v47];
      if (v50 >> 31) {
        goto LABEL_96;
      }
      ++v47;
      *(_DWORD *)(a5 + 4 * v49) = v50;
      if (a3 == v47) {
        goto LABEL_65;
      }
    }
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
LABEL_92:
  MEMORY[0x19F3C3580](v16, -1, -1);
}

uint64_t sub_19E698E78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    if (a3 >= a2)
    {
      if (*(void *)(a4 + 16) <= a2) {
        uint64_t v4 = a2;
      }
      else {
        uint64_t v4 = *(void *)(a4 + 16);
      }
      uint64_t v5 = a2;
      while (v5 < a3)
      {
        if (a2 < 0) {
          goto LABEL_14;
        }
        if (v4 == v5) {
          goto LABEL_15;
        }
        uint64_t v6 = *(void *)(a4 + 32 + 8 * v5);
        uint64_t v7 = result * v6;
        if ((unsigned __int128)(result * (__int128)v6) >> 64 != (result * v6) >> 63) {
          goto LABEL_16;
        }
        ++v5;
        result *= v6;
        if (a3 == v5) {
          return v7;
        }
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19E698EF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E698F3C(uint64_t a1, uint64_t a2)
{
  return sub_19E697634(a1, a2, v2 + 16, *(void **)(v2 + 64));
}

uint64_t sub_19E698F48(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19E698FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19E69900C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 58, 7);
}

uint64_t sub_19E69904C(uint64_t a1, uint64_t a2)
{
  return sub_19E696B30(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned char *)(v2 + 56));
}

uint64_t sub_19E699074(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = MEMORY[0x1E4FBB390];
  switch(a4)
  {
    case 1:
      uint64_t v5 = MEMORY[0x1E4FBC358];
      goto LABEL_10;
    case 2:
      uint64_t v5 = MEMORY[0x1E4FBC450];
      goto LABEL_10;
    case 3:
      uint64_t v5 = MEMORY[0x1E4FBC4C0];
      goto LABEL_10;
    case 4:
    case 8:
    case 11:
      goto LABEL_18;
    case 5:
      uint64_t v5 = MEMORY[0x1E4FBC098];
      goto LABEL_10;
    case 6:
      uint64_t v5 = MEMORY[0x1E4FBC0F8];
      goto LABEL_10;
    case 7:
      uint64_t v5 = MEMORY[0x1E4FBC150];
      goto LABEL_10;
    case 9:
      uint64_t v5 = MEMORY[0x1E4FBC5E0];
      goto LABEL_10;
    case 10:
      uint64_t v5 = MEMORY[0x1E4FBB470];
      goto LABEL_10;
    default:
LABEL_10:
      uint64_t v10 = swift_conformsToProtocol2();
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v10) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 0;
      }
      if (v12) {
        return sub_19E696D90(v12, a1, a3, a2, a5, v12, v11, MEMORY[0x1E4FBBCD0]);
      }
LABEL_18:
      uint64_t v14 = sub_19EBF6128();
      sub_19E691274();
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, *MEMORY[0x1E4FBAB40], v14);
      return swift_willThrow();
  }
}

uint64_t sub_19E699238(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = MEMORY[0x1E4FBB390];
  switch(a4)
  {
    case 1:
      uint64_t v5 = MEMORY[0x1E4FBC358];
      goto LABEL_10;
    case 2:
      uint64_t v5 = MEMORY[0x1E4FBC450];
      goto LABEL_10;
    case 3:
      uint64_t v5 = MEMORY[0x1E4FBC4C0];
      goto LABEL_10;
    case 4:
    case 8:
    case 11:
      goto LABEL_18;
    case 5:
      uint64_t v5 = MEMORY[0x1E4FBC098];
      goto LABEL_10;
    case 6:
      uint64_t v5 = MEMORY[0x1E4FBC0F8];
      goto LABEL_10;
    case 7:
      uint64_t v5 = MEMORY[0x1E4FBC150];
      goto LABEL_10;
    case 9:
      uint64_t v5 = MEMORY[0x1E4FBC5E0];
      goto LABEL_10;
    case 10:
      uint64_t v5 = MEMORY[0x1E4FBB470];
      goto LABEL_10;
    default:
LABEL_10:
      uint64_t v10 = swift_conformsToProtocol2();
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v10) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 0;
      }
      if (v12) {
        return sub_19E696D90(v12, a1, a3, a2, a5, v12, v11, MEMORY[0x1E4FBB5D0]);
      }
LABEL_18:
      uint64_t v14 = sub_19EBF6128();
      sub_19E691274();
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, *MEMORY[0x1E4FBAB40], v14);
      return swift_willThrow();
  }
}

uint64_t sub_19E6993FC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v8, 0);
    uint64_t v9 = v25;
    uint64_t v10 = (unint64_t *)(a1 + 32);
    uint64_t v11 = v24;
    do
    {
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain_n();
      if (!v16) {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_19EBF5EC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
      sub_19EBF6198();
      swift_release();
      *uint64_t v7 = v12;
      uint64_t v25 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_19E66F8E8(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v19 + 1;
      sub_19E5E7C14((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, &qword_1E945CEE0);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_19E6996B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  unint64_t v20 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (unint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = v3;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      swift_retain();
      v20(v15, 0);
      *int64_t v8 = v12;
      uint64_t v21 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19E66F8E8(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v17 + 1;
      sub_19E5E7C14((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, &qword_1E945CEE0);
      --v9;
    }
    while (v9);
  }
  return v10;
}

void *sub_19E6998BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E699A4CLL);
  }
  unint64_t v6 = *(void *)(a1 + 32);
  switch(v6 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v10 = (char *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 32);
      uint64_t v11 = (char *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 33);
      break;
    case 2uLL:
      uint64_t v10 = (char *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      uint64_t v11 = (char *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 25);
      break;
    default:
      uint64_t v10 = (char *)(v6 + 48);
      uint64_t v11 = (char *)(v6 + 49);
      break;
  }
  char v12 = *v11;
  char v13 = *v10;
  uint64_t v14 = sub_19E606E50(v6);
  long long v15 = *v4;
  long long v21 = v4[1];
  long long v22 = v15;
  uint64_t v16 = swift_allocObject();
  long long v17 = v4[1];
  *(_OWORD *)(v16 + 16) = *v4;
  *(_OWORD *)(v16 + 32) = v17;
  *(_WORD *)(v16 + 48) = *((_WORD *)v4 + 16);
  *(unsigned char *)(v16 + 50) = v13;
  *(unsigned char *)(v16 + 51) = v12;
  *(void *)(v16 + 56) = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v22);
  sub_19E668FC4((uint64_t)&v21);
  uint64_t v18 = sub_19E69E1D8(a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_19E69E488(a2);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v18;
  result[3] = v19;
  result[4] = a3;
  result[5] = a4;
  result[6] = sub_19E69D7B8;
  result[7] = v16;
  return result;
}

uint64_t sub_19E699A5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10 = sub_19EBF7348();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v36 = a3;
  uint64_t v14 = *(void *)(a1 + 168);
  if (!v14) {
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(a2 + 168);
  if (v15)
  {
    int v16 = *(_DWORD *)(a1 + 176);
    int v35 = a4;
    uint64_t v17 = *(void *)(a1 + 184);
    int v18 = *(_DWORD *)(a1 + 192);
    uint64_t v51 = *(void *)(a1 + 32);
    long long v52 = *(_OWORD *)(a1 + 40);
    long long v53 = *(_OWORD *)(a1 + 56);
    long long v54 = *(_OWORD *)(a1 + 72);
    long long v55 = *(_OWORD *)(a1 + 88);
    long long v56 = *(_OWORD *)(a1 + 104);
    long long v57 = *(_OWORD *)(a1 + 120);
    long long v58 = *(_OWORD *)(a1 + 136);
    long long v59 = *(_OWORD *)(a1 + 152);
    uint64_t v60 = v14;
    int v61 = v16;
    uint64_t v62 = v17;
    int v63 = v18;
    uint64_t v64 = *(void *)(a1 + 196);
    uint64_t v19 = sub_19EBF6DB8();
    int v20 = *(_DWORD *)(a2 + 176);
    unint64_t v34 = a5;
    uint64_t v21 = v14 + v19;
    uint64_t v22 = *(void *)(a2 + 184);
    int v23 = *(_DWORD *)(a2 + 192);
    uint64_t v37 = *(void *)(a2 + 32);
    long long v24 = *(_OWORD *)(a2 + 56);
    long long v38 = *(_OWORD *)(a2 + 40);
    long long v39 = v24;
    long long v25 = *(_OWORD *)(a2 + 88);
    long long v40 = *(_OWORD *)(a2 + 72);
    long long v41 = v25;
    long long v26 = *(_OWORD *)(a2 + 120);
    long long v42 = *(_OWORD *)(a2 + 104);
    long long v43 = v26;
    long long v27 = *(_OWORD *)(a2 + 152);
    long long v44 = *(_OWORD *)(a2 + 136);
    long long v45 = v27;
    uint64_t v46 = v15;
    int v47 = v20;
    uint64_t v48 = v22;
    int v49 = v23;
    uint64_t v50 = *(void *)(a2 + 196);
    uint64_t v28 = v15 + sub_19EBF6DB8();
    __int16 v29 = *(unsigned __int8 *)(v36 + 32);
    int v30 = *(unsigned __int8 *)(v36 + 33);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBBE88], v10);
    if (v30) {
      __int16 v31 = 256;
    }
    else {
      __int16 v31 = 0;
    }
    sub_19E6B60D0(v14, v21, v35 & 0x1FF, v15, v28, v31 | v29, v34, (uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_11:
  uint64_t v33 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v51 = 0;
    *(void *)&long long v52 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    LOBYTE(v37) = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E699E1C(uint64_t a1, void *a2)
{
  sub_19EBF5F48();
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!a2[2])
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF5F38())
  {
    sub_19EBF5ED8();
    return swift_release();
  }
LABEL_9:
  uint64_t v5 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E69A0A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v81 = a7;
  char v85 = a5;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_19EBF6188();
  unint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v19);
  unint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    goto LABEL_69;
  }
  uint64_t v25 = *(void *)(a1 + 168);
  if (!v25) {
    goto LABEL_76;
  }
  unint64_t v24 = *(void *)(a2 + 16);
  if (!v24) {
    goto LABEL_70;
  }
  a1 = *(void *)(a2 + 168);
  if (!a1)
  {
LABEL_76:
    uint64_t v66 = qword_1E945BB28;
    swift_bridgeObjectRetain();
    if (v66 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&v91[0] = 0;
      *((void *)&v91[0] + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      v90[0] = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
LABEL_89:
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E69ADE4);
  }
  *(void *)&long long v74 = v25;
  *(void *)&long long v75 = v23;
  uint64_t v79 = v22;
  *(void *)&long long v80 = a6;
  int v83 = (char *)&v68 - v21;
  uint64_t v26 = *(void *)(*(void *)(a3 + 40) + 16);
  sub_19E669280(a3);
  uint64_t v27 = sub_19E69D0A4(0, v26, (void *)a3);
  sub_19E625BAC(a3);
  uint64_t v28 = sub_19E69AE40((uint64_t)a4);
  a6 = *(void *)(v28 + 16);
  uint64_t v86 = (void *)v27;
  uint64_t v71 = (void *)a3;
  unint64_t v84 = v17;
  uint64_t v77 = a1;
  uint64_t v78 = 0;
  *(void *)&long long v76 = v15;
  if (!a6)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    int v20 = (void *)MEMORY[0x1E4FBC860];
    a4 = (void *)v27;
    goto LABEL_26;
  }
  uint64_t v29 = *(void *)(v27 + 16);
  a4 = (void *)v27;
  if (!v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    int v20 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)(v28 + 32);
  uint64_t v30 = a4[6];
  uint64_t v15 = v7 * v30;
  unint64_t v24 = (unsigned __int128)(v7 * (__int128)v30) >> 64;
  if (v24 != v15 >> 63) {
    goto LABEL_72;
  }
  *(void *)&long long v72 = v29;
  uint64_t v82 = (void *)v28;
  a1 = a4[4];
  swift_bridgeObjectRetain();
  int v20 = sub_19E606EE4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v17 = v20[2];
  unint64_t v24 = v20[3];
  a3 = v17 + 1;
  if (v17 >= v24 >> 1) {
    goto LABEL_73;
  }
  while (1)
  {
    void v20[2] = a3;
    v20[v17 + 4] = v15;
    uint64_t v31 = v7 * a1;
    uint64_t v32 = v82;
    if ((unsigned __int128)(v7 * (__int128)a1) >> 64 != (v7 * a1) >> 63)
    {
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    if (a6 == 1) {
      goto LABEL_26;
    }
    if (v82[2] < 2uLL) {
      goto LABEL_75;
    }
    uint64_t v33 = v72 - 1;
    if ((void)v72 == 1) {
      goto LABEL_26;
    }
    uint64_t v15 = 0;
    unint64_t v34 = v82 + 5;
    uint64_t v35 = 8 * v17 + 40;
    uint64_t v36 = a6 - 2;
    a1 = (uint64_t)(a4 + 9);
LABEL_14:
    unint64_t v24 = v15 + 1;
    if ((unint64_t)(v15 + 1) < a4[2]) {
      break;
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    int v20 = sub_19E606EE4((void *)(v24 > 1), a3, 1, v20);
  }
  uint64_t v7 = v34[v15];
  a6 = v7 * *(void *)a1;
  if ((unsigned __int128)(v7 * (__int128)*(uint64_t *)a1) >> 64 != a6 >> 63) {
    goto LABEL_65;
  }
  a4 = (void *)v16;
  unint64_t v37 = v24 + v17;
  uint64_t v16 = *(void *)(a1 - 16);
  unint64_t v38 = v20[3];
  a3 = v17 + v15 + 2;
  if (v37 >= v38 >> 1)
  {
    *(void *)&long long v72 = v33;
    uint64_t v69 = v35;
    uint64_t v70 = v34;
    uint64_t v68 = v36;
    long long v40 = sub_19E606EE4((void *)(v38 > 1), v17 + v15 + 2, 1, v20);
    uint64_t v36 = v68;
    uint64_t v35 = v69;
    unint64_t v34 = v70;
    uint64_t v33 = v72;
    int v20 = v40;
    uint64_t v32 = v82;
  }
  void v20[2] = a3;
  *(void *)((char *)&v20[v15] + v35) = a6;
  unint64_t v24 = v7 * v16;
  if ((unsigned __int128)(v7 * (__int128)v16) >> 64 != (v7 * v16) >> 63) {
    goto LABEL_66;
  }
  BOOL v39 = __OFADD__(v31, v24);
  v31 += v24;
  if (v39) {
    goto LABEL_67;
  }
  if (v36 != v15)
  {
    unint64_t v24 = v15 + 2;
    if ((unint64_t)(v15 + 2) >= v32[2]) {
      goto LABEL_68;
    }
    uint64_t v16 = (uint64_t)a4;
    ++v15;
    a1 += 24;
    a4 = v86;
    if (v33 == v15) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  uint64_t v16 = (uint64_t)a4;
  a4 = v86;
LABEL_26:
  uint64_t v82 = v20;
  a3 = (uint64_t)v85;
  unsigned int v41 = v85;
  swift_bridgeObjectRelease();
  if (v41 > 0xA) {
    a6 = 8;
  }
  else {
    a6 = qword_19EC3A320[(char)a3];
  }
  uint64_t v15 = v80;
  uint64_t v7 = v81;
  swift_bridgeObjectRelease();
  unint64_t v24 = v31 * a6;
  if ((unsigned __int128)(v31 * (__int128)a6) >> 64 != (v31 * a6) >> 63) {
    goto LABEL_71;
  }
  int v42 = 1048584;
  uint64_t v43 = v74 + v24;
  uint64_t v44 = swift_bridgeObjectRetain();
  long long v45 = (void *)sub_19E602940(v44);
  LODWORD(v85) = (v7 >> 8) & 1;
  uint64_t v46 = sub_19E69AE40(v15);
  int v47 = v83;
  sub_19E68F8F0(v45, v46);
  int v48 = 1048584;
  switch((char)v7)
  {
    case 1:
      int v49 = sub_19EBF6CC8();
      goto LABEL_40;
    case 2:
      int v49 = sub_19EBF6CD8();
      goto LABEL_40;
    case 3:
      int v49 = sub_19EBF6CE8();
      goto LABEL_40;
    case 4:
      int v48 = 262208;
      goto LABEL_41;
    case 5:
      int v49 = sub_19EBF6C88();
      goto LABEL_40;
    case 6:
      int v49 = sub_19EBF6CA8();
      goto LABEL_40;
    case 7:
      int v49 = sub_19EBF6CB8();
      goto LABEL_40;
    case 8:
      int v48 = 131136;
      goto LABEL_41;
    case 9:
      int v49 = sub_19EBF6CF8();
      goto LABEL_40;
    case 10:
      int v49 = sub_19EBF6C98();
LABEL_40:
      int v48 = v49;
      goto LABEL_41;
    case 11:
      *(void *)&v91[0] = 0;
      *((void *)&v91[0] + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19E6C1A2C(v7);
      sub_19EBF67D8();
      swift_bridgeObjectRelease();
      sub_19EBF67D8();
      v90[0] = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
      goto LABEL_89;
    default:
LABEL_41:
      uint64_t v50 = (char *)v75;
      (*(void (**)(void, char *, uint64_t))(v84 + 16))(v75, v47, v16);
      uint64_t v51 = (uint64_t)v82;
      swift_bridgeObjectRetain();
      sub_19E690788(v43, v48, v50, v51, (uint64_t)v90);
      swift_bridgeObjectRelease();
      sub_19E5E7C14((uint64_t)v90, (uint64_t)v91, &qword_1E945C0D0);
      if (sub_19E5E7BF8((uint64_t)v91) == 1)
      {
        *(void *)uint64_t v103 = 0;
        *(void *)&v103[8] = 0xE000000000000000;
        sub_19EBF6FE8();
        sub_19EBF67D8();
        *(void *)&long long v92 = v15;
        BYTE8(v92) = v7;
        BYTE9(v92) = (_BYTE)v85;
        sub_19EBF7188();
        sub_19EBF67D8();
        sub_19EBF7008();
        if (qword_1E945BB28 != -1) {
          swift_once();
        }
        if (byte_1E946A4F1)
        {
          *(void *)uint64_t v103 = 0;
          *(void *)&v103[8] = 0xE000000000000000;
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          sub_19EBF67D8();
        }
        goto LABEL_89;
      }
      long long v100 = v91[8];
      long long v101 = v91[9];
      long long v102 = v91[10];
      long long v96 = v91[4];
      long long v97 = v91[5];
      long long v98 = v91[6];
      long long v99 = v91[7];
      long long v92 = v91[0];
      long long v93 = v91[1];
      long long v94 = v91[2];
      long long v95 = v91[3];
      switch((char)v7)
      {
        case 1:
          int v52 = sub_19EBF6CC8();
          goto LABEL_57;
        case 2:
          int v52 = sub_19EBF6CD8();
          goto LABEL_57;
        case 3:
          int v52 = sub_19EBF6CE8();
          goto LABEL_57;
        case 4:
          int v42 = 262208;
          if (!*(void *)(v15 + 16)) {
            goto LABEL_58;
          }
          goto LABEL_55;
        case 5:
          int v52 = sub_19EBF6C88();
          goto LABEL_57;
        case 6:
          int v52 = sub_19EBF6CA8();
          goto LABEL_57;
        case 7:
          int v52 = sub_19EBF6CB8();
          goto LABEL_57;
        case 8:
          int v42 = 131136;
          goto LABEL_54;
        case 9:
          int v52 = sub_19EBF6CF8();
          goto LABEL_57;
        case 10:
          int v52 = sub_19EBF6C98();
LABEL_57:
          int v42 = v52;
          if (!*(void *)(v15 + 16)) {
            goto LABEL_58;
          }
          goto LABEL_55;
        default:
LABEL_54:
          if (*(void *)(v15 + 16)) {
LABEL_55:
          }
            swift_bridgeObjectRetain();
          else {
LABEL_58:
          }
            uint64_t v15 = (uint64_t)&unk_1EF0C60D0;
          uint64_t v53 = *(void *)(v15 + 16);
          uint64_t v73 = v16;
          LODWORD(v85) = v42;
          if (!v53) {
            swift_bridgeObjectRelease();
          }
          uint64_t v54 = sub_19EBF5EC8();
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v76, 1, 1, v54);
          uint64_t v55 = v79;
          sub_19EBF6198();
          int v56 = sub_19EBF6168();
          sub_19EBF6158();
          long long v80 = *(_OWORD *)&v103[16];
          long long v81 = *(_OWORD *)v103;
          long long v76 = *(_OWORD *)&v103[32];
          uint64_t v57 = *(void *)&v103[48];
          uint64_t v58 = v104;
          sub_19EBF6178();
          long long v74 = *(_OWORD *)&v103[16];
          long long v75 = *(_OWORD *)v103;
          long long v72 = *(_OWORD *)&v103[32];
          uint64_t v59 = *(void *)&v103[48];
          uint64_t v60 = v104;
          int v61 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
          uint64_t v62 = v55;
          uint64_t v63 = v73;
          v61(v62, v73);
          *(_DWORD *)uint64_t v103 = 0;
          *(_DWORD *)&v103[4] = v56;
          *(_OWORD *)&v103[8] = v81;
          *(_OWORD *)&v103[24] = v80;
          *(_OWORD *)&v103[40] = v76;
          uint64_t v104 = v57;
          uint64_t v105 = v58;
          long long v106 = v75;
          long long v107 = v74;
          long long v108 = v72;
          uint64_t v109 = v59;
          uint64_t v110 = v60;
          uint64_t v111 = v77;
          int v112 = (int)v85;
          uint64_t v113 = 0;
          int v114 = (int)v85;
          uint64_t v115 = 1065353216;
          sub_19EBF6E08();
          sub_19EBF6D88();
          uint64_t v64 = v78;
          sub_19EBF6108();
          if (v64)
          {
            v61((uint64_t)v83, v63);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            uint64_t v67 = qword_1E945BB28;
            swift_bridgeObjectRetain();
            if (v67 != -1) {
              swift_once();
            }
            if (byte_1E946A4F1)
            {
              uint64_t v88 = 0;
              unint64_t v89 = 0xE000000000000000;
              sub_19EBF6FE8();
              sub_19EBF67D8();
              sub_19EBF67D8();
              sub_19EBF67D8();
              char v87 = 0;
              sub_19EBF7188();
              sub_19EBF67D8();
            }
            goto LABEL_89;
          }
          v61((uint64_t)v83, v63);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
      }
  }
}

uint64_t sub_19E69AE40(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_19E60F71C(1uLL, v1);
  uint64_t v4 = (void *)result;
  char v5 = 0;
  unint64_t v6 = v1 - 2;
  uint64_t v7 = a1 + 32;
  uint64_t v8 = v1 - 3;
  if (v1 - 2 >= 1) {
    goto LABEL_5;
  }
LABEL_3:
  if ((v6 != 0) | v5 & 1) {
    return (uint64_t)v4;
  }
  uint64_t v8 = 0;
  char v5 = 1;
LABEL_5:
  while (1)
  {
    int64_t v9 = v6 + 1;
    if ((int64_t)(v6 + 1) >= v4[2]) {
      break;
    }
    if (v9 >= v1) {
      goto LABEL_17;
    }
    uint64_t v10 = v9;
    uint64_t v11 = v4[v10 + 4];
    uint64_t v12 = *(void *)(v7 + v10 * 8);
    uint64_t v13 = v11 * v12;
    if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63) {
      goto LABEL_18;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_19E612754(v4);
      uint64_t v4 = (void *)result;
    }
    if (v6 >= v4[2]) {
      goto LABEL_19;
    }
    v4[v6 + 4] = v13;
    unint64_t v6 = v8;
    BOOL v14 = __OFSUB__(v8--, 1);
    if (v8 < 0 != v14) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_19E69AF50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(v3 + 32) == 1) {
    goto LABEL_6;
  }
  unint64_t v5 = *(void *)(v3 + 8);
  unint64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v5 != v6)
  {
    if (v5 >= v6)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *(void *)(*(void *)v3 + 8 * v5 + 32);
      *(void *)(v3 + 8) = v5 + 1;
      uint64_t v9 = *(void *)(v3 + 16);
      unint64_t v8 = *(void *)(v3 + 24);
      unint64_t v10 = *(void *)(v9 + 16);
      if (v8 == v10) {
        goto LABEL_5;
      }
      if (v8 < v10)
      {
        uint64_t v12 = (_OWORD *)(v9 + 176 * v8);
        long long v24 = v12[9];
        long long v25 = v12[10];
        long long v26 = v12[11];
        long long v27 = v12[12];
        long long v20 = v12[5];
        long long v21 = v12[6];
        long long v22 = v12[7];
        long long v23 = v12[8];
        long long v18 = v12[2];
        long long v19 = v12[3];
        long long v13 = v20;
        *(_OWORD *)(a3 + 40) = v12[4];
        long long v14 = v18;
        *(_OWORD *)(a3 + 24) = v19;
        *(_OWORD *)(a3 + 8) = v14;
        long long v15 = v24;
        *(_OWORD *)(a3 + 104) = v23;
        long long v16 = v21;
        *(_OWORD *)(a3 + 88) = v22;
        *(_OWORD *)(a3 + 72) = v16;
        *(_OWORD *)(a3 + 56) = v13;
        *(_OWORD *)(a3 + 168) = v27;
        long long v17 = v25;
        *(_OWORD *)(a3 + 152) = v26;
        *(_OWORD *)(a3 + 136) = v17;
        *(void *)(v3 + 24) = v8 + 1;
        *(void *)a3 = v7;
        *(_OWORD *)(a3 + 120) = v15;
        nullsub_1(a3, a1, a2);
        return swift_retain();
      }
    }
    __break(1u);
    return result;
  }
LABEL_5:
  *(unsigned char *)(v3 + 32) = 1;
LABEL_6:
  sub_19E69D6EC((uint64_t)&v18);
  return sub_19E5E7C14((uint64_t)&v18, a3, &qword_1E945D0C8);
}

void *sub_19E69B0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(void *)(a1 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v8 = *(void *)(a1 + 48);
  switch(v8 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v16 = (v8 & 0x3FFFFFFFFFFFFFFFLL) + 24;
      break;
    case 2uLL:
      uint64_t v16 = (v8 & 0x3FFFFFFFFFFFFFFFLL) + 16;
      break;
    default:
      uint64_t v16 = v8 + 40;
      break;
  }
  if (*(void *)(*(void *)v16 + 16) >= 2uLL)
  {
    switch(v8 >> 62)
    {
      case 1uLL:
      case 3uLL:
        long long v17 = (uint64_t *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 24);
        break;
      case 2uLL:
        long long v17 = (uint64_t *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 16);
        break;
      default:
        long long v17 = (uint64_t *)(v8 + 40);
        break;
    }
    uint64_t v19 = *v17;
    if (*(void *)(v19 + 16))
    {
      uint64_t v18 = *(void *)(v19 + 32);
      goto LABEL_14;
    }
LABEL_16:
    __break(1u);
    JUMPOUT(0x19E69B288);
  }
  uint64_t v18 = 1;
LABEL_14:
  uint64_t v20 = sub_19E6996B4(a1, (uint64_t)v25, (void (*)(uint64_t, void))sub_19E68F09C);
  uint64_t v21 = sub_19E6993FC(a2);
  long long v22 = (void *)swift_allocObject();
  void v22[2] = v18;
  v22[3] = a5;
  v22[4] = a6;
  v22[5] = a7;
  v22[6] = a8;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  long long v23 = (void *)swift_allocObject();
  void v23[2] = v20;
  v23[3] = v21;
  v23[4] = a3;
  v23[5] = a4;
  v23[6] = sub_19E69D768;
  v23[7] = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v23;
}

void sub_19E69B2A8(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  long long v5 = *(_OWORD *)(a1 + 160);
  long long v6 = *(_OWORD *)(a1 + 176);
  long long v7 = *(_OWORD *)(a1 + 128);
  v33[7] = *(_OWORD *)(a1 + 144);
  v33[8] = v5;
  long long v8 = *(_OWORD *)(a1 + 192);
  v33[9] = v6;
  v33[10] = v8;
  long long v9 = *(_OWORD *)(a1 + 112);
  void v33[4] = *(_OWORD *)(a1 + 96);
  void v33[5] = v9;
  v33[6] = v7;
  long long v10 = *(_OWORD *)(a1 + 48);
  v33[0] = *(_OWORD *)(a1 + 32);
  v33[1] = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  v33[2] = *(_OWORD *)(a1 + 64);
  v33[3] = v11;
  if (v4 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  long long v12 = *(_OWORD *)(a1 + 352);
  v34[8] = *(_OWORD *)(a1 + 336);
  v34[9] = v12;
  v34[10] = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 288);
  void v34[4] = *(_OWORD *)(a1 + 272);
  v34[5] = v13;
  long long v14 = *(_OWORD *)(a1 + 320);
  v34[6] = *(_OWORD *)(a1 + 304);
  v34[7] = v14;
  long long v15 = *(_OWORD *)(a1 + 224);
  v34[0] = *(_OWORD *)(a1 + 208);
  v34[1] = v15;
  long long v16 = *(_OWORD *)(a1 + 256);
  v34[2] = *(_OWORD *)(a1 + 240);
  v34[3] = v16;
  if (v4 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v17 = *(_OWORD *)(a1 + 528);
  v35[8] = *(_OWORD *)(a1 + 512);
  v35[9] = v17;
  v35[10] = *(_OWORD *)(a1 + 544);
  long long v18 = *(_OWORD *)(a1 + 464);
  v35[4] = *(_OWORD *)(a1 + 448);
  v35[5] = v18;
  long long v19 = *(_OWORD *)(a1 + 496);
  v35[6] = *(_OWORD *)(a1 + 480);
  v35[7] = v19;
  long long v20 = *(_OWORD *)(a1 + 400);
  v35[0] = *(_OWORD *)(a1 + 384);
  v35[1] = v20;
  long long v21 = *(_OWORD *)(a1 + 432);
  _OWORD v35[2] = *(_OWORD *)(a1 + 416);
  v35[3] = v21;
  if (*(void *)(a2 + 16))
  {
    long long v23 = *(_OWORD *)(a2 + 176);
    v36[8] = *(_OWORD *)(a2 + 160);
    void v36[9] = v23;
    v36[10] = *(_OWORD *)(a2 + 192);
    long long v24 = *(_OWORD *)(a2 + 112);
    v36[4] = *(_OWORD *)(a2 + 96);
    v36[5] = v24;
    long long v25 = *(_OWORD *)(a2 + 144);
    v36[6] = *(_OWORD *)(a2 + 128);
    v36[7] = v25;
    long long v26 = *(_OWORD *)(a2 + 48);
    v36[0] = *(_OWORD *)(a2 + 32);
    v36[1] = v26;
    long long v27 = *(_OWORD *)(a2 + 80);
    v36[2] = *(_OWORD *)(a2 + 64);
    v36[3] = v27;
    sub_19EBF6E08();
    unsigned int v28 = sub_19EBF6D88();
    sub_19E690A68(a3, v33, v34, v35, v36, v28, v29, v30, v31);
    return;
  }
LABEL_9:
  __break(1u);

  uint64_t v32 = qword_1E945BB28;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  sub_19EBF71F8();
  __break(1u);
}

void *sub_19E69B568(unint64_t a1)
{
  switch(a1 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v1 = (a1 & 0x3FFFFFFFFFFFFFFFLL) + 24;
      break;
    case 2uLL:
      uint64_t v1 = (a1 & 0x3FFFFFFFFFFFFFFFLL) + 16;
      break;
    default:
      uint64_t v1 = a1 + 40;
      break;
  }
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(*(void *)v1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = (void *)sub_19E60F71C(1uLL, v3);
  char v5 = 0;
  unint64_t v6 = v3 - 2;
  uint64_t v7 = v3 - 3;
  if ((uint64_t)(v3 - 2) >= 1) {
    goto LABEL_9;
  }
LABEL_7:
  if (!((v6 != 0) | v5 & 1))
  {
    uint64_t v7 = 0;
    char v5 = 1;
LABEL_9:
    while (1)
    {
      uint64_t v8 = v6 + 1;
      if ((int64_t)(v6 + 1) >= v4[2]) {
        break;
      }
      if (v8 >= *(void *)(v2 + 16)) {
        goto LABEL_22;
      }
      uint64_t v9 = v8;
      uint64_t v10 = v4[v9 + 4];
      uint64_t v11 = *(void *)(v2 + 32 + v9 * 8);
      uint64_t v12 = v10 * v11;
      if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63) {
        goto LABEL_23;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v4 = sub_19E612754(v4);
      }
      if (v6 >= v4[2]) {
        goto LABEL_24;
      }
      v4[v6 + 4] = v12;
      unint64_t v6 = v7;
      BOOL v13 = __OFSUB__(v7--, 1);
      if (v7 < 0 != v13) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    JUMPOUT(0x19E69B6D0);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_19E69B6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v76 = a4;
  uint64_t v77 = a2;
  uint64_t v75 = sub_19EBF6188();
  uint64_t v8 = *(void *)(v75 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v75);
  long long v74 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v62 - v11;
  uint64_t v112 = a3;
  uint64_t v113 = 0;
  uint64_t v114 = a1;
  uint64_t v115 = 0;
  char v116 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E69AF50(v12, v13, (uint64_t)&v88);
  sub_19E5E7C14((uint64_t)&v88, (uint64_t)v99, &qword_1E945D0C8);
  sub_19E5E7C14((uint64_t)v99, (uint64_t)&v100, &qword_1E945D0C8);
  if (sub_19E69D654(&v100) != 1)
  {
    uint64_t v81 = 0;
    uint64_t v71 = (void (**)(char *, uint64_t))(v8 + 8);
    long long v72 = (long long *)(v77 + 32);
    uint64_t v69 = (_OWORD *)((char *)v119 + 8);
    uint64_t v70 = (uint64_t)&v121 + 8;
    uint64_t v67 = (_OWORD *)((char *)v120 + 8);
    uint64_t v68 = (_OWORD *)((char *)v83 + 8);
    uint64_t v65 = (uint64_t)&v122 + 8;
    uint64_t v66 = (_OWORD *)((char *)v84 + 8);
    uint64_t v63 = a5;
    uint64_t v64 = (uint64_t)&v86 + 8;
    while (1)
    {
      long long v166 = v109;
      long long v167 = v110;
      long long v168 = v111;
      long long v162 = v105;
      long long v163 = v106;
      long long v164 = v107;
      long long v165 = v108;
      long long v158 = v101;
      long long v159 = v102;
      long long v160 = v103;
      long long v161 = v104;
      if (!*(void *)(a5 + 16)) {
        break;
      }
      if (!*(void *)(v77 + 16)) {
        goto LABEL_36;
      }
      uint64_t v79 = 0;
      unint64_t v80 = v100;
      unint64_t v14 = *(void *)(a5 + 32);
      long long v15 = v72[9];
      long long v155 = v72[8];
      long long v156 = v15;
      long long v157 = v72[10];
      long long v16 = v72[5];
      long long v151 = v72[4];
      long long v152 = v16;
      long long v17 = v72[7];
      long long v153 = v72[6];
      long long v154 = v17;
      long long v18 = v72[1];
      long long v147 = *v72;
      long long v148 = v18;
      long long v19 = v72[3];
      long long v149 = v72[2];
      long long v150 = v19;
      long long v96 = v109;
      long long v97 = v110;
      long long v98 = v111;
      long long v92 = v105;
      long long v93 = v106;
      long long v94 = v107;
      long long v95 = v108;
      long long v88 = v101;
      long long v89 = v102;
      long long v90 = v103;
      long long v91 = v104;
      uint64_t v20 = *((void *)&v155 + 1);
      if (!*((void *)&v155 + 1)) {
        goto LABEL_46;
      }
      int v21 = v110;
      uint64_t v82 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      long long v22 = v73;
      sub_19EBF6DA8();
      long long v23 = v74;
      sub_19EBF6DA8();
      uint64_t v24 = sub_19E68F4AC();
      (*v71)(v23, v75);
      sub_19E690788(v20, v21, v22, v24, (uint64_t)v117);
      swift_bridgeObjectRelease();
      sub_19E5E7C14((uint64_t)v117, (uint64_t)v118, &qword_1E945C0D0);
      if (sub_19E5E7BF8((uint64_t)v118) == 1) {
        goto LABEL_47;
      }
      v120[3] = v118[7];
      long long v121 = v118[8];
      long long v122 = v118[9];
      long long v123 = v118[10];
      v119[3] = v118[3];
      v120[0] = v118[4];
      v120[1] = v118[5];
      v120[2] = v118[6];
      v119[0] = v118[0];
      v119[1] = v118[1];
      v119[2] = v118[2];
      sub_19E5E7C14(v70, (uint64_t)&v124, &qword_1E945C0D8);
      *(void *)&v83[0] = *(void *)&v119[0];
      long long v26 = v68;
      long long v25 = v69;
      long long v27 = v69[1];
      *uint64_t v68 = *v69;
      v26[1] = v27;
      long long v28 = v25[3];
      _OWORD v26[2] = v25[2];
      v26[3] = v28;
      uint64_t v30 = v66;
      uint64_t v29 = v67;
      long long v31 = v67[1];
      *uint64_t v66 = *v67;
      v30[1] = v31;
      long long v32 = v29[3];
      v30[2] = v29[2];
      v30[3] = v32;
      LODWORD(v86) = v122;
      sub_19E5E7C14(v65, (uint64_t)v125, &qword_1E945C0D8);
      sub_19E5E7C14((uint64_t)v125, v64, &qword_1E945C0D8);
      LODWORD(v87) = v123;
      *(void *)((char *)&v87 + 4) = *(void *)((char *)&v123 + 4);
      sub_19E5E7C14((uint64_t)&v124, (uint64_t)v169, &qword_1E945C0D8);
      uint64_t v33 = v169[0];
      if (!v169[0]) {
        goto LABEL_47;
      }
      unint64_t v34 = sub_19E69B568(v14);
      unint64_t v35 = *(void *)(v76 + 32);
      if ((v35 & 0x8000000000000000) != 0) {
        goto LABEL_37;
      }
      if (v35 >= v34[2]) {
        goto LABEL_38;
      }
      uint64_t v36 = v34[v35 + 4];
      swift_bridgeObjectRelease();
      uint64_t v37 = v81 * v36;
      if ((unsigned __int128)(v81 * (__int128)v36) >> 64 != (v81 * v36) >> 63) {
        goto LABEL_39;
      }
      switch(v14 >> 62)
      {
        case 1uLL:
        case 3uLL:
          unint64_t v38 = (char *)(v82 + 32);
          break;
        case 2uLL:
          unint64_t v38 = (char *)(v82 + 24);
          break;
        default:
          unint64_t v38 = (char *)(v14 + 48);
          break;
      }
      unint64_t v39 = *v38;
      if (v39 > 0xA) {
        uint64_t v40 = 8;
      }
      else {
        uint64_t v40 = qword_19EC3A320[v39];
      }
      if ((unsigned __int128)(v37 * (__int128)v40) >> 64 != (v37 * v40) >> 63) {
        goto LABEL_40;
      }
      *((void *)&v85 + 1) = v33 + v37 * v40;
      uint64_t v41 = sub_19E690388(SDWORD1(v101));
      switch(v14 >> 62)
      {
        case 1uLL:
        case 3uLL:
          int v42 = (uint64_t *)(v82 + 24);
          break;
        case 2uLL:
          int v42 = (uint64_t *)(v82 + 16);
          break;
        default:
          int v42 = (uint64_t *)(v14 + 40);
          break;
      }
      uint64_t v43 = *v42;
      if (!*(void *)(v43 + 16)) {
        goto LABEL_41;
      }
      uint64_t v44 = *(void *)(v43 + 32);
      sub_19E690440(v44, v41);
      long long v45 = sub_19E69B568(v80);
      if (!v45[2]) {
        goto LABEL_42;
      }
      unint64_t v78 = v35;
      a5 = v63;
      uint64_t v46 = v45[4];
      swift_bridgeObjectRelease();
      sub_19E6905B0(v46, v41);
      sub_19E690440(v44, v41);
      int v47 = sub_19E69B568(v14);
      if (!v47[2]) {
        goto LABEL_43;
      }
      uint64_t v48 = v47[4];
      swift_bridgeObjectRelease();
      sub_19E6905B0(v48, v41);
      long long v133 = v96;
      long long v134 = v97;
      long long v129 = v92;
      long long v130 = v93;
      long long v131 = v94;
      long long v132 = v95;
      *(_OWORD *)&v125[8] = v88;
      long long v126 = v89;
      long long v127 = v90;
      long long v128 = v91;
      long long v143 = v84[3];
      long long v144 = v85;
      long long v145 = v86;
      long long v146 = v87;
      long long v139 = v83[3];
      long long v140 = v84[0];
      long long v141 = v84[1];
      long long v142 = v84[2];
      long long v135 = v98;
      long long v136 = v83[0];
      long long v137 = v83[1];
      long long v138 = v83[2];
      sub_19EBF6E08();
      sub_19EBF6D88();
      int v49 = v79;
      sub_19EBF6108();
      swift_release_n();
      if (v49)
      {
        sub_19E69D680(v99);
        uint64_t v60 = v49;
        goto LABEL_49;
      }
      switch(v80 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v50 = (uint64_t *)((v80 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v50 = (uint64_t *)((v80 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v50 = (uint64_t *)(v80 + 40);
          break;
      }
      uint64_t v51 = *v50;
      if (v78 >= *(void *)(v51 + 16)) {
        goto LABEL_44;
      }
      uint64_t v52 = *(void *)(v51 + 8 * v78 + 32);
      sub_19E69D680(v99);
      BOOL v55 = __OFADD__(v81, v52);
      v81 += v52;
      if (v55) {
        goto LABEL_45;
      }
      sub_19E69AF50(v53, v54, (uint64_t)&v88);
      sub_19E5E7C14((uint64_t)&v88, (uint64_t)v99, &qword_1E945D0C8);
      sub_19E5E7C14((uint64_t)v99, (uint64_t)&v100, &qword_1E945D0C8);
      if (sub_19E69D654(&v100) == 1) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t v57 = sub_19EBF6128();
    sub_19E691274();
    uint64_t v58 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v57 - 8) + 104))(v59, *MEMORY[0x1E4FBAB50], v57);
    swift_willThrow();
    swift_release_n();
    sub_19E69D680(v99);
    uint64_t v60 = (void *)v58;
LABEL_49:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = qword_1E945BB28;
    swift_bridgeObjectRetain();
    if (v61 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v88 = 0;
      *((void *)&v88 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      LOBYTE(v83[0]) = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E69C03CLL);
  }
LABEL_34:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19E69C06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v79 = a4;
  uint64_t v80 = a1;
  uint64_t v78 = sub_19EBF6188();
  uint64_t v8 = *(void *)(v78 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (char *)&v65 - v11;
  uint64_t v115 = a3;
  uint64_t v116 = 0;
  uint64_t v117 = a2;
  uint64_t v118 = 0;
  char v119 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E69AF50(v12, v13, (uint64_t)&v91);
  sub_19E5E7C14((uint64_t)&v91, (uint64_t)v102, &qword_1E945D0C8);
  sub_19E5E7C14((uint64_t)v102, (uint64_t)&v103, &qword_1E945D0C8);
  if (sub_19E69D654(&v103) != 1)
  {
    uint64_t v85 = 0;
    long long v74 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v75 = (long long *)(v80 + 32);
    long long v72 = (_OWORD *)((char *)v122 + 8);
    uint64_t v73 = (uint64_t)&v124 + 8;
    uint64_t v70 = (_OWORD *)((char *)v123 + 8);
    uint64_t v71 = (_OWORD *)((char *)v86 + 8);
    uint64_t v68 = (uint64_t)&v125 + 8;
    uint64_t v69 = (_OWORD *)((char *)v87 + 8);
    uint64_t v66 = a5;
    uint64_t v67 = (uint64_t)&v89 + 8;
    while (1)
    {
      long long v169 = v112;
      long long v170 = v113;
      long long v171 = v114;
      long long v165 = v108;
      long long v166 = v109;
      long long v167 = v110;
      long long v168 = v111;
      long long v161 = v104;
      long long v162 = v105;
      long long v163 = v106;
      long long v164 = v107;
      if (!*(void *)(a5 + 16)) {
        break;
      }
      if (!*(void *)(v80 + 16)) {
        goto LABEL_36;
      }
      unint64_t v84 = v103;
      uint64_t v82 = 0;
      unint64_t v14 = *(void *)(a5 + 32);
      long long v15 = v75[9];
      long long v158 = v75[8];
      long long v159 = v15;
      long long v160 = v75[10];
      long long v16 = v75[5];
      long long v154 = v75[4];
      long long v155 = v16;
      long long v17 = v75[7];
      long long v156 = v75[6];
      long long v157 = v17;
      long long v18 = v75[1];
      long long v150 = *v75;
      long long v151 = v18;
      long long v19 = v75[3];
      long long v152 = v75[2];
      long long v153 = v19;
      long long v99 = v112;
      long long v100 = v113;
      long long v101 = v114;
      long long v95 = v108;
      long long v96 = v109;
      long long v97 = v110;
      long long v98 = v111;
      long long v91 = v104;
      long long v92 = v105;
      long long v93 = v106;
      long long v94 = v107;
      uint64_t v20 = *((void *)&v158 + 1);
      if (!*((void *)&v158 + 1)) {
        goto LABEL_46;
      }
      int v21 = v113;
      uint64_t v83 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      long long v22 = v76;
      sub_19EBF6DA8();
      long long v23 = v77;
      sub_19EBF6DA8();
      uint64_t v24 = sub_19E68F4AC();
      (*v74)(v23, v78);
      sub_19E690788(v20, v21, v22, v24, (uint64_t)v120);
      swift_bridgeObjectRelease();
      sub_19E5E7C14((uint64_t)v120, (uint64_t)v121, &qword_1E945C0D0);
      if (sub_19E5E7BF8((uint64_t)v121) == 1) {
        goto LABEL_47;
      }
      v123[3] = v121[7];
      long long v124 = v121[8];
      long long v125 = v121[9];
      long long v126 = v121[10];
      v122[3] = v121[3];
      v123[0] = v121[4];
      v123[1] = v121[5];
      v123[2] = v121[6];
      v122[0] = v121[0];
      v122[1] = v121[1];
      v122[2] = v121[2];
      sub_19E5E7C14(v73, (uint64_t)&v127, &qword_1E945C0D8);
      *(void *)&v86[0] = *(void *)&v122[0];
      long long v26 = v71;
      long long v25 = v72;
      long long v27 = v72[1];
      _OWORD *v71 = *v72;
      v26[1] = v27;
      long long v28 = v25[3];
      _OWORD v26[2] = v25[2];
      v26[3] = v28;
      uint64_t v30 = v69;
      uint64_t v29 = v70;
      long long v31 = v70[1];
      *uint64_t v69 = *v70;
      v30[1] = v31;
      long long v32 = v29[3];
      v30[2] = v29[2];
      v30[3] = v32;
      LODWORD(v89) = v125;
      sub_19E5E7C14(v68, (uint64_t)v128, &qword_1E945C0D8);
      sub_19E5E7C14((uint64_t)v128, v67, &qword_1E945C0D8);
      LODWORD(v90) = v126;
      *(void *)((char *)&v90 + 4) = *(void *)((char *)&v126 + 4);
      sub_19E5E7C14((uint64_t)&v127, (uint64_t)v172, &qword_1E945C0D8);
      uint64_t v33 = v172[0];
      if (!v172[0]) {
        goto LABEL_47;
      }
      unint64_t v34 = sub_19E69B568(v14);
      unint64_t v35 = *(void *)(v79 + 16);
      unint64_t v36 = v84;
      if ((v35 & 0x8000000000000000) != 0) {
        goto LABEL_37;
      }
      if (v35 >= v34[2]) {
        goto LABEL_38;
      }
      uint64_t v37 = v34[v35 + 4];
      swift_bridgeObjectRelease();
      uint64_t v38 = v85 * v37;
      if ((unsigned __int128)(v85 * (__int128)v37) >> 64 != (v85 * v37) >> 63) {
        goto LABEL_39;
      }
      switch(v14 >> 62)
      {
        case 1uLL:
        case 3uLL:
          unint64_t v39 = (char *)(v83 + 32);
          break;
        case 2uLL:
          unint64_t v39 = (char *)(v83 + 24);
          break;
        default:
          unint64_t v39 = (char *)(v14 + 48);
          break;
      }
      unint64_t v40 = *v39;
      if (v40 > 0xA) {
        uint64_t v41 = 8;
      }
      else {
        uint64_t v41 = qword_19EC3A320[v40];
      }
      if ((unsigned __int128)(v38 * (__int128)v41) >> 64 != (v38 * v41) >> 63) {
        goto LABEL_40;
      }
      *((void *)&v88 + 1) = v33 + v38 * v41;
      uint64_t v42 = sub_19E690388(SDWORD1(v104));
      switch(v36 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v43 = (uint64_t *)((v36 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v43 = (uint64_t *)((v36 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v43 = (uint64_t *)(v36 + 40);
          break;
      }
      uint64_t v44 = *v43;
      if (!*(void *)(v44 + 16)) {
        goto LABEL_41;
      }
      unint64_t v81 = v36 >> 62;
      uint64_t v45 = *(void *)(v44 + 32);
      sub_19E690440(v45, v42);
      uint64_t v46 = sub_19E69B568(v14);
      if (!v46[2]) {
        goto LABEL_42;
      }
      uint64_t v47 = v46[4];
      swift_bridgeObjectRelease();
      uint64_t v48 = v47;
      unint64_t v49 = v84;
      sub_19E6905B0(v48, v42);
      sub_19E690440(v45, v42);
      uint64_t v50 = sub_19E69B568(v49);
      if (!v50[2]) {
        goto LABEL_43;
      }
      uint64_t v51 = v50[4];
      swift_bridgeObjectRelease();
      sub_19E6905B0(v51, v42);
      long long v136 = v88;
      long long v137 = v89;
      long long v132 = v87[0];
      long long v133 = v87[1];
      long long v134 = v87[2];
      long long v135 = v87[3];
      *(_OWORD *)&v128[8] = v86[0];
      long long v129 = v86[1];
      long long v130 = v86[2];
      long long v131 = v86[3];
      long long v146 = v98;
      long long v147 = v99;
      long long v148 = v100;
      long long v149 = v101;
      long long v142 = v94;
      long long v143 = v95;
      long long v144 = v96;
      long long v145 = v97;
      long long v138 = v90;
      long long v139 = v91;
      long long v140 = v92;
      long long v141 = v93;
      sub_19EBF6E08();
      sub_19EBF6D88();
      uint64_t v52 = v82;
      sub_19EBF6108();
      swift_release_n();
      if (v52)
      {
        sub_19E69D680(v102);
        uint64_t v63 = v52;
        goto LABEL_49;
      }
      a5 = v66;
      switch((int)v81)
      {
        case 1:
        case 3:
          uint64_t v53 = (uint64_t *)((v49 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2:
          uint64_t v53 = (uint64_t *)((v49 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v53 = (uint64_t *)(v49 + 40);
          break;
      }
      uint64_t v54 = *v53;
      if (v35 >= *(void *)(v54 + 16)) {
        goto LABEL_44;
      }
      uint64_t v55 = *(void *)(v54 + 8 * v35 + 32);
      sub_19E69D680(v102);
      BOOL v58 = __OFADD__(v85, v55);
      v85 += v55;
      if (v58) {
        goto LABEL_45;
      }
      sub_19E69AF50(v56, v57, (uint64_t)&v91);
      sub_19E5E7C14((uint64_t)&v91, (uint64_t)v102, &qword_1E945D0C8);
      sub_19E5E7C14((uint64_t)v102, (uint64_t)&v103, &qword_1E945D0C8);
      if (sub_19E69D654(&v103) == 1) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t v60 = sub_19EBF6128();
    sub_19E691274();
    uint64_t v61 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v60 - 8) + 104))(v62, *MEMORY[0x1E4FBAB50], v60);
    swift_willThrow();
    swift_release_n();
    sub_19E69D680(v102);
    uint64_t v63 = (void *)v61;
LABEL_49:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = qword_1E945BB28;
    swift_bridgeObjectRetain();
    if (v64 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v91 = 0;
      *((void *)&v91 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      LOBYTE(v86[0]) = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E69C9D0);
  }
LABEL_34:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_19E69CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_19E6996B4(a1, (uint64_t)v27, (void (*)(uint64_t, void))sub_19E68F8F0);
  uint64_t v10 = sub_19E6996B4(a2, (uint64_t)v26, (void (*)(uint64_t, void))sub_19E68F8F0);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    JUMPOUT(0x19E69CBB4);
  }
  unint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = v10;
  switch(v11 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v13 = v11 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v14 = (uint64_t *)(v13 + 24);
      long long v15 = (char *)(v13 + 32);
      long long v16 = (char *)(v13 + 33);
      break;
    case 2uLL:
      uint64_t v17 = v11 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v14 = (uint64_t *)(v17 + 16);
      long long v15 = (char *)(v17 + 24);
      long long v16 = (char *)(v17 + 25);
      break;
    default:
      unint64_t v14 = (uint64_t *)(v11 + 40);
      long long v15 = (char *)(v11 + 48);
      long long v16 = (char *)(v11 + 49);
      break;
  }
  uint64_t v18 = *v14;
  char v19 = *v15;
  char v20 = *v16;
  swift_bridgeObjectRetain();
  uint64_t v30 = *v4;
  long long v21 = *(_OWORD *)(v4 + 1);
  long long v28 = *(_OWORD *)(v4 + 3);
  long long v29 = v21;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v19;
  *(unsigned char *)(v22 + 17) = v20;
  long long v23 = *((_OWORD *)v4 + 1);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)v4;
  *(_OWORD *)(v22 + 40) = v23;
  *(void *)(v22 + 56) = v4[4];
  *(void *)(v22 + 64) = v18;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = v9;
  v24[3] = v12;
  v24[4] = a3;
  v24[5] = a4;
  v24[6] = sub_19E69CEC0;
  v24[7] = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19E5F63A4((uint64_t)&v30);
  sub_19E668FC4((uint64_t)&v29);
  sub_19E668FC4((uint64_t)&v28);
  return v24;
}

void sub_19E69CBC4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void *a5)
{
  uint64_t v5 = MEMORY[0x1E4FBB390];
  switch(a3)
  {
    case 1:
      uint64_t v5 = MEMORY[0x1E4FBC358];
      goto LABEL_10;
    case 2:
      uint64_t v5 = MEMORY[0x1E4FBC450];
      goto LABEL_10;
    case 3:
      uint64_t v5 = MEMORY[0x1E4FBC4C0];
      goto LABEL_10;
    case 4:
    case 8:
    case 11:
      goto LABEL_23;
    case 5:
      uint64_t v5 = MEMORY[0x1E4FBC098];
      goto LABEL_10;
    case 6:
      uint64_t v5 = MEMORY[0x1E4FBC0F8];
      goto LABEL_10;
    case 7:
      uint64_t v5 = MEMORY[0x1E4FBC150];
      goto LABEL_10;
    case 9:
      uint64_t v5 = MEMORY[0x1E4FBC5E0];
      goto LABEL_10;
    case 10:
      uint64_t v5 = MEMORY[0x1E4FBB470];
      goto LABEL_10;
    default:
LABEL_10:
      if (swift_conformsToProtocol2()) {
        uint64_t v10 = v5;
      }
      else {
        uint64_t v10 = 0;
      }
      if (!v10) {
        goto LABEL_23;
      }
      if (!*(void *)(a1 + 16))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        uint64_t v14 = qword_1E945BB28;
        swift_bridgeObjectRetain();
        if (v14 != -1) {
          swift_once();
        }
        if (byte_1E946A4F1)
        {
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          sub_19EBF7188();
          sub_19EBF67D8();
        }
        sub_19EBF71F8();
        __break(1u);
        JUMPOUT(0x19E69CE40);
      }
      uint64_t v11 = *(void *)(a1 + 168);
      if (!v11) {
        goto LABEL_23;
      }
      if (!*(void *)(a2 + 16)) {
        goto LABEL_22;
      }
      uint64_t v12 = *(void *)(a2 + 168);
      if (!v12) {
        goto LABEL_23;
      }
      uint64_t v13 = *a4;
      sub_19E69D268(v10, v11, a5, v12, v13, v10);
      return;
  }
}

uint64_t sub_19E69CE70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19E69CEC0(uint64_t a1, uint64_t a2)
{
  sub_19E69CBC4(a1, a2, *(unsigned char *)(v2 + 16), (uint64_t *)(v2 + 24), *(void **)(v2 + 64));
}

void sub_19E69CEE4()
{
  uint64_t v2 = *v0;
  unint64_t v3 = (unint64_t *)(*v0 + 16);
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (void *)v0[1];
    unint64_t v6 = v5[2];
    if (v6)
    {
      uint64_t v7 = v2 + 32;
      uint64_t v8 = *(void *)(v2 + 32);
      if (__OFSUB__(v8, 1))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v5[4] != v8 - 1)
      {
LABEL_12:
        if (v4 <= v6)
        {
          unint64_t v1 = v4 - 1;
          uint64_t v13 = *(void *)(v7 + 8 * (v4 - 1));
          BOOL v14 = __OFSUB__(v13, 1);
          uint64_t v15 = v13 - 1;
          if (!v14)
          {
            if (v5[v1 + 4] >= v15)
            {
              if (swift_isUniquelyReferenced_nonNull_native()) {
                goto LABEL_16;
              }
              goto LABEL_43;
            }
LABEL_24:
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_25:
              if (v1 >= v5[2])
              {
                __break(1u);
              }
              else
              {
                uint64_t v21 = v5[v1 + 4];
                BOOL v14 = __OFADD__(v21, 1);
                uint64_t v22 = v21 + 1;
                if (!v14)
                {
                  v5[v1 + 4] = v22;
LABEL_28:
                  v0[1] = v5;
                  return;
                }
              }
              __break(1u);
LABEL_43:
              uint64_t v5 = sub_19E612754(v5);
LABEL_16:
              long long v16 = &v5[v4 + 3];
              while (1)
              {
                unint64_t v17 = v4 - 1;
                if (v4 == 1) {
                  goto LABEL_28;
                }
                if (v17 >= v5[2])
                {
                  __break(1u);
LABEL_31:
                  __break(1u);
LABEL_32:
                  __break(1u);
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
                *long long v16 = 0;
                if (v4 - 2 >= v5[2]) {
                  goto LABEL_31;
                }
                if (v4 - 2 >= *v3) {
                  goto LABEL_32;
                }
                unint64_t v18 = v3[v4];
                BOOL v14 = __OFSUB__(v18, 1);
                uint64_t v19 = v18 - 1;
                if (v14) {
                  goto LABEL_33;
                }
                uint64_t v20 = *--v16;
                --v4;
                if (v20 < v19)
                {
                  unint64_t v1 = v17 - 1;
                  goto LABEL_24;
                }
              }
            }
LABEL_40:
            uint64_t v5 = sub_19E612754(v5);
            goto LABEL_25;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      unint64_t v9 = v4 - 1;
      if (v4 == 1) {
        return;
      }
      unint64_t v10 = v6 - 1;
      uint64_t v11 = v5 + 5;
      uint64_t v12 = (void *)(v2 + 40);
      while (v10)
      {
        if (__OFSUB__(*v12, 1)) {
          goto LABEL_35;
        }
        if (*v11 != *v12 - 1) {
          goto LABEL_12;
        }
        --v10;
        ++v11;
        ++v12;
        if (!--v9) {
          return;
        }
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
}

uint64_t sub_19E69D0A4(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_30;
  }
  uint64_t v4 = result;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t v33 = v4;
    uint64_t result = sub_19E66F7A8(0, v3 & ~(v3 >> 63), 0);
    uint64_t v7 = v33;
    if (a2 < v33 || v3 < 0) {
      goto LABEL_31;
    }
    uint64_t v8 = 0;
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = a3[7];
    uint64_t v12 = *(void *)(v9 + 16);
    if (v12 <= v33) {
      uint64_t v12 = v33;
    }
    uint64_t v13 = v12 - v33;
    if (*(void *)(v10 + 16) <= v33) {
      uint64_t v14 = v33;
    }
    else {
      uint64_t v14 = *(void *)(v10 + 16);
    }
    uint64_t v15 = v14 - v33;
    if (*(void *)(v11 + 16) <= v33) {
      uint64_t v16 = v33;
    }
    else {
      uint64_t v16 = *(void *)(v11 + 16);
    }
    uint64_t v17 = v16 - v33;
    uint64_t v18 = 8 * v33 + 32;
    uint64_t result = v34;
    uint64_t v19 = v9 + v18;
    uint64_t v20 = v10 + v18;
    uint64_t v21 = v11 + v18;
    while (v3 != v8)
    {
      if (v7 < 0) {
        goto LABEL_25;
      }
      if (v13 == v8) {
        goto LABEL_26;
      }
      if (v15 == v8) {
        goto LABEL_27;
      }
      uint64_t v22 = *(void *)(v19 + 8 * v8);
      uint64_t v23 = *(void *)(v20 + 8 * v8);
      if (v23 < v22) {
        goto LABEL_28;
      }
      if (v17 == v8) {
        goto LABEL_29;
      }
      uint64_t v24 = *(void *)(v21 + 8 * v8);
      uint64_t v35 = result;
      unint64_t v26 = *(void *)(result + 16);
      unint64_t v25 = *(void *)(result + 24);
      if (v26 >= v25 >> 1)
      {
        uint64_t v31 = v15;
        uint64_t v32 = v13;
        uint64_t v29 = v19;
        uint64_t v30 = v17;
        uint64_t v28 = v20;
        sub_19E66F7A8(v25 > 1, v26 + 1, 1);
        uint64_t v20 = v28;
        uint64_t v19 = v29;
        uint64_t v17 = v30;
        uint64_t v15 = v31;
        uint64_t v13 = v32;
        uint64_t v7 = v33;
        uint64_t result = v35;
      }
      ++v8;
      *(void *)(result + 16) = v26 + 1;
      long long v27 = (void *)(result + 24 * v26);
      v27[4] = v22;
      v27[5] = v23;
      v27[6] = v24;
      if (v3 == v8) {
        return result;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

void sub_19E69D268(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = a3[2];
  if (v8)
  {
    uint64_t v9 = a3 + 4;
    uint64_t v10 = 1;
    uint64_t v11 = a3 + 4;
    uint64_t v12 = a3[2];
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = v10 * v13;
      if ((unsigned __int128)(v10 * (__int128)v13) >> 64 != (v10 * v13) >> 63) {
        goto LABEL_65;
      }
      uint64_t v10 = v14;
      --v12;
    }
    while (v12);
    uint64_t v15 = 1;
    uint64_t v16 = a3[2];
    do
    {
      uint64_t v17 = *v9++;
      uint64_t v18 = v15 * v17;
      if ((unsigned __int128)(v15 * (__int128)v17) >> 64 != (v15 * v17) >> 63) {
        goto LABEL_66;
      }
      uint64_t v15 = v18;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = a3;
  uint64_t v57 = sub_19E60F71C(0, v8);
  uint64_t v19 = *(void *)(a5 + 16);
  uint64_t v20 = a3 + 4;
  while (1)
  {
    uint64_t v22 = v56;
    uint64_t v23 = v56[2];
    if (!v23) {
      goto LABEL_21;
    }
    uint64_t v24 = *(void *)(v57 + 16);
    if (!v24) {
      goto LABEL_67;
    }
    uint64_t v25 = v56[4];
    BOOL v26 = __OFSUB__(v25, 1);
    uint64_t v27 = v25 - 1;
    if (v26) {
      goto LABEL_68;
    }
    if (*(void *)(v57 + 32) == v27) {
      break;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19E69CEE4();
    char v55 = 0;
    if (v19)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = 0;
      uint64_t v33 = (void *)v57;
      do
      {
        unint64_t v34 = *(void *)(a5 + 8 * v32 + 32);
        if (v34 >= v8)
        {
          __break(1u);
          goto LABEL_55;
        }
        uint64_t v35 = v20[v34];
        if (v35)
        {
          BOOL v26 = __OFSUB__(v35, 1);
          uint64_t v36 = v35 - 1;
          if (v26) {
            goto LABEL_59;
          }
          if (v34 >= *(void *)(v57 + 16)) {
            goto LABEL_60;
          }
          uint64_t v37 = *(void *)(v57 + 32 + 8 * v34);
          uint64_t v38 = v36 - v37;
          if (__OFSUB__(v36, v37)) {
            goto LABEL_61;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v33 = sub_19E612754(v33);
          }
          if (v34 >= v33[2]) {
            goto LABEL_62;
          }
          v33[v34 + 4] = v38;
        }
        ++v32;
      }
      while (v19 != v32);
      swift_bridgeObjectRelease();
      uint64_t v22 = v56;
      unint64_t v39 = v56[2];
      if (!v39) {
        goto LABEL_43;
      }
LABEL_35:
      if (v39 > v33[2]) {
        goto LABEL_69;
      }
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      while (1)
      {
        uint64_t v42 = v22[v41 + 4];
        uint64_t v43 = v40 * v42;
        if ((unsigned __int128)(v40 * (__int128)v42) >> 64 != (v40 * v42) >> 63) {
          break;
        }
        uint64_t v44 = v33[v41 + 4];
        uint64_t v40 = v43 + v44;
        if (__OFADD__(v43, v44)) {
          goto LABEL_56;
        }
        if (v39 == ++v41)
        {
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_42:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = (void *)v57;
    unint64_t v39 = v56[2];
    if (v39) {
      goto LABEL_35;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v40 = 0;
LABEL_44:
    swift_bridgeObjectRelease();
    unint64_t v45 = v22[2];
    if (v45)
    {
      if (v45 > *(void *)(v57 + 16)) {
        goto LABEL_70;
      }
      uint64_t v46 = v22;
      uint64_t v21 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = v46 + 4;
      while (1)
      {
        uint64_t v49 = v48[v47];
        uint64_t v50 = v21 * v49;
        if ((unsigned __int128)(v21 * (__int128)v49) >> 64 != (v21 * v49) >> 63) {
          goto LABEL_57;
        }
        uint64_t v51 = *(void *)(v57 + 8 * v47 + 32);
        uint64_t v21 = v50 + v51;
        if (__OFADD__(v50, v51)) {
          goto LABEL_58;
        }
        if (v45 == ++v47)
        {
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
LABEL_10:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 24))(a4 + *(void *)(*(void *)(a6 - 8) + 72) * v40, a2 + *(void *)(*(void *)(a6 - 8) + 72) * v21);
    if (v55)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v28 = v23 - 1;
  if (!v28)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v55 = 1;
    if (v19) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
  uint64_t v29 = v24 - 1;
  uint64_t v30 = (void *)(v57 + 40);
  uint64_t v31 = v56 + 5;
  while (v29)
  {
    if (__OFSUB__(*v31, 1)) {
      goto LABEL_64;
    }
    if (*v30 != *v31 - 1) {
      goto LABEL_41;
    }
    --v29;
    ++v30;
    ++v31;
    if (!--v28) {
      goto LABEL_21;
    }
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t sub_19E69D654(void *a1)
{
  uint64_t v1 = *a1 >> 57;
  int v2 = v1 & 0x18 | *a1 & 7;
  if (v2) {
    return 128 - ((v1 >> 5) | (4 * v2));
  }
  else {
    return 0;
  }
}

uint64_t *sub_19E69D680(uint64_t *a1)
{
  return a1;
}

double sub_19E69D6EC(uint64_t a1)
{
  *(void *)a1 = 0xF000000000000007;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return result;
}

uint64_t sub_19E69D728()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_19E69D768(uint64_t a1, uint64_t a2)
{
  sub_19E69B2A8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_19E69D778()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19E69D7B8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 51)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_19E699A5C(a1, a2, v2 + 16, v3 | *(unsigned __int8 *)(v2 + 50), *(void *)(v2 + 56));
}

uint64_t sub_19E69D7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if ((a5 & 1) == 0)
  {
    if (v6)
    {
      if (v6 != 1)
      {
        if (*(void *)(a2 + 16))
        {
          sub_19EBF6E08();
          sub_19EBF6D88();
          return sub_19EBF61A8();
        }
        goto LABEL_15;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v6) {
    goto LABEL_12;
  }
  if (v6 == 1)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)(a2 + 16))
  {
    sub_19EBF6E08();
    sub_19EBF6D88();
    return sub_19EBF61C8();
  }
LABEL_16:
  __break(1u);

  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E69DB6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = 6;
  switch(a4)
  {
    case 1:
    case 6:
      if (qword_1E945BB28 != -1) {
        swift_once();
      }
      if (byte_1E946A4F1)
      {
        *(void *)&long long v64 = 0;
        *((void *)&v64 + 1) = 0xE000000000000000;
        sub_19EBF6FE8();
        sub_19EBF67D8();
        sub_19EBF67D8();
        sub_19EBF67D8();
        LOBYTE(v53) = 0;
        sub_19EBF7188();
        sub_19EBF67D8();
      }
      goto LABEL_24;
    case 2:
      uint64_t v4 = 0;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 1;
      goto LABEL_6;
    case 4:
      uint64_t v4 = 14;
      goto LABEL_6;
    case 5:
      uint64_t v4 = 15;
      goto LABEL_6;
    default:
LABEL_6:
      unint64_t v7 = *(void *)(a1 + 16);
      if (!v7)
      {
        __break(1u);
        goto LABEL_13;
      }
      long long v8 = *(_OWORD *)(a1 + 176);
      long long v61 = *(_OWORD *)(a1 + 160);
      long long v62 = v8;
      long long v63 = *(_OWORD *)(a1 + 192);
      long long v9 = *(_OWORD *)(a1 + 112);
      long long v57 = *(_OWORD *)(a1 + 96);
      long long v58 = v9;
      long long v10 = *(_OWORD *)(a1 + 144);
      long long v59 = *(_OWORD *)(a1 + 128);
      long long v60 = v10;
      long long v11 = *(_OWORD *)(a1 + 48);
      long long v53 = *(_OWORD *)(a1 + 32);
      long long v54 = v11;
      long long v12 = *(_OWORD *)(a1 + 80);
      long long v55 = *(_OWORD *)(a1 + 64);
      long long v56 = v12;
      if (!*(void *)(a2 + 16))
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      long long v13 = *(_OWORD *)(a2 + 176);
      long long v72 = *(_OWORD *)(a2 + 160);
      long long v73 = v13;
      long long v74 = *(_OWORD *)(a2 + 192);
      long long v14 = *(_OWORD *)(a2 + 112);
      long long v68 = *(_OWORD *)(a2 + 96);
      long long v69 = v14;
      long long v15 = *(_OWORD *)(a2 + 144);
      long long v70 = *(_OWORD *)(a2 + 128);
      long long v71 = v15;
      long long v16 = *(_OWORD *)(a2 + 48);
      long long v64 = *(_OWORD *)(a2 + 32);
      long long v65 = v16;
      long long v17 = *(_OWORD *)(a2 + 80);
      long long v66 = *(_OWORD *)(a2 + 64);
      long long v67 = v17;
      sub_19EBF6E08();
      sub_19EBF6D88();
      sub_19EBF6108();
      if (v7 < 2)
      {
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
      }
      long long v18 = *(_OWORD *)(a1 + 352);
      long long v50 = *(_OWORD *)(a1 + 336);
      long long v51 = v18;
      long long v52 = *(_OWORD *)(a1 + 368);
      long long v19 = *(_OWORD *)(a1 + 288);
      long long v46 = *(_OWORD *)(a1 + 272);
      long long v47 = v19;
      long long v20 = *(_OWORD *)(a1 + 320);
      long long v48 = *(_OWORD *)(a1 + 304);
      long long v49 = v20;
      long long v21 = *(_OWORD *)(a1 + 224);
      long long v42 = *(_OWORD *)(a1 + 208);
      long long v43 = v21;
      long long v22 = *(_OWORD *)(a1 + 256);
      long long v44 = *(_OWORD *)(a1 + 240);
      long long v45 = v22;
      if (v7 == 2) {
        goto LABEL_15;
      }
      long long v23 = *(_OWORD *)(a1 + 528);
      unsigned char v40[8] = *(_OWORD *)(a1 + 512);
      v40[9] = v23;
      v40[10] = *(_OWORD *)(a1 + 544);
      long long v24 = *(_OWORD *)(a1 + 464);
      v40[4] = *(_OWORD *)(a1 + 448);
      v40[5] = v24;
      long long v25 = *(_OWORD *)(a1 + 496);
      v40[6] = *(_OWORD *)(a1 + 480);
      v40[7] = v25;
      long long v26 = *(_OWORD *)(a1 + 400);
      v40[0] = *(_OWORD *)(a1 + 384);
      v40[1] = v26;
      long long v27 = *(_OWORD *)(a1 + 432);
      void v40[2] = *(_OWORD *)(a1 + 416);
      v40[3] = v27;
      sub_19EBF6E08();
      v41[8] = v50;
      v41[9] = v51;
      v41[10] = v52;
      v41[4] = v46;
      v41[5] = v47;
      v41[6] = v48;
      v41[7] = v49;
      v41[0] = v42;
      v41[1] = v43;
      v41[2] = v44;
      v41[3] = v45;
      v39[8] = v72;
      v39[9] = v73;
      v39[10] = v74;
      v39[4] = v68;
      v39[5] = v69;
      v39[6] = v70;
      v39[7] = v71;
      v39[0] = v64;
      v39[1] = v65;
      v39[2] = v66;
      v39[3] = v67;
      int v35 = sub_19EBF6D88();
      uint64_t v36 = v28;
      uint64_t v37 = v29;
      uint64_t v38 = v30;
      uint64_t result = MEMORY[0x19F3BFFD0](a3, v4, v41, v40, v39, &v35);
      if (result)
      {
        uint64_t v32 = sub_19EBF6128();
        sub_19E691274();
        uint64_t v33 = (void *)swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBAB40], v32);
        swift_willThrow();

        if (qword_1E945BB28 != -1) {
          swift_once();
        }
        if (byte_1E946A4F1)
        {
          *(void *)&v41[0] = 0;
          *((void *)&v41[0] + 1) = 0xE000000000000000;
          sub_19EBF6FE8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          sub_19EBF67D8();
          LOBYTE(v40[0]) = 0;
          sub_19EBF7188();
          sub_19EBF67D8();
        }
LABEL_24:
        sub_19EBF71F8();
        __break(1u);
        JUMPOUT(0x19E69E1BCLL);
      }
      return result;
  }
}

uint64_t sub_19E69E1D8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v3 - 8);
  long long v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v8, 0);
    uint64_t v9 = v25;
    long long v10 = (unint64_t *)(a1 + 32);
    long long v11 = v24;
    do
    {
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          long long v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          long long v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          long long v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain_n();
      if (!v16) {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_19EBF5EC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
      sub_19EBF6198();
      swift_release();
      *unint64_t v7 = v12;
      uint64_t v25 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_19E66F8E8(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v19 + 1;
      sub_19E698FA4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_19E69E488(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v3 - 8);
  long long v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v8, 0);
    uint64_t v9 = v25;
    long long v10 = (unint64_t *)(a1 + 32);
    long long v11 = v24;
    do
    {
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          long long v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          long long v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          long long v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain_n();
      if (!v16) {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_19EBF5EC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
      sub_19EBF6198();
      swift_release();
      *unint64_t v7 = v12;
      uint64_t v25 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_19E66F8E8(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v19 + 1;
      sub_19E698FA4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_19E69E738(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (void *)((char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v18[1] = v1;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v7, 0);
    uint64_t v8 = v19;
    uint64_t v9 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v11 = *v9++;
      unint64_t v10 = v11;
      switch(v11 >> 62)
      {
        case 1uLL:
        case 3uLL:
          unint64_t v12 = (uint64_t **)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          unint64_t v12 = (uint64_t **)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          unint64_t v12 = (uint64_t **)(v10 + 40);
          break;
      }
      unint64_t v13 = *v12;
      swift_bridgeObjectRetain();
      uint64_t v14 = (uint64_t)v6 + *(int *)(v3 + 48);
      swift_retain();
      sub_19E68FCE0(v13, 0, v14);
      *uint64_t v6 = v10;
      uint64_t v19 = v8;
      unint64_t v16 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_19E66F8E8(v15 > 1, v16 + 1, 1);
        uint64_t v8 = v19;
      }
      *(void *)(v8 + 16) = v16 + 1;
      sub_19E698FA4((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16);
      --v7;
    }
    while (v7);
  }
  return v8;
}

void *sub_19E69E92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4[1];
  long long v23 = *v4;
  *(_OWORD *)long long v24 = v5;
  *(_OWORD *)&v24[9] = *(long long *)((char *)v4 + 25);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_19E6A182C((uint64_t)&v24[24], (uint64_t)&v25);
    sub_19E6A182C((uint64_t)&v25, (uint64_t)&v26);
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      *(void *)&long long v20 = 0;
      *((void *)&v20 + 1) = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      char v22 = 0;
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    sub_19EBF71F8();
    __break(1u);
    JUMPOUT(0x19E69ED1CLL);
  }
  unint64_t v7 = *(void *)(a1 + 32);
  switch(v7 >> 62)
  {
    case 1uLL:
    case 3uLL:
      unint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      unint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      unint64_t v11 = (uint64_t *)(v7 + 40);
      break;
  }
  uint64_t v12 = *v11;
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 < 2) {
    goto LABEL_25;
  }
  uint64_t v14 = v12 + 32 + 8 * v13;
  BOOL v15 = *(void *)(v14 - 16) < *(uint64_t *)&v24[8] && *(void *)(v14 - 8) < *(void *)&v24[16];
  switch(v7 >> 62)
  {
    case 1uLL:
    case 3uLL:
      unint64_t v16 = (unsigned __int8 *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 32);
      if (v15) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 2uLL:
      unint64_t v16 = (unsigned __int8 *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      if (v15) {
        goto LABEL_18;
      }
      goto LABEL_14;
    default:
      unint64_t v16 = (unsigned __int8 *)(v7 + 48);
      if (v15)
      {
LABEL_18:
        long long v19 = v4[1];
        long long v20 = *v4;
        *(_OWORD *)uint64_t v21 = v19;
        *(_OWORD *)&v21[9] = *(long long *)((char *)v4 + 25);
        return sub_19E69ED3C(a1, a2, a3, a4);
      }
LABEL_14:
      int v17 = *v16;
      if (v17 == 9)
      {
        sub_19E6A182C((uint64_t)&v24[24], (uint64_t)&v26);
        sub_19E6A182C((uint64_t)&v26, (uint64_t)&v20);
        if (v20 == 2) {
          return sub_19E6A08E4(a1, a2, a3, a4);
        }
        else {
          return sub_19E6A0708(a1, a2, a3, a4);
        }
      }
      if (v17 != 10) {
        goto LABEL_26;
      }
      sub_19E6A182C((uint64_t)&v24[24], (uint64_t)&v25);
      sub_19E6A182C((uint64_t)&v25, (uint64_t)&v26);
      long long v20 = v23;
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v24;
      *(_OWORD *)&v21[9] = *(_OWORD *)&v24[9];
      if (v26 == 2) {
        return sub_19E69F4B4(a1, a2, a3, a4);
      }
      else {
        return sub_19E69F2C8(a1, a2, a3, a4);
      }
  }
}

void *sub_19E69ED3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v9 = v4[1];
  long long v21 = *v4;
  v22[0] = v9;
  *(_OWORD *)((char *)v22 + 9) = *(long long *)((char *)v4 + 25);
  uint64_t v10 = sub_19E69E738(a1);
  uint64_t v11 = sub_19E69E738(a2);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = v11;
  switch(v12 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v14 = (uint64_t *)(v12 + 40);
      break;
  }
  uint64_t v15 = *v14;
  if (!*(void *)(v15 + 16))
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x19E69EE98);
  }
  uint64_t v16 = *(void *)(v15 + 32);
  uint64_t v17 = swift_allocObject();
  long long v18 = v22[0];
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = v18;
  *(_OWORD *)(v17 + 41) = *(_OWORD *)((char *)v22 + 9);
  *(void *)(v17 + 64) = v16;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  long long v19 = (void *)swift_allocObject();
  v19[2] = v10;
  void v19[3] = v13;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = sub_19E6A18C0;
  v19[7] = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v21);
  return v19;
}

uint64_t sub_19E69EEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19EBF6048();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = &v25[-v11];
  sub_19E6A182C(a3 + 40, (uint64_t)v28);
  sub_19E6A182C((uint64_t)v28, (uint64_t)&v52);
  uint64_t v13 = (unsigned int *)MEMORY[0x1E4FBAA98];
  if (v52 != 2) {
    uint64_t v13 = (unsigned int *)MEMORY[0x1E4FBAAA0];
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v10, *v13, v6);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v12, v10, v6);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)(a1 + 176);
  long long v36 = *(_OWORD *)(a1 + 160);
  long long v37 = v14;
  long long v38 = *(_OWORD *)(a1 + 192);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v32 = *(_OWORD *)(a1 + 96);
  long long v33 = v15;
  long long v16 = *(_OWORD *)(a1 + 144);
  long long v34 = *(_OWORD *)(a1 + 128);
  long long v35 = v16;
  long long v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v28[1] = *(_OWORD *)(a1 + 32);
  long long v29 = v17;
  long long v18 = *(_OWORD *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 64);
  long long v31 = v18;
  if (!*(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v19 = *(_OWORD *)(a2 + 176);
  long long v47 = *(_OWORD *)(a2 + 160);
  long long v48 = v19;
  long long v49 = *(_OWORD *)(a2 + 192);
  long long v20 = *(_OWORD *)(a2 + 112);
  long long v43 = *(_OWORD *)(a2 + 96);
  long long v44 = v20;
  long long v21 = *(_OWORD *)(a2 + 144);
  long long v45 = *(_OWORD *)(a2 + 128);
  long long v46 = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  long long v39 = *(_OWORD *)(a2 + 32);
  long long v40 = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  long long v41 = *(_OWORD *)(a2 + 64);
  long long v42 = v23;
  sub_19E6A182C((uint64_t)v28, (uint64_t)&v51);
  sub_19EBF5F08();
  sub_19EBF6E08();
  sub_19EBF6D88();
  if (sub_19EBF5EF8())
  {
    sub_19EBF5ED8();
    return swift_release();
  }
LABEL_9:
  sub_19E6A182C((uint64_t)v28, (uint64_t)&v50);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    v25[23] = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

void *sub_19E69F2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4[1];
  long long v21 = *v4;
  v22[0] = v5;
  *(_OWORD *)((char *)v22 + 9) = *(long long *)((char *)v4 + 25);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = *(void *)(a1 + 32);
  switch(v7 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v11 = (uint64_t *)(v7 + 40);
      break;
  }
  uint64_t v12 = *v11;
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 16))
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x19E69F494);
  }
  unint64_t v13 = *(void *)(a2 + 32);
  switch(v13 >> 62)
  {
    case 1uLL:
    case 3uLL:
      long long v14 = (uint64_t *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      long long v14 = (uint64_t *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      long long v14 = (uint64_t *)(v13 + 40);
      break;
  }
  uint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(void *)(v16 + 24) = v15;
  long long v17 = v4[1];
  *(_OWORD *)(v16 + 32) = *v4;
  *(_OWORD *)(v16 + 48) = v17;
  *(_OWORD *)(v16 + 57) = *(long long *)((char *)v4 + 25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v21);
  uint64_t v18 = sub_19E69E1D8(a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_19E69E488(a2);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v18;
  result[3] = v19;
  result[4] = a3;
  result[5] = a4;
  result[6] = sub_19E6A18D0;
  result[7] = v16;
  return result;
}

void *sub_19E69F4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4[1];
  long long v21 = *v4;
  v22[0] = v5;
  *(_OWORD *)((char *)v22 + 9) = *(long long *)((char *)v4 + 25);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = *(void *)(a1 + 32);
  switch(v7 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v11 = (uint64_t *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v11 = (uint64_t *)(v7 + 40);
      break;
  }
  uint64_t v12 = *v11;
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 16))
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x19E69F680);
  }
  unint64_t v13 = *(void *)(a2 + 32);
  switch(v13 >> 62)
  {
    case 1uLL:
    case 3uLL:
      long long v14 = (uint64_t *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      long long v14 = (uint64_t *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      long long v14 = (uint64_t *)(v13 + 40);
      break;
  }
  uint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(void *)(v16 + 24) = v15;
  long long v17 = v4[1];
  *(_OWORD *)(v16 + 32) = *v4;
  *(_OWORD *)(v16 + 48) = v17;
  *(_OWORD *)(v16 + 57) = *(long long *)((char *)v4 + 25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)&v21);
  uint64_t v18 = sub_19E69E1D8(a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_19E69E488(a2);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v18;
  result[3] = v19;
  result[4] = a3;
  result[5] = a4;
  result[6] = sub_19E6A18E0;
  result[7] = v16;
  return result;
}

uint64_t sub_19E69F6A0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = a3[2];
  if (v5)
  {
    uint64_t v6 = a3 + 4;
    uint64_t v7 = 1;
    uint64_t v8 = a3[2];
    while (1)
    {
      uint64_t v9 = *v6++;
      uint64_t v10 = v7 * v9;
      if ((unsigned __int128)(v7 * (__int128)v9) >> 64 != (v7 * v9) >> 63) {
        break;
      }
      uint64_t v7 = v10;
      if (!--v8) {
        goto LABEL_5;
      }
    }
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
LABEL_5:
  unint64_t v11 = a4[2];
  if (v11)
  {
    uint64_t v12 = a4 + 4;
    uint64_t v13 = 1;
    uint64_t v14 = a4[2];
    do
    {
      uint64_t v15 = *v12++;
      uint64_t v16 = v13 * v15;
      if ((unsigned __int128)(v13 * (__int128)v15) >> 64 != (v13 * v15) >> 63) {
        goto LABEL_69;
      }
      uint64_t v13 = v16;
    }
    while (--v14);
  }
  if (!*(void *)(a1 + 16))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v17 = *(void *)(a1 + 168);
  if (!v17) {
    goto LABEL_96;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v18 = *(void *)(a2 + 168);
  if (!v18)
  {
LABEL_96:
    sub_19E6A182C(a5 + 40, (uint64_t)&v57);
    sub_19E6A182C((uint64_t)&v57, (uint64_t)&__B);
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      __A[0] = 0;
      __A[1] = 0xE000000000000000;
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF7188();
      sub_19EBF67D8();
    }
    goto LABEL_101;
  }
  if (!v5)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (v5 == 1)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  if (v5 < 3)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (v5 == 3)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v11 < 3)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v11 == 3)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v20 = a3[4];
  uint64_t v19 = a3[5];
  uint64_t v21 = a3[7];
  uint64_t v54 = a3[6];
  int64_t v22 = a4[6];
  int64_t v23 = a4[7];
  sub_19E69FCD0((uint64_t)__A, a3, a4);
  int64_t v25 = v23 + v22;
  if (__OFADD__(v23, v22))
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if ((unint64_t)(v25 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  float v26 = v24;
  uint64_t v53 = v19;
  float v27 = *(float *)__A;
  uint64_t v28 = (float *)swift_slowAlloc();
  if (v25 < 0)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  long long v29 = v28;
  if (v25) {
    bzero(v28, 4 * v25);
  }
  LODWORD(__A[0]) = 0;
  float __B = v26;
  if (v23 < 0 || (vDSP_vramp((const float *)__A, &__B, v29, 1, v23), LODWORD(__A[0]) = 0, float __B = v27, v22 < 0))
  {
    sub_19EBF71E8();
    __break(1u);
LABEL_101:
    uint64_t result = sub_19EBF71F8();
    __break(1u);
    return result;
  }
  vDSP_vramp((const float *)__A, &__B, &v29[v23], 1, v22);
  if (v20 < 0)
  {
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
  }
  if (v20)
  {
    if (v19 < 0) {
      goto LABEL_95;
    }
    uint64_t v30 = 0;
    uint64_t v49 = v20;
    while (1)
    {
      if (v30 == v20) {
        goto LABEL_77;
      }
      uint64_t v31 = v30 * v19;
      if ((unsigned __int128)(v30 * (__int128)v19) >> 64 != (v30 * v19) >> 63) {
        goto LABEL_78;
      }
      uint64_t v32 = v31 * v54;
      if ((unsigned __int128)(v31 * (__int128)v54) >> 64 != (v31 * v54) >> 63) {
        goto LABEL_79;
      }
      uint64_t v52 = v32 * v21;
      if ((unsigned __int128)(v32 * (__int128)v21) >> 64 != (v32 * v21) >> 63) {
        goto LABEL_80;
      }
      int64_t v33 = v31 * v22;
      if ((unsigned __int128)(v31 * (__int128)v22) >> 64 != (v31 * v22) >> 63) {
        goto LABEL_81;
      }
      int64_t v51 = v33 * v23;
      if ((unsigned __int128)(v33 * (__int128)v23) >> 64 != (v33 * v23) >> 63) {
        goto LABEL_82;
      }
      uint64_t v50 = v30;
      if (v19) {
        break;
      }
LABEL_30:
      uint64_t v20 = v49;
      uint64_t v30 = v50 + 1;
      if (v50 + 1 == v49) {
        return MEMORY[0x19F3C3580](v29, -1, -1);
      }
    }
    uint64_t v34 = 0;
    while (1)
    {
      if (v34 == v19) {
        goto LABEL_70;
      }
      uint64_t v35 = v34 * v54;
      if ((unsigned __int128)(v34 * (__int128)v54) >> 64 != (v34 * v54) >> 63) {
        goto LABEL_71;
      }
      uint64_t v36 = v35 * v21;
      if ((unsigned __int128)(v35 * (__int128)v21) >> 64 != (v35 * v21) >> 63) {
        goto LABEL_72;
      }
      int64_t v37 = v34 * v22;
      if ((unsigned __int128)(v34 * (__int128)v22) >> 64 != (v34 * v22) >> 63) {
        goto LABEL_73;
      }
      int64_t v38 = v37 * v23;
      if ((unsigned __int128)(v37 * (__int128)v23) >> 64 != (v37 * v23) >> 63) {
        goto LABEL_74;
      }
      if (v22) {
        break;
      }
LABEL_39:
      ++v34;
      uint64_t v19 = v53;
      if (v34 == v53) {
        goto LABEL_30;
      }
    }
    uint64_t v39 = v52 + v36;
    if (__OFADD__(v52, v36)) {
      goto LABEL_75;
    }
    int64_t v40 = v51 + v38;
    if (__OFADD__(v51, v38)) {
      goto LABEL_76;
    }
    uint64_t v41 = 0;
    while (!__OFADD__(v23, v41))
    {
      float v42 = v29[v23 + v41];
      if ((~LODWORD(v42) & 0x7F800000) == 0) {
        goto LABEL_61;
      }
      if (v42 <= -9.2234e18) {
        goto LABEL_62;
      }
      if (v42 >= 9.2234e18) {
        goto LABEL_63;
      }
      uint64_t v43 = (uint64_t)v42 * v21;
      if ((unsigned __int128)((uint64_t)v42 * (__int128)v21) >> 64 != v43 >> 63) {
        goto LABEL_64;
      }
      int64_t v44 = v41 * v23;
      if ((unsigned __int128)(v41 * (__int128)v23) >> 64 != (v41 * v23) >> 63) {
        goto LABEL_65;
      }
      BOOL v45 = __OFADD__(v39, v43);
      uint64_t v46 = v39 + v43;
      if (v45) {
        goto LABEL_66;
      }
      BOOL v45 = __OFADD__(v40, v44);
      int64_t v47 = v40 + v44;
      if (v45) {
        goto LABEL_67;
      }
      ++v41;
      vDSP_vindex((const float *)(v17 + 4 * v46), v29, 1, (float *)(v18 + 4 * v47), 1, v23);
      if (v22 == v41) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  return MEMORY[0x19F3C3580](v29, -1, -1);
}

uint64_t sub_19E69FCD0(uint64_t result, void *a2, void *a3)
{
  unint64_t v4 = a2[2];
  if (v4 < 3)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v4 == 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v5 = a3[2];
  if (v5 < 3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 == 3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = (float *)result;
  uint64_t v7 = a2[6];
  uint64_t v8 = a2[7];
  uint64_t v9 = v3 + 40;
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  sub_19E6A182C(v9, (uint64_t)&v15);
  uint64_t result = sub_19E6A182C((uint64_t)&v15, (uint64_t)&v16);
  if ((v16 & 1) == 0)
  {
    float v12 = (float)v7;
    float v13 = (float)v10;
LABEL_12:
    float v14 = v12 / v13;
    goto LABEL_13;
  }
  float v14 = 0.0;
  if (v11 > 1 && __OFSUB__(v8, 1)) {
    goto LABEL_18;
  }
  if (v10 < 2)
  {
LABEL_13:
    *uint64_t v6 = v14;
    return result;
  }
  if (!__OFSUB__(v7, 1))
  {
    float v12 = (float)(v7 - 1);
    float v13 = (float)(v10 - 1);
    goto LABEL_12;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_19E69FDC8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a3[2];
  if (v6)
  {
    uint64_t v7 = a3 + 4;
    uint64_t v8 = 1;
    uint64_t v9 = a3[2];
    do
    {
      uint64_t v10 = *v7++;
      uint64_t v11 = v8 * v10;
      if ((unsigned __int128)(v8 * (__int128)v10) >> 64 != (v8 * v10) >> 63) {
        goto LABEL_125;
      }
      uint64_t v8 = v11;
    }
    while (--v9);
  }
  unint64_t v12 = a4[2];
  if (v12)
  {
    float v13 = a4 + 4;
    uint64_t v14 = 1;
    uint64_t v15 = a4[2];
    do
    {
      uint64_t v16 = *v13++;
      uint64_t v17 = v14 * v16;
      if ((unsigned __int128)(v14 * (__int128)v16) >> 64 != (v14 * v16) >> 63) {
        goto LABEL_126;
      }
      uint64_t v14 = v17;
    }
    while (--v15);
  }
  if (!*(void *)(a1 + 16))
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  uint64_t v68 = *(void *)(a1 + 168);
  if (!v68) {
    goto LABEL_152;
  }
  if (!*(void *)(a2 + 16)) {
    goto LABEL_138;
  }
  uint64_t v67 = *(void *)(a2 + 168);
  if (!v67) {
    goto LABEL_152;
  }
  if (!v6) {
    goto LABEL_139;
  }
  if (v6 == 1)
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v6 < 3)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  if (v6 == 3)
  {
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  if (v12 < 3)
  {
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  if (v12 == 3)
  {
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  uint64_t v18 = a3[4];
  uint64_t v19 = a3[5];
  int64_t v20 = a3[7];
  uint64_t v64 = a3[6];
  uint64_t v22 = a4[6];
  int64_t __N = a4[7];
  sub_19E69FCD0((uint64_t)&__A, a3, a4);
  float v23 = __A;
  LODWORD(__B[0]) = v24;
  if ((unint64_t)(__N - 0x2000000000000000) >> 62 != 3)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  uint64_t v58 = v18;
  uint64_t v75 = (float *)swift_slowAlloc();
  if (__N < 0)
  {
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  if (__N)
  {
    bzero(v75, 4 * __N);
    long long v69 = (float *)swift_slowAlloc();
    bzero(v69, 4 * __N);
    __C = (float *)swift_slowAlloc();
    bzero(__C, 4 * __N);
  }
  else
  {
    long long v69 = (float *)swift_slowAlloc();
    __C = (float *)swift_slowAlloc();
  }
  sub_19E6A182C(a5 + 40, (uint64_t)&v81);
  sub_19E6A182C((uint64_t)&v81, (uint64_t)&v83);
  if (v83) {
    float __A = 0.0;
  }
  else {
    float __A = (float)(*(float *)__B * 0.5) + -0.5;
  }
  vDSP_vramp(&__A, (const float *)__B, __C, 1, __N);
  float __A = 0.0;
  if (__OFSUB__(v20, 1)) {
    goto LABEL_147;
  }
  float v25 = (float)(v20 - 1) + -0.0001;
  if (v25 < 0.0) {
    float v25 = 0.0;
  }
  float v79 = v25;
  vDSP_vclip(__C, 1, &__A, &v79, __C, 1, __N);
  if (v18 < 0) {
    goto LABEL_148;
  }
  if (!v18)
  {
LABEL_108:
    MEMORY[0x19F3C3580](v75, -1, -1);
    MEMORY[0x19F3C3580](v69, -1, -1);
    return MEMORY[0x19F3C3580](__C, -1, -1);
  }
  if (v19 < 0) {
LABEL_150:
  }
    __break(1u);
  uint64_t v26 = 0;
  uint64_t v27 = v64 - 1;
  BOOL v28 = __OFSUB__(v64, 1);
  BOOL v59 = v28;
  uint64_t v29 = v18;
  uint64_t v62 = v19;
  while (1)
  {
    if (v26 == v29) {
      goto LABEL_131;
    }
    uint64_t v30 = v26 * v19;
    if ((unsigned __int128)(v26 * (__int128)v19) >> 64 != (v26 * v19) >> 63) {
      goto LABEL_132;
    }
    uint64_t v31 = v30 * v64;
    if ((unsigned __int128)(v30 * (__int128)v64) >> 64 != (v30 * v64) >> 63) {
      goto LABEL_133;
    }
    int64_t v61 = v31 * v20;
    if ((unsigned __int128)(v31 * (__int128)v20) >> 64 != (v31 * v20) >> 63) {
      goto LABEL_134;
    }
    uint64_t v32 = v30 * v22;
    if ((unsigned __int128)(v30 * (__int128)v22) >> 64 != (v30 * v22) >> 63) {
      goto LABEL_135;
    }
    int64_t v60 = v32 * __N;
    if ((unsigned __int128)(v32 * (__int128)__N) >> 64 != (v32 * __N) >> 63) {
      goto LABEL_136;
    }
    if (v19) {
      break;
    }
LABEL_107:
    ++v26;
    uint64_t v29 = v58;
    if (v26 == v58) {
      goto LABEL_108;
    }
  }
  if (v22 < 0)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  uint64_t v33 = 0;
  uint64_t v63 = v26;
  while (1)
  {
    if (v33 == v19) {
      goto LABEL_127;
    }
    uint64_t v34 = v33 * v64;
    if ((unsigned __int128)(v33 * (__int128)v64) >> 64 != (v33 * v64) >> 63) {
      goto LABEL_128;
    }
    int64_t v35 = v34 * v20;
    if ((unsigned __int128)(v34 * (__int128)v20) >> 64 != (v34 * v20) >> 63) {
      goto LABEL_129;
    }
    uint64_t v65 = v33;
    if (v22) {
      break;
    }
LABEL_46:
    uint64_t v33 = v65 + 1;
    uint64_t v19 = v62;
    uint64_t v26 = v63;
    if (v65 + 1 == v62) {
      goto LABEL_107;
    }
  }
  if (v59)
  {
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  uint64_t v36 = 0;
  int64_t v73 = v61 + v35;
  BOOL v37 = __OFADD__(v61, v35);
  BOOL v74 = v37;
  uint64_t v38 = v33 * __N * v22;
  BOOL v71 = (unsigned __int128)(v33 * __N * (__int128)v22) >> 64 != v38 >> 63;
  BOOL v72 = (unsigned __int128)(v33 * (__int128)__N) >> 64 != (v33 * __N) >> 63;
  int64_t v70 = v60 + v38;
  BOOL v39 = __OFADD__(v60, v38);
  uint64_t v40 = -1;
  uint64_t v41 = -1;
  while (1)
  {
    if (v22 == v36)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    sub_19E6A182C((uint64_t)&v81, (uint64_t)&v82);
    float v42 = (float)v36;
    if (v82)
    {
      float v43 = v23 * v42;
    }
    else
    {
      float v43 = (float)(v23 * (float)(v42 + 0.5)) + -0.5;
      if (v43 < 0.0) {
        float v43 = 0.0;
      }
    }
    if ((~LODWORD(v43) & 0x7F800000) == 0) {
      goto LABEL_110;
    }
    if (v43 <= -9.2234e18) {
      goto LABEL_111;
    }
    if (v43 >= 9.2234e18) {
      goto LABEL_112;
    }
    a5 = v22;
    uint64_t v44 = (uint64_t)v43;
    if (v27 < (uint64_t)v43) {
      uint64_t v44 = v64 - 1;
    }
    uint64_t v45 = v44 & ~(v44 >> 63);
    if (__OFADD__(v45, 1)) {
      goto LABEL_113;
    }
    if (v27 >= v45 + 1) {
      uint64_t v46 = v45 + 1;
    }
    else {
      uint64_t v46 = v64 - 1;
    }
    float v47 = 1.0;
    if (v45 != v46)
    {
      float v48 = v43 - (float)v45;
      if (v48 > 1.0) {
        float v48 = 1.0;
      }
      float v47 = 0.0;
      if (v48 >= 0.0) {
        float v47 = v48;
      }
    }
    float __D = v47;
    if (v45 != v41)
    {
      if (v74) {
        goto LABEL_119;
      }
      uint64_t v49 = v45 * v20;
      if ((unsigned __int128)(v45 * (__int128)v20) >> 64 != (v45 * v20) >> 63) {
        goto LABEL_120;
      }
      BOOL v50 = __OFADD__(v73, v49);
      int64_t v51 = v73 + v49;
      if (v50) {
        goto LABEL_122;
      }
      if (v20 == 1)
      {
        vDSP_vfill((const float *)(v68 + 4 * v51), v75, 1, __N);
      }
      else
      {
        if (v20 < 0) {
          goto LABEL_151;
        }
        vDSP_vlint((const float *)(v68 + 4 * v51), __C, 1, v75, 1, __N, v20);
      }
    }
    if (v45 != v46 && v46 != v40) {
      break;
    }
LABEL_100:
    if (v72) {
      goto LABEL_114;
    }
    if (v71) {
      goto LABEL_115;
    }
    if (v39) {
      goto LABEL_116;
    }
    uint64_t v55 = v36 * __N;
    if ((unsigned __int128)(v36 * (__int128)__N) >> 64 != (v36 * __N) >> 63) {
      goto LABEL_117;
    }
    BOOL v50 = __OFADD__(v70, v55);
    int64_t v56 = v70 + v55;
    if (v50) {
      goto LABEL_118;
    }
    if (v45 == v46)
    {
      vDSP_mmov(v75, (float *)(v67 + 4 * v56), __N, 1uLL, __N, __N);
    }
    else
    {
      float v76 = 1.0 - v47;
      vDSP_vsmsma(v75, 1, &v76, v69, 1, &__D, (float *)(v67 + 4 * v56), 1, __N);
    }
    ++v36;
    uint64_t v40 = v46;
    uint64_t v41 = v45;
    uint64_t v22 = a5;
    if (a5 == v36) {
      goto LABEL_46;
    }
  }
  if (v74) {
    goto LABEL_121;
  }
  int64_t v53 = v46 * v20;
  if ((unsigned __int128)(v46 * (__int128)v20) >> 64 != (v46 * v20) >> 63) {
    goto LABEL_123;
  }
  BOOL v50 = __OFADD__(v73, v53);
  int64_t v54 = v73 + v53;
  if (v50) {
    goto LABEL_124;
  }
  if (v20 == 1)
  {
    vDSP_vfill((const float *)(v68 + 4 * v54), v69, 1, __N);
    goto LABEL_100;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    vDSP_vlint((const float *)(v68 + 4 * v54), __C, 1, v69, 1, __N, v20);
    goto LABEL_100;
  }
LABEL_151:
  sub_19EBF71E8();
  __break(1u);
LABEL_152:
  sub_19E6A182C(a5 + 40, (uint64_t)&v79);
  sub_19E6A182C((uint64_t)&v79, (uint64_t)&__A);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    __B[0] = 0;
    __B[1] = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    LOBYTE(__D) = 0;
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

void *sub_19E6A0708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v6 = *(void *)(a1 + 32);
  switch(v6 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v10 = (uint64_t *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v10 = (uint64_t *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v10 = (uint64_t *)(v6 + 40);
      break;
  }
  uint64_t v11 = *v10;
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 16))
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x19E6A08C4);
  }
  unint64_t v12 = *(void *)(a2 + 32);
  switch(v12 >> 62)
  {
    case 1uLL:
    case 3uLL:
      float v13 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      float v13 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      float v13 = (uint64_t *)(v12 + 40);
      break;
  }
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v14;
  long long v16 = v4[1];
  *(_OWORD *)(v15 + 32) = *v4;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 57) = *(_OWORD *)((char *)v4 + 25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)v4);
  uint64_t v17 = sub_19E69E1D8(a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_19E69E488(a2);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v17;
  result[3] = v18;
  result[4] = a3;
  result[5] = a4;
  result[6] = sub_19E6A18F0;
  result[7] = v15;
  return result;
}

void *sub_19E6A08E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v6 = *(void *)(a1 + 32);
  switch(v6 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v10 = (uint64_t *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      uint64_t v10 = (uint64_t *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      uint64_t v10 = (uint64_t *)(v6 + 40);
      break;
  }
  uint64_t v11 = *v10;
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 16))
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x19E6A0AA0);
  }
  unint64_t v12 = *(void *)(a2 + 32);
  switch(v12 >> 62)
  {
    case 1uLL:
    case 3uLL:
      float v13 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 2uLL:
      float v13 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      float v13 = (uint64_t *)(v12 + 40);
      break;
  }
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v14;
  long long v16 = v4[1];
  *(_OWORD *)(v15 + 32) = *v4;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 57) = *(_OWORD *)((char *)v4 + 25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19E668FC4((uint64_t)v4);
  uint64_t v17 = sub_19E69E1D8(a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_19E69E488(a2);
  swift_bridgeObjectRelease();
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v17;
  result[3] = v18;
  result[4] = a3;
  result[5] = a4;
  result[6] = sub_19E6A1948;
  result[7] = v15;
  return result;
}

uint64_t sub_19E6A0AC0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v5 = a3[2];
  if (v5)
  {
    unint64_t v6 = a3 + 4;
    uint64_t v7 = 1;
    uint64_t v8 = a3[2];
    while (1)
    {
      uint64_t v9 = *v6++;
      uint64_t v10 = v7 * v9;
      if ((unsigned __int128)(v7 * (__int128)v9) >> 64 != (v7 * v9) >> 63) {
        break;
      }
      uint64_t v7 = v10;
      if (!--v8) {
        goto LABEL_5;
      }
    }
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
LABEL_5:
  unint64_t v11 = a4[2];
  if (v11)
  {
    unint64_t v12 = a4 + 4;
    uint64_t v13 = 1;
    uint64_t v14 = a4[2];
    while (1)
    {
      uint64_t v15 = *v12++;
      uint64_t v16 = v13 * v15;
      if ((unsigned __int128)(v13 * (__int128)v15) >> 64 != (v13 * v15) >> 63) {
        break;
      }
      uint64_t v13 = v16;
      if (!--v14) {
        goto LABEL_9;
      }
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
LABEL_9:
  if (!*(void *)(a1 + 16))
  {
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  uint64_t v17 = *(void *)(a1 + 168);
  if (v17)
  {
    if (!*(void *)(a2 + 16))
    {
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    uint64_t v18 = *(void *)(a2 + 168);
    if (v18)
    {
      if (!v5)
      {
LABEL_119:
        __break(1u);
        goto LABEL_120;
      }
      if (v5 == 1)
      {
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      if (v5 < 3)
      {
LABEL_121:
        __break(1u);
        goto LABEL_122;
      }
      if (v5 == 3)
      {
LABEL_122:
        __break(1u);
        goto LABEL_123;
      }
      if (v11 < 3)
      {
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
      if (v11 == 3)
      {
LABEL_124:
        __break(1u);
        goto LABEL_125;
      }
      uint64_t v19 = a3[4];
      uint64_t v20 = a3[5];
      uint64_t v21 = a3[6];
      uint64_t v22 = a3[7];
      uint64_t v23 = a4[6];
      uint64_t v24 = a4[7];
      uint64_t result = sub_19E69FCD0((uint64_t)v58, a3, a4);
      if (v19 < 0)
      {
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        goto LABEL_127;
      }
      if (!v19) {
        return result;
      }
      if (v20 < 0) {
        goto LABEL_129;
      }
      uint64_t v27 = 0;
      float v28 = *(float *)v58;
      uint64_t v29 = v21 - 1;
      BOOL v30 = __OFSUB__(v21, 1);
      BOOL v31 = __OFSUB__(v22, 1);
      while (1)
      {
        if (v27 == v19) {
          goto LABEL_110;
        }
        uint64_t v32 = v27 * v22;
        if ((unsigned __int128)(v27 * (__int128)v22) >> 64 != (v27 * v22) >> 63) {
          goto LABEL_111;
        }
        uint64_t v33 = v32 * v21;
        if ((unsigned __int128)(v32 * (__int128)v21) >> 64 != (v32 * v21) >> 63) {
          goto LABEL_112;
        }
        uint64_t v34 = v33 * v20;
        if ((unsigned __int128)(v33 * (__int128)v20) >> 64 != (v33 * v20) >> 63) {
          goto LABEL_113;
        }
        uint64_t v35 = v27 * v24;
        if ((unsigned __int128)(v27 * (__int128)v24) >> 64 != (v27 * v24) >> 63) {
          goto LABEL_114;
        }
        uint64_t v36 = v35 * v23;
        if ((unsigned __int128)(v35 * (__int128)v23) >> 64 != (v35 * v23) >> 63) {
          goto LABEL_115;
        }
        uint64_t v37 = v36 * v20;
        if ((unsigned __int128)(v36 * (__int128)v20) >> 64 != (v36 * v20) >> 63) {
          goto LABEL_116;
        }
        if (v20) {
          break;
        }
LABEL_84:
        if (++v27 == v19) {
          return result;
        }
      }
      if (v23 < 0)
      {
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      uint64_t v38 = 0;
      while (1)
      {
        if (v38 == v20) {
          goto LABEL_105;
        }
        uint64_t v39 = v38 * v21;
        if ((unsigned __int128)(v38 * (__int128)v21) >> 64 != (v38 * v21) >> 63) {
          goto LABEL_106;
        }
        uint64_t v40 = v39 * v22;
        if ((unsigned __int128)(v39 * (__int128)v22) >> 64 != (v39 * v22) >> 63) {
          goto LABEL_107;
        }
        uint64_t v41 = v38 * v23;
        if ((unsigned __int128)(v38 * (__int128)v23) >> 64 != (v38 * v23) >> 63) {
          goto LABEL_108;
        }
        uint64_t v42 = v41 * v24;
        uint64_t result = (unsigned __int128)(v41 * (__int128)v24) >> 64;
        if (result != v42 >> 63) {
          goto LABEL_109;
        }
        if (v23) {
          break;
        }
LABEL_38:
        if (++v38 == v20) {
          goto LABEL_84;
        }
      }
      if (v30) {
        goto LABEL_126;
      }
      if (v24 < 0)
      {
LABEL_127:
        __break(1u);
        goto LABEL_128;
      }
      uint64_t result = 0;
      BOOL v43 = __OFADD__(v34, v40);
      uint64_t v44 = v34 + v40;
      char v45 = v43;
      BOOL v43 = __OFADD__(v37, v42);
      uint64_t v46 = v37 + v42;
      a5 = v43;
      while (1)
      {
        if (result == v23) {
          goto LABEL_93;
        }
        float v47 = truncf(v28 * (float)result);
        if ((~LODWORD(v47) & 0x7F800000) == 0) {
          goto LABEL_94;
        }
        if (v47 <= -9.2234e18) {
          goto LABEL_95;
        }
        if (v47 >= 9.2234e18) {
          goto LABEL_96;
        }
        uint64_t v48 = (uint64_t)v47;
        if ((uint64_t)v47 > 0) {
          break;
        }
        uint64_t v48 = v21 - 1;
        if (v29 < 0) {
          goto LABEL_61;
        }
        if (v24)
        {
          uint64_t v48 = 0;
          if (v31) {
            goto LABEL_97;
          }
          goto LABEL_63;
        }
LABEL_53:
        if (++result == v23) {
          goto LABEL_38;
        }
      }
      if (v29 < v48) {
        uint64_t v48 = v21 - 1;
      }
LABEL_61:
      if (v24)
      {
        if (v31) {
          goto LABEL_97;
        }
LABEL_63:
        if (v45) {
          goto LABEL_98;
        }
        uint64_t v49 = v48 * v22;
        if ((unsigned __int128)(v48 * (__int128)v22) >> 64 != (v48 * v22) >> 63) {
          goto LABEL_99;
        }
        uint64_t v50 = v44 + v49;
        if (__OFADD__(v44, v49)) {
          goto LABEL_100;
        }
        if (a5) {
          goto LABEL_101;
        }
        uint64_t v51 = result * v24;
        if ((unsigned __int128)(result * (__int128)v24) >> 64 != (result * v24) >> 63) {
          goto LABEL_102;
        }
        BOOL v43 = __OFADD__(v46, v51);
        uint64_t v52 = v46 + v51;
        if (v43) {
          goto LABEL_103;
        }
        if (v24 < 1) {
          goto LABEL_104;
        }
        uint64_t v53 = 0;
        while (1)
        {
          float v54 = truncf(v26 * (float)v53);
          if ((~LODWORD(v54) & 0x7F800000) == 0) {
            break;
          }
          if (v54 <= -9.2234e18) {
            goto LABEL_87;
          }
          if (v54 >= 9.2234e18) {
            goto LABEL_88;
          }
          uint64_t v55 = (uint64_t)v54 & ~((uint64_t)v54 >> 63);
          if (v55 >= v22 - 1) {
            uint64_t v55 = v22 - 1;
          }
          BOOL v43 = __OFADD__(v50, v55);
          uint64_t v56 = v50 + v55;
          if (v43) {
            goto LABEL_89;
          }
          uint64_t v57 = v52 + v53;
          if (__OFADD__(v52, v53)) {
            goto LABEL_90;
          }
          ++v53;
          *(_WORD *)(v18 + 2 * v57) = *(_WORD *)(v17 + 2 * v56);
          if (v24 == v53) {
            goto LABEL_53;
          }
        }
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
      goto LABEL_53;
    }
  }
LABEL_130:
  sub_19E6A182C(a5 + 40, (uint64_t)&v59);
  sub_19E6A182C((uint64_t)&v59, (uint64_t)&v60);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    v58[0] = 0;
    v58[1] = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6A107C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v6 = a3[2];
  if (v6)
  {
    uint64_t v7 = a3 + 4;
    uint64_t v8 = 1;
    uint64_t v9 = a3[2];
    while (1)
    {
      uint64_t v10 = *v7++;
      uint64_t v11 = v8 * v10;
      if ((unsigned __int128)(v8 * (__int128)v10) >> 64 != (v8 * v10) >> 63) {
        break;
      }
      uint64_t v8 = v11;
      if (!--v9) {
        goto LABEL_5;
      }
    }
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
LABEL_5:
  unint64_t v12 = a4[2];
  if (v12)
  {
    uint64_t v13 = a4 + 4;
    uint64_t v14 = 1;
    uint64_t v15 = a4[2];
    while (1)
    {
      uint64_t v16 = *v13++;
      uint64_t v17 = v14 * v16;
      if ((unsigned __int128)(v14 * (__int128)v16) >> 64 != (v14 * v16) >> 63) {
        break;
      }
      uint64_t v14 = v17;
      if (!--v15) {
        goto LABEL_9;
      }
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
LABEL_9:
  if (!*(void *)(a1 + 16))
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v18 = *(void *)(a1 + 168);
  if (v18)
  {
    if (!*(void *)(a2 + 16))
    {
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    uint64_t v19 = *(void *)(a2 + 168);
    if (v19)
    {
      if (!v6)
      {
LABEL_154:
        __break(1u);
        goto LABEL_155;
      }
      if (v6 == 1)
      {
LABEL_155:
        __break(1u);
        goto LABEL_156;
      }
      if (v6 < 3)
      {
LABEL_156:
        __break(1u);
        goto LABEL_157;
      }
      if (v6 == 3)
      {
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      if (v12 < 3)
      {
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
      if (v12 == 3)
      {
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v20 = a3[4];
      uint64_t v21 = a3[7];
      uint64_t v89 = a3[5];
      uint64_t v90 = a3[6];
      uint64_t v22 = a4[6];
      uint64_t v23 = a4[7];
      uint64_t result = sub_19E69FCD0((uint64_t)v99, a3, a4);
      if (v20 < 0) {
        goto LABEL_160;
      }
      if (!v20) {
        return result;
      }
      if (v89 < 0) {
        goto LABEL_164;
      }
      float v26 = v25;
      uint64_t v27 = 0;
      float v98 = *(float *)v99;
      uint64_t v86 = a5 + 40;
      uint64_t v96 = v22;
      uint64_t v97 = v90 - 1;
      BOOL v28 = __OFSUB__(v90, 1);
      BOOL v85 = v28;
      uint64_t v29 = v21 - 1;
      BOOL v30 = __OFSUB__(v21, 1);
      BOOL v91 = v30;
      uint64_t v82 = v20;
      uint64_t v95 = v21;
      while (v27 != v20)
      {
        uint64_t v31 = v27 * v21;
        if ((unsigned __int128)(v27 * (__int128)v21) >> 64 != (v27 * v21) >> 63) {
          goto LABEL_146;
        }
        uint64_t v32 = v31 * v90;
        if ((unsigned __int128)(v31 * (__int128)v90) >> 64 != (v31 * v90) >> 63) {
          goto LABEL_147;
        }
        uint64_t v33 = v89;
        uint64_t v34 = v32 * v89;
        if ((unsigned __int128)(v32 * (__int128)v89) >> 64 != (v32 * v89) >> 63) {
          goto LABEL_148;
        }
        uint64_t v35 = v27 * v23;
        if ((unsigned __int128)(v27 * (__int128)v23) >> 64 != (v27 * v23) >> 63) {
          goto LABEL_149;
        }
        uint64_t v36 = v35 * v22;
        if ((unsigned __int128)(v35 * (__int128)v22) >> 64 != (v35 * v22) >> 63) {
          goto LABEL_150;
        }
        uint64_t v87 = v36 * v89;
        if ((unsigned __int128)(v36 * (__int128)v89) >> 64 != (v36 * v89) >> 63) {
          goto LABEL_151;
        }
        if (v89)
        {
          if (v22 < 0) {
            goto LABEL_163;
          }
          uint64_t v37 = 0;
          uint64_t v83 = v34;
          uint64_t v84 = v27;
          while (v37 != v33)
          {
            uint64_t v38 = v37 * v90;
            if ((unsigned __int128)(v37 * (__int128)v90) >> 64 != (v37 * v90) >> 63) {
              goto LABEL_140;
            }
            uint64_t v39 = v38 * v21;
            if ((unsigned __int128)(v38 * (__int128)v21) >> 64 != (v38 * v21) >> 63) {
              goto LABEL_141;
            }
            uint64_t v94 = v34 + v39;
            if (__OFADD__(v34, v39)) {
              goto LABEL_142;
            }
            uint64_t v40 = v37 * v22;
            if ((unsigned __int128)(v37 * (__int128)v22) >> 64 != (v37 * v22) >> 63) {
              goto LABEL_143;
            }
            uint64_t v88 = v37;
            a5 = v40 * v23;
            if ((unsigned __int128)(v40 * (__int128)v23) >> 64 != (v40 * v23) >> 63) {
              goto LABEL_144;
            }
            if (v22)
            {
              sub_19E6A182C(v86, (uint64_t)&v100);
              if (v85) {
                goto LABEL_161;
              }
              if ((v23 & 0x8000000000000000) == 0)
              {
                uint64_t v41 = 0;
                uint64_t v92 = v87 + a5;
                BOOL v42 = __OFADD__(v87, a5);
                BOOL v93 = v42;
                while (v41 != v22)
                {
                  uint64_t result = sub_19E6A182C((uint64_t)&v100, (uint64_t)v99);
                  float v43 = (float)v41;
                  if (v99[0])
                  {
                    float v44 = v98 * v43;
                  }
                  else
                  {
                    float v44 = (float)(v98 * (float)(v43 + 0.5)) + -0.5;
                    if (v44 < 0.0) {
                      float v44 = 0.0;
                    }
                  }
                  if ((~LODWORD(v44) & 0x7F800000) == 0) {
                    goto LABEL_126;
                  }
                  if (v44 <= -9.2234e18) {
                    goto LABEL_127;
                  }
                  if (v44 >= 9.2234e18) {
                    goto LABEL_128;
                  }
                  uint64_t v45 = (uint64_t)v44;
                  if (v97 < (uint64_t)v44) {
                    uint64_t v45 = v90 - 1;
                  }
                  uint64_t v46 = v45 & ~(v45 >> 63);
                  uint64_t v47 = v46 + 1;
                  if (__OFADD__(v46, 1)) {
                    goto LABEL_129;
                  }
                  if (v97 < v47) {
                    uint64_t v47 = v90 - 1;
                  }
                  float v48 = v44 - (float)v46;
                  if (v48 <= 1.0)
                  {
                    if (v48 < 0.0) {
                      float v49 = 0.0;
                    }
                    else {
                      float v49 = v48;
                    }
                    if (v23)
                    {
LABEL_75:
                      if (v91) {
                        goto LABEL_130;
                      }
                      uint64_t v50 = v46 * v95;
                      if ((unsigned __int128)(v46 * (__int128)v95) >> 64 != (v46 * v95) >> 63) {
                        goto LABEL_131;
                      }
                      uint64_t v51 = v94 + v50;
                      if (__OFADD__(v94, v50)) {
                        goto LABEL_132;
                      }
                      uint64_t v52 = v47 * v95;
                      if ((unsigned __int128)(v47 * (__int128)v95) >> 64 != (v47 * v95) >> 63) {
                        goto LABEL_133;
                      }
                      uint64_t v53 = v94 + v52;
                      if (__OFADD__(v94, v52)) {
                        goto LABEL_134;
                      }
                      if (v93) {
                        goto LABEL_135;
                      }
                      uint64_t v54 = v41 * v23;
                      if ((unsigned __int128)(v41 * (__int128)v23) >> 64 != (v41 * v23) >> 63) {
                        goto LABEL_136;
                      }
                      a5 = v92 + v54;
                      if (!__OFADD__(v92, v54))
                      {
                        if (v23 < 1) {
                          goto LABEL_138;
                        }
                        uint64_t v55 = 0;
                        while (1)
                        {
                          uint64_t result = sub_19E6A182C((uint64_t)&v100, (uint64_t)v101);
                          float v56 = (float)v55;
                          if (v101[0])
                          {
                            float v57 = v26 * v56;
                          }
                          else
                          {
                            float v57 = (float)(v26 * (float)(v56 + 0.5)) + -0.5;
                            if (v57 < 0.0) {
                              float v57 = 0.0;
                            }
                          }
                          if ((~LODWORD(v57) & 0x7F800000) == 0) {
                            break;
                          }
                          if (v57 <= -9.2234e18) {
                            goto LABEL_115;
                          }
                          if (v57 >= 9.2234e18) {
                            goto LABEL_116;
                          }
                          uint64_t v58 = (uint64_t)v57;
                          if (v29 < (uint64_t)v57) {
                            uint64_t v58 = v29;
                          }
                          uint64_t v59 = v58 & ~(v58 >> 63);
                          if (__OFADD__(v59, 1)) {
                            goto LABEL_117;
                          }
                          if (v29 >= v59 + 1) {
                            uint64_t v60 = v59 + 1;
                          }
                          else {
                            uint64_t v60 = v29;
                          }
                          float v61 = v57 - (float)v59;
                          if (v61 < 0.0) {
                            float v62 = 0.0;
                          }
                          else {
                            float v62 = v61;
                          }
                          if (v61 <= 1.0) {
                            float v63 = v62;
                          }
                          else {
                            float v63 = 1.0;
                          }
                          uint64_t v64 = v51 + v59;
                          if (__OFADD__(v51, v59)) {
                            goto LABEL_118;
                          }
                          uint64_t v65 = v51 + v60;
                          if (__OFADD__(v51, v60)) {
                            goto LABEL_119;
                          }
                          uint64_t v66 = v53 + v59;
                          if (__OFADD__(v53, v59)) {
                            goto LABEL_120;
                          }
                          _VF = __OFADD__(v53, v60);
                          uint64_t v68 = v53 + v60;
                          if (_VF) {
                            goto LABEL_121;
                          }
                          uint64_t v69 = a5 + v55;
                          if (__OFADD__(a5, v55)) {
                            goto LABEL_122;
                          }
                          ++v55;
                          _H1 = *(_WORD *)(v18 + 2 * v64);
                          __asm { FCVT            S1, H1 }
                          _H2 = *(_WORD *)(v18 + 2 * v65);
                          __asm { FCVT            S2, H2 }
                          float v77 = (float)(1.0 - v49) * (float)((float)((float)(1.0 - v63) * _S1) + (float)(v63 * _S2));
                          LOWORD(_S2) = *(_WORD *)(v18 + 2 * v66);
                          __asm { FCVT            S2, H2 }
                          _H3 = *(_WORD *)(v18 + 2 * v68);
                          __asm { FCVT            S3, H3 }
                          _S0 = v77 + (float)(v49 * (float)((float)((float)(1.0 - v63) * _S2) + (float)(v63 * _S3)));
                          __asm { FCVT            H0, S0 }
                          *(_WORD *)(v19 + 2 * v69) = LOWORD(_S0);
                          if (v23 == v55) {
                            goto LABEL_53;
                          }
                        }
                        __break(1u);
LABEL_115:
                        __break(1u);
LABEL_116:
                        __break(1u);
LABEL_117:
                        __break(1u);
LABEL_118:
                        __break(1u);
LABEL_119:
                        __break(1u);
LABEL_120:
                        __break(1u);
LABEL_121:
                        __break(1u);
LABEL_122:
                        __break(1u);
                        goto LABEL_123;
                      }
                      goto LABEL_137;
                    }
                  }
                  else
                  {
                    float v49 = 1.0;
                    if (v23) {
                      goto LABEL_75;
                    }
                  }
LABEL_53:
                  ++v41;
                  uint64_t v22 = v96;
                  if (v41 == v96) {
                    goto LABEL_39;
                  }
                }
                goto LABEL_125;
              }
              goto LABEL_162;
            }
LABEL_39:
            uint64_t v33 = v89;
            uint64_t v37 = v88 + 1;
            uint64_t v20 = v82;
            uint64_t v34 = v83;
            uint64_t v21 = v95;
            uint64_t v27 = v84;
            if (v88 + 1 == v89) {
              goto LABEL_112;
            }
          }
          goto LABEL_139;
        }
LABEL_112:
        if (++v27 == v20) {
          return result;
        }
      }
      goto LABEL_145;
    }
  }
LABEL_165:
  sub_19E6A182C(a5 + 40, (uint64_t)&v100);
  sub_19E6A182C((uint64_t)&v100, (uint64_t)v101);
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    v99[0] = 0;
    v99[1] = 0xE000000000000000;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6A182C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19E6A1888()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19E6A18C0(uint64_t a1, uint64_t a2)
{
  return sub_19E69EEA8(a1, a2, v2 + 16);
}

uint64_t sub_19E6A18D0(uint64_t a1, uint64_t a2)
{
  return sub_19E69FDC8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t sub_19E6A18E0(uint64_t a1, uint64_t a2)
{
  return sub_19E69F6A0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t sub_19E6A18F0(uint64_t a1, uint64_t a2)
{
  return sub_19E6A107C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t objectdestroy_2Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_19E6A1948(uint64_t a1, uint64_t a2)
{
  return sub_19E6A0AC0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t sub_19E6A1954(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v8, 0);
    uint64_t v9 = v25;
    uint64_t v10 = (unint64_t *)(a1 + 32);
    uint64_t v11 = v24;
    do
    {
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain_n();
      if (!v16) {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_19EBF5EC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
      sub_19EBF6198();
      swift_release();
      *uint64_t v7 = v12;
      uint64_t v25 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_19E66F8E8(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v19 + 1;
      sub_19E698FA4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_19E6A1C04(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D088);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CEE0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_19E66F8E8(0, v8, 0);
    uint64_t v9 = v25;
    uint64_t v10 = (unint64_t *)(a1 + 32);
    uint64_t v11 = v24;
    do
    {
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      switch(v13 >> 62)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 24);
          break;
        case 2uLL:
          uint64_t v14 = (uint64_t *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          uint64_t v14 = (uint64_t *)(v12 + 40);
          break;
      }
      uint64_t v15 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v15 + 16);
      swift_retain_n();
      if (!v16) {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_19EBF5EC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
      sub_19EBF6198();
      swift_release();
      *uint64_t v7 = v12;
      uint64_t v25 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_19E66F8E8(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v25;
      }
      *(void *)(v9 + 16) = v19 + 1;
      sub_19E698FA4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *sub_19E6A1EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = sub_19E6A1954(a1);
  uint64_t v13 = sub_19E6A1C04(a2);
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = v13;
  switch(v14 >> 62)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v16 = (v14 & 0x3FFFFFFFFFFFFFFFLL) + 24;
      break;
    case 2uLL:
      uint64_t v16 = (v14 & 0x3FFFFFFFFFFFFFFFLL) + 16;
      break;
    default:
      uint64_t v16 = v14 + 40;
      break;
  }
  if (!*(void *)(*(void *)v16 + 16))
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x19E6A1FF4);
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(unsigned char *)(v17 + 24) = a6 & 1;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  unint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v12;
  v18[3] = v15;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = sub_19E6A23A8;
  v18[7] = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t sub_19E6A2004(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (sub_19E6A23B4(a3, a4 & 1, a1, a2))
  {
    if (*(void *)(a1 + 16))
    {
      if (*(void *)(a2 + 16))
      {
        sub_19EBF5ED8();
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  if (qword_1E945BB28 != -1) {
    swift_once();
  }
  if (byte_1E946A4F1)
  {
    sub_19EBF6FE8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF67D8();
    sub_19EBF7188();
    sub_19EBF67D8();
  }
  uint64_t result = sub_19EBF71F8();
  __break(1u);
  return result;
}

uint64_t sub_19E6A2398()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_19E6A23A8(uint64_t a1, uint64_t a2)
{
  return sub_19E6A2004(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_19E6A23B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_19EBF6018();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) == 0)
  {
    uint64_t result = sub_19EBF5FB8();
    if (*(float *)&a1 > *((float *)&a1 + 1))
    {
      __break(1u);
    }
    else
    {
      *uint64_t v11 = a1;
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, float))(v9 + 104))(v11, *MEMORY[0x1E4FBAA78], v8, *(float *)&a1);
      if (*(void *)(a3 + 16))
      {
        long long v13 = *(_OWORD *)(a3 + 176);
        long long v41 = *(_OWORD *)(a3 + 160);
        long long v42 = v13;
        long long v43 = *(_OWORD *)(a3 + 192);
        long long v14 = *(_OWORD *)(a3 + 112);
        long long v37 = *(_OWORD *)(a3 + 96);
        long long v38 = v14;
        long long v15 = *(_OWORD *)(a3 + 144);
        long long v39 = *(_OWORD *)(a3 + 128);
        long long v40 = v15;
        long long v16 = *(_OWORD *)(a3 + 48);
        long long v33 = *(_OWORD *)(a3 + 32);
        long long v34 = v16;
        long long v17 = *(_OWORD *)(a3 + 80);
        long long v35 = *(_OWORD *)(a3 + 64);
        long long v36 = v17;
        if (*(void *)(a4 + 16))
        {
          long long v18 = *(_OWORD *)(a4 + 176);
          long long v52 = *(_OWORD *)(a4 + 160);
          long long v53 = v18;
          long long v54 = *(_OWORD *)(a4 + 192);
          long long v19 = *(_OWORD *)(a4 + 112);
          long long v48 = *(_OWORD *)(a4 + 96);
          long long v49 = v19;
          long long v20 = *(_OWORD *)(a4 + 144);
          long long v50 = *(_OWORD *)(a4 + 128);
          long long v51 = v20;
          long long v21 = *(_OWORD *)(a4 + 48);
          long long v44 = *(_OWORD *)(a4 + 32);
          long long v45 = v21;
          long long v22 = *(_OWORD *)(a4 + 80);
          long long v46 = *(_OWORD *)(a4 + 64);
          long long v47 = v22;
          sub_19EBF6E08();
          sub_19EBF6D88();
          return sub_19EBF5FA8();
        }
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_19EBF5FB8();
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBAA80], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945BB18);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_19EC36240;
  *(void *)(result + 32) = a1;
  if (!*(void *)(a3 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  long long v23 = *(_OWORD *)(a3 + 176);
  long long v41 = *(_OWORD *)(a3 + 160);
  long long v42 = v23;
  long long v43 = *(_OWORD *)(a3 + 192);
  long long v24 = *(_OWORD *)(a3 + 112);
  long long v37 = *(_OWORD *)(a3 + 96);
  long long v38 = v24;
  long long v25 = *(_OWORD *)(a3 + 144);
  long long v39 = *(_OWORD *)(a3 + 128);
  long long v40 = v25;
  long long v26 = *(_OWORD *)(a3 + 48);
  long long v33 = *(_OWORD *)(a3 + 32);
  long long v34 = v26;
  long long v27 = *(_OWORD *)(a3 + 80);
  long long v35 = *(_OWORD *)(a3 + 64);
  long long v36 = v27;
  if (!*(void *)(a4 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  long long v28 = *(_OWORD *)(a4 + 176);
  long long v52 = *(_OWORD *)(a4 + 160);
  long long v53 = v28;
  long long v54 = *(_OWORD *)(a4 + 192);
  long long v29 = *(_OWORD *)(a4 + 112);
  long long v48 = *(_OWORD *)(a4 + 96);
  long long v49 = v29;
  long long v30 = *(_OWORD *)(a4 + 144);
  long long v50 = *(_OWORD *)(a4 + 128);
  long long v51 = v30;
  long long v31 = *(_OWORD *)(a4 + 48);
  long long v44 = *(_OWORD *)(a4 + 32);
  long long v45 = v31;
  long long v32 = *(_OWORD *)(a4 + 80);
  long long v46 = *(_OWORD *)(a4 + 64);
  long long v47 = v32;
  sub_19EBF6E08();
  sub_19EBF6D88();
  return sub_19EBF5F98();
}

uint64_t static MLShapedArray<>.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a5;
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = type metadata accessor for MLShapedArray();
  uint64_t v12 = (void *)MLShapedArray.shape.getter();
  uint64_t v21 = v9;
  uint64_t v22 = v10;
  long long v13 = (void *)MLShapedArray.shape.getter();
  BOOL v14 = sub_19E5DDC7C(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRelease();
  if (!v14) {
    return 0;
  }
  uint64_t v21 = v8;
  uint64_t v22 = v7;
  MEMORY[0x1F4188790](v15);
  void v18[2] = a3;
  v18[3] = a4;
  v18[4] = v19;
  v18[5] = v9;
  v18[6] = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_19E5D809C((uint64_t)sub_19E6A288C, (uint64_t)v18, v11, MEMORY[0x1E4FBB390], WitnessTable);
  return v20;
}

uint64_t sub_19E6A27E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v9[6] = a2;
  v9[7] = a3;
  void v9[2] = a4;
  v9[3] = a5;
  v9[4] = a6;
  v9[5] = a1;
  uint64_t v6 = type metadata accessor for MLShapedArray();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_19E5D809C((uint64_t)sub_19E6A2D44, (uint64_t)v9, v6, MEMORY[0x1E4FBB390], WitnessTable);
}

uint64_t sub_19E6A288C(uint64_t a1)
{
  return sub_19E6A27E4(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_19E6A28B0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static MLShapedArray<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t static MLShapedArraySlice<>.== infix(_:_:)(long long *a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v9 = *a1;
  long long v8 = a1[1];
  long long v16 = a1[2];
  long long v17 = v8;
  long long v10 = a2[1];
  v23[0] = *a2;
  v23[1] = v10;
  void v23[2] = a2[2];
  long long v18 = v9;
  BOOL v11 = sub_19E5DDC7C((void *)v9, *(void **)&v23[0]);
  if (!v11) {
    return 0;
  }
  long long v19 = v18;
  long long v20 = v17;
  long long v21 = v16;
  MEMORY[0x1F4188790](v11);
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = v23;
  uint64_t v12 = type metadata accessor for MLShapedArraySlice();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_19E5D809C((uint64_t)sub_19E6A2AA0, (uint64_t)v15, v12, MEMORY[0x1E4FBB390], WitnessTable);
  return v22;
}

uint64_t sub_19E6A29EC(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5 = a2[1];
  long long v10 = *a2;
  long long v11 = v5;
  long long v12 = a2[2];
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a1;
  uint64_t v6 = type metadata accessor for MLShapedArraySlice();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_19E5D809C((uint64_t)sub_19E6A2CC4, (uint64_t)v9, v6, MEMORY[0x1E4FBB390], WitnessTable);
}

uint64_t sub_19E6A2AA0(uint64_t a1)
{
  return sub_19E6A29EC(a1, *(long long **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_19E6A2AC0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, unsigned char *a4@<X8>)
{
  type metadata accessor for ScalarSequence();
  swift_getWitnessTable();
  sub_19EBF73E8();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = a1;
  sub_19EBF7018();
  swift_getWitnessTable();
  char v9 = sub_19EBF6848();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v9 & 1;
  return result;
}

uint64_t sub_19E6A2CB4(long long *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  return static MLShapedArraySlice<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t sub_19E6A2CC4@<X0>(unsigned char *a1@<X8>)
{
  return sub_19E6A2AC0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_19E6A2D14()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19E6A2D28(uint64_t a1)
{
  return sub_19E6A2DD0(a1) & 1;
}

uint64_t sub_19E6A2D44@<X0>(unsigned char *a1@<X8>)
{
  return sub_19E6A2AC0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_19E6A2D94()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19E6A2DA4()
{
  return sub_19EBF6748() & 1;
}

uint64_t sub_19E6A2DD0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

void sub_19E6A2E34(unint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_19E66F960(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
LABEL_18:
      os_unfair_lock_unlock(v2);
      __break(1u);
      return;
    }
    uint64_t v6 = 0;
    uint64_t v7 = v15;
    unint64_t v13 = v4 & 0xC000000000000001;
    unint64_t v8 = v4;
    while (v5 != v6)
    {
      if (v13)
      {
        uint64_t v9 = MEMORY[0x19F3BF970](v6, v4);
      }
      else
      {
        uint64_t v9 = *(void *)(v4 + 8 * v6 + 32);
        swift_retain();
      }
      uint64_t v10 = *(void *)(v9 + 72);
      uint64_t v2 = (os_unfair_lock_s *)(v10 + 24);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
      sub_19E6AD414((void *)(v10 + 16), &v14);
      if (v3) {
        goto LABEL_18;
      }
      uint64_t v3 = 0;
      os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
      uint64_t v2 = v14;
      swift_release();
      swift_release();
      uint64_t v15 = v7;
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_19E66F960(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v15;
      }
      ++v6;
      *(void *)(v7 + 16) = v12 + 1;
      *(void *)(v7 + 8 * v12 + 32) = v2;
      unint64_t v4 = v8;
      if (v5 == v6) {
        return;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_19EBF7228();
    swift_bridgeObjectRelease();
  }
}

uint64_t MLModel.prediction(from:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19E6A300C, 0, 0);
}

uint64_t sub_19E6A300C()
{
  if (sub_19E6A3338())
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[4] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_19E6A3138;
    uint64_t v3 = v0[2];
    uint64_t v2 = v0[3];
    v1[23] = 0;
    v1[24] = v2;
    v1[22] = v3;
    return MEMORY[0x1F4188298](sub_19E6A362C, 0, 0);
  }
  else
  {
    unint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    *unint64_t v4 = v0;
    v4[1] = sub_19E6A3238;
    uint64_t v5 = v0[2];
    return sub_19E6A4AFC(v5, 0);
  }
}

uint64_t sub_19E6A3138(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_19E6A3238(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_19E6A3338()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_19E6AA114()[2];
  swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_19E6AA114();
  uint64_t v4 = v3[2];
  if (v4)
  {
    uint64_t v5 = v3 + 5;
    while (1)
    {
      uint64_t v10 = *(v5 - 1);
      uint64_t v11 = *v5;
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v1, sel_modelDescription);
      id v13 = objc_msgSend(v12, sel_outputDescriptionsByName);

      sub_19E64A9C0(0, (unint64_t *)&unk_1E945D150);
      uint64_t v14 = sub_19EBF6638();

      if (!*(void *)(v14 + 16)) {
        break;
      }
      unint64_t v15 = sub_19E662844(v10, v11);
      if ((v16 & 1) == 0) {
        break;
      }
      id v17 = *(id *)(*(void *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(v17, sel_multiArrayConstraint);
      if (!v18)
      {

        goto LABEL_16;
      }
      long long v19 = v18;
      id v20 = objc_msgSend(v18, sel_shapeConstraint);
      id v21 = objc_msgSend(v20, sel_type);

      if (v21 == (id)2)
      {
        id v6 = objc_msgSend(v19, sel_shapeConstraint);
        id v7 = objc_msgSend(v6, sel_enumeratedShapes);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D198);
        uint64_t v8 = sub_19EBF68E8();

        uint64_t v9 = *(void *)(v8 + 16);
        swift_bridgeObjectRelease();
        if (v9 != 1) {
          goto LABEL_16;
        }
      }
      else
      {
        if (v21 == (id)3 || v21 == (id)1)
        {
          swift_bridgeObjectRelease();

          return 0;
        }
      }
      v5 += 2;
      if (!--v4) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_19E6A3598(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  return MEMORY[0x1F4188298](sub_19E6A362C, 0, 0);
}

uint64_t sub_19E6A362C()
{
  uint64_t v139 = v0;
  v138[5] = *MEMORY[0x1E4F143B8];
  id v1 = objc_msgSend(*(id *)(v0 + 192), sel_program);
  swift_unknownObjectRelease();
  if (!v1)
  {
    sub_19EBF6798();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v8 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, 0, 0);

    swift_willThrow();
    goto LABEL_24;
  }
  if (qword_1E945BB90 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = off_1E945D0D0;
  uint64_t v5 = *((void *)off_1E945D0D0 + 3);
  id v6 = (void *)swift_task_alloc();
  _OWORD v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_19E6ACA10((uint64_t *)(v5 + 16), v138);
  long long v129 = v3;
  uint64_t v9 = *(void *)(v0 + 176);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v10 = v138[0];
  uint64_t v11 = v138[1];
  uint64_t v12 = v138[2];
  uint64_t v13 = v138[3];
  *(void *)(v0 + 200) = v138[0];
  *(void *)(v0 + 208) = v12;
  uint64_t v14 = v138[4];
  swift_task_dealloc();
  id v15 = objc_msgSend(objc_allocWithZone((Class)MLPredictionOptions), sel_init);
  *(void *)(v0 + 216) = v15;
  char v16 = sub_19E6ACA30(v9);
  uint64_t v18 = v17;
  long long v134 = v15;
  uint64_t v136 = v11;
  uint64_t v133 = v13;
  uint64_t v126 = v12;
  uint64_t v124 = v10;
  long long v19 = v16;
  sub_19E6A9680((uint64_t)v16);
  id v20 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  id v21 = sub_19E6ABD04();
  *(void *)(v0 + 224) = v21;
  long long v121 = v21;
  long long v122 = v19;
  uint64_t v22 = *(void *)(v18 + 16);
  unint64_t v132 = v14;
  unint64_t v23 = (unint64_t)v15;
  if (!v22)
  {
    unint64_t v31 = v14;
    swift_bridgeObjectRelease();
    uint64_t v25 = v136;
    goto LABEL_12;
  }
  v138[0] = MEMORY[0x1E4FBC860];
  sub_19EBF70D8();
  long long v24 = (uint64_t *)(v18 + 40);
  uint64_t v25 = v136;
  do
  {
    uint64_t v26 = *v24;
    uint64_t ObjectType = swift_getObjectType();
    long long v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    swift_unknownObjectRetain();
    uint64_t v29 = v28(ObjectType, v26);
    id v30 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v29, (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32))(ObjectType, v26));
    swift_unknownObjectRelease();
    if (!v30)
    {
      __break(1u);
      goto LABEL_105;
    }
    swift_unknownObjectRelease();
    sub_19EBF70A8();
    sub_19EBF7108();
    sub_19EBF7118();
    sub_19EBF70B8();
    v24 += 2;
    --v22;
  }
  while (v22);
  swift_bridgeObjectRelease();
  unint64_t v31 = v132;
  unint64_t v23 = (unint64_t)v15;
LABEL_12:
  sub_19E64A9C0(0, (unint64_t *)&unk_1E945D118);
  long long v32 = (void *)sub_19EBF68D8();
  swift_bridgeObjectRelease();
  long long v33 = &selRef_reps;
  objc_msgSend((id)v23, sel_setWaitSyncPoints_, v32);

  if (v129 && v124)
  {
    uint64_t v34 = swift_getObjectType();
    long long v35 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain();
    uint64_t v36 = v35(v34, v25);
    id v37 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v36, (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v34, v25));
    swift_unknownObjectRelease();
    if (v37)
    {
      id v38 = objc_msgSend((id)v23, sel_waitSyncPoints);
      if (v38)
      {
        long long v39 = v38;
        uint64_t v40 = sub_19EBF68E8();

        v138[0] = v40;
        id v41 = v37;
        MEMORY[0x19F3BF1F0]();
        if (*(void *)((v138[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v138[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_102:
        }
          sub_19EBF6948();
        sub_19EBF6998();
        sub_19EBF6908();
        if (v138[0])
        {
          long long v42 = (void *)sub_19EBF68D8();
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v42 = 0;
        }
        objc_msgSend((id)v23, v33[483], v42);

        swift_unknownObjectRelease();
      }
      else
      {
        objc_msgSend((id)v23, sel_setWaitSyncPoints_, 0);

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v41 = (id)v126;
  long long v33 = (char **)v133;
  sub_19E6A9A00(v126, v133);
  uint64_t v46 = v43;
  int64_t v47 = 0;
  long long v130 = (_OWORD *)(v0 + 64);
  long long v125 = (_OWORD *)(v0 + 128);
  long long v123 = (_OWORD *)(v0 + 96);
  int v120 = (void **)(v0 + 160);
  char v119 = (void **)(v0 + 168);
  uint64_t v127 = v43 + 64;
  uint64_t v48 = -1;
  uint64_t v49 = -1 << *(unsigned char *)(v43 + 32);
  if (-v49 < 64) {
    uint64_t v48 = ~(-1 << -(char)v49);
  }
  unint64_t v50 = v48 & *(void *)(v43 + 64);
  uint64_t v51 = MEMORY[0x1E4FBC868];
  int64_t v128 = (unint64_t)(63 - v49) >> 6;
  uint64_t v131 = v43;
  while (2)
  {
    *(void *)(v0 + 232) = v51;
    if (v50)
    {
      uint64_t v135 = (v50 - 1) & v50;
      int64_t v137 = v47;
      unint64_t v54 = __clz(__rbit64(v50)) | (v47 << 6);
      goto LABEL_48;
    }
    int64_t v55 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      goto LABEL_100;
    }
    if (v55 < v128)
    {
      unint64_t v56 = *(void *)(v127 + 8 * v55);
      int64_t v57 = v47 + 1;
      if (!v56)
      {
        int64_t v57 = v47 + 2;
        if (v47 + 2 >= v128) {
          break;
        }
        unint64_t v56 = *(void *)(v127 + 8 * v57);
        if (!v56)
        {
          int64_t v57 = v47 + 3;
          if (v47 + 3 >= v128) {
            break;
          }
          unint64_t v56 = *(void *)(v127 + 8 * v57);
          if (!v56)
          {
            uint64_t v58 = v47 + 4;
            if (v47 + 4 >= v128) {
              break;
            }
            unint64_t v56 = *(void *)(v127 + 8 * v58);
            if (!v56)
            {
              while (1)
              {
                int64_t v57 = v58 + 1;
                if (__OFADD__(v58, 1)) {
                  goto LABEL_101;
                }
                if (v57 >= v128) {
                  goto LABEL_66;
                }
                unint64_t v56 = *(void *)(v127 + 8 * v57);
                ++v58;
                if (v56) {
                  goto LABEL_47;
                }
              }
            }
            int64_t v57 = v47 + 4;
          }
        }
      }
LABEL_47:
      uint64_t v135 = (v56 - 1) & v56;
      int64_t v137 = v57;
      unint64_t v54 = __clz(__rbit64(v56)) + (v57 << 6);
LABEL_48:
      uint64_t v59 = 16 * v54;
      uint64_t v60 = (uint64_t *)(*(void *)(v46 + 48) + v59);
      uint64_t v61 = *v60;
      long long v33 = (char **)v60[1];
      uint64_t v62 = *(void *)(v46 + 56) + v59;
      float v63 = *(void **)v62;
      unint64_t v23 = *(void *)(v62 + 8);
      id v41 = (id)(v23 & 0x3FFFFFFFFFFFFFFFLL);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v64 = v63;
      uint64_t v65 = v51;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v138[0] = v65;
      unint64_t v31 = sub_19E662844(v61, (uint64_t)v33);
      uint64_t v68 = *(void *)(v65 + 16);
      BOOL v69 = (v67 & 1) == 0;
      uint64_t v70 = v68 + v69;
      if (__OFADD__(v68, v69))
      {
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      char v71 = v67;
      if (*(void *)(v65 + 24) >= v70)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v51 = v65;
          if ((v67 & 1) == 0) {
            goto LABEL_57;
          }
        }
        else
        {
          sub_19E6675A8();
          uint64_t v51 = v138[0];
          if ((v71 & 1) == 0) {
            goto LABEL_57;
          }
        }
      }
      else
      {
        sub_19E665628(v70, isUniquelyReferenced_nonNull_native);
        uint64_t v51 = v138[0];
        unint64_t v72 = sub_19E662844(v61, (uint64_t)v33);
        if ((v71 & 1) != (v73 & 1))
        {
          return sub_19EBF7408();
        }
        unint64_t v31 = v72;
        if ((v71 & 1) == 0)
        {
LABEL_57:
          *(void *)(v51 + 8 * (v31 >> 6) + 64) |= 1 << v31;
          uint64_t v75 = (uint64_t *)(*(void *)(v51 + 48) + 16 * v31);
          uint64_t *v75 = v61;
          v75[1] = (uint64_t)v33;
          *(void *)(*(void *)(v51 + 56) + 8 * v31) = v23;
          uint64_t v76 = *(void *)(v51 + 16);
          BOOL v77 = __OFADD__(v76, 1);
          uint64_t v78 = v76 + 1;
          if (v77) {
            goto LABEL_99;
          }
          *(void *)(v51 + 16) = v78;
          swift_bridgeObjectRetain();
          goto LABEL_59;
        }
      }
      uint64_t v74 = *(void *)(v51 + 56);
      swift_release();
      *(void *)(v74 + 8 * v31) = v23;
LABEL_59:
      unint64_t v31 = v132;
      unint64_t v23 = (unint64_t)v134;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = sub_19E64A9C0(0, (unint64_t *)&qword_1E945CFE0);
      *(void *)(v0 + 64) = v64;
      id v79 = v64;
      id v80 = objc_msgSend(v134, sel_outputBackings);
      uint64_t v81 = sub_19EBF6638();

      if (*(void *)(v0 + 88))
      {
        sub_19E5E29A8(v130, v125);
        char v52 = swift_isUniquelyReferenced_nonNull_native();
        v138[0] = v81;
        sub_19E668414(v125, v61, (uint64_t)v33, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v46 = v131;
      }
      else
      {
        sub_19E6AD228((uint64_t)v130);
        swift_bridgeObjectRetain();
        unint64_t v82 = sub_19E662844(v61, (uint64_t)v33);
        char v84 = v83;
        swift_bridgeObjectRelease();
        if (v84)
        {
          char v85 = swift_isUniquelyReferenced_nonNull_native();
          v138[0] = v81;
          if ((v85 & 1) == 0)
          {
            sub_19E6673C0();
            uint64_t v81 = v138[0];
          }
          swift_bridgeObjectRelease();
          sub_19E5E29A8((_OWORD *)(*(void *)(v81 + 56) + 32 * v82), v123);
          unint64_t v86 = v82;
          uint64_t v87 = v0 + 96;
          sub_19E6AC1CC(v86, v81);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v87 = v0 + 96;
          *long long v123 = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
        }
        uint64_t v46 = v131;
        swift_bridgeObjectRelease();
        sub_19E6AD228(v87);
      }
      long long v53 = (void *)sub_19EBF6628();
      swift_bridgeObjectRelease();
      objc_msgSend(v134, sel_setOutputBackings_, v53);

      swift_release();
      long long v33 = (char **)v133;
      int64_t v47 = v137;
      unint64_t v50 = v135;
      continue;
    }
    break;
  }
LABEL_66:
  swift_release();
  if (v126)
  {
    uint64_t v88 = swift_getObjectType();
    uint64_t v89 = v33[1];
    swift_unknownObjectRetain();
    uint64_t v90 = ((uint64_t (*)(uint64_t, char **))v89)(v88, v33);
    swift_unknownObjectRelease();
    if (v90)
    {
      uint64_t v91 = swift_getObjectType();
      uint64_t v92 = v33[4];
      swift_unknownObjectRetain();
      uint64_t v93 = ((uint64_t (*)(uint64_t, char **))v92)(v91, v33);
      swift_unknownObjectRelease();
      id v94 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v90, v93);
      objc_msgSend((id)v23, sel_setCompletionSyncPoint_, v94);

      swift_unknownObjectRelease();
    }
  }
  uint64_t v95 = *(void **)(v0 + 192);
  if (!v129)
  {
    *char v119 = 0;
    id v101 = objc_msgSend(v95, sel_newRequestWithInputFeatures_options_error_, v121, v23, v119);
    long long v102 = *v119;
    if (!v101)
    {
      id v116 = v102;
      swift_bridgeObjectRelease();
      sub_19EBF6328();

      swift_willThrow();
      goto LABEL_90;
    }
    id v99 = v101;
    id v103 = v102;
LABEL_77:
    *(void *)(v0 + 240) = v99;
    long long v104 = *(void **)(v0 + 192);
    uint64_t v105 = swift_allocObject();
    *(void *)(v105 + 16) = v122;
    *(void *)(v105 + 24) = v51;
    *(void *)(v0 + 48) = sub_19E6AD2C8;
    *(void *)(v0 + 56) = v105;
    *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_19E6D1A90;
    *(void *)(v0 + 40) = &block_descriptor_28_0;
    long long v106 = _Block_copy((const void *)(v0 + 16));
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v104, sel_submitPredictionRequest_completionHandler_, v99, v106);
    _Block_release(v106);
    if (!v31) {
      goto LABEL_81;
    }
    uint64_t v107 = sub_19E5F4768(v51);
    if ((v109 & 1) == 0)
    {
      if (*(_DWORD *)(v51 + 36) != v108) {
        __break(1u);
      }
      if (v107 != 1 << *(unsigned char *)(v51 + 32))
      {
        sub_19E6AC8AC(v107, v108, v51, v138);
        unint64_t v114 = v138[0];
        *(void *)(v0 + 248) = v138[0];
        switch(v114 >> 62)
        {
          case 1uLL:
            swift_retain();
            uint64_t v117 = (void *)swift_task_alloc();
            *(void *)(v0 + 264) = v117;
            *uint64_t v117 = v0;
            v117[1] = sub_19E6A48AC;
            uint64_t result = sub_19E6C4D14();
            break;
          case 2uLL:
            swift_release();
            goto LABEL_81;
          case 3uLL:
            swift_retain();
            uint64_t v118 = (void *)swift_task_alloc();
            *(void *)(v0 + 272) = v118;
            *uint64_t v118 = v0;
            v118[1] = sub_19E6A49D4;
            uint64_t result = sub_19E6C55E4();
            break;
          default:
            swift_retain();
            uint64_t v115 = (void *)swift_task_alloc();
            *(void *)(v0 + 256) = v115;
            *uint64_t v115 = v0;
            v115[1] = sub_19E6A46AC;
            uint64_t result = sub_19E6C4444();
            break;
        }
        return result;
      }
LABEL_81:
      long long v110 = *(void **)(v0 + 216);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      long long v111 = *(uint64_t (**)(uint64_t))(v0 + 8);
      uint64_t v112 = *(void *)(v0 + 232);
      return v111(v112);
    }
LABEL_105:
    __break(1u);
    JUMPOUT(0x19E6A469CLL);
  }
  *int v120 = 0;
  id v96 = v129;
  id v97 = objc_msgSend(v95, sel_newRequestWithInputFeatures_usingState_options_error_, v121, v96, v23, v120);
  float v98 = *v120;
  if (v97)
  {
    id v99 = v97;
    id v100 = v98;

    goto LABEL_77;
  }
  id v113 = v98;
  swift_bridgeObjectRelease();
  sub_19EBF6328();

  swift_willThrow();
LABEL_90:

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_24:
  long long v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_19E6A46AC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6A47D4, 0, 0);
}

uint64_t sub_19E6A47D4()
{
  swift_release_n();
  uint64_t v1 = *(void **)(v0 + 216);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 232);
  return v2(v3);
}

uint64_t sub_19E6A48AC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6AD54C, 0, 0);
}

uint64_t sub_19E6A49D4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6AD54C, 0, 0);
}

uint64_t sub_19E6A4AFC(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  uint64_t v4 = sub_19EBF6558();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v5 = sub_19EBF6528();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19E6A4C60, 0, 0);
}

uint64_t sub_19E6A4C60()
{
  uint64_t v1 = *(void *)(v0 + 96);
  char v2 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 420) = v2;
  uint64_t v3 = 1 << v2;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  *(_DWORD *)(v0 + 416) = *MEMORY[0x1E4FBD340];
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (2)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      uint64_t v9 = *(void *)(v0 + 96);
    }
    else
    {
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        goto LABEL_74;
      }
      int64_t v11 = (unint64_t)((1 << *(unsigned char *)(v0 + 420)) + 63) >> 6;
      uint64_t v9 = *(void *)(v0 + 96);
      if (v6 >= v11) {
        goto LABEL_59;
      }
      uint64_t v12 = v9 + 64;
      unint64_t v13 = *(void *)(v9 + 64 + 8 * v6);
      if (!v13)
      {
        int64_t v14 = v6 + 1;
        if (v6 + 1 >= v11) {
          goto LABEL_59;
        }
        unint64_t v13 = *(void *)(v12 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v6 + 2;
          if (v6 + 2 >= v11) {
            goto LABEL_59;
          }
          unint64_t v13 = *(void *)(v12 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v6 + 3;
            if (v6 + 3 >= v11) {
              goto LABEL_59;
            }
            unint64_t v13 = *(void *)(v12 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v6 + 4;
              if (v6 + 4 >= v11)
              {
LABEL_59:
                swift_release();
                char v83 = sub_19E6ACA30(v9);
                swift_bridgeObjectRelease();
                sub_19E6A9680((uint64_t)v83);
                swift_bridgeObjectRelease();
                id v84 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
                id v85 = sub_19E6ABD04();
                *(void *)(v0 + 232) = v85;
                unint64_t v86 = v85;
                uint64_t v87 = *(void **)(v0 + 104);
                id v88 = objc_allocWithZone((Class)MLPredictionOptions);
                id v89 = v86;
                if (v87)
                {
                  id v90 = v87;
                  id v91 = objc_msgSend(v88, sel_init);
                  *(void *)(v0 + 360) = v91;
                  uint64_t v92 = (void *)swift_task_alloc();
                  *(void *)(v0 + 368) = v92;
                  void *v92 = v0;
                  uint64_t v93 = sub_19E6A8248;
                }
                else
                {
                  id v91 = objc_msgSend(v88, sel_init);
                  *(void *)(v0 + 384) = v91;
                  id v90 = objc_msgSend(self, sel_emptyState);
                  *(void *)(v0 + 392) = v90;
                  uint64_t v92 = (void *)swift_task_alloc();
                  *(void *)(v0 + 400) = v92;
                  void *v92 = v0;
                  uint64_t v93 = sub_19E6A8374;
                }
                v92[1] = v93;
                return sub_19E6D2F98((uint64_t)v89, (uint64_t)v90, (uint64_t)v91);
              }
              unint64_t v13 = *(void *)(v12 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v6 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    break;
                  }
                  if (v6 >= v11) {
                    goto LABEL_59;
                  }
                  unint64_t v13 = *(void *)(v12 + 8 * v6);
                  ++v14;
                  if (v13) {
                    goto LABEL_20;
                  }
                }
LABEL_74:
                __break(1u);
                JUMPOUT(0x19E6A592CLL);
              }
            }
          }
        }
        int64_t v6 = v14;
      }
LABEL_20:
      unint64_t v5 = (v13 - 1) & v13;
      unint64_t v8 = __clz(__rbit64(v13)) + (v6 << 6);
    }
    *(void *)(v0 + 208) = v5;
    *(void *)(v0 + 216) = v6;
    unint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v8);
    *(void *)(v0 + 224) = v15;
    switch(v15 >> 62)
    {
      case 1uLL:
        uint64_t v16 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v17 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_24;
      case 2uLL:
        continue;
      case 3uLL:
        swift_retain_n();
        uint64_t v18 = sub_19E6C4398();
        uint64_t v17 = v19;
        swift_release();
        if (v18) {
          goto LABEL_27;
        }
        goto LABEL_5;
      default:
        uint64_t v16 = *(void *)(v15 + 24);
        uint64_t v17 = *(void *)(v15 + 32);
LABEL_24:
        swift_unknownObjectRetain();
        swift_retain();
        if (!v16) {
          goto LABEL_5;
        }
LABEL_27:
        uint64_t ObjectType = swift_getObjectType();
        char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(ObjectType, v17);
        swift_unknownObjectRelease();
        if (v21)
        {
LABEL_5:
          swift_release();
          continue;
        }
        switch(v15 >> 62)
        {
          case 0uLL:
            uint64_t v22 = qword_1E945BB50;
            swift_retain();
            if (v22 != -1) {
              swift_once();
            }
            uint64_t v23 = sub_19EBF6548();
            *(void *)(v0 + 248) = __swift_project_value_buffer(v23, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            long long v24 = sub_19EBF6538();
            os_signpost_type_t v25 = sub_19EBF6D78();
            if (sub_19EBF6E18())
            {
              uint64_t v26 = *(void *)(v0 + 192);
              uint64_t v28 = *(void *)(v0 + 152);
              uint64_t v27 = *(void *)(v0 + 160);
              uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
              v29(v26, *(void *)(v0 + 200), v28);
              id v30 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v30 = 0;
              os_signpost_id_t v31 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v24, v25, v31, "GPU :: Data synchronization", "", v30, 2u);
              MEMORY[0x19F3C3580](v30, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
            }
            else
            {
              uint64_t v43 = *(void *)(v0 + 160);

              uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
            }
            uint64_t v44 = *(void *)(v0 + 192);
            uint64_t v45 = *(void *)(v0 + 200);
            uint64_t v47 = *(void *)(v0 + 152);
            uint64_t v46 = *(void *)(v0 + 160);
            *(void *)(v0 + 256) = v29;
            *(void *)(v0 + 264) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v29(v44, v45, v47);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 272) = sub_19EBF6578();
            uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
            *(void *)(v0 + 280) = v48;
            *(void *)(v0 + 288) = (v46 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v48(v45, v47);
            if (*(void *)(v15 + 24))
            {
              uint64_t v96 = *(void *)(v15 + 32);
              uint64_t v97 = swift_getObjectType();
              id v100 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v96 + 56) + **(int **)(v96 + 56));
              float v98 = (void *)swift_task_alloc();
              *(void *)(v0 + 296) = v98;
              *float v98 = v0;
              id v99 = sub_19E6A671C;
              goto LABEL_66;
            }
            uint64_t v49 = sub_19EBF6538();
            sub_19EBF6568();
            os_signpost_type_t v50 = sub_19EBF6D68();
            if (sub_19EBF6E18())
            {
              int v51 = *(_DWORD *)(v0 + 416);
              uint64_t v52 = *(void *)(v0 + 144);
              uint64_t v53 = *(void *)(v0 + 120);
              uint64_t v54 = *(void *)(v0 + 128);
              swift_retain();
              sub_19EBF6598();
              swift_release();
              int v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v52, v53);
              unint64_t v56 = "[Error] Interval already ended";
              if (v55 != v51)
              {
                (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
                unint64_t v56 = "";
              }
              int64_t v57 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
              uint64_t v58 = *(void *)(v0 + 184);
              uint64_t v59 = *(void *)(v0 + 152);
              (*(void (**)(void, uint64_t, uint64_t))(v0 + 256))(*(void *)(v0 + 192), v58, v59);
              uint64_t v60 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v60 = 0;
              os_signpost_id_t v61 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v49, v50, v61, "GPU :: Data synchronization", v56, v60, 2u);
              MEMORY[0x19F3C3580](v60, -1, -1);

              v57(v58, v59);
              uint64_t v62 = (void *)(v0 + 192);
            }
            else
            {

              uint64_t v62 = (void *)(v0 + 184);
            }
            (*(void (**)(void, void))(v0 + 280))(*v62, *(void *)(v0 + 152));
            goto LABEL_57;
          case 1uLL:
            uint64_t v32 = v15 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v33 = qword_1E945BB50;
            swift_retain();
            if (v33 != -1) {
              swift_once();
            }
            uint64_t v34 = sub_19EBF6548();
            *(void *)(v0 + 304) = __swift_project_value_buffer(v34, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            long long v35 = sub_19EBF6538();
            os_signpost_type_t v36 = sub_19EBF6D78();
            if (sub_19EBF6E18())
            {
              uint64_t v37 = *(void *)(v0 + 192);
              uint64_t v39 = *(void *)(v0 + 152);
              uint64_t v38 = *(void *)(v0 + 160);
              uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
              v40(v37, *(void *)(v0 + 176), v39);
              id v41 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v41 = 0;
              os_signpost_id_t v42 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v35, v36, v42, "CPU :: Data synchronization", "", v41, 2u);
              MEMORY[0x19F3C3580](v41, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
            }
            else
            {
              uint64_t v63 = *(void *)(v0 + 160);

              uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
            }
            uint64_t v64 = *(void *)(v0 + 192);
            uint64_t v65 = *(void *)(v0 + 176);
            uint64_t v67 = *(void *)(v0 + 152);
            uint64_t v66 = *(void *)(v0 + 160);
            *(void *)(v0 + 312) = v40;
            *(void *)(v0 + 320) = (v66 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v40(v64, v65, v67);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 328) = sub_19EBF6578();
            uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
            *(void *)(v0 + 336) = v68;
            *(void *)(v0 + 344) = (v66 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v68(v65, v67);
            if (!*(void *)(v32 + 40))
            {
              BOOL v69 = sub_19EBF6538();
              sub_19EBF6568();
              os_signpost_type_t v70 = sub_19EBF6D68();
              if (sub_19EBF6E18())
              {
                int v71 = *(_DWORD *)(v0 + 416);
                uint64_t v72 = *(void *)(v0 + 128);
                uint64_t v73 = *(void *)(v0 + 136);
                uint64_t v74 = *(void *)(v0 + 120);
                swift_retain();
                sub_19EBF6598();
                swift_release();
                int v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 88))(v73, v74);
                uint64_t v76 = "[Error] Interval already ended";
                if (v75 != v71)
                {
                  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
                  uint64_t v76 = "";
                }
                BOOL v77 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
                uint64_t v78 = *(void *)(v0 + 168);
                uint64_t v79 = *(void *)(v0 + 152);
                (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 192), v78, v79);
                id v80 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)id v80 = 0;
                os_signpost_id_t v81 = sub_19EBF6508();
                _os_signpost_emit_with_name_impl(&dword_19E58B000, v69, v70, v81, "CPU :: Data synchronization", v76, v80, 2u);
                MEMORY[0x19F3C3580](v80, -1, -1);

                v77(v78, v79);
                unint64_t v82 = (void *)(v0 + 192);
              }
              else
              {

                unint64_t v82 = (void *)(v0 + 168);
              }
              (*(void (**)(void, void))(v0 + 336))(*v82, *(void *)(v0 + 152));
LABEL_57:
              swift_release();
              swift_release();
LABEL_58:
              swift_release();
              unint64_t v5 = *(void *)(v0 + 208);
              int64_t v6 = *(void *)(v0 + 216);
              continue;
            }
            uint64_t v96 = *(void *)(v32 + 48);
            uint64_t v97 = swift_getObjectType();
            id v100 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v96 + 56) + **(int **)(v96 + 56));
            float v98 = (void *)swift_task_alloc();
            *(void *)(v0 + 352) = v98;
            *float v98 = v0;
            id v99 = sub_19E6A74B0;
LABEL_66:
            v98[1] = v99;
            return v100(v97, v96);
          case 2uLL:
            goto LABEL_58;
          case 3uLL:
            swift_retain();
            id v94 = (void *)swift_task_alloc();
            *(void *)(v0 + 240) = v94;
            *id v94 = v0;
            v94[1] = sub_19E6A594C;
            return sub_19E6C55E4();
          default:
            JUMPOUT(0);
        }
    }
  }
}

uint64_t sub_19E6A594C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6A5A48, 0, 0);
}

uint64_t sub_19E6A5A48()
{
  swift_release();
  uint64_t v1 = (void *)(v0 + 192);
  while (1)
  {
    swift_release();
    unint64_t v3 = *(void *)(v0 + 208);
    int64_t v2 = *(void *)(v0 + 216);
LABEL_6:
    if (!v3) {
      break;
    }
    unint64_t v9 = __clz(__rbit64(v3));
    v3 &= v3 - 1;
    unint64_t v10 = v9 | (v2 << 6);
    uint64_t v11 = *(void *)(v0 + 96);
LABEL_21:
    *(void *)(v0 + 208) = v3;
    *(void *)(v0 + 216) = v2;
    unint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * v10);
    *(void *)(v0 + 224) = v17;
    switch(v17 >> 62)
    {
      case 1uLL:
        uint64_t v18 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v6 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_24;
      case 2uLL:
        goto LABEL_6;
      case 3uLL:
        swift_retain_n();
        uint64_t v4 = sub_19E6C4398();
        uint64_t v6 = v5;
        swift_release();
        if (v4) {
          goto LABEL_4;
        }
        goto LABEL_5;
      default:
        uint64_t v18 = *(void *)(v17 + 24);
        uint64_t v6 = *(void *)(v17 + 32);
LABEL_24:
        swift_unknownObjectRetain();
        swift_retain();
        if (!v18) {
          goto LABEL_5;
        }
LABEL_4:
        uint64_t ObjectType = swift_getObjectType();
        char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(ObjectType, v6);
        swift_unknownObjectRelease();
        if (v8)
        {
LABEL_5:
          swift_release();
          goto LABEL_6;
        }
        switch(v17 >> 62)
        {
          case 0uLL:
            uint64_t v19 = qword_1E945BB50;
            swift_retain();
            if (v19 != -1) {
              swift_once();
            }
            uint64_t v20 = sub_19EBF6548();
            *(void *)(v0 + 248) = __swift_project_value_buffer(v20, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            char v21 = sub_19EBF6538();
            os_signpost_type_t v22 = sub_19EBF6D78();
            uint64_t v97 = v1;
            if (sub_19EBF6E18())
            {
              uint64_t v23 = *(void *)(v0 + 192);
              uint64_t v25 = *(void *)(v0 + 152);
              uint64_t v24 = *(void *)(v0 + 160);
              uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
              v26(v23, *(void *)(v0 + 200), v25);
              uint64_t v27 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v27 = 0;
              os_signpost_id_t v28 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v21, v22, v28, "GPU :: Data synchronization", "", v27, 2u);
              MEMORY[0x19F3C3580](v27, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
            }
            else
            {
              uint64_t v40 = *(void *)(v0 + 160);

              uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
            }
            uint64_t v41 = *(void *)(v0 + 192);
            uint64_t v42 = *(void *)(v0 + 200);
            uint64_t v44 = *(void *)(v0 + 152);
            uint64_t v43 = *(void *)(v0 + 160);
            *(void *)(v0 + 256) = v26;
            *(void *)(v0 + 264) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v26(v41, v42, v44);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 272) = sub_19EBF6578();
            uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
            *(void *)(v0 + 280) = v45;
            *(void *)(v0 + 288) = (v43 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v45(v42, v44);
            if (!*(void *)(v17 + 24))
            {
              uint64_t v46 = sub_19EBF6538();
              sub_19EBF6568();
              os_signpost_type_t v47 = sub_19EBF6D68();
              if (sub_19EBF6E18())
              {
                int v48 = *(_DWORD *)(v0 + 416);
                uint64_t v49 = *(void *)(v0 + 144);
                uint64_t v50 = *(void *)(v0 + 120);
                uint64_t v51 = *(void *)(v0 + 128);
                swift_retain();
                sub_19EBF6598();
                swift_release();
                int v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 88))(v49, v50);
                uint64_t v53 = "[Error] Interval already ended";
                if (v52 != v48)
                {
                  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
                  uint64_t v53 = "";
                }
                uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
                uint64_t v55 = *(void *)(v0 + 184);
                uint64_t v56 = *(void *)(v0 + 152);
                (*(void (**)(void, uint64_t, uint64_t))(v0 + 256))(*(void *)(v0 + 192), v55, v56);
                int64_t v57 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)int64_t v57 = 0;
                os_signpost_id_t v58 = sub_19EBF6508();
                _os_signpost_emit_with_name_impl(&dword_19E58B000, v46, v47, v58, "GPU :: Data synchronization", v53, v57, 2u);
                MEMORY[0x19F3C3580](v57, -1, -1);

                v54(v55, v56);
                uint64_t v1 = v97;
                uint64_t v59 = v97;
              }
              else
              {

                uint64_t v1 = v97;
                uint64_t v59 = (void *)(v0 + 184);
              }
              (*(void (**)(void, void))(v0 + 280))(*v59, *(void *)(v0 + 152));
              goto LABEL_55;
            }
            uint64_t v93 = *(void *)(v17 + 32);
            uint64_t v94 = swift_getObjectType();
            id v99 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v93 + 56) + **(int **)(v93 + 56));
            uint64_t v95 = (void *)swift_task_alloc();
            *(void *)(v0 + 296) = v95;
            void *v95 = v0;
            uint64_t v96 = sub_19E6A671C;
            goto LABEL_68;
          case 1uLL:
            uint64_t v29 = v17 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v30 = qword_1E945BB50;
            swift_retain();
            if (v30 != -1) {
              swift_once();
            }
            uint64_t v31 = sub_19EBF6548();
            *(void *)(v0 + 304) = __swift_project_value_buffer(v31, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            uint64_t v32 = sub_19EBF6538();
            os_signpost_type_t v33 = sub_19EBF6D78();
            float v98 = v1;
            if (sub_19EBF6E18())
            {
              uint64_t v34 = *(void *)(v0 + 192);
              uint64_t v36 = *(void *)(v0 + 152);
              uint64_t v35 = *(void *)(v0 + 160);
              uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
              v37(v34, *(void *)(v0 + 176), v36);
              uint64_t v38 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v38 = 0;
              os_signpost_id_t v39 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v32, v33, v39, "CPU :: Data synchronization", "", v38, 2u);
              MEMORY[0x19F3C3580](v38, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
            }
            else
            {
              uint64_t v60 = *(void *)(v0 + 160);

              uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
            }
            uint64_t v61 = *(void *)(v0 + 192);
            uint64_t v62 = *(void *)(v0 + 176);
            uint64_t v64 = *(void *)(v0 + 152);
            uint64_t v63 = *(void *)(v0 + 160);
            *(void *)(v0 + 312) = v37;
            *(void *)(v0 + 320) = (v63 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v37(v61, v62, v64);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 328) = sub_19EBF6578();
            uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
            *(void *)(v0 + 336) = v65;
            *(void *)(v0 + 344) = (v63 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v65(v62, v64);
            if (*(void *)(v29 + 40))
            {
              uint64_t v93 = *(void *)(v29 + 48);
              uint64_t v94 = swift_getObjectType();
              id v99 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v93 + 56) + **(int **)(v93 + 56));
              uint64_t v95 = (void *)swift_task_alloc();
              *(void *)(v0 + 352) = v95;
              void *v95 = v0;
              uint64_t v96 = sub_19E6A74B0;
LABEL_68:
              v95[1] = v96;
              return v99(v94, v93);
            }
            uint64_t v66 = sub_19EBF6538();
            sub_19EBF6568();
            os_signpost_type_t v67 = sub_19EBF6D68();
            if (sub_19EBF6E18())
            {
              int v68 = *(_DWORD *)(v0 + 416);
              uint64_t v70 = *(void *)(v0 + 128);
              uint64_t v69 = *(void *)(v0 + 136);
              uint64_t v71 = *(void *)(v0 + 120);
              swift_retain();
              sub_19EBF6598();
              swift_release();
              int v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 88))(v69, v71);
              uint64_t v73 = "[Error] Interval already ended";
              if (v72 != v68)
              {
                (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
                uint64_t v73 = "";
              }
              uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
              uint64_t v75 = *(void *)(v0 + 168);
              uint64_t v76 = *(void *)(v0 + 152);
              (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 192), v75, v76);
              BOOL v77 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)BOOL v77 = 0;
              os_signpost_id_t v78 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v66, v67, v78, "CPU :: Data synchronization", v73, v77, 2u);
              MEMORY[0x19F3C3580](v77, -1, -1);

              v74(v75, v76);
              uint64_t v1 = v98;
              uint64_t v79 = v98;
            }
            else
            {

              uint64_t v79 = (void *)(v0 + 168);
              uint64_t v1 = v98;
            }
            (*(void (**)(void, void))(v0 + 336))(*v79, *(void *)(v0 + 152));
LABEL_55:
            swift_release();
            swift_release();
            break;
          case 2uLL:
            continue;
          case 3uLL:
            goto LABEL_63;
          default:
            JUMPOUT(0);
        }
        return result;
    }
  }
  if (__OFADD__(v2++, 1))
  {
    __break(1u);
LABEL_63:
    swift_retain();
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v92;
    void *v92 = v0;
    v92[1] = sub_19E6A594C;
    return sub_19E6C55E4();
  }
  int64_t v13 = (unint64_t)((1 << *(unsigned char *)(v0 + 420)) + 63) >> 6;
  uint64_t v11 = *(void *)(v0 + 96);
  if (v2 >= v13) {
    goto LABEL_56;
  }
  uint64_t v14 = v11 + 64;
  unint64_t v15 = *(void *)(v11 + 64 + 8 * v2);
  if (v15)
  {
LABEL_20:
    unint64_t v3 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v2 << 6);
    goto LABEL_21;
  }
  int64_t v16 = v2 + 1;
  if (v2 + 1 >= v13) {
    goto LABEL_56;
  }
  unint64_t v15 = *(void *)(v14 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v2 + 2;
  if (v2 + 2 >= v13) {
    goto LABEL_56;
  }
  unint64_t v15 = *(void *)(v14 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v2 + 3;
  if (v2 + 3 >= v13) {
    goto LABEL_56;
  }
  unint64_t v15 = *(void *)(v14 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v2 + 4;
  if (v2 + 4 >= v13) {
    goto LABEL_56;
  }
  unint64_t v15 = *(void *)(v14 + 8 * v16);
  if (v15)
  {
LABEL_19:
    int64_t v2 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v2 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      JUMPOUT(0x19E6A66FCLL);
    }
    if (v2 >= v13) {
      break;
    }
    unint64_t v15 = *(void *)(v14 + 8 * v2);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_56:
  swift_release();
  id v80 = sub_19E6ACA30(v11);
  swift_bridgeObjectRelease();
  sub_19E6A9680((uint64_t)v80);
  swift_bridgeObjectRelease();
  id v81 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  id v82 = sub_19E6ABD04();
  *(void *)(v0 + 232) = v82;
  char v83 = v82;
  id v84 = *(void **)(v0 + 104);
  id v85 = objc_allocWithZone((Class)MLPredictionOptions);
  id v86 = v83;
  if (v84)
  {
    id v87 = v84;
    id v88 = objc_msgSend(v85, sel_init);
    *(void *)(v0 + 360) = v88;
    id v89 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v89;
    void *v89 = v0;
    id v90 = sub_19E6A8248;
  }
  else
  {
    id v88 = objc_msgSend(v85, sel_init);
    *(void *)(v0 + 384) = v88;
    id v87 = objc_msgSend(self, sel_emptyState);
    *(void *)(v0 + 392) = v87;
    id v89 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v89;
    void *v89 = v0;
    id v90 = sub_19E6A8374;
  }
  v89[1] = v90;
  return sub_19E6D2F98((uint64_t)v86, (uint64_t)v87, (uint64_t)v88);
}

uint64_t sub_19E6A671C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6A6818, 0, 0);
}

uint64_t sub_19E6A6818()
{
  uint64_t v1 = (void *)(v0 + 184);
  int64_t v2 = (void *)(v0 + 192);
LABEL_2:
  unint64_t v3 = sub_19EBF6538();
  sub_19EBF6568();
  os_signpost_type_t v4 = sub_19EBF6D68();
  if (sub_19EBF6E18())
  {
    uint64_t v95 = v1;
    int v5 = *(_DWORD *)(v0 + 416);
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 128);
    swift_retain();
    sub_19EBF6598();
    swift_release();
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8);
    unint64_t v10 = "[Error] Interval already ended";
    if (v9 != v5)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
      unint64_t v10 = "";
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 152);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 256))(*(void *)(v0 + 192), v12, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v3, v4, v15, "GPU :: Data synchronization", v10, v14, 2u);
    MEMORY[0x19F3C3580](v14, -1, -1);

    v11(v12, v13);
    uint64_t v1 = v95;
    int64_t v16 = v2;
  }
  else
  {

    int64_t v16 = v1;
  }
  (*(void (**)(void, void))(v0 + 280))(*v16, *(void *)(v0 + 152));
LABEL_8:
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  unint64_t v18 = *(void *)(v0 + 208);
  int64_t v17 = *(void *)(v0 + 216);
  while (2)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v17 << 6);
      uint64_t v26 = *(void *)(v0 + 96);
    }
    else
    {
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      int64_t v28 = (unint64_t)((1 << *(unsigned char *)(v0 + 420)) + 63) >> 6;
      uint64_t v26 = *(void *)(v0 + 96);
      if (v17 >= v28) {
        goto LABEL_59;
      }
      uint64_t v29 = v26 + 64;
      unint64_t v30 = *(void *)(v26 + 64 + 8 * v17);
      if (!v30)
      {
        int64_t v31 = v17 + 1;
        if (v17 + 1 >= v28) {
          goto LABEL_59;
        }
        unint64_t v30 = *(void *)(v29 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v17 + 2;
          if (v17 + 2 >= v28) {
            goto LABEL_59;
          }
          unint64_t v30 = *(void *)(v29 + 8 * v31);
          if (!v30)
          {
            int64_t v31 = v17 + 3;
            if (v17 + 3 >= v28) {
              goto LABEL_59;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v31);
            if (!v30)
            {
              int64_t v31 = v17 + 4;
              if (v17 + 4 >= v28)
              {
LABEL_59:
                swift_release();
                os_signpost_id_t v78 = sub_19E6ACA30(v26);
                swift_bridgeObjectRelease();
                sub_19E6A9680((uint64_t)v78);
                swift_bridgeObjectRelease();
                id v79 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
                id v80 = sub_19E6ABD04();
                *(void *)(v0 + 232) = v80;
                id v81 = v80;
                id v82 = *(void **)(v0 + 104);
                id v83 = objc_allocWithZone((Class)MLPredictionOptions);
                id v84 = v81;
                if (v82)
                {
                  id v85 = v82;
                  id v86 = objc_msgSend(v83, sel_init);
                  *(void *)(v0 + 360) = v86;
                  id v87 = (void *)swift_task_alloc();
                  *(void *)(v0 + 368) = v87;
                  void *v87 = v0;
                  id v88 = sub_19E6A8248;
                }
                else
                {
                  id v86 = objc_msgSend(v83, sel_init);
                  *(void *)(v0 + 384) = v86;
                  id v85 = objc_msgSend(self, sel_emptyState);
                  *(void *)(v0 + 392) = v85;
                  id v87 = (void *)swift_task_alloc();
                  *(void *)(v0 + 400) = v87;
                  void *v87 = v0;
                  id v88 = sub_19E6A8374;
                }
                v87[1] = v88;
                return sub_19E6D2F98((uint64_t)v84, (uint64_t)v85, (uint64_t)v86);
              }
              unint64_t v30 = *(void *)(v29 + 8 * v31);
              if (!v30)
              {
                while (1)
                {
                  int64_t v17 = v31 + 1;
                  if (__OFADD__(v31, 1)) {
                    goto LABEL_69;
                  }
                  if (v17 >= v28) {
                    goto LABEL_59;
                  }
                  unint64_t v30 = *(void *)(v29 + 8 * v17);
                  ++v31;
                  if (v30) {
                    goto LABEL_27;
                  }
                }
              }
            }
          }
        }
        int64_t v17 = v31;
      }
LABEL_27:
      unint64_t v18 = (v30 - 1) & v30;
      unint64_t v25 = __clz(__rbit64(v30)) + (v17 << 6);
    }
    *(void *)(v0 + 208) = v18;
    *(void *)(v0 + 216) = v17;
    unint64_t v32 = *(void *)(*(void *)(v26 + 56) + 8 * v25);
    *(void *)(v0 + 224) = v32;
    unint64_t v3 = (v32 >> 62);
    switch(v32 >> 62)
    {
      case 1uLL:
        uint64_t v33 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v21 = *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_31;
      case 2uLL:
        continue;
      case 3uLL:
        swift_retain_n();
        uint64_t v19 = sub_19E6C4398();
        uint64_t v21 = v20;
        swift_release();
        if (v19) {
          goto LABEL_11;
        }
        goto LABEL_12;
      default:
        uint64_t v33 = *(void *)(v32 + 24);
        uint64_t v21 = *(void *)(v32 + 32);
LABEL_31:
        swift_unknownObjectRetain();
        swift_retain();
        if (!v33) {
          goto LABEL_12;
        }
LABEL_11:
        uint64_t ObjectType = swift_getObjectType();
        char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(ObjectType, v21);
        swift_unknownObjectRelease();
        if (v23)
        {
LABEL_12:
          swift_release();
          continue;
        }
        switch(v3)
        {
          case 2:
            goto LABEL_9;
          case 0:
            uint64_t v63 = qword_1E945BB50;
            swift_retain();
            if (v63 != -1) {
              swift_once();
            }
            uint64_t v64 = sub_19EBF6548();
            *(void *)(v0 + 248) = __swift_project_value_buffer(v64, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            uint64_t v65 = sub_19EBF6538();
            os_signpost_type_t v66 = sub_19EBF6D78();
            if (sub_19EBF6E18())
            {
              uint64_t v67 = *(void *)(v0 + 192);
              uint64_t v68 = *(void *)(v0 + 160);
              uint64_t v99 = *(void *)(v0 + 152);
              uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
              ((void (*)(uint64_t, void))v69)(v67, *(void *)(v0 + 200));
              uint64_t v70 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v70 = 0;
              os_signpost_id_t v71 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v65, v66, v71, "GPU :: Data synchronization", "", v70, 2u);
              MEMORY[0x19F3C3580](v70, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v99);
            }
            else
            {
              uint64_t v72 = *(void *)(v0 + 160);

              uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
            }
            uint64_t v73 = *(void *)(v0 + 192);
            uint64_t v74 = *(void *)(v0 + 200);
            uint64_t v76 = *(void *)(v0 + 152);
            uint64_t v75 = *(void *)(v0 + 160);
            *(void *)(v0 + 256) = v69;
            *(void *)(v0 + 264) = (v75 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v69(v73, v74, v76);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 272) = sub_19EBF6578();
            BOOL v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
            *(void *)(v0 + 280) = v77;
            *(void *)(v0 + 288) = (v75 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v77(v74, v76);
            if (*(void *)(v32 + 24))
            {
              Class isa = *(Class *)(v32 + 32);
              uint64_t v92 = swift_getObjectType();
              uint64_t v97 = (uint64_t (*)(uint64_t, Class))(*((void *)isa + 7) + **((int **)isa + 7));
              uint64_t v93 = (void *)swift_task_alloc();
              *(void *)(v0 + 296) = v93;
              void *v93 = v0;
              uint64_t v94 = sub_19E6A671C;
              goto LABEL_71;
            }
            goto LABEL_2;
          case 1:
            unint64_t v3 = (v32 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v34 = qword_1E945BB50;
            swift_retain();
            if (v34 != -1) {
              swift_once();
            }
            float v98 = v2;
            uint64_t v35 = sub_19EBF6548();
            *(void *)(v0 + 304) = __swift_project_value_buffer(v35, (uint64_t)qword_1E946A518);
            sub_19EBF6518();
            uint64_t v36 = sub_19EBF6538();
            os_signpost_type_t v37 = sub_19EBF6D78();
            if (sub_19EBF6E18())
            {
              uint64_t v38 = *(void *)(v0 + 192);
              uint64_t v40 = *(void *)(v0 + 152);
              uint64_t v39 = *(void *)(v0 + 160);
              uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
              v41(v38, *(void *)(v0 + 176), v40);
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              os_signpost_id_t v43 = sub_19EBF6508();
              _os_signpost_emit_with_name_impl(&dword_19E58B000, v36, v37, v43, "CPU :: Data synchronization", "", v42, 2u);
              MEMORY[0x19F3C3580](v42, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
            }
            else
            {
              uint64_t v44 = *(void *)(v0 + 160);

              uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
            }
            uint64_t v45 = *(void *)(v0 + 192);
            uint64_t v46 = *(void *)(v0 + 176);
            uint64_t v48 = *(void *)(v0 + 152);
            uint64_t v47 = *(void *)(v0 + 160);
            *(void *)(v0 + 312) = v41;
            *(void *)(v0 + 320) = (v47 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v41(v45, v46, v48);
            sub_19EBF6588();
            swift_allocObject();
            *(void *)(v0 + 328) = sub_19EBF6578();
            uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
            *(void *)(v0 + 336) = v49;
            *(void *)(v0 + 344) = (v47 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
            v49(v46, v48);
            if (!v3[5].isa)
            {
              unint64_t v3 = sub_19EBF6538();
              sub_19EBF6568();
              os_signpost_type_t v50 = sub_19EBF6D68();
              if (sub_19EBF6E18())
              {
                uint64_t v96 = v1;
                int v51 = *(_DWORD *)(v0 + 416);
                uint64_t v52 = *(void *)(v0 + 128);
                uint64_t v53 = *(void *)(v0 + 136);
                uint64_t v54 = *(void *)(v0 + 120);
                swift_retain();
                sub_19EBF6598();
                swift_release();
                int v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v53, v54);
                uint64_t v56 = "[Error] Interval already ended";
                if (v55 != v51)
                {
                  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
                  uint64_t v56 = "";
                }
                int64_t v57 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
                uint64_t v58 = *(void *)(v0 + 168);
                uint64_t v59 = *(void *)(v0 + 152);
                (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 192), v58, v59);
                uint64_t v60 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v60 = 0;
                os_signpost_id_t v61 = sub_19EBF6508();
                _os_signpost_emit_with_name_impl(&dword_19E58B000, v3, v50, v61, "CPU :: Data synchronization", v56, v60, 2u);
                MEMORY[0x19F3C3580](v60, -1, -1);

                v57(v58, v59);
                uint64_t v1 = v96;
                int64_t v2 = v98;
                uint64_t v62 = v98;
              }
              else
              {

                uint64_t v62 = (void *)(v0 + 168);
                int64_t v2 = v98;
              }
              (*(void (**)(void, void))(v0 + 336))(*v62, *(void *)(v0 + 152));
              goto LABEL_8;
            }
LABEL_70:
            Class isa = v3[6].isa;
            uint64_t v92 = swift_getObjectType();
            uint64_t v97 = (uint64_t (*)(uint64_t, Class))(*((void *)isa + 7) + **((int **)isa + 7));
            uint64_t v93 = (void *)swift_task_alloc();
            *(void *)(v0 + 352) = v93;
            void *v93 = v0;
            uint64_t v94 = sub_19E6A74B0;
LABEL_71:
            v93[1] = v94;
            return v97(v92, isa);
          default:
            swift_retain();
            id v90 = (void *)swift_task_alloc();
            *(void *)(v0 + 240) = v90;
            void *v90 = v0;
            v90[1] = sub_19E6A594C;
            return sub_19E6C55E4();
        }
    }
  }
}

uint64_t sub_19E6A74B0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E6A75AC, 0, 0);
}

uint64_t sub_19E6A75AC()
{
  uint64_t v1 = (void *)(v0 + 192);
LABEL_2:
  int64_t v2 = sub_19EBF6538();
  sub_19EBF6568();
  os_signpost_type_t v3 = sub_19EBF6D68();
  if (sub_19EBF6E18())
  {
    uint64_t v97 = v1;
    int v4 = *(_DWORD *)(v0 + 416);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 120);
    swift_retain();
    sub_19EBF6598();
    swift_release();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
    int v9 = "[Error] Interval already ended";
    if (v8 != v4)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
      int v9 = "";
    }
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 152);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 312))(*(void *)(v0 + 192), v11, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_19EBF6508();
    _os_signpost_emit_with_name_impl(&dword_19E58B000, v2, v3, v14, "CPU :: Data synchronization", v9, v13, 2u);
    MEMORY[0x19F3C3580](v13, -1, -1);

    v10(v11, v12);
    uint64_t v1 = v97;
    os_signpost_id_t v15 = v97;
  }
  else
  {

    os_signpost_id_t v15 = (void *)(v0 + 168);
  }
  (*(void (**)(void, void))(v0 + 336))(*v15, *(void *)(v0 + 152));
LABEL_8:
  swift_release();
  swift_release();
  unint64_t v16 = *(void *)(v0 + 224);
LABEL_9:
  swift_release();
  unint64_t v18 = *(void *)(v0 + 208);
  int64_t v17 = *(void *)(v0 + 216);
  while (2)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v17 << 6);
      uint64_t v26 = *(void *)(v0 + 96);
    }
    else
    {
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      int64_t v28 = (unint64_t)((1 << *(unsigned char *)(v0 + 420)) + 63) >> 6;
      uint64_t v26 = *(void *)(v0 + 96);
      if (v17 >= v28) {
        goto LABEL_59;
      }
      uint64_t v29 = v26 + 64;
      unint64_t v30 = *(void *)(v26 + 64 + 8 * v17);
      if (!v30)
      {
        int64_t v31 = v17 + 1;
        if (v17 + 1 >= v28) {
          goto LABEL_59;
        }
        unint64_t v30 = *(void *)(v29 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v17 + 2;
          if (v17 + 2 >= v28) {
            goto LABEL_59;
          }
          unint64_t v30 = *(void *)(v29 + 8 * v31);
          if (!v30)
          {
            int64_t v31 = v17 + 3;
            if (v17 + 3 >= v28) {
              goto LABEL_59;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v31);
            if (!v30)
            {
              int64_t v31 = v17 + 4;
              if (v17 + 4 >= v28)
              {
LABEL_59:
                swift_release();
                id v80 = sub_19E6ACA30(v26);
                swift_bridgeObjectRelease();
                sub_19E6A9680((uint64_t)v80);
                swift_bridgeObjectRelease();
                id v81 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
                id v82 = sub_19E6ABD04();
                *(void *)(v0 + 232) = v82;
                id v83 = v82;
                id v84 = *(void **)(v0 + 104);
                id v85 = objc_allocWithZone((Class)MLPredictionOptions);
                id v86 = v83;
                if (v84)
                {
                  id v87 = v84;
                  id v88 = objc_msgSend(v85, sel_init);
                  *(void *)(v0 + 360) = v88;
                  id v89 = (void *)swift_task_alloc();
                  *(void *)(v0 + 368) = v89;
                  void *v89 = v0;
                  id v90 = sub_19E6A8248;
                }
                else
                {
                  id v88 = objc_msgSend(v85, sel_init);
                  *(void *)(v0 + 384) = v88;
                  id v87 = objc_msgSend(self, sel_emptyState);
                  *(void *)(v0 + 392) = v87;
                  id v89 = (void *)swift_task_alloc();
                  *(void *)(v0 + 400) = v89;
                  void *v89 = v0;
                  id v90 = sub_19E6A8374;
                }
                v89[1] = v90;
                return sub_19E6D2F98((uint64_t)v86, (uint64_t)v87, (uint64_t)v88);
              }
              unint64_t v30 = *(void *)(v29 + 8 * v31);
              if (!v30)
              {
                while (1)
                {
                  int64_t v17 = v31 + 1;
                  if (__OFADD__(v31, 1)) {
                    goto LABEL_69;
                  }
                  if (v17 >= v28) {
                    goto LABEL_59;
                  }
                  unint64_t v30 = *(void *)(v29 + 8 * v17);
                  ++v31;
                  if (v30) {
                    goto LABEL_27;
                  }
                }
              }
            }
          }
        }
        int64_t v17 = v31;
      }
LABEL_27:
      unint64_t v18 = (v30 - 1) & v30;
      unint64_t v25 = __clz(__rbit64(v30)) + (v17 << 6);
    }
    *(void *)(v0 + 208) = v18;
    *(void *)(v0 + 216) = v17;
    unint64_t v16 = *(void *)(*(void *)(v26 + 56) + 8 * v25);
    *(void *)(v0 + 224) = v16;
    unint64_t v32 = v16 >> 62;
    switch(v16 >> 62)
    {
      case 1uLL:
        uint64_t v33 = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v21 = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_31;
      case 2uLL:
        continue;
      case 3uLL:
        swift_retain_n();
        uint64_t v19 = sub_19E6C4398();
        uint64_t v21 = v20;
        swift_release();
        if (v19) {
          goto LABEL_11;
        }
        goto LABEL_12;
      default:
        uint64_t v33 = *(void *)(v16 + 24);
        uint64_t v21 = *(void *)(v16 + 32);
LABEL_31:
        swift_unknownObjectRetain();
        swift_retain();
        if (!v33) {
          goto LABEL_12;
        }
LABEL_11:
        uint64_t ObjectType = swift_getObjectType();
        char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(ObjectType, v21);
        swift_unknownObjectRelease();
        if (v23)
        {
LABEL_12:
          swift_release();
          continue;
        }
        if (v32 == 2) {
          goto LABEL_9;
        }
        if (v32)
        {
          if (v32 != 1)
          {
            swift_retain();
            uint64_t v92 = (void *)swift_task_alloc();
            *(void *)(v0 + 240) = v92;
            void *v92 = v0;
            v92[1] = sub_19E6A594C;
            return sub_19E6C55E4();
          }
          uint64_t v62 = v16 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v63 = qword_1E945BB50;
          swift_retain();
          if (v63 != -1) {
            swift_once();
          }
          uint64_t v64 = sub_19EBF6548();
          *(void *)(v0 + 304) = __swift_project_value_buffer(v64, (uint64_t)qword_1E946A518);
          sub_19EBF6518();
          uint64_t v65 = sub_19EBF6538();
          os_signpost_type_t v66 = sub_19EBF6D78();
          if (sub_19EBF6E18())
          {
            uint64_t v67 = *(void *)(v0 + 192);
            uint64_t v68 = *(void *)(v0 + 160);
            uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
            uint64_t v101 = v62;
            uint64_t v70 = *(void *)(v0 + 152);
            ((void (*)(uint64_t, void))v69)(v67, *(void *)(v0 + 176));
            os_signpost_id_t v71 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_signpost_id_t v71 = 0;
            os_signpost_id_t v72 = sub_19EBF6508();
            _os_signpost_emit_with_name_impl(&dword_19E58B000, v65, v66, v72, "CPU :: Data synchronization", "", v71, 2u);
            MEMORY[0x19F3C3580](v71, -1, -1);

            uint64_t v73 = v70;
            uint64_t v62 = v101;
            (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v73);
          }
          else
          {
            uint64_t v74 = *(void *)(v0 + 160);

            uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
          }
          uint64_t v75 = *(void *)(v0 + 192);
          uint64_t v76 = *(void *)(v0 + 176);
          uint64_t v78 = *(void *)(v0 + 152);
          uint64_t v77 = *(void *)(v0 + 160);
          *(void *)(v0 + 312) = v69;
          *(void *)(v0 + 320) = (v77 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          v69(v75, v76, v78);
          sub_19EBF6588();
          swift_allocObject();
          *(void *)(v0 + 328) = sub_19EBF6578();
          id v79 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
          *(void *)(v0 + 336) = v79;
          *(void *)(v0 + 344) = (v77 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v79(v76, v78);
          if (*(void *)(v62 + 40))
          {
            uint64_t v93 = *(void *)(v62 + 48);
            uint64_t v94 = swift_getObjectType();
            uint64_t v99 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v93 + 56) + **(int **)(v93 + 56));
            uint64_t v95 = (void *)swift_task_alloc();
            *(void *)(v0 + 352) = v95;
            void *v95 = v0;
            uint64_t v96 = sub_19E6A74B0;
            goto LABEL_71;
          }
          goto LABEL_2;
        }
        uint64_t v34 = qword_1E945BB50;
        swift_retain();
        if (v34 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_19EBF6548();
        *(void *)(v0 + 248) = __swift_project_value_buffer(v35, (uint64_t)qword_1E946A518);
        sub_19EBF6518();
        uint64_t v36 = sub_19EBF6538();
        os_signpost_type_t v37 = sub_19EBF6D78();
        if (sub_19EBF6E18())
        {
          uint64_t v38 = *(void *)(v0 + 192);
          uint64_t v39 = *(void *)(v0 + 160);
          uint64_t v100 = *(void *)(v0 + 152);
          uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
          ((void (*)(uint64_t, void))v40)(v38, *(void *)(v0 + 200));
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v41 = 0;
          os_signpost_id_t v42 = sub_19EBF6508();
          _os_signpost_emit_with_name_impl(&dword_19E58B000, v36, v37, v42, "GPU :: Data synchronization", "", v41, 2u);
          MEMORY[0x19F3C3580](v41, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v100);
        }
        else
        {
          uint64_t v43 = *(void *)(v0 + 160);

          uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
        }
        uint64_t v44 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        uint64_t v47 = *(void *)(v0 + 152);
        uint64_t v46 = *(void *)(v0 + 160);
        *(void *)(v0 + 256) = v40;
        *(void *)(v0 + 264) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v40(v44, v45, v47);
        sub_19EBF6588();
        swift_allocObject();
        *(void *)(v0 + 272) = sub_19EBF6578();
        uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
        *(void *)(v0 + 280) = v48;
        *(void *)(v0 + 288) = (v46 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v48(v45, v47);
        if (!*(void *)(v16 + 24))
        {
          uint64_t v49 = sub_19EBF6538();
          sub_19EBF6568();
          os_signpost_type_t v50 = sub_19EBF6D68();
          if (sub_19EBF6E18())
          {
            int v51 = *(_DWORD *)(v0 + 416);
            uint64_t v52 = *(void *)(v0 + 144);
            uint64_t v54 = *(void *)(v0 + 120);
            uint64_t v53 = *(void *)(v0 + 128);
            swift_retain();
            sub_19EBF6598();
            swift_release();
            int v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88))(v52, v54);
            uint64_t v56 = "[Error] Interval already ended";
            if (v55 != v51)
            {
              (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
              uint64_t v56 = "";
            }
            float v98 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
            uint64_t v57 = *(void *)(v0 + 184);
            uint64_t v58 = *(void *)(v0 + 152);
            (*(void (**)(void, uint64_t, uint64_t))(v0 + 256))(*(void *)(v0 + 192), v57, v58);
            uint64_t v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v59 = 0;
            os_signpost_id_t v60 = sub_19EBF6508();
            _os_signpost_emit_with_name_impl(&dword_19E58B000, v49, v50, v60, "GPU :: Data synchronization", v56, v59, 2u);
            MEMORY[0x19F3C3580](v59, -1, -1);

            v98(v57, v58);
            os_signpost_id_t v61 = v1;
          }
          else
          {

            os_signpost_id_t v61 = (void *)(v0 + 184);
          }
          (*(void (**)(void, void))(v0 + 280))(*v61, *(void *)(v0 + 152));
          goto LABEL_8;
        }
LABEL_70:
        uint64_t v93 = *(void *)(v16 + 32);
        uint64_t v94 = swift_getObjectType();
        uint64_t v99 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v93 + 56) + **(int **)(v93 + 56));
        uint64_t v95 = (void *)swift_task_alloc();
        *(void *)(v0 + 296) = v95;
        void *v95 = v0;
        uint64_t v96 = sub_19E6A671C;
LABEL_71:
        v95[1] = v96;
        return v99(v94, v93);
    }
  }
}

uint64_t sub_19E6A8248(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  *(void *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v4 = sub_19E6A9034;
  }
  else
  {
    uint64_t v5 = *(void **)(v3 + 232);

    int v4 = sub_19E6A8AD0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_19E6A8374(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = v1;
  v3[51] = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v4 = sub_19E6A8A00;
  }
  else
  {
    uint64_t v6 = (void *)v3[48];
    uint64_t v5 = (void *)v3[49];
    uint64_t v7 = (void *)v3[29];

    int v4 = sub_19E6A84A4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

void sub_19E6A84A4()
{
  v0[11] = MEMORY[0x1E4FBC868];
  uint64_t v1 = v0 + 11;
  uint64_t v2 = v0[51];
  uint64_t v3 = (void *)v0[9];
  id v4 = objc_msgSend(v3, sel_featureNames);
  sub_19EBF6B18();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D190);
  sub_19EBF6658();
  id v5 = objc_msgSend(v3, sel_featureNames);
  uint64_t v6 = sub_19EBF6B18();

  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v37 = v6 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & v8;
  int64_t v38 = (unint64_t)(63 - v10) >> 6;
  if ((v9 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v6 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_19EBF6788();
    id v21 = objc_msgSend(v3, sel_featureValueForName_, v20);

    if (!v21) {
      goto LABEL_30;
    }
    id v22 = objc_msgSend(v21, sel_multiArrayValue);

    if (!v22) {
      goto LABEL_30;
    }
    id v23 = objc_msgSend(v22, sel_dataType);

    if (v23 == (id)131104)
    {
      uint64_t v24 = MEMORY[0x1E4FBC150];
    }
    else
    {
      uint64_t v24 = MEMORY[0x1E4FBB470];
      if (v23 != (id)65568)
      {
        if (v23 != (id)65552) {
          goto LABEL_30;
        }
        uint64_t v24 = MEMORY[0x1E4FBC5E0];
      }
    }
    uint64_t v25 = dynamic_cast_existential_2_conditional(v24);
    if (!v25)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v27 = v36;
      int64_t v28 = (void *)v36[29];
      swift_bridgeObjectRelease();
      sub_19EBF6798();
      id v29 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      unint64_t v30 = (void *)sub_19EBF6788();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 0, 0);

      swift_willThrow();
      swift_unknownObjectRelease();

      swift_release();
      goto LABEL_32;
    }
    sub_19E6A9EF0(v25, v3, v19, v18, v1, v25, v26);
    if (v2) {
      break;
    }
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
    if (v14 >= v38) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v38) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v37 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v38) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v37 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v38)
          {
LABEL_35:
            uint64_t v33 = (void *)v36[29];
            swift_release();

            swift_unknownObjectRelease();
            swift_beginAccess();
            uint64_t v34 = v36[11];
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v35 = (void (*)(uint64_t))v36[1];
            v35(v34);
            return;
          }
          unint64_t v15 = *(void *)(v37 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_39;
              }
              if (v7 >= v38) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v37 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v15 - 1) & v15;
  }
  uint64_t v27 = v36;
  int64_t v31 = (void *)v36[29];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v32 = (void (*)(void))v27[1];
  v32();
}

uint64_t sub_19E6A8A00()
{
  uint64_t v1 = *(void **)(v0 + 384);
  uint64_t v2 = *(void **)(v0 + 232);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_19E6A8AD0()
{
  uint64_t v36 = (void *)v0;
  *(void *)(v0 + 88) = MEMORY[0x1E4FBC868];
  uint64_t v1 = (uint64_t *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void **)(v0 + 48);
  id v4 = objc_msgSend(v3, sel_featureNames);
  sub_19EBF6B18();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D190);
  sub_19EBF6658();
  id v5 = objc_msgSend(v3, sel_featureNames);
  uint64_t v6 = sub_19EBF6B18();

  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v37 = v6 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & v8;
  int64_t v38 = (unint64_t)(63 - v10) >> 6;
  if ((v9 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v6 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_19EBF6788();
    id v21 = objc_msgSend(v3, sel_featureValueForName_, v20);

    if (!v21) {
      goto LABEL_30;
    }
    id v22 = objc_msgSend(v21, sel_multiArrayValue);

    if (!v22) {
      goto LABEL_30;
    }
    id v23 = objc_msgSend(v22, sel_dataType);

    if (v23 == (id)131104)
    {
      uint64_t v24 = MEMORY[0x1E4FBC150];
    }
    else
    {
      uint64_t v24 = MEMORY[0x1E4FBB470];
      if (v23 != (id)65568)
      {
        if (v23 != (id)65552) {
          goto LABEL_30;
        }
        uint64_t v24 = MEMORY[0x1E4FBC5E0];
      }
    }
    uint64_t v25 = dynamic_cast_existential_2_conditional(v24);
    if (!v25)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v27 = v36;
      int64_t v28 = (void *)v36[29];
      swift_bridgeObjectRelease();
      sub_19EBF6798();
      id v29 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      unint64_t v30 = (void *)sub_19EBF6788();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 0, 0);

      swift_willThrow();
      swift_unknownObjectRelease();

      swift_release();
      goto LABEL_32;
    }
    sub_19E6A9EF0(v25, v3, v19, v18, v1, v25, v26);
    if (v2) {
      break;
    }
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
    if (v14 >= v38) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v38) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v37 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v38) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v37 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v38)
          {
LABEL_35:
            uint64_t v33 = (void *)v36[29];
            swift_release();

            swift_unknownObjectRelease();
            swift_beginAccess();
            uint64_t v34 = v36[11];
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v35 = (void (*)(uint64_t))v36[1];
            v35(v34);
            return;
          }
          unint64_t v15 = *(void *)(v37 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_39;
              }
              if (v7 >= v38) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v37 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v15 - 1) & v15;
  }
  uint64_t v27 = v36;
  int64_t v31 = (void *)v36[29];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v32 = (void (*)(void))v27[1];
  v32();
}

uint64_t sub_19E6A9034()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v2 = (void *)v0[29];
  uint64_t v3 = (void *)v0[13];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t MLModel.prediction(from:using:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_19E6A912C, 0, 0);
}

uint64_t sub_19E6A912C()
{
  uint64_t v1 = v0[3];
  if (sub_19E6A3338())
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_19E6A3238;
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[2];
    v2[23] = v1;
    v2[24] = v3;
    v2[22] = v4;
    return MEMORY[0x1F4188298](sub_19E6A362C, 0, 0);
  }
  else
  {
    id v5 = (void *)swift_task_alloc();
    v0[6] = v5;
    *id v5 = v0;
    v5[1] = sub_19E6A9260;
    uint64_t v6 = v0[2];
    return sub_19E6A4AFC(v6, v1);
  }
}

uint64_t sub_19E6A9260(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

unint64_t sub_19E6A9360(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D138);
    uint64_t v2 = (void *)sub_19EBF7268();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_1E945D140;
  uint64_t v32 = v1;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v16 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v16 >= v33) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  int64_t v18 = i + 1;
  if (!v17)
  {
    int64_t v18 = i + 2;
    if (i + 2 >= v33) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v34 + 8 * v18);
    if (!v17)
    {
      int64_t v18 = i + 3;
      if (i + 3 >= v33) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v34 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = i + 4;
        if (i + 4 >= v33) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v34 + 8 * v18);
        if (!v17)
        {
          int64_t v19 = i + 5;
          if (i + 5 < v33)
          {
            unint64_t v17 = *(void *)(v34 + 8 * v19);
            if (v17)
            {
              int64_t v18 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v18 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_36;
              }
              if (v18 >= v33) {
                break;
              }
              unint64_t v17 = *(void *)(v34 + 8 * v18);
              ++v19;
              if (v17) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_19E5DFBF8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v17 - 1) & v17;
  unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
  for (i = v18; ; unint64_t v15 = v14 | (i << 6))
  {
    uint64_t v20 = 16 * v15;
    id v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v15);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = *(void **)(*(void *)(v1 + 56) + v20);
    swift_retain();
    swift_bridgeObjectRetain();
    id v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D148);
    swift_dynamicCast();
    unint64_t result = sub_19E662844(v23, v22);
    if (v26)
    {
      uint64_t v9 = 16 * result;
      int64_t v10 = i;
      unint64_t v11 = v8;
      unint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unint64_t v12 = v23;
      v12[1] = v22;
      uint64_t v13 = v2[7] + v9;

      unint64_t result = swift_release();
      *(void *)uint64_t v13 = v35;
      *(void *)(v13 + 8) = v36;
      uint64_t v8 = v11;
      int64_t i = v10;
      uint64_t v1 = v32;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v23;
    v27[1] = v22;
    int64_t v28 = (void *)(v2[7] + 16 * result);
    *int64_t v28 = v35;
    v28[1] = v36;
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v14 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_19E6A9680(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CDD0);
    uint64_t v2 = (void *)sub_19EBF7268();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v38;
  uint64_t v7 = &v40;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v34 = 0;
  uint64_t v9 = (unint64_t *)&unk_1E945D170;
  int64_t v10 = off_1E59A29C0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v34 + 1;
  if (__OFADD__(v34, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v32) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v33 + 8 * v19);
  int64_t v21 = v34 + 1;
  if (!v20)
  {
    int64_t v21 = v34 + 2;
    if (v34 + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v34 + 3;
      if (v34 + 3 >= v32) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v34 + 4;
        if (v34 + 4 >= v32) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            unint64_t v20 = *(void *)(v33 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v32) {
                break;
              }
              unint64_t v20 = *(void *)(v33 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_19E5DFBF8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v34 = v21;
  uint64_t v35 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v24 = *(void **)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v36 = *v23;
    uint64_t v37 = v23[1];
    sub_19E64A9C0(0, v9);
    swift_bridgeObjectRetain();
    id v25 = v24;
    swift_dynamicCast();
    sub_19E5E29A8(v6, v7);
    sub_19E5E29A8(v7, v41);
    sub_19E5E29A8(v41, &v39);
    unint64_t result = sub_19E662844(v36, v37);
    unint64_t v26 = result;
    if (v27)
    {
      unint64_t v11 = v7;
      unint64_t v12 = v6;
      uint64_t v13 = v1;
      unint64_t v14 = v10;
      unint64_t v15 = v9;
      int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v16 = v36;
      v16[1] = v37;
      uint64_t v9 = v15;
      int64_t v10 = v14;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      uint64_t v7 = v11;
      unint64_t v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      unint64_t result = (unint64_t)sub_19E5E29A8(&v39, v17);
      unint64_t v5 = v35;
      if (!v35) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v28 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v28 = v36;
    v28[1] = v37;
    unint64_t result = (unint64_t)sub_19E5E29A8(&v39, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    unint64_t v5 = v35;
    if (!v35) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_19E6A9A00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_19E6AA114();
  uint64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v6 = v4 + 5;
    uint64_t v7 = MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_19E6AA398(v8, v9);
      if (!v10) {
        break;
      }
      unint64_t v12 = (void *)v10;
      uint64_t v33 = v8;
      uint64_t v34 = v7;
      switch(v11)
      {
        case 131104:
          uint64_t v13 = 7;
          break;
        case 65568:
          uint64_t v13 = 10;
          break;
        case 65552:
          uint64_t v13 = 9;
          break;
        default:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
      }
      uint64_t v32 = v5;
      int v14 = getpagesize();
      unint64_t v15 = (void *)MEMORY[0x19F3C1A40]();
      if (qword_1E945BB88 != -1) {
        swift_once();
      }
      uint64_t v16 = v14;
      unint64_t v17 = (void *)(qword_1E945D0B0 + 16);
      int64_t v18 = (os_unfair_lock_s *)(qword_1E945D0B0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1E945D0B0 + 24));
      sub_19E694038(v17, v12, v13, v16, 0, &v35);
      if (v3)
      {
        os_unfair_lock_unlock(v18);
        __break(1u);
        return;
      }
      os_unfair_lock_unlock(v18);
      int64_t v19 = v35;
      type metadata accessor for IOSurfaceStorage();
      uint64_t v20 = swift_allocObject();
      *(unsigned char *)(v20 + 32) = v13;
      *(unsigned char *)(v20 + 33) = 0;
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v12;
      *(void *)(v20 + 40) = a1;
      *(void *)(v20 + 48) = a2;
      *(void *)(v20 + 56) = sub_19E683344;
      *(void *)(v20 + 64) = 0;
      uint64_t v21 = v20 | 0x4000000000000000;
      id v22 = v19;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v3 = 0;
      id v23 = sub_19E6C3778(0, v21);
      if (!v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19EBF6798();
        id v26 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
        char v27 = (void *)sub_19EBF6788();
        swift_bridgeObjectRelease();
        objc_msgSend(v26, sel_initWithDomain_code_userInfo_, v27, 1, 0);

        swift_willThrow();
        swift_release_n();
        return;
      }
      v6 += 2;
      swift_retain();
      id v24 = v23;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = (void *)v34;
      sub_19E668284((uint64_t)v24, v21, v33, v9, isUniquelyReferenced_nonNull_native);
      uint64_t v7 = (uint64_t)v35;

      swift_release_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v32 - 1;
      if (v32 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    sub_19EBF6798();
    id v28 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v29 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_initWithDomain_code_userInfo_, v29, 1, 0);

    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x1E4FBC868];
LABEL_19:
  sub_19E6A9360(v7);
  swift_bridgeObjectRelease();
}

uint64_t sub_19E6A9E14(int a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_19EBF6FE8();
    sub_19EBF67D8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E945C970);
    sub_19EBF7188();
    sub_19EBF67D8();
    uint64_t result = sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19E6A9EF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)sub_19EBF6788();
  id v14 = objc_msgSend(a2, sel_featureValueForName_, v13);

  if (v14)
  {
    MLFeatureValue.shapedArrayValue<A>(of:)(a6, a7, (uint64_t)&v22);
    if (v22)
    {
      uint64_t v15 = type metadata accessor for MLShapedArray();
      swift_unknownObjectRetain();
      uint64_t WitnessTable = swift_getWitnessTable();
      MLTensor.init<A>(_:)((uint64_t)&v22, v15, WitnessTable, &v23);
      uint64_t v17 = v23;
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = *a5;
      *a5 = 0x8000000000000000;
      sub_19E668568(v17, a3, a4, isUniquelyReferenced_nonNull_native);
      *a5 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  sub_19EBF6798();
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  uint64_t v21 = (void *)sub_19EBF6788();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, 0, 0);

  return swift_willThrow();
}

void *sub_19E6AA114()
{
  uint64_t v1 = sub_19EBF6338();
  uint64_t v15 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(v0, sel_modelDescription);
  id v5 = objc_msgSend(v4, sel_outputFeatureNames);

  id v6 = v5;
  sub_19EBF6D08();
  id v14 = v6;

  sub_19E6AD2D0((unint64_t *)&unk_1E945D160, 255, MEMORY[0x1E4F27660]);
  sub_19EBF6EB8();
  if (v21)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_19E5E29A8(&v20, v19);
      sub_19E5E29B8((uint64_t)v19, (uint64_t)v16);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v17 = 0;
        uint64_t v18 = 0;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      uint64_t v9 = v18;
      if (v18)
      {
        uint64_t v10 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_19E607574(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_19E607574((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        void v7[2] = v12 + 1;
        uint64_t v8 = &v7[2 * v12];
        v8[4] = v10;
        v8[5] = v9;
      }
      sub_19EBF6EB8();
    }
    while (v21);
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v1);

  return v7;
}

uint64_t sub_19E6AA398(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(v2, sel_modelDescription);
  id v6 = objc_msgSend(v5, sel_outputDescriptionsByName);

  sub_19E64A9C0(0, (unint64_t *)&unk_1E945D150);
  uint64_t v7 = sub_19EBF6638();

  if (!*(void *)(v7 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19E662844(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  id v10 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v10, sel_multiArrayConstraint);
  if (!v11)
  {

    return 0;
  }
  unint64_t v12 = v11;
  id v13 = objc_msgSend(v11, sel_shape);
  sub_19E64A9C0(0, (unint64_t *)&qword_1E945BB10);
  unint64_t v14 = sub_19EBF68E8();

  uint64_t v15 = sub_19E63D54C(v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_dataType);

  return v15;
}

uint64_t sub_19E6AA548()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7498();
  if (v1) {
    sub_19EBF7488();
  }
  return sub_19EBF74B8();
}

uint64_t sub_19E6AA5C0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19EBF7488();
  if (!v1) {
    return sub_19EBF7498();
  }
  sub_19EBF7498();
  return sub_19EBF7488();
}

uint64_t sub_19E6AA60C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_19EBF7478();
  sub_19EBF7488();
  sub_19EBF7498();
  if (v1) {
    sub_19EBF7488();
  }
  return sub_19EBF74B8();
}

BOOL sub_19E6AA680(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3) {
    return v4 && v3 == v4;
  }
  return !v4;
}

uint64_t sub_19E6AA6C4()
{
  type metadata accessor for MLModelTensorSharedEventRegistry();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D188);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 24) = v1;
  uint64_t result = (uint64_t)MTLCreateSystemDefaultDevice();
  if (result)
  {
    uint64_t result = swift_dynamicCastObjCProtocolConditional();
    if (!result)
    {
      swift_unknownObjectRelease();
      uint64_t result = 0;
    }
  }
  *(void *)(v0 + 16) = result;
  off_1E945D0D0 = (_UNKNOWN *)v0;
  return result;
}

void sub_19E6AA76C(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  sub_19E6AA914(a2, a3, a1);
  if (!v4)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
    sub_19E6AD318((unint64_t *)(v11 + 16), (BOOL *)&v19);
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
    char v12 = v19;
    swift_release();
    if (v12)
    {
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v13 = *(void *)(v10 + 72);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
      sub_19E6AD330((uint64_t *)(v13 + 16), &v19);
      os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
      uint64_t v18 = v19;
      swift_release();
    }
    uint64_t v14 = *(void *)(v10 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19E6AD34C((uint64_t *)(v14 + 16), &v19);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    uint64_t v15 = v19;
    swift_release();
    uint64_t v16 = sub_19E6AD368(a2, a3, *a1);
    swift_release();
    if (v18) {
      uint64_t v17 = &off_1EF0C8E98;
    }
    else {
      uint64_t v17 = 0;
    }
    *a4 = v18;
    a4[1] = (uint64_t)v17;
    a4[2] = v15;
    a4[3] = (uint64_t)&off_1EF0C8E98;
    a4[4] = v16;
  }
}

void sub_19E6AA914(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = v3;
  if (!*(void *)(*a3 + 16) || (sub_19E662C34(a1, a2), (v10 & 1) == 0))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)long long v39 = *a3;
    *a3 = 0x8000000000000000;
    sub_19E6686DC(MEMORY[0x1E4FBC860], a1, a2, isUniquelyReferenced_nonNull_native);
    *a3 = *(void *)v39;
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void **)(v3 + 16);
    type metadata accessor for MLModelTensorSharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    if (sub_19E6AAF20(a1, a2, v16))
    {
      uint64_t v18 = sub_19E6AAE00(v39, a1, a2);
      if (*v17)
      {
        uint64_t v19 = v17;
        uint64_t v20 = swift_retain();
        MEMORY[0x19F3BF1F0](v20);
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_37:
        }
          sub_19EBF6948();
        sub_19EBF6998();
        sub_19EBF6908();
        ((void (*)(BOOL *, void))v18)(v39, 0);
      }
      else
      {
        ((void (*)(BOOL *, void))v18)(v39, 0);
      }
      return;
    }
LABEL_33:
    sub_19EBF6798();
    id v36 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v37 = (void *)sub_19EBF6788();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_initWithDomain_code_userInfo_, v37, 0, 0);

    swift_willThrow();
    return;
  }
  uint64_t v11 = *a3;
  uint64_t v12 = *(void *)(*a3 + 16);
  if (a2)
  {
    if (v12)
    {
      unint64_t v13 = sub_19E662C34(a1, a2);
      if (v14)
      {
        uint64_t v11 = *(void *)(*(void *)(v11 + 56) + 8 * v13);
        if ((v11 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            return;
          }
          __break(1u);
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        MEMORY[0x19F3BF970](0, v11);
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_40;
  }
  if (!v12)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v21 = sub_19E662C34(a1, 0);
  if ((v22 & 1) == 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v5 = *(void *)(*(void *)(v11 + 56) + 8 * v21);
  if (!(v5 >> 62))
  {
    uint64_t v23 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    goto LABEL_18;
  }
LABEL_44:
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_19EBF7228();
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v18 = v4;
  uint64_t v38 = v6;
  if (!v23)
  {
LABEL_28:
    swift_bridgeObjectRelease_n();
    uint64_t v31 = *(void **)(v38 + 16);
    type metadata accessor for MLModelTensorSharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    if (sub_19E6AAF20(a1, 0, v31))
    {
      uint64_t v33 = sub_19E6AAE00(v39, a1, 0);
      if (*v32)
      {
        uint64_t v34 = v32;
        uint64_t v35 = swift_retain();
        MEMORY[0x19F3BF1F0](v35);
        if (*(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_19EBF6948();
        }
        sub_19EBF6998();
        sub_19EBF6908();
        ((void (*)(BOOL *, void))v33)(v39, 0);
      }
      else
      {
        ((void (*)(BOOL *, void))v33)(v39, 0);
      }
      return;
    }
    goto LABEL_33;
  }
  unint64_t v40 = v5 & 0xC000000000000001;
  uint64_t v24 = 4;
  while (1)
  {
    uint64_t v25 = v24 - 4;
    if (v40)
    {
      uint64_t v26 = MEMORY[0x19F3BF970](v24 - 4, v5);
      uint64_t v27 = v24 - 3;
      if (__OFADD__(v25, 1)) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v26 = *(void *)(v5 + 8 * v24);
      swift_retain();
      uint64_t v27 = v24 - 3;
      if (__OFADD__(v25, 1))
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    uint64_t v28 = v23;
    uint64_t v29 = *(void *)(v26 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
    sub_19E6AD318((unint64_t *)(v29 + 16), v39);
    if (v18) {
      break;
    }
    uint64_t v18 = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
    BOOL v30 = v39[0];
    swift_release();
    if (v30)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_release();
    ++v24;
    uint64_t v23 = v28;
    if (v27 == v28) {
      goto LABEL_28;
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  __break(1u);
}

void (*sub_19E6AAE00(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_19E6AC594(v6, a2, a3);
  return sub_19E6AAE70;
}

void sub_19E6AAE70(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_19E6AAEBC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for MLModelTensorSharedEventRegistry()
{
  return self;
}

void *sub_19E6AAF20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v26[1] = *v3;
  uint64_t v8 = sub_19EBF6D48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_19EBF6D38();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_19EBF65D8();
  MEMORY[0x1F4188790](v13 - 8);
  sub_19E64A9C0(0, (unint64_t *)&qword_1E945CAC0);
  sub_19EBF65C8();
  sub_19EBF6D28();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC68], v8);
  uint64_t v14 = sub_19EBF6D58();
  double v4[2] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D180);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  v4[9] = v15;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2EF90]), sel_init);
  if (v16)
  {
    uint64_t v17 = v16;
    unsigned char v4[8] = v16;
    v4[3] = a1;
    v4[4] = a2;
    v4[5] = v16;
    id v18 = objc_allocWithZone(MEMORY[0x1E4F2EF98]);
    id v19 = v17;
    v4[7] = objc_msgSend(v18, sel_initWithDispatchQueue_, v14);
    if (a3)
    {
      swift_unknownObjectRetain();
      id v20 = objc_msgSend(a3, sel_newSharedEventWithMachPort_, objc_msgSend(v19, sel_eventPort));

      swift_unknownObjectRelease_n();
    }
    else
    {

      id v20 = 0;
    }
    v4[6] = v20;
  }
  else
  {
    if (qword_1E945BB48 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_19EBF65B8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E946A500);
    char v22 = sub_19EBF65A8();
    os_log_type_t v23 = sub_19EBF6D18();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_19E58B000, v22, v23, "Failed to create shared event.", v24, 2u);
      MEMORY[0x19F3C3580](v24, -1, -1);
    }

    swift_unknownObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

uint64_t sub_19E6AB2E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  type metadata accessor for MLModelTensorAsyncEvent();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v5;
  *a3 = v6;
  return swift_retain();
}

uint64_t *sub_19E6AB340@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    void *result = v4;
    type metadata accessor for MLModelTensorAsyncEvent();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_retain();
  }
  return result;
}

uint64_t sub_19E6AB3A8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 80, 7);
}

uint64_t type metadata accessor for MLModelTensorSharedEvent()
{
  return self;
}

uint64_t sub_19E6AB424()
{
  sub_19EBF7478();
  uint64_t v1 = *(void *)(v0 + 32);
  sub_19EBF7488();
  sub_19EBF7498();
  if (v1) {
    sub_19EBF7488();
  }
  sub_19EBF7488();
  return sub_19EBF74B8();
}

uint64_t sub_19E6AB4A8()
{
  return sub_19E6AB424();
}

uint64_t sub_19E6AB4CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  sub_19EBF7488();
  sub_19EBF7498();
  if (v1) {
    sub_19EBF7488();
  }
  return sub_19EBF7488();
}

uint64_t sub_19E6AB52C()
{
  uint64_t v1 = *v0;
  sub_19EBF7478();
  uint64_t v2 = *(void *)(v1 + 32);
  sub_19EBF7488();
  sub_19EBF7498();
  if (v2) {
    sub_19EBF7488();
  }
  sub_19EBF7488();
  return sub_19EBF74B8();
}

BOOL sub_19E6AB5AC(void **a1, void **a2)
{
  return sub_19E6AC904(*a1, *a2);
}

uint64_t sub_19E6AB5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v11 = *(void **)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 56);
  aBlock[4] = sub_19E640544;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19E68E654;
  aBlock[3] = &block_descriptor_7;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_notifyListener_atValue_block_, v12, a3, v13);
  _Block_release(v13);
  return swift_release();
}

id sub_19E6AB788(void *a1)
{
  if (*(void *)(*(void *)(v1 + 16) + 48))
  {
    return objc_msgSend(a1, sel_encodeWaitForEvent_value_);
  }
  else
  {
    sub_19EBF7008();
    if (qword_1E945BB28 != -1) {
      swift_once();
    }
    if (byte_1E946A4F1)
    {
      sub_19EBF6FE8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
      sub_19EBF67D8();
    }
    id result = (id)sub_19EBF71F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19E6AB90C()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for MLModelTensorAsyncEvent()
{
  return self;
}

uint64_t getEnumTagSinglePayload for MLModelKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)id result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)id result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelKey()
{
  return &type metadata for MLModelKey;
}

unint64_t sub_19E6AB9FC()
{
  unint64_t result = qword_1E945D0F8;
  if (!qword_1E945D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E945D0F8);
  }
  return result;
}

uint64_t sub_19E6ABA50()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_19E6ABA5C()
{
  return *(void *)(*(void *)(v0 + 16) + 24);
}

uint64_t sub_19E6ABA68()
{
  return *(void *)(*(void *)(v0 + 16) + 64);
}

id sub_19E6ABA74()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + 40), sel_signaledValue);
}

uint64_t sub_19E6ABA88()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_19E6ABAA8, 0, 0);
}

uint64_t sub_19E6ABAA8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = swift_task_alloc();
  v0[3] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[4] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19E6ABBA0;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_19E6ABBA0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_19E640040, 0, 0);
}

uint64_t sub_19E6ABCBC(uint64_t a1, uint64_t a2)
{
  return sub_19E6AD2D0(&qword_1E945D108, a2, (void (*)(uint64_t))type metadata accessor for MLModelTensorSharedEvent);
}

id sub_19E6ABD04()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_19EBF6628();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_19EBF6328();

    swift_willThrow();
  }
  return v2;
}

void sub_19E6ABDEC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_19EBF6F78();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v12 = 16 * v6;
        uint64_t v13 = *(void **)(*(void *)(a2 + 48) + 16 * v6);
        sub_19EBF7478();
        sub_19EBF7488();
        sub_19EBF7488();
        id v14 = v13;
        sub_19EBF6DF8();
        uint64_t v15 = sub_19EBF74B8();

        unint64_t v16 = v15 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v16 < v9) {
            goto LABEL_5;
          }
        }
        else if (v16 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v16)
        {
LABEL_11:
          uint64_t v17 = *(void *)(a2 + 48);
          id v18 = (_OWORD *)(v17 + 16 * v3);
          id v19 = (_OWORD *)(v17 + v12);
          if (16 * v3 != v12 || v18 >= v19 + 1) {
            _OWORD *v18 = *v19;
          }
          uint64_t v20 = *(void *)(a2 + 56);
          unint64_t v21 = v20 + 40 * v3;
          char v22 = (long long *)(v20 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 40))
          {
            long long v10 = *v22;
            long long v11 = v22[1];
            *(void *)(v21 + 32) = *((void *)v22 + 4);
            *(_OWORD *)unint64_t v21 = v10;
            *(_OWORD *)(v21 + 16) = v11;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    os_log_type_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    os_log_type_t v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  uint64_t *v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_19E6ABFF4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_19EBF6F78();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19EBF7478();
        swift_bridgeObjectRetain();
        sub_19EBF67C8();
        uint64_t v9 = sub_19EBF74B8();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19E6AC1CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_19EBF6F78();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_19EBF7478();
        swift_bridgeObjectRetain();
        sub_19EBF67C8();
        uint64_t v10 = sub_19EBF74B8();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19E6AC3A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_19EBF6F78();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_19EBF7478();
        sub_19EBF7488();
        sub_19EBF7498();
        if (v9) {
          sub_19EBF7488();
        }
        unint64_t result = sub_19EBF74B8();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_13:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_19E6AC594(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v6 = malloc(0x50uLL);
  *a1 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_19E6AC870(v6);
  v6[9] = sub_19E6AC694(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_19E6AC634;
}

void sub_19E6AC634(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  id v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_19E6AC694(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  unint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_19E662C34(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        void *v10 = v19;
        return sub_19E6AC7DC;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_19E667764();
      goto LABEL_7;
    }
    sub_19E66593C(v16, a4 & 1);
    unint64_t v20 = sub_19E662C34(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  unint64_t result = (void (*)(uint64_t **))sub_19EBF7408();
  __break(1u);
  return result;
}

void sub_19E6AC7DC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 40);
  if (v2)
  {
    unint64_t v4 = v1[4];
    uint64_t v5 = *(void **)v1[3];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_19E668904(v4, v1[1], v1[2], v2, v5);
    }
  }
  else if ((*a1)[5])
  {
    sub_19E6AC3A4(v1[4], *(void *)v1[3]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_19E6AC870(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_19E6AC8A0;
}

uint64_t sub_19E6AC8A0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_19E6AC8AC@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(void *)(*(void *)(a3 + 56) + 8 * result);
    return swift_retain();
  }
LABEL_8:
  __break(1u);
  return result;
}

BOOL sub_19E6AC904(void *a1, void *a2)
{
  if (a1[3] != a2[3]) {
    return 0;
  }
  uint64_t v3 = a1[4];
  uint64_t v4 = a2[4];
  if (v3)
  {
    if (v4) {
      BOOL v5 = v3 == v4;
    }
    else {
      BOOL v5 = 0;
    }
    if (!v5) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  return a1[8] == a2[8];
}

uint64_t sub_19E6AC95C(uint64_t a1)
{
  return sub_19E6AB5B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_19E6AC964()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D110);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

void sub_19E6ACA10(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19E6AA76C(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void *sub_19E6ACA30(uint64_t a1)
{
  uint64_t v2 = v1;
  id v79 = (void *)MEMORY[0x1E4FBC868];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945D178);
  sub_19EBF6658();
  unint64_t v78 = sub_19E668DDC(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E945CBE0);
  sub_19EBF6658();
  uint64_t v66 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  uint64_t v7 = v79;
  int64_t v67 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v71 = a1;
LABEL_4:
  uint64_t v68 = v7;
  if (v6)
  {
LABEL_5:
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
    goto LABEL_17;
  }
  while (2)
  {
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v8 >= v67) {
      goto LABEL_63;
    }
    unint64_t v12 = *(void *)(v66 + 8 * v8);
    if (!v12)
    {
      int64_t v13 = v8 + 1;
      if (v8 + 1 >= v67) {
        goto LABEL_63;
      }
      unint64_t v12 = *(void *)(v66 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 2;
        if (v8 + 2 >= v67) {
          goto LABEL_63;
        }
        unint64_t v12 = *(void *)(v66 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 3;
          if (v8 + 3 >= v67)
          {
LABEL_63:
            swift_release();
            uint64_t v62 = swift_bridgeObjectRetain();
            sub_19E5DE088(v62);
            swift_bridgeObjectRelease_n();
            return v7;
          }
          unint64_t v12 = *(void *)(v66 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v8 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                break;
              }
              if (v8 >= v67) {
                goto LABEL_63;
              }
              unint64_t v12 = *(void *)(v66 + 8 * v8);
              ++v13;
              if (v12) {
                goto LABEL_16;
              }
            }
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            sub_19EBF7408();
            __break(1u);
            JUMPOUT(0x19E6AD218);
          }
        }
      }
      int64_t v8 = v13;
    }
LABEL_16:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_17:
    uint64_t v14 = (uint64_t *)(*(void *)(v71 + 48) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    unint64_t v17 = *(void *)(*(void *)(v71 + 56) + 8 * v10);
    switch(v17 >> 62)
    {
      case 1uLL:
        int64_t v73 = v8;
        unint64_t v75 = v6;
        uint64_t v72 = v2;
        uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v18 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        goto LABEL_23;
      case 2uLL:
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 3uLL:
        int64_t v73 = v8;
        unint64_t v75 = v6;
        uint64_t v72 = v2;
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_19E6C4398();
        uint64_t v18 = v20;
        if (!v19) {
          goto LABEL_21;
        }
        goto LABEL_24;
      default:
        int64_t v73 = v8;
        unint64_t v75 = v6;
        uint64_t v72 = v2;
        uint64_t v19 = *(void *)(v17 + 24);
        uint64_t v18 = *(void *)(v17 + 32);
LABEL_23:
        swift_unknownObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        if (!v19)
        {
LABEL_21:
          swift_release();
          uint64_t v2 = v72;
          int64_t v8 = v73;
          uint64_t v7 = v68;
          unint64_t v6 = v75;
          goto LABEL_38;
        }
LABEL_24:
        uint64_t v69 = v16;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 32);
        unint64_t v23 = v22(ObjectType, v18);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(ObjectType, v18) >= v23)
        {
          swift_unknownObjectRelease();
          swift_release();
          uint64_t v2 = v72;
        }
        else
        {
          swift_release();
          uint64_t v24 = v22(ObjectType, v18);
          uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 24);
          uint64_t v26 = v25(ObjectType, v18);
          if (*(void *)(v78 + 16))
          {
            unint64_t v65 = v24;
            unint64_t v27 = sub_19E6628BC(v26);
            if (v28)
            {
              uint64_t v29 = *(void *)(*(void *)(v78 + 56) + 16 * v27 + 8);
              uint64_t v30 = swift_getObjectType();
              uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 32);
              swift_unknownObjectRetain();
              unint64_t v31 = v64(v30, v29);
              swift_unknownObjectRelease();
              BOOL v32 = v31 >= v65;
              uint64_t v2 = v72;
              if (v32) {
                goto LABEL_29;
              }
            }
            else
            {
              uint64_t v2 = v72;
              if (!v65)
              {
LABEL_29:
                swift_unknownObjectRelease();
                goto LABEL_37;
              }
            }
          }
          else
          {
            uint64_t v33 = v24;
            uint64_t v2 = v72;
            if (!v33) {
              goto LABEL_29;
            }
          }
          uint64_t v34 = v25(ObjectType, v18);
          swift_unknownObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_19E667EA4(v19, v18, v34, isUniquelyReferenced_nonNull_native);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_37:
        uint64_t v7 = v68;
        uint64_t v16 = v69;
        int64_t v8 = v73;
        unint64_t v6 = v75;
LABEL_38:
        swift_retain();
        id v36 = sub_19E6C3778(0, v17);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_62;
        }
        uint64_t v37 = v36;
        swift_release();
        if (v37)
        {
          id v38 = objc_msgSend(self, sel_featureValueWithMultiArray_, v37);
          if (v38)
          {
            id v42 = v38;
            int64_t v74 = v8;
            unint64_t v76 = v6;
            char v43 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v44 = v16;
            char v45 = v43;
            uint64_t v70 = v44;
            unint64_t v47 = sub_19E662844(v44, v15);
            uint64_t v48 = v7[2];
            BOOL v49 = (v46 & 1) == 0;
            uint64_t v50 = v48 + v49;
            if (__OFADD__(v48, v49)) {
              goto LABEL_67;
            }
            char v51 = v46;
            if (v7[3] >= v50)
            {
              if ((v45 & 1) == 0) {
                sub_19E667040();
              }
              uint64_t v52 = v70;
              if (v51) {
                goto LABEL_58;
              }
            }
            else
            {
              sub_19E664D00(v50, v45);
              uint64_t v52 = v70;
              unint64_t v53 = sub_19E662844(v70, v15);
              if ((v51 & 1) != (v54 & 1)) {
                goto LABEL_69;
              }
              unint64_t v47 = v53;
              if (v51)
              {
LABEL_58:
                uint64_t v59 = v7[7];

                *(void *)(v59 + 8 * v47) = v42;
                goto LABEL_59;
              }
            }
            v7[(v47 >> 6) + 8] |= 1 << v47;
            int v55 = (uint64_t *)(v7[6] + 16 * v47);
            *int v55 = v52;
            v55[1] = v15;
            *(void *)(v7[7] + 8 * v47) = v42;
            uint64_t v56 = v7[2];
            BOOL v11 = __OFADD__(v56, 1);
            uint64_t v57 = v56 + 1;
            if (v11) {
              goto LABEL_68;
            }
            void v7[2] = v57;
            swift_bridgeObjectRetain();
LABEL_59:
            int64_t v8 = v74;
            unint64_t v6 = v76;

            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            unint64_t v39 = sub_19E662844(v16, v15);
            char v41 = v40;
            swift_bridgeObjectRelease();
            if ((v41 & 1) == 0)
            {

              swift_release();
              swift_bridgeObjectRelease();
              if (v6) {
                goto LABEL_5;
              }
              continue;
            }
            unint64_t v77 = v6;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_19E667040();
            }
            swift_bridgeObjectRelease();
            uint64_t v58 = *(void **)(v7[7] + 8 * v39);
            sub_19E6ABFF4(v39, (uint64_t)v7);

            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v6 = v77;
          }
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19EBF6798();
        id v60 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
        os_signpost_id_t v61 = (void *)sub_19EBF6788();
        swift_bridgeObjectRelease();
        objc_msgSend(v60, sel_initWithDomain_code_userInfo_, v61, 1, 0);

        swift_willThrow();
        swift_bridgeObjectRelease();
LABEL_62:
        swift_release();
        swift_release();
        return v7;
    }
  }
}